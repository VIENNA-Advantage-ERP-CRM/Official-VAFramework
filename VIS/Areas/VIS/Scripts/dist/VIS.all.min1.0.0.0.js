(()=>{var __webpack_modules__={"./Areas/VIS/Scripts/F20/thememgr.js":()=>{eval(';\n(function (VIS, $) {\n  //****************************************************//\n  //**            ThemeMgr                            **//\n  //**************************************************//\n\n  function themeMgr() {\n    function init() {\n      var li = $("#vis_theme");\n      li.on("click", "div.vis-theme-rec", function (e) {\n        var clr = $(e.currentTarget).data("color");\n        applyTheme(clr);\n      });\n\n      //Get Saved or deafult theme \n      if (VIS.Application.theme && VIS.Application.theme != "") {\n        applyTheme(VIS.Application.theme);\n      } else {\n        var def = li.find("div.vis-theme-rec");\n        if (def.length > 0) {\n          applyTheme($(def[0]).data("color"));\n        }\n      }\n    }\n    function applyTheme(clr) {\n      var root = document.documentElement;\n      var clrs = clr.split("|");\n      root.style.setProperty(\'--v-c-primary\', clrs[0]);\n      root.style.setProperty(\'--v-c-on-primary\', clrs[1]);\n      root.style.setProperty(\'--v-c-secondary\', clrs[2]);\n      root.style.setProperty(\'--v-c-on-secondary\', clrs[3]);\n    }\n    return {\n      init: init,\n      applyTheme: applyTheme\n    };\n  }\n\n  //Assignment Gobal Namespace\n  VIS.themeMgr = themeMgr();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/F20/thememgr.js?')},"./Areas/VIS/Scripts/TestPanel.js":()=>{eval("VIS = window.VIS || {};\n(function () {\n  function TestPanel() {\n    this.record_ID = 0;\n    this.windowNo = 0;\n    this.curTab = null;\n    this.selectedRow = null;\n    this.panelWidth;\n    var $lblName = null;\n    var $lblC_Location = null;\n    var $lblBPartner = null;\n    var $lblDateTime = null;\n    var $lblAmount = null;\n    var $root = $('<div style=\"height:100%;width:100%;padding:15px\"></div>');\n\n    /*\r\n    *   Intialize UI Elements\r\n    */\n    this.init = function () {\n      var html = '<div class=\"vis-testPanel-Div\"><span class=\"vis-testPanel-Span\">Name: </span>' + '<label class=\"vis-testPanel-Label\" id=\"' + this.windowNo + 'lblName\"></label> </div>' + '<div class=\"vis-testPanel-Div\"><span class=\"vis-testPanel-Span\">Location: </span>' + '<label class=\"vis-testPanel-Label\" id=\"' + this.windowNo + 'lblLocation\"></label> </div>' + '<div class=\"vis-testPanel-Div\"><span class=\"vis-testPanel-Span\">Business Partner: </span>' + '<label class=\"vis-testPanel-Label\" id=\"' + this.windowNo + 'lblBPartner\"></label> </div>' + '<div class=\"vis-testPanel-Div\"><span class=\"vis-testPanel-Span\">Date Time: </span>' + '<label class=\"vis-testPanel-Label\" id=\"' + this.windowNo + 'lblDateTime\"></label> </div>' + '<div class=\"vis-testPanel-Div\"><span class=\"vis-testPanel-Span\">Amount: </span>' + '<label class=\"vis-testPanel-Label\" id=\"' + this.windowNo + 'lblAmount\"></label> </div>';\n      $root.append(html);\n      $lblName = $root.find('#' + this.windowNo + 'lblName');\n      $lblC_Location = $root.find('#' + this.windowNo + 'lblLocation');\n      $lblBPartner = $root.find('#' + this.windowNo + 'lblBPartner');\n      $lblDateTime = $root.find('#' + this.windowNo + 'lblDateTime');\n      $lblAmount = $root.find('#' + this.windowNo + 'lblAmount');\n    };\n\n    /*\r\n    * Retrun container of panel's Design\r\n    */\n    this.getRoot = function () {\n      return $root;\n    };\n\n    /*\r\n    * Update UI elements with latest record's values.\r\n    */\n    this.update = function (record_ID) {\n      // Get Value from Context\n      $lblName.text(VIS.context.getWindowContext(this.windowNo, \"Name\"));\n      try {\n        // Get Value for lookup Fields\n        var columnName = \"C_Location_ID\";\n        var fieldValue = this.selectedRow[columnName.toLower()];\n        // Check if field is of lookup Type\n        if (VIS.DisplayType.IsLookup(this.curTab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == this.curTab.getField(columnName).getDisplayType()) {\n          if (fieldValue) {\n            fieldValue = this.curTab.getField(columnName.toLower()).lookup.getDisplay(fieldValue);\n          }\n          $lblC_Location.text(fieldValue);\n        }\n        fieldValue = null;\n        var columnName = \"C_BPartner_ID\";\n        fieldValue = this.selectedRow[columnName.toLower()];\n        // Check if field is of lookup Type\n        if (VIS.DisplayType.IsLookup(this.curTab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == this.curTab.getField(columnName).getDisplayType()) {\n          if (fieldValue) {\n            fieldValue = this.curTab.getField(columnName.toLower()).lookup.getDisplay(fieldValue);\n          }\n          $lblBPartner.text(fieldValue);\n        }\n\n        // Check if field is of Date Type\n        fieldValue = null;\n        columnName = 'T_DateTime';\n        if (VIS.DisplayType.IsDate(this.curTab.getField(columnName).getDisplayType())) {\n          fieldValue = this.curTab.getField(columnName).value;\n          fieldValue = new Date(fieldValue).toLocaleString();\n          $lblDateTime.text(fieldValue);\n        }\n        // String, integer Value\n        fieldValue = null;\n        columnName = 'T_Amount';\n        fieldValue = this.selectedRow[columnName.toLower()];\n        $lblAmount.text(fieldValue);\n      } catch (ex) {}\n    };\n    this.disposeComponent = function () {\n      this.record_ID = 0;\n      this.windowNo = 0;\n      this.curTab = null;\n      this.rowSource = null;\n      this.panelWidth = null;\n      $lblName.remove();\n      $lblName = null;\n      $lblC_Location.remove();\n      $lblC_Location = null;\n      $lblBPartner.remove();\n      $lblBPartner = null;\n      $lblDateTime.remove();\n      $lblDateTime = null;\n      $lblAmount.remove();\n      $lblAmount = null;\n      $root.remove();\n      $root = null;\n    };\n  }\n  ;\n\n  /**\r\n   *\tInvoked when user click on panel icon\r\n   */\n  TestPanel.prototype.startPanel = function (windowNo, curTab) {\n    this.windowNo = windowNo;\n    this.curTab = curTab;\n    this.init();\n  };\n\n  /**\r\n       *\tThis function will execute when user navigate  or refresh a record\r\n       */\n  TestPanel.prototype.refreshPanelData = function (recordID, selectedRow) {\n    this.record_ID = recordID;\n    this.selectedRow = selectedRow;\n    this.update(recordID);\n  };\n\n  /**\r\n   *\tFired When Size of panel Changed\r\n   */\n  TestPanel.prototype.sizeChanged = function (width) {\n    this.panelWidth = width;\n  };\n\n  /**\r\n   *\tDispose Component\r\n   */\n  TestPanel.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  /*\r\n  * Fully qualified class name\r\n  */\n  VIS.TestPanel = TestPanel;\n})();\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/TestPanel.js?")},"./Areas/VIS/Scripts/app/Framework/UploadAmountDimension.js":()=>{eval(";\nVIS = window.VIS || {};\n(function (VIS, $) {\n  VIS.UploadAmountDimension = function (control, _mapping) {\n    //**************************Global Variables**********************************************       \n    var _result = null;\n    var lstLatestFiles = [];\n    var oldFiles = [];\n    var currentchunk = 0;\n    var currentFile = 0;\n    var folder = Date.now().toString();\n    var chunkSize = 1 * 1024 * 1024;\n    var totalChunks = 0;\n    var currentFileChunkNo = 0;\n    var filesInfo = [];\n    var arrayOfCharts = [];\n    var file = null;\n    var $uploadAttachment = control;\n    var windowWidth = $(window).width();\n    var heightWidth = $(window).height();\n    var folder = Date.now().toString();\n    var ExcelMapping = _mapping;\n    savedFileName = \"\";\n    var excelResult = null;\n    var divProgress = $(\"<div id='progress_bar' class='vis-ui-progress-bar vis-ui-container' style='top:40%;width: 40%;left: 32%;position:absolute;z-index:99999;'>\");\n    var divGreen = null;\n    var lblpercentage = null;\n    this.isWait = false;\n    self = this;\n    //*************************Global variables************************************************\n    //***********************\n    //Upload Files\n    //***********************\n    var UploadFiles = function () {\n      var fileInfo = null;\n      var tcSingleFile = 0;\n      var currentChunk = 0;\n      for (var itm in lstLatestFiles) {\n        tcSingleFile = parseInt(lstLatestFiles[itm].size / chunkSize);\n        if (file.size % chunkSize > 0) {\n          tcSingleFile++;\n        }\n        totalChunks += tcSingleFile;\n        fileInfo = {};\n        fileInfo.Name = lstLatestFiles[itm].name;\n        fileInfo.Size = lstLatestFiles[itm].size;\n        filesInfo.push(fileInfo);\n      }\n      TransferFile();\n    };\n    //***********************\n    //Transfer Files to server\n    //***********************\n    var TransferFile = function (e) {\n      if (lstLatestFiles == null || lstLatestFiles.length == 0) {\n        showProgress(false);\n        return;\n      }\n      if (currentFile >= lstLatestFiles.length) {\n        return;\n      }\n\n      //Transfer files in chuncks\n      var xhr = new XMLHttpRequest();\n      var fd = new FormData();\n      var fileName = lstLatestFiles[currentFile].name.substring(0, lstLatestFiles[currentFile].name.lastIndexOf(\".\")) + folder + lstLatestFiles[currentFile].name.substring(lstLatestFiles[currentFile].name.lastIndexOf(\".\"));\n      savedFileName = fileName;\n      fd.append(\"file\", lstLatestFiles[currentFile].slice(currentFileChunkNo * chunkSize, currentFileChunkNo * chunkSize + Number(chunkSize)));\n      xhr.open(\"POST\", VIS.Application.contextUrl + \"AmountDivision/SaveFileinTemp?fileName=\" + fileName + \"&folderKey=\" + folder + \"&orgFileName=\" + lstLatestFiles[currentFile].name, false);\n      xhr.send(fd);\n      _result = xhr.responseText;\n      currentchunk++;\n      currentFileChunkNo++;\n      var totalFileChunk = parseInt(lstLatestFiles[currentFile].size / chunkSize);\n      if (lstLatestFiles[currentFile].size % chunkSize > 0) {\n        totalFileChunk++;\n      }\n      if (currentFileChunkNo == totalFileChunk) {\n        currentFile++;\n        currentFileChunkNo = 0;\n      }\n      if (currentchunk <= totalChunks) {\n        setProgressValue(parseInt(currentchunk / totalChunks * 80));\n      }\n      window.setTimeout(function () {\n        TransferFile();\n      }, 2);\n    };\n\n    //***********************\n    //Append Files\n    //***********************\n    var AppendFile = function (sender) {\n      var invalidFiles = [];\n      for (var i = 0; i < sender.files.length; i++) {\n        file = sender.files[i];\n        if (file == undefined) {\n          return;\n        }\n        if (file.size <= 0) {\n          lstLatestFiles = [];\n          oldFiles = [];\n          currentchunk = 0;\n          currentFile = 0;\n          folder = null;\n          chunkSize = null;\n          totalChunks = 0;\n          currentFileChunkNo = 0;\n          filesInfo = [];\n          file = null;\n          VIS.ADialog.info('VADMS_FileSizeShouldGreaterThan0KB');\n          showProgress(false);\n          return false;\n        }\n        if (file.name.indexOf('&') > -1 || file.name.indexOf('?') > -1 || file.name.indexOf('#') > -1 || file.name.indexOf('/') > -1 || file.name.indexOf('\\\\') > -1) {\n          invalidFiles.push(file.name);\n          continue;\n        }\n        for (var itm in lstLatestFiles) {\n          if (file.name == lstLatestFiles[itm].name) {\n            window.setTimeout(function () {\n              showProgress(false);\n              VIS.ADialog.info('fileAlreadyAttached');\n            }, 20);\n            return;\n          }\n        }\n        if (oldFiles != null) {\n          for (var itm in oldFiles) {\n            if (file.name == oldFiles[itm].Name && !oldFiles[itm].IsDeleted) {\n              window.setTimeout(function () {\n                showProgress(false);\n                VIS.ADialog.info('fileAlreadyAttached');\n              }, 20);\n              return;\n            }\n          }\n        }\n        var fileInfo = {};\n        fileInfo.Name = file.name;\n        fileInfo.Size = file.size;\n        lstLatestFiles.push(file);\n      }\n      if (invalidFiles.length > 0) {\n        var resString = '';\n        for (var item in invalidFiles) {\n          resString += invalidFiles[item].toString() + '\\n';\n        }\n        if (invalidFiles.length == 1) {\n          resString += 'File has';\n        } else {\n          resString += 'Files have';\n        }\n        resString += ' invalid name. Please change the file name and try again.';\n        showProgress(false);\n        VIS.ADialog.info(\"\", true, resString);\n      }\n    };\n    //***********************\n    //Show progress bar while file is being uplaoded\n    //***********************\n    var showProgress = function (show) {\n      $('body').find(\"#progressbar\").remove();\n      if (show) {\n        divGreen = $(\"<div class='vis-ui-progress' style='width: 0%; display: block;position:absolute;height: 35px;'>\");\n        lblpercentage = $(\"<span class='vis-ui-label'  style='position:absolute;left: 60%;top: 4px;'>\").append(\"0%\");\n        divGreen.append(lblpercentage);\n        divProgress.append(divGreen);\n        var $isBusy = $(\"<div id='progressbar' style='z-index: 999999;' class='VIS-AMTD-Busy-Progress'></div>\");\n        $isBusy.append(divProgress);\n        $isBusy.appendTo('<body>');\n      } else {\n        $('body').find(\"progressbar\").remove();\n      }\n    };\n    //***********************\n    //Set value of progress bar in percentage\n    //***********************\n    var setProgressValue = function (value) {\n      divGreen.css('width', value + '%');\n      lblpercentage.empty();\n      lblpercentage.append(value + '%');\n    };\n    //************************\n    //Dispose Variables\n    //************************\n    this.getFolderKey = folder;\n    this.getSavedFileName = savedFileName;\n    this.GetUploadedExcelColumns = function () {\n      if (currentFile >= lstLatestFiles.length) {\n        var param = [];\n        var url = VIS.Application.contextUrl + \"contextUrl/SaveAttachmentEntries\";\n        param.push({\n          Files: JSON.stringify(filesInfo)\n        });\n        param.push({\n          FolderKey: folder\n        });\n        param.push({\n          FileName: savedFileName\n        });\n        param.push({\n          Mapping: _mapping\n        });\n        var result = VIS.ControllerRequestAjaxParameter1(url, param, false);\n        _mapping.ExcelCol = result.ExcelCol;\n        _mapping.FileName = result.FileName;\n        return result;\n      }\n    };\n    function dispose() {\n      lstLatestFiles = [];\n      oldFiles = [];\n      currentchunk = 0;\n      currentFile = 0;\n      folder = null;\n      totalChunks = 0;\n      currentFileChunkNo = 0;\n      filesInfo = [];\n      file = null;\n      $uploadAttachment.off(\"change\");\n      if (docObj != null) {\n        docObj.Reload();\n      }\n      filesInfo = [];\n      var selectedEffect = \"transfer\";\n      var options = {};\n      currentchunk = 0;\n      currentFile = 0;\n      totalChunks = 0;\n      currentFileChunkNo = 0;\n    }\n    ;\n    showProgress(true);\n    AppendFile(control);\n    UploadFiles();\n    return _result;\n  };\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/UploadAmountDimension.js?")},"./Areas/VIS/Scripts/app/Framework/accountform.js":()=>{eval(';\n(function (VIS, $) {\n  //form declaretion\n  function AccountForm(header, account, cAcctSchemaId, tblID_s) {\n    this.onClose = null;\n    var root = $("<div style=\'position:relative;\'>");\n    //var $busyDiv = $("<div class=\'vis-apanel-busy\' style=\'width:98%;height:98%;position:absolute\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var $self = this;\n    var title = header;\n    var mAccount = account;\n    var C_AcctSchema_ID = cAcctSchemaId;\n    var windowNo = VIS.Env.getWindowNo();\n    var _comb = null;\n    var f_Description = new VIS.Controls.VLabel();\n    //  Editors for Query\n    var f_Alias = null,\n      f_Combination = null,\n      f_AD_Org_ID = null,\n      f_Account_ID = null,\n      f_SubAcct_ID = null,\n      f_M_Product_ID = null,\n      f_C_BPartner_ID = null,\n      f_C_Campaign_ID = null,\n      f_C_LocFrom_ID = null,\n      f_C_LocTo_ID = null,\n      f_C_Project_ID = null,\n      f_C_SalesRegion_ID = null,\n      f_AD_OrgTrx_ID = null,\n      f_C_Activity_ID = null,\n      f_User1_ID = null,\n      f_User2_ID = null,\n      f_UserElement1_ID = null,\n      f_UserElement2_ID = null,\n      f_UserElement3_ID = null,\n      f_UserElement4_ID = null,\n      f_UserElement5_ID = null,\n      f_UserElement6_ID = null,\n      f_UserElement7_ID = null,\n      f_UserElement8_ID = null,\n      f_UserElement9_ID = null;\n    var userEle1 = null;\n    var userEle2 = null;\n    var userEle3 = null;\n    var userEle4 = null;\n    var userEle5 = null;\n    var userEle6 = null;\n    var userEle7 = null;\n    var userEle8 = null;\n    var userEle9 = null;\n    var eleFlag1 = false;\n    var eleFlag2 = false;\n    var eleFlag3 = false;\n    var eleFlag4 = false;\n    var eleFlag5 = false;\n    var eleFlag6 = false;\n    var eleFlag7 = false;\n    var eleFlag8 = false;\n    var eleFlag9 = false;\n    var baseUrl = VIS.Application.contextUrl;\n    var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n    var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n    var dSetUrl = baseUrl + "Form/JDataSet";\n    var executeReader = function (sql, param, callback) {\n      var async = callback ? true : false;\n      var dataIn = {\n        sql: sql,\n        page: 1,\n        pageSize: 0\n      };\n      if (param) {\n        dataIn.param = param;\n      }\n      var dr = null;\n      getDataSetJString(dataIn, async, function (jString) {\n        dr = new VIS.DB.DataReader().toJson(jString);\n        if (callback) {\n          callback(dr);\n        }\n      });\n      return dr;\n    };\n    var executeScalar = function (sql, params, callback) {\n      var async = callback ? true : false;\n      var dataIn = {\n        sql: sql,\n        page: 1,\n        pageSize: 0\n      };\n      if (params) {\n        dataIn.param = params;\n      }\n      var value = null;\n      getDataSetJString(dataIn, async, function (jString) {\n        dataSet = new VIS.DB.DataSet().toJson(jString);\n        var dataSet = new VIS.DB.DataSet().toJson(jString);\n        if (dataSet.getTable(0).getRows().length > 0) {\n          value = dataSet.getTable(0).getRow(0).getCell(0);\n        } else {\n          value = null;\n        }\n        dataSet.dispose();\n        dataSet = null;\n        if (async) {\n          callback(value);\n        }\n      });\n      return value;\n    };\n    var executeQuery = function (sqls, params, callback) {\n      var async = callback ? true : false;\n      var ret = null;\n      var dataIn = {\n        sql: sqls,\n        param: params\n      };\n      $.ajax({\n        url: nonQueryUrl + \'yWithCode\',\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(dataIn)\n      }).done(function (json) {\n        ret = json;\n        if (callback) {\n          callback(json);\n        }\n      });\n      return ret;\n    };\n    var executeDReader = function (sql, param, callback) {\n      var async = callback ? true : false;\n      var dataIn = {\n        sql: sql,\n        page: 1,\n        pageSize: 0\n      };\n      if (param) {\n        dataIn.param = param;\n      }\n      //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n      var dr = null;\n      getDSetJString(dataIn, async, function (jString) {\n        dr = new VIS.DB.DataReader().toJson(jString);\n        if (callback) {\n          callback(dr);\n        }\n      });\n      return dr;\n    };\n    function getDSetJString(data, async, callback) {\n      var result = null;\n      data.sql = VIS.secureEngine.encrypt(data.sql);\n      $.ajax({\n        url: dSetUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        if (callback) {\n          callback(json);\n        }\n        //return result;\n      });\n      return result;\n    }\n    ;\n\n    //DataSet String\n    function getDataSetJString(data, async, callback) {\n      var result = null;\n      // data.sql = VIS.secureEngine.encrypt(data.sql);\n      $.ajax({\n        url: dataSetUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        if (callback) {\n          callback(json);\n        }\n        //return result;\n      });\n      return result;\n    }\n    ;\n    this.log = VIS.Logging.VLogger.getVLogger("AccountForm");\n    this.log.config("C_AcctSchema_ID=" + C_AcctSchema_ID + ", C_ValidCombination_ID=" + mAccount.C_ValidCombination_ID);\n    //control on form\n\n    /** ElementType AD_Reference_ID=181 */\n    var eLEMENTTYPE_AD_Reference_ID = 181;\n    /** Account = AC */\n    var eLEMENTTYPE_Account = "AC";\n    /** Activity = AY */\n    var eLEMENTTYPE_Activity = "AY";\n    /** BPartner = BP */\n    var eLEMENTTYPE_BPartner = "BP";\n    /** Location From = LF */\n    var eLEMENTTYPE_LocationFrom = "LF";\n    /** Location To = LT */\n    var eLEMENTTYPE_LocationTo = "LT";\n    /** Campaign = MC */\n    var eLEMENTTYPE_Campaign = "MC";\n    /** Organization = OO */\n    var eLEMENTTYPE_Organization = "OO";\n    /** Org Trx = OT */\n    var eLEMENTTYPE_OrgTrx = "OT";\n    /** Project = PJ */\n    var eLEMENTTYPE_Project = "PJ";\n    /** Product = PR */\n    var eLEMENTTYPE_Product = "PR";\n    /** Sub Account = SA */\n    var eLEMENTTYPE_SubAccount = "SA";\n    /** Sales Region = SR */\n    var eLEMENTTYPE_SalesRegion = "SR";\n    /** User List 1 = U1 */\n    var eLEMENTTYPE_UserList1 = "U1";\n    /** User List 2 = U2 */\n    var eLEMENTTYPE_UserList2 = "U2";\n    /** User Element 1 = X1 */\n    var eLEMENTTYPE_UserElement1 = "X1";\n    /** User Element 2 = X2 */\n    var eLEMENTTYPE_UserElement2 = "X2";\n    /** User Element 3 = X3 */\n    var eLEMENTTYPE_UserElement3 = "X3";\n    /** User Element 4 = X4 */\n    var eLEMENTTYPE_UserElement4 = "X4";\n    /** User Element 5 = X5 */\n    var eLEMENTTYPE_UserElement5 = "X5";\n    /** User Element 6 = X6 */\n    var eLEMENTTYPE_UserElement6 = "X6";\n    /** User Element 7 = X7 */\n    var eLEMENTTYPE_UserElement7 = "X7";\n    /** User Element 8 = X8 */\n    var eLEMENTTYPE_UserElement8 = "X8";\n    /** User Element 9 = X9 */\n    var eLEMENTTYPE_UserElement9 = "X9";\n    var tableSArea = $("<table>");\n    tableSArea.css("width", "100%");\n    var tr = $("<tr>");\n    var Okbtn = null;\n    var cancelbtn = null;\n    var btnRefresh = null;\n    var btnUndo = null;\n    var btnSave = null;\n    var lblParameter = null;\n    var parameterDiv = null;\n    var bottumDiv = null;\n    var discriptionDiv = null;\n    var accDiv = null;\n    var acctbl = null;\n    var gridController = null;\n    var changed = false;\n    var C_ValidCombination_ID = null;\n    var query = null;\n    var _mTab = null;\n    var lblbottumMsg = null;\n    var lblCount = null;\n    var lblbottumMsg2 = null;\n    var accountSchemaElements = null;\n    this.load = function () {\n      root.load(VIS.Application.contextUrl + \'AccountForm/Index/?windowno=\' + windowNo, function (event) {\n        $self.setBusy(true);\n        $self.init(root);\n        $self.setBusy(false);\n      });\n    };\n    this.setBusy = function (isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    };\n    this.init = function (root) {\n      //Buttons\n      Okbtn = root.find("#btnOk_" + windowNo);\n      cancelbtn = root.find("#btnCancel_" + windowNo);\n      btnRefresh = root.find("#btnRefresh_" + windowNo);\n      btnUndo = root.find("#btnUndo_" + windowNo);\n      btnSave = root.find("#btnSave_" + windowNo);\n\n      //labels\n      lblParameter = root.find("#lblParameter_" + windowNo);\n      parameterDiv = root.find("#parameterDiv_" + windowNo);\n      bottumDiv = root.find("#bottumDiv_" + windowNo);\n      discriptionDiv = root.find("#discriptionDiv_" + windowNo);\n      accDiv = root.find("#accDiv_" + windowNo);\n      acctbl = root.find("#acctbl_" + windowNo);\n      lblbottumMsg = root.find("#lblbottumMsg_" + windowNo);\n      lblCount = root.find("#lblCount_" + windowNo);\n      lblbottumMsg2 = root.find("#lblbottumMsg2_" + windowNo);\n      if (VIS.Application.isRTL) {\n        Okbtn.css("margin-right", "-128px");\n        cancelbtn.css("margin-right", "55px");\n      }\n\n      // bottumDiv.style.display = \'hidden\';\n      // accDiv.height = "50%;";\n\n      //Calture on label\n      Okbtn.val(VIS.Msg.getMsg("OK"));\n      cancelbtn.val(VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Cancel")));\n      lblParameter.val(VIS.Msg.getMsg("Parameter"));\n      loadParameters();\n      function loadAcctSchemaRecords(arrOfarr) {\n        var length = arrOfarr.length;\n        var textToInsert = "";\n        for (var a = 0; a < length; a += 1) {\n          textToInsert += "<tr>";\n          for (var i = 0; i < arrOfarr[a].length; i += 1) {\n            var obj = arrOfarr[a][i];\n            if (i == 0) {\n              if (a % 2) {\n                textToInsert += "<td class=\'VIS_Pref_table-row2\'>" + obj + "</td>";\n              } else {\n                textToInsert += "<td class=\'VIS_Pref_table-row1\' style=\'border-left: 1px solid #ECECEC;\'>" + obj + "</td>";\n              }\n            } else if (i == arrOfarr[a].length - 1) {\n              if (a % 2) {\n                textToInsert += "<td class=\'VIS_Pref_table-row2\'>" + obj + "</td>";\n              } else {\n                textToInsert += "<td class=\'VIS_Pref_table-row1\'>" + obj + "</td>";\n              }\n            } else {\n              if (a % 2) {\n                textToInsert += "<td class=\'VIS_Pref_table-row2\'>" + obj + "</td>";\n              } else {\n                textToInsert += "<td class=\'VIS_Pref_table-row1\'>" + obj + "</td>";\n              }\n            }\n          }\n          textToInsert += " </tr>";\n        }\n        $error.find(\'tbody > tr\').eq(0).after($.parseHTML(textToInsert));\n        arr = null;\n        textToInsert = null;\n      }\n      ;\n      function loadParameters() {\n        VIS.Env.getCtx().setContext(windowNo, "C_AcctSchema_ID", C_AcctSchema_ID);\n        $.ajax({\n          url: VIS.Application.contextUrl + "AccountForm/LoadControls",\n          dataType: "json",\n          data: {\n            windowNo: windowNo,\n            C_AcctSchema_ID: C_AcctSchema_ID\n          },\n          success: function (data) {\n            returnValue = data.result;\n            designSchema(returnValue);\n            accountSchemaElements = returnValue;\n          }\n        });\n      }\n      ;\n      function designSchema(obj) {\n        //  Model\n        var AD_Window_ID = 153; //\tMavarain Account Combinations \n        VIS.AEnv.getGridWindow(windowNo, AD_Window_ID, function (json) {\n          if (json.error != null) {\n            VIS.ADialog.error(json.error); //log error\n            self.dispose();\n            self = null;\n            return;\n          }\n          var jsonData = JSON.parse(json.result); // widow json\n          VIS.context.setContextOfWindow(JSON.parse(json.wCtx), windowNo); // set window context\n          var GridWindow = new VIS.GridWindow(jsonData);\n          if (GridWindow == null) {\n            return;\n          }\n          _mTab = GridWindow.getTabs()[0];\n          //  ParameterPanel restrictions\n          _mTab.getField("Alias").setDisplayLength(15);\n          _mTab.getField("Combination").setDisplayLength(15);\n          //  Grid restrictions\n          _mTab.getField("AD_Client_ID").setDisplayed(false);\n          _mTab.getField("C_AcctSchema_ID").setDisplayed(false);\n          _mTab.getField("IsActive").setDisplayed(false);\n          _mTab.getField("IsFullyQualified").setDisplayed(false);\n          //  don\'t show fields not being displayed in this environment\n\n          for (var i = 0; i < _mTab.getFieldCount(); i++) {\n            var field = _mTab.getField(i);\n            if (!field.getIsDisplayed(true))\n              //  check context\n              {\n                field.setDisplayed(false);\n              }\n\n            //var tdChild = $("<td style=\'display: none;\' class=\'VIS_Pref_table-row\'>");\n            ////add column varo grid\n            //if (field.getIsDisplayed()) {\n            //    tdChild = $("<td style=\'width: auto\' class=\'VIS_Pref_table-row\'>");\n            //}\n\n            //tdChild.concat(field.getHeader());\n            //tr.concat(tdChild);\n          }\n          var id = windowNo + "_" + C_AcctSchema_ID; //uniqueID\n          gridController = new VIS.GridController(false, false, id);\n          gridController.initGrid(true, windowNo, $self, _mTab);\n          gridController.setVisible(true);\n          // gridController.sizeChanged(530, 400);\n          if (window.innerHeight > 700) {\n            gridController.sizeChanged(window.innerHeight - 230, window.innerWidth);\n          } else {\n            gridController.sizeChanged(window.innerHeight - 215, window.innerWidth);\n          }\n          accDiv.append(gridController.getRoot());\n          gridController.activate();\n\n          //  GridController\n          if (obj.IsHasAlies) {\n            var alias = _mTab.getField("Alias");\n            f_Alias = VIS.VControlFactory.getControl(_mTab, alias, false);\n            addLine(alias, f_Alias, false);\n          } //\tAlias\n\n          //\tCombination\n          var combination = _mTab.getField("Combination");\n          f_Combination = VIS.VControlFactory.getControl(_mTab, combination, false);\n          addLine(combination, f_Combination, false);\n\n          //Create Fields in Element Order\n          for (var i = 0; i < obj.Elements.length; i++) {\n            var type = returnValue.Elements[i].Type;\n            var isMandatory = returnValue.Elements[i].IsMandatory;\n            var isHeavyData = returnValue.Elements[i].IsHeavyData;\n            var lblNames = returnValue.Elements[i].Name;\n            if (type.equals(eLEMENTTYPE_Organization)) {\n              var field = _mTab.getField("AD_Org_ID");\n              f_AD_Org_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_AD_Org_ID, isMandatory, lblNames, eLEMENTTYPE_Organization);\n\n              // On Change of Organization validate Trx Organization based on organization \n              f_AD_Org_ID.fireValueChanged = locationChangedOrg;\n              function locationChangedOrg() {\n                var org_ID = f_AD_Org_ID.getValue();\n                VIS.Env.getCtx().setContext(windowNo, "AcctOrg_ID", org_ID);\n              }\n              ;\n            } else if (type.equals(eLEMENTTYPE_Account)) {\n              var field = _mTab.getField("Account_ID");\n              f_Account_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              f_Account_ID.setValue(C_AcctSchema_ID);\n              addLine(field, f_Account_ID, isMandatory, lblNames, eLEMENTTYPE_Account);\n              // f_Account_ID.VetoableChangeListener += new EventHandler(f_Account_ID_VetoableChangeListener);\n            } else if (type.equals(eLEMENTTYPE_SubAccount)) {\n              var field = _mTab.getField("C_SubAcct_ID");\n              f_SubAcct_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_SubAcct_ID, isMandatory, lblNames, eLEMENTTYPE_SubAccount);\n            } else if (type.equals(eLEMENTTYPE_Product)) {\n              var field = _mTab.getField("M_Product_ID");\n              f_M_Product_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              f_M_Product_ID.getBtn();\n              addLine(field, f_M_Product_ID, isMandatory, lblNames, eLEMENTTYPE_Product);\n            } else if (type.equals(eLEMENTTYPE_BPartner)) {\n              var field = _mTab.getField("C_BPartner_ID");\n              f_C_BPartner_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_BPartner_ID, isMandatory, lblNames, eLEMENTTYPE_BPartner);\n            } else if (type.equals(eLEMENTTYPE_Campaign)) {\n              var field = _mTab.getField("C_Campaign_ID");\n              f_C_Campaign_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_Campaign_ID, isMandatory, lblNames, eLEMENTTYPE_Campaign);\n            } else if (type.equals(eLEMENTTYPE_LocationFrom)) {\n              var field = _mTab.getField("C_LocFrom_ID");\n              f_C_LocFrom_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_LocFrom_ID, isMandatory, lblNames, eLEMENTTYPE_LocationFrom);\n            } else if (type.equals(eLEMENTTYPE_LocationTo)) {\n              var field = _mTab.getField("C_LocTo_ID");\n              f_C_LocTo_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_LocTo_ID, isMandatory, lblNames, eLEMENTTYPE_LocationTo);\n            } else if (type.equals(eLEMENTTYPE_Project)) {\n              var field = _mTab.getField("C_Project_ID");\n              f_C_Project_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_Project_ID, isMandatory, lblNames, eLEMENTTYPE_Project);\n            } else if (type.equals(eLEMENTTYPE_SalesRegion)) {\n              var field = _mTab.getField("C_SalesRegion_ID");\n              f_C_SalesRegion_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_SalesRegion_ID, isMandatory, lblNames, eLEMENTTYPE_SalesRegion);\n            } else if (type.equals(eLEMENTTYPE_OrgTrx)) {\n              var field = _mTab.getField("AD_OrgTrx_ID");\n              f_AD_OrgTrx_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_AD_OrgTrx_ID, isMandatory, lblNames, eLEMENTTYPE_OrgTrx);\n            } else if (type.equals(eLEMENTTYPE_Activity)) {\n              var field = _mTab.getField("C_Activity_ID");\n              f_C_Activity_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_C_Activity_ID, isMandatory, lblNames, eLEMENTTYPE_Activity);\n            }\n            //\tUser1\n            else if (type.equals(eLEMENTTYPE_UserList1)) {\n              var field = _mTab.getField("User1_ID");\n              f_User1_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_User1_ID, isMandatory, lblNames, eLEMENTTYPE_UserList1);\n            } else if (type.equals(eLEMENTTYPE_UserList2)) {\n              var field = _mTab.getField("User2_ID");\n              f_User2_ID = VIS.VControlFactory.getControl(_mTab, field, false);\n              addLine(field, f_User2_ID, isMandatory, lblNames, eLEMENTTYPE_UserList2);\n            } else if (type.equals(eLEMENTTYPE_UserElement1)) {\n              var field = _mTab.getField("UserElement1_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                // var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement1_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement1_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement1);\n                  f_UserElement1_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle1 = f_UserElement1_ID.getValue();\n                    eleFlag1 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement1_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement1_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement1);\n                  eleFlag1 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement2)) {\n              var field = _mTab.getField("UserElement2_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement2_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement2_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement2);\n                  f_UserElement2_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle2 = f_UserElement2_ID.getValue();\n                    eleFlag2 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement2_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement2_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement2);\n                  eleFlag2 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement3)) {\n              var field = _mTab.getField("UserElement3_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement3_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement3_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement3);\n                  f_UserElement3_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle3 = f_UserElement3_ID.getValue();\n                    eleFlag3 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement3_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement3_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement3);\n                  eleFlag3 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement4)) {\n              var field = _mTab.getField("UserElement4_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement4_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement4_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement4);\n                  f_UserElement4_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle4 = f_UserElement4_ID.getValue();\n                    eleFlag4 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement4_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement4_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement4);\n                  eleFlag4 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement5)) {\n              var field = _mTab.getField("UserElement5_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement5_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement5_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement5);\n                  f_UserElement5_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle5 = f_UserElement5_ID.getValue();\n                    eleFlag5 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement5_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement5_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement5);\n                  eleFlag5 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement6)) {\n              var field = _mTab.getField("UserElement6_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement6_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement6_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement6);\n                  f_UserElement6_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle6 = f_UserElement6_ID.getValue();\n                    eleFlag6 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement6_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement6_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement6);\n                  eleFlag6 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement7)) {\n              var field = _mTab.getField("UserElement7_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement7_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement7_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement7);\n                  f_UserElement7_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle7 = f_UserElement7_ID.getValue();\n                    eleFlag7 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement7_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement7_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement7);\n                  eleFlag7 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement8)) {\n              var field = _mTab.getField("UserElement8_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement8_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement8_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement8);\n                  f_UserElement8_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle8 = f_UserElement8_ID.getValue();\n                    eleFlag8 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement8_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement8_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement8);\n                  eleFlag8 = false;\n                }\n              } else {\n                continue;\n              }\n            } else if (type.equals(eLEMENTTYPE_UserElement9)) {\n              var field = _mTab.getField("UserElement9_ID");\n              if (obj.Elements[i].AD_Column_ID > 0) {\n                //var qry = "SELECT ColumnName FROM AD_Column WHERE AD_Column_ID = " + obj.Elements[i].AD_Column_ID;\n                //var column = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(qry));\n\n                var qry = "VIS_125";\n                var param = [];\n                param[0] = new VIS.DB.SqlParam("@AD_Column_ID", obj.Elements[i].AD_Column_ID);\n                var column = executeScalar(qry, param);\n                if (isHeavyData) {\n                  var value = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.Search);\n                  f_UserElement9_ID = new VIS.Controls.VTextBoxButton(column, isMandatory, false, true, VIS.DisplayType.Search, value);\n                  addLine(field, f_UserElement9_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement9);\n                  f_UserElement9_ID.fireValueChanged = locationChangedProduct;\n                  function locationChangedProduct() {\n                    userEle9 = f_UserElement9_ID.getValue();\n                    eleFlag9 = true;\n                  }\n                  ;\n                } else {\n                  var lookup = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), windowNo, obj.Elements[i].AD_Column_ID, VIS.DisplayType.TableDir);\n                  f_UserElement9_ID = new VIS.Controls.VComboBox(column, false, false, true, lookup, 150, VIS.DisplayType.TableDir, 0);\n                  addLine(field, f_UserElement9_ID, isMandatory, lblNames, eLEMENTTYPE_UserElement9);\n                  eleFlag9 = false;\n                }\n              } else {\n                continue;\n              }\n            }\n          }\n\n          //Discription in label\n          // tr = $("<tr>");\n          // tableSArea.append(tr);\n          // var child = $("<td>");\n          // tr.append(child);\n          //f_Description.height = 21;\n          // child.append(f_Description.getControl().addClass(\'VIS_Pref_Label_Font\'));\n\n          //discriptionDiv.append(f_Description.getControl().addClass(\'VIS_Pref_Label_Font\'));\n          lblbottumMsg2.css("display", "none");\n          //f_Description.Visible = false;\n\n          parameterDiv.html(tableSArea);\n          query = new VIS.Query();\n          query.addRestriction("C_AcctSchema_ID", VIS.Query.prototype.EQUAL, C_AcctSchema_ID);\n\n          // Manish 17/03/2017, Requested By Mukesh sir\n          //var sqlQry = "SELECT TableName FROM AD_Table WHERE AD_Table_ID=" + tblID_s;\n          //var wIDName = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(sqlQry));\n\n          var qry = "VIS_126";\n          var param = [];\n          param[0] = new VIS.DB.SqlParam("@tblID_s", tblID_s);\n          var wIDName = executeScalar(qry, param);\n          if (wIDName == "GL_JournalLine") {\n            query.addRestriction("IsFullyQualified", VIS.Query.prototype.EQUAL, "Y");\n          }\n          // end 17/03/2017, Requested By Mukesh sir\n\n          if (mAccount.C_ValidCombination_ID == 0) _mTab.setQuery(VIS.Query.prototype.getEqualQuery("1", "2"));else {\n            var _query = new VIS.Query();\n            _query.addRestriction("C_AcctSchema_ID", VIS.Query.prototype.EQUAL, C_AcctSchema_ID);\n            _query.addRestriction("C_ValidCombination_ID", VIS.Query.prototype.EQUAL, mAccount.C_ValidCombination_ID);\n            _mTab.setQuery(_query);\n          }\n          gridController.query(0, 0, false);\n          lblbottumMsg.text(obj.Description);\n          //lblCount.val("?");\n\n          var getOrgDiv = tableSArea.find(\'[name="AD_Org_ID"]\');\n          window.setTimeout(function () {\n            // if (window.innerHeight <= 700) {\n            accDiv.css("width", "73%");\n            parameterDiv.parent().css({\n              "width": "27%",\n              "padding": "0 10px 0 0"\n            });\n            var sizeCrtl = $(tableSArea.find("button").parent().find("input")[0]).width();\n            //$(tableSArea.find("select")).width(sizeCrtl + 35);\n            //$(tableSArea.find("input")[0]).width(sizeCrtl + 32);\n            //$(tableSArea.find("input")[1]).width(sizeCrtl + 32);\n\n            // }\n            //if (window.innerHeight >= 700) {\n            //    tableSArea.find("button").parent().find("input").css({ "width": "90%" });\n            //    parameterDiv.parent().css({ "width": "27%", "padding": "0 10px 0 0" });\n            //}\n\n            //var sqlQry = "SELECT TableName FROM AD_Table WHERE AD_Table_ID=" + tblID_s;\n            //var wIDName = VIS.Utility.Util.getValueOfString(VIS.DB.executeScalar(sqlQry));\n\n            var qry = "VIS_126";\n            var param = [];\n            param[0] = new VIS.DB.SqlParam("@tblID_s", tblID_s);\n            var wIDName = executeScalar(qry, param);\n            if (wIDName == "GL_JournalLine") {\n              getOrgDiv.on("click", function () {\n                if (getOrgDiv.find(\'option[value=0]\').length != 0) {\n                  getOrgDiv.find(\'option[value=0]\').remove();\n                }\n              });\n            }\n          }, 200);\n        });\n      }\n      ;\n      function addLine(field, editor, mandatory, lblName, type) {\n        $self.log.fine("Field=" + field);\n        //new row\n        tr = $("<tr>");\n        tableSArea.append(tr);\n        var label = VIS.VControlFactory.getLabel(field);\n        editor.setReadOnly(false);\n        editor.setMandatory(mandatory);\n        field.setPropertyChangeListener(editor);\n        //new column\n        var tdChild1 = $("<td>");\n        //\tlabel\n        tr.append(tdChild1.css("padding", "4px 0px 2px 0px"));\n        tdChild1.append(label.getControl().addClass(\'VIS_Pref_Label_Font\'));\n        if (type != undefined && (type == "X1" || type == "X2" || type == "X3" || type == "X4" || type == "X5" || type == "X6" || type == "X7" || type == "X8" || type == "X9")) {\n          tdChild1.find(\'label\').text(lblName);\n        }\n\n        //new row\n        tr = $("<tr>");\n        tableSArea.append(tr);\n        var tdChild2 = $("<td>");\n        //\tField\n\n        if (editor.getBtnCount() >= 2) {\n          tr.append(tdChild2);\n          var div = $("<Div class=\'vis-act-frm-parm\'>");\n          tdChild2.append(div);\n          if (window.innerHeight > 700) {\n            div.append(editor.getControl().css(\'width\', \'85%\'));\n            //div.append(editor.getBtn(0).css(\'width\', \'10%\'));\n            div.append(editor.getBtn(0));\n          } else {\n            div.append(editor.getControl().css(\'width\', \'85%\'));\n            div.append(editor.getBtn(0).css(\'width\', \'30px\').css(\'-webkit-appearance\', \'none\').css(\'height\', \'30px\').css(\'padding\', \'0px\').css(\'border-color\', \'#BBBBBB\'));\n          }\n        } else {\n          tr.append(tdChild2);\n          tdChild2.append(editor.getControl().css("width", "100%"));\n        }\n      }\n      function isNull(value) {\n        if (value == null || value == 0) {\n          return true;\n        }\n        return false;\n      }\n      function saveSelection() {\n        C_ValidCombination_ID = _mTab.getValue("C_ValidCombination_ID");\n        if ($self.onClose) $self.onClose(C_ValidCombination_ID);\n        root.dialog(\'close\');\n      }\n      function actionFind(includeAliasCombination) {\n        var localquery = null;\n        if (query != null) {\n          //localquery = query;//query.DeepCopy();\n          localquery = jQuery.extend(true, {}, query);\n        } else {\n          localquery = new VIS.Query();\n        }\n\n        //\tAlias\n        if (includeAliasCombination && f_Alias != null && f_Alias.getValue().toString().length > 0) {\n          var value = f_Alias.getValue().toString().toUpperCase();\n          if (!value.endsWith("%")) {\n            value += "%";\n          }\n          localquery.addRestriction("UPPER(Alias)", localquery.LIKE, value);\n        }\n        //\tCombination (mandatory)\n        if (includeAliasCombination && f_Combination.getValue().toString().length > 0) {\n          var value = f_Combination.getValue().toString().toUpperCase();\n          if (!value.endsWith("%")) value += "%";\n          localquery.addRestriction("UPPER(Combination)", localquery.LIKE, value);\n        }\n        //\tOrg (mandatory)\n        if (f_AD_Org_ID != null && f_AD_Org_ID.getValue() != null)\n          // && !isNull(f_AD_Org_ID.getValue()))\n          localquery.addRestriction("AD_Org_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_AD_Org_ID.getValue()));\n        //\tAccount (mandatory)\n        if (f_Account_ID != null && !isNull(f_Account_ID.getValue())) localquery.addRestriction("Account_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_Account_ID.getValue()));\n        if (f_SubAcct_ID != null && !isNull(f_SubAcct_ID.getValue())) localquery.addRestriction("C_SubAcct_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_SubAcct_ID.getValue()));\n\n        //\tProduct\n        if (f_M_Product_ID != null && !isNull(f_M_Product_ID.getValue())) localquery.addRestriction("M_Product_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_M_Product_ID.getValue()));\n        //\tBPartner\n        if (f_C_BPartner_ID != null && !isNull(f_C_BPartner_ID.getValue())) localquery.addRestriction("C_BPartner_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_BPartner_ID.getValue()));\n        //\tCampaign\n        if (f_C_Campaign_ID != null && !isNull(f_C_Campaign_ID.getValue())) localquery.addRestriction("C_Campaign_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_Campaign_ID.getValue()));\n        //\tLoc From\n        if (f_C_LocFrom_ID != null && !isNull(f_C_LocFrom_ID.getValue())) localquery.addRestriction("C_LocFrom_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_LocFrom_ID.getValue()));\n        //\tLoc To\n        if (f_C_LocTo_ID != null && !isNull(f_C_LocTo_ID.getValue())) localquery.addRestriction("C_LocTo_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_LocTo_ID.getValue()));\n        //\tProject\n        if (f_C_Project_ID != null && !isNull(f_C_Project_ID.getValue())) localquery.addRestriction("C_Project_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_Project_ID.getValue()));\n        //\tSRegion\n        if (f_C_SalesRegion_ID != null && !isNull(f_C_SalesRegion_ID.getValue())) localquery.addRestriction("C_SalesRegion_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_SalesRegion_ID.getValue()));\n        //\tOrg Trx\n        if (f_AD_OrgTrx_ID != null && !isNull(f_AD_OrgTrx_ID.getValue())) localquery.addRestriction("AD_OrgTrx_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_AD_OrgTrx_ID.getValue()));\n        //\tActivity\n        if (f_C_Activity_ID != null && !isNull(f_C_Activity_ID.getValue())) localquery.addRestriction("C_Activity_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_C_Activity_ID.getValue()));\n        //\tUser 1\n        if (f_User1_ID != null && !isNull(f_User1_ID.getValue())) localquery.addRestriction("User1_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_User1_ID.getValue()));\n        //\tUser 2\n        if (f_User2_ID != null && !isNull(f_User2_ID.getValue())) localquery.addRestriction("User2_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_User2_ID.getValue()));\n        //\tUser Element 1\n        if (f_UserElement1_ID != null && !isNull(f_UserElement1_ID.getValue())) localquery.addRestriction("UserElement1_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement1_ID.getValue()));\n        //\tUser Element 2\n        if (f_UserElement2_ID != null && !isNull(f_UserElement2_ID.getValue())) localquery.addRestriction("UserElement2_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement2_ID.getValue()));\n        //\tUser Element 3\n        if (f_UserElement3_ID != null && !isNull(f_UserElement3_ID.getValue())) localquery.addRestriction("UserElement3_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement3_ID.getValue()));\n        //\tUser Element 4\n        if (f_UserElement4_ID != null && !isNull(f_UserElement4_ID.getValue())) localquery.addRestriction("UserElement4_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement4_ID.getValue()));\n        //\tUser Element 5\n        if (f_UserElement5_ID != null && !isNull(f_UserElement5_ID.getValue())) localquery.addRestriction("UserElement5_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement5_ID.getValue()));\n        //\tUser Element 6\n        if (f_UserElement6_ID != null && !isNull(f_UserElement6_ID.getValue())) localquery.addRestriction("UserElement6_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement6_ID.getValue()));\n        //\tUser Element 7\n        if (f_UserElement7_ID != null && !isNull(f_UserElement7_ID.getValue())) localquery.addRestriction("UserElement7_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement7_ID.getValue()));\n        //\tUser Element 8\n        if (f_UserElement8_ID != null && !isNull(f_UserElement8_ID.getValue())) localquery.addRestriction("UserElement8_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement8_ID.getValue()));\n        //\tUser Element 9\n        if (f_UserElement9_ID != null && !isNull(f_UserElement9_ID.getValue())) localquery.addRestriction("UserElement9_ID", localquery.EQUAL, VIS.Utility.Util.getValueOfInt(f_UserElement9_ID.getValue()));\n        //\tQuery\n        _mTab.setQuery(localquery);\n        gridController.query(0, 0, false);\n      }\n      function actionIgnore() {\n        if (f_Alias != null) {\n          f_Alias.setValue("");\n        }\n        f_Combination.setValue("");\n        f_Description.Content = "";\n        f_Description.Visible = false;\n        lblbottumMsg2.val("");\n\n        //\n        //\tOrg (mandatory)\n        f_AD_Org_ID.setValue(null);\n        //\tAccount (mandatory)\n        f_Account_ID.setValue(null);\n        if (f_SubAcct_ID != null) f_SubAcct_ID.setValue(null);\n\n        //\tProduct\n        if (f_M_Product_ID != null) f_M_Product_ID.setValue(null);\n        //\tBPartner\n        if (f_C_BPartner_ID != null) f_C_BPartner_ID.setValue(null);\n        //\tCampaign\n        if (f_C_Campaign_ID != null) f_C_Campaign_ID.setValue(null);\n        //\tLoc From\n        if (f_C_LocFrom_ID != null) f_C_LocFrom_ID.setValue(null);\n        //\tLoc To\n        if (f_C_LocTo_ID != null) f_C_LocTo_ID.setValue(null);\n        //\tProject\n        if (f_C_Project_ID != null) f_C_Project_ID.setValue(null);\n        //\tSRegion\n        if (f_C_SalesRegion_ID != null) f_C_SalesRegion_ID.setValue(null);\n        //\tOrg Trx\n        if (f_AD_OrgTrx_ID != null) f_AD_OrgTrx_ID.setValue(null);\n        //\tActivity\n        if (f_C_Activity_ID != null) f_C_Activity_ID.setValue(null);\n        //\tUser 1\n        if (f_User1_ID != null) f_User1_ID.setValue(null);\n        //\tUser 2\n        if (f_User2_ID != null) f_User2_ID.setValue(null);\n        //\tUser Element 1\n        if (f_UserElement1_ID != null) f_UserElement1_ID.setValue(null);\n        //\tUser Element 2\n        if (f_UserElement2_ID != null) f_UserElement2_ID.setValue(null);\n        //\tUser Element 3\n        if (f_UserElement3_ID != null) f_UserElement3_ID.setValue(null);\n        //\tUser Element 4\n        if (f_UserElement4_ID != null) f_UserElement4_ID.setValue(null);\n        //\tUser Element 5\n        if (f_UserElement5_ID != null) f_UserElement5_ID.setValue(null);\n        //\tUser Element 6\n        if (f_UserElement6_ID != null) f_UserElement6_ID.setValue(null);\n        //\tUser Element 7\n        if (f_UserElement7_ID != null) f_UserElement7_ID.setValue(null);\n        //\tUser Element 8\n        if (f_UserElement8_ID != null) f_UserElement8_ID.setValue(null);\n        //\tUser Element 9\n        if (f_UserElement9_ID != null) f_UserElement9_ID.setValue(null);\n      }\n      function actionSave() {\n        var sb = null;\n        var sql = "";\n        var value = null;\n        if (accountSchemaElements.IsHasAlies) {\n          value = f_Alias.getValue();\n          if (value == null && sb != null) sb = sb.concat(VIS.Msg.translate(VIS.Env.getCtx(), "Alias")).concat(", ");\n        }\n        var aseList = [];\n        for (var i = 0; i < accountSchemaElements.Elements.length; i++) {\n          var ase = accountSchemaElements.Elements[i];\n          aseList.push(ase.Name);\n        }\n        //for (var i = 0; i < accountSchemaElements.Elements.length; i++) {\n        //var ase = accountSchemaElements.Elements[i];\n        //    var isMandatory = accountSchemaElements.Elements[i].IsMandatory;\n        //    var type = accountSchemaElements.Elements[i].Type;\n        //    //\n        //    if (type.equals(eLEMENTTYPE_Organization)) {\n        //        value = f_AD_Org_ID.getValue();\n        //        sql = sql.concat("AD_Org_ID");\n        //        if (value != null) {\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //        }\n        //        //if (isNull(value))\n        //        //    sql = sql.concat(" IS NULL AND ");\n        //        //else\n        //        //    sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_Account)) {\n        //        value = f_Account_ID.getValue();\n        //        sql = sql.concat("Account_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_SubAccount)) {\n        //        value = f_SubAcct_ID.getValue();\n        //        sql = sql.concat("C_SubAcct_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_Product)) {\n        //        value = f_M_Product_ID.getValue();\n        //        sql = sql.concat("M_Product_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_BPartner)) {\n        //        value = f_C_BPartner_ID.getValue();\n        //        sql = sql.concat("C_BPartner_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_Campaign)) {\n        //        value = f_C_Campaign_ID.getValue();\n        //        sql = sql.concat("C_Campaign_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_LocationFrom)) {\n        //        value = f_C_LocFrom_ID.getValue();\n        //        sql = sql.concat("C_LocFrom_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_LocationTo)) {\n        //        value = f_C_LocTo_ID.getValue();\n        //        sql = sql.concat("C_LocTo_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_Project)) {\n        //        value = f_C_Project_ID.getValue();\n        //        sql = sql.concat("C_Project_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_SalesRegion)) {\n        //        value = f_C_SalesRegion_ID.getValue();\n        //        sql = sql.concat("C_SalesRegion_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_OrgTrx)) {\n        //        value = f_AD_OrgTrx_ID.getValue();\n        //        sql = sql.concat("AD_OrgTrx_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_Activity)) {\n        //        value = f_C_Activity_ID.getValue();\n        //        sql = sql.concat("C_Activity_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserList1)) {\n        //        value = f_User1_ID.getValue();\n        //        sql = sql.concat("User1_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserList2)) {\n        //        value = f_User2_ID.getValue();\n        //        sql = sql.concat("User2_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement1)) {\n        //        value = f_UserElement1_ID.getValue();\n        //        sql = sql.concat("UserElement1_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement2)) {\n        //        value = f_UserElement2_ID.getValue();\n        //        sql = sql.concat("UserElement2_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement3)) {\n        //        value = f_UserElement3_ID.getValue();\n        //        sql = sql.concat("UserElement3_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement4)) {\n        //        value = f_UserElement4_ID.getValue();\n        //        sql = sql.concat("UserElement4_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement5)) {\n        //        value = f_UserElement5_ID.getValue();\n        //        sql = sql.concat("UserElement5_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement6)) {\n        //        value = f_UserElement6_ID.getValue();\n        //        sql = sql.concat("UserElement6_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement7)) {\n        //        value = f_UserElement7_ID.getValue();\n        //        sql = sql.concat("UserElement7_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement8)) {\n        //        value = f_UserElement8_ID.getValue();\n        //        sql = sql.concat("UserElement8_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    else if (type.equals(eLEMENTTYPE_UserElement9)) {\n        //        value = f_UserElement9_ID.getValue();\n        //        sql = sql.concat("UserElement9_ID");\n        //        if (isNull(value))\n        //            sql = sql.concat(" IS NULL AND ");\n        //        else\n        //            sql = sql.concat("=").concat(value).concat(" AND ");\n        //    }\n        //    //  \n        //    if (isMandatory && (value == null) && sb != null) {\n        //        sb = sb.concat(ase.getName()).concat(", ");\n        //    }\n        //}\n\n        $.ajax({\n          url: VIS.Application.contextUrl + "AccountForm/GetValidCombination",\n          dataType: "json",\n          type: "POST",\n          async: false,\n          data: {\n            accountSchemaElements: JSON.stringify(accountSchemaElements),\n            Elements: JSON.stringify(accountSchemaElements.Elements),\n            aseList: JSON.stringify(aseList),\n            value: value,\n            strinB: sb\n          },\n          success: function (data) {\n            sql = data;\n          },\n          error: function (e) {\n            console.log(e);\n          }\n        });\n        if (sb != null) {\n          VIS.ADialog.info("FillMandatory", true, sb.ToString().Substring(0, sb.Length - 2), null);\n          return;\n        }\n        if (f_AD_Org_ID == null || f_AD_Org_ID.getValue() == null) {\n          // || isNull(f_AD_Org_ID.getValue())) {\n          VIS.ADialog.info("FillMandatory", true, VIS.Msg.getElement(VIS.Env.getCtx(), "AD_Org_ID"), null);\n          return;\n        }\n        if (f_Account_ID == null || isNull(f_Account_ID.getValue())) {\n          VIS.ADialog.info("FillMandatory", true, VIS.Msg.getElement(VIS.Env.getCtx(), "Account_ID"), null);\n          $self.setBusy(false);\n          return;\n        }\n\n        //Check if already exists\n        sql = sql.concat("AD_Client_ID=" + VIS.Env.getCtx().getAD_Client_ID() + " AND C_AcctSchema_ID=" + C_AcctSchema_ID);\n        $self.log.fine("Check = " + sql.toString());\n\n        //Check Alies Value\n        var alies = f_Alias.getValue().toString();\n        var IDvalue = 0;\n        var Alias = null;\n        var f_alies = f_Alias.getValue().toString();\n        var dr = null;\n        try {\n          dr = executeDReader(sql, null);\n          if (dr.read()) {\n            IDvalue = dr.tables[0].rows[0].cells["c_validcombination_id"];\n            Alias = dr.tables[0].rows[0].cells["alias"];\n          }\n          dr.close();\n          dr = null;\n        } catch (e) {\n          //$self.log.Log(Level.SEVERE, sql.ToString(), e);\n          IDvalue = 0;\n          if (dr != null) {\n            dr.close();\n            dr = null;\n          }\n        }\n        $self.log.fine("ID=" + IDvalue + ", Alias=" + Alias);\n        var fAlie;\n        if (Alias == null) Alias = "";\n        //\tWe have an account like this already - check alias\n        if (IDvalue != 0 && accountSchemaElements.IsHasAlies && f_alies.equals(Alias)) {\n          var param = [];\n          if (f_alies.toString().length == 0) {\n            // sql = "UPDATE C_ValidCombination SET Alias=NULL WHERE C_ValidCombination_ID=" + IDvalue;\n            sql = "VIS_127";\n            param[0] = new VIS.DB.SqlParam("@IDvalue", IDvalue);\n          } else {\n            sql = "VIS_128";\n            param[0] = new VIS.DB.SqlParam("@f_alies", f_alies);\n            param[1] = new VIS.DB.SqlParam("@IDvalue", IDvalue);\n          }\n\n          //sql = sql.concat(" WHERE C_ValidCombination_ID=").concat(IDvalue);\n\n          var i = 0;\n          try {\n            //i = VIS.DB.executeQuery(sql);\n            executeQuery(sql, param);\n          } catch (e) {\n            //$self.log.Log(Level.SEVERE, sql.ToString(), e);\n          }\n        }\n        if (IDvalue != 0) {\n          loadInfo(IDvalue, C_AcctSchema_ID);\n          return;\n        }\n\n        //\tload and display\n\n        $self.log.config("New");\n        Alias = null;\n        if (f_Alias != null) Alias = f_Alias.getValue().toString();\n        var C_SubAcct_ID = 0;\n        if (f_SubAcct_ID != null && f_SubAcct_ID.getValue() != null) C_SubAcct_ID = f_SubAcct_ID.getValue();\n        var M_Product_ID = 0;\n        if (f_M_Product_ID != null && !isNull(f_M_Product_ID.getValue())) M_Product_ID = f_M_Product_ID.getValue();\n        var C_BPartner_ID = 0;\n        if (f_C_BPartner_ID != null && !isNull(f_C_BPartner_ID.getValue())) C_BPartner_ID = f_C_BPartner_ID.getValue();\n        var AD_OrgTrx_ID = 0;\n        if (f_AD_OrgTrx_ID != null && !isNull(f_AD_OrgTrx_ID.getValue())) AD_OrgTrx_ID = f_AD_OrgTrx_ID.getValue();\n        var C_LocFrom_ID = 0;\n        if (f_C_LocFrom_ID != null && !isNull(f_C_LocFrom_ID.getValue())) C_LocFrom_ID = f_C_LocFrom_ID.getValue();\n        var C_LocTo_ID = 0;\n        if (f_C_LocTo_ID != null && !isNull(f_C_LocTo_ID.getValue())) C_LocTo_ID = f_C_LocTo_ID.getValue();\n        var C_SRegion_ID = 0;\n        if (f_C_SalesRegion_ID != null && !isNull(f_C_SalesRegion_ID.getValue())) C_SRegion_ID = f_C_SalesRegion_ID.getValue();\n        var C_Project_ID = 0;\n        if (f_C_Project_ID != null && !isNull(f_C_Project_ID.getValue())) C_Project_ID = f_C_Project_ID.getValue();\n        var C_Campaign_ID = 0;\n        if (f_C_Campaign_ID != null && !isNull(f_C_Campaign_ID.getValue())) C_Campaign_ID = f_C_Campaign_ID.getValue();\n        var C_Activity_ID = 0;\n        if (f_C_Activity_ID != null && !isNull(f_C_Activity_ID.getValue())) C_Activity_ID = f_C_Activity_ID.getValue();\n        var User1_ID = 0;\n        if (f_User1_ID != null && !isNull(f_User1_ID.getValue())) User1_ID = f_User1_ID.getValue();\n        var User2_ID = 0;\n        if (f_User2_ID != null && !isNull(f_User2_ID.getValue())) User2_ID = f_User2_ID.getValue();\n        var UserElement1_ID = 0;\n        if (f_UserElement1_ID != null && !isNull(f_UserElement1_ID.getValue())) UserElement1_ID = f_UserElement1_ID.getValue();\n        var UserElement2_ID = 0;\n        if (f_UserElement2_ID != null && !isNull(f_UserElement2_ID.getValue())) UserElement2_ID = f_UserElement2_ID.getValue();\n        var UserElement3_ID = 0;\n        if (f_UserElement3_ID != null && !isNull(f_UserElement3_ID.getValue())) UserElement3_ID = f_UserElement3_ID.getValue();\n        var UserElement4_ID = 0;\n        if (f_UserElement4_ID != null && !isNull(f_UserElement4_ID.getValue())) UserElement4_ID = f_UserElement4_ID.getValue();\n        var UserElement5_ID = 0;\n        if (f_UserElement5_ID != null && !isNull(f_UserElement5_ID.getValue())) UserElement5_ID = f_UserElement5_ID.getValue();\n        var UserElement6_ID = 0;\n        if (f_UserElement6_ID != null && !isNull(f_UserElement6_ID.getValue())) UserElement6_ID = f_UserElement6_ID.getValue();\n        var UserElement7_ID = 0;\n        if (f_UserElement7_ID != null && !isNull(f_UserElement7_ID.getValue())) UserElement7_ID = f_UserElement7_ID.getValue();\n        var UserElement8_ID = 0;\n        if (f_UserElement8_ID != null && !isNull(f_UserElement8_ID.getValue())) UserElement8_ID = f_UserElement8_ID.getValue();\n        var UserElement9_ID = 0;\n        if (f_UserElement9_ID != null && !isNull(f_UserElement9_ID.getValue())) UserElement9_ID = f_UserElement9_ID.getValue();\n        var AD_Org_ID = f_AD_Org_ID.getValue();\n        var AD_Account_ID = f_Account_ID.getValue();\n\n        //Ajex to save Account onto database \n\n        if (eleFlag1 && userEle1 != null) {\n          UserElement1_ID = userEle1;\n        }\n        if (eleFlag2 && userEle2 != null) {\n          UserElement2_ID = userEle2;\n        }\n        if (eleFlag3 && userEle3 != null) {\n          UserElement3_ID = userEle3;\n        }\n        if (eleFlag4 && userEle4 != null) {\n          UserElement4_ID = userEle4;\n        }\n        if (eleFlag5 && userEle5 != null) {\n          UserElement5_ID = userEle5;\n        }\n        if (eleFlag6 && userEle6 != null) {\n          UserElement6_ID = userEle6;\n        }\n        if (eleFlag7 && userEle7 != null) {\n          UserElement7_ID = userEle7;\n        }\n        if (eleFlag8 && userEle8 != null) {\n          UserElement8_ID = userEle8;\n        }\n        if (eleFlag9 && userEle9 != null) {\n          UserElement9_ID = userEle9;\n        }\n        $.ajax({\n          url: VIS.Application.contextUrl + "AccountForm/Save",\n          dataType: "json",\n          data: {\n            AD_Client_ID: VIS.Env.getCtx().getAD_Client_ID(),\n            AD_Org_ID: AD_Org_ID,\n            C_AcctSchema_ID: C_AcctSchema_ID,\n            AD_Account_ID: AD_Account_ID,\n            C_SubAcct_ID: C_SubAcct_ID,\n            M_Product_ID: M_Product_ID,\n            C_BPartner_ID: C_BPartner_ID,\n            AD_OrgTrx_ID: AD_OrgTrx_ID,\n            C_LocFrom_ID: C_LocFrom_ID,\n            C_LocTo_ID: C_LocTo_ID,\n            C_SRegion_ID: C_SRegion_ID,\n            C_Project_ID: C_Project_ID,\n            C_Campaign_ID: C_Campaign_ID,\n            C_Activity_ID: C_Activity_ID,\n            User1_ID: User1_ID,\n            User2_ID: User2_ID,\n            UserElement1_ID: UserElement1_ID,\n            UserElement2_ID: UserElement2_ID,\n            UserElement3_ID: UserElement3_ID,\n            UserElement4_ID: UserElement4_ID,\n            UserElement5_ID: UserElement5_ID,\n            UserElement6_ID: UserElement6_ID,\n            UserElement7_ID: UserElement7_ID,\n            UserElement8_ID: UserElement8_ID,\n            UserElement9_ID: UserElement9_ID,\n            Alias: Alias\n          },\n          success: function (data) {\n            returnValue = data.result;\n            //load control\n            loadInfo(returnValue.C_ValidCombination_ID, returnValue.C_AcctSchema_ID);\n          }\n        });\n      }\n      ;\n      function loadInfo(C_ValidCombination_ID, C_AcctSchema_ID) {\n        // this.log.fine("C_ValidCombination_ID=" + C_ValidCombination_ID);\n        var sql = "VIS_124";\n        var dr = null;\n        try {\n          // dr = VIS.DB.executeReader(sql, null);\n\n          var param = [];\n          param[0] = new VIS.DB.SqlParam("@C_ValidCombination_ID", C_ValidCombination_ID);\n          param[1] = new VIS.DB.SqlParam("@C_AcctSchema_ID", C_AcctSchema_ID);\n          dr = executeReader(sql, param);\n          if (dr.read()) {\n            if (f_Alias != null) f_Alias.setValue(dr.getString("Alias"));\n            if (f_Combination != null) f_Combination.setValue(dr.getString("Combination"));\n            if (f_AD_Org_ID != null) f_AD_Org_ID.setValue(dr.getInt("AD_Org_ID"));\n            if (f_Account_ID != null) f_Account_ID.setValue(dr.getInt("Account_ID"));\n            if (f_SubAcct_ID != null) f_SubAcct_ID.setValue(dr.getInt("C_SubAcct_ID"));\n            if (f_M_Product_ID != null) {\n              if (dr.getInt("M_Product_ID") != 0) {\n                f_M_Product_ID.setValue(dr.getInt("M_Product_ID"));\n              }\n            }\n            if (f_C_BPartner_ID != null) {\n              if (dr.getInt("C_BPartner_ID") != 0) {\n                f_C_BPartner_ID.setValue(dr.getInt("C_BPartner_ID"));\n              }\n            }\n            if (f_C_Campaign_ID != null) f_C_Campaign_ID.setValue(dr.getInt("C_Campaign_ID"));\n            if (f_C_LocFrom_ID != null) f_C_LocFrom_ID.setValue(dr.getInt("C_LocFrom_ID"));\n            if (f_C_LocTo_ID != null) f_C_LocTo_ID.setValue(dr.getInt("C_LocTo_ID"));\n            if (f_C_Project_ID != null) f_C_Project_ID.setValue(dr.getInt("C_Project_ID"));\n            if (f_C_SalesRegion_ID != null) f_C_SalesRegion_ID.setValue(dr.getInt("C_SalesRegion_ID"));\n            if (f_AD_OrgTrx_ID != null) f_AD_OrgTrx_ID.setValue(dr.getInt("AD_OrgTrx_ID"));\n            if (f_C_Activity_ID != null) f_C_Activity_ID.setValue(dr.getInt("C_Activity_ID"));\n            if (f_User1_ID != null) f_User1_ID.setValue(dr.getInt("User1_ID"));\n            if (f_User2_ID != null) f_User2_ID.setValue(dr.getInt("User2_ID"));\n            if (f_UserElement1_ID != null) {\n              if (dr.getInt("UserElement1_ID") != 0) {\n                f_UserElement1_ID.setValue(dr.getInt("UserElement1_ID"));\n              }\n            }\n            if (f_UserElement2_ID != null) {\n              if (dr.getInt("UserElement2_ID") != 0) {\n                f_UserElement2_ID.setValue(dr.getInt("UserElement2_ID"));\n              }\n            }\n            if (f_UserElement3_ID != null) {\n              if (dr.getInt("UserElement3_ID") != 0) {\n                f_UserElement3_ID.setValue(dr.getInt("UserElement3_ID"));\n              }\n            }\n            if (f_UserElement4_ID != null) {\n              if (dr.getInt("UserElement4_ID") != 0) {\n                f_UserElement4_ID.setValue(dr.getInt("UserElement4_ID"));\n              }\n            }\n            if (f_UserElement5_ID != null) {\n              if (dr.getInt("UserElement5_ID") != 0) {\n                f_UserElement5_ID.setValue(dr.getInt("UserElement5_ID"));\n              }\n            }\n            if (f_UserElement6_ID != null) {\n              if (dr.getInt("UserElement6_ID") != 0) {\n                f_UserElement6_ID.setValue(dr.getInt("UserElement6_ID"));\n              }\n            }\n            if (f_UserElement7_ID != null) {\n              if (dr.getInt("UserElement7_ID") != 0) {\n                f_UserElement7_ID.setValue(dr.getInt("UserElement7_ID"));\n              }\n            }\n            if (f_UserElement8_ID != null) {\n              if (dr.getInt("UserElement8_ID") != 0) {\n                f_UserElement8_ID.setValue(dr.getInt("UserElement8_ID"));\n              }\n            }\n            if (f_UserElement9_ID != null) {\n              if (dr.getInt("UserElement9_ID") != 0) {\n                f_UserElement9_ID.setValue(dr.getInt("UserElement9_ID"));\n              }\n            }\n            if (lblbottumMsg2 != null) lblbottumMsg2.text(dr.getString("Description"));\n          }\n          dr.close();\n          dr = null;\n        } catch (e) {\n          if (dr != null) {\n            dr.close();\n            dr = null;\n          }\n        }\n        actionFind(false);\n      }\n\n      //Events\n      Okbtn.on("click", function () {\n        $self.setBusy(true);\n        saveSelection();\n        $self.setBusy(false);\n      });\n      cancelbtn.on("click", function () {\n        root.dialog(\'close\');\n      });\n      btnRefresh.on("click", function () {\n        $self.setBusy(true);\n        actionFind(true);\n        $self.setBusy(false);\n      });\n      btnUndo.on("click", function () {\n        actionIgnore();\n      });\n      btnSave.on("click", function () {\n        $self.setBusy(true);\n        actionSave();\n        $self.setBusy(false);\n      });\n    };\n    this.showDialog = function () {\n      var w = $(window).width() - 50;\n      var h = $(window).height() - 60;\n      $busyDiv.height(h);\n      $busyDiv.width(w);\n      root.append($busyDiv);\n      root.dialog({\n        modal: false,\n        resizable: false,\n        title: title,\n        width: w,\n        height: h,\n        position: {\n          at: "center top",\n          of: window\n        },\n        close: function () {\n          $self.dispose();\n          root.dialog("destroy");\n          root = null;\n          $self = null;\n        }\n      });\n    };\n    this.dataStatusChanged = function (e) {\n      var info = _mTab.getValue("Description");\n      //f_Description.getControl().val(info);\n\n      _comb = _mTab.getValue("COMBINATION");\n      if (info != null && info.length > 0) {\n        lblbottumMsg2.css("display", "inline-block");\n      } else {\n        lblbottumMsg2.css("display", "none");\n      }\n      lblbottumMsg2.text(info);\n      lblCount.text(e.totalRecords);\n    };\n    this.disposeComponent = function () {\n      if (Okbtn) {\n        Okbtn.off("click");\n      }\n      if (cancelbtn) cancelbtn.off("click");\n      if (btnRefresh) btnRefresh.off("click");\n      if (btnUndo) btnUndo.off("click");\n      if (btnSave) {\n        btnSave.off("click");\n      }\n      title = null;\n      mAccount = null;\n      C_AcctSchema_ID = null;\n      windowNo = null;\n      _comb = null;\n      f_Description = null;\n      f_Alias = null;\n      f_Combination = null;\n      f_AD_Org_ID = null;\n      f_Account_ID = null;\n      f_SubAcct_ID = null;\n      f_M_Product_ID = null;\n      f_C_BPartner_ID = null;\n      f_C_Campaign_ID = null;\n      f_C_LocFrom_ID = null;\n      f_C_LocTo_ID = null;\n      f_C_Project_ID = null;\n      f_C_SalesRegion_ID = null;\n      f_AD_OrgTrx_ID = null;\n      f_C_Activity_ID = null;\n      f_User1_ID = null;\n      f_User2_ID = null;\n      this.log = null;\n      eLEMENTTYPE_AD_Reference_ID = null;\n      eLEMENTTYPE_Account = null;\n      eLEMENTTYPE_Activity = null;\n      eLEMENTTYPE_BPartner = null;\n      eLEMENTTYPE_LocationFrom = null;\n      eLEMENTTYPE_LocationTo = null;\n      eLEMENTTYPE_Campaign = null;\n      eLEMENTTYPE_Organization = null;\n      eLEMENTTYPE_OrgTrx = null;\n      eLEMENTTYPE_Project = null;\n      eLEMENTTYPE_Product = null;\n      eLEMENTTYPE_SubAccount = null;\n      eLEMENTTYPE_SalesRegion = null;\n      eLEMENTTYPE_UserList1 = null;\n      eLEMENTTYPE_UserList2 = null;\n      eLEMENTTYPE_UserElement1 = null;\n      eLEMENTTYPE_UserElement2 = null;\n      eLEMENTTYPE_UserElement3 = null;\n      eLEMENTTYPE_UserElement4 = null;\n      eLEMENTTYPE_UserElement5 = null;\n      eLEMENTTYPE_UserElement6 = null;\n      eLEMENTTYPE_UserElement7 = null;\n      eLEMENTTYPE_UserElement8 = null;\n      eLEMENTTYPE_UserElement9 = null;\n      tableSArea = null;\n      tr = null;\n      Okbtn = null;\n      cancelbtn = null;\n      btnRefresh = null;\n      btnUndo = null;\n      btnSave = null;\n      lblParameter = null;\n      parameterDiv = null;\n      bottumDiv = null;\n      discriptionDiv = null;\n      accDiv = null;\n      acctbl = null;\n      gridController = null;\n      changed = false;\n      C_ValidCombination_ID = null;\n      query = null;\n      _mTab = null;\n      lblbottumMsg = null;\n      lblCount = null;\n      lblbottumMsg2 = null;\n      accountSchemaElements = null;\n    };\n  }\n  ;\n  AccountForm.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.AccountForm = AccountForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/accountform.js?')},"./Areas/VIS/Scripts/app/Framework/addnewproduct.js":()=>{eval(';\n(function (VIS, $) {\n  var self = this;\n  var txtName = null;\n  var txtSearchKey = null;\n  var txtUOM = null;\n  var lookupUOM = null;\n  var txtUPC = null;\n  var txtPType;\n  var lookupProductType = null;\n  var txtPCategory = null;\n  var txtTaxCategory = null;\n  var lookupTaxCategory = null;\n  var txtAttribute = null;\n  var lookupAttributeSet = null;\n  var txtPurchased = null;\n  var txtSold = null;\n  var txtStocked = null;\n  var txtDescription = null;\n  var lblBottomMsg = $(\'<label></label>\');\n  var bsyDiv = null;\n  var addMProductDialog = null;\n  var okBtn, closeBtn;\n\n  //*************Add New Product by using Popup box  ******************//\n\n  function AddMProduct(windowNo) {\n    var root = $(\'<div>\');\n    bsyDiv = $("<div class=\'vis-apanel-busy\'>");\n    bsyDiv.css({\n      "position": "absolute",\n      "width": "98%",\n      "height": "97%",\n      \'text-align\': \'center\',\n      \'z-index\': \'999\'\n    });\n    root.append(bsyDiv);\n    root.append(\'<div class="VIS_Pref_show vis-formouterwrpdiv">\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="Value_\' + self.windowNo + \'"></div></div>\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="Name_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    root.append(\'<div class="VIS_Pref_show vis-formouterwrpdiv">\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="C_UOM_ID_\' + self.windowNo + \'"></div></div>\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="UPC_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    root.append(\'<div class="VIS_Pref_show vis-formouterwrpdiv">\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="ProductType_\' + self.windowNo + \'"></div></div>\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="M_Product_Category_ID_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    root.append(\'<div class="VIS_Pref_show vis-formouterwrpdiv">\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="C_TaxCategory_ID_\' + self.windowNo + \'"></div></div>\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="M_AttributeSet_ID_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    root.append(\'<div class="VIS_Pref_show vis-formouterwrpdiv">\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="IsPurchased_\' + self.windowNo + \'"></div></div>\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="IsSold_\' + self.windowNo + \'"></div></div>\' + \'<div class= "VIS_Pref_dd"><div class="input-group vis-input-wrap" id="IsStocked_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    root.append(\'<div class="VIS_Pref_show vis-formouterwrpdiv">\' + \'<div class= "VIS_Pref_dd p-0"><div class="input-group vis-input-wrap vis-ev-full-h" id="Description_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    root.append(\'<div class="vis-ctrfrm-btnwrp">\' + \'<input id="closeBtn\' + self.windowNo + \'" class= "VIS_Pref_btn-2" type = "button" value = "\' + VIS.Msg.getMsg("close") + \'">\' + \'<input id="okBtn_\' + self.windowNo + \'" class="VIS_Pref_btn-2" type="button" value="\' + VIS.Msg.getMsg("OK") + \'">\' + \'<div class="vis-ad-w-p-s-main pull-left"><div class="vis-ad-w-p-s-infoline"></div><div class="vis-ad-w-p-s-msg" style="align-items:flex-end;" id="lblBottomMsg_\' + self.windowNo + \'"></div></div>\' + \'</div>\');\n    srcCtrl = root.find("#Value_" + self.windowNo);\n    nameCtrl = root.find("#Name_" + self.windowNo);\n    uomCtrl = root.find("#C_UOM_ID_" + self.windowNo);\n    upcCtrl = root.find("#UPC_" + self.windowNo);\n    pTypeCtrl = root.find("#ProductType_" + self.windowNo);\n    pCatCtrl = root.find("#M_Product_Category_ID_" + self.windowNo);\n    taxCtrl = root.find("#C_TaxCategory_ID_" + self.windowNo);\n    attCtrl = root.find("#M_AttributeSet_ID_" + self.windowNo);\n    purCtrl = root.find("#IsPurchased_" + self.windowNo);\n    soldCtrl = root.find("#IsSold_" + self.windowNo);\n    stockCtrl = root.find("#IsStocked_" + self.windowNo);\n    desCtrl = root.find("#Description_" + self.windowNo);\n    closeBtn = root.find("#closeBtn" + self.windowNo);\n    okBtn = root.find("#okBtn_" + self.windowNo);\n    lblBottomMsg = root.find("#lblBottomMsg_" + self.windowNo);\n    var srchCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var nameCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var uomCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var upcCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var pTypeCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var pCatCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var taxCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var attCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var purCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var soldCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var stockCtrlWrap = $(\'<div class="vis-control-wrap">\');\n    var desCtrlWrap = $(\'<div class="vis-control-wrap">\');\n\n    //*************Controls to get values ******************//\n\n    txtSearchKey = new VIS.Controls.VTextBox("Value", true, false, true);\n    srcCtrl.append(srchCtrlWrap);\n    srchCtrlWrap.append(txtSearchKey.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr("autocomplete", "off")).append(\'<label>\' + VIS.Msg.getMsg("EnterSearchKey") + \'</label>\');\n    txtName = new VIS.Controls.VTextBox("Name", true, false, true);\n    nameCtrl.append(nameCtrlWrap);\n    nameCtrlWrap.append(txtName.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr("autocomplete", "off")).append(\'<label>\' + VIS.Msg.getMsg("Name") + \'</label>\');\n    lookupUOM = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_UOM_ID", 0, true, "IsActive=\'Y\'");\n    txtUOM = new VIS.Controls.VComboBox("C_UOM_ID", true, false, true, lookupUOM);\n    uomCtrl.append(uomCtrlWrap);\n    uomCtrlWrap.append(txtUOM.getControl()).append(\'<label>\' + VIS.Msg.getMsg("UomName") + \'</label>\');\n    txtUPC = new VIS.Controls.VTextBox("UPC", false, false, true);\n    upcCtrl.append(upcCtrlWrap);\n    upcCtrlWrap.append(txtUPC.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr("autocomplete", "off")).append(\'<label>\' + VIS.Msg.getMsg("VIS_UPC_EAN") + \'</label>\');\n    lookupProductType = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.List, "ProductType", 270, true, "IsActive=\'Y\'");\n    txtPType = new VIS.Controls.VComboBox("ProductType", true, false, true, lookupProductType);\n    pTypeCtrl.append(pTypeCtrlWrap);\n    pTypeCtrlWrap.append(txtPType.getControl()).append(\'<label>\' + VIS.Msg.getMsg("VIS_Product_Type") + \'</label>\');\n    lookupProductCategory = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "M_Product_Category_ID", 0, true, "IsActive=\'Y\'");\n    txtPCategory = new VIS.Controls.VComboBox("M_Product_Category_ID", true, false, true, lookupProductCategory);\n    pCatCtrl.append(pCatCtrlWrap);\n    pCatCtrlWrap.append(txtPCategory.getControl()).append(\'<label>\' + VIS.Msg.getMsg("VIS_Product_Category") + \'</label>\');\n    lookupTaxCategory = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_TaxCategory_ID", 0, true, "IsActive=\'Y\'");\n    txtTaxCategory = new VIS.Controls.VComboBox("C_TaxCategory_ID", true, false, true, lookupTaxCategory);\n    taxCtrl.append(taxCtrlWrap);\n    taxCtrlWrap.append(txtTaxCategory.getControl()).append(\'<label>\' + VIS.Msg.getMsg("VIS_Tax_Category") + \'</label>\');\n    lookupAttributeSet = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "M_AttributeSet_ID", 0, true, "IsActive=\'Y\'");\n    txtAttribute = new VIS.Controls.VComboBox("M_AttributeSet_ID", false, false, true, lookupAttributeSet);\n    attCtrl.append(attCtrlWrap);\n    attCtrlWrap.append(txtAttribute.getControl()).append(\'<label>\' + VIS.Msg.getMsg("VIS_Attribute_Set") + \'</label>\');\n    txtPurchased = new VIS.Controls.VCheckBox("IsPurchased", false, false, true, VIS.Msg.getMsg("VIS_Is_Purchased"), null, false);\n    purCtrl.append(purCtrlWrap);\n    purCtrlWrap.append(txtPurchased.getControl().addClass("vis-ec-col-lblchkbox"));\n    txtSold = new VIS.Controls.VCheckBox("IsSold", false, false, true, VIS.Msg.getMsg("VIS_Is_Sold"), null, false);\n    soldCtrl.append(soldCtrlWrap);\n    soldCtrlWrap.append(txtSold.getControl().addClass("vis-ec-col-lblchkbox"));\n    txtStocked = new VIS.Controls.VCheckBox("IsStocked", false, false, true, VIS.Msg.getMsg("VIS_Is_Stocked"), null, false);\n    stockCtrl.append(stockCtrlWrap);\n    stockCtrlWrap.append(txtStocked.getControl().addClass("vis-ec-col-lblchkbox"));\n    txtDescription = new VIS.Controls.VTextArea("Description", false, false, true);\n    desCtrl.append(desCtrlWrap);\n    desCtrlWrap.append(txtDescription.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\')).append(\'<label>\' + VIS.Msg.getMsg("Description") + \'</label>\');\n    events();\n    OpenDialogPopup(root);\n\n    //************* Is Busy Indicator ******************//\n\n    function setBusy(isBusy) {\n      if (isBusy) {\n        bsyDiv[0].style.visibility = "visible";\n      } else {\n        bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    setBusy(false);\n\n    //*************All Event ******************//\n\n    function events() {\n      okBtn.on(VIS.Events.onClick, function () {\n        lblBottomMsg.text(" ");\n        SaveMProduct();\n      });\n      closeBtn.on(VIS.Events.onClick, function () {\n        clear();\n        dispose();\n      });\n      txtSearchKey.fireValueChanged = function (e) {\n        AddRemoveMandatory(txtSearchKey);\n        txtSearchKey.setValue(e.newValue);\n      };\n      txtName.fireValueChanged = function (e) {\n        AddRemoveMandatory(txtName);\n        txtName.setValue(e.newValue);\n      };\n      txtUOM.fireValueChanged = function (e) {\n        AddRemoveMandatory(txtUOM);\n        txtUOM.setValue(e.newValue);\n      };\n      txtUPC.fireValueChanged = function (e) {\n        txtUPC.setValue(e.newValue);\n      };\n      txtPType.fireValueChanged = function (e) {\n        AddRemoveMandatory(txtPType);\n        txtPType.setValue(e.newValue);\n      };\n      txtPCategory.fireValueChanged = function (e) {\n        AddRemoveMandatory(txtPCategory);\n        txtPCategory.setValue(e.newValue);\n      };\n      txtTaxCategory.fireValueChanged = function (e) {\n        AddRemoveMandatory(txtTaxCategory);\n        txtTaxCategory.setValue(e.newValue);\n      };\n      txtAttribute.fireValueChanged = function (e) {\n        txtAttribute.setValue(e.newValue);\n      };\n      txtPurchased.fireValueChanged = function (e) {\n        txtPurchased.setValue(e.newValue);\n      };\n      txtSold.fireValueChanged = function (e) {\n        txtSold.setValue(e.newValue);\n      };\n      txtStocked.fireValueChanged = function (e) {\n        txtStocked.setValue(e.newValue);\n      };\n      txtDescription.fireValueChanged = function (e) {\n        txtDescription.setValue(e.newValue);\n      };\n    }\n\n    //************* Mandatory values ******************//\n\n    function AddRemoveMandatory(elm) {\n      if (elm.getValue() != null && elm.getValue() != "") {\n        elm.getControl().removeClass("vis-ev-col-mandatory");\n      } else {\n        elm.getControl().addClass("vis-ev-col-mandatory");\n      }\n    }\n\n    //************* Dialog for New Product  ******************//\n\n    function OpenDialogPopup(firstRoot) {\n      addMProductDialog = new VIS.ChildDialog();\n      addMProductDialog.setContent(firstRoot);\n      var windowWidth = $(window).width();\n      if (windowWidth >= 1366) {\n        addMProductDialog.setWidth(870);\n      } else {\n        addMProductDialog.setWidth(670);\n      }\n      addMProductDialog.setTitle(VIS.Msg.getMsg("AddProduct"));\n      addMProductDialog.setEnableResize(true);\n      addMProductDialog.setModal(true);\n      addMProductDialog.show();\n      addMProductDialog.hideButtons();\n      addMProductDialog.getRoot().dialog({\n        position: [200, 130]\n      });\n    }\n    ;\n\n    //*************Save New Product  ******************//\n\n    function SaveMProduct() {\n      var isRequired = false;\n      var msg = VIS.Msg.getMsg("FillMandatory") + " ";\n      if (txtSearchKey.getValue().trim().length == 0) {\n        msg += VIS.Msg.getMsg("EnterSearchKey") + ", ";\n        isRequired = true;\n      }\n      if (txtName.getValue().trim().length == 0) {\n        msg += VIS.Msg.getMsg("Name") + ", ";\n        isRequired = true;\n      }\n      if (txtUOM.getValue() == 0 || txtUOM.getValue() == null) {\n        msg += VIS.Msg.getMsg("UomName") + ", ";\n        isRequired = true;\n      }\n      if (txtPType.getValue() == 0 || txtPType.getValue() == null) {\n        msg += VIS.Msg.getMsg("VIS_Product_Type") + ", ";\n        isRequired = true;\n      }\n      if (txtPCategory.getValue() == 0 || txtPCategory.getValue() == null) {\n        msg += VIS.Msg.getMsg("VIS_Product_Category") + ", ";\n        isRequired = true;\n      }\n      if (txtTaxCategory.getValue() == 0 || txtTaxCategory.getValue() == null) {\n        msg += VIS.Msg.getMsg("VIS_Tax_Category") + ", ";\n        isRequired = true;\n      }\n      if (isRequired) {\n        VIS.ADialog.error("", "", msg.slice(0, -2));\n        return false;\n      }\n      var obj = {\n        searchKey: txtSearchKey.getValue(),\n        name: txtName.getValue(),\n        uom: txtUOM.getValue(),\n        upc: txtUPC.getValue(),\n        proType: txtPType.getValue(),\n        proCategory: txtPCategory.getValue(),\n        taxCategory: txtTaxCategory.getValue(),\n        attribute: txtAttribute.getValue(),\n        purchased: txtPurchased.getValue(),\n        sold: txtSold.getValue(),\n        stocked: txtStocked.getValue(),\n        description: txtDescription.getValue()\n      };\n      setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + "AddProduct/AddNewProduct",\n        type: "POST",\n        data: obj,\n        success: function (result) {\n          if (result == "OK") {\n            lblBottomMsg.text(VIS.Msg.getMsg("VIS_Product_Save"));\n            clear();\n          } else {\n            setBusy(false);\n            lblBottomMsg.text(result);\n          }\n        },\n        error: function (error) {\n          setBusy(false);\n          //html to be converted to doc\n          var doc = new DOMParser().parseFromString(error.responseText, "text/html");\n          //select title element and get its text content\n          var message = doc.querySelector("title").textContent;\n          if (message.length <= 0 && message == null) {\n            message = VIS.Msg.getMsg("VIS_SomethingWentWrong");\n          }\n          VIS.ADialog.error(message);\n        }\n      });\n    }\n    ;\n\n    //*************Empty text field******************//\n\n    function clear() {\n      setBusy(false);\n      txtSearchKey.setValue("");\n      txtName.setValue("");\n      txtUOM.setValue("");\n      txtUPC.setValue("");\n      txtPType.setValue("");\n      txtPCategory.setValue("");\n      txtTaxCategory.setValue("");\n      txtAttribute.setValue("");\n      txtDescription.setValue("");\n      txtPurchased.setValue(false);\n      txtSold.setValue(false);\n      txtStocked.setValue(false);\n      txtSearchKey.getControl().addClass("vis-ev-col-mandatory");\n      txtName.getControl().addClass("vis-ev-col-mandatory");\n      txtUOM.getControl().addClass("vis-ev-col-mandatory");\n      txtPType.getControl().addClass("vis-ev-col-mandatory");\n      txtPCategory.getControl().addClass("vis-ev-col-mandatory");\n      txtTaxCategory.getControl().addClass("vis-ev-col-mandatory");\n    }\n    ;\n\n    //*************Clean Up ******************//\n\n    function dispose() {\n      addMProductDialog.close();\n      if (root != null) {\n        root.remove();\n      }\n      root = null;\n      if (okBtn) okBtn.off(VIS.Events.onClick);\n      okBtn = null;\n      if (closeBtn) closeBtn.off(VIS.Events.onClick);\n      closeBtn = null;\n      txtName = null;\n      txtSearchKey = null;\n      txtUOM = null;\n      lookupUOM = null;\n      txtUPC = null;\n      txtPType = null;\n      lookupProductType = null;\n      txtPCategory = null;\n      lookupProductCategory = null;\n      txtTaxCategory = null;\n      lookupTaxCategory = null;\n      txtAttribute = null;\n      lookupAttributeSet = null;\n      txtPurchased = null;\n      txtSold = null;\n      txtStocked = null;\n      txtDescription = null;\n    }\n    ;\n  }\n  ;\n  VIS.AddUpdateMProduct = AddMProduct;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/addnewproduct.js?')},"./Areas/VIS/Scripts/app/Framework/amountdivision.js":()=>{eval(';\n(function (VIS, $) {\n  function AmountDivision(C_DimAmt_ID, AD_Org_ID, defaultVal, isReadOnly) {\n    //  AD_TableId = 0;\n    //  AD_RecordID = 0;\n    // C_DimAmt_ID = 0;\n    //  AD_Org_ID = 0;\n    if (C_DimAmt_ID && C_DimAmt_ID.toString().indexOf("<") > -1) {\n      C_DimAmt_ID = 0;\n    }\n    this.onClose = null;\n    this.onClosing = null;\n    var root = $("<div style=\'width:100%;height:100%;position:relative;display: flex;\'>");\n    var contentDiv = $("<div class=\'VIS-AMTD-MainContent vis-formouterwrpdiv\'>");\n    var bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var tblDesing = $("<table>");\n    var cmbAcctSchema, cmbDimensionType, txtTotalAmount, cmbOrg, txtAmount, btnAdd, btnOk, btnNew, grdDimTypeLine, divDesign, lblAcctSchema, lblDimensionType, lblTotalAmount, lblOrg, lblAmount, txtTotal, lblTotal;\n    var lblActivity, cmbActivity, lblCampaign, cmbCampaign, lblSalesRegion, cmbSalesRegion, lblUserElement, cmbUserElement, lblBPartner, cmbBPartner, lblAddress, locAddress, lblProject, txtProject, lblProduct, txtProduct;\n    var lblElement, lblAccountElement, cmbElement, txtAccountElement, lblAcctElementValue, txtAcctElementValue;\n    var PAGE_SIZE = null;\n    var pageNoOrder = null;\n    var grdname = null;\n    var dGrid = null;\n    var datasec = null;\n    var generateControl = null;\n    var storeDimensionData = null;\n    var windowNo = VIS.Env.getWindowNo();\n    var recid = null;\n    var checkValUpdate = null;\n    var updateRecordId = null;\n    var indexValue = null;\n    var checkDelete = null;\n    var txtb = null;\n    var txtLoc = null;\n    var txtProj = null;\n    var txtProd = "";\n    var modalTxtb = null;\n    var modalTxtLoc = null;\n    var modalTxtProj = null;\n    var modalTxtProd = null;\n    var arrAcctSchemaID = null;\n    var arrDimensionEType = null;\n    var ch = new VIS.ChildDialog();\n    //AD_Org_ID = 0;\n    var ctrlDiv = null;\n    var divOrg = null;\n    var divAccountElement = null;\n    var divAccountElementVal = null;\n    var divActivity = null;\n    var divBPartner = null;\n    var divLocation = null;\n    var divCampaign = null;\n    var divProduct = null;\n    var divProject = null;\n    var divSales = null;\n    var divUserElement = null;\n    var divAmount = null;\n    var gridBtnAdd = null;\n    var gridBtnDelete = null;\n    var demoCount = null;\n    var allAcctSchemaID = null;\n    var self = this;\n    var divbutton = null;\n    var modalDivButton = null;\n    var modalDiv = null;\n    var modalDivConent = null;\n    var modalSpanClose = null;\n    var divGrid = null;\n    var modalDivOrg = null;\n    var modalDivAccountElement = null;\n    var modalDivAccountElementVal = null;\n    var modalDivActivity = null;\n    var modalDivBPartner = null;\n    var modalDivLocation = null;\n    var modalDivCampaign = null;\n    var modalDivProduct = null;\n    var modalDivProject = null;\n    var modalDivSales = null;\n    var modalDivUserElement = null;\n    var modalDivAmount = null;\n    var modalGenerateControl = null;\n    var modalCmbOrg, modalTxtAmount, modalBtnAdd, modalBtnNew, modalLblOrg, modalLblAmount;\n    var modalLblActivity, modalCmbActivity, modalLblCampaign, modalCmbCampaign, modalLblSalesRegion, modalCmbSalesRegion, modalLblUserElement, modalCmbUserElement, modalLblBPartner, modalCmbBPartner, modalLblAddress, modalLocAddress, modalLblProject, modalTxtProject, modalLblProduct, modalTxtProduct;\n    var modalLblElement, modalLblAccountElement, modalCmbElement, modalTxtAccountElement, modalLblAcctElementValue, modalTxtAcctElementValue;\n    var divStatusContainer = null;\n    var ulStatusdimension = null;\n    var liStatusFirst = null;\n    var liStatusPrev = null;\n    var cmbStausRecordCount = null;\n    var liStatusNext = null;\n    var liStatusLast = null;\n    var refreshCmbDimension = null;\n    var LineGridName = null;\n    var dimensionLineID = null;\n    var oldAmount = null;\n    var lblMaxAmount = null;\n    var divMaxAmount = null;\n    var format = null;\n    this.dotFormatter = VIS.Env.isDecimalPoint();\n    var Precision = VIS.Env.getCtx().getContextAsInt("#StdPrecision");\n    var Amount = null;\n    var cmbValue = null;\n    var acctValue = null;\n    var oldDimensionNameValue = null;\n    var totalRecords = 0;\n    var C_Element_ID = 0;\n    var IsElementOk = true;\n    var oldBPartnerID = 0;\n    var $bsyDiv = null;\n    var fileUpldIconDim = null;\n    var count = 0;\n    function initializeComponent() {\n      lblAcctSchema = $("<label>");\n      lblDimensionType = $("<label>");\n      lblTotalAmount = $("<label>");\n      lblAmount = $("<label>");\n      modalLblAmount = $("<label>");\n      lblTotal = $("<label>");\n      lblMaxAmount = $("<label>");\n      cmbAcctSchema = $("<select tabindex=\'2\'>");\n      cmbDimensionType = $("<select tabindex=\'3\'>");\n      cmbElement = $("<select>");\n      txtAmount = new VIS.Controls.VAmountTextBox("Amount", false, false, true, 50, 100, VIS.DisplayType.Amount, VIS.Msg.getMsg("Amount")); //$("<input type=\'number\' min=\'0\' tabindex=\'6\'>");\n      modalTxtAmount = new VIS.Controls.VAmountTextBox("ModalAmount", false, false, true, 50, 100, VIS.DisplayType.Amount, VIS.Msg.getMsg("Amount")); //$("<input type=\'number\' min=\'0\' tabindex=\'11\'>");\n\n      //if (isReadOnly) {\n      //    txtTotalAmount = $("<input type=\'number\' min=\'0\' tabindex=\'1\' readonly>");\n      //}\n      //else {\n      txtTotalAmount = new VIS.Controls.VAmountTextBox("TotalAmount", false, true, true, 50, 100, VIS.DisplayType.Amount, VIS.Msg.getMsg("Amount")); //$("<input type=\'number\' min=\'0\' tabindex=\'1\' readonly>");\n      //}\n\n      txtTotal = new VIS.Controls.VAmountTextBox("Total", false, true, true, 50, 100, VIS.DisplayType.Amount, VIS.Msg.getMsg("Amount")); //$("<input type=\'text\' readonly=\'true\' tabindex=\'15\'>");\n      btnAdd = $("<a style=\'cursor:pointer;\' tabindex=\'7\'>");\n      btnNew = $("<a>");\n      modalBtnAdd = $("<a style=\'cursor:pointer;\' tabindex=\'12\'>");\n      modalBtnNew = $("<a style=\'cursor:pointer;\' tabindex=\'13\'>");\n      divGrid = $("<div class=\'VIS-AMTD-Grid\'>");\n      datasec = $("<div class=\'VIS-AMTD-SubGrid\'>");\n      generateControl = $("<div class=\'VIS-AMTD-formDynmicInput\'>");\n      modalGenerateControl = $("<div class=\'VIS-AMTD-formDynmicInput\'>");\n      gridBtnAdd = $("<button>");\n      gridBtnDelete = $("<button>");\n      modalDiv = $("<div class=\'VIS-AMTD-Modal\' id=\'updateModal\'>");\n      modalDivConent = $("<div class=\'VIS-AMTD-Modal-Content\'>");\n      modalSpanClose = $("<span class=\'VIS-AMTD-Close\'>");\n      statusSpanShowRecordNo = $("<label>");\n      statusSpanShowRecordNo.addClass("vis-statusbar-pageMsg");\n      modalSpanClose.append("X");\n      ulStatusdimension = $(\'<ul class="vis-statusbar-ul"></ul>\');\n      divStatusContainer = $(\'<div class="VIS-AMTD-StatusContainer"></div>\');\n      liStatusFirst = $(\'<li  style="opacity: 0.6;"><div><i class="vis vis-shiftleft" style="opacity: 1;" action="first" title="First Page" ></i></div></li>\');\n      ulStatusdimension.append(liStatusFirst);\n      liStatusPrev = $(\'<li style="opacity: 0.6;"><div><i class="vis vis-pageup" style="opacity: 1;" action="prev" title="Page Down" ></i></div></li>\');\n      ulStatusdimension.append(liStatusPrev);\n      cmbStausRecordCount = $(\'<select class="vis-statusbar-combo" style="width:50px;"></select>\');\n      var li = $(\'<li></li>\');\n      li.append(cmbStausRecordCount);\n      ulStatusdimension.append(li);\n      liStatusNext = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" style="opacity: 1;" action="next" title="Page Up" alt="Page Down" src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/base/PageDown16.png"></div></li>\');\n      ulStatusdimension.append(liStatusNext);\n      liStatusLast = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" style="opacity: 1;" action="last" title="Last Page" ></i></div></li>\');\n      ulStatusdimension.append(liStatusLast);\n      divStatusContainer.append(ulStatusdimension);\n      storeDimensionData = new Array();\n      recid = 0;\n      checkValUpdate = false;\n      updateRecordId = 0;\n      indexValue = 0;\n      checkDelete = "";\n      txtb = "";\n      txtLoc = "";\n      txtProj = "";\n      txtProd = "";\n      modalTxtb = "";\n      modalTxtLoc = "";\n      modalTxtProj = "";\n      modalTxtProd = "";\n      allAcctSchemaID = "";\n      LineGridName = "";\n      demoCount = 0;\n      allAcctSchemaID = [];\n      arrAcctSchemaID = [];\n      oldAmount = 0;\n      refreshCmbDimension = true;\n      dimensionLineID = 0;\n      PAGE_SIZE = 30;\n      pageNoOrder = 1;\n      Amount = 0;\n      cmbValue = 0;\n      acctValue = -1;\n      oldDimensionNameValue = 0;\n      format = VIS.DisplayType.GetNumberFormat(VIS.DisplayType.Amount);\n      ctrlDiv = $("<div class=\'VIS-AMTD-formWrap\'>");\n      //C_DimAmt_ID = 0;//  1000015;//1000002;   //Initialize Record ID for Testing Record.........................\n      //Amount = 5000;\n      btnOk = $("<input type=\'button\' class=\'VIS_Pref_btn-2 pull-left\' tabindex=\'16\' >");\n      btnAdd.append(VIS.Msg.getMsg("Add"));\n      //gridBtnAdd.append(addTxt);\n      btnNew.append(VIS.Msg.getMsg("Cancel"));\n      modalBtnAdd.append(VIS.Msg.getMsg("Update"));\n      modalBtnNew.append(VIS.Msg.getMsg("Cancel"));\n      btnOk.val(VIS.Msg.getMsg("OK"));\n      lblAcctSchema.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_AcctSchema_ID"));\n      lblDimensionType.append(VIS.Msg.translate(VIS.Env.getCtx(), "ElementType"));\n      lblTotalAmount.append(VIS.Msg.getMsg("TotalAmount"));\n      lblAmount.append(VIS.Msg.getMsg("Amount"));\n      modalLblAmount.append(VIS.Msg.getMsg("Amount"));\n      btnNew.css("display", "none");\n      lblTotal.append(VIS.Msg.getMsg("Total"));\n      var divAcctSchema = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      var divAcctSchemaCtrlWrp = $("<div class=\'vis-control-wrap\'>");\n      divAcctSchema.append(divAcctSchemaCtrlWrp);\n      divAcctSchemaCtrlWrp.append(cmbAcctSchema).append(lblAcctSchema);\n      var divDimType = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      var divDimTypeCtrlWrp = $("<div class=\'vis-control-wrap\'>");\n      var divAmountDimExcel = $(\'<div class="vis-excelimportbtn VIS-AMTD-formBtns" style=" display: block; "><a tabindex="" class="vis vis-doc-excel"></a></div>\');\n      divDimType.append(divDimTypeCtrlWrp);\n      divDimType.append(divAmountDimExcel);\n      divDimTypeCtrlWrp.append(cmbDimensionType).append(lblDimensionType);\n\n      /* Create the element of input File */\n      var divExcelDim = $(\'<div style="float: right;margin-right: 5px;display:none" ><input id="VIS-AMTD-file-input" style="display:none" type="file"  accept=".xls,.xlsx"><label title="\' + VIS.Msg.getMsg("VIS_ExcelImport") + \'"  for="VIS-AMTD-file-input" ></label></div>\');\n      divDimType.append(divExcelDim);\n      fileUpldIconDim = divDimType.find("#VIS-AMTD-file-input");\n      var divTotalAmount = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      var divTotalAmountCtrlWrp = $("<div class=\'vis-control-wrap\'>");\n      divTotalAmount.append(divTotalAmountCtrlWrp);\n      divTotalAmountCtrlWrp.append(txtTotalAmount.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\')).append(lblTotalAmount);\n      divAmount = $("<div class=\'VIS-AMTD-formData VIS-AMTD-amountTxt input-group vis-input-wrap\'>");\n      var divAmountCtrlWrp = $("<div class=\'vis-control-wrap\'>");\n      divAmount.append(divAmountCtrlWrp);\n      divAmountCtrlWrp.append(txtAmount.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\')).append(lblAmount);\n      modalDivAmount = $("<div class=\'VIS-AMTD-formData VIS-AMTD-amountTxt input-group vis-input-wrap\'>");\n      var modalDivAmountCtrlWrp = $("<div class=\'vis-control-wrap\'>");\n      modalDivAmount.append(modalDivAmountCtrlWrp);\n      modalDivAmount.append(modalTxtAmount.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\')).append(modalLblAmount);\n      divbutton = $("<div class=\'VIS-AMTD-formBtns\'>");\n      var divButton1 = $("<div>");\n      divButton1.append(btnAdd); //.append(btnNew);\n      divbutton.append(divButton1);\n      modalDivButton = $("<div class=\'VIS-AMTD-ModalformBtns\'>");\n      var modalButton1 = $("<div>");\n      modalButton1.append(modalBtnAdd).append(modalBtnNew);\n      modalDivButton.append(modalButton1);\n      var divTotal = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      var divTotalCtrlWrp = $("<div class=\'vis-control-wrap\'>");\n      modalDivConent.append(modalGenerateControl).append(modalDivAmount).append(modalDivButton);\n      modalDiv.append(modalDivConent);\n      divGrid.append(datasec).append(modalDiv).append(divStatusContainer);\n      //datasec.append(modalDiv);\n      divTotal.append(divTotalCtrlWrp);\n      divTotalCtrlWrp.append(txtTotal.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\')).append(lblTotal);\n      divMaxAmount = $("<div style=\'color:green;font-size:small\'>");\n      divMaxAmount.append(lblMaxAmount);\n      ctrlDiv.append(divMaxAmount).append(divTotalAmount).append(divAcctSchema).append(divDimType).append(generateControl).append(divAmount).append(divbutton);\n      contentDiv.append(ctrlDiv).append(divGrid).append(divTotal).append(btnOk);\n      root.append(contentDiv).append(bsyDiv);\n      if (isReadOnly) {\n        contentDiv.addClass(\'VIS-AMTD-ReadOnly\');\n      }\n\n      //Accounting Schema Change function...............\n      cmbAcctSchema.on("change", function () {\n        busyDiv("visible");\n        var tempCheck = true;\n        if (cmbAcctSchema.val() == 0) {\n          tempCheck = false;\n          //This Check Work if Accounting Shema is "All" in this ..\n          //Remove All Dimension against different Accounting Schema if exists.\n\n          getDimensionLine(allAcctSchemaID, null, function (acctSchemaData) {\n            if (acctSchemaData.length != 0) {\n              VIS.ADialog.confirm("ConfirmSelectAllAcctSchema", true, "", "Confirm", function (result) {\n                if (!result) {\n                  cmbAcctSchema.val(acctValue);\n                  cmbDimensionType.val(cmbValue);\n                  loadSchemaValue(false);\n                  //busyDiv("hidden");\n                } else {\n                  busyDiv("visible");\n                  //for (var j = 0; j < allAcctSchemaID.length; j++) {\n\n                  //\tVIS.DB.executeQuery("delete from c_dimamtaccttype where c_acctschema_id=" + allAcctSchemaID[j] + " and c_dimamt_id=" + C_DimAmt_ID + "");\n                  //}\n                  if (allAcctSchemaID.length) {\n                    VIS.dataContext.getJSONRecord("AmountDivision/SetDAcctType", {\n                      "allAcctSchemaID": allAcctSchemaID,\n                      "did": C_DimAmt_ID\n                    });\n                  }\n                  getMaxDimensionAmount();\n\n                  //loadData(getDimensionLine(allAcctSchemaID));\n\n                  getDimensionLine(allAcctSchemaID, null, function (vall) {\n                    busyDiv("visible");\n                    loadData(vall);\n                    acctValue = cmbAcctSchema.find("option:selected").val();\n                    recid = 0;\n                    txtAmount.setValue(0);\n                    checkValUpdate = false;\n                    btnNew.css("display", "none");\n                    //divbutton.css("width", "6%");\n                    if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n                      divAmount.css("width", "26%");\n                    } else {\n                      divAmount.css("width", "33.3%");\n                    }\n                    btnAdd.empty().append(VIS.Msg.getMsg("Add"));\n                    txtTotal.setValue(0);\n                    loadSchemaValue(false);\n                    // busyDiv("hidden");\n                  });\n                }\n              });\n            }\n          });\n        }\n        getDimensionLine(allAcctSchemaID, null, function (acctSchemaData) {\n          loadSchemaValue(tempCheck);\n          busyDiv("hidden");\n        });\n        Precision = cmbAcctSchema.find(\'option:selected\').attr(\'precision\');\n      });\n      function loadSchemaValue(tempCheck) {\n        if (tempCheck) {\n          acctValue = cmbAcctSchema.find("option:selected").val();\n        }\n        pageNoOrder = 1;\n        arrAcctSchemaID = [];\n        if (cmbAcctSchema.val() != 0) {\n          arrAcctSchemaID[0] = cmbAcctSchema.val();\n        } else {\n          arrAcctSchemaID = allAcctSchemaID;\n        }\n        getDimensionLine(arrAcctSchemaID, null, function (acctSchemaData) {\n          loadData(acctSchemaData);\n          var getAcctSchemaId = -1;\n          getDiminsionType(cmbAcctSchema.val(), function () {\n            if (acctSchemaData.length != 0) {\n              cmbDimensionType.val(acctSchemaData[0].DimensionTypeVal);\n              getControl(cmbDimensionType.val());\n              txtAmount.setValue(0);\n              checkValUpdate = false;\n              btnAdd.empty().append(VIS.Msg.getMsg("Add"));\n              if (cmbAcctSchema.val() != -1 && cmbDimensionType.val() != 0) {\n                divAmount.css("display", "block");\n                btnAdd.css("display", "block");\n                if (lblMaxAmount.html() == "") {\n                  ch.getRoot().parent().css("height", "448px");\n                } else {\n                  ch.getRoot().parent().css("height", "469px");\n                }\n              } else {\n                divAmount.css("display", "none");\n                btnAdd.css("display", "none");\n                if (lblMaxAmount.html() == "") {\n                  ch.getRoot().parent().css("height", "390px");\n                } else {\n                  ch.getRoot().parent().css("height", "410px");\n                }\n              }\n              //calculateGrossAmount(acctSchemaData[0].TotalLineAmount);\n            } else {\n              getControl(cmbDimensionType.val());\n              if (cmbAcctSchema.val() != -1 && cmbDimensionType.val() != 0) {\n                divAmount.css("display", "block");\n                btnAdd.css("display", "block");\n                if (lblMaxAmount.html() == "") {\n                  ch.getRoot().parent().css("height", "448px");\n                } else {\n                  ch.getRoot().parent().css("height", "469px");\n                }\n              } else {\n                divAmount.css("display", "none");\n                btnAdd.css("display", "none");\n                if (lblMaxAmount.html() == "") {\n                  ch.getRoot().parent().css("height", "390px");\n                } else {\n                  ch.getRoot().parent().css("height", "410px");\n                }\n              }\n            }\n          });\n          //if (acctSchemaData.length != 0) {\n          //    cmbDimensionType.val(acctSchemaData[0].DimensionTypeVal);\n          //    //calculateGrossAmount(acctSchemaData[0].TotalLineAmount);\n          //}\n        }); //Filter data against Accounting Schema.........\n      }\n      ;\n      //DimensionType Change Funcion..............\n      cmbDimensionType.on("change", function (e) {\n        busyDiv("visible");\n        getDimensionLine(arrAcctSchemaID, null, function (acctSchemaData) {\n          if (acctSchemaData.length != 0) {\n            VIS.ADialog.confirm("ConfirmChangeDimensionType", true, "", "Confirm", function (result) {\n              if (!result) {\n                cmbDimensionType.val(cmbValue);\n                hideShowDimensionValue();\n                busyDiv("hidden");\n                return false;\n              } else {\n                busyDiv("visible");\n                //Remove Dimension against old Dimension Type ............\n                getControl(cmbDimensionType.val());\n                cmbValue = cmbDimensionType.find("option:selected").val();\n                //recid = 0;\n                txtAmount.setValue(0);\n                checkValUpdate = false;\n                btnNew.css("display", "none");\n                //divbutton.css("width", "6%");\n                if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n                  divAmount.css("width", "26%");\n                } else {\n                  divAmount.css("width", "33.3%");\n                }\n                btnAdd.empty().append(VIS.Msg.getMsg("Add"));\n\n                //for (var j = 0; j < arrAcctSchemaID.length; j++) {\n                //\tVIS.DB.executeQuery("delete from c_dimamtaccttype where c_acctschema_id=" + arrAcctSchemaID[j] + " and c_dimamt_id=" + C_DimAmt_ID + "");\n                //}\n                if (allAcctSchemaID.length) {\n                  VIS.dataContext.getJSONRecord("AmountDivision/SetDAcctType", {\n                    "allAcctSchemaID": allAcctSchemaID,\n                    "did": C_DimAmt_ID\n                  });\n                }\n                getDimensionLine(arrAcctSchemaID, null, function (temp) {\n                  loadData(temp);\n                  getMaxDimensionAmount();\n                  txtTotal.setValue(0);\n                });\n                busyDiv("hidden");\n              }\n              hideShowDimensionValue();\n            });\n          } else {\n            getControl(cmbDimensionType.val());\n            if (!IsElementOk) {\n              busyDiv("hidden");\n              VIS.ADialog.warn("VIS_ElementDifferent");\n              return false;\n            }\n            cmbValue = cmbDimensionType.find("option:selected").val();\n            if (cmbDimensionType.val() == "AC") {\n              dGrid.showColumn("C_BPartner");\n            } else {\n              dGrid.hideColumn("C_BPartner");\n            }\n          }\n          hideShowDimensionValue();\n          cmbDimensionType.focus();\n          busyDiv("hidden");\n        });\n      });\n      btnAdd.on("keydown", function (e) {\n        if (e.keyCode == 13) {\n          busyDiv("visible");\n          //Validate Control ...................\n          if (validateControl()) {\n            if (!checkValUpdate) {\n              recid++;\n            }\n            var dimTypeVal = cmbDimensionType.find("option:selected").val();\n            //Add Data against particular Dimension Type Value......................\n            if (dimTypeVal == "AC") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtAccountElement.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtAcctElementValue.getValue(), C_Element_ID, 0, txtb.getValue(), cmbBPartner.val());\n              cmbElement.val("-1");\n              txtAcctElementValue.setValue("-1");\n            } //Account\n            else if (dimTypeVal == "AY") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbActivity.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbActivity.find("option:selected").val(), -1, 0, 0, "");\n              cmbActivity.val(-1);\n            } //Activity\n            else if (dimTypeVal == "BP") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbBPartner.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtb.getValue(), -1, 0, 0, "");\n              cmbBPartner.val("");\n              txtb.setValue("-1");\n            } //BPartner\n            else if (dimTypeVal == "LF" || dimTypeVal == "LT") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), locAddress.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtLoc.getValue(), -1, 0, 0, "");\n              locAddress.val("");\n              txtLoc.setValue("-1");\n            } //Location From//Location To\n            else if (dimTypeVal == "MC") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbCampaign.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbCampaign.find("option:selected").val(), -1, 0, 0, "");\n              cmbCampaign.val(-1);\n            } //Campaign\n            else if (dimTypeVal == "OO" || dimTypeVal == "OT") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbOrg.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbOrg.find("option:selected").val(), -1, 0, 0, "");\n              cmbOrg.val("-1");\n            } //Organization//Org Trx\n            else if (dimTypeVal == "PJ") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtProject.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtProj.getValue(), -1, 0, 0, "");\n              txtProject.val("");\n              txtProj.setValue("-1");\n            } //Project\n            else if (dimTypeVal == "PR") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtProduct.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtProd.getValue(), -1, 0, 0, "");\n              txtProduct.val("");\n              txtProd.setValue("-1");\n            } //Product\n            else if (dimTypeVal == "SA") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), "", txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), "", -1, 0, 0, "");\n            } //Sub Account\n            else if (dimTypeVal == "SR") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbSalesRegion.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbSalesRegion.find("option:selected").val(), -1, 0, 0, "");\n              cmbSalesRegion.val("-1");\n            } //Sales Region\n            else if (dimTypeVal == "U1" || dimTypeVal == "U2") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtAccountElement.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtAcctElementValue.getValue(), C_Element_ID, 0, txtb.getValue(), cmbBPartner.val());\n              cmbElement.val("-1");\n              txtAccountElement.val("");\n              txtAcctElementValue.setValue("-1");\n            } //User List 1//User List 2\n            else if (dimTypeVal == "X1" || dimTypeVal == "X2" || dimTypeVal == "X3" || dimTypeVal == "X4" || dimTypeVal == "X5" || dimTypeVal == "X6" || dimTypeVal == "X7" || dimTypeVal == "X8" || dimTypeVal == "X9") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbUserElement.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbUserElement.find("option:selected").val(), -1, 0, 0, "");\n              cmbUserElement.val(-1);\n            } //User Element 1 to User Element 9\n          }\n        }\n      });\n      //Add and Update Button Click........\n      btnAdd.on("click", function () {\n        busyDiv("visible");\n        //Validate Control ...................\n        if (validateControl()) {\n          if (!checkValUpdate) {\n            recid++;\n          }\n          var dimTypeVal = cmbDimensionType.find("option:selected").val();\n          //Add Data against particular Dimension Type Value......................\n          if (dimTypeVal == "AC") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtAccountElement.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtAcctElementValue.getValue(), C_Element_ID, 0, txtb.getValue(), cmbBPartner.val());\n            cmbElement.val("-1");\n            txtAcctElementValue.setValue("-1");\n            cmbBPartner.val("");\n            txtb.setValue("-1");\n          } //Account\n          else if (dimTypeVal == "AY") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbActivity.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbActivity.find("option:selected").val(), -1, 0, 0, "");\n            cmbActivity.val(-1);\n          } //Activity\n          else if (dimTypeVal == "BP") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbBPartner.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtb.getValue(), -1, 0, 0, "");\n            cmbBPartner.val("");\n            txtb.setValue("-1");\n          } //BPartner\n          else if (dimTypeVal == "LF" || dimTypeVal == "LT") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), locAddress.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtLoc.getValue(), -1, 0, 0, "");\n            locAddress.val("");\n            txtLoc.setValue("-1");\n          } //Location From//Location To\n          else if (dimTypeVal == "MC") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbCampaign.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbCampaign.find("option:selected").val(), -1, 0, 0, "");\n            cmbCampaign.val(-1);\n          } //Campaign\n          else if (dimTypeVal == "OO" || dimTypeVal == "OT") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbOrg.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbOrg.find("option:selected").val(), -1, 0, 0, "");\n            cmbOrg.val("-1");\n          } //Organization//Org Trx\n          else if (dimTypeVal == "PJ") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtProject.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtProj.getValue(), -1, 0, 0, "");\n            txtProject.val("");\n            txtProj.setValue("-1");\n          } //Project\n          else if (dimTypeVal == "PR") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtProduct.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtProd.getValue(), -1, 0, 0, "");\n            txtProduct.val("");\n            txtProd.setValue("-1");\n          } //Product\n          else if (dimTypeVal == "SA") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), "", txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), "", -1, 0, 0, "");\n          } //Sub Account\n          else if (dimTypeVal == "SR") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbSalesRegion.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbSalesRegion.find("option:selected").val(), -1, 0, 0, "");\n            cmbSalesRegion.val("-1");\n          } //Sales Region\n          else if (dimTypeVal == "U1" || dimTypeVal == "U2") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), txtAccountElement.val(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), txtAcctElementValue.getValue(), C_Element_ID, 0, txtb.getValue(), cmbBPartner.val());\n            cmbElement.val("-1");\n            txtAccountElement.val("");\n            txtAcctElementValue.setValue("-1");\n          } //User List 1//User List 2\n          else if (dimTypeVal == "X1" || dimTypeVal == "X2" || dimTypeVal == "X3" || dimTypeVal == "X4" || dimTypeVal == "X5" || dimTypeVal == "X6" || dimTypeVal == "X7" || dimTypeVal == "X8" || dimTypeVal == "X9") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), cmbUserElement.find("option:selected").text(), txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), cmbUserElement.find("option:selected").val(), -1, 0, 0, "");\n            cmbUserElement.val(-1);\n          } //User Element 1 to User Element 9\n        }\n\n        // busyDiv("hidden");\n      });\n\n      /* Click event of the Input file*/\n      divAmountDimExcel.on(\'click\', function () {\n        $("#VIS-AMTD-file-input").val("");\n        if (cmbDimensionType.val() == "0") {\n          VIS.ADialog.error("VIS_DimensionType", true, "", "");\n          return false;\n        }\n        fileUpldIconDim.trigger("click");\n      });\n\n      /* Change event of the Excel file*/\n\n      fileUpldIconDim.on("change", function (e) {\n        var file = this;\n        var validExts = new Array(".xlsx", ".xls");\n        var fileExt = $("#VIS-AMTD-file-input").val();\n        fileExt = fileExt.substring(fileExt.lastIndexOf(\'.\'));\n        if (validExts.indexOf(fileExt) < 0) {\n          VIS.ADialog.error("VIS_InValidFile", true, "", "");\n          return false;\n        }\n        window.setTimeout(function () {\n          busyDiv("visible");\n          _result = $.parseJSON(VIS.UploadAmountDimension(file, null));\n          // upload excel work on dialog\n          UploadFileReadAndImport(_result);\n        }, 400);\n      });\n      //Cancel Button Click.................\n      btnNew.on("click", function () {\n        busyDiv("visible");\n        getControl(cmbDimensionType.val());\n        txtAmount.setValue(0);\n        checkValUpdate = false;\n        btnNew.css("display", "none");\n        //divbutton.css("width", "6%");\n        if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n          divAmount.css("width", "26%");\n        } else {\n          divAmount.css("width", "33.3%");\n        }\n        btnAdd.empty().append(VIS.Msg.getMsg("Add"));\n        busyDiv("hidden");\n      });\n\n      //Update Click on Update Model Panel............\n      modalBtnAdd.on("keydown", function (e) {\n        if (e.keyCode == 13) {\n          busyDiv("visible");\n          //Validate Control ...................\n          if (validateControl()) {\n            var dimTypeVal = cmbDimensionType.find("option:selected").val();\n            //Add Data against particular Dimension Type Value......................\n            if (dimTypeVal == "AC") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtAccountElement.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtAcctElementValue.getValue(), C_Element_ID, dimensionLineID, modalTxtb.getValue(), modalCmbBPartner.val());\n              modalCmbElement.val("-1");\n              modalTxtAcctElementValue.setValue("-1");\n              modalCmbBPartner.val("");\n              modalTxtb.setValue("-1");\n            } //Account\n            else if (dimTypeVal == "AY") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbActivity.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbActivity.find("option:selected").val(), -1, dimensionLineID, 0, "");\n              modalCmbActivity.val(-1);\n            } //Activity\n            else if (dimTypeVal == "BP") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbBPartner.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtb.getValue(), -1, dimensionLineID, 0, "");\n              modalCmbBPartner.val("");\n              modalTxtb.setValue("-1");\n            } //BPartner\n            else if (dimTypeVal == "LF" || dimTypeVal == "LT") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalLocAddress.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtLoc.getValue(), -1, dimensionLineID, 0, "");\n              modalLocAddress.val("");\n              modalTxtLoc.setValue("-1");\n            } //Location From//Location To\n            else if (dimTypeVal == "MC") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbCampaign.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbCampaign.find("option:selected").val(), -1, dimensionLineID, 0, "");\n              modalCmbCampaign.val(-1);\n            } //Campaign\n            else if (dimTypeVal == "OO" || dimTypeVal == "OT") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbOrg.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbOrg.find("option:selected").val(), -1, dimensionLineID, 0, "");\n              modalCmbOrg.val("-1");\n            } //Organization//Org Trx\n            else if (dimTypeVal == "PJ") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtProject.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtProj.getValue(), -1, dimensionLineID, 0, "");\n              modalTxtProject.val("");\n              modalTxtProj.setValue("-1");\n            } //Project\n            else if (dimTypeVal == "PR") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtProduct.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtProd.getValue(), -1, dimensionLineID, 0, "");\n              modalTxtProduct.val("");\n              modalTxtProd.setValue("-1");\n            } //Product\n            else if (dimTypeVal == "SA") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), "", txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), "", -1, dimensionLineID, 0, "");\n            } //Sub Account\n            else if (dimTypeVal == "SR") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbSalesRegion.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbSalesRegion.find("option:selected").val(), -1, dimensionLineID, 0, "");\n              modalCmbSalesRegion.val("-1");\n            } //Sales Region\n            else if (dimTypeVal == "U1" || dimTypeVal == "U2") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtAccountElement.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtAcctElementValue.getValue(), C_Element_ID, dimensionLineID, 0, "");\n              modalCmbElement.val("-1");\n              modalTxtAccountElement.val("");\n              modalTxtAcctElementValue.setValue("-1");\n            } //User List 1//User List 2\n            else if (dimTypeVal == "X1" || dimTypeVal == "X2" || dimTypeVal == "X3" || dimTypeVal == "X4" || dimTypeVal == "X5" || dimTypeVal == "X6" || dimTypeVal == "X7" || dimTypeVal == "X8" || dimTypeVal == "X9") {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbUserElement.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbUserElement.find("option:selected").val(), -1, dimensionLineID, 0, "");\n              modalCmbUserElement.val(-1);\n            } //User Element 1 to User Element 9\n          }\n        }\n        //busyDiv("hidden");\n      });\n      modalBtnAdd.on("click", function () {\n        busyDiv("visible");\n        //Validate Control ...................\n        if (validateControl()) {\n          var dimTypeVal = cmbDimensionType.find("option:selected").val();\n          //Add Data against particular Dimension Type Value......................\n          if (dimTypeVal == "AC") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtAccountElement.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtAcctElementValue.getValue(), C_Element_ID, dimensionLineID, modalTxtb.getValue(), modalCmbBPartner.val());\n            modalCmbElement.val("-1");\n            modalTxtAcctElementValue.setValue("-1");\n            modalCmbBPartner.val("");\n            modalTxtb.setValue("-1");\n          } //Account\n          else if (dimTypeVal == "AY") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbActivity.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbActivity.find("option:selected").val(), -1, dimensionLineID, 0, "");\n            modalCmbActivity.val(-1);\n          } //Activity\n          else if (dimTypeVal == "BP") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbBPartner.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtb.getValue(), -1, dimensionLineID, 0, "");\n            modalCmbBPartner.val("");\n            modalTxtb.setValue("-1");\n          } //BPartner\n          else if (dimTypeVal == "LF" || dimTypeVal == "LT") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalLocAddress.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtLoc.getValue(), -1, dimensionLineID, 0, "");\n            modalLocAddress.val("");\n            modalTxtLoc.setValue("-1");\n          } //Location From//Location To\n          else if (dimTypeVal == "MC") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbCampaign.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbCampaign.find("option:selected").val(), -1, dimensionLineID, 0, "");\n            modalCmbCampaign.val(-1);\n          } //Campaign\n          else if (dimTypeVal == "OO" || dimTypeVal == "OT") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbOrg.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbOrg.find("option:selected").val(), -1, dimensionLineID, 0, "");\n            modalCmbOrg.val("-1");\n          } //Organization//Org Trx\n          else if (dimTypeVal == "PJ") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtProject.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtProj.getValue(), -1, dimensionLineID, 0, "");\n            modalTxtProject.val("");\n            modalTxtProj.setValue("-1");\n          } //Project\n          else if (dimTypeVal == "PR") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtProduct.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtProd.getValue(), -1, dimensionLineID, 0, "");\n            modalTxtProduct.val("");\n            modalTxtProd.setValue("-1");\n          } //Product\n          else if (dimTypeVal == "SA") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), "", txtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), "", -1, dimensionLineID, 0, "");\n          } //Sub Account\n          else if (dimTypeVal == "SR") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbSalesRegion.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbSalesRegion.find("option:selected").val(), -1, dimensionLineID, 0, "");\n            modalCmbSalesRegion.val("-1");\n          } //Sales Region\n          else if (dimTypeVal == "U1" || dimTypeVal == "U2") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalTxtAccountElement.val(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalTxtAcctElementValue.getValue(), C_Element_ID, dimensionLineID, 0, "");\n            modalCmbElement.val("-1");\n            modalTxtAccountElement.val("");\n            modalTxtAcctElementValue.setValue("-1");\n          } //User List 1//User List 2\n          else if (dimTypeVal == "X1" || dimTypeVal == "X2" || dimTypeVal == "X3" || dimTypeVal == "X4" || dimTypeVal == "X5" || dimTypeVal == "X6" || dimTypeVal == "X7" || dimTypeVal == "X8" || dimTypeVal == "X9") {\n            addDimensionAmount(cmbDimensionType.find("option:selected").text(), modalCmbUserElement.find("option:selected").text(), modalTxtAmount.getValue(), recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), modalCmbUserElement.find("option:selected").val(), -1, dimensionLineID, 0, "");\n            modalCmbUserElement.val(-1);\n          } //User Element 1 to User Element 9\n        }\n        //busyDiv("hidden");\n      });\n\n      //Validate Numeric Content on KeyPress..............\n      //txtTotalAmount.getControl().on("keypress", function (e) {\n      //    if ((e.keyCode >= 48 && e.keyCode <= 57) || e.keyCode == 45 || e.keyCode == 46) {\n      //        return true;\n      //    }\n      //    else { return false; }\n\n      //});\n\n      // changes done to allow negative value also\n      //txtAmount.getControl().on("keypress", function (e) {\n      //    if ((e.keyCode >= 48 && e.keyCode <= 57) || e.keyCode == 45 || e.keyCode == 46) {\n      //        return true;\n      //    }\n      //    else { return false; }\n\n      //});\n\n      // changes done to allow negative value also\n      //modalTxtAmount.getControl().on("keypress", function (e) {\n      //    if ((e.keyCode >= 48 && e.keyCode <= 57) || e.keyCode == 45 || e.keyCode == 46) {\n      //        return true;\n      //    }\n      //    else { return false; }\n\n      //});\n      modalBtnNew.on("click", function () {\n        checkValUpdate = false;\n        modalDiv.css("display", "none");\n      });\n      modalBtnNew.on("keydown", function (e) {\n        if (e.keyCode == 13) {\n          checkValUpdate = false;\n          modalDiv.css("display", "none");\n        }\n      });\n      //Grid Paging Click.............................\n      ulStatusdimension.on(VIS.Events.onTouchStartOrClick, "LI", function (e) {\n        busyDiv("visible");\n        if ($(e.target).attr("action") == "first") {\n          if (pageNoOrder != 1) {\n            pageNoOrder = 1;\n            getDimensionLine(arrAcctSchemaID, null, function (temp) {\n              loadData(temp);\n              cmbStausRecordCount.val(pageNoOrder);\n            });\n          }\n        } else if ($(e.target).attr("action") == "prev") {\n          if (pageNoOrder != 1) {\n            pageNoOrder--;\n            getDimensionLine(arrAcctSchemaID, null, function (temp) {\n              loadData(temp);\n              cmbStausRecordCount.val(pageNoOrder);\n            });\n            //loadData(getDimensionLine(arrAcctSchemaID));\n            //cmbStausRecordCount.val(pageNoOrder);\n          }\n        } else if ($(e.target).attr("action") == "next") {\n          var totRec = calculateNoofPages();\n          if (pageNoOrder >= totRec) {\n            busyDiv("hidden");\n            return;\n          }\n          pageNoOrder++;\n          getDimensionLine(arrAcctSchemaID, null, function (temp) {\n            loadData(temp);\n            cmbStausRecordCount.val(pageNoOrder);\n          });\n          //loadData(getDimensionLine(arrAcctSchemaID));\n          //cmbStausRecordCount.val(pageNoOrder);\n        } else if ($(e.target).attr("action") == "last") {\n          var totRec = calculateNoofPages();\n          if (pageNoOrder >= totRec) {\n            busyDiv("hidden");\n            return;\n          }\n          pageNoOrder = totRec;\n          getDimensionLine(arrAcctSchemaID, null, function (temp) {\n            loadData(temp);\n            cmbStausRecordCount.val(pageNoOrder);\n          });\n          //loadData(getDimensionLine(arrAcctSchemaID));\n          //cmbStausRecordCount.val(pageNoOrder);\n        }\n        busyDiv("hidden");\n      });\n      cmbStausRecordCount.on("change", function () {\n        busyDiv("visible");\n        if (pageNoOrder != cmbStausRecordCount.val()) {\n          pageNoOrder = cmbStausRecordCount.val();\n          getDimensionLine(arrAcctSchemaID, null, function (temp) {\n            loadData(temp);\n            cmbStausRecordCount.val(pageNoOrder);\n          });\n          ////loadData(getDimensionLine(arrAcctSchemaID));\n          ////cmbStausRecordCount.val(pageNoOrder);\n        }\n        busyDiv("hidden");\n      });\n      btnOk.on("click", function () {\n        busyDiv("visible");\n        // handle the cases of negative amount.\n        if (Math.abs(parseFloat(txtTotal.getValue())) > Math.abs(parseFloat(txtTotalAmount.getValue()))) {\n          VIS.ADialog.warn("LineTotalNotGrater");\n          txtTotalAmount.getControl().focus();\n          busyDiv("hidden");\n        } else {\n          if (txtTotalAmount.getValue() != "" && txtTotalAmount.getValue() != 0) {\n            arrAcctSchemaID = [];\n            if (cmbAcctSchema.val() == 0) {\n              arrAcctSchemaID = allAcctSchemaID;\n            } else {\n              arrAcctSchemaID[0] = cmbAcctSchema.val();\n            }\n            insertDimensionAmountLine(C_DimAmt_ID, txtTotalAmount.getValue(), -1, arrAcctSchemaID, "", "", "", -1, -1, -1, 0, "", 0, function () {\n              self.onClosing(C_DimAmt_ID);\n              ch.close();\n            });\n          } else {\n            self.onClosing(C_DimAmt_ID);\n            ch.close();\n          }\n        }\n      });\n    }\n\n    /* Send the File details to Controller*/\n    function UploadFileReadAndImport(_result) {\n      if (_result != null) {\n        if (_result._filename == null || _result._filename == "" || _result._path == null || _result._path == "") {\n          return;\n        } else if (_result._error != null && _result._error != "") {\n          VIS.ADialog.info(_result._error, null, "", "");\n          return;\n        } else {\n          var _path = _result._path;\n          var _filename = _result._filename;\n          var dimType = cmbDimensionType.find("option:selected").val();\n          var acctschema = cmbAcctSchema.find("Option:selected").val();\n          var docAmount = parseFloat(txtTotalAmount.getValue());\n          var param = [];\n          param.push(_path);\n          param.push(dimType);\n          param.push(acctschema);\n          param.push(docAmount);\n          $.ajax({\n            url: VIS.Application.contextUrl + "AmountDivision/GetDataFromExcelOrText",\n            type: "POST",\n            datatype: "json",\n            contentType: "application/json; charset=utf-8",\n            async: false,\n            data: JSON.stringify(param),\n            success: function (result) {\n              var flag = true;\n              flag = callbackReadFileData(result);\n              if (count == 0 && flag) {\n                VIS.ADialog.warn("VIS_InCorrectData", null, "", "");\n              }\n            },\n            error: function () {\n              $bsyDiv[0].style.visibility = "hidden";\n              VIS.ADialog.info(VIS.Msg.getMsg("error"), null, "", "");\n            }\n          });\n          //$bsyDiv[0].style.visibility = "hidden";\n        }\n      }\n    }\n    ;\n\n    /* bind the Excel records into grid */\n    function callbackReadFileData(data) {\n      var amount = parseFloat(txtTotalAmount.getValue());\n      data = JSON.parse(data);\n      var amountExcel = parseFloat(data.result[0]["TotalAmount"]);\n      if (amount > 0 && amountExcel > amount || amount < 0 && Math.abs(amountExcel) > Math.abs(amount)) {\n        VIS.ADialog.warn("LineTotalNotGrater");\n        busyDiv("hidden");\n        return false;\n      } else {\n        count = 0;\n        for (var i = 0; i < data.result.length; i++) {\n          var dimTypeVal = cmbDimensionType.find("option:selected").val();\n          if (dimTypeVal == "AY" || dimTypeVal == "BP" || dimTypeVal == "MC" || dimTypeVal == "OO" || dimTypeVal == "OT" || dimTypeVal == "PJ" || dimTypeVal == "PR" || dimTypeVal == "SR") {\n            if (parseInt(data.result[i]["Record_ID"]) > 0) {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), data.result[i]["Search Key/Name"], data.result[i]["Amount"], recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), data.result[i]["Record_ID"], -1, dimensionLineID, 0, "");\n              count++;\n            }\n          } else if (dimTypeVal == "U1" || dimTypeVal == "U2" || dimTypeVal == "AC") {\n            if (data.result[i]["AccoutId"] != 0 && data.result[i]["BPartnerId"] != 0) {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), data.result[i]["AccountValue"], data.result[i]["Amount"], recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), data.result[i]["AccoutId"], data.result[i]["C_Element_ID"], dimensionLineID, data.result[i]["BPartnerId"], data.result[i]["Search Key/Name"]);\n              modalCmbElement.val("-1");\n              modalTxtAccountElement.val("");\n              modalTxtAcctElementValue.setValue("-1");\n              count++;\n            }\n          } //User List 1//User List 2\n          else if (dimTypeVal == "X1" || dimTypeVal == "X2" || dimTypeVal == "X3" || dimTypeVal == "X4" || dimTypeVal == "X5" || dimTypeVal == "X6" || dimTypeVal == "X7" || dimTypeVal == "X8" || dimTypeVal == "X9") {\n            if (parseInt(data.result[i]["Record_ID"]) != 0) {\n              addDimensionAmount(cmbDimensionType.find("option:selected").text(), data.result[i]["Search Key/Name"], data.result[i]["Amount"], recid, cmbAcctSchema.find("Option:selected").val(), cmbDimensionType.find("option:selected").val(), data.result[i]["Record_ID"], -1, dimensionLineID, 0, "");\n              modalCmbUserElement.val(-1);\n              count++;\n            }\n          }\n        }\n        busyDiv("hidden");\n      }\n    }\n    ;\n    function hideShowDimensionValue() {\n      if (cmbDimensionType.val() == "" || cmbDimensionType.val() == 0) {\n        divAmount.css("display", "none");\n        btnAdd.css("display", "none");\n        if (lblMaxAmount.html() == "") {\n          ch.getRoot().parent().css("height", "390px");\n        } else {\n          ch.getRoot().parent().css("height", "410px");\n        }\n      } else {\n        divAmount.css("display", "block");\n        btnAdd.css("display", "block");\n        if (lblMaxAmount.html() == "") {\n          ch.getRoot().parent().css("height", "448px");\n        } else {\n          ch.getRoot().parent().css("height", "469px");\n        }\n      }\n    }\n    //This Function Filter Data in Array against selected Accounting Schema............\n    function filterStoreDimensionData(storeDimensionData, acctSchema) {\n      if (storeDimensionData.length > 0) {\n        chkDuplicate = $.grep(storeDimensionData, function (e) {\n          return e.AcctSchema == acctSchema;\n        });\n        return chkDuplicate;\n      } else {\n        return storeDimensionData;\n      }\n    }\n    ;\n\n    //Validate Control For valid Input............\n    function onValidateOk() {\n      if ((cmbAcctSchema.val() == "" || cmbAcctSchema.val() == -1) && (cmbDimensionType.val() == null || cmbDimensionType.val() == 0)) {\n        if (txtTotalAmount.getValue() == "" && txtTotalAmount.getValue().trim().length == 0) {\n          VIS.ADialog.warn("ValidateTotalAmount");\n          txtTotalAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }\n    ;\n    function getMaxDimensionAmount() {\n      // busyDiv("visible");\n      var tempMax = false;\n      var tempacctName = "";\n      var tempacctAmt = "";\n      lblMaxAmount.empty();\n      lblMaxAmount.append("");\n      var maxData = VIS.dataContext.getJSONRecord("AmountDivision/GetDimMaxAmount", {\n        "dAmtId": C_DimAmt_ID\n      });\n      maxDimension = new VIS.DB.DataReader().toJson(JSON.stringify(maxData));\n      //var maxDimension = VIS.DB.executeReader(sql);\n      while (maxDimension.read()) {\n        if (maxDimension.getInt(0) != null) {\n          divMaxAmount.css("display", "block");\n          tempMax = true;\n          tempacctAmt = format.GetFormatedValue(maxDimension.getString(0));\n          if (tempacctName == "") {\n            tempacctName += maxDimension.getString(1);\n          } else {\n            tempacctName += "," + maxDimension.getString(1);\n          }\n        } else {\n          lblMaxAmount.append("");\n          //ch.getRoot().parent().css("height", "448px");\n          tempMax = false;\n          window.setTimeout(function () {\n            ch.getRoot().parent().css("height", "448px");\n          }, 200);\n        }\n      }\n      if (tempMax) {\n        if (tempacctName.length > 55) {\n          tempacctName = tempacctName.substring(0, 55) + "...";\n        }\n        lblMaxAmount.append(VIS.Msg.getMsg("MaxDimensionAmount") + " : " + tempacctAmt + " " + VIS.Msg.getMsg("ForAcctSchema") + " : " + tempacctName);\n        window.setTimeout(function () {\n          ch.getRoot().parent().css("height", "470px");\n        }, 200);\n      }\n      if (C_DimAmt_ID != 0) {\n        //var maxAmount = VIS.DB.executeScalar("select amount from c_dimAmt where c_dimamt_id=" + C_DimAmt_ID + "");\n        var maxAmount = VIS.dataContext.getJSONRecord("AmountDivision/GetDimAmount", {\n          "dAmtId": C_DimAmt_ID\n        });\n        // handle the cases of negative amount.\n        if (Math.abs(parseFloat(defaultVal)) > 0) {\n          txtTotalAmount.setValue(defaultVal);\n        } else {\n          txtTotalAmount.setValue(maxAmount);\n        }\n      } else {\n        if (defaultVal) {\n          txtTotalAmount.setValue(defaultVal);\n        } else {\n          txtTotalAmount.setValue(0);\n        }\n      }\n      if (lblMaxAmount.html() == "") {\n        divMaxAmount.css("display", "none");\n        ch.getRoot().parent().css("height", "448px");\n      }\n      // busyDiv("hidden");\n    }\n    function validateControl() {\n      if (txtTotalAmount.getValue() == 0 || txtTotalAmount.getValue() == "" && txtTotalAmount.getValue().trim().length == 0) {\n        VIS.ADialog.warn("ValidateTotalAmount");\n        txtTotalAmount.getControl().focus();\n        busyDiv("hidden");\n        return false;\n      } else if (cmbAcctSchema.val() == "" || cmbAcctSchema.val() == -1) {\n        VIS.ADialog.warn("ValidateAcctSchema");\n        cmbAcctSchema.focus();\n        busyDiv("hidden");\n        return false;\n      } else if (cmbDimensionType.val() == "" || cmbDimensionType.val() == 0) {\n        VIS.ADialog.warn("ValidateDimType");\n        cmbDimensionType.focus();\n        busyDiv("hidden");\n        return false;\n      } else if (txtTotalAmount.getValue() == 0 || txtTotalAmount.getValue() == "" && txtTotalAmount.getValue().trim().length == 0) {\n        VIS.ADialog.warn("ValidateTotalAmount");\n        txtTotalAmount.getControl().focus();\n        busyDiv("hidden");\n        return false;\n      }\n      if (!checkValUpdate) {\n        if (txtAmount.getValue() == 0 || txtAmount.getValue() == "" && txtAmount.getValue().trim().length == 0) {\n          VIS.ADialog.warn("ValidateAmount");\n          txtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } // handle the cases of negative amount.\n        else if (Math.abs(parseFloat(txtAmount.getValue())) > Math.abs(parseFloat(txtTotalAmount.getValue()))) {\n          VIS.ADialog.warn("LineTotalNotGrater");\n          txtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        }\n        // Handle the cases of Negative and Positive amount on Amount dimension control\n        else if (parseFloat(txtAmount.getValue()) > 0 && parseFloat(txtTotalAmount.getValue()) < 0) {\n          VIS.ADialog.warn("VIS_NegativeAmount");\n          txtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } else if (parseFloat(txtAmount.getValue()) < 0 && parseFloat(txtTotalAmount.getValue()) > 0) {\n          VIS.ADialog.warn("VIS_PositiveAmount");\n          txtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } else if (!validateDynamicControl()) {\n          busyDiv("hidden");\n          return false;\n        } else {\n          busyDiv("hidden");\n          return true;\n        }\n      } else if (checkValUpdate) {\n        if (modalTxtAmount.getValue() == 0 || modalTxtAmount.getValue() == "" && modalTxtAmount.getValue().trim().length == 0) {\n          VIS.ADialog.warn("ValidateAmount");\n          modalTxtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } // handle the cases of negative amount.\n        else if (Math.abs(parseFloat(modalTxtAmount.getValue())) > Math.abs(parseFloat(txtTotalAmount.getValue()))) {\n          VIS.ADialog.warn("LineTotalNotGrater");\n          modalTxtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        }\n        // Handle the cases of Negative and Positive amount on Amount dimension control\n        else if (parseFloat(modalTxtAmount.getValue()) > 0 && parseFloat(txtTotalAmount.getValue()) < 0) {\n          VIS.ADialog.warn("VIS_NegativeAmount");\n          txtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } else if (parseFloat(modalTxtAmount.getValue()) < 0 && parseFloat(txtTotalAmount.getValue()) > 0) {\n          VIS.ADialog.warn("VIS_PositiveAmount");\n          txtAmount.getControl().focus();\n          busyDiv("hidden");\n          return false;\n        } else if (!validateDynamicControl()) {\n          busyDiv("hidden");\n          return false;\n        } else {\n          busyDiv("hidden");\n          return true;\n        }\n      } else {\n        busyDiv("hidden");\n        return true;\n      }\n    }\n    ;\n    function validateDynamicControl() {\n      if (cmbDimensionType.val() != 0) {\n        if (!checkValUpdate) {\n          if (cmbDimensionType.val() == "AC") {\n            //if (cmbElement.val() == -1 || cmbElement.val() == null) {\n            //    VIS.ADialog.warn("ValidateElement");\n            //    cmbElement.focus();\n            //    busyDiv("hidden");\n            //    return false;\n            //}\n            //else\n            if (txtAccountElement.val() == "") {\n              VIS.ADialog.warn("ValidateAcctElement");\n              txtAccountElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Account\n          else if (cmbDimensionType.val() == "AY") {\n            if (cmbActivity.val() == -1 || cmbActivity.val() == null) {\n              VIS.ADialog.warn("ValidateActivity");\n              cmbActivity.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Activity\n          else if (cmbDimensionType.val() == "BP") {\n            if (cmbBPartner.val() == "") {\n              VIS.ADialog.warn("ValidateBPartner");\n              cmbBPartner.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //BPartner\n          else if (cmbDimensionType.val() == "LF" || cmbDimensionType.val() == "LT") {\n            if (locAddress.val() == "") {\n              VIS.ADialog.warn("ValidateLocation");\n              locAddress.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Location From//Location To\n          else if (cmbDimensionType.val() == "MC") {\n            if (cmbCampaign.val() == -1 || cmbCampaign.val() == null) {\n              VIS.ADialog.warn("ValidateCamp");\n              cmbCampaign.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Campaign\n          else if (cmbDimensionType.val() == "OO" || cmbDimensionType.val() == "OT") {\n            if (cmbOrg.val() == -1 || cmbOrg.val() == null) {\n              VIS.ADialog.warn("ValidateOrg");\n              cmbOrg.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Organization//Org Trx\n          else if (cmbDimensionType.val() == "PJ") {\n            if (txtProject.val() == "") {\n              VIS.ADialog.warn("ValidateProject");\n              txtProject.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Project\n          else if (cmbDimensionType.val() == "PR") {\n            if (txtProduct.val() == "") {\n              VIS.ADialog.warn("ValidateProduct");\n              txtProduct.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Product\n          else if (cmbDimensionType.val() == "SA") {\n            return true;\n          } //Sub Account\n          else if (cmbDimensionType.val() == "SR") {\n            if (cmbSalesRegion.val() == -1 || cmbSalesRegion.val() == null) {\n              VIS.ADialog.warn("ValidateSales");\n              cmbSalesRegion.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Sales Region\n          else if (cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n            if (txtAccountElement.val() == -1 || txtAccountElement.val() == null) {\n              VIS.ADialog.warn("ValidateElement");\n              txtAccountElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else if (txtAccountElement.val() == "") {\n              VIS.ADialog.warn("ValidateAcctElement");\n              txtAccountElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //User List 1//User List 2\n          else if (cmbDimensionType.val() == "X1" || cmbDimensionType.val() == "X2" || cmbDimensionType.val() == "X3" || cmbDimensionType.val() == "X4" || cmbDimensionType.val() == "X5" || cmbDimensionType.val() == "X6" || cmbDimensionType.val() == "X7" || cmbDimensionType.val() == "X8" || cmbDimensionType.val() == "X9") {\n            if (cmbUserElement.val() == -1 || cmbUserElement.val() == null) {\n              VIS.ADialog.warn("ValidateUElement");\n              cmbUserElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //User Element 1 to User Element 9\n        } else {\n          if (cmbDimensionType.val() == "AC") {\n            //if (modalCmbElement.val() == -1 || modalCmbElement.val() == null) {\n            //    VIS.ADialog.warn("ValidateElement");\n            //    modalCmbElement.focus();\n            //    busyDiv("hidden");\n            //    return false;\n            //}\n            //else\n            if (modalTxtAccountElement.val() == "") {\n              VIS.ADialog.warn("ValidateAcctElement");\n              modalTxtAccountElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Account\n          else if (cmbDimensionType.val() == "AY") {\n            if (modalCmbActivity.val() == -1 || modalCmbActivity.val() == null) {\n              VIS.ADialog.warn("ValidateActivity");\n              modalCmbActivity.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Activity\n          else if (cmbDimensionType.val() == "BP") {\n            if (modalCmbBPartner.val() == "") {\n              VIS.ADialog.warn("ValidateBPartner");\n              modalCmbBPartner.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //BPartner\n          else if (cmbDimensionType.val() == "LF" || cmbDimensionType.val() == "LT") {\n            if (modalLocAddress.val() == "") {\n              VIS.ADialog.warn("ValidateLocation");\n              modalLocAddress.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Location From//Location To\n          else if (cmbDimensionType.val() == "MC") {\n            if (modalCmbCampaign.val() == -1 || modalCmbCampaign.val() == null) {\n              VIS.ADialog.warn("ValidateCamp");\n              cmbCampaign.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Campaign\n          else if (cmbDimensionType.val() == "OO" || cmbDimensionType.val() == "OT") {\n            if (modalCmbOrg.val() == -1 || modalCmbOrg.val() == null) {\n              VIS.ADialog.warn("ValidateOrg");\n              modalCmbOrg.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Organization//Org Trx\n          else if (cmbDimensionType.val() == "PJ") {\n            if (modalTxtProject.val() == "") {\n              VIS.ADialog.warn("ValidateProject");\n              modalTxtProject.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Project\n          else if (cmbDimensionType.val() == "PR") {\n            if (modalTxtProduct.val() == "") {\n              VIS.ADialog.warn("ValidateProduct");\n              modalTxtProduct.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Product\n          else if (cmbDimensionType.val() == "SA") {\n            return true;\n          } //Sub Account\n          else if (cmbDimensionType.val() == "SR") {\n            if (modalCmbSalesRegion.val() == -1 || modalCmbSalesRegion.val() == null) {\n              VIS.ADialog.warn("ValidateSales");\n              modalCmbSalesRegion.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //Sales Region\n          else if (cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n            if (modalCmbElement.val() == -1 || modalCmbElement.val() == null) {\n              VIS.ADialog.warn("ValidateElement");\n              modalCmbElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else if (modalTxtAccountElement.val() == "") {\n              VIS.ADialog.warn("ValidateAcctElement");\n              modalTxtAccountElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //User List 1//User List 2\n          else if (cmbDimensionType.val() == "X1" || cmbDimensionType.val() == "X2" || cmbDimensionType.val() == "X3" || cmbDimensionType.val() == "X4" || cmbDimensionType.val() == "X5" || cmbDimensionType.val() == "X6" || cmbDimensionType.val() == "X7" || cmbDimensionType.val() == "X8" || cmbDimensionType.val() == "X9") {\n            if (modalCmbUserElement.val() == -1 || modalCmbUserElement.val() == null) {\n              VIS.ADialog.warn("ValidateUElement");\n              modalCmbUserElement.focus();\n              busyDiv("hidden");\n              return false;\n            } else {\n              busyDiv("hidden");\n              return true;\n            }\n          } //User Element 1 to User Element 9\n        }\n      }\n    }\n    ;\n    //This Function finally Save Data From Array to database on Ok Button Click................\n    //function insertDimensionAmount() {\n    //    arrDimensionEType = [];\n    //    //Fetch Distinct Accounting Schma from Array................\n    //    var acct = storeDimensionData.map(function (e) { return e.AcctSchema; });\n    //    arrAcctSchemaID = acct.filter(function (itm, i, acct) {\n    //        return i == acct.indexOf(itm);\n    //    });\n    //    //Fetch Distinct Dimension Type from Array against Accounting Schema............\n    //    var tempvar;\n    //    for (var j = 0; j < arrAcctSchemaID.length; j++) {\n    //        var element = filterStoreDimensionData(storeDimensionData, arrAcctSchemaID[j]).map(function (e) { return e.DimensionTypeVal; })\n    //        tempvar = element.filter(function (item, i, element) {\n    //            return i == element.indexOf(item);\n    //        });\n    //        arrDimensionEType[j] = tempvar[0];\n    //    }\n    //    if (storeDimensionData.length == 0) {\n    //        //if Array is Empty but user selected Accounting Schema and dimensionType........\n    //        //Then Override the value of arrAcctSchemaID and arrDimensionEType array......\n    //        if (cmbAcctSchema.val() != "" && cmbAcctSchema.val() != -1) {\n    //            if (cmbAcctSchema.val() == 0) {\n    //                arrAcctSchemaID = allAcctSchemaID;\n    //                for (var i = 0; i < arrAcctSchemaID.length; i++) {\n    //                    arrDimensionEType[i] = cmbDimensionType.val();\n    //                }\n    //            }\n    //            else {\n    //                arrAcctSchemaID = [cmbAcctSchema.val()];\n    //                arrDimensionEType = [cmbDimensionType.val()];\n    //            }\n\n    //        }\n    //    }\n    //    else {\n    //        //This Case Work is Accounting Schema is All..........\n    //        //Insert All Accounting Schema ID in arrAcctSchemaID array and Dimension Type Value in arrDimensionEType array.\n    //        if (arrAcctSchemaID[0] == 0) {\n    //            arrAcctSchemaID = allAcctSchemaID;\n    //            for (var i = 0; i < arrAcctSchemaID.length; i++) {\n    //                arrDimensionEType[i] = cmbDimensionType.val();\n    //            }\n    //        }\n\n    //    }\n\n    //    var loading = true;\n    //    var retval = false;\n    //    $.ajax({\n    //        dataType: "json",\n    //        type: "POST",\n    //        async: false,\n    //        url: VIS.Application.contextUrl + "AmountDivision/InsertDimensionAmount",\n    //        data: { "acctSchema": JSON.stringify(arrAcctSchemaID), "elementType": JSON.stringify(arrDimensionEType), "amount": txtTotalAmount.val(), "dimensionLine": JSON.stringify(storeDimensionData), "DimAmtId": C_DimAmt_ID },\n    //        success: function (result) {\n    //            if (result != -1) {\n    //                alert("Record saved successfully");\n    //                C_DimAmt_ID = result;\n    //                self.onClosing(C_DimAmt_ID);\n    //                retval = true;\n    //                loading = false;\n    //            }\n    //            else {\n    //                alert("Error while saving Dimension.Try again later..");\n    //                retval = false;\n    //                loading = false;\n    //            }\n    //        },\n    //        error: function () {\n    //            alert(VIS.Msg.getMsg(\'ErrorWhileSavingData\'));\n    //            bsyDiv[0].style.visibility = "hidden";\n    //            retval = false;\n    //            loading = false;\n    //        }\n\n    //    });\n\n    //    return retval;\n    //};\n\n    //This function Fetch All Dimension Line From DataBase...........\n    function getDimensionLine(acountingSchemaArr, onDataLoad, callback) {\n      var storeData = [];\n      //busyDiv("visible");\n      // window.setTimeout(function () {\n      //   window.setTimeout(function () {\n      $.ajax({\n        dataType: "json",\n        type: "POST",\n        url: VIS.Application.contextUrl + "AmountDivision/GetDiminsionLine",\n        data: {\n          "accountingSchema": JSON.stringify(acountingSchemaArr),\n          "dimensionID": C_DimAmt_ID,\n          "DimensionLineID": 0,\n          "pageNo": pageNoOrder,\n          "pSize": PAGE_SIZE\n        },\n        //     async: false,\n        success: function (result) {\n          if (result) {\n            result = JSON.parse(result);\n            refreshCmbDimension = true;\n            if (result.length > 0) {\n              for (var j = 0; j < result.length; j++) {\n                if (j == 0 && refreshCmbDimension) {\n                  totalRecords = result[j].TotalRecord;\n                  var countPG = calculateNoofPages();\n                  cmbStausRecordCount.empty();\n                  for (b = 1; b < countPG + 1; b++) {\n                    cmbStausRecordCount.empty().append(\'<option value=\' + b + \'>\' + b + \'</option>\');\n                  }\n                  cmbStausRecordCount.val(1);\n                  refreshCmbDimension = false;\n                }\n              }\n              if (onDataLoad) {\n                cmbAcctSchema.val(result[0].AcctSchema);\n                getDiminsionType(cmbAcctSchema.val(), function () {\n                  cmbDimensionType.val(result[0].DimensionTypeVal);\n                  getControl(cmbDimensionType.val());\n                  cmbValue = result[0].DimensionTypeVal;\n                  acctValue = result[0].AcctSchema;\n                  txtTotal.setValue(format.GetFormatedValue(result[0].TotalLineAmount));\n                });\n              }\n              if (!onDataLoad) {\n                cmbValue = result[0].DimensionTypeVal;\n                acctValue = result[0].AcctSchema;\n                txtTotal.setValue(format.GetFormatedValue(result[0].TotalLineAmount));\n              }\n            } else {\n              cmbStausRecordCount.empty().append(\'<option value="1">1</option>\');\n              txtTotal.setValue(format.GetFormatedValue(0));\n            }\n            //Show Default Value against first occuring Accounting Schema..............\n\n            recid = result.length;\n            txtAmount.setValue(0);\n            checkValUpdate = false;\n            btnAdd.empty().append(VIS.Msg.getMsg("Add"));\n            storeData = result;\n            if (callback) {\n              callback(result);\n            }\n\n            // busyDiv("hidden");\n          } else {\n            VIS.ADialog.error("ErrorGettingData");\n            busyDiv("hidden");\n          }\n        },\n        error: function () {\n          busyDiv("hidden");\n          VIS.ADialog.error(\'ErrorGettingData\');\n          return;\n        }\n      });\n\n      //busyDiv("hidden");\n      //}, 1000);\n      return storeData;\n      // }, 3000);\n    }\n    ;\n    function busyDiv(Value) {\n      bsyDiv[0].style.visibility = Value;\n    }\n    function calculateNoofPages() {\n      var noofPages = 1;\n      var rem = totalRecords % PAGE_SIZE;\n      if (rem != 0) {\n        noofPages = parseInt(totalRecords / PAGE_SIZE) + 1;\n      } else {\n        noofPages = parseInt(totalRecords / PAGE_SIZE);\n      }\n      return noofPages;\n    }\n    ;\n    function insertDimensionAmountLine(recordId, totalAmount, lineAmount, acctSchemaID, elementType, elementTypeID, dimensionName, dimensionValue, elementID, oldDimensionNameValue, C_BPartner_ID, bpartnerName, oldBPartnerID, callback) {\n      busyDiv("visible");\n      totalAmount = format.GetFormatedValue(totalAmount);\n      lineAmount = format.GetFormatedValue(lineAmount);\n      $.ajax({\n        dataType: "json",\n        type: "POST",\n        url: VIS.Application.contextUrl + "AmountDivision/InsertDimensionLine",\n        data: {\n          "recordId": recordId,\n          "totalAmount": totalAmount,\n          "lineAmount": lineAmount,\n          "acctSchemaID": JSON.stringify(acctSchemaID),\n          "elementTypeID": elementTypeID,\n          "dimensionValue": dimensionValue,\n          "elementID": elementID,\n          "oldDimensionName": oldDimensionNameValue,\n          "bpartner_ID": VIS.Utility.Util.getValueOfInt(C_BPartner_ID),\n          "oldBPartner_ID": oldBPartnerID\n        },\n        success: function (result) {\n          result = JSON.parse(result);\n          if (result[0] != "") {\n            C_DimAmt_ID = result[0];\n            getMaxDimensionAmount();\n            if (!checkValUpdate) {\n              // alert("Record saved successfully");\n              var g = w2ui[LineGridName].records.length;\n              if (elementTypeID == "AC" || elementTypeID == "U1" || elementTypeID == "U2") {\n                // format.GetFormatAmount(lineAmount, "init", this.dotFormatter)\n                w2ui[LineGridName].add({\n                  recid: g + 1,\n                  DimensionType: elementType,\n                  DimensionName: dimensionName,\n                  C_BPartner: bpartnerName,\n                  DimensionValueAmount: lineAmount,\n                  lineAmountID: result[1],\n                  CalculateDimValAmt: lineAmount,\n                  C_BPartner_ID: C_BPartner_ID\n                });\n              } else {\n                w2ui[LineGridName].add({\n                  recid: g + 1,\n                  DimensionType: elementType,\n                  DimensionName: dimensionName,\n                  DimensionValueAmount: lineAmount,\n                  lineAmountID: result[1],\n                  CalculateDimValAmt: lineAmount\n                });\n              }\n              var temp = format.GetFormatedValue((parseFloat(txtTotal.getValue()) + parseFloat(lineAmount)).toFixed(Precision));\n              txtTotal.setValue(temp);\n            } else {\n              VIS.ADialog.info("UpdatedDimLine");\n              w2ui[LineGridName].set(recid, {\n                DimensionName: dimensionName\n              });\n              w2ui[LineGridName].set(recid, {\n                DimensionValueAmount: lineAmount\n              });\n              w2ui[LineGridName].set(recid, {\n                CalculateDimValAmt: lineAmount\n              });\n              if (elementTypeID == "AC" || elementTypeID == "U1" || elementTypeID == "U2") {\n                w2ui[LineGridName].set(recid, {\n                  C_BPartner: bpartnerName\n                });\n                w2ui[LineGridName].set(recid, {\n                  C_BPartner_ID: C_BPartner_ID\n                });\n              }\n              var temp = format.GetFormatedValue((parseFloat(parseFloat(txtTotal.getValue()) - parseFloat(oldAmount)) + parseFloat(lineAmount)).toFixed(Precision));\n              txtTotal.setValue(temp);\n            }\n            busyDiv("hidden");\n          } else {\n            VIS.ADialog.error("ErrorGettingData");\n            busyDiv("hidden");\n          }\n          if (callback) {\n            callback();\n          }\n        },\n        error: function () {\n          busyDiv("hidden");\n          VIS.ADialog.error("ErrorGettingData");\n          retval = false;\n          loading = false;\n        }\n      });\n    }\n    //This Function Store Dimension Data in storeDimensionData Array.........................\n    function addDimensionAmount(DimensionType, DimensionName, Amount, recid, AccountSchemaVal, DimensionTypeVal, DimensionNameVal, ElementID, DimensionLineID, C_BPartner_ID, BpartnerName) {\n      Amount = format.GetFormatedValue(Amount.toFixed(Precision));\n      var chkDuplicate = "";\n      arrAcctSchemaID = [];\n      if (AccountSchemaVal == 0) {\n        arrAcctSchemaID = allAcctSchemaID;\n      } else {\n        arrAcctSchemaID[0] = AccountSchemaVal;\n      }\n      if (checkValUpdate) {\n        var paramStr = {};\n        paramStr.dTypeVal = DimensionTypeVal;\n        paramStr.dAmtId = C_DimAmt_ID;\n        paramStr.acctSchemaId = arrAcctSchemaID.toString();\n        paramStr.dLineId = DimensionLineID;\n        paramStr.dNameVal = DimensionNameVal;\n        paramStr.cbPartId = C_BPartner_ID;\n        var chkDuplicate = VIS.dataContext.getJSONRecord("AmountDivision/CheckDuplicate", paramStr);\n\n        //var sql = "select nvl(cline.c_dimamtline_id,0) as DimLineID from c_dimamt cd inner join c_dimamtaccttype cact on cd.c_dimamt_id=cact.c_dimamt_id " +\n        //\t" inner join c_dimamtline cline on cd.c_Dimamt_id=cline.c_dimamt_id and cact.c_dimamtaccttype_id=cline.c_dimamtaccttype_id " +\n        //\t" where cd.c_dimamt_id=" + C_DimAmt_ID + " and cact.elementtype=\'" + DimensionTypeVal + "\' and cact.c_acctschema_id in(" + arrAcctSchemaID.toString() + ") and cline.c_dimamtline_id not in (" + DimensionLineID + ") ";\n        //if (DimensionTypeVal == "AC") {\n        //\tsql += " and C_ElementValue_ID=" + DimensionNameVal + " AND NVL(C_BPartner_ID,0)=" + C_BPartner_ID;\n        //}//Account\n        //else if (DimensionTypeVal == "AY") { sql += " and C_Activity_ID =" + DimensionNameVal }//Activity\n        //else if (DimensionTypeVal == "BP") { sql += " and C_BPartner_ID=" + DimensionNameVal }//BPartner\n        //else if (DimensionTypeVal == "LF" || DimensionTypeVal == "LT") { sql += " and C_Location_ID=" + DimensionNameVal }//Location From//Location To\n        //else if (DimensionTypeVal == "MC") { sql += " and C_Campaign_ID=" + DimensionNameVal }//Campaign\n        //else if (DimensionTypeVal == "OO" || DimensionTypeVal == "OT") { sql += " and Org_ID=" + DimensionNameVal }//Organization//Org Trx\n        //else if (DimensionTypeVal == "PJ") { sql += " and C_Project_ID=" + DimensionNameVal }//Project\n        //else if (DimensionTypeVal == "PR") { sql += " and M_Product_ID=" + DimensionNameVal }//Product\n        //else if (DimensionTypeVal == "SA") { }//Sub Account\n        //else if (DimensionTypeVal == "SR") { sql += " and C_SalesRegion_ID=" + DimensionNameVal }//Sales Region\n        //else if (DimensionTypeVal == "U1" || DimensionTypeVal == "U2") {\n        //\tsql += " and C_ElementValue_ID=" + DimensionNameVal;\n        //\tif (C_BPartner_ID > 0) {\n        //\t\tsql += " AND NVL(C_BPartner_ID,0)=" + C_BPartner_ID;\n        //\t}\n        //}//User List 1//User List 2\n        //else if (DimensionTypeVal == "X1" || DimensionTypeVal == "X2" || DimensionTypeVal == "X3" || DimensionTypeVal == "X4" || DimensionTypeVal == "X5" || DimensionTypeVal == "X6" ||\n        //\tDimensionTypeVal == "X7" || DimensionTypeVal == "X8" || DimensionTypeVal == "X9") { sql += " and AD_Column_ID=" + DimensionNameVal }//User Element 1 to User Element 9\n        //chkDuplicate = VIS.DB.executeScalar(sql);\n        if (chkDuplicate == null || chkDuplicate < 1) {\n          var paramStr = DimensionLineID.toString();\n          var tempLineAmount = VIS.dataContext.getJSONRecord("AmountDivision/GetTempDimLineAmount", paramStr);\n          //var tempLineAmount = VIS.DB.executeScalar("select amount from c_dimamtline where c_dimamtline_id in (" + DimensionLineID + ") and rownum=1");\n\n          // handle the cases of negative amount.\n          if (Math.abs(parseFloat(txtTotal.getValue()) + parseFloat(Amount) - parseFloat(tempLineAmount)) <= Math.abs(parseFloat(txtTotalAmount.getValue()))) {\n            //Dimension Line Sum Must Equal to Total Amout..............\n            insertDimensionAmountLine(C_DimAmt_ID, txtTotalAmount.getValue(), Amount, arrAcctSchemaID, DimensionType, DimensionTypeVal, DimensionName, DimensionNameVal, ElementID, oldDimensionNameValue, C_BPartner_ID, BpartnerName, oldBPartnerID, function () {\n              afterSave();\n            });\n          } else {\n            VIS.ADialog.warn("LineTotalNotGrater");\n            modalTxtAmount.setValue(0);\n            modalTxtAmount.getControl().focus();\n            afterSave();\n          }\n        } else {\n          VIS.ADialog.warn("NameExists");\n          modalTxtAmount.setValue(0);\n          busyDiv("hidden");\n          return false;\n        }\n      } else {\n        //This Function Work When Inserting Dimension Value in Array......................  // handle the cases of negative amount.\n        if (Math.abs(parseFloat(txtTotal.getValue()) + parseFloat(Amount)) <= Math.abs(parseFloat(txtTotalAmount.getValue()))) {\n          //Dimension Line Sum Must Equal to Total Amout..............\n\n          //var sql = "select nvl(cline.c_dimamtline_id,0) as DimLineID from c_dimamt cd inner join c_dimamtaccttype cact on cd.c_dimamt_id=cact.c_dimamt_id " +\n          //\t" inner join c_dimamtline cline on cd.c_Dimamt_id=cline.c_dimamt_id and cact.c_dimamtaccttype_id=cline.c_dimamtaccttype_id " +\n          //\t" where cd.c_dimamt_id=" + C_DimAmt_ID + " and cact.elementtype=\'" + DimensionTypeVal + "\' and cact.c_acctschema_id in(" + arrAcctSchemaID.toString() + ")";\n          //if (DimensionTypeVal == "AC") {\n          //\tsql += " and C_ElementValue_ID=" + DimensionNameVal + " AND C_BPartner_ID=" + C_BPartner_ID;\n          //}//Account\n          //else if (DimensionTypeVal == "AY") { sql += " and C_Activity_ID =" + DimensionNameVal }//Activity\n          //else if (DimensionTypeVal == "BP") { sql += " and C_BPartner_ID=" + DimensionNameVal }//BPartner\n          //else if (DimensionTypeVal == "LF" || DimensionTypeVal == "LT") { sql += " and C_Location_ID=" + DimensionNameVal }//Location From//Location To\n          //else if (DimensionTypeVal == "MC") { sql += " and C_Campaign_ID=" + DimensionNameVal }//Campaign\n          //else if (DimensionTypeVal == "OO" || DimensionTypeVal == "OT") { sql += " and Org_ID=" + DimensionNameVal }//Organization//Org Trx\n          //else if (DimensionTypeVal == "PJ") { sql += " and C_Project_ID=" + DimensionNameVal }//Project\n          //else if (DimensionTypeVal == "PR") { sql += " and M_Product_ID=" + DimensionNameVal }//Product\n          //else if (DimensionTypeVal == "SA") { }//Sub Account\n          //else if (DimensionTypeVal == "SR") { sql += " and C_SalesRegion_ID=" + DimensionNameVal }//Sales Region\n          //else if (DimensionTypeVal == "U1" || DimensionTypeVal == "U2") {\n          //\tsql += " and C_ElementValue_ID=" + DimensionNameVal;\n          //\tif (C_BPartner_ID > 0) {\n          //\t\tsql += " AND C_BPartner_ID=" + C_BPartner_ID;\n          //\t}\n          //}//User List 1//User List 2\n          //else if (DimensionTypeVal == "X1" || DimensionTypeVal == "X2" || DimensionTypeVal == "X3" || DimensionTypeVal == "X4" || DimensionTypeVal == "X5" || DimensionTypeVal == "X6" ||\n          //\tDimensionTypeVal == "X7" || DimensionTypeVal == "X8" || DimensionTypeVal == "X9") { sql += " and AD_Column_ID=" + DimensionNameVal }//User Element 1 to User Element 9\n          var paramStr = {};\n          paramStr.dTypeVal = DimensionTypeVal;\n          paramStr.dAmtId = C_DimAmt_ID;\n          paramStr.acctSchemaId = arrAcctSchemaID.toString();\n          paramStr.dLineId = "0";\n          paramStr.dNameVal = DimensionNameVal;\n          paramStr.cbPartId = C_BPartner_ID;\n          chkDuplicate = VIS.dataContext.getJSONRecord("AmountDivision/CheckDuplicate", paramStr);\n          if (chkDuplicate == null || chkDuplicate < 1) {\n            insertDimensionAmountLine(C_DimAmt_ID, txtTotalAmount.getValue(), Amount, arrAcctSchemaID, DimensionType, DimensionTypeVal, DimensionName, DimensionNameVal, ElementID, 0, C_BPartner_ID, BpartnerName, 0, function () {\n              afterSave();\n            });\n          } else {\n            VIS.ADialog.warn("NameExists");\n            recid = recid - 1;\n            txtAmount.setValue(0);\n            busyDiv("hidden");\n            return false;\n          }\n        } else {\n          VIS.ADialog.warn("LineTotalNotGrater");\n          txtAmount.setValue(0);\n          txtAmount.getControl().focus();\n          recid = recid - 1;\n          afterSave();\n        }\n      }\n    }\n    ;\n    function afterSave() {\n      txtAmount.setValue(0);\n      checkValUpdate = false;\n      btnNew.css("display", "none");\n      modalDiv.css("display", "none");\n      //divbutton.css("width", "6%");\n      if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n        divAmount.css("width", "26%");\n      } else {\n        divAmount.css("width", "33.3%");\n      }\n      btnAdd.empty().append(VIS.Msg.getMsg("Add"));\n    }\n    this.vetoablechange = function (evt) {\n      if (evt.propertyName == "Amount") {\n        txtAmount.setValue(evt.newValue);\n      } else if (evt.propertyName == "ModalAmount") {\n        modalTxtAmount.setValue(evt.newValue);\n      }\n    };\n    //Calculate Dimension Line Amount....................\n    function calculateGrossAmount(data) {\n      var grossAmount = 0;\n      if (data != null) {\n        for (var i = 0; i < data.length; i++) {\n          grossAmount += parseFloat(data[i]["CalculateDimValAmt"]);\n        }\n      }\n      txtTotal.setValue(grossAmount);\n    }\n    ;\n\n    // Unbind Dynamic generated Control...............\n    function unBindControl() {\n      lblOrg = null;\n      cmbOrg = null;\n      lblActivity = null;\n      cmbActivity = null;\n      lblCampaign = null;\n      cmbCampaign = null;\n      lblSalesRegion = null;\n      cmbSalesRegion = null;\n      lblUserElement = null;\n      cmbUserElement = null;\n      lblBPartner = null;\n      cmbBPartner = null;\n      lblProject = null;\n      txtProject = null;\n      lblProduct = null;\n      txtProduct = null;\n      lblElement = null;\n      lblAccountElement = null;\n      cmbElement = null;\n      modalLblOrg = null;\n      modalCmbOrg = null;\n      modalLblActivity = null;\n      modalCmbActivity = null;\n      modalLblCampaign = null;\n      modalCmbCampaign = null;\n      modalLblSalesRegion = null;\n      modalCmbSalesRegion = null;\n      modalLblUserElement = null;\n      modalCmbUserElement = null;\n      modalLblBPartner = null;\n      modalCmbBPartner = null;\n      modalLblProject = null;\n      modalTxtProject = null;\n      modalLblProduct = null;\n      modalTxtProduct = null;\n      modalLblElement = null;\n      modalLblAccountElement = null;\n      modalCmbElement = null;\n      generateControl.empty();\n      modalGenerateControl.empty();\n      C_Element_ID = 0;\n      IsElementOk = true;\n    }\n    ;\n\n    //Generate Dynamic Control against DimensionType.................\n    function getControl(dimensionValue, datagrid) {\n      unBindControl();\n      if (dimensionValue == "AC") {\n        getAccountElement();\n      } //Account\n      else if (dimensionValue == "AY") {\n        getActivity();\n      } //Activity\n      else if (dimensionValue == "BP") {\n        getBPartner();\n      } //BPartner\n      else if (dimensionValue == "LF") {\n        getAddress();\n      } //Location From\n      else if (dimensionValue == "LT") {\n        getAddress();\n      } //Location To\n      else if (dimensionValue == "MC") {\n        getCampaign();\n      } //Campaign\n      else if (dimensionValue == "OO") {\n        getOrg(dimensionValue);\n      } //Organization\n      else if (dimensionValue == "OT") {\n        getOrg(dimensionValue);\n      } //Org Trx\n      else if (dimensionValue == "PJ") {\n        getProject();\n      } //Project\n      else if (dimensionValue == "PR") {\n        getProduct();\n      } //Product\n      else if (dimensionValue == "SA") {} //Sub Account\n      else if (dimensionValue == "SR") {\n        getSalesRegion();\n      } //Sales Region\n      else if (dimensionValue == "U1" || dimensionValue == "U2") {\n        getAccountElement();\n      } //User List 1//User List 2\n      else if (dimensionValue == "X1" || dimensionValue == "X2" || dimensionValue == "X3" || dimensionValue == "X4" || dimensionValue == "X5" || dimensionValue == "X6" || dimensionValue == "X7" || dimensionValue == "X8" || dimensionValue == "X9") {\n        getUserElement();\n      } //User Element 1 to User Element 9\n    }\n    ;\n    //Fetch Accounting Schema against Records Org ID......................\n    function getAccountingSchema(orgId, callback) {\n      //    busyDiv("visible");\n      $.ajax({\n        url: VIS.Application.contextUrl + "AmountDivision/GetAccountingSchema",\n        dataType: "json",\n        data: {\n          "OrgID": orgId\n        },\n        type: "POST",\n        error: function () {\n          busyDiv("hidden");\n          alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n          return;\n        },\n        success: function (data) {\n          var Sql = "";\n          var DefaultValue = data.dAcctId; //VIS.DB.executeScalar("select c_acctschema1_id from ad_clientinfo where ad_client_ID=" + VIS.Env.getCtx().getAD_Client_ID() + "");\n          var defaultCheck = false;\n          var res = JSON.parse(data.acctData);\n          if (res.Error) {\n            VIS.ADialog.error(res.Error);\n            busyDiv("hidden");\n            return;\n          }\n          cmbAcctSchema.empty().append(\'<option selected="selected" value="-1">Please select</option>\');\n          for (var i = 0; i < res.length; i++) {\n            if (i == 0) {\n              cmbAcctSchema.append(\'<option precision="\' + Precision + \'" value="0">ALL</option>\');\n            }\n            if (DefaultValue == res[i][\'Key\']) {\n              defaultCheck = true;\n            }\n            cmbAcctSchema.append($(\'<option precision="\' + res[i][\'Precision\'] + \'"></option>\').val(res[i][\'Key\']).html(res[i][\'Value\']));\n            allAcctSchemaID.push(res[i][\'Key\']);\n          }\n          if (defaultCheck) {\n            var dr = VIS.dataContext.getJSONRecord("AmountDivision/GetAcctSchemaByActId", {\n              "dAmtId": C_DimAmt_ID\n            });\n            if (dr == "" || dr == null || dr < 1) {\n              cmbAcctSchema.val(DefaultValue);\n              getDiminsionType(DefaultValue);\n            }\n          }\n          if (callback) {\n            busyDiv("visible");\n            callback();\n            busyDiv("hidden");\n          }\n          //busyDiv("hidden");\n        }\n      });\n    }\n    ;\n\n    // Funcion to Generate dynamic control\n    var getOrg = function (orgType) {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblOrg = $("<label>");\n      modalLblOrg = $("<label>");\n      var orgWhere = "";\n      // Get Organizations based on element type selected\n      if (orgType == "OO") {\n        orgWhere = " AND IsSummary=\'N\' AND IsCostCenter=\'N\' AND IsProfitCenter=\'N\'";\n      } else {\n        orgWhere = " AND IsSummary=\'N\' AND (IsCostCenter=\'Y\' OR IsProfitCenter=\'Y\')";\n      }\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "AD_Org_ID", 0, false, "AD_Org_ID<>0" + orgWhere);\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "AD_Org_ID", 0, false, "AD_Org_ID<>0" + orgWhere);\n      var cmb = new VIS.Controls.VComboBox("Org_ID", false, false, true, lookup, 50);\n      var modalCmb = new VIS.Controls.VComboBox("Org_ID", false, false, true, modalLookup, 50);\n      cmbOrg = cmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      cmbOrg.find(\'option[value=0]\').remove();\n      cmbOrg.attr("tabindex", "4");\n      modalCmbOrg = modalCmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      modalCmbOrg.attr("tabindex", "9");\n      lblOrg.append(VIS.Msg.translate(VIS.Env.getCtx(), "Org_ID"));\n      modalLblOrg.append(VIS.Msg.translate(VIS.Env.getCtx(), "Org_ID"));\n      divOrg = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      divOrg.css("width", "100%");\n      var divOrgCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      modalDivOrg = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      modalDivOrg.css("width", "100%");\n      var modalDivOrgCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      divOrg.append(divOrgCtrlWrap);\n      divOrgCtrlWrap.append(cmbOrg).append(lblOrg);\n      generateControl.append(divOrg);\n      modalDivOrg.append(modalDivOrg);\n      modalDivOrg.append(modalCmbOrg).append(modalLblOrg);\n      modalGenerateControl.append(modalDivOrg);\n      cmbOrg.focus();\n      modalCmbOrg.focus();\n    };\n    var getActivity = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblActivity = $("<label>");\n      modalLblActivity = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Activity_ID", 0, false, null);\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Activity_ID", 0, false, null);\n      var cmb = new VIS.Controls.VComboBox("C_Activity_ID", false, false, true, lookup, 50);\n      var modalCmb = new VIS.Controls.VComboBox("C_Activity_ID", false, false, true, modalLookup, 50);\n      cmbActivity = cmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      cmbActivity.attr("tabindex", "4");\n      modalCmbActivity = modalCmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      modalCmbActivity.attr("tabindex", "9");\n      lblActivity.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Activity_ID"));\n      divActivity = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      divActivity.css("width", "100%");\n      var divActivityCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      divActivity.append(divActivityCtrlWrap);\n      divActivityCtrlWrap.append(cmbActivity).append(lblActivity);\n      generateControl.append(divActivity);\n      cmbActivity.focus();\n      modalLblActivity.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Activity_ID"));\n      modalDivActivity = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      modalDivActivity.css("width", "100%");\n      var modalDivActivityCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      modalDivActivity.append(modalDivActivityCtrlWrap);\n      modalDivActivityCtrlWrap.append(modalCmbActivity).append(modalLblActivity);\n      modalGenerateControl.append(modalDivActivity);\n      modalCmbActivity.focus();\n    };\n    var getCampaign = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblCampaign = $("<label>");\n      modalLblCampaign = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Campaign_ID", 0, false, null);\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Campaign_ID", 0, false, null);\n      var cmb = new VIS.Controls.VComboBox("C_Campaign_ID", false, false, true, lookup, 50);\n      var modalCmb = new VIS.Controls.VComboBox("C_Campaign_ID", false, false, true, modalLookup, 50);\n      cmbCampaign = cmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      cmbCampaign.attr("tabindex", "4");\n      modalCmbCampaign = modalCmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      modalCmbCampaign.attr("tabindex", "9");\n      lblCampaign.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Campaign_ID"));\n      divCampaign = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      divCampaign.css("width", "100%");\n      var divCampaignCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      divCampaign.append(divCampaignCtrlWrap);\n      divCampaignCtrlWrap.append(cmbCampaign).append(lblCampaign);\n      generateControl.append(divCampaign);\n      cmbCampaign.focus();\n      modalLblCampaign.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Campaign_ID"));\n      modalDivCampaign = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      modalDivCampaign.css("width", "100%");\n      var modalDivCampaignCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      modalDivCampaign.append(modalDivCampaignCtrlWrap);\n      modalDivCampaignCtrlWrap.append(modalCmbCampaign).append(modalLblCampaign);\n      modalGenerateControl.append(modalDivCampaign);\n      modalCmbCampaign.focus();\n    };\n    var getSalesRegion = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblSalesRegion = $("<label>");\n      modalLblSalesRegion = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_SalesRegion_ID", 0, false, null);\n      var cmb = new VIS.Controls.VComboBox("C_SalesRegion_ID", false, false, true, lookup, 50);\n      cmbSalesRegion = cmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      cmbSalesRegion.attr("tabindex", "4");\n      lblSalesRegion.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_SalesRegion_ID"));\n      divSales = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      divSales.css("width", "100%");\n      var divSalesCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      divSales.append(divSalesCtrlWrap);\n      divSalesCtrlWrap.append(cmbSalesRegion).append(lblSalesRegion);\n      generateControl.append(divSales);\n      cmbSalesRegion.focus();\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_SalesRegion_ID", 0, false, null);\n      var modalCmb = new VIS.Controls.VComboBox("C_SalesRegion_ID", false, false, true, modalLookup, 50);\n      modalCmbSalesRegion = modalCmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      modalCmbSalesRegion.attr("tabindex", "9");\n      modalLblSalesRegion.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_SalesRegion_ID"));\n      modalDivSales = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      modalDivSales.css("width", "100%");\n      var modalDivSalesCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      modalDivSales.append(modalDivSalesCtrlWrap);\n      modalDivSalesCtrlWrap.append(modalCmbSalesRegion).append(modalLblSalesRegion);\n      modalGenerateControl.append(modalDivSales);\n      modalCmbSalesRegion.focus();\n    };\n    var getUserElement = function () {\n      cmbUserElement = $("<select>");\n      modalCmbUserElement = $("<select>");\n      //var sql = "select adt.ad_column_id,adt.columnname,adtab.TableName from c_acctschema_element ac inner join ad_column ad on ac.ad_column_id=ad.ad_column_id " +\n      //\t" inner join ad_column adt on ad.ad_table_ID=adt.ad_table_ID and adt.isactive=\'Y\' " +\n      //\t"  inner join ad_table adtab on adtab.ad_table_id=ad.ad_table_ID " +\n      //\t" where ac.c_acctschema_id=" + arrAcctSchemaID[0] + " and ac.elementtype=\'" + cmbDimensionType.find("option:selected").val() + "\' and adt.isidentifier=\'Y\' order by adt.ad_column_ID";\n      //var dr = VIS.DB.executeReader(sql);\n\n      var data = VIS.dataContext.getJSONRecord("AmountDivision/GetUserElement", {\n        "aid": arrAcctSchemaID[0],\n        "eType": cmbDimensionType.find("option:selected").val()\n      });\n      var drTbl = new VIS.DB.DataReader().toJson(JSON.stringify(data));\n      //var tblName = "";\n      //var colName = "";\n      //while (dr.read()) {\n      //\ttblName = dr.getString(2);\n      //\tif (colName == "") {\n      //\t\tcolName += dr.getString(1);\n      //\t}\n      //\telse {\n      //\t\tcolName += " ||\'_\'|| " + dr.getString(1);\n      //\t}\n      //}\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblUserElement = $("<label>");\n      cmbUserElement.empty().append(\'<option value=-1></option>\');\n      modalCmbUserElement.empty().append(\'<option value=-1></option>\');\n      //if (tblName != "") {\n      //\tvar sql = "SELECT " + tblName + "_ID ,(" + colName + ") as Name FROM " + tblName + " WHERE isactive=\'Y\' ORDER BY " + colName;   // Order by Identifier\n      //\tsql = VIS.MRole.addAccessSQL(sql, tblName, VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RW);\n      //var drTbl = VIS.DB.executeReader(sql);\n      while (drTbl.read()) {\n        cmbUserElement.append(\'<option value=\' + drTbl.getInt(0) + \'>\' + drTbl.getString(1) + \'</option>\');\n        modalCmbUserElement.append(\'<option value=\' + drTbl.getInt(0) + \'>\' + drTbl.getString(1) + \'</option>\');\n      }\n      //}\n      //var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "AD_Column_ID", 0, false, "AD_Column.IsKey=\'Y\' AND AD_Column.IsActive=\'Y\'");\n      //var cmb = new VIS.Controls.VComboBox("AD_Column_ID", false, false, true, lookup, 50);\n      //cmbUserElement = cmb.getControl();\n      cmbUserElement.attr("tabindex", "4");\n      lblUserElement.append(VIS.Msg.translate(VIS.Env.getCtx(), "AD_Column_ID"));\n      divUserElement = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      divUserElement.css("width", "100%");\n      var divUserElementCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      divUserElement.append(divUserElementCtrlWrap);\n      divUserElementCtrlWrap.append(cmbUserElement).append(lblUserElement);\n      generateControl.append(divUserElement);\n      cmbUserElement.focus();\n      modalLblUserElement = $("<label>");\n\n      //var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "AD_Column_ID", 0, false, "AD_Column.IsKey=\'Y\' AND AD_Column.IsActive=\'Y\'");\n      //var modalCmb = new VIS.Controls.VComboBox("AD_Column_ID", false, false, true, modalLookup, 50);\n      //modalCmbUserElement = modalCmb.getControl();\n      modalCmbUserElement.attr("tabindex", "9");\n      modalLblUserElement.append(VIS.Msg.translate(VIS.Env.getCtx(), "AD_Column_ID"));\n      modalDivUserElement = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      modalDivUserElement.css("width", "100%");\n      var modalDivUserElementCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n      modalDivUserElement.append(modalDivUserElementCtrlWrap);\n      modalDivUserElementCtrlWrap.append(modalCmbUserElement).append(modalLblUserElement);\n      modalGenerateControl.append(modalDivUserElement);\n      modalCmbUserElement.focus();\n    };\n    var getBPartner = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblBPartner = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_BPartner_ID", 0, false, null);\n      txtb = new VIS.Controls.VTextBoxButton("C_BPartner_ID", false, false, true, VIS.DisplayType.Search, lookup);\n      cmbBPartner = txtb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      cmbBPartner.attr("tabindex", "4");\n      lblBPartner.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID"));\n      divBPartner = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var divBPartnerCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var divBPartnerBtnWrap = $(\'<div class="input-group-append">\');\n      divBPartner.css("width", "100%");\n      divBPartner.append(divBPartnerCtrlWrap);\n      divBPartner.append(divBPartnerBtnWrap);\n      divBPartnerCtrlWrap.append(cmbBPartner).append(lblBPartner);\n      divBPartnerBtnWrap.append(txtb.getBtn(0)); //.append(txtb.getBtn(1));\n      generateControl.append(divBPartner);\n      modalLblBPartner = $("<label>");\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_BPartner_ID", 0, false, null);\n      modalTxtb = new VIS.Controls.VTextBoxButton("C_BPartner_ID", false, false, true, VIS.DisplayType.Search, modalLookup);\n      modalCmbBPartner = modalTxtb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      modalCmbBPartner.attr("tabindex", "9");\n      modalLblBPartner.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID"));\n      modalDivBPartner = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var modalDivBPartnerCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var modalDivBPartnerBtnWrap = $(\'<div class="input-group-append">\');\n      modalDivBPartner.css("width", "100%");\n      modalDivBPartner.append(modalDivBPartnerCtrlWrap);\n      modalDivBPartner.append(modalDivBPartnerBtnWrap);\n      modalDivBPartnerCtrlWrap.append(modalCmbBPartner).append(modalLblBPartner);\n      modalDivBPartnerBtnWrap.append(modalTxtb.getBtn(0)); //.append(modalTxtb.getBtn(1));\n      modalGenerateControl.append(modalDivBPartner);\n    };\n    var getAddress = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblAddress = $("<label>");\n      var lookups = new VIS.MLocationLookup(VIS.Env.getCtx(), windowNo);\n      txtLoc = new VIS.Controls.VLocation("C_Location_ID", false, false, true, VIS.DisplayType.Location, lookups);\n      locAddress = txtLoc.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      locAddress.attr("tabindex", "4");\n      lblAddress.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Location_ID"));\n      divLocation = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var divLocationCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var divLocationBtnWrap = $(\'<div class="input-group-append">\');\n      divLocation.css("width", "100%");\n      divLocation.append(divLocationCtrlWrap);\n      divLocation.append(divLocationBtnWrap);\n      divLocationCtrlWrap.append(locAddress).append(lblAddress);\n      divLocationBtnWrap.append(txtLoc.getBtn(1));\n      generateControl.append(divLocation);\n      modalLblAddress = $("<label>");\n      var modelLookups = new VIS.MLocationLookup(VIS.Env.getCtx(), windowNo);\n      modalTxtLoc = new VIS.Controls.VLocation("C_Location_ID", false, false, true, VIS.DisplayType.Location, modelLookups);\n      modalLocAddress = modalTxtLoc.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      modalLocAddress.attr("tabindex", "9");\n      modalLblAddress.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Location_ID"));\n      modalDivLocation = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var modalDivLocationCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var modalDivLocationBtnWrap = $(\'<div class="input-group-append">\');\n      modalDivLocation.css("width", "100%");\n      modalDivLocation.append(modalDivLocationCtrlWrap);\n      modalDivLocation.append(modalDivLocationBtnWrap);\n      modalDivLocationCtrlWrap.append(modalLocAddress).append(modalLblAddress);\n      modalDivLocationBtnWrap.append(modalTxtLoc.getBtn(1));\n      modalGenerateControl.append(modalDivLocation);\n    };\n    var getProject = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      //divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblProject = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Project_ID", 0, false, null);\n      txtProj = new VIS.Controls.VTextBoxButton("C_Project_ID", false, false, true, VIS.DisplayType.Search, lookup);\n      txtProject = txtProj.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      txtProject.attr("tabindex", "4");\n      lblProject.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Project_ID"));\n      divProject = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var divProjectCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var divProjectBtnWrap = $(\'<div class="input-group-append">\');\n      divProject.css("width", "100%");\n      divProject.append(divProjectCtrlWrap);\n      divProject.append(divProjectBtnWrap);\n      divProjectCtrlWrap.append(txtProject).append(lblProject);\n      divProjectBtnWrap.append(txtProj.getBtn(0)); //.append(txtProj.getBtn(1));\n      generateControl.append(divProject);\n      modalLblProject = $("<label>");\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Project_ID", 0, false, null);\n      modalTxtProj = new VIS.Controls.VTextBoxButton("C_Project_ID", false, false, true, VIS.DisplayType.Search, modalLookup);\n      modalTxtProject = modalTxtProj.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      modalTxtProject.attr("tabindex", "9");\n      modalLblProject.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Project_ID"));\n      modalDivProject = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var modalDivProjectCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var modalDivProjectBtnWrap = $(\'<div class="input-group-append">\');\n      modalDivProject.css("width", "100%");\n      modalDivProject.append(modalDivProjectCtrlWrap);\n      modalDivProject.append(modalDivProjectBtnWrap);\n      modalDivProjectCtrlWrap.append(modalTxtProject).append(modalLblProject);\n      modalDivProjectBtnWrap.append(modalTxtProj.getBtn(0)); //.append(modalTxtProj.getBtn(1));\n      modalGenerateControl.append(modalDivProject);\n    };\n    var getProduct = function () {\n      generateControl.css({\n        "width": "33.3%"\n      });\n      modalGenerateControl.css({\n        "width": "33.3%"\n      });\n      divAmount.css("width", "33.3%");\n      ////divbutton.css("width", "6%");\n      //modalDivAmount.css("width", "33.3%");\n      lblProduct = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "M_Product_ID", 0, false, null);\n      txtProd = new VIS.Controls.VTextBoxButton("M_Product_ID", false, false, true, VIS.DisplayType.Search, lookup);\n      txtProduct = txtProd.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      txtProduct.attr("tabindex", "4");\n      lblProduct.append(VIS.Msg.translate(VIS.Env.getCtx(), "M_Product_ID"));\n      divProduct = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var divProductCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var divProductBtnWrap = $(\'<div class="input-group-append">\');\n      divProduct.css("width", "100%");\n      divProduct.append(divProductCtrlWrap);\n      divProduct.append(divProductBtnWrap);\n      divProductCtrlWrap.append(txtProduct).append(lblProduct);\n      divProductBtnWrap.append(txtProd.getBtn(0)); //.append(txtProd.getBtn(1));\n      generateControl.append(divProduct);\n      modalLblProduct = $("<label>");\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "M_Product_ID", 0, false, null);\n      modalTxtProd = new VIS.Controls.VTextBoxButton("M_Product_ID", false, false, true, VIS.DisplayType.Search, modalLookup);\n      modalTxtProduct = modalTxtProd.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      modalTxtProduct.attr("tabindex", "9");\n      modalLblProduct.append(VIS.Msg.translate(VIS.Env.getCtx(), "M_Product_ID"));\n      modalDivProduct = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var modalDivProductCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var modalDivProductBtnWrap = $(\'<div class="input-group-append">\');\n      modalDivProduct.css("width", "100%");\n      modalDivProduct.append(modalDivProductCtrlWrap);\n      modalDivProduct.append(modalDivProductBtnWrap);\n      modalDivProductCtrlWrap.append(modalTxtProduct).append(modalLblProduct);\n      modalDivProductBtnWrap.append(modalTxtProd.getBtn(0)); //.append(modalTxtProd.getBtn(1));\n      modalGenerateControl.append(modalDivProduct);\n    };\n    var getAccountElement = function () {\n      C_Element_ID = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AmountDivision/GetElementID", {\n        "accountingSchema": JSON.stringify(arrAcctSchemaID)\n      }, null);\n      if (C_Element_ID == 0) {\n        IsElementOk = false;\n        return false;\n      }\n      generateControl.css({\n        "width": "66.6%"\n      });\n      modalGenerateControl.css({\n        "width": "66.6%",\n        "margin-right": "9px"\n      });\n      divAmount.css("width", "26.5%");\n      //divbutton.css("width", "6%");\n      modalDivAmount.css("width", "26.5%");\n      lblElement = $("<label>");\n      lblAccountElement = $("<label>");\n      lblElement.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Element_ID"));\n      lblAccountElement.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_ElementValue_ID"));\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Element_ID", 0, false, null);\n      var cmb = new VIS.Controls.VComboBox("C_Element_ID", false, false, true, lookup, 50);\n      cmbElement = cmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      cmbElement.attr("tabindex", "4");\n      divAccountElement = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      var divAccountElementCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      divAccountElement.css("width", "50%");\n      divAccountElement.append(divAccountElementCtrlWrap);\n      divAccountElementCtrlWrap.append(cmbElement).append(lblElement);\n      generateControl.append(divAccountElement);\n      divAccountElement.hide();\n      //cmbElement.focus();\n\n      var look = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, false, "C_Element_ID=" + C_Element_ID);\n      txtAcctElementValue = new VIS.Controls.VTextBoxButton("C_ElementValue_ID", false, false, true, VIS.DisplayType.Search, look);\n      txtAccountElement = txtAcctElementValue.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      txtAccountElement.attr("tabindex", "4");\n      divAccountElementVal = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var divAccountElementValCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var divAccountElementValBtnWrap = $(\'<div class="input-group-append">\');\n      divAccountElementVal.css("width", "50%");\n      divAccountElementVal.append(divAccountElementValCtrlWrap);\n      divAccountElementVal.append(divAccountElementValBtnWrap);\n      divAccountElementValCtrlWrap.append(txtAccountElement).append(lblAccountElement);\n      divAccountElementValBtnWrap.append(txtAcctElementValue.getBtn(0)); //.append(txtAcctElementValue.getBtn(1))\n\n      generateControl.append(divAccountElementVal);\n      cmbElement.on("change", function () {\n        var look = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, false, "C_Element_ID=" + cmbElement.val());\n        txtAccountElement.lookup = look;\n      });\n      txtAccountElement.focus();\n      lblBPartner = $("<label>");\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_BPartner_ID", 0, false, null);\n      txtb = new VIS.Controls.VTextBoxButton("C_BPartner_ID", false, false, true, VIS.DisplayType.Search, lookup);\n      cmbBPartner = txtb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      cmbBPartner.attr("tabindex", "5");\n      lblBPartner.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID"));\n      divBPartner = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var divBPartnerCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var divBPartnerBtnWrap = $(\'<div class="input-group-append">\');\n      divBPartner.css("width", "50%");\n      divBPartner.append(divBPartnerCtrlWrap);\n      divBPartner.append(divBPartnerBtnWrap);\n      divBPartnerCtrlWrap.append(cmbBPartner).append(lblBPartner);\n      divBPartnerBtnWrap.append(txtb.getBtn(0)); //.append(txtb.getBtn(1));\n      generateControl.append(divBPartner);\n      if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n        dGrid.showColumn("C_BPartner");\n        divAccountElementVal.css("width", "49%");\n        divBPartner.css("width", "49%").css("margin-left", \'9px\');\n        divAmount.css("width", "26%");\n        modalDivAmount.css("width", "26%");\n      } else {\n        divAccountElementVal.css("width", "51%");\n        divBPartner.css("width", "49%").css("margin-left", \'\');\n        divAmount.css("width", "26.5%");\n        modalDivAmount.css("width", "26.5%");\n      }\n      modalLblElement = $("<label>");\n      modalLblAccountElement = $("<label>");\n      modalLblElement.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Element_ID"));\n      modalLblAccountElement.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_ElementValue_ID"));\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_Element_ID", 0, false, null);\n      var modalCmb = new VIS.Controls.VComboBox("C_Element_ID", false, false, true, modalLookup, 50);\n      modalCmbElement = modalCmb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n      modalCmbElement.attr("tabindex", "9");\n      modalDivAccountElement = $("<div class=\'VIS-AMTD-formData input-group vis-input-wrap\'>");\n      var modalDivAccountElementCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      modalDivAccountElement.css("width", "50%");\n      modalDivAccountElement.append(modalDivAccountElementCtrlWrap);\n      modalDivAccountElementCtrlWrap.append(modalCmbElement).append(modalLblElement);\n      modalGenerateControl.append(modalDivAccountElement);\n      modalDivAccountElement.hide();\n      //modalCmbElement.focus();\n\n      var modalLook = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, false, "C_Element_ID=" + C_Element_ID);\n      modalTxtAcctElementValue = new VIS.Controls.VTextBoxButton("C_ElementValue_ID", false, false, true, VIS.DisplayType.Search, modalLook);\n      modalTxtAccountElement = modalTxtAcctElementValue.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      modalTxtAccountElement.attr("tabindex", "9");\n      modalDivAccountElementVal = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var modalDivAccEleValCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var modalDivAccEleValBtnWrap = $(\'<div class="input-group-append">\');\n      modalDivAccountElementVal.css("width", "50%");\n      modalDivAccountElementVal.append(modalDivAccEleValCtrlWrap);\n      modalDivAccountElementVal.append(modalDivAccEleValBtnWrap);\n      modalDivAccEleValCtrlWrap.append(modalTxtAccountElement).append(modalLblAccountElement);\n      modalDivAccEleValBtnWrap.append(modalTxtAcctElementValue.getBtn(0)); //.append(modalTxtAcctElementValue.getBtn(1))\n\n      modalGenerateControl.append(modalDivAccountElementVal);\n      modalCmbElement.on("change", function () {\n        var modalLook = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, false, "C_Element_ID=" + modalCmbElement.val());\n        modalTxtAccountElement.lookup = modalLook;\n      });\n      modalTxtAccountElement.focus();\n      modalLblBPartner = $("<label>");\n      var modalLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, VIS.DisplayType.TableDir, "C_BPartner_ID", 0, false, null);\n      modalTxtb = new VIS.Controls.VTextBoxButton("C_BPartner_ID", false, false, true, VIS.DisplayType.Search, modalLookup);\n      modalCmbBPartner = modalTxtb.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n      modalCmbBPartner.attr("tabindex", "10");\n      modalLblBPartner.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID"));\n      modalDivBPartner = $("<div class=\'VIS-AMTD-formData VIS-AMTD-InputBtns input-group vis-input-wrap\'>");\n      var modalDivBPartnerCtrlWrap = $(\'<div class="vis-control-wrap">\');\n      var modalDivBPartnerBtnWrap = $(\'<div class="input-group-append">\');\n      modalDivBPartner.css("width", "49%");\n      modalDivBPartner.append(modalDivBPartnerCtrlWrap);\n      modalDivBPartner.append(modalDivBPartnerBtnWrap);\n      if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n        modalDivAccountElementVal.css("width", "49%");\n        modalDivBPartner.css("width", "48%").css("margin-left", \'9px\');\n        modalDivAmount.css("width", "26%");\n      } else {\n        modalDivAccountElementVal.css("width", "51%");\n        modalDivBPartner.css("width", "49%");\n        modalDivAmount.css("width", "26.5%");\n      }\n      modalDivBPartnerCtrlWrap.append(modalCmbBPartner).append(modalLblBPartner);\n      modalDivBPartnerBtnWrap.append(modalTxtb.getBtn(0)); //.append(modalTxtb.getBtn(1));\n      modalGenerateControl.append(modalDivBPartner);\n    };\n    //End of Generate dynamic control\n\n    function getElements() {\n      var ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AmountDivision/GetElementID", {\n        "accountingSchema": JSON.stringify(arrAcctSchemaID)\n      }, null);\n    }\n\n    //Fetch Dimension Type against Selected Accounting Schema.................\n    function getDiminsionType(acctSchemaID, callback) {\n      busyDiv("visible");\n      $.ajax({\n        url: VIS.Application.contextUrl + "AmountDivision/GetDiminsionType",\n        dataType: "json",\n        //data: JSON.stringify({ "acctSchemaId": acctSchemaID, "allAcctIds": allAcctSchemaID}),// "{}",\n        data: "{}",\n        type: "POST",\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n          busyDiv("hidden");\n          return;\n        },\n        success: function (data) {\n          var Sql = "";\n          var res = JSON.parse(data);\n          if (res.Error) {\n            VIS.ADialog.error(res.Error);\n            busyDiv("hidden");\n            return;\n          }\n          //if (acctSchemaID == 0) {\n          //\tfor (var i = 0; i < allAcctSchemaID.length; i++) {\n          //\t\tif (i == 0) {\n          //\t\t\tSql = "SELECT Distinct ElementType, Name FROM C_AcctSchema_Element WHERE  c_acctschema_id =" + allAcctSchemaID[i] + " AND ElementType NOT IN(\'SA\',\'X1\',\'X2\',\'X3\',\'X4\',\'X5\',\'X6\',\'X7\',\'X8\',\'X9\') ";\n          //\t\t}\n          //\t\telse {\n          //\t\t\tSql += " AND ElementType IN(SELECT ElementType FROM C_AcctSchema_Element WHERE  c_acctschema_id =" + allAcctSchemaID[i] + " AND ElementType NOT IN(\'SA\',\'X1\',\'X2\',\'X3\',\'X4\',\'X5\',\'X6\',\'X7\',\'X8\',\'X9\')) ";\n          //\t\t}\n          //\t}\n          //\tSql += " ORDER BY ElementType";\n\n          //}\n          //else {\n          //\tSql = "SELECT Distinct ElementType, Name FROM C_AcctSchema_Element WHERE  c_acctschema_id =" + acctSchemaID + " AND ElementType<>\'SA\' ORDER BY ElementType";\n          //}\n          //Sql = VIS.MRole.addAccessSQL(Sql, "C_AcctSchema_Element", VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RW);\n          //var dr = VIS.DB.executeReader(Sql);\n          var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AmountDivision/GetElementType", {\n            "acctSchemaId": acctSchemaID,\n            "allAcctIds": allAcctSchemaID\n          }, null);\n          var dr = new VIS.DB.DataReader().toJson(data.eleType);\n          cmbDimensionType.empty().append(\'<option selected="selected" value="0">Please select</option>\');\n          while (dr.read()) {\n            for (var i = 0; i < res.length; i++) {\n              if (res[i]["Key"] == dr.getString(0)) {\n                cmbDimensionType.append($("<option></option>").val(res[i][\'Key\']).html(dr.getString(1))); // Displayed name from Accounting Schema elements\n                break;\n              }\n            }\n          }\n          if (callback) {\n            callback();\n            //calculateGrossAmount(acctSchemaData[0].TotalLineAmount);\n          }\n\n          //$.each(dimensionType, function () {\n          //    cmbDimensionType.append($("<option></option>").val(this[\'Key\']).html(this[\'Value\']));\n          //});\n          busyDiv("hidden");\n        }\n      });\n    }\n    ;\n\n    //Show Data in Grid.............\n    var loadData = function (data) {\n      // busyDiv("visible");\n      var grdCols = [];\n      var grdRows = [];\n      var rander = null;\n      var displayType = null;\n      grdCols.push({\n        field: "DimensionType",\n        caption: "Dimension Type",\n        size: "30%",\n        min: 217\n      });\n      grdCols.push({\n        field: "DimensionName",\n        caption: "Dimension Name",\n        size: "30%",\n        min: 217\n      });\n      grdCols.push({\n        field: "C_BPartner",\n        caption: "Business Partner",\n        size: "30%",\n        min: 217,\n        hidden: true\n      });\n      grdCols.push({\n        field: "DimensionValueAmount",\n        caption: "Dimension Value Amount",\n        size: "30%",\n        min: 216,\n        render: function (record, index, col_index) {\n          var val = VIS.Utility.Util.getValueOfDecimal(record["DimensionValueAmount"]);\n          return val.toLocaleString();\n        }\n      });\n      grdCols.push({\n        field: "Edit",\n        caption: "",\n        size: "5%",\n        resizable: false,\n        render: function () {\n          return \'<a  tabindex="8"><div><img src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/base/Edit_sub16.png" alt="Edit record" title="Edit record" style="opacity: 1;cursor:pointer"></div></a>\';\n        }\n      });\n      grdCols.push({\n        field: "Delete",\n        caption: "",\n        size: "5%",\n        resizable: false,\n        render: function () {\n          return \'<a id="a1" tabindex="14"><div><img src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/base/delete10.png" alt="Delete record" title="Delete record" style="opacity: 1;cursor:pointer"></div></a>\';\n        }\n      });\n      grdCols.push({\n        field: "lineAmountID",\n        caption: "lineAmountID",\n        hidden: true,\n        resizable: false,\n        min: 0,\n        max: 0\n      });\n      grdCols.push({\n        field: "CalculateDimValAmt",\n        caption: "CalculateDimValAmt",\n        hidden: true,\n        resizable: false,\n        min: 0,\n        max: 0\n      });\n      grdCols.push({\n        field: "C_BPartner_ID",\n        caption: "C_BPartner",\n        hidden: true,\n        resizable: false,\n        min: 0,\n        max: 0\n      });\n      grdname = \'gridAmountDivision\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      LineGridName = grdname;\n      w2utils.encodeTags(grdRows);\n      dGrid = $(datasec).w2grid({\n        name: grdname,\n        recordHeight: 20,\n        show: {\n          toolbar: false,\n          // indicates if toolbar is visible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: false,\n          // indicates if line numbers column is visible\n          selectColumn: false,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: grdCols,\n        records: data,\n        onClick: function (event) {\n          if (event.column == 4 && dGrid.records.length > 0) {\n            checkDelete = event.recid;\n            var templineID = dGrid.get(event.recid).lineAmountID;\n            var arrlineId = [];\n            if (templineID.search(\',\') == -1) {\n              arrlineId[0] = templineID;\n            } else {\n              arrlineId = templineID.split(",");\n            }\n            editRecord(arrlineId, dGrid.get(event.recid).CalculateDimValAmt, event.recid);\n          }\n          if (event.column == 5 && dGrid.records.length > 0) {\n            if (btnAdd.html() == VIS.Msg.getMsg("Update") && checkDelete == event.recid) {\n              VIS.ADialog.warn("PleaseFirstUpdateThisRecord");\n            } else {\n              deleteRecord(dGrid.get(event.recid).lineAmountID, dGrid.get(event.recid).CalculateDimValAmt, event.recid);\n            }\n          }\n        }\n      });\n      if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n        dGrid.showColumn("C_BPartner");\n      }\n      // busyDiv("hidden");\n    };\n\n    //Delete Dimension Line From Array.................\n    function deleteRecord(dimensionLineID, Amount, gridRecordID) {\n      VIS.ADialog.confirm("DeleteConfirm", true, "", "Confirm", function (result) {\n        if (result) {\n          busyDiv("visible");\n          VIS.dataContext.getJSONRecord("AmountDivision/SetDimLine", {\n            "dLineId": dimensionLineID,\n            "acctId": arrAcctSchemaID[0],\n            "dAmtId": C_DimAmt_ID\n          });\n\n          //VIS.DB.executeQuery("delete from c_dimamtline where c_dimamtline_id in(" + dimensionLineID + ")");\n          //var sql = "select nvl((sum(cd.amount)),0) as Amount from c_dimamtline cd inner join c_dimamtaccttype ct on cd.c_dimamt_id=ct.c_dimamt_id " +\n          //\t" and cd.c_dimamtaccttype_id=ct.c_dimamtaccttype_id " +\n          //\t" where cd.c_dimamt_id=" + C_DimAmt_ID + " and ct.c_acctSchema_id=" + arrAcctSchemaID[0] + "";\n          //var amount = VIS.DB.executeScalar(sql);\n          //VIS.DB.executeQuery("update c_dimamtaccttype set totaldimlineamout=" + amount + " where c_dimamt_id=" + C_DimAmt_ID + " and c_acctSchema_id=" + arrAcctSchemaID[0] + "");\n          w2ui[LineGridName].select(gridRecordID);\n          console.log("selected Rows : " + w2ui[LineGridName].getSelection().length);\n          w2ui[LineGridName].delete(true);\n          var temp = parseFloat((txtTotal.getValue() - parseFloat(Amount)).toFixed(Precision));\n          txtTotal.setValue(temp);\n          getMaxDimensionAmount();\n          busyDiv("hidden");\n        }\n      });\n    }\n    ;\n    //Edit Dimension Line........................\n    function editRecord(LineID, Amount, gridRecordID) {\n      busyDiv("visible");\n      var tempData = [];\n      modalDiv.css("display", "table");\n      //divbutton.css("width", "15.5%");\n      if (cmbDimensionType.val() == "AC" || cmbDimensionType.val() == "U1" || cmbDimensionType.val() == "U2") {\n        // divAmount.css("width", "17.5%");\n        modalDivAmount.css({\n          "width": "11%",\n          "padding-right": "0"\n        });\n      } else {\n        divAmount.css("width", "33.3%");\n        if (modalDivAmount != undefined && modalDivAmount != null) {\n          modalDivAmount.css("width", "33.3%");\n        }\n      }\n      // btnAdd.empty().append(VIS.Msg.getMsg("Update"));\n      checkValUpdate = true;\n      arrAcctSchemaID = [];\n      if (cmbAcctSchema.val() == 0) {\n        arrAcctSchemaID = allAcctSchemaID;\n      } else {\n        arrAcctSchemaID[0] = cmbAcctSchema.val();\n      }\n      $.ajax({\n        dataType: "json",\n        type: "POST",\n        url: VIS.Application.contextUrl + "AmountDivision/GetDiminsionLine",\n        data: {\n          "accountingSchema": JSON.stringify(arrAcctSchemaID),\n          "dimensionID": C_DimAmt_ID,\n          "DimensionLineID": LineID[0],\n          "pageNo": pageNoOrder,\n          "pSize": PAGE_SIZE\n        },\n        success: function (result) {\n          if (result) {\n            tempData = JSON.parse(result);\n            recid = gridRecordID;\n            dimensionLineID = LineID.toString();\n            var dimensionValue = cmbDimensionType.val();\n            DimensionNameVal = tempData[0].DimensionNameVal;\n            oldDimensionNameValue = tempData[0].DimensionNameVal;\n            modalTxtAmount.setValue(tempData[0].CalculateDimValAmt);\n            oldAmount = tempData[0].CalculateDimValAmt;\n            oldBPartnerID = tempData[0].C_BPartner_ID;\n            if (cmbDimensionType.val() == "AC") {\n              //modalCmbElement.val(tempData[0].ElementID);\n              C_Element_ID = tempData[0].ElementID;\n              modalTxtAcctElementValue.setValue(DimensionNameVal);\n              modalTxtb.setValue(tempData[0].C_BPartner_ID > 0 ? tempData[0].C_BPartner_ID : -1);\n            } //Account\n            else if (dimensionValue == "AY") {\n              modalCmbActivity.focus();\n              modalCmbActivity.val(DimensionNameVal);\n            } //Activity\n            else if (dimensionValue == "BP") {\n              modalTxtb.getControl(0).val(modalTxtb.getDisplay());\n              modalTxtb.setValue(DimensionNameVal);\n            } //BPartner\n            else if (dimensionValue == "LF" || dimensionValue == "LT") {\n              modalTxtLoc.getControl(0).val(modalTxtLoc.getDisplay());\n              modalTxtLoc.setValue(DimensionNameVal);\n            } //Location From//Location To\n            else if (dimensionValue == "MC") {\n              modalCmbCampaign.focus();\n              modalCmbCampaign.val(DimensionNameVal);\n            } //Campaign\n            else if (dimensionValue == "OO" || dimensionValue == "OT") {\n              modalCmbOrg.focus();\n              modalCmbOrg.val(DimensionNameVal);\n            } //Organization}//Org Trx\n            else if (dimensionValue == "PJ") {\n              modalTxtProj.getControl(0).val(modalTxtProj.getDisplay());\n              modalTxtProj.setValue(DimensionNameVal);\n            } //Project\n            else if (dimensionValue == "PR") {\n              modalTxtProd.getControl(0).val(modalTxtProd.getDisplay());\n              modalTxtProd.setValue(DimensionNameVal);\n            } //Product\n            else if (dimensionValue == "SA") {} //Sub Account\n            else if (dimensionValue == "SR") {\n              modalCmbSalesRegion.focus();\n              modalCmbSalesRegion.val(DimensionNameVal);\n            } //Sales Region\n            else if (dimensionValue == "U1" || dimensionValue == "U2") {\n              //modalCmbElement.focus();\n              //modalCmbElement.val(editArrayData[0]["ElementID"]);\n              //modalTxtAcctElementValue.getControl(0).val(modalTxtAcctElementValue.getDisplay());\n              //modalTxtAcctElementValue.setValue(DimensionNameVal);\n              C_Element_ID = tempData[0].ElementID;\n              modalTxtAcctElementValue.setValue(DimensionNameVal);\n              modalTxtb.setValue(tempData[0].C_BPartner_ID > 0 ? tempData[0].C_BPartner_ID : -1);\n            } //User List 1//User List 2\n            else if (dimensionValue == "X1" || dimensionValue == "X2" || dimensionValue == "X3" || dimensionValue == "X4" || dimensionValue == "X5" || dimensionValue == "X6" || dimensionValue == "X7" || dimensionValue == "X8" || dimensionValue == "X9") {\n              modalCmbUserElement.focus();\n              modalCmbUserElement.val(DimensionNameVal);\n            } //User Element 1 to User Element 9\n            busyDiv("hidden");\n          }\n        }\n      });\n    }\n    ;\n    function disposeComponent() {\n      contentDiv = bsyDiv = cmbAcctSchema = cmbDimensionType = cmbOrg = txtTotalAmount = txtAmount = btnAdd = btnNew = btnOk = divDesign = null;\n      checkDelete = null;\n      lblAcctSchema = lblDimensionType = lblTotalAmount = lblOrg = lblAmount = lblTotal = txtTotal = storeDimensionData = null;\n      recid = null;\n      checkValUpdate = null;\n      updateRecordId = null;\n      indexValue = null;\n      txtb = null;\n      arrAcctSchemaID = null;\n      arrDimensionEType = null;\n      ctrlDiv = null;\n      txtLoc = null;\n      txtProj = null;\n      txtProd = null;\n      grdname = null;\n      loadData = null;\n      datasec = null;\n      divOrg = null;\n      divAccountElement = null;\n      divAccountElementVal = null;\n      divActivity = null;\n      divBPartner = null;\n      divLocation = null;\n      divCampaign = null;\n      divProduct = null;\n      divProject = null;\n      divSales = null;\n      divUserElement = null;\n      divAmount = null;\n      gridBtnAdd = null;\n      gridBtnDelete = null;\n      demoCount = null;\n      allAcctSchemaID = null;\n      self = this;\n      divbutton = null;\n      modalDivButton = null;\n      modalDiv = null;\n      modalDivConent = null;\n      modalSpanClose = null;\n      divGrid = null;\n      modalDivOrg = null;\n      modalDivAccountElement = null;\n      modalDivAccountElementVal = null;\n      modalDivActivity = null;\n      modalDivBPartner = null;\n      modalDivLocation = null;\n      modalDivCampaign = null;\n      modalDivProduct = null;\n      modalDivProject = null;\n      modalDivSales = null;\n      modalDivUserElement = null;\n      modalDivAmount = null;\n      modalGenerateControl = null;\n      divStatusContainer = null;\n      ulStatusdimension = null;\n      liStatusFirst = null;\n      liStatusPrev = null;\n      cmbStausRecordCount = null;\n      liStatusNext = null;\n      liStatusLast = null;\n      refreshCmbDimension = null;\n      LineGridName = null;\n      dimensionLineID = null;\n      oldAmount = null;\n      C_DimAmt_ID = null;\n      PAGE_SIZE = null;\n      pageNoOrder = null;\n      lblMaxAmount = null;\n      divMaxAmount = null;\n      format = null;\n      cmbValue = null;\n      acctValue = null;\n      unBindControl();\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n      if (root != null) {\n        root.dialog(\'destroy\');\n        root.remove();\n      }\n      root = null;\n      this.disposeComponent = null;\n    }\n    ;\n    //function onClosing() {\n    //    disposeComponent();\n    //};\n    this.show = function () {\n      displayDialog();\n      ch.getRoot();\n      busyDiv("visible");\n      txtAmount.addVetoableChangeListener(this);\n      modalTxtAmount.addVetoableChangeListener(this);\n      getAccountingSchema(AD_Org_ID, function () {\n        getDimensionLine(allAcctSchemaID, true, function (tempData) {\n          loadData(tempData);\n          arrAcctSchemaID[0] = cmbAcctSchema.val();\n          getMaxDimensionAmount();\n          if (C_DimAmt_ID == 0 || tempData.length == 0) {\n            divAmount.css("display", "none");\n            btnAdd.css("display", "none");\n            ch.getRoot().parent().css("height", "390px");\n          } else {\n            divAmount.css("display", "block");\n            btnAdd.css("display", "block");\n            if (lblMaxAmount.html() == "") {\n              ch.getRoot().parent().css("height", "448px");\n            } else {\n              ch.getRoot().parent().css("height", "469px");\n            }\n          }\n          busyDiv("hidden");\n        });\n      }); //Id 0 is passed For testing Purpose......................\n      //  window.setTimeout(function () {\n      // var tempData = [];\n\n      ///}, 3000);\n    };\n    initializeComponent();\n    var displayDialog = function () {\n      ch.setContent(root);\n      //ch.setHeight(445);\n      ch.setWidth(750);\n      ch.setTitle(VIS.Msg.getMsg("AmountDimension"));\n      ch.setModal(true);\n      ch.setEnableResize(false);\n      ch.show();\n      ch.hideButtons();\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        self.onClosing(C_DimAmt_ID);\n        if (self.onClose) self.onClose();\n      };\n\n      //ch.onOkClick = function (e) {\n      //    var acct = storeDimensionData.map(function (e) { return e.AcctSchema; });\n      //    var acctSchema = acct.filter(function (itm, i, acct) {\n      //        return i == acct.indexOf(itm);\n      //    });\n      //    var acctAmount = 0;\n      //    var totalAmountCheck = true;\n      //    var msg = "";\n      //    for (var i = 0; i < acctSchema.length; i++) {\n      //        var acctSchemaData = filterStoreDimensionData(storeDimensionData, acctSchema[i]);\n      //        for (var j = 0; j < acctSchemaData.length; j++) {\n      //            acctAmount += parseFloat(acctSchemaData[j]["DimensionValueAmount"]);\n      //        }\n      //        if (parseFloat(acctAmount) > parseFloat(txtTotalAmount.val())) {\n      //            totalAmountCheck = false;\n      //            var sql = "select Name from c_acctschema where c_acctschema_id=" + acctSchema[i];\n      //            var dr = VIS.DB.executeReader(sql);\n      //            var errorAcctSchema = "";\n      //            while (dr.read()) {\n      //                errorAcctSchema = dr.getString(0);\n      //            }\n      //            msg = "Dimension Amount is greater than Total Amount in \'" + errorAcctSchema + "\' Accounting Schema.";\n\n      //            break;\n      //        }\n\n      //        acctAmount = 0;\n      //    }\n      //    if (totalAmountCheck) {\n\n      //        if (onValidateOk()) {\n\n      //            //insertDimensionAmount();\n      //            if (!insertDimensionAmount()) {\n      //                return false;\n      //            }\n      //        }\n      //        else { return false; }\n      //    }\n      //    else {\n      //        alert(msg);\n      //        return false;\n      //    }\n      //};\n\n      //ch.onCancelClick = function () {\n\n      //};\n    };\n  }\n  ;\n  VIS.AmountDivision = AmountDivision;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/amountdivision.js?')},"./Areas/VIS/Scripts/app/Framework/appointments.js":()=>{eval(';\n(function (VIS, $) {\n  function AppointmentsForm() {\n    /* To create new appointments and task form widows\r\n    * @ param {number} AD_Table_ID\r\n    * @ param {number} Record_ID\r\n    * @ param {number} s_Ad_User_ID :: selected user id\r\n    * @ param {string} s_User_Name :: selected user name\r\n    * @ param {Boolean} isTask or is Appointments\r\n    */\n    function initAppointments(AD_Table_ID, Record_ID, s_Ad_User_ID, s_User_Name, isTask, IsEmpployee) {\n      if (window.WSP) {\n        var divaptbusy = $("<div id=\'divAptBusy\' class=\'wsp-busy-indicater\'></div>");\n        $("body").append(divaptbusy);\n        if (isTask == false) {\n          divaptbusy.show();\n          WSP.AppointmentsForm.init(AD_Table_ID, Record_ID, s_Ad_User_ID, s_User_Name, divaptbusy, IsEmpployee);\n        } else {\n          divaptbusy.show();\n          WSP.TaskForm.init(AD_Table_ID, Record_ID, s_Ad_User_ID, s_User_Name, divaptbusy, IsEmpployee);\n        }\n      } else {\n        alert("please download WSP !!!");\n      }\n    }\n    ;\n    return {\n      init: initAppointments\n    };\n  }\n  ;\n  VIS.AppointmentsForm = AppointmentsForm();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/appointments.js?')},"./Areas/VIS/Scripts/app/Framework/archiveviewer.js":()=>{eval(';\n(function (VIS, $) {\n  VIS.Apps = VIS.Apps || {};\n  VIS.Apps.AForms = VIS.Apps.AForms || {};\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  function ArchiveViewer() {\n    this.log = VIS.Logging.VLogger.getVLogger("VIS.ArchiveViewer");\n    this.frame;\n    this.windowNo;\n    /** Archive Index\t\t*/\n    var index = 0;\n    /** Table direct\t\t*/\n    var gAD_Table_ID = 0;\n    /** Record direct\t\t*/\n    var gRecord_ID = 0;\n    var $self = this;\n    var toggle = false;\n    var toggleGen = false;\n    var toggleside = false;\n    var $root = $("<div class=\'vis-forms-container\' style=\'width: 100%; height: 100%; background-color: white;\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap" style="visibility: hidden"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var arrListColumns = [];\n    var dGrid = null;\n    var archiveId = 0;\n\n    //Query\n    var chkReportQ = null;\n    var lblBPartnerQ = null;\n    var lblProcessQ = null;\n    var lblTableQ = null;\n    var lblNameQ = null;\n    var lblDescriptionQ = null;\n    var lblCommentQ = null;\n    var lblCreatedByQ = null;\n    var lblCreatedOnQ = null;\n    var vSearchBPartnerQ = null;\n    var cmbTableQ = null;\n    var txtNameQ = null;\n    var txtDescriptionQ = null;\n    var txtCommentQ = null;\n    var cmbCreatedByQ = null;\n    var cmbProcess = null;\n    var dtpCreatedFromQ = null;\n    var dtpCreatedToQ = null;\n\n    //view\n\n    var lblCreatedBy = null;\n    var lblCreatedOn = null;\n    var lblName = null;\n    var lblDescription = null;\n    var lblComment = null;\n    var txtName = null;\n    var txtDescription = null;\n    var txtComment = null;\n    var txtCreatedBy = null;\n    var dtpCreatedOn = null;\n    var lblRecordsCount = null;\n    var btnOk = null;\n    var btnSave = null;\n    var btnNext = null;\n    var btnPre = null;\n    this.btnToggal = null;\n    var topLeftDiv = null;\n    var topRightDiv = null;\n    var topleftparaDiv = null;\n    var topleftInnerParaDiv = null;\n    var leftBottomDiv = null;\n    var rightTopDiv = null;\n    var rightBottomDiv = null;\n    var rightBottomSaveDiv = null;\n    var leftDivWidth = 260;\n    var minSideWidth = 50;\n\n    //window with-(sidediv with_margin from left+ space)\n    var selectLeftDivWidth = $(window).width() - leftDivWidth;\n    var selectDivFullWidth = $(window).width() - minSideWidth;\n    var sideDivHeight = $(window).height() - 193;\n    var gridHeight = $(window).height() - 382;\n    var rightparaHeight = $(window).height() - (gridHeight + 55 + 118);\n    function initializeComponent() {\n      chkReportQ = $("<label id=\'" + "lblReportQ_" + $self.windowNo + "\' class=\'vis-ec-col-lblchkbox\'><input id=\'" + "chkReportQ_" + $self.windowNo + "\' type=\'checkbox\' style=\'margin-left: 0px;\' class=\'VIS_Pref_automatic\'>" + VIS.Msg.translate(VIS.Env.getCtx(), "IsReport") + "</label>");\n      lblBPartnerQ = new VIS.Controls.VLabel();\n      lblProcessQ = new VIS.Controls.VLabel();\n      lblTableQ = new VIS.Controls.VLabel();\n      lblNameQ = new VIS.Controls.VLabel();\n      lblDescriptionQ = new VIS.Controls.VLabel();\n      lblCommentQ = new VIS.Controls.VLabel();\n      lblCreatedByQ = new VIS.Controls.VLabel();\n      lblCreatedOnQ = new VIS.Controls.VLabel();\n      var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), $self.windowNo, 0, VIS.DisplayType.Search, "C_BPartner_ID", 0, false, null);\n      vSearchBPartnerQ = new VIS.Controls.VTextBoxButton("C_BPartner_ID", false, false, true, VIS.DisplayType.Search, lookup);\n      cmbTableQ = new VIS.Controls.VComboBox(\'\', false, false, true);\n      cmbProcess = new VIS.Controls.VComboBox(\'\', false, false, true);\n      txtNameQ = new VIS.Controls.VTextBox("NameQ", false, false, true, 50, 50, "NameQ");\n      txtDescriptionQ = new VIS.Controls.VTextBox("DescriptionQ", false, false, true, 50, 50, "DescriptionQ");\n      txtCommentQ = new VIS.Controls.VTextBox("CommentQ", false, false, true, 50, 50, "CommentQ");\n      txtNameQ.getControl().val("%%");\n      txtDescriptionQ.getControl().val("%%");\n      txtCommentQ.getControl().val("%%");\n      cmbCreatedByQ = new VIS.Controls.VComboBox(\'\', false, false, true);\n      dtpCreatedFromQ = $("<input id=\'" + "dtpCreatedFromQ_" + $self.windowNo + "\' type=\'date\'>");\n      dtpCreatedToQ = $("<input id=\'" + "dtpCreatedToQ_" + $self.windowNo + "\' type=\'date\'>");\n      lblCreatedBy = new VIS.Controls.VLabel();\n      lblCreatedOn = new VIS.Controls.VLabel();\n      lblName = new VIS.Controls.VLabel();\n      lblDescription = new VIS.Controls.VLabel();\n      lblComment = new VIS.Controls.VLabel();\n      txtCreatedBy = new VIS.Controls.VTextBox("CreatedBy", false, true, true, 50, 50, "CreatedBy");\n      txtName = new VIS.Controls.VTextBox("Name", false, false, true, 50, 50, "Name");\n      txtDescription = new VIS.Controls.VTextBox("Description", false, false, true, 50, 50, "Description");\n      txtComment = new VIS.Controls.VTextArea("Comment", false, false, true, 200, 200);\n      dtpCreatedOn = $("<input id=\'" + "dtpCreatedOn_" + $self.windowNo + "\' readonly class=\'vis-gc-vpanel-table-readOnly\'>");\n      lblRecordsCount = new VIS.Controls.VLabel();\n      btnOk = $("<input id=\'" + "btnOk_" + $self.windowNo + "\' class=\'VIS_Pref_btn-2 vis-frm-button\' style=\' margin-top: 0px; margin-right: 0px;\' type=\'button\' value=\'Ok\'>");\n      btnSave = $("<input id=\'" + "btnSave_" + $self.windowNo + "\' class=\'VIS_Pref_btn-2\' style=\'margin-top: 0px;float: right;\' type=\'button\' value=\'Save\'>");\n      btnNext = $("<input id=\'" + "btnNext_" + $self.windowNo + "\' class=\'VIS_Pref_btn-2\' style=\'margin: 10px; display: none;\'  type=\'button\' value=\'>>\'>");\n      btnPre = $("<input id=\'" + "btnPre_" + $self.windowNo + "\' class=\'VIS_Pref_btn-2\' style=\'margin: 10px; display: none;\' type=\'button\' value=\'<<\'>");\n      btnSave.val(VIS.Msg.getMsg("Save"));\n      btnOk.val(VIS.Msg.getMsg("OK"));\n\n      //Left Div Design settings \n      var src = VIS.Application.contextUrl + "Areas/VIS/Images/base/arrow-left.png";\n      topLeftDiv = $("<div class=\'vis-archive-left-sidebar\' id=\'" + "topLeftDiv_" + $self.windowNo + "\'>" + "<div id=\'" + "topToggalDiv_" + $self.windowNo + "\' class=\'vis-archive-l-s-head\'>" + "<button id=\'" + "btnToggal_" + $self.windowNo + "\' class=\'vis-archive-sb-t-button\'><i class=\'vis vis-arrow-left\'></i></button></div></div>");\n      this.btnToggal = topLeftDiv.find("#btnToggal_" + $self.windowNo);\n      topleftparaDiv = $("<div class=\'vis-archive-l-s-content vis-leftsidebarouterwrap\' id=\'" + "topleftparaDiv_" + $self.windowNo + "\'>");\n      //topleftparaDiv.css("height", sideDivHeight);\n\n      topleftInnerParaDiv = $("<div  class=\'vis-archive-l-s-content-inner\' id=\'" + "topleftInnerParaDiv_" + $self.windowNo + "\'>");\n      topleftparaDiv.append(topleftInnerParaDiv);\n      topLeftDiv.append(topleftparaDiv);\n      topLeftDiv.css("width", leftDivWidth);\n      var tble = $("<table style=\'width: 100%\' class=\'vis-formouterwrpdiv\'>");\n      var tr = $("<tr>");\n      var td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      topleftInnerParaDiv.append(tble);\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(chkReportQ);\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblProcessQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font")).append(lblBPartnerQ.getControl().addClass("VIS-Search-hide").css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n      //lblProcessQ.getControl().hide();\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      var Leftformfieldbtnwrap = $(\'<div class="input-group-append">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldwrp.append(Leftformfieldbtnwrap);\n      Leftformfieldctrlwrp.append(vSearchBPartnerQ.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \').attr(\'data-hasbtn\', \' \').addClass("VIS-Search-hide"));\n      Leftformfieldbtnwrap.append(vSearchBPartnerQ.getBtn(0).addClass("VIS-Search-hide"));\n      Leftformfieldctrlwrp.append(lblBPartnerQ.getControl().addClass("VIS-Search-hide").addClass("VIS_Pref_Label_Font"));\n      Leftformfieldctrlwrp.append(cmbProcess.getControl());\n      Leftformfieldctrlwrp.append(lblProcessQ.getControl().addClass("VIS_Pref_Label_Font"));\n      lblProcessQ.getControl().hide();\n      cmbProcess.getControl().hide();\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblTableQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(cmbTableQ.getControl());\n      Leftformfieldctrlwrp.append(lblTableQ.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 2px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblNameQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtNameQ.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(lblNameQ.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblDescriptionQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtDescriptionQ.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(lblDescriptionQ.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblCommentQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtCommentQ.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(lblCommentQ.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblCreatedByQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(cmbCreatedByQ.getControl());\n      Leftformfieldctrlwrp.append(lblCreatedByQ.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td style=\'padding: 0px 10px 2px;\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblCreatedOnQ.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(dtpCreatedFromQ);\n      Leftformfieldctrlwrp.append(lblCreatedOnQ.getControl().addClass("VIS_Pref_Label_Font"));\n      tr = $("<tr>");\n      td = $("<td style=\'padding: 0px 10px 0px;\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(dtpCreatedToQ);\n\n      //Bottom Ok Button for search\n      leftBottomDiv = $("<div class=\'vis-frm-bot-btn-wrp\' id=\'" + "leftBottomDiv_" + $self.windowNo + "\'>");\n      topLeftDiv.append(leftBottomDiv);\n      leftBottomDiv.append(btnOk);\n\n      //Right Div Setting\n      topRightDiv = $("<div id=\'" + "topRightDiv_" + $self.windowNo + "\' class=\'vis-frm-grid-wrap\'>");\n      //topRightDiv.css("width", selectLeftDivWidth);\n      //topRightDiv.css("height", sideDivHeight);\n\n      //check Arebic Calture\n      //if (VIS.Application.isRTL) {\n      //    topRightDiv.css("float", "left");\n      //    btnSave.css("float", "left");\n      //    chkReportQ.css("margin-left", "5px");\n      //}\n\n      rightTopDiv = $("<div id=\'" + "rightTopDiv_" + $self.windowNo + "\' style=\'float: left; width: 100%; height: 55%;\'>");\n      rightBottomDiv = $("<div id=\'" + "rightBottomDiv_" + $self.windowNo + "\' style=\'float: left; width: 100%;margin-top: 5px; margin-bottom: 10px; \'>");\n      //rightTopDiv.css("height", gridHeight);\n      rightTopDiv.css("height", "calc(100% - 274px)");\n      rightBottomDiv.css("height", rightparaHeight);\n      tble = $("<table style=\'width: 100%; \' class=\'vis-formouterwrpdiv\'>");\n      tr = $("<tr>");\n      td = $("<td colspan=\'4\' style=\'text-align: right; height: 10px;\'>"); //55px\n      rightBottomDiv.append(tble);\n      tble.append(tr);\n      tr.append(td);\n      td.append(btnPre).append(lblRecordsCount.getControl().css("display", "inline-block").css("margin-top", "20px").css("margin-right", "10px").css("margin-left", "10px").addClass("VIS_Pref_Label_Font")).append(btnNext);\n      lblRecordsCount.getControl().css("display", "none");\n\n      //tr = $("<tr>");\n      //td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\' >");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblCreatedBy.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      //tr.append(td);\n      //td.append(lblCreatedOn.getControl().addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtCreatedBy.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \').addClass("VIS_Pref_Label_Font"));\n      Leftformfieldctrlwrp.append(lblCreatedBy.getControl().addClass("VIS_Pref_Label_Font"));\n      td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(dtpCreatedOn.addClass("VIS_Pref_Label_Font"));\n      Leftformfieldctrlwrp.append(lblCreatedOn.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\' >");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblName.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      //td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      //tr.append(td);\n      //td.append(lblDescription.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtName.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \').addClass("VIS_Pref_Label_Font"));\n      Leftformfieldctrlwrp.append(lblName.getControl().addClass("VIS_Pref_Label_Font"));\n      td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtDescription.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \').addClass("VIS_Pref_Label_Font"));\n      Leftformfieldctrlwrp.append(lblDescription.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //tr = $("<tr>");\n      //td = $("<td colspan=\'2\' class=\'VIS-archive-table-padding\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(lblComment.getControl().css("display", "inline-block").addClass("VIS_Pref_Label_Font"));\n\n      tr = $("<tr>");\n      td = $("<td colspan=\'4\' class=\'VIS-archive-table-padding\'>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      tble.append(tr);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldctrlwrp.append(txtComment.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \').addClass("VIS_Pref_Label_Font"));\n      Leftformfieldctrlwrp.append(lblComment.getControl().addClass("VIS_Pref_Label_Font"));\n\n      //topRightDiv.append(rightTopDiv).append(rightBottomDiv);\n\n      //Bottom save Button for search\n      rightBottomSaveDiv = $("<div style=\'float: left; width: 100%;height: 40px;position: relative;\' id=\'" + "rightBottomSaveDiv_" + $self.windowNo + "\'>");\n      rightBottomSaveDiv.append(btnSave);\n      topRightDiv.append(rightTopDiv).append(rightBottomDiv).append(rightBottomSaveDiv);\n\n      //tr = $("<tr>");\n      //td = $("<td colspan=\'4\'>");\n      //tble.append(tr);\n      //tr.append(td);\n      //td.append(btnSave);\n\n      //Add to root\n      $root.append($busyDiv);\n      $root.append(topLeftDiv).append(topRightDiv);\n    }\n    function jbInit() {\n      //chkReportQ.find("label").text(VIS.Msg.translate(VIS.Env.getCtx(), "IsReport"));\n      lblProcessQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "AD_Process_ID"));\n      lblTableQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "AD_Table_ID"));\n      lblBPartnerQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID"));\n      lblNameQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Name"));\n      lblDescriptionQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Description"));\n      lblCommentQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Help"));\n      lblCreatedByQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "CreatedBy"));\n      lblCreatedOnQ.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Created"));\n      lblCreatedBy.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "CreatedBy"));\n      lblCreatedOn.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Created"));\n      lblName.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Name"));\n      lblDescription.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Description"));\n      lblComment.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "Help"));\n      lblRecordsCount.getControl().text(VIS.Msg.translate(VIS.Env.getCtx(), "NoRecordFound"));\n    }\n    function dynInit() {\n      var AD_Role_ID = VIS.context.getAD_Role_ID();\n      var defaultItem = true;\n      //\tProcesses\n      //var sql = "SELECT DISTINCT p.AD_Process_ID, p.Name "\n      //        + "FROM AD_Process p INNER JOIN AD_Process_Access pa ON (p.AD_Process_ID=pa.AD_Process_ID) "\n      //        + "WHERE pa.AD_Role_ID=" + AD_Role_ID\n      //        + " AND p.IsReport=\'Y\' AND p.IsActive=\'Y\' AND pa.IsActive=\'Y\' "\n      //        + "ORDER BY 2";\n\n      var sqlCode = "VIS_153";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@param1", AD_Role_ID);\n      var dataIn = {\n        sql: sqlCode,\n        param: param\n      };\n      var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "JsonData/JDataSetWithCode", dataIn);\n      var dr = new VIS.DB.DataReader().toJson(JSON.stringify(data)); //    \n      var key, value;\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        value = VIS.Utility.encodeText(dr.getString(1));\n        if (defaultItem) {\n          cmbProcess.getControl().append(" <option></option>");\n          defaultItem = false;\n        }\n        cmbProcess.getControl().append(" <option value=" + key + ">" + value + "</option>");\n      }\n      dr.close();\n      defaultItem = true;\n      cmbProcess.getControl().prop(\'selectedIndex\', 0);\n      var sqlCode = "VIS_154";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@param1", AD_Role_ID);\n      var dataIn = {\n        sql: sqlCode,\n        param: param\n      };\n      var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "JsonData/JDataSetWithCode", dataIn);\n      var dr = new VIS.DB.DataReader().toJson(JSON.stringify(data)); //\n\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        value = VIS.Utility.encodeText(dr.getString(1));\n        if (defaultItem) {\n          cmbTableQ.getControl().append(" <option></option>");\n          defaultItem = false;\n        }\n        cmbTableQ.getControl().append(" <option value=" + key + ">" + value + "</option>");\n      }\n      dr.close();\n      defaultItem = true;\n      cmbTableQ.getControl().prop(\'selectedIndex\', 0);\n\n      //\tInternal Users\n\n      var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ArchiveViewer/GetUserList", {});\n      var dr = new VIS.DB.DataReader().toJson(JSON.stringify(data)); //    \n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        value = VIS.Utility.encodeText(dr.getString(1));\n        if (defaultItem) {\n          cmbCreatedByQ.getControl().append(" <option></option>");\n          defaultItem = false;\n        }\n        cmbCreatedByQ.getControl().append(" <option value=" + key + ">" + value + "</option>");\n      }\n      dr.close();\n      defaultItem = true;\n      cmbCreatedByQ.getControl().prop(\'selectedIndex\', 0);\n      if (gAD_Table_ID > 0) {\n        //reportField.IsChecked = true;\n        chkReportQ.find(\'input\').prop("checked", true);\n        cmdQuery();\n      }\n    }\n    function query(isReport, AD_Table_ID, Record_ID) {\n      $self.log.config("Report=" + isReport + ", AD_Table_ID=" + AD_Table_ID + ",Record_ID=" + Record_ID);\n      chkReportQ.find(\'input\').prop("checked", isReport);\n      gAD_Table_ID = AD_Table_ID;\n      gRecord_ID = Record_ID;\n      cmdQuery();\n    }\n    function updateVDisplay(next) {\n      //var  m_archives=dGrid.records.length;\n      //var m_index = Number(dGrid.getSelection().toString());\n\n      //$self.log.info("Index=" + m_index + ", Length=" + m_archives);\n      //if (m_archives == 0)\n      //{\n      //    lblRecordsCount.getControl().val("No Record Found");\n      //    txtName.getControl().val("");\n      //    txtDescription.getControl().val("");\n      //    txtComment.getControl().val("");\n      //    txtCreatedBy.getControl().val("");\n      //    if (dGrid.get(m_index).CREATED != null) {\n      //        dtpCreatedOn.val(null)\n      //    }\n      //    return;\n      //}\n\n      //plblRecordsCount.getControl().val(m_index + 1 + " of " + m_archives);\n      //MArchive ar = m_archives[m_index];\n      //createdByField.Text = ar.MCreatedByName;\n      //createdField.Text = ar.GetCreated().ToString();\n      //nameField.Text = ar.GetName() == null ? "" : ar.GetName();\n      //descriptionField.Text = ar.GetDescription() == null ? "" : ar.GetDescription();\n      //helpField.Text = ar.GetHelp() == null ? "" : ar.GetHelp();\n\n      //try\n      //{\n      //    MemoryStream ms = ar.GetInputStream();\n      //    if (c1ReportViewer1 != null)\n      //    {\n      //        c1ReportViewer1.LoadDocument(ms);\n      //    }\n      //}\n      //catch ( e)\n      //{\n      //    log.Log(Level.SEVERE, "pdf", e);\n      //    PageStatus.IsBusy = false;\n      //    pdfViewer.clearDocument();\n      //}\n    }\n    function cmdQuery() {\n      var sql = "";\n      var reports = chkReportQ.find(\'input\').prop("checked");\n      var role = null;\n      role = VIS.MRole.getDefault();\n      try {\n        if (!role.getIsCanReport()) {\n          $self.log.warning("User/Role cannot Report AD_User_ID=" + VIS.context.getAD_User_ID());\n          return;\n        }\n        sql = sql.concat(" AND IsReport=").concat(reports ? "\'Y\'" : "\'N\'");\n        //\tProcess\n        if (reports) {\n          var nn = cmbProcess.getControl().find(\'option:selected\').val();\n          if (nn != "" && nn != null) sql = sql.concat(" AND AD_Process_ID=").concat(nn);\n        }\n\n        //\tTable\n        if (gAD_Table_ID > 0) {\n          sql = sql.concat(" AND ((AD_Table_ID=").concat(gAD_Table_ID);\n          if (gRecord_ID > 0) sql = sql.concat(" AND Record_ID=").concat(gRecord_ID);\n          sql = sql.concat(")");\n          if (gAD_Table_ID == X_C_BPartner.Table_ID && gRecord_ID > 0) sql = sql.concat(" OR C_BPartner_ID=").concat(gRecord_ID);\n          sql = sql.concat(")");\n          //\tReset for query\n          gAD_Table_ID = 0;\n          gRecord_ID = 0;\n        } else {\n          var nn = cmbTableQ.getControl().find(\'option:selected\').val();\n          if (nn != "" && nn != null) sql = sql.concat(" AND AD_Table_ID=").concat(nn);\n        }\n\n        //\tBusiness Partner\n        if (!reports) {\n          var ii = vSearchBPartnerQ.getValue();\n          if (ii != null) sql = sql.concat(" AND C_BPartner_ID=").concat(ii);else sql = sql.concat(" AND C_BPartner_ID IS NOT NULL");\n        }\n\n        //\tName\n        var ss = txtNameQ.getControl().val();\n        if (ss != null && ss != "%%" && ss.length > 0) {\n          if (ss.indexOf("%") != -1 || ss.indexOf("_") != -1) sql = sql.concat(" AND LOWER(Name) LIKE LOWER( ").concat("\'").concat(ss).concat("\')");else sql = sql.concat(" AND LOWER(Name)= LOWER(").concat("\'").concat(ss).concat("\')");\n        }\n\n        //\tDescription\n        ss = txtDescriptionQ.getControl().val();\n        if (ss != null && ss != "%%" && ss.length > 0) {\n          if (ss.indexOf("%") != -1 || ss.indexOf("_") != -1) sql = sql.concat(" AND LOWER(Description) LIKE LOWER( ").concat("\'").concat(ss).concat("\')");else sql = sql.concat(" AND LOWER(Description)= LOWER(").concat("\'").concat(ss).concat("\')");\n        }\n\n        //\tHelp\n        ss = txtCommentQ.getControl().val();\n        if (ss != null && ss != "%%" && ss.length > 0) {\n          if (ss.indexOf("%") != -1 || ss.indexOf("_") != -1) sql = sql.concat(" AND LOWER(Help) LIKE LOWER( ").concat("\'").concat(ss).concat("\')");else sql = sql.concat(" AND LOWER(Help)= LOWER(").concat("\'").concat(ss).concat("\')");\n        }\n\n        //\tCreatedBy\n        var nnn = cmbCreatedByQ.getControl().find(\'option:selected\').val();\n        if (nnn != null && nnn > 0) sql = sql.concat(" AND CreatedBy=").concat(nnn);\n\n        //\tCreated\n        var tt = dtpCreatedFromQ.val();\n        //JID_1725 getting the Data between fromdate and todate\n        if (tt != "") sql = sql.concat(" AND ").concat("TRUNC(").concat("Created,\'DD\') >= ").concat(VIS.DB.to_date(tt));\n        var tt = dtpCreatedToQ.val();\n        if (tt != "") sql = sql.concat(" AND ").concat("TRUNC(").concat("Created,\'DD\') <= ").concat(VIS.DB.to_date(tt));\n        $self.log.fine(sql.toString());\n\n        //\tProcess Access\n        sql = sql.concat(" AND (AD_Process_ID IS NULL OR AD_Process_ID IN " + "(SELECT AD_Process_ID FROM AD_Process_Access WHERE AD_Role_ID=").concat(VIS.context.getAD_Role_ID()).concat("))");\n        //\tTable Access\n        sql = sql.concat(" AND (AD_Table_ID IS NULL " + "OR (AD_Table_ID IS NOT NULL AND AD_Process_ID IS NOT NULL) " //\tMenu Reports \n        + "OR AD_Table_ID IN " + "(SELECT t.AD_Table_ID FROM AD_Tab t" + " INNER JOIN AD_Window_Access wa ON (t.AD_Window_ID=wa.AD_Window_ID) " + "WHERE wa.AD_Role_ID=").concat(VIS.context.getAD_Role_ID()).concat("))");\n        $self.log.finest(sql.toString());\n      } catch (e) {}\n      var whereClause = sql;\n\n      //var sqlMain = "SELECT AD_ARCHIVE_ID,AD_CLIENT_ID,AD_ORG_ID,AD_PROCESS_ID,AD_TABLE_ID,C_BPARTNER_ID,CREATED,CREATEDBY,DESCRIPTION,HELP," +\n      //" ISACTIVE,ISREPORT,NAME,RECORD_ID,UPDATED,UPDATEDBY,EXPORT_ID FROM AD_Archive WHERE AD_Client_ID=" + VIS.Env.getCtx().getAD_Client_ID();\n      //if (whereClause != null && whereClause.length > 0)\n      //    sqlMain += whereClause;\n      //sqlMain += " ORDER BY Created desc";\n\n      getData(whereClause);\n    }\n    function isSame(s1, s2) {\n      if (s1 == null) return s2 == null;else if (s2 == null) return false;else return s1.equals(s2);\n    }\n    function cmdUpdateArchive() {\n      if (dGrid.getSelection().length < 0) {\n        return;\n      }\n      var name = txtName.getControl().val();\n      var des = txtDescription.getControl().val();\n      var help = txtComment.getControl().val();\n      var recid = Number(dGrid.getSelection().toString());\n      if (dGrid.get(recid) == null) {\n        return;\n      }\n      var update = false;\n      if (!isSame(name, dGrid.get(recid).NAME)) {\n        if (name != null && name.length > 0) {\n          update = true;\n        }\n      }\n      if (!isSame(des, dGrid.get(recid).DESCRIPTION)) {\n        update = true;\n      }\n      if (!isSame(help, dGrid.get(recid).HELP)) {\n        update = true;\n      }\n      archiveId = dGrid.get(recid).AD_ARCHIVE_ID;\n\n      //Aject Request\n      if (update) {\n        $.ajax({\n          url: VIS.Application.contextUrl + "Common/UpdateArchive",\n          dataType: "json",\n          data: {\n            name: name,\n            des: des,\n            help: help,\n            archiveId: archiveId\n          },\n          success: function (data) {\n            if (data.result) {\n              //refresh grid\n              cmdQuery();\n            }\n          }\n        });\n      }\n    }\n    function initGrid(data) {\n      if (dGrid != null) {\n        dGrid.destroy();\n        dGrid = null;\n      }\n      if (arrListColumns.length == 0) {\n        arrListColumns.push({\n          field: "NAME",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "NAME"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: false\n        });\n        arrListColumns.push({\n          field: "DESCRIPTION",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "DESCRIPTION"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: false\n        });\n        arrListColumns.push({\n          field: "HELP",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "HELP"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: false\n        });\n        arrListColumns.push({\n          field: "CREATEDBY",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "CREATEDBY"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: false\n        });\n        arrListColumns.push({\n          field: "CREATED",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "CREATED"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: false\n        });\n        arrListColumns.push({\n          field: "View",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "View"),\n          sortable: true,\n          size: \'80px\',\n          min: 150,\n          hidden: false,\n          render: function () {\n            return \'<div><i class="vis vis-download" title="View record" style="opacity: 1; font-size: 1rem"></i></div>\';\n          }\n        });\n        arrListColumns.push({\n          field: "AD_ARCHIVE_ID",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "AD_ARCHIVE_ID"),\n          hidden: true\n        });\n        //arrListColumns.push({ field: "AD_PROCESS_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "AD_PROCESS_ID"), hidden: true });\n        //arrListColumns.push({ field: "AD_TABLE_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "AD_TABLE_ID"), hidden: true });\n        //arrListColumns.push({ field: "C_BPARTNER_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "C_BPARTNER_ID"), hidden: true });\n        //arrListColumns.push({ field: "RECORD_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "RECORD_ID"), hidden: true });\n        //arrListColumns.push({ field: "EXPORT_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "EXPORT_ID"), hidden: true });\n      }\n      setTimeout(10);\n      w2utils.encodeTags(data);\n      dGrid = $(rightTopDiv).w2grid({\n        name: "gridArchive" + $self.windowNo,\n        recordHeight: 40,\n        columns: arrListColumns,\n        records: data,\n        onClick: function (event) {\n          if (event.column == 5 && dGrid.records.length > 0) {\n            downloadPdf(event.recid);\n          }\n          fillControls(event.recid);\n        }\n      });\n    }\n    function downloadPdf(recid) {\n      archiveId = dGrid.get(recid).AD_ARCHIVE_ID;\n      $.ajax({\n        url: VIS.Application.contextUrl + "Common/DownloadPdf",\n        dataType: "json",\n        data: {\n          archiveId: archiveId\n        },\n        success: function (data) {\n          if (data.result != null) {\n            if (data.result.indexOf("TempDownload") > -1) {\n              window.open(VIS.Application.contextUrl + data.result);\n            } else {\n              window.open("data:application/pdf;base64, " + data.result);\n            }\n          }\n        }\n      });\n    }\n    function fillControls(recid) {\n      txtName.getControl().val(dGrid.get(recid).NAME);\n      txtDescription.getControl().val(dGrid.get(recid).DESCRIPTION);\n      txtComment.getControl().val(dGrid.get(recid).HELP);\n      txtCreatedBy.getControl().val(dGrid.get(recid).CREATEDBY);\n      if (dGrid.get(recid).CREATED != null) {\n        //dtpCreatedOn.val((dGrid.get(recid).CREATED).split(\'T\')[0])\n        dtpCreatedOn.val(dGrid.get(recid).CREATED);\n      }\n      archiveId = dGrid.get(recid).AD_ARCHIVE_ID;\n    }\n    function getCreatedByName(createdby) {\n      var name = "";\n      try {\n        var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ArchiveViewer/GetUserName", {\n          "userId": createdby\n        });\n        var dr = new VIS.DB.DataReader().toJson(JSON.stringify(data)); //\n\n        if (dr.read()) {\n          name = dr.getString(\'Name\');\n        }\n        dr.close();\n      } catch (e) {\n        //log.Log(Level.SEVERE, sql, e);\n      }\n      return name;\n    }\n    function getData(whereClause) {\n      var data = [];\n      try {\n        var ret = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ArchiveViewer/GetArchieveData", {\n          "whereClause": whereClause\n        });\n        var dr = new VIS.DB.DataReader().toJson(JSON.stringify(ret)); //\n        var count = 1;\n        while (dr.read()) {\n          var line = {};\n          line[\'NAME\'] = dr.getString(\'NAME\');\n          line[\'DESCRIPTION\'] = dr.getString(\'DESCRIPTION\');\n          line[\'HELP\'] = dr.getString(\'HELP\');\n          line[\'CREATEDBY\'] = getCreatedByName(dr.getString(\'CREATEDBY\'));\n          //JID_1825 Date Showing as per browser culture\n          var da = dr.getString(\'CREATED\');\n          var d = new Date(da);\n          CreatedOn = d.toLocaleDateString();\n          line[\'CREATED\'] = CreatedOn;\n          line[\'AD_ARCHIVE_ID\'] = dr.getInt(\'AD_ARCHIVE_ID\');\n          //line[\'AD_PROCESS_ID\'] = dr.getInt(\'AD_PROCESS_ID\');\n          //line[\'AD_TABLE_ID\'] = dr.getInt(\'AD_TABLE_ID\');\n          //line[\'C_BPARTNER_ID\'] = dr.getInt(\'C_BPARTNER_ID\');\n          //line[\'RECORD_ID\'] = dr.getInt(\'RECORD_ID\');\n          //line[\'EXPORT_ID\'] = dr.getInt(\'EXPORT_ID\');\n          line[\'recid\'] = count;\n          count++;\n          data.push(line);\n        }\n        dr.close();\n      } catch (e) {}\n      initGrid(data);\n      return data;\n    }\n    function clear() {\n      txtName.getControl().val("");\n      txtDescription.getControl().val("");\n      txtComment.getControl().val("");\n      txtCreatedBy.getControl().val("");\n      dtpCreatedOn.val(null);\n    }\n    function events() {\n      if (btnOk != null) btnOk.on(VIS.Events.onTouchStartOrClick, function () {\n        $busyDiv[0].style.visibility = \'visible\';\n        cmdQuery();\n        clear();\n        $busyDiv[0].style.visibility = \'hidden\';\n      });\n      if (btnSave != null) btnSave.on(VIS.Events.onTouchStartOrClick, function () {\n        $busyDiv[0].style.visibility = \'visible\';\n        cmdUpdateArchive();\n        $busyDiv[0].style.visibility = \'hidden\';\n      });\n      if (btnNext != null) btnNext.on(VIS.Events.onTouchStartOrClick, function () {\n        alert(\'btnNext\');\n      });\n      if (btnPre != null) btnPre.on(VIS.Events.onTouchStartOrClick, function () {\n        alert(\'btnPre\');\n      });\n      if (this.btnToggal != null) var borderspace = 0;\n      this.btnToggal.on(VIS.Events.onTouchStartOrClick, function () {\n        if (toggleside) {\n          if (VIS.Application.isRTL) {\n            borderspace = 180;\n          } else {\n            borderspace = 0;\n          }\n          btnToggal.animate({\n            borderSpacing: borderspace\n          }, {\n            step: function (now, fx) {\n              $(this).css(\'-webkit-transform\', \'rotate(\' + now + \'deg)\');\n              $(this).css(\'-moz-transform\', \'rotate(\' + now + \'deg)\');\n              $(this).css(\'transform\', \'rotate(\' + now + \'deg)\');\n            },\n            duration: \'slow\'\n          }, \'linear\');\n          toggleside = false;\n          topLeftDiv.animate({\n            width: leftDivWidth\n          }, "slow");\n          topleftparaDiv.animate({\n            width: leftDivWidth\n          }, "slow");\n          topleftparaDiv.find("table").css("display", "block");\n          //topleftparaDiv.css("background-color", "transparent");\n          btnOk.css("display", "block");\n          topRightDiv.animate({\n            width: selectLeftDivWidth\n          }, "slow", null, function () {\n            dGrid.resize();\n          });\n        } else {\n          if (VIS.Application.isRTL) {\n            borderspace = 0;\n          } else {\n            borderspace = 180;\n          }\n          btnToggal.animate({\n            borderSpacing: borderspace\n          }, {\n            step: function (now, fx) {\n              $(this).css(\'-webkit-transform\', \'rotate(\' + now + \'deg)\');\n              $(this).css(\'-moz-transform\', \'rotate(\' + now + \'deg)\');\n              $(this).css(\'transform\', \'rotate(\' + now + \'deg)\');\n            },\n            duration: \'slow\'\n          }, \'linear\');\n          toggleside = true;\n          topLeftDiv.animate({\n            width: minSideWidth\n          }, "slow");\n          topleftparaDiv.animate({\n            width: minSideWidth\n          }, "slow");\n          topleftparaDiv.find("table").css("display", "none");\n          //topleftparaDiv.css("background-color", "#F1F1F1");\n          btnOk.css("display", "none");\n          topRightDiv.animate({\n            width: selectDivFullWidth\n          }, "slow", null, function () {\n            dGrid.resize();\n          });\n        }\n      });\n      chkReportQ.change(function () {\n        cmbProcess.getControl().hide();\n        lblProcessQ.getControl().hide();\n        $(".VIS-Search-hide").show();\n        if (chkReportQ.find(\'input\').prop("checked")) {\n          cmbProcess.getControl().show();\n          lblProcessQ.getControl().show();\n          $(".VIS-Search-hide").hide();\n        }\n      });\n    }\n\n    //size chnage \n    this.sizeChanged = function (h, w) {\n      selectLeftDivWidth = w - (leftDivWidth + 1);\n      selectDivFullWidth = w - (minSideWidth + 1);\n      if (toggleside == true) {\n        topLeftDiv.animate({\n          width: minSideWidth\n        }, "slow");\n        topleftparaDiv.animate({\n          width: minSideWidth\n        }, "slow");\n        topleftparaDiv.find("table").css("display", "none");\n        //topleftparaDiv.css("background-color", "#F1F1F1");\n        btnOk.css("display", "none");\n        topRightDiv.animate({\n          width: selectDivFullWidth\n        }, "slow", null, function () {\n          dGrid.resize();\n        });\n      } else {\n        topLeftDiv.animate({\n          width: leftDivWidth\n        }, "slow");\n        topleftparaDiv.animate({\n          width: leftDivWidth\n        }, "slow");\n        topleftparaDiv.find("table").css("display", "block");\n        //topleftparaDiv.css("background-color", "transparent");\n        btnOk.css("display", "block");\n        topRightDiv.animate({\n          width: selectLeftDivWidth\n        }, "slow", null, function () {\n          dGrid.resize();\n        });\n      }\n    };\n    this.display = function () {\n      initGrid();\n    };\n    this.load = function () {\n      initializeComponent();\n      jbInit();\n      dynInit();\n      events();\n    };\n    this.getRoot = function () {\n      return $root;\n    };\n    this.disposeComponent = function () {\n      $root = null;\n    };\n  }\n  ;\n\n  //Must Implement with same parameter\n  ArchiveViewer.prototype.sizeChanged = function (height, width) {\n    //this.sizeChanged(height, width);\n  };\n\n  //Must Implement with same parameter\n  ArchiveViewer.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.windowNo = windowNo;\n    this.load();\n    this.frame.getContentGrid().append(this.getRoot());\n    this.display();\n  };\n\n  //Must implement dispose\n  ArchiveViewer.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.Apps.AForms.ArchiveViewer = ArchiveViewer;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/archiveviewer.js?')},"./Areas/VIS/Scripts/app/Framework/attachmentHistory.js":()=>{eval(';\n(function (VIS, $) {\n  VIS.AttachmentHistory = function (_AD_Table_ID, _Record_ID, c_BPartner_ID, ad_User_ID, keyColumnName) {\n    var windowNo = VIS.Env.getWindowNo();\n    var ctx = VIS.Env.getCtx();\n    var columns = [],\n      rows = [],\n      colkeys = [];\n    var relatedcolumns = [],\n      relatedrows = [],\n      relatedcolkeys = [],\n      isAppointment,\n      userColumns = [],\n      userRows = [],\n      usercolKeys = [];\n    var ch, $mainDiv, $inboxDiv, $datagrdRecordInfo, $relatedInfoDiv, $datagrdRaltedRecordInfo, $datagrdUserRecordInfo, $userInfoDiv;\n    var self = this;\n    var $historycontentwrap, $historyleftwrap, $historysearch, $visattachhistorysearchwrap, $historytabletop, $visapaneltabcontrol, $visattachhistoryappsactionul, $historytablewrap, $visattachhistoryrightwrap, $visattachhistoryrightcontentFormail;\n    var $visattachhistoryrightcontentForAppoint, $visattachhistorygriddataForAppoint, resltGrdforMail, resltGrdforAppoint, $visattachhistoryrightwrapNotFound, hisCommentforMail, hisCommentforAppoint;\n    var $visattachhistorygriddata, $ulAttach;\n    var bpColumnName = "C_BPartnerID";\n    var userColumnName = "AD_User_ID";\n    var $title, $to, $from, $subject, $detail, $date, $txtArea, $bcc, $cc, $titleIcon, $btnSave, $btnSaveAppoint, $txtAreaAppoint, $zoomIcon, $bpzoomIcon, $emaildropdown;\n    var $subjectApp, $location, $description, $category, $contacts, $label, $startDate, $endDate, $allDay, $bsyDiv;\n    var PAGESIZE = 50,\n      historyPageNo,\n      BPhistoryPageNo,\n      userPageNo,\n      historyCount,\n      BPhistoryCount,\n      userHistoryCount,\n      historyTotalpages,\n      bphistoryTotalpages,\n      userTotalPages,\n      userhistoryPageNo;\n    var ulPagging, $firstPage, $lastPage, $nextPage, $previousPage, $pageCombo, $selectPages, searchTextbox, $printBtn;\n    var isip, hisSearch, bpSearch, UserSearch;\n    var $menu;\n    var $lastComment, $lastCommentAppoint;\n    var appointStaticID = 0;\n\n    //call hishory work\n    var $visattachhistoryrightcontentForCall, $visattachhistorygriddataForCall, $txtAreacall, $duration, $status, $price, $priceUnit, $created, $note, $isconference, $fullname, $lastCommentCall, hisCommentforCall, resltGrdforCall, isCall, $ulAttachCall, $lastCommentCall, $fromCall;\n\n    /* Starts Form */\n    this.initializeComponent = function () {\n      isip = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n      historyPageNo = 1;\n      BPhistoryPageNo = 1;\n      userhistoryPageNo = 1;\n      createPageSettings();\n      createContainer();\n      busyIndicatior();\n      loadRecordDataCount();\n      loadRecordData();\n      eventHandling();\n    };\n    function busyIndicatior() {\n      $bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //$bsyDiv.css({\n      //    "position": "absolute", "bottom": "0", "background": "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/busy.gif\') no-repeat", "background-position": "center center",\n      //    "width": "98%", "height": "98%", \'text-align\': \'center\', \'opacity\': \'.1\'\n      //});\n      $bsyDiv[0].style.visibility = "hidden";\n      $mainDiv.append($bsyDiv);\n    }\n    ;\n\n    /* Containers likes left continer,right container */\n    function createContainer() {\n      $mainDiv = $(\'<div class="vis-forms-container" style="height:100%">\');\n      //$mainLeftDiv = $(\'<div  class="vis-history-mainLeftDiv">\');\n\n      $inboxDiv = $(\'<div class="vis-history-inboxDiv">\');\n      $relatedInfoDiv = $(\'<div style="display:none" class="vis-history-mainRelatedDiv">\');\n      $userInfoDiv = $(\'<div style="display:none" class="vis-history-mainRelatedDiv">\');\n\n      //$mainLeftDiv.append($inboxDiv).append($relatedInfoDiv);\n\n      //$rightmainDiv = $(\'<div  class="vis-history-mainrightDiv" >\');\n\n      //$mainDiv.append($mainLeftDiv).append($rightmainDiv);\n\n      $historycontentwrap = $(\'<div class="vis-attachhistory-content-wrap">\');\n      $historyleftwrap = $(\'<div class="vis-attachhistory-left-wrap">\');\n      $historytabletop = $(\'<div class="vis-attachhistory-table-top">\');\n      $visattachhistorysearchwrap = $(\'<div class="vis-attachhistory-search-wrap">\');\n      $historysearch = $(\'<div class="vis-attachhistory-search">\').append(\' <input placeholder="\' + VIS.Msg.getMsg("Search") + \'" type="text">\').append(\'<span class="vis-attachhistory-search-icon vis vis-search"></span>\');\n      $visattachhistorysearchwrap.append(\'<i class="prthistory vis vis-print" title="\' + VIS.Msg.getMsg("Print") + \'"></i>\').append($historysearch);\n      $visattachhistoryrightwrap = $(\'<div class="vis-attachhistory-right-wrap">\');\n      $visattachhistoryrightwrapNotFound = $(\'<div class="vis-attachhistory-right-wrap">\').hide();\n      if (isip == true) {\n        $visattachhistoryrightwrapNotFound.append(\'<label class="vis-attachhistory-noRecFoundforIP" > \' + VIS.Msg.getMsg("NoRecordFound") + \' </label>\');\n      } else {\n        $visattachhistoryrightwrapNotFound.append(\'<label class="vis-attachhistory-noRecFound" > \' + VIS.Msg.getMsg("NoRecordFound") + \' </label>\');\n      }\n      $visapaneltabcontrol = $(\'<div class="vis-attachhistory-apanel-tabcontrol">\');\n      $visattachhistoryappsactionul = $(\'<ul class="vis-attachhistory-appsaction-ul vis-attachhistory-apanel-tabcontrol-ul">\');\n      $visattachhistoryappsactionul.append(\'<li data-type="History" class="vis-attachhistory-apanel-tab-selected" style="opacity: 1;">\' + VIS.Msg.getMsg("History") + \'</li><li  data-type="RelatedHistory"  style="opacity: 1;">\' + VIS.Msg.getMsg("RelatedHistory") + \'</li>\');\n      if (c_BPartner_ID > 0) {\n        $visattachhistoryappsactionul.append(\'<li  data-type="UserHistory"  style="opacity: 1;">\' + VIS.Msg.getMsg("UserHistory") + \'</li>\');\n      }\n      $historytabletop.append($visapaneltabcontrol.append($visattachhistoryappsactionul));\n      $historytablewrap = $(\'<div class="vis-attachhistory-table-wrap">\').append($inboxDiv).append($relatedInfoDiv).append($userInfoDiv).append(ulPagging);\n      $mainDiv.append($historycontentwrap.append($historyleftwrap.append($historytabletop).append($historytablewrap)));\n      $historycontentwrap.append($visattachhistorysearchwrap).append($visattachhistoryrightwrap).append($visattachhistoryrightwrapNotFound);\n      searchTextbox = $visattachhistorysearchwrap.find(\'input\');\n      $printBtn = $historysearch.find(\'.prthistory\');\n      $ulAttach = $(\'<ul class="vis-his-attachs">\');\n      $ulAttachCall = $(\'<ul class="vis-his-attachs">\'); // for call history attachment\n\n      //$btnSave = $(\'<div class="vis-attachhistory-save-btn"><a> \' + VIS.Msg.getMsg("Save") + \'</a>\');\n      //$btnSaveAppoint = $(\'<div class="vis-attachhistory-save-btn"><a> \' + VIS.Msg.getMsg("Save") + \'</a>\');\n\n      $menu = $("<ul class=\'vis-apanel-rb-ul\'>");\n      $menu.append(\'<li style="display:none" data-type="R"><a><span class="vis-attachhistory-email-icon vis-attachhistory-reply-icon"></span>\' + VIS.Msg.getMsg(\'Reply\') + \'</a></li> <li data-type="F"><a><span class="vis-attachhistory-email-icon vis-attachhistory-forword-icon vis vis-undo2"></span>\' + VIS.Msg.getMsg(\'Forward\') + \'</a></li>\');\n    }\n    ;\n    function createPageSettings() {\n      ulPagging = $(\'<ul style="margin-top:10px" class="vis-statusbar-ul pull-right">\');\n      $firstPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftleft" style="opacity: 0.6;"></i></div></li>\');\n      $previousPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pageup" style="opacity: 0.6;"></i></div></li>\');\n      $pageCombo = $(\'<li><select class="vis-statusbar-combo"></select></li>\');\n      $nextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" style="opacity: 0.6;"></i></div></li>\');\n      $lastPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" style="opacity: 0.6;"></i></div></li>\');\n      ulPagging.append($firstPage).append($previousPage).append($pageCombo).append($nextPage).append($lastPage);\n    }\n    function loadRecordDataCount(searchText) {\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/LoadRecordDataCount",\n        datatype: "json",\n        async: false,\n        type: "get",\n        cache: false,\n        data: {\n          searchText: searchText,\n          _AD_Table_ID: _AD_Table_ID,\n          _Record_ID: _Record_ID\n        },\n        success: function (data) {\n          historyCount = JSON.parse(data);\n        }\n      });\n      var tp = parseInt(historyCount / PAGESIZE);\n      historyTotalpages = tp + (historyCount % PAGESIZE > 0 ? 1 : 0);\n      historyPageNo = 1;\n      $selectPages = $pageCombo.find(\'select\');\n      $selectPages.empty();\n      for (var c = 1; c <= historyTotalpages; c++) {\n        $selectPages.append(\'<option>\' + c + \'</option>\');\n      }\n      $firstPage.css("opacity", "0.6");\n      $previousPage.css("opacity", "0.6");\n    }\n    ;\n\n    /* Loads info for showing in attached history of current record */\n    function loadRecordData(searchText) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/LoadRecordData",\n        datatype: "json",\n        type: "get",\n        async: false,\n        cache: false,\n        data: {\n          searchText: searchText,\n          _AD_Table_ID: _AD_Table_ID,\n          _Record_ID: _Record_ID,\n          historyPageNo: historyPageNo,\n          pageSize: PAGESIZE\n        },\n        success: function (data) {\n          data = JSON.parse(data);\n          createInbox(data);\n        },\n        error: function (er) {}\n      });\n    }\n    ;\n\n    /* Loads info for showing in Ralted history of current record */\n    function loadRelatedInfo(searchText) {\n      if (searchText == undefined || searchText == null) {\n        searchText = "";\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/RelatedHistory",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          keyColumnID: _Record_ID,\n          pageSize: PAGESIZE,\n          pageNo: BPhistoryPageNo,\n          searchText: VIS.Utility.encodeText(searchText),\n          keyColName: keyColumnName\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          createRaltedInfo(result);\n          if (BPhistoryCount == undefined || BPhistoryCount == 0 || isSearch == true) {\n            BPhistoryCount = result.TotalRecords;\n            var tp = parseInt(BPhistoryCount / PAGESIZE);\n            BPhistoryPageNo = 1;\n            bphistoryTotalpages = tp + (BPhistoryCount % PAGESIZE > 0 ? 1 : 0);\n            $selectPages = $pageCombo.find(\'select\');\n            $selectPages.empty();\n            for (var c = 1; c <= bphistoryTotalpages; c++) {\n              $selectPages.append(\'<option>\' + c + \'</option>\');\n            }\n            $firstPage.css("opacity", "0.6");\n            $previousPage.css("opacity", "0.6");\n            displayRelatedDiv();\n          } else {\n            refreshBPDiv();\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n          isSearch = false;\n\n          // $visattachhistoryrightwrap.find(\'*\').show();\n        },\n        error: function (err) {\n          console.log(err);\n          $bsyDiv[0].style.visibility = "hidden";\n          isSearch = false;\n        }\n      });\n    }\n    ;\n\n    /* Loads info for showing in Ralted history of current record */\n    function loadUserInfo(searchText) {\n      if (searchText == undefined || searchText == null) {\n        searchText = "";\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/UserHistory",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          C_BPartner_ID: c_BPartner_ID,\n          pageSize: PAGESIZE,\n          pageNo: userhistoryPageNo,\n          searchText: VIS.Utility.encodeText(searchText)\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result.RHistory != null) createUserInfo(result);\n          if (userHistoryCount == undefined || userHistoryCount == 0 || isSearch == true) {\n            userHistoryCount = result.TotalRecords;\n            var tp = parseInt(userHistoryCount / PAGESIZE);\n            userhistoryPageNo = 1;\n            userTotalPages = tp + (userHistoryCount % PAGESIZE > 0 ? 1 : 0);\n            $selectPages = $pageCombo.find(\'select\');\n            $selectPages.empty();\n            for (var c = 1; c <= userTotalPages; c++) {\n              $selectPages.append(\'<option>\' + c + \'</option>\');\n            }\n            $firstPage.css("opacity", "0.6");\n            $previousPage.css("opacity", "0.6");\n            displayUserDiv();\n          } else {\n            refreshUserDiv();\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n          isSearch = false;\n\n          //$visattachhistoryrightwrap.find(\'*\').show();\n        },\n        error: function (err) {\n          console.log(err);\n          $bsyDiv[0].style.visibility = "hidden";\n          isSearch = false;\n        }\n      });\n    }\n    ;\n\n    /* Create Array of data retervied for showing in datagrid   of User record */\n    function createUserInfo(results) {\n      userColumns = [];\n      userRows = [];\n      var result = results.RHistory;\n      userColumns.push({\n        field: "ID",\n        caption: VIS.Msg.getMsg("id"),\n        size: \'150px\',\n        hidden: true\n      });\n      userColumns.push({\n        field: "Record_ID",\n        caption: VIS.Msg.getMsg("record_id"),\n        size: \'150px\',\n        hidden: true\n      });\n      userColumns.push({\n        field: "Created",\n        caption: VIS.Msg.getMsg("Date"),\n        size: \'150px\',\n        hidden: false\n      });\n      userColumns.push({\n        field: "Type",\n        caption: VIS.Msg.getMsg("Type"),\n        size: \'150px\',\n        hidden: false\n      });\n      if (VIS.Application.isRTL) {\n        userColumns.push({\n          field: "TableName",\n          caption: VIS.Msg.getMsg("Table"),\n          size: \'150px\',\n          hidden: false,\n          resizable: true,\n          style: \'text-align: right\',\n          render: function (record) {\n            var img = $(\'<i class="findImg vis vis-find" data-ids="\' + record.Record_ID + \'-\' + record.AD_Table_ID + \'" ></i>\');\n            var html = $(\'<div >\').append(img).append(record.TableName);\n            return html.html();\n          }\n        });\n      } else {\n        userColumns.push({\n          field: "TableName",\n          caption: VIS.Msg.getMsg("Table"),\n          size: \'150px\',\n          hidden: false,\n          resizable: true,\n          style: \'text-align: left\',\n          render: function (record) {\n            var img = $(\'<i class="findImg vis vis-find" data-ids="\' + record.Record_ID + \'-\' + record.AD_Table_ID + \'" ></i>\');\n            var html = $(\'<div >\').append(img).append(record.TableName);\n            return html.html();\n          }\n        });\n      }\n      userColumns.push({\n        field: "Subject",\n        caption: VIS.Msg.getMsg("Subject"),\n        size: \'150px\',\n        hidden: false\n      });\n      userColumns.push({\n        field: "UserName",\n        caption: VIS.Msg.getMsg("UserName"),\n        size: \'150px\',\n        hidden: false\n      });\n      if (result.length > 0) {\n        usercolKeys = Object.keys(result[0]);\n      }\n      for (var c = 0; c < usercolKeys.length; c++) {\n        if (usercolKeys[c] == "ID" || usercolKeys[c] == "Record_ID" || usercolKeys[c] == "Created" || usercolKeys[c] == "Type" || usercolKeys[c] == "TableName" || usercolKeys[c] == "Subject" || usercolKeys[c] == "UserName") {\n          continue;\n        } else {\n          userColumns.push({\n            field: usercolKeys[c],\n            caption: VIS.Msg.getMsg(usercolKeys[c]),\n            size: \'100px\',\n            hidden: true\n          });\n        }\n      }\n      for (var i = 0; i < result.length; i++) {\n        var singleRow = {};\n        singleRow[\'recid\'] = i;\n        for (var c = 0; c < usercolKeys.length; c++) {\n          if (usercolKeys[c] == "Created") {\n            singleRow[usercolKeys[c]] = new Date(result[i][usercolKeys[c]]).toLocaleString();\n          } else if (usercolKeys[c] == "Type") {\n            if (result[i][usercolKeys[c]] == "A") {\n              singleRow[usercolKeys[c]] = VIS.Msg.getMsg("Appointment");\n            } else if (result[i][usercolKeys[c]] == "T") {\n              singleRow[usercolKeys[c]] = VIS.Msg.getMsg("Task");\n            } else if (result[i][usercolKeys[c]] == "L") {\n              singleRow[usercolKeys[c]] = VIS.Msg.getMsg("Letter");\n            } else if (result[i][usercolKeys[c]] == "M") {\n              singleRow[usercolKeys[c]] = VIS.Msg.getMsg("SentMail");\n            } else if (result[i][usercolKeys[c]] == "Z" || result[i][usercolKeys[c]] == "I") {\n              singleRow[usercolKeys[c]] = VIS.Msg.getMsg("InboxMail");\n            }\n          } else {\n            singleRow[usercolKeys[c]] = VIS.Utility.encodeText(result[i][usercolKeys[c]]);\n          }\n        }\n        userRows.push(singleRow);\n      }\n    }\n    ;\n\n    /* Create Array of data retervied for showing in datagrid   of Related record */\n    function createRaltedInfo(results) {\n      relatedcolumns = [];\n      relatedrows = [];\n      var result = results.RHistory;\n      relatedcolumns.push({\n        field: "ID",\n        caption: VIS.Msg.getMsg("id"),\n        size: \'150px\',\n        hidden: true\n      });\n      relatedcolumns.push({\n        field: "Record_ID",\n        caption: VIS.Msg.getMsg("record_id"),\n        size: \'150px\',\n        hidden: true\n      });\n      relatedcolumns.push({\n        field: "Created",\n        caption: VIS.Msg.getMsg("Date"),\n        size: \'150px\',\n        hidden: false\n      });\n      relatedcolumns.push({\n        field: "Type",\n        caption: VIS.Msg.getMsg("Type"),\n        size: \'150px\',\n        hidden: false\n      });\n      if (VIS.Application.isRTL) {\n        relatedcolumns.push({\n          field: "TableName",\n          caption: VIS.Msg.getMsg("Table"),\n          size: \'150px\',\n          hidden: false,\n          resizable: true,\n          style: \'text-align: right\',\n          render: function (record) {\n            var img = $(\'<i class="findImg vis vis-find" data-ids="\' + record.Record_ID + \'-\' + record.AD_Table_ID + \'"></i>\');\n            var html = $(\'<div >\').append(img).append(record.TableName);\n            return html.html();\n          }\n        });\n      } else {\n        relatedcolumns.push({\n          field: "TableName",\n          caption: VIS.Msg.getMsg("Table"),\n          size: \'150px\',\n          hidden: false,\n          resizable: true,\n          style: \'text-align: left\',\n          render: function (record) {\n            var img = $(\'<i class="findImg vis vis-find" data-ids="\' + record.Record_ID + \'-\' + record.AD_Table_ID + \'"></i>\');\n            var html = $(\'<div >\').append(img).append(record.TableName);\n            return html.html();\n          }\n        });\n      }\n      relatedcolumns.push({\n        field: "Subject",\n        caption: VIS.Msg.getMsg("Subject"),\n        size: \'150px\',\n        hidden: false\n      });\n      if (result.length > 0) {\n        colkeys = Object.keys(result[0]);\n      }\n      for (var c = 0; c < colkeys.length; c++) {\n        if (colkeys[c] == "ID" || colkeys[c] == "Record_ID" || colkeys[c] == "Created" || colkeys[c] == "Type" || colkeys[c] == "TableName" || colkeys[c] == "Subject") {\n          continue;\n        } else {\n          relatedcolumns.push({\n            field: colkeys[c],\n            caption: VIS.Msg.getMsg(colkeys[c]),\n            size: \'100px\',\n            hidden: true\n          });\n        }\n      }\n      for (var i = 0; i < result.length; i++) {\n        var singleRow = {};\n        singleRow[\'recid\'] = i;\n        for (var c = 0; c < colkeys.length; c++) {\n          if (colkeys[c] == "Created") {\n            singleRow[colkeys[c]] = new Date(result[i][colkeys[c]]).toLocaleString();\n          } else if (colkeys[c] == "Type") {\n            if (result[i][colkeys[c]] == "A") {\n              singleRow[colkeys[c]] = VIS.Msg.getMsg("Appointment");\n            } else if (result[i][colkeys[c]] == "T") {\n              singleRow[colkeys[c]] = VIS.Msg.getMsg("Task");\n            } else if (result[i][colkeys[c]] == "L") {\n              singleRow[colkeys[c]] = VIS.Msg.getMsg("Letter");\n            } else if (result[i][colkeys[c]] == "M") {\n              singleRow[colkeys[c]] = VIS.Msg.getMsg("SentMail");\n            } else if (result[i][colkeys[c]] == "I") {\n              singleRow[colkeys[c]] = VIS.Msg.getMsg("InboxMail");\n            }\n          } else {\n            singleRow[colkeys[c]] = VIS.Utility.encodeText(result[i][colkeys[c]]);\n          }\n        }\n        relatedrows.push(singleRow);\n      }\n    }\n    ;\n\n    ///* Create Array of data retervied for showing in datagrid   of current record */\n    //function createInbox(ds) {\n    //    columns = [];\n    //    rows = [];\n\n    //    //for (var c = 0; c < ds.tables[0].columns.length; c++) {\n\n    //    //    if (ds.tables[0].columns[c].name == "id") {\n    //    //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("id"), size: \'150px\', hidden: true });\n    //    //    }\n    //    //    else if (ds.tables[0].columns[c].name == "record_id") {\n    //    //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("record_id"), size: \'150px\', hidden: true });\n    //    //    }\n    //    //    else if (ds.tables[0].columns[c].name == "created") {\n    //    //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Date"), size: \'150px\', hidden: false });\n    //    //    }\n    //    //    else if (ds.tables[0].columns[c].name == "type") {\n    //    //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Type"), size: \'150px\', hidden: false });\n    //    //    }\n    //    //    else if (ds.tables[0].columns[c].name == "name") {\n    //    //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("CreatedBy"), size: \'150px\', hidden: false });\n    //    //    }\n    //    //    else if (ds.tables[0].columns[c].name == "subject") {\n    //    //        if (isip == true) {\n    //    //            columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Subject"), size: \'150px\', hidden: false });\n    //    //        }\n    //    //        else {\n    //    //            columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Subject"), size: \'230px\', hidden: false });\n    //    //        }\n    //    //    }\n    //    //    else {\n    //    //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg(ds.tables[0].columns[c].name), size: \'100px\', hidden: true });\n    //    //    }\n    //    //}\n\n    //    //if (ds.tables[0].rows.length > 0) {\n    //    //    colkeys = Object.keys(ds.tables[0].rows[0].cells);\n    //    //}\n\n    //    //for (var r = 0; r < ds.tables[0].rows.length; r++) {\n    //    //    var singleRow = {};\n\n    //    //    singleRow[\'recid\'] = r;\n    //    //    for (var c = 0; c < colkeys.length; c++) {\n    //    //        var colna = colkeys[c];\n    //    //        if (colkeys[c] == "created") {\n    //    //            singleRow[colkeys[c]] = new Date(ds.tables[0].rows[r].cells[colna]).toLocaleString();\n    //    //        }\n    //    //        else {\n    //    //            singleRow[colna] = VIS.Utility.encodeText(ds.tables[0].rows[r].cells[colna]);\n    //    //        }\n    //    //    }\n    //    //    rows.push(singleRow);\n    //    //}\n\n    //    for (var c in ds) {\n\n    //        if (ds[c].name == "ID") {\n    //            columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("id"), size: \'150px\', hidden: true });\n    //        }\n    //        else if (ds[c].name == "record_id") {\n    //            columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("record_id"), size: \'150px\', hidden: true });\n    //        }\n    //        else if (ds[c].name == "created") {\n    //            columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("Date"), size: \'150px\', hidden: false });\n    //        }\n    //        else if (ds[c].name == "TYPE") {\n    //            columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("Type"), size: \'150px\', hidden: false });\n    //        }\n    //        else if (ds[c].name == "name") {\n    //            columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("CreatedBy"), size: \'150px\', hidden: false });\n    //        }\n    //        else if (ds[c].name == "Subject") {\n    //            if (isip == true) {\n    //                columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("Subject"), size: \'150px\', hidden: false });\n    //            }\n    //            else {\n    //                columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg("Subject"), size: \'230px\', hidden: false });\n    //            }\n    //        }\n    //        else {\n    //            columns.push({ field: ds[c].name, caption: VIS.Msg.getMsg(ds[c].name), size: \'100px\', hidden: true });\n    //        }\n    //    }\n\n    //    for (var j = 0; j < ds[0].RowCount; j++) {\n    //        var singleRow = {};\n    //        for (var r in ds) {\n    //            singleRow[\'recid\'] = r;\n    //            if (ds[r].name == "created") {\n    //                singleRow[ds[r].name] = new Date(ds[r].value[j]).toLocaleString();\n    //            }\n    //            else {\n    //                singleRow[ds[r].name] = VIS.Utility.encodeText(ds[r].value[j]);\n    //            }\n    //        }\n    //        rows.push(singleRow);\n    //    }\n    //};\n\n    /* Create Array of data retervied for showing in datagrid   of current record */\n    function createInbox(data) {\n      columns = [];\n      rows = [];\n      columns.push({\n        field: "id",\n        caption: VIS.Msg.getMsg("id"),\n        size: \'150px\',\n        hidden: true\n      });\n      columns.push({\n        field: "record_id",\n        caption: VIS.Msg.getMsg("record_id"),\n        size: \'150px\',\n        hidden: true\n      });\n      columns.push({\n        field: "created",\n        caption: VIS.Msg.getMsg("Date"),\n        size: \'150px\',\n        hidden: false\n      });\n      columns.push({\n        field: "type",\n        caption: VIS.Msg.getMsg("Type"),\n        size: \'150px\',\n        hidden: false\n      });\n      columns.push({\n        field: "name",\n        caption: VIS.Msg.getMsg("CreatedBy"),\n        size: \'150px\',\n        hidden: false\n      });\n      if (isip == true) {\n        columns.push({\n          field: "subject",\n          caption: VIS.Msg.getMsg("Subject"),\n          size: \'150px\',\n          hidden: false\n        });\n      } else {\n        columns.push({\n          field: "subject",\n          caption: VIS.Msg.getMsg("Subject"),\n          size: \'230px\',\n          hidden: false\n        });\n      }\n      if (data.length > 0) {\n        colkeys = Object.keys(data[0]);\n      }\n      for (var r = 0; r < data.length; r++) {\n        var singleRow = {};\n        singleRow[\'recid\'] = r;\n        for (var c = 0; c < colkeys.length; c++) {\n          var colna = colkeys[c];\n          if (colkeys[c] == "created") {\n            singleRow[colna] = new Date(data[r][colna]).toLocaleString();\n          } else {\n            singleRow[colna] = VIS.Utility.encodeText(data[r][colna]);\n          }\n        }\n        rows.push(singleRow);\n      }\n    }\n    ;\n\n    /* it will display data in grid. it will be invoked after Form display otherwise datagrid will not render. */\n    function displayUserDiv() {\n      if ($datagrdUserRecordInfo != undefined && $datagrdUserRecordInfo != null) {\n        $datagrdUserRecordInfo.destroy();\n        $datagrdUserRecordInfo = null;\n      }\n      $datagrdUserRecordInfo = $userInfoDiv.w2grid({\n        name: \'userhistorygrid\',\n        recordHeight: 30,\n        show: {\n          toolbar: true\n        },\n        multiSelect: false,\n        columns: userColumns,\n        records: userRows\n      });\n      $datagrdUserRecordInfo.on("select", dataChanged);\n      $datagrdUserRecordInfo.on("search", filter);\n      if (userRows.length > 0) {\n        $datagrdUserRecordInfo.select(0);\n        $visattachhistoryrightwrapNotFound.hide();\n        $visattachhistoryrightwrap.show();\n      } else {\n        $visattachhistoryrightwrapNotFound.show();\n        $visattachhistoryrightwrap.hide();\n      }\n      $(\'.findImg\').on("click", function (e) {\n        var ids = $(e.target).data("ids").split(\'-\');\n        VIS.AEnv.zoom(ids[1], ids[0]);\n      });\n    }\n    ;\n\n    /* it will display data in grid. it will be invoked after Form display otherwise datagrid will not render. */\n    function displayRelatedDiv() {\n      if ($datagrdRaltedRecordInfo != undefined && $datagrdRaltedRecordInfo != null) {\n        $datagrdRaltedRecordInfo.destroy();\n        $datagrdRaltedRecordInfo = null;\n      }\n      $datagrdRaltedRecordInfo = $relatedInfoDiv.w2grid({\n        name: \'realtedhistorygrid\',\n        recordHeight: 30,\n        show: {\n          toolbar: true\n        },\n        multiSelect: false,\n        columns: relatedcolumns,\n        records: relatedrows\n      });\n      $datagrdRaltedRecordInfo.on("select", dataChanged);\n      $datagrdRaltedRecordInfo.on("search", filter);\n      if (relatedrows.length > 0) {\n        $datagrdRaltedRecordInfo.select(0);\n        $visattachhistoryrightwrapNotFound.hide();\n        $visattachhistoryrightwrap.show();\n      } else {\n        $visattachhistoryrightwrapNotFound.show();\n        $visattachhistoryrightwrap.hide();\n      }\n      $(\'.findImg\').on("click", function (e) {\n        var ids = $(e.target).data("ids").split(\'-\');\n        VIS.AEnv.zoom(ids[1], ids[0]);\n      });\n    }\n    ;\n\n    /* it will display data in grid. it will be invoked after Form display otherwise datagrid will not render. */\n    this.displayInboxDiv = function () {\n      $datagrdRecordInfo = $inboxDiv.w2grid({\n        name: \'historyinboxgrid\',\n        recordHeight: 30,\n        show: {\n          toolbar: true\n        },\n        multiSelect: false,\n        columns: columns,\n        records: rows\n      });\n      $datagrdRecordInfo.on("select", dataChanged);\n      $datagrdRecordInfo.on("search", filter);\n      if (rows.length > 0) {\n        $datagrdRecordInfo.select(0);\n        $visattachhistoryrightwrapNotFound.hide();\n        $visattachhistoryrightwrap.show();\n      } else {\n        $visattachhistoryrightwrapNotFound.show();\n        $visattachhistoryrightwrap.hide();\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      $(\'.vis-attachhistory-search-icon\').on("click", search);\n    };\n    function refreshInboxDiv() {\n      $datagrdRecordInfo.destroy();\n      $datagrdRecordInfo = null;\n      $datagrdRecordInfo = $inboxDiv.w2grid({\n        name: \'historyinboxgrid\',\n        recordHeight: 30,\n        show: {\n          toolbar: true\n        },\n        multiSelect: false,\n        columns: columns,\n        records: rows\n      });\n      $datagrdRecordInfo.on("select", dataChanged);\n      $datagrdRecordInfo.on("search", filter);\n      if (rows.length > 0) {\n        $datagrdRecordInfo.select(0);\n        $visattachhistoryrightwrapNotFound.hide();\n        $visattachhistoryrightwrap.show();\n      } else {\n        $visattachhistoryrightwrapNotFound.show();\n        $visattachhistoryrightwrap.hide();\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    function refreshBPDiv() {\n      $datagrdRaltedRecordInfo.destroy();\n      $datagrdRaltedRecordInfo = null;\n      $datagrdRaltedRecordInfo = $relatedInfoDiv.w2grid({\n        name: \'realtedhistorygrid\',\n        recordHeight: 30,\n        show: {\n          toolbar: true\n        },\n        multiSelect: false,\n        columns: relatedcolumns,\n        records: relatedrows\n      });\n      $datagrdRaltedRecordInfo.on("select", dataChanged);\n      $datagrdRaltedRecordInfo.on("search", filter);\n      //if (relatedrows.length > 0) {\n      //    $datagrdRaltedRecordInfo.select(0);\n      //}\n\n      if (relatedrows.length > 0) {\n        $datagrdRaltedRecordInfo.select(0);\n        $visattachhistoryrightwrapNotFound.hide();\n        $visattachhistoryrightwrap.show();\n      } else {\n        $visattachhistoryrightwrapNotFound.show();\n        $visattachhistoryrightwrap.hide();\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      $(\'.findImg\').off("click");\n      $(\'.findImg\').on("click", function (e) {\n        var ids = $(e.target).data("ids").split(\'-\');\n        VIS.AEnv.zoom(ids[1], ids[0]);\n      });\n    }\n    ;\n    function refreshUserDiv() {\n      $datagrdUserRecordInfo.destroy();\n      $datagrdUserRecordInfo = null;\n      $datagrdUserRecordInfo = $userInfoDiv.w2grid({\n        name: \'userhistorygrid\',\n        recordHeight: 30,\n        show: {\n          toolbar: true\n        },\n        multiSelect: false,\n        columns: userColumns,\n        records: userRows\n      });\n      $datagrdUserRecordInfo.on("select", dataChanged);\n      $datagrdUserRecordInfo.on("search", filter);\n      //if (relatedrows.length > 0) {\n      //    $datagrdRaltedRecordInfo.select(0);\n      //}\n\n      if (userRows.length > 0) {\n        $datagrdUserRecordInfo.select(0);\n        $visattachhistoryrightwrapNotFound.hide();\n        $visattachhistoryrightwrap.show();\n      } else {\n        $visattachhistoryrightwrapNotFound.show();\n        $visattachhistoryrightwrap.hide();\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      $(\'.findImg\').off("click");\n      $(\'.findImg\').on("click", function (e) {\n        var ids = $(e.target).data("ids").split(\'-\');\n        VIS.AEnv.zoom(ids[1], ids[0]);\n      });\n    }\n    ;\n\n    /*Events on all Controls */\n    function eventHandling() {\n      $visattachhistoryappsactionul.on("click", tabClick);\n      $visattachhistorysearchwrap.find(\'input\').on("keydown", search);\n      $visattachhistorysearchwrap.find(\'i\').on("click", printData);\n      $ulAttach.on("click", downLoadAttach);\n      $ulAttachCall.on("click", downLoadAttachCall); // for call history attachment\n      $visattachhistoryrightwrap.on("keydown", save);\n      $visattachhistoryrightwrap.on("click", save);\n      $nextPage.on("click", nextPage);\n      $previousPage.on("click", previousPage);\n      $pageCombo.on("change", pageChange);\n      $firstPage.on("click", firstPage);\n      $lastPage.on("click", lastPage);\n      $menu.on(VIS.Events.onTouchStartOrClick, "LI", function (e) {\n        var action = $(this).data("type");\n        panelAction(action, e);\n      });\n    }\n    ;\n    function panelAction(data, e) {\n      var email = null;\n      if (data == "R") {} else if (data == "F") {\n        email = new VIS.Email("", null, null, _Record_ID, true, true, _AD_Table_ID, $detail.html(), $title.text(), attachID);\n      }\n      var c = new VIS.CFrame();\n      c.setName(VIS.Msg.getMsg("EMail"));\n      c.setTitle(VIS.Msg.getMsg("EMail"));\n      c.hideHeader(true);\n      c.setContent(email);\n      c.show();\n      email.initializeComponent();\n      ch.close();\n    }\n    ;\n    function printData(e) {\n      if ($visattachhistorygriddataForAppoint != undefined && $visattachhistorygriddataForAppoint.is(\':visible\') == true) {\n        //  $visattachhistorygriddataForAppoint.find(".vis-his-attachs").find(\'li\').after(\'</br>\');\n\n        $(\'.vis-attachhistory-right-row > ul > li\').css(\'float\', \'left\');\n        $(\'.vis-attachhistory-right-row > ul\').css("height", "auto");\n        finalPrint($visattachhistorygriddataForAppoint.html());\n        $(\'.vis-attachhistory-right-row > ul > li\').css(\'float\', \'none\');\n        $(\'.vis-attachhistory-right-row > ul\').css("height", "45px");\n        //  $visattachhistorygriddataForAppoint.find(".vis-his-attachs").find(\'br\').remove();\n      } else if ($visattachhistorygriddata != undefined && $visattachhistorygriddata.is(\':visible\') == true) {\n        //$visattachhistorygriddata.find(".vis-his-attachs").find(\'li\').after(\'</br>\');\n        $(\'.vis-attachhistory-right-row > ul > li\').css(\'float\', \'left\');\n        $(\'.vis-attachhistory-right-row > ul\').css("height", "auto");\n        $($(\'.vis-attachhistory-to\').find(\'p\')).text($($(\'.vis-attachhistory-to\').find(\'p\')).text().replace(/;/g, "; "));\n        $($(\'.vis-attachhistory-bcc\').find(\'p\')).text($($(\'.vis-attachhistory-bcc\').find(\'p\')).text().replace(/;/g, "; "));\n        $($(\'.vis-attachhistory-cc\').find(\'p\')).text($($(\'.vis-attachhistory-cc\').find(\'p\')).text().replace(/;/g, "; "));\n        finalPrint($visattachhistorygriddata.html());\n        $(\'.vis-attachhistory-right-row > ul > li\').css(\'float\', \'none\');\n        $(\'.vis-attachhistory-right-row > ul\').css("height", "45px");\n        $($(\'.vis-attachhistory-to\').find(\'p\')).text($($(\'.vis-attachhistory-to\').find(\'p\')).text().replace(/; /g, ";"));\n        $($(\'.vis-attachhistory-bcc\').find(\'p\')).text($($(\'.vis-attachhistory-bcc\').find(\'p\')).text().replace(/; /g, ";"));\n        $($(\'.vis-attachhistory-cc\').find(\'p\')).text($($(\'.vis-attachhistory-cc\').find(\'p\')).text().replace(/; /g, ";"));\n      }\n    }\n    ;\n    function finalPrint(html) {\n      var mywindow = window.open();\n      var link = \'<link rel="stylesheet" href="\' + VIS.Application.contextUrl + \'Areas/VIS/Content/VIS.all.min.css" />\';\n      mywindow.document.write(link + html);\n      setTimeout(function () {\n        mywindow.print();\n        mywindow.close();\n      }, 300);\n    }\n    ;\n    var isSearch = false;\n    function search(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      if (searchTextbox == undefined || searchTextbox == null) {\n        return;\n      }\n      isSearch = true;\n      //|| searchTextbox.val() == null || searchTextbox.val().trim() == ""\n      if ($inboxDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        loadRecordDataCount(searchTextbox.val());\n        loadRecordData(searchTextbox.val());\n        hisSearch = searchTextbox.val();\n        refreshInboxDiv();\n      } else if ($relatedInfoDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        loadRelatedInfo(searchTextbox.val());\n        bpSearch = searchTextbox.val();\n      } else {\n        $bsyDiv[0].style.visibility = "visible";\n        loadUserInfo(searchTextbox.val());\n        UserSearch = searchTextbox.val();\n      }\n    }\n    ;\n    function nextPage(e) {\n      if ($inboxDiv.is(\':visible\')) {\n        if (historyPageNo < historyTotalpages) {\n          $bsyDiv[0].style.visibility = "visible";\n          historyPageNo++;\n          $selectPages.val(historyPageNo);\n          loadRecordData();\n          refreshInboxDiv();\n        }\n        sethistoryPageButtons();\n      } else if ($relatedInfoDiv.is(\':visible\')) {\n        if (BPhistoryPageNo < bphistoryTotalpages) {\n          $bsyDiv[0].style.visibility = "visible";\n          BPhistoryPageNo++;\n          $selectPages.val(BPhistoryPageNo);\n          loadRelatedInfo();\n          setBPhistoryPageButtons();\n        }\n      } else {\n        if (userhistoryPageNo < userTotalPages) {\n          $bsyDiv[0].style.visibility = "visible";\n          userhistoryPageNo++;\n          $selectPages.val(userhistoryPageNo);\n          loadUserInfo();\n          setUserhistoryPageButtons();\n        }\n      }\n    }\n    ;\n    function previousPage(e) {\n      if ($inboxDiv.is(\':visible\')) {\n        if (historyPageNo > 1) {\n          $bsyDiv[0].style.visibility = "visible";\n          historyPageNo--;\n          $selectPages.val(historyPageNo);\n          loadRecordData();\n          refreshInboxDiv();\n        }\n        sethistoryPageButtons();\n      } else if ($relatedInfoDiv.is(\':visible\')) {\n        if (BPhistoryPageNo > 1) {\n          $bsyDiv[0].style.visibility = "visible";\n          BPhistoryPageNo--;\n          $selectPages.val(BPhistoryPageNo);\n          loadRelatedInfo();\n        }\n        setBPhistoryPageButtons();\n      } else {\n        if (userhistoryPageNo > 1) {\n          $bsyDiv[0].style.visibility = "visible";\n          userhistoryPageNo--;\n          $selectPages.val(userhistoryPageNo);\n          loadUserInfo();\n        }\n        setUserhistoryPageButtons();\n      }\n    }\n    ;\n    function pageChange(e) {\n      if ($inboxDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        historyPageNo = $selectPages.val();\n        loadRecordData();\n        refreshInboxDiv();\n        sethistoryPageButtons();\n      } else if ($relatedInfoDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        BPhistoryPageNo = $selectPages.val();\n        loadRelatedInfo();\n        setBPhistoryPageButtons();\n      } else {\n        $bsyDiv[0].style.visibility = "visible";\n        userhistoryPageNo = $selectPages.val();\n        loadUserInfo();\n        setUserhistoryPageButtons();\n      }\n    }\n    ;\n    function firstPage(e) {\n      if ($inboxDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        historyPageNo = 1;\n        $selectPages.val(historyPageNo);\n        loadRecordData();\n        refreshInboxDiv();\n        sethistoryPageButtons();\n      } else if ($relatedInfoDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        BPhistoryPageNo = 1;\n        $selectPages.val(BPhistoryPageNo);\n        loadRelatedInfo();\n        setBPhistoryPageButtons();\n      } else {\n        $bsyDiv[0].style.visibility = "visible";\n        userhistoryPageNo = 1;\n        $selectPages.val(userhistoryPageNo);\n        loadUserInfo();\n        setUserhistoryPageButtons();\n      }\n    }\n    ;\n    function lastPage(e) {\n      if ($inboxDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        historyPageNo = historyTotalpages;\n        $selectPages.val(historyPageNo);\n        loadRecordData();\n        refreshInboxDiv();\n        sethistoryPageButtons();\n      } else if ($relatedInfoDiv.is(\':visible\')) {\n        $bsyDiv[0].style.visibility = "visible";\n        BPhistoryPageNo = bphistoryTotalpages;\n        $selectPages.val(BPhistoryPageNo);\n        loadRelatedInfo();\n        setBPhistoryPageButtons();\n      } else {\n        $bsyDiv[0].style.visibility = "visible";\n        userhistoryPageNo = userTotalPages;\n        $selectPages.val(userhistoryPageNo);\n        loadUserInfo();\n        setUserhistoryPageButtons();\n      }\n    }\n    ;\n    function sethistoryPageButtons() {\n      if (historyPageNo == 1 && historyPageNo < historyTotalpages) {\n        $firstPage.css("opacity", "0.6");\n        $previousPage.css("opacity", "0.6");\n        $nextPage.css("opacity", "1");\n        $lastPage.css("opacity", "1");\n      } else if (historyPageNo > 1 && historyPageNo < historyTotalpages) {\n        $firstPage.css("opacity", "1");\n        $previousPage.css("opacity", "1");\n        $nextPage.css("opacity", "1");\n        $lastPage.css("opacity", "1");\n      } else if (historyPageNo == historyTotalpages && historyTotalpages == 1) {\n        $firstPage.css("opacity", "0.6");\n        $previousPage.css("opacity", "0.6");\n        $nextPage.css("opacity", "0.6");\n        $lastPage.css("opacity", "0.6");\n      } else if (historyPageNo == historyTotalpages) {\n        $firstPage.css("opacity", "1");\n        $previousPage.css("opacity", "1");\n        $nextPage.css("opacity", "0.6");\n        $lastPage.css("opacity", "0.6");\n      }\n    }\n    ;\n    function setBPhistoryPageButtons() {\n      if (BPhistoryPageNo == 1 && BPhistoryPageNo < bphistoryTotalpages) {\n        $firstPage.css("opacity", "0.6");\n        $previousPage.css("opacity", "0.6");\n        $nextPage.css("opacity", "1");\n        $lastPage.css("opacity", "1");\n      } else if (BPhistoryPageNo > 1 && BPhistoryPageNo < bphistoryTotalpages) {\n        $firstPage.css("opacity", "1");\n        $previousPage.css("opacity", "1");\n        $nextPage.css("opacity", "1");\n        $lastPage.css("opacity", "1");\n      } else if (BPhistoryPageNo == bphistoryTotalpages && bphistoryTotalpages == 1) {\n        $firstPage.css("opacity", "0.6");\n        $previousPage.css("opacity", "0.6");\n        $nextPage.css("opacity", "0.6");\n        $lastPage.css("opacity", "0.6");\n      } else if (BPhistoryPageNo == bphistoryTotalpages) {\n        $firstPage.css("opacity", "1");\n        $previousPage.css("opacity", "1");\n        $nextPage.css("opacity", "0.6");\n        $lastPage.css("opacity", "0.6");\n      }\n    }\n    ;\n    function setUserhistoryPageButtons() {\n      if (userhistoryPageNo == 1 && userhistoryPageNo < userTotalPages) {\n        $firstPage.css("opacity", "0.6");\n        $previousPage.css("opacity", "0.6");\n        $nextPage.css("opacity", "1");\n        $lastPage.css("opacity", "1");\n      } else if (userhistoryPageNo > 1 && userhistoryPageNo < userTotalPages) {\n        $firstPage.css("opacity", "1");\n        $previousPage.css("opacity", "1");\n        $nextPage.css("opacity", "1");\n        $lastPage.css("opacity", "1");\n      } else if (userhistoryPageNo == userTotalPages && userTotalPages == 1) {\n        $firstPage.css("opacity", "0.6");\n        $previousPage.css("opacity", "0.6");\n        $nextPage.css("opacity", "0.6");\n        $lastPage.css("opacity", "0.6");\n      } else if (userhistoryPageNo == userTotalPages) {\n        $firstPage.css("opacity", "1");\n        $previousPage.css("opacity", "1");\n        $nextPage.css("opacity", "0.6");\n        $lastPage.css("opacity", "0.6");\n      }\n    }\n    ;\n\n    /*tab Chaneg event*/\n    function tabClick(e) {\n      var data = $(e.target).data(\'type\');\n      if (data == "History") {\n        if (searchTextbox != "undefined" || searchTextbox != null) {\n          searchTextbox.val(hisSearch);\n        }\n        $selectPages = $pageCombo.find(\'select\');\n        $selectPages.empty();\n        for (var c = 1; c <= historyTotalpages; c++) {\n          $selectPages.append(\'<option>\' + c + \'</option>\');\n        }\n\n        //  $visattachhistoryrightwrap.find(\'*\').hide();\n        sethistoryPageButtons();\n        $inboxDiv.show();\n        $userInfoDiv.hide();\n        $relatedInfoDiv.hide();\n        $selectPages.val(historyPageNo);\n        //  $visattachhistoryrightwrap.find(\'*\').show();\n        if (rows.length > 0) {\n          $datagrdRecordInfo.select(0);\n          $datagrdRecordInfo.refresh();\n          $visattachhistoryrightwrapNotFound.hide();\n          $visattachhistoryrightwrap.show();\n        } else {\n          $visattachhistoryrightwrapNotFound.show();\n          $visattachhistoryrightwrap.hide();\n        }\n      } else if (data == "RelatedHistory") {\n        if (searchTextbox != "undefined" || searchTextbox != null) {\n          searchTextbox.val(bpSearch);\n        }\n        //if (c_BPartner_ID == null || c_BPartner_ID == 0) {\n        //    VIS.ADialog.info("BPartnerNotFound");\n        //    return;\n        //}\n        //   $visattachhistoryrightwrap.find(\'*\').hide();\n\n        $selectPages = $pageCombo.find(\'select\');\n        $selectPages.empty();\n        for (var c = 1; c <= bphistoryTotalpages; c++) {\n          $selectPages.append(\'<option>\' + c + \'</option>\');\n        }\n        if ($datagrdRaltedRecordInfo == undefined || $datagrdRaltedRecordInfo == null) {\n          $bsyDiv[0].style.visibility = "visible";\n          loadRelatedInfo();\n          $selectPages.val(BPhistoryPageNo);\n        } else {\n          $visattachhistoryrightwrap.find(\'*\').show();\n          if (relatedrows.length > 0) {\n            $datagrdRaltedRecordInfo.select(0);\n            $datagrdRaltedRecordInfo.refresh();\n            $selectPages.val(BPhistoryPageNo);\n          }\n        }\n        $(\'.findImg\').on("click", function (e) {\n          var ids = $(e.target).data("ids").split(\'-\');\n          VIS.AEnv.zoom(ids[1], ids[0]);\n        });\n        if (relatedrows.length > 0) {\n          $datagrdRaltedRecordInfo.select(0);\n          $visattachhistoryrightwrapNotFound.hide();\n          $visattachhistoryrightwrap.show();\n        } else {\n          $visattachhistoryrightwrapNotFound.show();\n          $visattachhistoryrightwrap.hide();\n        }\n        $inboxDiv.hide();\n        $userInfoDiv.hide();\n        $relatedInfoDiv.show();\n      } else if (data == "UserHistory") {\n        if (searchTextbox != "undefined" || searchTextbox != null) {\n          searchTextbox.val(UserSearch);\n        }\n        if (c_BPartner_ID == null || c_BPartner_ID == 0) {\n          VIS.ADialog.info("BPartnerNotFound");\n          return;\n        }\n\n        //if (ad_User_ID == null || ad_User_ID == 0) {\n        //    VIS.ADialog.info("UserNotFound");\n        //    return;\n        //}\n        //   $visattachhistoryrightwrap.find(\'*\').hide();\n\n        $selectPages = $pageCombo.find(\'select\');\n        $selectPages.empty();\n        for (var c = 1; c <= userTotalPages; c++) {\n          $selectPages.append(\'<option>\' + c + \'</option>\');\n        }\n        if ($datagrdUserRecordInfo == undefined || $datagrdUserRecordInfo == null) {\n          $bsyDiv[0].style.visibility = "visible";\n          loadUserInfo();\n          $selectPages.val(userhistoryPageNo);\n        } else {\n          $visattachhistoryrightwrap.find(\'*\').show();\n          if (userRows.length > 0) {\n            $datagrdUserRecordInfo.select(0);\n            $datagrdUserRecordInfo.refresh();\n            $selectPages.val(userhistoryPageNo);\n          }\n        }\n        $(\'.findImg\').on("click", function (e) {\n          var ids = $(e.target).data("ids").split(\'-\');\n          VIS.AEnv.zoom(ids[1], ids[0]);\n        });\n        if (userRows.length > 0) {\n          $datagrdUserRecordInfo.select(0);\n          $visattachhistoryrightwrapNotFound.hide();\n          $visattachhistoryrightwrap.show();\n        } else {\n          $visattachhistoryrightwrapNotFound.show();\n          $visattachhistoryrightwrap.hide();\n        }\n        $inboxDiv.hide();\n        $relatedInfoDiv.hide();\n        $userInfoDiv.show();\n      }\n      $(e.target).addClass(\'vis-attachhistory-apanel-tab-selected\');\n      $(e.target).siblings(\'li\').removeClass(\'vis-attachhistory-apanel-tab-selected\');\n    }\n    ;\n    function filter(e) {\n      e.onComplete = function (eve) {\n        if ($inboxDiv.is(\':visible\')) {\n          if ($datagrdRecordInfo.last.searchIds.length > 0) {\n            $datagrdRecordInfo.select($datagrdRecordInfo.last.searchIds[0]);\n          }\n        } else {\n          if ($datagrdRaltedRecordInfo.last.searchIds.length > 0) {\n            $datagrdRaltedRecordInfo.select($datagrdRaltedRecordInfo.last.searchIds[0]);\n          }\n        }\n      };\n    }\n    ;\n\n    /**/\n    var erecid = 0;\n    function dataChanged(e) {\n      var target;\n      $bsyDiv[0].style.visibility = "visible";\n      if (e.target == "historyinboxgrid") {\n        target = $datagrdRecordInfo.get(e.recid);\n        //erecid = target.id;\n        //isAppointment = true;\n      } else if (e.target == "realtedhistorygrid") {\n        target = $datagrdRaltedRecordInfo.get(e.recid);\n        // erecid = target.id;\n        //  isAppointment = false;\n      } else {\n        target = $datagrdUserRecordInfo.get(e.recid);\n        // erecid = target.id;\n        //  isAppointment = true;\n      }\n      $(\'.vis-attachhistory-view-comments\').text(VIS.Msg.getMsg(\'ViewMoreComments\'));\n      if (target.type == VIS.Msg.getMsg("Appointment") || target.Type == "Appointment" || target.type == VIS.Msg.getMsg("Task") || target.Type == "Task") {\n        if ($visattachhistorygriddataForAppoint != undefined && $visattachhistorygriddataForAppoint.is(\':visible\') == false) {\n          $($visattachhistoryrightcontentForAppoint[0].children[0]).hide();\n          $visattachhistorygriddataForAppoint.show();\n        }\n      } else if (target.type == VIS.Msg.getMsg("VA048_CallType") || target.Type == "Call") {\n        if ($visattachhistorygriddataForCall != undefined && $visattachhistorygriddataForCall.is(\':visible\') == false) {\n          $($visattachhistoryrightcontentForCall[0].children[0]).hide();\n          $visattachhistorygriddataForCall.show();\n        }\n      } else {\n        if ($visattachhistorygriddata != undefined && $visattachhistorygriddata.is(\':visible\') == false) {\n          $($visattachhistoryrightcontentFormail[0].children[0]).hide();\n          $visattachhistorygriddata.show();\n        }\n      }\n      if (target.type != undefined) {\n        switch (target.type) {\n          case VIS.Msg.getMsg("Appointment"):\n            showAppointmentInfo(target.id);\n            window.setTimeout(function () {\n              erecid = target.id;\n              isAppointment = true;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("Task"):\n            showAppointmentInfo(target.id);\n            window.setTimeout(function () {\n              erecid = target.id;\n              isAppointment = true;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("SentMail"):\n            showSentMail(target.id);\n            window.setTimeout(function () {\n              erecid = target.id;\n              isAppointment = false;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("InboxMail"):\n            showInboxMail(target.id);\n            window.setTimeout(function () {\n              erecid = target.id;\n              isAppointment = false;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("Letter"):\n            showLetter(target.id);\n            window.setTimeout(function () {\n              erecid = target.id;\n              isAppointment = false;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("VA048_CallType"):\n            showCallInfo(target.id);\n            window.setTimeout(function () {\n              erecid = target.id;\n              isAppointment = false;\n              isCall = true;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n        }\n        ;\n      } else {\n        switch (target.Type) {\n          case VIS.Msg.getMsg("Appointment"):\n            showAppointmentInfo(target.ID);\n            window.setTimeout(function () {\n              erecid = target.ID;\n              isAppointment = true;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("Task"):\n            showAppointmentInfo(target.ID);\n            window.setTimeout(function () {\n              //showAppointmentInfo(target.ID);\n              erecid = target.ID;\n              isAppointment = true;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("SentMail"):\n            showSentMail(target.ID);\n            window.setTimeout(function () {\n              showAppointmentInfo(target.ID);\n              erecid = target.ID;\n              isAppointment = false;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("InboxMail"):\n            showInboxMail(target.ID);\n            window.setTimeout(function () {\n              showAppointmentInfo(target.ID);\n              erecid = target.ID;\n              isAppointment = false;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("Letter"):\n            showLetter(target.ID);\n            window.setTimeout(function () {\n              showAppointmentInfo(target.ID);\n              erecid = target.ID;\n              isAppointment = false;\n              isCall = false;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n          case VIS.Msg.getMsg("VA048_CallType"):\n            showCallInfo(target.ID);\n            window.setTimeout(function () {\n              erecid = target.ID;\n              isAppointment = false;\n              isCall = true;\n              lastHistoryComment(erecid, isAppointment, isCall);\n            }, 200);\n            break;\n        }\n        ;\n      }\n    }\n    ;\n\n    /**/\n    function showAppointmentInfo(ID) {\n      var ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AttachmentHistory/GetAppointmentData", {\n        "AppQry": ID\n      }, null);\n      if (ds != null) {\n        var zoomID = 0;\n        if ($inboxDiv.is(\':visible\')) {\n          zoomID = 0;\n        } else {\n          zoomID = ds["AD_Table_ID"] + "-" + ds["Record_ID"];\n        }\n        strApp = "";\n        var attInfo = ds["AttendeeInfo"];\n        if (attInfo != null && attInfo != "") {\n          names = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AttachmentHistory/GetUser", {\n            "UserQry": attInfo\n          }, null);\n          if (names != null && names.length > 0) {\n            strApp = "";\n            for (var k = 0; k < names.length; k++) {\n              strApp += names[k] + ", ";\n            }\n            strApp = strApp.substring(0, strApp.length - 2);\n          }\n        }\n        createRightPanelforAppointment(ID, ds["Location"], ds["Description"], ds["label"], ds["StartDate"], ds["EndDate"], ds["Allday"], "", ds["comments"], zoomID, ds["Subject"], ds["caname"], "", ds["AppointmentsInfo_ID"], strApp);\n      } else {\n        $bsyDiv[0].style.visibility = "hidden";\n      }\n\n      //});\n    }\n    ;\n\n    /**/\n    function showSentMail(ID) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/LoadSentMails",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var zoomID = 0;\n          if ($inboxDiv.is(\':visible\')) {\n            zoomID = 0;\n          } else {\n            zoomID = result.AD_Table_ID + "-" + result.Record_ID;\n          }\n          createRightPanelforLatter(ID, result.Title, result.To, result.From, result.Date, result.Detail, result.Bcc, result.Cc, result.Comments, result.IsMail, result.IsLetter, result.Attach, zoomID, result.ID);\n        }\n      });\n    }\n    ;\n\n    /**/\n    function showInboxMail(ID) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/LoadInboxMails",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var zoomID = 0;\n          if ($inboxDiv.is(\':visible\')) {\n            zoomID = 0;\n          } else {\n            zoomID = result.AD_Table_ID + "-" + result.Record_ID;\n          }\n          createRightPanelforLatter(ID, result.Title, result.To, result.From, result.Date, result.Detail, result.Bcc, result.Cc, result.Comments, result.IsMail, result.IsLetter, result.Attach, zoomID, result.ID);\n        }\n      });\n    }\n    ;\n\n    /**/\n    function showLetter(ID) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/LoadLetters",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var zoomID = 0;\n          if ($inboxDiv.is(\':visible\')) {\n            zoomID = 0;\n          } else {\n            zoomID = result.AD_Table_ID + "-" + result.Record_ID;\n          }\n          createRightPanelforLatter(ID, result.Title, "", "", result.Date, result.Detail, "", "", result.Comments, false, true, result.Attach, zoomID, result.ID);\n        }\n      });\n    }\n    ;\n\n    // Call history work by vinay\n    //if (window.VA048) // to check if module is installed\n    function showCallInfo(ID) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/LoadCall",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          \'ID\': ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var zoomID = 0;\n          if ($inboxDiv.is(\':visible\')) {\n            zoomID = 0;\n          } else {\n            zoomID = result.AD_Table_ID + "-" + result.Record_ID;\n          }\n          createRightPanelforCall(ID, result.VA048_IsConference, result.VA048_From, result.VA048_To, result.VA048_Duration, result.VA048_Price, result.VA048_Price_Unit, result.VA048_Status, result.VA048_CallNotes, result.Created, result.AD_Table_ID, result.Record_ID, zoomID, VIS.Msg.getMsg("VA048_CallType"), "", result.VA048_FullName, result.Attach);\n        }\n      });\n    }\n    ;\n    function createRightPanelforCall(IDS, isconference, from, to, duration, price, priceUnit, status, note, created, adTableID, recordID, zoomID, category, comment, fullname, attachInfo) {\n      if ($visattachhistoryrightcontentFormail != undefined) {\n        $visattachhistoryrightcontentFormail.hide();\n      }\n      if ($visattachhistoryrightcontentForAppoint != undefined) {\n        $visattachhistoryrightcontentForAppoint.hide();\n      }\n      var duration = duration >= 60 ? DurationCalculator(duration) : duration + \' \' + VIS.Msg.getMsg(\'VA048_Seconds\');\n      if ($fromCall == undefined || $fromCall == null || $fromCall == \'\') {\n        $fromCall = $(\'<p>\' + VIS.Utility.encodeText(from) + \'</p>\');\n        $to = $(\'<p>\' + VIS.Utility.encodeText(to) + \'</p>\');\n        $duration = $(\'<p>\' + VIS.Utility.encodeText(duration) + \'</p>\');\n        $status = $(\'<p>\' + VIS.Utility.encodeText(status) + \'</p>\');\n        $price = $(\'<p>\' + VIS.Utility.encodeText(price) + \'</p>\');\n        $priceUnit = $(\'<p>\' + VIS.Utility.encodeText(priceUnit) + \'</p>\');\n        $created = $(\' <p>\' + VIS.Utility.encodeText(new Date(created).toLocaleString()) + \'</p>\');\n        $category = $(\'<p>\' + VIS.Utility.encodeText(category) + \'</p>\');\n        $note = $(\'<p style="max-height:120px;overflow-y: scroll;">\' + VIS.Utility.encodeText(note) + \'</p>\');\n        $fullname = $(\'<p>\' + VIS.Utility.encodeText(fullname) + \'</p>\');\n        $isconference = $(\'<p>\' + (isconference == \'Y\' ? VIS.Msg.getMsg("VA048_Conference") : VIS.Msg.getMsg("VA048_CallType")) + \'</p>\');\n\n        //if (VIS.Application.isRTL)\n        //    $bpzoomIcon = $(\'<img style="float:left;cursor:pointer" data-ids="\' + zoomID + \'" src="\' + VIS.Application.contextUrl + \'Areas/vis/Images/history-zoom.png" alt="\' + VIS.Msg.getMsg("VA048_CallType") + \'">\');\n        //else\n        $bpzoomIcon = $(\'<i class=" vis vis-find" data-ids="\' + zoomID + \'">\');\n        if (zoomID == 0) $bpzoomIcon.hide();else $bpzoomIcon.show();\n        $visattachhistoryrightcontentForCall = $(\'<div class="vis-attachhistory-right-content">\');\n        $visattachhistorygriddataForCall = $(\'<div class="vis-attachhistory-grid-data" >\');\n        var div0 = $(\'<div style="float:left;width:100%;margin-bottom:10px"></div>\').append($(\'<div class="vis-attachhistory-right-row2">\').append($(\'<h6>\' + VIS.Msg.getMsg("Title") + \' <i class="fa fa-phone"></i></h6>\').append($bpzoomIcon)).append($isconference)).append($(\'<div class="vis-attachhistory-right-row3" style="margin-right: 4px;" >\').append(\'<h6>\' + VIS.Msg.getMsg("User") + \'</h6> \').append($fullname));\n        $visattachhistorygriddataForCall.append(div0);\n        var div1 = $(\'<div style="float:left;width:100%;margin-bottom:10px" ></div>\').append($(\'<div class="vis-attachhistory-right-row2">\').append($(\'<h6>\' + VIS.Msg.getMsg("VA048_From") + \'</h6>\')).append($fromCall)).append($(\'<div class="vis-attachhistory-right-row3" style="margin-right: 4px;" >\').append(\'<h6>\' + VIS.Msg.getMsg("VA048_To") + \'</h6> \').append($to));\n        $visattachhistorygriddataForCall.append(div1);\n        var div2 = $(\'<div style="float:left;width:100%;margin-bottom:10px" ></div>\').append($(\'<div class="vis-attachhistory-right-row2"> \').append(\'<h6>\' + VIS.Msg.getMsg("VA048_Duration") + \'</h6> \').append($duration)).append($(\'<div class="vis-attachhistory-right-row3" style="margin-right: 4px;" >\').append(\'<h6>\' + VIS.Msg.getMsg("VA048_Status") + \'</h6>\').append($status));\n        $visattachhistorygriddataForCall.append(div2);\n        var div3 = $(\'<div style="float:left;width:100%;margin-bottom:10px" ></div>\').append($(\'<div class="vis-attachhistory-right-row2">\').append(\'<h6>\' + VIS.Msg.getMsg("VA048_Price") + \'</h6>\').append($price)).append($(\'<div class="vis-attachhistory-right-row3" style="margin-right: 4px;" >\').append(\'<h6>\' + VIS.Msg.getMsg("VA048_PriceUnit") + \'</h6> \').append($priceUnit));\n        $visattachhistorygriddataForCall.append(div3);\n        var div4 = $(\'<div style="float:left;width:100%;margin-bottom:10px" ></div>\').append($(\'<div class="vis-attachhistory-right-row2">\').append(\'<h6>\' + VIS.Msg.getMsg("Created") + \'</h6>\').append($created)).append($(\'<div class="vis-attachhistory-right-row3" style="margin-right: 4px;" >\').append(\'<h6>\' + VIS.Msg.getMsg("Category") + \'</h6> \').append($category));\n        $visattachhistorygriddataForCall.append(div4);\n        $visattachhistorygriddataForCall.append($(\'<div class="vis-attachhistory-right-row" style="margin-bottom:20px;margin-right: 4px;">\').append(\'<h6>\' + VIS.Msg.getMsg("VA048_Notes") + \'</h6> \').append($note));\n\n        // attachment\n        $visattachhistorygriddataForCall.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Attachments") + \'</h6>\'));\n        if (attachInfo != undefined && attachInfo.length > 0) {\n          for (var k = 0; k < attachInfo.length; k++) {\n            $ulAttachCall.append(\'<li><span class="vis-attachhistory-attach-download"><i class="fa fa-long-arrow-down"></i></span><a data-attid="\' + attachInfo[k].AttID + \'" data-id="\' + attachInfo[k].ID + \'">\' + VIS.Utility.encodeText(attachInfo[k].Name) + \'</a></li>\');\n          }\n        } else {\n          $visattachhistorygriddataForCall.find(".vis-attachhistory-right-row").last().hide();\n        }\n        $visattachhistorygriddataForCall.find(\'.vis-attachhistory-right-row\').last().append($ulAttachCall);\n        //\n\n        // comment\n        if ($txtAreacall == undefined || $txtAreacall == null) $txtAreacall = $(\'<input type="text" placeholder="\' + VIS.Msg.getMsg(\'TypeComment\') + \'"></input>\');\n        resltGrdforCall = $(\'<div class="vis-attachhistory-bottom"></div>\');\n        hisCommentforCall = $(\'<div class="vis-attachhistory-comments vis-feedMessage"></div>\');\n        hisCommentforCall.append($txtAreacall).append(\'<span class="vis-attachhistory-comment-icon vis vis-sms"></span>\');\n        resltGrdforCall.append($(\'<div class="vis-attachhistory-right-row" style="margin-top:0px">\').append(hisCommentforCall).append(\'<p class="vis-attachhistory-view-comments">\' + VIS.Msg.getMsg(\'ViewMoreComments\') + \'</p>\'));\n        $visattachhistoryrightcontentForCall.append(\'<div style="display:none" class="vis-attachhistory-grid-data">\').append($visattachhistorygriddataForCall).append(resltGrdforCall);\n        $lastCommentCall = $(\'<div class="vis-attachhistory-right-row" >\');\n        $visattachhistorygriddataForCall.append($lastCommentCall);\n        //\n\n        $visattachhistoryrightwrap.append($visattachhistoryrightcontentForCall);\n        $bpzoomIcon.on("click", function (e) {\n          var ids = $(e.target).data("ids").split(\'-\');\n          VIS.AEnv.zoom(ids[0], ids[1]);\n        });\n      } else {\n        $visattachhistoryrightcontentForCall.show();\n        $fromCall.text(VIS.Utility.encodeText(from));\n        $to.text(VIS.Utility.encodeText(to));\n        $duration.text(VIS.Utility.encodeText(duration));\n        $status.text(VIS.Utility.encodeText(status));\n        $price.text(VIS.Utility.encodeText(price));\n        $priceUnit.text(VIS.Utility.encodeText(priceUnit));\n        $created.text(VIS.Utility.encodeText(new Date(created).toLocaleString()));\n        $category.text(VIS.Utility.encodeText(category));\n        $note.text(VIS.Utility.encodeText(note));\n        $fullname.text(VIS.Utility.encodeText(fullname));\n        $isconference.text(VIS.Utility.encodeText(isconference == \'Y\' ? VIS.Msg.getMsg("VA048_Conference") : VIS.Msg.getMsg("VA048_CallType")));\n\n        // attachment\n        if (attachInfo != undefined && attachInfo.length > 0) {\n          $ulAttachCall.empty();\n          for (var k = 0; k < attachInfo.length; k++) {\n            $ulAttachCall.append(\'<li><span class="vis-attachhistory-attach-download"><i class="fa fa-long-arrow-down"></i></span><a data-attid="\' + attachInfo[k].AttID + \'" data-id="\' + attachInfo[k].ID + \'">\' + VIS.Utility.encodeText(attachInfo[k].Name) + \'</a></li>\');\n          }\n          $($ulAttachCall.parent()).show();\n        } else {\n          $($ulAttachCall.parent()).hide();\n        }\n        //\n\n        $bpzoomIcon.data("ids", zoomID);\n        if (zoomID == 0) $bpzoomIcon.hide();else $bpzoomIcon.show();\n        $($visattachhistoryrightcontentForCall[0].children[0]).hide();\n      }\n      $(\'.vis-attachhistory-view-comments\').off("click");\n      $(\'.vis-attachhistory-view-comments\').on("click", function () {\n        viewAll(IDS, false, true, this);\n      });\n      if (comment != undefined) $txtAreacall.val(VIS.Utility.encodeText(comment));else $txtAreacall.val("");\n      $(\'.vis-attachhistory-comment-icon\').data("ID", IDS);\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    function DurationCalculator(time) {\n      var hr = ~~(time / 3600);\n      var min = ~~(time % 3600 / 60);\n      var sec = time % 60;\n      var sec_min = "";\n      if (hr > 0) {\n        sec_min += "" + hrs + ":" + (min < 10 ? "0" : "");\n      }\n      sec_min += "" + min + ":" + (sec < 10 ? "0" : "");\n      sec_min += "" + sec;\n      return sec_min + \' \' + VIS.Msg.getMsg(\'VA048_Minutes\');\n    }\n    //\n    var attachID = 0;\n\n    /**/\n    function createRightPanelforLatter(IDS, title, to, from, date, detail, bcc, cc, comments, isMail, isLetter, attachInfo, zoomID, recID) {\n      if ($visattachhistoryrightcontentForAppoint != undefined) {\n        $visattachhistoryrightcontentForAppoint.hide();\n      }\n      if ($visattachhistoryrightcontentForCall != undefined) {\n        $visattachhistoryrightcontentForCall.hide();\n      }\n      isAppointment = false;\n      isCall = false;\n      if ($date == undefined || $date == null) {\n        $title = $(\'<p>\' + VIS.Utility.encodeText(title) + \'</p>\');\n        $to = $(\'<p>\' + VIS.Utility.encodeText(to) + \'</p>\');\n        $bcc = $(\'<p>\' + VIS.Utility.encodeText(bcc) + \'</p>\');\n        $cc = $(\'<p>\' + VIS.Utility.encodeText(cc) + \'</p>\');\n        $from = $(\' <p>\' + VIS.Utility.encodeText(from) + \'</p>\');\n        $date = $(\'<p>\' + VIS.Utility.encodeText(date) + \'</p>\');\n        $emaildropdown = $(\'<a class="vis-attachhistory-email-dropdown fa fa-ellipsis-v" tabindex=""></a>\');\n        if ($detail == undefined || $detail == null) {\n          $detail = $(\'<p class="vis-attachhistory-detail"></p>\');\n        }\n        $detail.html(detail);\n        if ($txtArea == undefined || $txtArea == null) {\n          $txtArea = $(\'<input type="text" placeholder="\' + VIS.Msg.getMsg(\'TypeComment\') + \'"></input>\');\n        }\n        $titleIcon = $(\'<i class="vis vis-email"></i>\');\n        //if (VIS.Application.isRTL) {\n        //    $zoomIcon = $(\'<img style="float:left;cursor:pointer;margin-top:3px;margin-right:5px" data-ids="\' + zoomID + \'" src="\' + VIS.Application.contextUrl + \'Areas/vis/Images/history-zoom.png" alt="email">\');\n        //}\n        //else {\n        $zoomIcon = $(\'<i class="vis vis-find pull-right" data-ids="\' + zoomID + \'" ></i>\');\n        //}\n\n        $visattachhistoryrightcontentFormail = $(\'<div class="vis-attachhistory-right-content">\');\n        $visattachhistorygriddata = $(\'<div class="vis-attachhistory-grid-data">\');\n        $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row2">\').append($(\'<h6>\' + VIS.Msg.getMsg("Title") + \'</h6>\').append($titleIcon)).append($title));\n        $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row3"></div>\').append($emaildropdown).append($zoomIcon));\n        if (isLetter == true) {\n          $visattachhistorygriddata.find(".vis-attachhistory-right-row").last().hide();\n        }\n        if (isLetter == true) {\n          $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row3">\').append($date));\n        }\n        if (zoomID == 0) {\n          $zoomIcon.hide();\n        } else {\n          $zoomIcon.show();\n        }\n        if (isMail == true) {\n          //$titleIcon.prop("src", VIS.Application.contextUrl + \'Areas/vis/Images/history-email.png\');\n          $titleIcon.removeClass(\'vis vis-letter\').addClass(\'vis vis-email\');\n        } else if (isLetter == true) {\n          //$titleIcon.prop("src", VIS.Application.contextUrl + \'Areas/vis/Images/history-letter.png\');\n          $titleIcon.removeClass(\'vis vis-email\').addClass(\'vis vis-letter\');\n        }\n        $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row vis-attachhistory-to">\').append(\'<h6>\' + VIS.Msg.getMsg("To") + \'</h6> \').append($to));\n        if (to == "undefined" || to == null || to == "" || isLetter == true) {\n          $visattachhistorygriddata.find(".vis-attachhistory-right-row").last().hide();\n        }\n        $visattachhistorygriddata.append($(\'<div value="bccDiv" class="vis-attachhistory-right-row  vis-attachhistory-bcc">\').append(\'<h6>\' + VIS.Msg.getMsg("Bcc") + \'</h6> \').append($bcc));\n        if (bcc == "undefined" || bcc == null || bcc == "" || isLetter == true) {\n          $visattachhistorygriddata.find(".vis-attachhistory-right-row").last().hide();\n        }\n        $visattachhistorygriddata.append($(\'<div  value="ccDiv"  class="vis-attachhistory-right-row vis-attachhistory-cc">\').append(\'<h6>\' + VIS.Msg.getMsg("Cc") + \'</h6> \').append($cc));\n        if (cc == "undefined" || cc == null || cc == "" || isLetter == true) {\n          $visattachhistorygriddata.find(".vis-attachhistory-right-row").last().hide();\n        }\n        $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("From") + \'</h6>\').append($from));\n        $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Attachments") + \'</h6>\'));\n        if (attachInfo != undefined && attachInfo.length > 0) {\n          for (var k = 0; k < attachInfo.length; k++) {\n            $ulAttach.append(\'<li><span class="vis-attachhistory-attach-download"><i class="fa fa-long-arrow-down"></i></span><a data-IDs="\' + attachInfo[k].ID + \'">\' + VIS.Utility.encodeText(attachInfo[k].Name) + \'</a></li>\');\n          }\n        } else {\n          $visattachhistorygriddata.find(".vis-attachhistory-right-row").last().hide();\n        }\n        $visattachhistorygriddata.find(\'.vis-attachhistory-right-row\').last().append($ulAttach);\n        $lastComment = $(\'<div class="vis-attachhistory-right-row">\');\n        $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Details") + \'</h6>\').append($detail)).append($lastComment);\n        resltGrdforMail = $(\'<div class="vis-attachhistory-bottom"></div>\');\n        hisCommentforMail = $(\'<div class="vis-attachhistory-comments vis-feedMessage"></div>\');\n        hisCommentforMail.append($txtArea).append(\'<span class="vis-attachhistory-comment-icon vis vis-sms"></span>\');\n        resltGrdforMail.append($(\'<div class="vis-attachhistory-right-row" style="margin-top:0px">\').append(hisCommentforMail).append(\'<p class="vis-attachhistory-view-comments" style="float:right;width:auto">\' + VIS.Msg.getMsg(\'ViewMoreComments\') + \'</p>\'));\n\n        //=============\n        $visattachhistoryrightcontentFormail.append(\'<div style="display:none" class="vis-attachhistory-grid-data">\').append($visattachhistorygriddata).append(resltGrdforMail);\n        if ($visattachhistorysearchwrap.parent() != undefined) {\n          $visattachhistoryrightwrap.append($visattachhistoryrightcontentFormail);\n        } else {\n          $visattachhistoryrightwrap.append($visattachhistoryrightcontentFormail);\n        }\n        $zoomIcon.on("click", function (e) {\n          var ids = $(e.target).data("ids").split(\'-\');\n          VIS.AEnv.zoom(ids[0], ids[1]);\n        });\n      } else {\n        //$lastComment = $(\'<div class="vis-attachhistory-right-row">\');\n\n        // $visattachhistorygriddata.append($(\'<div class="vis-attachhistory-right-row">\').append($lastComment));\n\n        $visattachhistoryrightcontentFormail.show();\n        $($visattachhistoryrightcontentFormail[0].children[0]).hide();\n        if ($emaildropdown == undefined || $emaildropdown == null) {\n          $emaildropdown = $(\'<a class="vis-attachhistory-email-dropdown fa fa-ellipsis-v" tabindex=""></a>\');\n        }\n        if (isMail == true) {\n          //$titleIcon.prop("src", VIS.Application.contextUrl + \'Areas/vis/Images/history-email.png\');\n          $titleIcon.removeClass(\'vis vis-letter\').addClass(\'vis vis-email\');\n          $emaildropdown.show();\n        } else if (isLetter == true) {\n          //$titleIcon.prop("src", VIS.Application.contextUrl + \'Areas/vis/Images/history-letter.png\');\n          $titleIcon.removeClass(\'vis vis-email\').addClass(\'vis vis-letter\');\n          $emaildropdown.hide();\n        }\n        $title.text(VIS.Utility.encodeText(title));\n        if (to == "undefined" || to == null && to == "" || isLetter == true) {\n          $($to.parent()).hide();\n        } else {\n          $to.text(VIS.Utility.encodeText(to));\n          $($to.parent()).show();\n        }\n        if (bcc == "undefined" || bcc == null || bcc == "" || isLetter == true) {\n          $($bcc.parent()).hide();\n        } else {\n          $bcc.text(VIS.Utility.encodeText(bcc));\n          $($bcc.parent()).show();\n        }\n        if (cc == "undefined" || cc == null || cc == "" || isLetter == true) {\n          $($cc.parent()).hide();\n        } else {\n          $cc.text(VIS.Utility.encodeText(cc));\n          $($cc.parent()).show();\n        }\n        if (isLetter == true) {\n          $($from.parent()).hide();\n        } else {\n          $from.text(VIS.Utility.encodeText(from));\n          $($from.parent()).show();\n        }\n        $zoomIcon.data("ids", zoomID);\n        if (zoomID == 0) {\n          $zoomIcon.hide();\n        } else {\n          $zoomIcon.show();\n        }\n        $date.text(VIS.Utility.encodeText(date));\n        if (attachInfo != undefined && attachInfo.length > 0) {\n          $ulAttach.empty();\n          for (var k = 0; k < attachInfo.length; k++) {\n            $ulAttach.append(\'<li><span class="vis-attachhistory-attach-download"><i class="fa fa-long-arrow-down"></i></span><a  data-IDs="\' + attachInfo[k].ID + \'">\' + VIS.Utility.encodeText(attachInfo[k].Name) + \'</a></li>\');\n          }\n          $($ulAttach.parent()).show();\n        } else {\n          $($ulAttach.parent()).hide();\n        }\n        $detail.html(detail);\n      }\n      $(\'.vis-attachhistory-view-comments\').off("click");\n      $(\'.vis-attachhistory-view-comments\').on("click", function () {\n        viewAll(recID, false, false, this);\n      });\n      if (isMail) {\n        attachID = recID;\n        $emaildropdown.show();\n        $(\'.vis-attachhistory-email-dropdown\').off("click");\n        $(\'.vis-attachhistory-email-dropdown\').on("click", function () {\n          $(this).w2overlay($menu.clone(true), {\n            css: {\n              height: \'300px\'\n            }\n          });\n        });\n      } else {\n        $emaildropdown.hide();\n      }\n\n      //   $btnSave.data("ID", IDS);\n\n      $(\'.vis-attachhistory-comment-icon\').data("ID", IDS);\n      if (comments != undefined) {\n        $txtArea.val(VIS.Utility.encodeText(comments));\n      } else {\n        $txtArea.val("");\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n\n    /**/\n    //below line commented to resolve data hiding issue in history\n    function createRightPanelforAppointment(IDS, location, description, label, startDate, endDate, allDay, detail, comment, zoomID, subject, category, contacts, recID, ContactNames) {\n      if ($visattachhistoryrightcontentFormail != undefined) {\n        $visattachhistoryrightcontentFormail.hide();\n      }\n      if ($visattachhistoryrightcontentForCall != undefined) {\n        $visattachhistoryrightcontentForCall.hide();\n      }\n      isAppointment = true;\n      isCall = false;\n      if ($startDate == undefined || $startDate == null) {\n        $location = $(\'<p>\' + VIS.Utility.encodeText(location) + \'</p>\');\n        $subjectApp = $(\'<p>\' + VIS.Utility.encodeText(subject) + \'</p>\');\n        $description = $(\'<p>\' + VIS.Utility.encodeText(description) + \'</p>\');\n        $category = $(\'<p>\' + VIS.Utility.encodeText(category) + \'</p>\');\n        $contacts = $(\'<p>\' + VIS.Utility.encodeText(ContactNames) + \'</p>\');\n        $label = $(\'<p>\' + VIS.Utility.encodeText(label) + \'</p>\');\n        if (startDate.indexOf(\'Z\') > 0) {\n          $startDate = $(\'<p>\' + VIS.Utility.encodeText(new Date(startDate).toLocaleString()) + \'</p>\');\n        } else {\n          $startDate = $(\'<p>\' + VIS.Utility.encodeText(new Date(startDate + "Z").toLocaleString()) + \'</p>\');\n        }\n        if (endDate.indexOf(\'Z\') > 0) {\n          $endDate = $(\' <p>\' + VIS.Utility.encodeText(new Date(endDate).toLocaleString()) + \'</p>\');\n        } else {\n          $endDate = $(\' <p>\' + VIS.Utility.encodeText(new Date(endDate + "Z").toLocaleString()) + \'</p>\');\n        }\n        $allDay = $(\'<p>\' + VIS.Utility.encodeText(allDay) + \'</p>\');\n        //if ($detail == undefined || $detail == null) {\n        //    $detail = $(\'<p class="vis-attachhistory-detail"></p>\');\n        //}\n        //$detail.html(detail);\n\n        if ($txtAreaAppoint == undefined || $txtAreaAppoint == null) {\n          $txtAreaAppoint = $(\'<input type="text" placeholder="\' + VIS.Msg.getMsg(\'TypeComment\') + \'"></input>\');\n        }\n        //if (VIS.Application.isRTL) {\n        //    $bpzoomIcon = $(\'<img style="float:left;cursor:pointer" data-ids="\' + zoomID + \'" src="\' + VIS.Application.contextUrl + \'Areas/vis/Images/history-zoom.png" alt="email">\');\n        //}\n        //else {\n        $bpzoomIcon = $(\'<i class=" vis vis-find" data-ids="\' + zoomID + \'" >\');\n        //}\n        $visattachhistoryrightcontentForAppoint = $(\'<div class="vis-attachhistory-right-content">\');\n        $visattachhistorygriddataForAppoint = $(\'<div class="vis-attachhistory-grid-data" >\');\n        var div1 = $(\'<div style="float:left;width:100%" ></div>\');\n        div1.append($(\'<div class="vis-attachhistory-right-row2">\').append($(\'<h6>\' + VIS.Msg.getMsg("Title") + \' <i class="vis vis-appointment"></i></h6>\').append($bpzoomIcon)).append($subjectApp));\n        if (zoomID == 0) {\n          $bpzoomIcon.hide();\n        } else {\n          $bpzoomIcon.show();\n        }\n        div1.append($(\'<div class="vis-attachhistory-right-row3"  style="margin-bottom:11px" >\').append(\'<h6>\' + VIS.Msg.getMsg("Location") + \'</h6> \').append($location));\n        if (location == "undefined" || location == null && location == "") {\n          $visattachhistorygriddataForAppoint.find(".vis-attachhistory-right-row").last().hide();\n        }\n        $visattachhistorygriddataForAppoint.append(div1);\n        var div2 = $(\'<div style="float:left;width:100%" ></div>\');\n        div2.append($(\'<div  class="vis-attachhistory-right-row2"> \').append(\'<h6>\' + VIS.Msg.getMsg("StartDate") + \'</h6> \').append($startDate));\n        div2.append($(\'<div class="vis-attachhistory-right-row3"  style="margin-bottom:11px" >\').append(\'<h6>\' + VIS.Msg.getMsg("EndDate") + \'</h6>\').append($endDate));\n        $visattachhistorygriddataForAppoint.append(div2);\n        var div3 = $(\'<div style="float:left;width:100%" ></div>\');\n        div3.append($(\'<div class="vis-attachhistory-right-row2">\').append(\'<h6>\' + VIS.Msg.getMsg("AllDay") + \'</h6>\').append($allDay));\n        div3.append($(\'<div class="vis-attachhistory-right-row3"  style="margin-bottom:11px" >\').append(\'<h6>\' + VIS.Msg.getMsg("Category") + \'</h6> \').append($category));\n        $visattachhistorygriddataForAppoint.append(div3);\n        $visattachhistorygriddataForAppoint.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Contacts") + \'</h6> \').append($contacts));\n        $lastCommentAppoint = $(\'<div class="vis-attachhistory-right-row" >\');\n        $visattachhistorygriddataForAppoint.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Description") + \'</h6> \').append($description)).append($lastCommentAppoint);\n        if (description == "undefined" || description == null && description == "") {\n          $visattachhistorygriddataForAppoint.find(".vis-attachhistory-right-row").last().hide();\n        }\n\n        //if ($detail.parent() != undefined) {\n        //    $visattachhistorygriddataForAppoint.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Details") + \'</h6>\'));\n        //}\n        //else {\n        //    $visattachhistorygriddataForAppoint.append($(\'<div class="vis-attachhistory-right-row">\').append(\'<h6>\' + VIS.Msg.getMsg("Details") + \'</h6>\').append($detail));\n        //}\n\n        resltGrdforAppoint = $(\'<div class="vis-attachhistory-bottom"></div>\');\n        hisCommentforAppoint = $(\'<div class="vis-attachhistory-comments vis-feedMessage"></div>\');\n        hisCommentforAppoint.append($txtAreaAppoint).append(\'<span class="vis-attachhistory-comment-icon vis vis-sms"></span>\');\n        resltGrdforAppoint.append($(\'<div class="vis-attachhistory-right-row" style="margin-top:0px">\').append(hisCommentforAppoint).append(\'<p class="vis-attachhistory-view-comments">\' + VIS.Msg.getMsg(\'ViewMoreComments\') + \'</p>\'));\n        $visattachhistoryrightcontentForAppoint.append(\'<div style="display:none" class="vis-attachhistory-grid-data">\').append($visattachhistorygriddataForAppoint).append(resltGrdforAppoint);\n        $visattachhistoryrightwrap.append($visattachhistoryrightcontentForAppoint);\n        $bpzoomIcon.on("click", function (e) {\n          var ids = $(e.target).data("ids").split(\'-\');\n          VIS.AEnv.zoom(ids[0], ids[1]);\n        });\n      } else {\n        $visattachhistoryrightcontentForAppoint.show();\n        $subjectApp.text(VIS.Utility.encodeText(subject));\n        $location.text(VIS.Utility.encodeText(location));\n        if (description == "undefined" || description == null || description == "") {\n          $($description.parent()).hide();\n        } else {\n          $description.text(VIS.Utility.encodeText(description));\n          $($description.parent()).show();\n        }\n        $contacts.text(VIS.Utility.encodeText(ContactNames));\n        if (category == "undefined" || category == null || category == "") {\n          //$($category.parent()).hide();\n          $category.text(VIS.Utility.encodeText(""));\n        } else {\n          $category.text(VIS.Utility.encodeText(category));\n          //$($category.parent()).show();\n        }\n        $bpzoomIcon.data("ids", zoomID);\n        if (zoomID == 0) {\n          $bpzoomIcon.hide();\n        } else {\n          $bpzoomIcon.show();\n        }\n        $startDate.text(VIS.Utility.encodeText(new Date(startDate).toLocaleString()));\n        $endDate.text(VIS.Utility.encodeText(new Date(endDate).toLocaleString()));\n        $allDay.text(VIS.Utility.encodeText(allDay));\n        $($visattachhistoryrightcontentForAppoint[0].children[0]).hide();\n      }\n      $(\'.vis-attachhistory-view-comments\').off("click");\n      $(\'.vis-attachhistory-view-comments\').on("click", function () {\n        viewAll(recID, true, false, this);\n      });\n      if (comment != undefined) {\n        $txtAreaAppoint.val(VIS.Utility.encodeText(comment));\n      } else {\n        $txtAreaAppoint.val("");\n      }\n      $(\'.vis-attachhistory-comment-icon\').data("ID", IDS);\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    function viewAll(record_ID, isAppointment, isCall, para) {\n      if (isAppointment == true) {\n        if ($visattachhistorygriddataForAppoint.is(\':visible\')) {\n          $.ajax({\n            url: VIS.Application.contextUrl + "AttachmentHistory/ViewChatonHistory",\n            datatype: "json",\n            type: "POST",\n            cache: false,\n            data: {\n              record_ID: record_ID,\n              isAppointment: isAppointment,\n              isCall: isCall\n            },\n            success: function (data) {\n              var result = JSON.parse(data);\n              createCommentsSection(result, isAppointment, isCall);\n            },\n            error: function (data) {\n              VIS.ADialog.error("RecordNotSaved");\n            }\n          });\n          $(para).text(VIS.Msg.getMsg(\'HideComments\'));\n        } else {\n          $visattachhistorygriddataForAppoint.show();\n          $($visattachhistoryrightcontentForAppoint[0].children[0]).hide();\n          $(para).text(VIS.Msg.getMsg(\'ViewMoreComments\'));\n        }\n      } else if (isCall == true) {\n        if ($visattachhistorygriddataForCall.is(\':visible\')) {\n          $.ajax({\n            url: VIS.Application.contextUrl + "AttachmentHistory/ViewChatonHistory",\n            datatype: "json",\n            type: "POST",\n            cache: false,\n            data: {\n              record_ID: record_ID,\n              isAppointment: isAppointment,\n              isCall: isCall\n            },\n            success: function (data) {\n              var result = JSON.parse(data);\n              createCommentsSection(result, isAppointment, isCall);\n            },\n            error: function (data) {\n              VIS.ADialog.error("RecordNotSaved");\n            }\n          });\n          $(para).text(VIS.Msg.getMsg(\'HideComments\'));\n        } else {\n          $visattachhistorygriddataForCall.show();\n          $($visattachhistoryrightcontentForCall[0].children[0]).hide();\n          $(para).text(VIS.Msg.getMsg(\'ViewMoreComments\'));\n        }\n      } else {\n        if ($visattachhistorygriddata.is(\':visible\')) {\n          $.ajax({\n            url: VIS.Application.contextUrl + "AttachmentHistory/ViewChatonHistory",\n            datatype: "json",\n            type: "POST",\n            cache: false,\n            data: {\n              record_ID: record_ID,\n              isAppointment: isAppointment,\n              isCall: isCall\n            },\n            success: function (data) {\n              var result = JSON.parse(data);\n              createCommentsSection(result, isAppointment, isCall);\n            },\n            error: function (data) {\n              VIS.ADialog.error("RecordNotSaved");\n            }\n          });\n          $(para).text(VIS.Msg.getMsg(\'HideComments\'));\n        } else {\n          $visattachhistorygriddata.show();\n          $($visattachhistoryrightcontentFormail[0].children[0]).hide();\n          $(para).text(VIS.Msg.getMsg(\'ViewMoreComments\'));\n        }\n      }\n    }\n    ;\n    function updateComments(str, result) {\n      str += \'   <div class="vis-attachhistory-comment-data"><div class="vis-attachhistory-comment-detail vis-feedDetails-cmnt">\';\n      if (result.UserImage != "NoRecordFound" && result.UserImage != "FileDoesn\'tExist" && result.UserImage != null) {\n        str += \'<img  class="userAvatar-Feeds"  src="\' + result.UserImage + \'?\' + new Date() + \'">\';\n      } else {\n        str += \'<i class="fa fa-user userAvatar-Feeds"></i>\';\n      }\n      str += \'<div class="vis-attachhistory-comment-text">\';\n      if (result.CreatedBy == VIS.Env.getCtx().getAD_User_ID()) {\n        str += "<h6>" + VIS.Msg.getMsg("Me") + " </h6>";\n      } else {\n        str += "<h6>" + result.UserName + "</h6>";\n      }\n      str += \' <p>\' + result.CharacterData + \'</p>\' + \'</div><div class="vis-attachhistory-comment-dateTime"><p>\' + new Date(result.Created).toLocaleString() + \'</p>\' + \'</div></div></div>\';\n      return str;\n    }\n    ;\n    function createCommentsSection(result, isappointment, iscall) {\n      if (result.length > 0) {\n        var str = \' <div class="vis-attachhistory-comments-container">\';\n        for (var i = 0; i < result.length; i++) {\n          //str += \'   <div class="vis-attachhistory-comment-data"><div class="vis-attachhistory-comment-detail">\';\n\n          //if (result[i].UserImage != "NoRecordFound" && result[i].UserImage != "FileDoesn\'tExist" && result[i].UserImage != null) {\n          //    str += \'<img  class="userAvatar-Feeds"  src="\' + result[i].UserImage + \'?\' + new Date() + \'">\';\n          //}\n          //else {\n          //    str += \'<img  class="userAvatar-Feeds" src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/home/defaultUser46X46.png ">\';\n          //}\n          //str += \'<div class="vis-attachhistory-comment-text">\';\n\n          //if (result[i].CreatedBy == VIS.Env.getCtx().getAD_User_ID()) {\n          //    str += "<h6>" + VIS.Msg.getMsg("Me") + " </h6>";\n          //}\n          //else {\n          //    str += "<h6>" + result[i].UserName + "</h6>"\n          //}\n\n          //str += \' <p>\' + result[i].CharacterData + \'</p>\' +\n          // \'</div></div><div class="vis-attachhistory-comment-dateTime"><p>\' + new Date(result[i].Created).toLocaleString() + \'</p>\' +\n          // \'</div></div>\';\n          str = updateComments(str, result[i]);\n        }\n        str += \'</div>\';\n      }\n      if (iscall == true) {\n        if ($visattachhistorygriddataForCall.is(\':visible\')) {\n          $($visattachhistoryrightcontentForCall[0].children[0]).show();\n          $($visattachhistoryrightcontentForCall[0].children[0]).empty();\n          $($visattachhistoryrightcontentForCall[0].children[0]).append(str);\n          $visattachhistorygriddataForCall.hide();\n        } else {\n          $visattachhistorygriddataForCall.show();\n          $($visattachhistoryrightcontentForCall[0].children[0]).hide();\n        }\n      } else if (isappointment == true) {\n        if ($visattachhistorygriddataForAppoint.is(\':visible\')) {\n          $($visattachhistoryrightcontentForAppoint[0].children[0]).show();\n          $($visattachhistoryrightcontentForAppoint[0].children[0]).empty();\n          $($visattachhistoryrightcontentForAppoint[0].children[0]).append(str);\n          $visattachhistorygriddataForAppoint.hide();\n        } else {\n          $visattachhistorygriddataForAppoint.show();\n          $($visattachhistoryrightcontentForAppoint[0].children[0]).hide();\n        }\n      } else {\n        if ($visattachhistorygriddata.is(\':visible\')) {\n          $($visattachhistoryrightcontentFormail[0].children[0]).show();\n          $($visattachhistoryrightcontentFormail[0].children[0]).empty();\n          $($visattachhistoryrightcontentFormail[0].children[0]).append(str);\n          $visattachhistorygriddata.hide();\n        } else {\n          $visattachhistorygriddata.show();\n          $($visattachhistoryrightcontentFormail[0].children[0]).hide();\n        }\n      }\n    }\n    ;\n\n    /**/\n    function downLoadAttach(e) {\n      var target = e.target;\n      var name = \'\';\n      var ID = \'\';\n      if ($(target).is(\'a\')) {\n        name = $(target).text();\n        ID = $(target).data(\'ids\');\n      } else if ($(target).is(\'i\')) {\n        name = $($(target).parent()).siblings().text();\n        ID = $($(target).parent()).siblings().data(\'ids\');\n      } else if ($(target).is(\'span\')) {\n        name = $(target).siblings().text();\n        ID = $(target).siblings().data(\'ids\');\n      }\n      if (ID == null || ID == 0) {\n        return;\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/DownloadAttachment",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          ID: ID,\n          Name: name\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var url = VIS.Application.contextUrl + "TempDownload/" + result;\n          window.open(url);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    function downLoadAttachCall(e) {\n      var target = e.target;\n      var name = \'\';\n      var ID = \'\';\n      var AttID = \'\';\n      if ($(target).is(\'a\')) {\n        name = $(target).text();\n        AttID = $(target).data(\'attid\');\n        ID = $(target).data(\'id\');\n      } else if ($(target).is(\'img\')) {\n        name = $($(target).parent()).siblings().text();\n        AttID = $($(target).parent()).siblings().data(\'attid\');\n        ID = $($(target).parent()).siblings().data(\'id\');\n      } else if ($(target).is(\'span\')) {\n        name = $(target).siblings().text();\n        AttID = $(target).siblings().data(\'attid\');\n        ID = $($(target).parent()).siblings().data(\'id\');\n      }\n      if (ID == null || ID == 0) {\n        return;\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/DownloadAttachmentCall",\n        datatype: "json",\n        type: "get",\n        cache: false,\n        data: {\n          AttID: AttID,\n          ID: ID,\n          Name: name\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result != null && result != "") {\n            var url = VIS.Application.contextUrl + "TempDownload/" + result;\n            window.open(url);\n          } else {\n            VIS.ADialog.error("AttachmentNotFound");\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    function save(e) {\n      var target = e.target;\n      if (e.keyCode != undefined) {\n        if (e.keyCode != 13) {\n          return;\n        }\n      }\n      if (e.keyCode == undefined && !$(target).hasClass("vis-attachhistory-comment-icon")) {\n        return;\n      }\n      var ID = 0;\n      //if ($(target).is(\'span\')) {\n      //    ID = $(target).data("ID");\n      //}\n      ID = $(".vis-attachhistory-comment-icon").data("ID");\n      if (ID == 0) {\n        return;\n      }\n      var comme = \'\';\n      if (isAppointment == true) {\n        comme = $txtAreaAppoint.val();\n      } else if (isCall == true) {\n        comme = $txtAreacall.val();\n      } else {\n        comme = $txtArea.val();\n      }\n      if (comme.length == 0) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/SaveComment",\n        datatype: "json",\n        type: "POST",\n        cache: false,\n        data: {\n          ID: ID,\n          Text: comme,\n          isAppointment: isAppointment,\n          isCall: isCall\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var updateComment = true;\n          if (isCall == true) {\n            $txtAreacall.val("");\n            if ($visattachhistorygriddataForCall.is(\':visible\')) {\n              updateComment = false;\n            }\n          } else if (isAppointment == true) {\n            $txtAreaAppoint.val("");\n            if ($visattachhistorygriddataForAppoint.is(\':visible\')) {\n              updateComment = false;\n            }\n          } else {\n            $txtArea.val("");\n            if ($visattachhistorygriddata.is(\':visible\')) {\n              updateComment = false;\n            }\n          }\n          ///============================\n          if (updateComment == true) {\n            if (result.length > 0) {\n              var str = \' <div class="vis-attachhistory-comments-container">\';\n              for (var i = 0; i < result.length; i++) {\n                str = updateComments(str, result[i]);\n              }\n              str += \'</div>\';\n            }\n            if (isAppointment == true) {\n              $($visattachhistoryrightcontentForAppoint[0].children[0]).empty();\n              $($visattachhistoryrightcontentForAppoint[0].children[0]).append(str);\n            } else if (isCall == true) {\n              $($visattachhistoryrightcontentForCall[0].children[0]).empty();\n              $($visattachhistoryrightcontentForCall[0].children[0]).append(str);\n            } else {\n              $($visattachhistoryrightcontentFormail[0].children[0]).empty();\n              $($visattachhistoryrightcontentFormail[0].children[0]).append(str);\n            }\n          } else {\n            lastHistoryComment(erecid, isAppointment, isCall);\n          }\n\n          //====================================\n        },\n        error: function (data) {\n          VIS.ADialog.error("RecordNotSaved");\n        }\n      });\n      //}\n    }\n    ;\n    function lastHistoryComment(erecid, isAppointment, isCall) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "AttachmentHistory/ViewChatonLastHistory",\n        datatype: "json",\n        type: "POST",\n        cache: false,\n        //erecid\n        //data: { record_ID: erecid, isAppointment: false },\n        //data: { record_ID: attachID, isAppointment: isAppointment },\n        data: {\n          record_ID: erecid,\n          isAppointment: isAppointment,\n          isCall: isCall\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          //var cmt = \'<div style="height:88px"></div>\';\n          if (result.length > 0) {\n            if (isAppointment) {\n              var cmt = \'<div style="height:88px"></div>\';\n              $lastCommentAppoint.empty();\n              for (var i = 0; i < result.length; i++) {\n                cmt = updateComments(cmt, result[i]);\n                $lastCommentAppoint.append(cmt);\n              }\n            } else if (isCall) {\n              var cmt = \'<div></div>\'; //style="max-height:120px;overflow-y: scroll;margin-bottom: 15px;"\n              $lastCommentCall.empty();\n              for (var i = 0; i < result.length; i++) {\n                cmt = updateComments(cmt, result[i]);\n                $lastCommentCall.append(cmt);\n              }\n            } else {\n              var cmt = \'<div style="height:120px"></div>\';\n              $lastComment.empty();\n              for (var i = 0; i < result.length; i++) {\n                cmt = updateComments(cmt, result[i]);\n                $lastComment.append(cmt);\n              }\n            }\n          } else {\n            if (isCall) {\n              $lastCommentCall.empty();\n            } else {\n              if (isAppointment) {\n                $lastCommentAppoint.empty();\n              } else {\n                $lastComment.empty();\n              }\n            }\n          }\n        }\n      });\n    }\n    ;\n    function changePage(e) {}\n\n    /* Used by CFrame so that this form can be embedded into container */\n    this.getRoot = function () {\n      return $mainDiv;\n    };\n\n    /*Show Form*/\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      this.initializeComponent();\n      ch.setContent($mainDiv);\n      if (isip == true) {\n        ch.setHeight(650);\n        ch.setWidth(800);\n      } else {\n        ch.setHeight(650);\n        //ch.setWidth(1200);\n        ch.setWidth(1000);\n      }\n      ch.setTitle(VIS.Msg.getMsg("History"));\n      ch.setModal(true);\n\n      //lastHistoryComment();\n      ch.show();\n      ch.hideButtons();\n      this.displayInboxDiv();\n      ///  lastHistoryComment(erecid, isAppointment);\n\n      ch.onClose = function () {\n        self.dispose();\n      };\n    };\n\n    /* Dispose all objects created on form Close */\n    this.dispose = function () {\n      windowNo = 0;\n      ctx = null;\n      columns = [];\n      columns = null;\n      rows = [];\n      rows = null;\n      colkeys = [];\n      colkeys = null;\n      if ($historycontentwrap != null) $historycontentwrap.remove();\n      if ($historyleftwrap != null) $historyleftwrap.remove();\n      if ($historytabletop != null) $historytabletop.remove();\n      if ($visapaneltabcontrol != null) $visapaneltabcontrol.remove();\n      if ($visattachhistoryappsactionul != null) $visattachhistoryappsactionul.remove();\n      if ($historytablewrap != null) $historytablewrap.remove();\n      if ($visattachhistoryrightwrap != null) $visattachhistoryrightwrap.remove();\n      if ($visattachhistoryrightcontentFormail != null) $visattachhistoryrightcontentFormail.remove();\n      if ($visattachhistoryrightcontentForAppoint != null) $visattachhistoryrightcontentForAppoint.remove();\n      if ($visattachhistorygriddataForAppoint != null) $visattachhistorygriddataForAppoint.remove();\n      if (resltGrdforMail != null) resltGrdforMail.remove();\n      if (resltGrdforAppoint != null) resltGrdforAppoint.remove();\n      if ($visattachhistoryrightwrapNotFound != null) $visattachhistoryrightwrapNotFound.remove();\n      if ($visattachhistorygriddata != null) $visattachhistorygriddata.remove();\n      if ($ulAttach != null) $ulAttach.remove();\n      if ($ulAttachCall != null) $ulAttachCall.remove();\n      if ($title != null) $title.remove();\n      if ($to != null) $to.remove();\n      if ($from != null) $from.remove();\n      if ($fromCall != null) $fromCall.remove();\n      if ($subject != null) $subject.remove();\n      if ($detail != null) $detail.remove();\n      if ($date != null) $date.remove();\n      if ($txtArea != null) $txtArea.remove();\n      if ($bcc != null) $bcc.remove();\n      if ($cc != null) $cc.remove();\n      if ($titleIcon != null) $titleIcon.remove();\n      //if ($btnSave != null)\n      //    $btnSave.remove();\n      //if ($btnSaveAppoint != null)\n      //    $btnSaveAppoint.remove();\n      if ($txtAreaAppoint != null) $txtAreaAppoint.remove();\n      if ($location != null) $location.remove();\n      if ($subjectApp != null) $subjectApp.remove();\n      if ($description != null) $description.remove();\n      if ($label != null) $label.remove();\n      if ($startDate != null) $startDate.remove();\n      if ($endDate != null) $endDate.remove();\n      if ($allDay != null) $allDay.remove();\n      if ($bsyDiv != null) $bsyDiv.remove();\n      if (ulPagging != null) ulPagging.remove();\n      if ($firstPage != null) $firstPage.remove();\n      if ($lastPage != null) $lastPage.remove();\n      if ($nextPage != null) $nextPage.remove();\n      if ($previousPage != null) $previousPage.remove();\n      if ($pageCombo != null) $pageCombo.remove();\n      if ($selectPages != null) $selectPages.remove();\n      if ($inboxDiv != null && $inboxDiv != undefined) {\n        $inboxDiv.remove();\n      }\n      $inboxDiv = null;\n\n      //$rightmainDiv.remove();\n      //$rightmainDiv = null;\n      //$relatedInfoDiv.remove();\n      //$relatedInfoDiv = null;\n      //$mainDiv.remove();\n      //$mainDiv = null;\n      //ch = null;\n\n      if ($datagrdRecordInfo != null && $datagrdRecordInfo != undefined) {\n        $datagrdRecordInfo.destroy();\n      }\n      $datagrdRecordInfo = null;\n      if (w2ui[\'historyinboxgrid\'] != undefined) {\n        w2ui[\'historyinboxgrid\'].destroy();\n      }\n      if ($datagrdRaltedRecordInfo != null && $datagrdRaltedRecordInfo != undefined) {\n        $datagrdRaltedRecordInfo.destroy();\n      }\n      $datagrdRaltedRecordInfo = null;\n      if (w2ui[\'realtedhistorygrid\'] != undefined) {\n        w2ui[\'realtedhistorygrid\'].destroy();\n      }\n      if ($datagrdUserRecordInfo != null && $datagrdUserRecordInfo != undefined) {\n        $datagrdUserRecordInfo.destroy();\n      }\n      $datagrdUserRecordInfo = null;\n      if (w2ui[\'userhistorygrid\'] != undefined) {\n        w2ui[\'userhistorygrid\'].destroy();\n      }\n      self = null;\n    };\n  };\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/attachmentHistory.js?')},"./Areas/VIS/Scripts/app/Framework/attachmentform.js":()=>{eval('(function (VIS, $) {\n  function attachmentForm(windowNo, AD_Attachment_ID, AD_Table_ID, Record_ID, trxName, newRecord_ID, restrictUpload, isDMSAttachment, isViewOnly) {\n    var tableName = "";\n    var isFALoaded = false;\n    var isIMALoaded = false;\n    var isSMALoaded = false;\n    var isLTRLoaded = false;\n    var isAPPLoaded = false;\n    this.isWindowAction = false;\n    var dLAContent = null;\n    var dOldAtt = null;\n    var dOAContent = null;\n    var cmbFileLocation = null;\n    this.windowNo = windowNo;\n    var AD_Attachment_ID = 0;\n    if (!newRecord_ID) {\n      newRecord_ID = 0;\n    }\n    if (!isDMSAttachment) {\n      isDMSAttachment = false;\n    }\n    if (!restrictUpload) {\n      restrictUpload = false;\n    }\n    function disposeComponent() {\n      dLAContent.empty();\n      dLAContent = null;\n      dOldAtt.empty();\n      dOldAtt = null;\n      dOAContent.empty();\n      dOAContent = null;\n      fileAtt = null;\n      inboxMailAtt = null;\n      sentMailAtt = null;\n      letter = null;\n      appointment = null;\n      tabs = null;\n      divAppointment = null;\n      divContainer = null;\n      divFA = null;\n      divIMA = null;\n      divSMA = null;\n      divLetter = null;\n      bsyDiv = null;\n      tabs = null;\n      lstLatestFiles = null;\n      progresBar = null;\n      oldFiles = null;\n      if (root != null) {\n        root.dialog(\'destroy\');\n        root.remove();\n      }\n      root = null;\n    }\n    this.onClose = null;\n    var selfi = this;\n    var root = null;\n    if (VIS.Application.isRTL) {\n      root = $("<div style=\'overflow:hidden;width:100%;height:100%;\'>");\n    } else {\n      root = $("<div style=\'overflow:hidden;width:100%;height:100%;\'>");\n    }\n    //root.css("width", "100%");\n    //root.css("height", "100%");\n\n    var tabs = $("<ul style=\'height:30px;display:none;list-style:none;width:97%;margin-left:-41px\'>");\n    //tabs.css("list-style", "none");\n    //tabs.css("width", "97%");\n    //tabs.css("margin-left", "-41px");\n\n    var fileAtt = $("<li>");\n    fileAtt.css("float", "left");\n    fileAtt.css("margin", "1px");\n    fileAtt.css("padding", "5px");\n    fileAtt.css("display", "block");\n    fileAtt.css("position", "relative");\n    fileAtt.css("font-weight", "700");\n    // fileAtt.css("background", "#eee");\n    //fileAtt.css("border", "1px solid #ddc");\n    fileAtt.css("border", "0px");\n    fileAtt.css("border-bottom", "none");\n    fileAtt.css("border-width", "1px");\n    fileAtt.css("color", "#999");\n    fileAtt.css("cursor", "default");\n    fileAtt.css("height", "35px");\n    fileAtt.css("margin-bottom", "-1px");\n    fileAtt.css("margin-right", "5px");\n    fileAtt.css("border-top-left-radius", "3px");\n    fileAtt.css("border-top-right-radius", "3px");\n    fileAtt.append(VIS.Msg.getMsg("FileAttachment"));\n    tabs.append(fileAtt);\n    var inboxMailAtt = $("<li>");\n    inboxMailAtt.css("float", "left");\n    inboxMailAtt.css("margin", "1px");\n    inboxMailAtt.css("padding", "5px");\n    inboxMailAtt.css("display", "block");\n    inboxMailAtt.css("position", "relative");\n    inboxMailAtt.css("font-weight", "700");\n    // fileAtt.css("background", "#eee");\n    //fileAtt.css("border", "1px solid #ddc");\n    fileAtt.css("border", "0px");\n    inboxMailAtt.css("border-bottom", "none");\n    inboxMailAtt.css("border-width", "1px");\n    inboxMailAtt.css("color", "#999");\n    inboxMailAtt.css("cursor", "default");\n    inboxMailAtt.css("height", "35px");\n    inboxMailAtt.css("margin-bottom", "-1px");\n    inboxMailAtt.css("margin-right", "5px");\n    inboxMailAtt.css("border-top-left-radius", "3px");\n    inboxMailAtt.css("border-top-right-radius", "3px");\n    inboxMailAtt.append(VIS.Msg.getMsg("InboxMailAttachment"));\n    tabs.append(inboxMailAtt);\n    var sentMailAtt = $("<li>");\n    sentMailAtt.css("float", "left");\n    sentMailAtt.css("margin", "1px");\n    sentMailAtt.css("padding", "5px");\n    sentMailAtt.css("display", "block");\n    sentMailAtt.css("position", "relative");\n    sentMailAtt.css("font-weight", "700");\n    // fileAtt.css("background", "#eee");\n    //fileAtt.css("border", "1px solid #ddc");\n    fileAtt.css("border", "0px");\n    sentMailAtt.css("border-bottom", "none");\n    sentMailAtt.css("border-width", "1px");\n    sentMailAtt.css("color", "#999");\n    sentMailAtt.css("cursor", "default");\n    sentMailAtt.css("height", "35px");\n    sentMailAtt.css("margin-bottom", "-1px");\n    sentMailAtt.css("margin-right", "5px");\n    sentMailAtt.css("border-top-left-radius", "3px");\n    sentMailAtt.css("border-top-right-radius", "3px");\n    sentMailAtt.append(VIS.Msg.getMsg("SentMailAttachment"));\n    tabs.append(sentMailAtt);\n    var letter = $("<li>");\n    letter.css("float", "left");\n    letter.css("margin", "1px");\n    letter.css("padding", "5px");\n    letter.css("display", "block");\n    letter.css("position", "relative");\n    letter.css("font-weight", "700");\n    // fileAtt.css("background", "#eee");\n    //fileAtt.css("border", "1px solid #ddc");\n    fileAtt.css("border", "0px");\n    letter.css("border-bottom", "none");\n    letter.css("border-width", "1px");\n    letter.css("color", "#999");\n    letter.css("cursor", "default");\n    letter.css("height", "35px");\n    letter.css("margin-bottom", "-1px");\n    letter.css("margin-right", "5px");\n    letter.css("border-top-left-radius", "3px");\n    letter.css("border-top-right-radius", "3px");\n    letter.append(VIS.Msg.getMsg("Letter"));\n    tabs.append(letter);\n    var appointment = $("<li>");\n    appointment.css("float", "left");\n    appointment.css("margin", "1px");\n    appointment.css("padding", "5px");\n    appointment.css("display", "block");\n    appointment.css("position", "relative");\n    appointment.css("font-weight", "700");\n    // fileAtt.css("background", "#eee");\n    //fileAtt.css("border", "1px solid #ddc");\n    fileAtt.css("border", "0px");\n    appointment.css("border-bottom", "none");\n    appointment.css("border-width", "1px");\n    appointment.css("color", "#999");\n    appointment.css("cursor", "default");\n    appointment.css("height", "35px");\n    appointment.css("margin-bottom", "-1px");\n    appointment.css("margin-right", "5px");\n    appointment.css("border-top-left-radius", "3px");\n    appointment.css("border-top-right-radius", "3px");\n    appointment.append(VIS.Msg.getMsg("Appointments"));\n    tabs.append(appointment);\n    root.append(tabs);\n    var divContainer = $("<div class=\'vis-pu-outerwrap\'>");\n    //divContainer.css("width", "100%");\n    //divContainer.css("height", "100%");\n    //divContainer.css("position", "absolute");\n    //divContainer.css("border", "1px solid #ddc");        \n    //divContainer.css("border", "0px");\n    //divContainer.css("margin-top", "2px");\n\n    var divFA = $("<div class=\'vis-pu-innerwrap\'>");\n    //divFA.append("File Att");\n    //divFA.css("width", "100%");\n    //divFA.css("height", "100%");\n    //divFA.css("position", "absolute");\n    divContainer.append(divFA);\n    var divIMA = $("<div>");\n    divIMA.append("Inbox Mail Att");\n    divIMA.css("width", "100%");\n    divIMA.css("height", "100%");\n    divIMA.css("position", "absolute");\n    divContainer.append(divIMA);\n    var divSMA = $("<div>");\n    divSMA.append("SENT MAIL Att");\n    divSMA.css("width", "100%");\n    divSMA.css("height", "100%");\n    divSMA.css("position", "absolute");\n    divContainer.append(divSMA);\n    var divLetter = $("<div>");\n    divLetter.append("Leter Att");\n    divLetter.css("width", "100%");\n    divLetter.css("height", "100%");\n    divLetter.css("position", "absolute");\n    divContainer.append(divLetter);\n    var divAppointment = $("<div>");\n    divAppointment.append("Appointment Att");\n    divAppointment.css("width", "100%");\n    divAppointment.css("height", "100%");\n    divAppointment.css("position", "absolute");\n    divContainer.append(divAppointment);\n\n    //var viewer = $("<div style=\'visibility:collapse;-webkit-overflow-scrolling:touch;\'>");\n    //viewer.css("width", "100%");\n    //viewer.css("height", "100%");\n    //viewer.css("position", "absolute");\n    //divContainer.append(viewer);\n\n    //var viTop = $("<div class=\'attach-file-top\'>");\n    //var vibtnRemove = $("<a class=\'file-close-ico\'>");\n    //vibtnRemove.on(\'click\', function () {\n    //    iFrame.css(\'visibility\', \'collapse\');\n    //    viewer.css(\'visibility\', \'collapse\');\n    //    divFA.css(\'visibility\', \'visible\');\n    //    iFrame.attr(\'src\', null);\n    //});\n    //viTop.append(vibtnRemove);\n    //viewer.append(viTop);\n    //var viContent = $("<div style=\'height:100%;width:100%;\'>");\n    //viewer.append(viContent);\n    //var iFrame = $("<iframe style=\'visibility:collapse;height:98%;width:100%;\'>");        \n    //viContent.append(iFrame);\n\n    //var bsyDiv = $("<div class=\'vis-apanel-busy\'>");\n    var bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    //bsyDiv.css("width", "100%");\n    //bsyDiv.css("height", "100%");\n    //bsyDiv.css(\'text-align\', \'center\');\n    //bsyDiv.css("position", "absolute");\n    divContainer.append(bsyDiv);\n\n    //ProgressBar\n    var divReadOnly = $("<div style=\'width: 100%;height: 100%;background:black;opacity: .1;display:none; position:absolute;top:0;left:0\'>"); //table-cell\n    divContainer.append(divReadOnly);\n    var divpContainer = $("<div style=\'width: 100%;height: 100%;background:transparent;text-align: center;display:none ;vertical-align: middle;position:absolute;top:0;left:0\'>"); //table-cell\n    divContainer.append(divpContainer);\n    var divProgress = null;\n    if (VIS.Application.isRTL) {\n      divProgress = $("<div id=\'progress_bar\' class=\'vis-ui-progress-bar vis-ui-container\' style=\'top:41%;width: 80%;right: 9%;\'>");\n    } else {\n      divProgress = $("<div id=\'progress_bar\' class=\'vis-ui-progress-bar vis-ui-container\' style=\'top:41%;width: 80%;left: 9%;\'>");\n    }\n    var divGreen = $("<div class=\'vis-ui-progress\' style=\'width: 0%; display: block;position:absolute\'>");\n    var lblpercentage = $("<span class=\'vis-ui-label\'  style=\'position:absolute\'>").append("0%");\n    divGreen.append(lblpercentage);\n    divProgress.append(divGreen);\n    divpContainer.append(divProgress);\n    root.append(divContainer);\n    divFA[0].style.visibility = \'visible\';\n    divIMA[0].style.visibility = \'hidden\';\n    divSMA[0].style.visibility = \'hidden\';\n    divLetter[0].style.visibility = \'hidden\';\n    divAppointment[0].style.visibility = \'hidden\';\n    bsyDiv[0].style.visibility = \'hidden\';\n    fileAtt.css("background", "#fff");\n    fileAtt.css("color", "#0088CC");\n    var setActive = function (ctrl, isActive) {\n      if (isActive) {\n        ctrl.css("background", "#fff");\n        ctrl.css("color", "#0088CC");\n      } else {\n        ctrl.css("background", "#eee");\n        ctrl.css("color", "#999");\n      }\n    };\n    fileAtt.on("click", function () {\n      divFA[0].style.visibility = \'visible\';\n      divIMA[0].style.visibility = \'hidden\';\n      divSMA[0].style.visibility = \'hidden\';\n      divLetter[0].style.visibility = \'hidden\';\n      divAppointment[0].style.visibility = \'hidden\';\n      bsyDiv[0].style.visibility = \'hidden\';\n      setActive(fileAtt, true);\n      setActive(inboxMailAtt, false);\n      setActive(sentMailAtt, false);\n      setActive(letter, false);\n      setActive(appointment, false);\n      LoadFileAttachment();\n    });\n    inboxMailAtt.on("click", function () {\n      divFA[0].style.visibility = \'hidden\';\n      divIMA[0].style.visibility = \'visible\';\n      divSMA[0].style.visibility = \'hidden\';\n      divLetter[0].style.visibility = \'hidden\';\n      divAppointment[0].style.visibility = \'hidden\';\n      bsyDiv[0].style.visibility = \'hidden\';\n      setActive(fileAtt, false);\n      setActive(inboxMailAtt, true);\n      setActive(sentMailAtt, false);\n      setActive(letter, false);\n      setActive(appointment, false);\n    });\n    sentMailAtt.on("click", function () {\n      divFA[0].style.visibility = \'hidden\';\n      divIMA[0].style.visibility = \'hidden\';\n      divSMA[0].style.visibility = \'visible\';\n      divLetter[0].style.visibility = \'hidden\';\n      divAppointment[0].style.visibility = \'hidden\';\n      bsyDiv[0].style.visibility = \'hidden\';\n      setActive(fileAtt, false);\n      setActive(inboxMailAtt, false);\n      setActive(sentMailAtt, true);\n      setActive(letter, false);\n      setActive(appointment, false);\n    });\n    letter.on("click", function () {\n      divFA[0].style.visibility = \'hidden\';\n      divIMA[0].style.visibility = \'hidden\';\n      divSMA[0].style.visibility = \'hidden\';\n      divLetter[0].style.visibility = \'visible\';\n      divAppointment[0].style.visibility = \'hidden\';\n      bsyDiv[0].style.visibility = \'hidden\';\n      setActive(fileAtt, false);\n      setActive(inboxMailAtt, false);\n      setActive(sentMailAtt, false);\n      setActive(letter, true);\n      setActive(appointment, false);\n    });\n    appointment.on("click", function () {\n      divFA[0].style.visibility = \'hidden\';\n      divIMA[0].style.visibility = \'hidden\';\n      divSMA[0].style.visibility = \'hidden\';\n      divLetter[0].style.visibility = \'hidden\';\n      divAppointment[0].style.visibility = \'visible\';\n      bsyDiv[0].style.visibility = \'hidden\';\n      setActive(fileAtt, false);\n      setActive(inboxMailAtt, false);\n      setActive(sentMailAtt, false);\n      setActive(letter, false);\n      setActive(appointment, true);\n    });\n    this.show = function () {\n      divFA[0].style.visibility = \'visible\';\n      divIMA[0].style.visibility = \'hidden\';\n      divSMA[0].style.visibility = \'hidden\';\n      divLetter[0].style.visibility = \'hidden\';\n      divAppointment[0].style.visibility = \'hidden\';\n      bsyDiv[0].style.visibility = \'hidden\';\n      setActive(fileAtt, true);\n      setActive(inboxMailAtt, false);\n      setActive(sentMailAtt, false);\n      setActive(letter, false);\n      setActive(appointment, false);\n      tableName = VIS.dataContext.getJSONRecord("Attachment/GetTableName", AD_Table_ID);\n      if (tableName != "") tableName = tableName.toLowerCase();\n      LoadFileAttachment();\n      root.dialog({\n        width: 841,\n        height: 502,\n        title: VIS.Msg.getMsg("Attachment"),\n        resizable: false,\n        modal: true,\n        close: onClosing\n      });\n    };\n    function onClosing() {\n      if (selfi.onClose) {\n        selfi.onClose();\n      }\n      disposeComponent();\n    }\n    ;\n    var ddLABtnsFull = $("<div class=\'vis-pu-uploadsbtnswrap\'>");\n    ;\n    var lstLatestFiles = [];\n    //var progresBar = null;\n    var btnInsert = null;\n    function LoadFileAttachment() {\n      if (isFALoaded) {\n        return;\n      }\n      bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Attachment/GetAttachment",\n        dataType: "json",\n        data: {\n          AD_Table_ID: AD_Table_ID,\n          Record_ID: Record_ID\n        },\n        error: function () {\n          VIS.ADialog.info(\'ERRORGettingAttachment\');\n          bsyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          // debugger;\n          var locations = data.result.FLocation;\n          var attachment = data.result.Attachment;\n          if (locations == null) {\n            VIS.ADialog.info(\'ERRORGettingAttachment\');\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          var dlatestAtt = $("<div class=\'vis-latest-attachments\'>");\n          if (!isViewOnly) divFA.append(dlatestAtt);\n          var dlaHeader = $("<div class=\'vis-attach-top\'>");\n          dlatestAtt.append(dlaHeader);\n\n          //var dlbl = $("<div class=\'attach-heading pull-left\'>").append($("<h4>").append(VIS.Msg.getMsg(\'New\')));\n          // dlaHeader.append(dlbl);\n          var dfRight = $("<div class=\'vis-attach-file-location\'>");\n          var dflInputWrap = $("<div class=\'input-group vis-input-wrap\' style=\'margin-bottom: 0;\'>");\n          var dflInputCtrlWrap = $("<div class=\'vis-control-wrap\'>");\n          dlaHeader.append(dfRight);\n          dfRight.append(dflInputWrap);\n          dflInputWrap.append(dflInputCtrlWrap);\n          cmbFileLocation = $(\'<select class="vis-custom-select">\');\n          cmbFileLocation.attr("disabled", true);\n          //add options to combo\n          for (var itm in locations.values) {\n            var opt = $("<option value=" + locations.values[itm].Key + ">");\n            opt.append(locations.values[itm].Name);\n            cmbFileLocation.append(opt);\n            if (locations.selectedvalue == locations.values[itm].Key) {\n              cmbFileLocation.val(locations.selectedvalue);\n            }\n          }\n          dflInputCtrlWrap.append(cmbFileLocation);\n          var lblF = $("<label>").append(VIS.Msg.getMsg(\'FileLocation\'));\n          dflInputCtrlWrap.append(lblF);\n          var dHeaderRight = $("<div class=\'vis-attach-top-btns\'>");\n          dlaHeader.append(dHeaderRight);\n\n          //var divFUpload = $("<div class=\'image-upload\'>")\n          //dHeaderRight.append(divFUpload);\n\n          //divFUpload.append($("<lable class=\'vis-file-label\'>").append(VIS.Msg.getMsg(\'Upload\')));\n          //divFUpload.append($("<input type=\'file\'>"));\n\n          var fileBrowser = $("<input type=\'file\' multiple=\'true\' style=\'display:none;\'>");\n          dHeaderRight.append(fileBrowser);\n\n          //Add file to Latest File Content\n          fileBrowser.change(function () {\n            //VIS.ADialog.info(\'file Uploaded \');\n            AppendFile(this);\n          });\n          fileBrowser.click(function () {\n            this.value = null;\n          });\n          var btnUpload = $("<a title=\'" + VIS.Msg.getMsg(\'SelectFile\') + "\' class=\'vis-attach-ico\'><i class=\'fa fa-paperclip\' style=\'font-size: 35px; color: rgba(var(--v-c-primary),1)\' aria-hidden=\'true\'></i></a>");\n          // btnUpload.append($("<span class=\'plus-ico\'>"));\n          // btnUpload.append(VIS.Msg.getMsg(\'Upload\'));\n\n          dHeaderRight.append(btnUpload);\n\n          //open file dialog\n          btnUpload.on("click", function () {\n            if (tableName.endsWith(\'_ver\')) {\n              //VIS.ADialog.info("AccessCannotDelete");\n              return;\n            }\n            fileBrowser.trigger(\'click\');\n          });\n          if (restrictUpload) {\n            btnUpload.hide();\n          }\n          var dArrange = $("<div class=\'vis-dropdown pull-left\'>");\n          dHeaderRight.append(dArrange);\n          var btnArrange = $("<a class=\'vis-btn vis-btn-arrange vis-dropdown-toggle\' type=\'button\' data-toggle=\'dropdown\' style=\'color: #fff;display:none;\'>");\n          btnArrange.append(VIS.Msg.getMsg(\'Arrange\'));\n          btnArrange.append($("<span class=\'vis-caret\'>"));\n          dArrange.append(btnArrange);\n          var ulArrange = $("<ul class=\'dropdown-menu\' role=\'menu\' aria-labelledby=\'dropdownMenu1\' id=\'dropdownMenu\' style=\'margin-left: -33px;\'>");\n          dArrange.append(ulArrange);\n          var liType = $("<li role=\'presentation\'>");\n          var aType = $("<a role=\'menuitem\' tabindex=\'-1\' href=\'#\'>");\n          aType.append(VIS.Msg.getMsg(\'Type\'));\n          liType.append(aType);\n          liType.on("click", function () {});\n          ulArrange.append(liType);\n          var liSize = $("<li role=\'presentation\'>");\n          var aSize = $("<a role=\'menuitem\' tabindex=\'-1\' href=\'#\'>");\n          aSize.append(VIS.Msg.getMsg(\'Size\'));\n          liSize.append(aSize);\n          liSize.on("click", function () {});\n          ulArrange.append(liSize);\n          var liName = $("<li role=\'presentation\'>");\n          var aName = $("<a role=\'menuitem\' tabindex=\'-1\' href=\'#\'>");\n          aName.append(VIS.Msg.getMsg(\'Name\'));\n          liName.append(aName);\n          liName.on("click", function () {});\n          ulArrange.append(liName);\n          dLAContent = $("<div class=\'vis-attach-content-wrap\' style=\'display:none;\'>");\n          dlatestAtt.append(dLAContent);\n\n          //btns in Latest file Region\n          // ddLABtnsFull = $("<div style=\'width:100%;overflow: auto;margin-top: 5px;border-bottom: 2px solid #eee\'>");\n          dlatestAtt.append(ddLABtnsFull);\n          var dLABtns = $("<div style=\'text-align:center;\'>");\n          ddLABtnsFull.append(dLABtns);\n          var btnuploadFiles = $("<a title=\'" + VIS.Msg.getMsg(\'Upload\') + "\' href=\'javascript:void(0)\' style=\'font-size: 35px; background: none;\' class=\'vis-attach-ico\'><i class=\'fa fa-upload\' aria-hidden=\'true\'></i></a>");\n          dLABtns.append(btnuploadFiles);\n          btnuploadFiles.on(\'click\', function () {\n            UploadFiles();\n          });\n          var btnCancelAll = $("<a title=\'" + VIS.Msg.getMsg(\'Cancel\') + "\' href=\'javascript:void(0)\' style=\'font-size: 35px; background: none;\'  class=\'vis-attach-ico\'><i class=\'fa fa-times-circle-o\' aria-hidden=\'true\'></i></a>");\n          dLABtns.append(btnCancelAll);\n          btnCancelAll.on(\'click\', function () {\n            dLAContent.empty();\n            filesInfo = [];\n            lstLatestFiles = [];\n            dLAContent.hide();\n            ddLABtnsFull.hide();\n            dOAContent.css(\'height\', \'353px\');\n          });\n\n          //Old Attachments\n          dOldAtt = $("<div class=\'vis-old-attachments\'>");\n          divFA.append(dOldAtt);\n\n          //var dOldhdr = $("<div class=\'attach-top\'>");\n          //dOldAtt.append(dOldhdr);\n\n          //var dOldhdrRight = $("<div class=\'attach-heading pull-left\'>");\n          //dOldhdr.append(dOldhdrRight);\n\n          //var hOld = $("<h4>").append(VIS.Msg.getMsg(\'Old\'));\n          //dOldhdrRight.append(hOld);\n\n          dOAContent = $("<div class=\'vis-attach-content-wrap\' style=\'height: 353px;\'>");\n          dOldAtt.append(dOAContent);\n\n          //AppendFiles in Old Files Region\n          if (attachment != null) {\n            AD_Attachment_ID = attachment.AD_Attachment_ID;\n          }\n          if (attachment != null && attachment._lines != null) {\n            AD_Attachment_ID = attachment.AD_Attachment_ID;\n            for (var item in attachment._lines) {\n              AppendFileOldRegion(attachment._lines[item], item);\n            }\n          }\n\n          //footer \n          var dfooter = $("<div class=\'vis-attach-footer\'>");\n          divFA.append(dfooter);\n\n          //var dfRight = $("<div class=\'attach-file-location pull-left\' style=\'margin-top: 5px;\'>");\n          //dfooter.append(dfRight);\n\n          //var lblF = $("<label>").append(VIS.Msg.getMsg(\'FileLocation\'));\n          //dfRight.append(lblF);\n\n          //cmbFileLocation = $(\'<select>\');\n          ////add options to combo\n          //for (var itm in locations.values) {\n          //    var opt = $("<option value=" + locations.values[itm].Key + ">");\n          //    opt.append(locations.values[itm].Name);\n          //    cmbFileLocation.append(opt);\n          //    if (locations.selectedvalue == locations.values[itm].Key) {\n          //        cmbFileLocation.val(locations.selectedvalue);\n          //    }\n\n          //}\n\n          //dfRight.append(cmbFileLocation);\n\n          //progresBar = $("<progress value=\'0\' max=\'100\' style=\'margin-left:5px;\'>");\n          //dfRight.append(progresBar);\n\n          var dfLeft = $("<div class=\'vis-attach-btns pull-right\' style=\'margin-top: 5px;\'>");\n          dfooter.append(dfLeft);\n\n          //btnInsert = $(\'<a class="btn" style="margin-left: 5px;">\').append(VIS.Msg.getMsg(\'Insert\'));\n          //btnInsert.on("click", function () {\n          //    UploadFiles();\n          //});\n          //dfLeft.append(btnInsert);\n\n          var btnDeleteAll = $(\'<a  title="\' + VIS.Msg.getMsg(\'DeleteAll\') + \'" class="vis-btn">\').append(VIS.Msg.getMsg(\'DeleteAll\'));\n          if (!isViewOnly) dfLeft.append(btnDeleteAll);\n          btnDeleteAll.on(\'click\', function () {\n            if (tableName.endsWith(\'_ver\')) {\n              VIS.ADialog.info("AccessCannotDelete");\n              return;\n            }\n            if (oldFiles.length == 0 || restrictUpload) {\n              return;\n            }\n            // if (VIS.ADialog.ask("DeleteRecord?")) {\n\n            VIS.ADialog.confirm("DeleteRecord?", true, "", "Confirm", function (result) {\n              if (result) {\n                //DELETE ALL FILES\n                var whereQry = "";\n                for (var itm in oldFiles) {\n                  whereQry += oldFiles[itm].Line_ID + \',\';\n                }\n                bsyDiv[0].style.visibility = "visible";\n                $.ajax({\n                  url: VIS.Application.contextUrl + "Attachment/DeleteAttachment",\n                  dataType: "json",\n                  data: {\n                    AttachmentLines: whereQry\n                  },\n                  error: function () {\n                    VIS.ADialog.info(\'ERRORDeletingFile\');\n                    bsyDiv[0].style.visibility = "hidden";\n                  },\n                  success: function (data) {\n                    if (data.result == -1) {\n                      VIS.ADialog.info("ErrorDeletingFile");\n                    } else {\n                      dOAContent.empty();\n                      oldFiles = [];\n                    }\n                    bsyDiv[0].style.visibility = "hidden";\n                  }\n                });\n              }\n            });\n          });\n          var btnCancel = $(\'<a title="\' + VIS.Msg.getMsg(\'close\') + \'" class="vis-btn">\').append(VIS.Msg.getMsg(\'close\'));\n          btnCancel.on(\'click\', function () {\n            if (selfi.onClose) {\n              selfi.onClose();\n            }\n            disposeComponent();\n          });\n          dfLeft.append(btnCancel);\n          isFALoaded = true;\n          bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    var LoadOldFile = function () {\n      //bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Attachment/GetAttachment",\n        dataType: "json",\n        data: {\n          AD_Table_ID: AD_Table_ID,\n          Record_ID: Record_ID\n        },\n        error: function () {\n          VIS.ADialog.info(\'ERRORGettingAttachment\');\n          bsyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          var attachment = data.result.Attachment;\n          //AppendFiles in Old Files Region\n          if (attachment != null) {\n            AD_Attachment_ID = attachment.AD_Attachment_ID;\n          }\n          if (attachment != null && attachment._lines != null) {\n            AD_Attachment_ID = attachment.AD_Attachment_ID;\n            for (var item in attachment._lines) {\n              AppendFileOldRegion(attachment._lines[item], item);\n            }\n          }\n          bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    };\n    var AppendFile = function (sender) {\n      var invalidFiles = [];\n      var invalidExtensions = [];\n      for (var i = 0; i < sender.files.length; i++) {\n        file = sender.files[i];\n        if (file == undefined) {\n          return;\n        }\n        var allowedExtensions = VIS.context.getContext("#ALLOWED_FILE_EXTENSION");\n        if (allowedExtensions && allowedExtensions.length > 0) {\n          if (allowedExtensions.split(\',\').indexOf(\'.\' + file.name.split(\'.\').pop()) == -1) {\n            invalidExtensions.push(file.name);\n            continue;\n          }\n        }\n        if (file.name.indexOf(\'&\') > -1 || file.name.indexOf(\'?\') > -1 || file.name.indexOf(\'#\') > -1 || file.name.indexOf(\'/\') > -1 || file.name.indexOf(\'\\\\\') > -1) {\n          invalidFiles.push(file.name);\n          continue;\n        }\n        for (var itm in lstLatestFiles) {\n          if (file.name == lstLatestFiles[itm].name) {\n            window.setTimeout(function () {\n              VIS.ADialog.info(\'AlreadyExists\');\n            }, 20);\n            return;\n          }\n        }\n        if (oldFiles != null) {\n          for (var itm in oldFiles) {\n            if (file.name == oldFiles[itm].Name && !oldFiles[itm].IsDeleted) {\n              window.setTimeout(function () {\n                VIS.ADialog.info(\'AlreadyExists\');\n              }, 20);\n              return;\n            }\n          }\n        }\n        var fileInfo = {};\n        var dAWrap = $("<div class=\'vis-attach-file-wrapla\' style=\'opacity: 0.5\'>");\n        dLAContent.append(dAWrap);\n        var dTop = $("<div class=\'vis-attach-file-top\'>");\n        var btnRemove = $("<a class=\'vis-file-close-ico\'><i class=\'fa fa-times\' aria-hidden=\'true\'></i></a>");\n        dTop.append(btnRemove);\n        dAWrap.append(dTop);\n        dLAContent.show();\n        ddLABtnsFull.show();\n        btnRemove.on("click", function () {\n          //debugger;\n          var c = null;\n          var divFInfo = $($(this).parent()).parent();\n          divFInfo.css("display", "none");\n          var html = divFInfo.html();\n          divFInfo.empty();\n          divFInfo = null;\n          for (var itm in lstLatestFiles) {\n            if (String(html).indexOf(lstLatestFiles[itm].name) > -1) {\n              lstLatestFiles.splice(itm, 1);\n              break;\n            }\n          }\n          if (lstLatestFiles.length > 4) {\n            dLAContent.css(\'height\', \'135px\');\n            dOAContent.css(\'height\', \'135px\');\n          } else {\n            dLAContent.css(\'height\', \'97px\');\n            dOAContent.css(\'height\', \'180px\');\n          }\n          if (lstLatestFiles.length == 0) {\n            dLAContent.hide();\n            ddLABtnsFull.hide();\n            dLAContent.css(\'height\', \'0px\');\n            dOAContent.css(\'height\', \'353px\');\n          }\n          //dLAContent.remove(divFInfo);\n        });\n        var dAContent = $("<div class=\'vis-attach-file-content\'>");\n        dAWrap.append(dAContent);\n        var dIcon = $("<div class=\'vis-attach-file-icon\'>");\n        var imgsrc = getImageUrl(file.name);\n        dIcon.append($("<img src=\'" + imgsrc + "\'>"));\n        dAContent.append(dIcon);\n        var dfInfo = $("<div class=\'vis-attach-file-text\' style=\'margin-bottom:10px\'>");\n        var shortName = \'\';\n        var lblFName = $("<p>");\n        if (file.name.length > 17) {\n          shortName = file.name.toString().substr(0, 17);\n          lblFName.append(shortName);\n          var aFName = $("<a href=\'#\' class=\'VIS_Pref_tooltip\'>").append(\'...\');\n          var span = $("<span style=\'width: inherit;\'>");\n          span.append($("<img class=\'VIS_Pref_callout\'>").attr(\'src\', VIS.Application.contextUrl + "Areas/VIS/Images/ccc.png").append("ToolTip Text"));\n          span.append($("<label class=\'VIS_Pref_Label_Font\'>").append(file.name));\n          aFName.append(span);\n          lblFName.append(aFName);\n        } else {\n          lblFName.append(file.name);\n        }\n        // dfInfo.append($("<p>").append(shortName));\n        dfInfo.append(lblFName);\n        dfInfo.append($("<p>").append((Number(file.size) / 1024).toFixed(2) + "KB"));\n        dAContent.append(dfInfo);\n        fileInfo.Name = file.name;\n        fileInfo.Size = file.size;\n        lstLatestFiles.push(file);\n        if (lstLatestFiles.length > 4) {\n          dLAContent.css(\'height\', \'135px\');\n          dOAContent.css(\'height\', \'135px\');\n        } else {\n          dLAContent.css(\'height\', \'97px\');\n          dOAContent.css(\'height\', \'180px\');\n        }\n      }\n      if (invalidFiles.length > 0) {\n        var resString = \'\';\n        for (var item in invalidFiles) {\n          resString += invalidFiles[item].toString() + \'\\n\';\n        }\n        if (invalidFiles.length == 1) {\n          resString += \'File has\';\n        } else {\n          resString += \'Files have\';\n        }\n        resString += \' invalid name. Please change the file name and try again.\';\n        VIS.ADialog.info(resString);\n      }\n      if (invalidExtensions && invalidExtensions.length > 0) {\n        var FileNames = \'\';\n        for (var item in invalidExtensions) {\n          if (FileNames.length > 0) FileNames += \', \';\n          FileNames += invalidExtensions[item].toString();\n        }\n        var resString = \'\';\n        if (invalidExtensions.length == 1) {\n          resString += \'FileInvalidExtension\';\n        } else {\n          resString += \'FilesInvalidExtension\';\n        }\n        VIS.ADialog.warn(resString, true, FileNames);\n      }\n    };\n    var oldFiles = [];\n    var AppendFileOldRegion = function (file, index) {\n      // style=\'margin-top:5px;margin-bottom:5px;\'\n      var dAWrap = $("<div class=\'vis-attach-file-wrap\'>");\n      dOAContent.append(dAWrap);\n      var oldFile = {};\n      var dAContent = $("<div class=\'vis-attach-file-content\'>");\n      dAWrap.append(dAContent);\n      var dIcon = $("<div class=\'vis-attach-file-icon\'>");\n      dIcon.append($("<img src=\'" + getImageUrl(file.FileName) + "\'>"));\n      dAContent.append(dIcon);\n      var dfInfo = $("<div class=\'vis-attach-file-text\'>");\n      var shortName = \'\';\n      var lblFName = $("<p>");\n      if (file.FileName.length > 17) {\n        shortName = file.FileName.toString().substr(0, 17);\n        lblFName.append(shortName);\n        var aFName = $("<a href=\'#\' class=\'VIS_Pref_tooltip\'>").append(\'...\');\n        var span = $("<span style=\'width: inherit;\'>");\n        span.append($("<img class=\'VIS_Pref_callout\'>").attr(\'src\', VIS.Application.contextUrl + "Areas/VIS/Images/ccc.png").append("ToolTip Text"));\n        span.append($("<label class=\'VIS_Pref_Label_Font\'>").append(file.FileName));\n        aFName.append(span);\n        lblFName.append(aFName);\n      } else {\n        lblFName.append(file.FileName);\n      }\n      // dfInfo.append($("<p>").append(shortName));\n      dfInfo.append(lblFName);\n\n      //dfInfo.append($("<p>").append(file.FileName));\n      dfInfo.append($("<p>").append((Number(file.Size) / 1024).toFixed(2) + "KB"));\n      dAContent.append(dfInfo);\n      var dbtns = $("<div class=\'vis-attach-BottomRight\'>");\n\n      //var iframe = $("<iframe style=\'display:none;\'>");\n      //dbtns.append(iframe);\n\n      var btnDownload = $("<a href=\'javascript:void(0)\'  class=\'vis-attach-ico\' data-id=\'" + index + "\'><i class=\'fa fa-long-arrow-down\' aria-hidden=\'true\'></i></a>");\n      dbtns.append(btnDownload);\n      btnDownload.on(\'click\', function (event) {\n        // debugger;\n        //event.preventDefault();\n        var id = $(this).data("id");\n        if (!oldFiles[id].HaveSource) {\n          DownloadFile(id, this);\n        } else {\n          //iFrame.attr(\'src\', oldFiles[index].Source);\n          //LoadIframe();\n          window.open(oldFiles[index].Source, \'_blank\');\n        }\n      });\n      var btnDelete = $("<a class=\'vis-attach-ico\' data-id=\'" + index + "\'><i class=\'vis vis-delete\' aria-hidden=\'true\'></i></a>");\n      if (!isViewOnly) {\n        //if view only do-not add delete file\n        dbtns.append(btnDelete);\n      }\n      btnDelete.on(\'click\', function () {\n        if (tableName.endsWith(\'_ver\')) {\n          VIS.ADialog.info("AccessCannotDelete");\n          return;\n        }\n        if (restrictUpload) {\n          return false;\n        }\n        var self = $(this);\n        VIS.ADialog.confirm("DeleteRecord?", true, "", "Confirm", function (result) {\n          if (result) {\n            var id = self.data("id");\n            bsyDiv[0].style.visibility = "visible";\n            $.ajax({\n              url: VIS.Application.contextUrl + "Attachment/DeleteAttachment",\n              dataType: "json",\n              data: {\n                AttachmentLines: oldFiles[id].Line_ID\n              },\n              error: function () {\n                VIS.ADialog.info(\'ERRORDeletingFile\');\n                bsyDiv[0].style.visibility = "hidden";\n              },\n              success: function (data) {\n                if (data.result == -1) {\n                  VIS.ADialog.info("ErrorDeletingFile");\n                } else {\n                  // debugger;\n                  var divFInfo = self.parent().parent();\n                  divFInfo.css("display", "none");\n                  divFInfo.empty();\n                  divFInfo = null;\n                  //oldFiles.splice(id, 1);\n                  oldFiles[id].IsDeleted = true;\n                }\n                bsyDiv[0].style.visibility = "hidden";\n              }\n            });\n          }\n        });\n      });\n      dAWrap.append(dbtns);\n      oldFile.Name = file.FileName;\n      oldFile.Size = file.Size;\n      oldFile.Line_ID = file.Line_ID;\n      oldFile.HaveSource = false;\n      oldFile.Source = null;\n      oldFile.IsDeleted = false;\n      oldFiles.push(oldFile);\n    };\n    var currentchunk = 0;\n    var currentFile = 0;\n    var folder = Date.now().toString();\n    var chunkSize = 1 * 1024 * 1024;\n    var totalChunks = 0;\n    var currentFileChunkNo = 0;\n    var filesInfo = [];\n    var UploadFiles = function () {\n      // debugger;\n\n      var fileInfo = null;\n      //folder = Date.now().toString();\n      //bsyDiv[0].style.visibility = "visible";\n      showProgress(true);\n      var tcSingleFile = 0;\n      var currentChunk = 0;\n      for (var itm in lstLatestFiles) {\n        tcSingleFile = parseInt(lstLatestFiles[itm].size / chunkSize);\n        if (file.size % chunkSize > 0) {\n          tcSingleFile++;\n        }\n        totalChunks += tcSingleFile;\n        fileInfo = {};\n        fileInfo.Name = lstLatestFiles[itm].name;\n        fileInfo.Size = lstLatestFiles[itm].size;\n        filesInfo.push(fileInfo);\n      }\n      //for (var itm in lstLatestFiles) {\n      //    fileInfo = {};\n      //    fileInfo.Name = lstLatestFiles[itm].name;\n      //    fileInfo.Size = lstLatestFiles[itm].size;\n      //    filesInfo.push(fileInfo);\n      //UploadSingleFile(lstLatestFiles[itm], folder, chunkSize, currentChunk,totalChunks);\n      TransferFile();\n      //}\n\n      //$.ajax({\n      //    url: VIS.Application.contextUrl + "Attachment/SaveAttachmentEntries",\n      //    dataType: "json",\n      //    type: "POST",\n      //    data: {\n      //        files: JSON.stringify(filesInfo),\n      //        AD_Attachment_ID: AD_Attachment_ID,\n      //        folderKey: folder,\n      //        AD_Table_ID: AD_Table_ID,\n      //        Record_ID: Record_ID,\n      //        fileLocation: cmbFileLocation.val()\n      //    },\n      //    error: function () {\n      //        //VIS.ADialog.info(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n      //        //bsyDiv[0].style.visibility = "hidden";\n      //        // $("#divfeedbsy")[0].style.visibility = "hidden";\n      //        //$("#divTabMenuDataLoder").hide();\n      //        //return;\n      //        bsyDiv[0].style.visibility = "hidden";\n      //    },\n      //    success: function (res) {\n      //        //VIS.ADialog.info(\'done\');\n      //        //  workflowActivityData.refresh();\n      //        if (res.result == "") {\n\n      //            dLAContent.empty();\n      //            oldFiles = [];\n      //            dOAContent.empty();\n      //            lstLatestFiles = [];\n      //            LoadOldFile();\n      //            dLAContent.hide();\n      //            dLAContent.css(\'height\', \'0px\');\n      //            dOAContent.css(\'height\', \'356px\');\n      //        }\n      //        else {\n      //            VIS.ADialog.info(res.result);\n      //        }\n      //        bsyDiv[0].style.visibility = "hidden";\n      //        setProgressValue(100);\n      //        showProgress(false);\n      //    }\n      //});\n    };\n    var TransferFile = function () {\n      if (lstLatestFiles == null || lstLatestFiles.length == 0) {\n        showProgress(false);\n        VIS.ADialog.info("NothingToUpload");\n        return;\n      }\n      if (currentFile >= lstLatestFiles.length) {\n        //Call Server Process\n\n        $.ajax({\n          url: VIS.Application.contextUrl + "Attachment/SaveAttachmentEntries",\n          dataType: "json",\n          type: "POST",\n          data: {\n            files: JSON.stringify(filesInfo),\n            AD_Attachment_ID: AD_Attachment_ID,\n            folderKey: folder,\n            AD_Table_ID: AD_Table_ID,\n            Record_ID: Record_ID,\n            fileLocation: cmbFileLocation.val(),\n            NewRecord_ID: newRecord_ID,\n            IsDMSAttachment: isDMSAttachment\n          },\n          error: function () {\n            //VIS.ADialog.info(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n            //bsyDiv[0].style.visibility = "hidden";\n            // $("#divfeedbsy")[0].style.visibility = "hidden";\n            //$("#divTabMenuDataLoder").hide();\n            //return;\n            showProgress(false);\n            filesInfo = [];\n            bsyDiv[0].style.visibility = "hidden";\n          },\n          success: function (data) {\n            //VIS.ADialog.info(\'done\');\n            //  workflowActivityData.refresh();\n            // debugger;\n\n            var res = data.result.Error;\n            if (res == "") {\n              /* ******THIS IS DONE BCOZ IN DMS ONLY ONE ATTACHMENT IS ALLOWED WITH ONE METADATA*********  */\n\n              if (isDMSAttachment) {\n                var oldAttachments = $(\'.vis-old-attachments\').find(\'.vis-attach-file-wrap\');\n                if (oldAttachments.length > 1) {\n                  $(oldAttachments[0]).remove();\n                }\n              }\n\n              /*********************************************************************************************/\n\n              setProgressValue(100);\n              window.setTimeout(function () {\n                showProgress(false);\n              }, 500);\n              filesInfo = [];\n              var selectedEffect = "transfer";\n              var options = {};\n              options = {\n                to: dOAContent,\n                className: "vis-Att-ui-effects-transfer"\n              };\n              dLAContent.effect(selectedEffect, options, 500, function () {\n                // VIS.ADialog.info("call");\n                window.setTimeout(function () {\n                  oldFiles = [];\n                  dOAContent.empty();\n                  LoadOldFile();\n                  lstLatestFiles = [];\n                  dLAContent.empty();\n                  dLAContent.hide();\n                  ddLABtnsFull.hide();\n                  dLAContent.css(\'height\', \'0px\');\n                  dOAContent.css(\'height\', \'353px\');\n                  divGreen.css(\'width\', \'O%\');\n                }, 500);\n              });\n            } else {\n              filesInfo = [];\n              showProgress(false);\n              VIS.ADialog.info(res);\n            }\n            currentchunk = 0;\n            currentFile = 0;\n            //folder = Date.now().toString();\n            // chunkSize = 1 * 1024 * 1024;\n            totalChunks = 0;\n            currentFileChunkNo = 0;\n            bsyDiv[0].style.visibility = "hidden";\n          }\n        });\n        return;\n      }\n      var xhr = new XMLHttpRequest();\n      var fd = new FormData();\n      fd.append("file", lstLatestFiles[currentFile].slice(currentFileChunkNo * chunkSize, currentFileChunkNo * chunkSize + Number(chunkSize)));\n      xhr.open("POST", VIS.Application.contextUrl + "Attachment/SaveFileinTemp/?filename=" + lstLatestFiles[currentFile].name + "&folderKey=" + folder, false);\n      xhr.onload = function () {\n        if (xhr.readyState === xhr.DONE) {\n          if (xhr.status === 200) {\n            if (xhr.responseText && xhr.responseText.indexOf("ERROR") > -1) {\n              var response = xhr.responseText;\n              response = response.replace("ERROR: ", "");\n              for (var itm in lstLatestFiles) {\n                if (String(response).indexOf(lstLatestFiles[itm].name) > -1) {\n                  lstLatestFiles.splice(itm, 1);\n                }\n              }\n              VIS.ADialog.warn("FilesInvalidExtension", true, xhr.responseText);\n\n              // FilesInvalidExtension\n\n              showProgress(false);\n              bsyDiv[0].style.visibility = "hidden";\n              return;\n            }\n            currentchunk++;\n            currentFileChunkNo++;\n            var totalFileChunk = parseInt(lstLatestFiles[currentFile].size / chunkSize);\n            if (lstLatestFiles[currentFile].size % chunkSize > 0) {\n              totalFileChunk++;\n            }\n            if (currentFileChunkNo == totalFileChunk) {\n              currentFile++;\n              currentFileChunkNo = 0;\n            }\n            if (currentchunk <= totalChunks) {\n              setProgressValue(parseInt(currentchunk / totalChunks * 80));\n            }\n            window.setTimeout(function () {\n              TransferFile();\n            }, 2);\n          }\n        }\n      };\n\n      //xhr.onreadystatechange = function () {\n      //    if (xhr.readyState === 4) {\n      //        callback(xhr.response);\n      //    }\n      //}\n\n      xhr.send(fd);\n    };\n    var showProgress = function (show) {\n      if (show) {\n        divReadOnly.show();\n        divProgress.show();\n        divpContainer.show();\n      } else {\n        divReadOnly.hide();\n        divProgress.hide();\n        divpContainer.hide();\n      }\n    };\n    var UploadSingleFile = function (file, folder, chunkSize, currentChunk, totalChunks) {\n      // var folderkey = null;\n      progresBar.attr("value", 0);\n      var totalChunksSF = parseInt(file.size / chunkSize);\n      if (file.size % chunkSize > 0) {\n        totalChunksSF++;\n      }\n      var isRunning = false;\n      for (var i = 0; i < totalChunksSF; i++) {\n        if (i == totalChunksSF - 1) {\n          if (file.size % chunkSize > 0) {\n            chunkSize = file.size % chunkSize;\n          }\n        }\n        isRunning = true;\n\n        //$.ajax({\n        //    url: VIS.Application.contextUrl + "Attachment/SaveFileinTemp",\n        //    dataType: "json",\n        //    data: {\n        //        file: file.slice(i * chunkSize, i * chunkSize + Number(chunkSize)),\n        //        filename: file.name,\n        //        folderKey:folder\n        //    },\n        //    error: function () {\n        //        VIS.ADialog.info(VIS.Msg.getMsg(\'ERRORUploadingFile\'));\n        //        bsyDiv[0].style.visibility = "hidden";\n        //        isRunning=false;\n        //    },\n        //    success: function (data) {\n        //        debugger;\n        //        if (data.result.indexOf(\'ERROR\')) {\n        //            VIS.ADialog.info(data.result);\n        //        }\n        //        else {\n\n        //            currentChunk++;\n        //            setProgressValue(parseInt((currentChunk / totalChunks) * 80));\n\n        //        }\n        //        isRunning=false;\n        //    }\n        //});\n\n        var xhr = new XMLHttpRequest();\n        var fd = new FormData();\n        fd.append("file", file.slice(i * chunkSize, i * chunkSize + Number(chunkSize)));\n        xhr.open("POST", VIS.Application.contextUrl + "Attachment/SaveFileinTemp/?filename=" + file.name + "&folderKey=" + folder, false);\n        xhr.send(fd);\n        currentChunk++;\n        setProgressValue(parseInt(currentChunk / totalChunks * 80));\n        ////xhr.onreadystatechange = function () {\n        ////    debugger;\n        ////    if (xhr.readyState == 4 && xhr.status == 200) {\n        ////        //document.getElementById("myDiv").innerHTML = xmlhttp.responseText;\n        ////        currentChunk++;\n        ////        setProgressValue(parseInt((currentChunk / totalChunks) * 80));\n        ////        isRunning = false;\n        ////    }\n        ////}\n        ////currentChunk++;\n        ////progresBar.attr("value", parseInt((currentChunk / totalChunks) * 80));\n        ////animateProgress(parseInt((currentChunk / totalChunks) * 80));\n        ////while (isRunning) {\n        ////}\n      }\n    };\n    var DownloadFile = function (index, sender) {\n      var actionOrigin = VIS.ProcessCtl.prototype.ORIGIN_WINDOW;\n      if (!selfi.isWindowAction) {\n        actionOrigin = VIS.ProcessCtl.prototype.ORIGIN_FORM;\n      }\n      bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Attachment/DownloadAttachment",\n        dataType: "json",\n        data: {\n          fileName: oldFiles[index].Name,\n          AD_Attachment_ID: AD_Attachment_ID,\n          AD_AttachmentLine_ID: oldFiles[index].Line_ID,\n          actionOrigin: actionOrigin,\n          originName: VIS.context.getWindowContext(selfi.windowNo, "WindowName"),\n          AD_Table_ID: AD_Table_ID,\n          recordID: Record_ID\n        },\n        error: function () {\n          VIS.ADialog.info(\'ERRORGettingFile\');\n          bsyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          //debugger;\n          var d = new Date();\n          var filePath = data.result;\n          var url = VIS.Application.contextUrl + "TempDownload/" + filePath + "/" + oldFiles[index].Name + "?" + d.getTime();\n          var fileName = oldFiles[index].Name;\n          //$(sender).attr("href", url);\n          //$(sender).attr(\'download\', fileName);\n          //$(sender).attr(\'target\', \'_blank\');\n          oldFiles[index].HaveSource = true;\n          bsyDiv[0].style.visibility = "hidden";\n          //sender.click();//.trigger(\'click\');\n          window.open(url, \'_blank\');\n          oldFiles[index].Source = url;\n          //iFrame.attr(\'src\', url);\n          //LoadIframe();\n\n          //var ev = document.createEvent("MouseEvents");\n          //ev.initMouseEvent("click", true, false, self, 0, 0, 0, 0, 0,\n          // false, false, false, false, 0, null);\n          //sender.dispatchEvent(ev);\n        }\n      });\n    };\n    var LoadIframe = function () {\n      if (iFrame == null) {\n        return;\n      }\n      //var dTop = $("<div class=\'attach-file-top\'>");\n      //var btnRemove = $("<a class=\'file-close-ico\'>");\n      //btnRemove.on(\'click\', function () {\n      //    iFrame.css(\'visibility\', \'collapse\');\n      //    viewer.css(\'visibility\', \'collapse\');\n      //    divFA.css(\'visibility\', \'visible\');\n      //    iFrame.attr(\'src\', null);\n      //});\n      //dTop.append(btnRemove);\n      //viewer.append(dTop);\n\n      //var dAContent = $("<div class=\'attach-file-content\'>");\n      //viewer.append(dAContent);\n\n      //dAContent.append(iFrame);\n      iFrame.css(\'visibility\', \'visible\');\n      viewer.css(\'visibility\', \'visible\');\n      divFA.css(\'visibility\', \'collapse\');\n    };\n    var setProgressValue = function (value) {\n      divGreen.css(\'width\', value + \'%\');\n      lblpercentage.empty();\n      lblpercentage.append(value + \'%\');\n    };\n    var animateProgress = function (progress) {\n      return divProgress.each(function () {\n        $(this).animate({\n          width: progress + \'%\'\n        }, {\n          duration: 2000,\n          // swing or linear\n          easing: \'swing\',\n          // this gets called every step of the animation, and updates the label\n          step: function (progress) {\n            var labelEl = $(\'.ui-label\', this),\n              valueEl = $(\'.value\', labelEl);\n            if (Math.ceil(progress) < 20 && $(\'.ui-label\', this).is(":visible")) {\n              labelEl.hide();\n            } else {\n              if (labelEl.is(":hidden")) {\n                labelEl.fadeIn();\n              }\n              ;\n            }\n            if (Math.ceil(progress) == 100) {\n              labelEl.text(\'Done\');\n              setTimeout(function () {\n                labelEl.fadeOut();\n              }, 1000);\n            } else {\n              valueEl.text(Math.ceil(progress) + \'%\');\n            }\n          }\n          //complete: function (scope, i, elem) {\n          //    if (callback) {\n          //        callback.call(this, i, elem);\n          //    };\n          //}\n        });\n      });\n    };\n    var getImageUrl = function (fileName) {\n      // debugger;\n      if (fileName == null || fileName.length == 0) {\n        return \'\';\n      }\n      var index = fileName.lastIndexOf(\'.\');\n      var imgUrl = VIS.Application.contextUrl + "Areas/VIS/Images/";\n      if (index < 1) {\n        //return Default Image\n        imgUrl += \'defult.png\';\n        return imgUrl;\n      }\n      var ext = fileName.substr(index, fileName.length - index);\n      if (ext == \'.xlsx\' || ext == \'.xls\') {\n        imgUrl += \'excel.png\';\n      } else if (ext == \'.html\' || ext == \'.htm\') {\n        imgUrl += \'html.png\';\n      } else if (ext == \'.pdf\') {\n        imgUrl += \'pdf.png\';\n      } else if (ext == \'.ppt\') {\n        imgUrl += \'ppt.png\';\n      } else if (ext == \'.txt\') {\n        imgUrl += \'text.png\';\n      } else if (ext == \'.docx\' || ext == \'.doc\') {\n        imgUrl += \'word.png\';\n      } else if (ext == \'.xml\') {\n        imgUrl += \'xml.png\';\n      } else if (ext == \'.jpg\' || ext == \'.gif\' || ext == \'.png\') {\n        imgUrl += \'image.png\';\n      } else if (ext == \'.mp3\') {\n        imgUrl += \'audio.png\';\n      } else if (ext == \'.zip\' || ext == \'.rar\') {\n        imgUrl += \'compresed.png\';\n      } else {\n        imgUrl += \'defult.png\';\n      }\n      return imgUrl;\n    };\n  }\n  ;\n  attachmentForm.prototype.setIsWindowAction = function (iswindowAction) {\n    this.isWindowAction = iswindowAction;\n  };\n  VIS.attachmentForm = attachmentForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/attachmentform.js?')},"./Areas/VIS/Scripts/app/Framework/batchUpdate.js":()=>{eval(';\n(function (VIS, $) {\n  var baseUrl = VIS.Application.contextUrl;\n  function BatchUpdate(windowNo, curTab, selectedRows) {\n    var AD_Table_ID = curTab.getAD_Table_ID();\n    var tableName = curTab.getTableName();\n    var findFields = curTab.getFields();\n    this.btnfields = [];\n    var control1;\n    var $root = $("<div class=\'vis-forms-container\'>");\n    var $self = this;\n    var ch = null;\n    this.onClose = null;\n    var drpSetColumns = null;\n    var divSetValue1 = null;\n    var lblSetQryValue = null;\n    var drpColumns = null;\n    var drpOp = null;\n    var divValue1 = null;\n    var lblQryValue = null;\n    var btnSave = null;\n    var btnSetSave = null;\n    var tblSetValue = null;\n    var btnOk, btnCancel;\n    var divMessage = null;\n    var bsyDiv = null;\n\n    //*************Upadte records by using Popup box  ******************//\n\n    function setView() {\n      var html = \'<div class="vis-BatchUpdateContentArea" > \' + \'<div class="vis-advanedSearch-InputsWrap vis-advs-inputwraps ">\' + \'  <div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-v">\' + \'    <label id="lblSetColumn_\' + windowNo + \'"  for="Column">\' + VIS.Msg.getMsg("Column") + \'</label>\' + \'  <select id="drpSetColumn_\' + windowNo + \'">\' + \'</select>\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-op">\' + \'<label id="lblSetOperator_\' + windowNo + \'" for="Oprator">\' + VIS.Msg.getMsg("Operator") + \'</label>\' + \'<input id="drpSetOperator_\' + windowNo + \'"value="=" disabled>\'\n      //+ \'<option value="=">=</option>\'\n      // + \'</select>\'\n      + \'</div>\' + \' <div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-v" id="divSetValue1_\' + windowNo + \'">\' + \'   <label  id="lblSetQryValue_\' + windowNo + \'" for="QueryValue">\' + VIS.Msg.getMsg("QueryValue") + \'</label>\' + \' <input class="vis-batchUpdate-font" id="txtSetQryValue_\' + windowNo + \'" type="text" name="QueryValue">\' + \'</div>\' + \'<div class="vis-advancedSearch-calender-Icon ">\' + \'<ul>\' + \'<li class=""><button id="btnSetSave_\' + windowNo + \'" disabled class="vis-ads-icon"><i class="vis vis-plus" aria-hidden="true"></i></button></li>\' + \'</ul>\' + \'</div>\' + \'</div>\' + \'<div class="vis-advanedSearch-InputsWrap vis-advs-inputwraps vis-batchUpdate-inputwrap">\' + \'<table id="tblSetValue_\' + windowNo + \'" rules="rows" class="vis-advancedSearchTable">\' + \'<thead>\' + \'<tr class="vis-advancedSearchTableHeadBatch">\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "AD_Column_ID") + \'</th>\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "QueryValue") + \'</th>\' + \'<th class="vis-batchUpdate-deletewrap">\' + VIS.Msg.translate(VIS.Env.getCtx(), "Action") + \'</th>\' + \'</tr>\' + \'</thead>\' + \'<div><tbody></tbody></div></table>\' + \'</div>\' + \'</div>\';\n      html += \'<div class="vis-advcedfooterBtn vis-batchUpdate-footerbtn">\' + \'<div class="vis-ctrfrm-btnwrp">\' + \'<button id="btnCancel_\' + windowNo + \'" class="ui-button ui-widget vis-pull-right ml-2 mr-2" style="border-radius: 0.1rem">\' + VIS.Msg.getMsg("close") + \'</button>\' + \'<button id="btnOk_\' + windowNo + \'" class="ui-button ui-widget vis-pull-right ml-2" style="border-radius: 0.1rem">\' + VIS.Msg.getMsg("Apply") + \'</button>\' + \'<div class="vis-ad-w-p-s-main pull-left"><div class="vis-ad-w-p-s-infoline"></div><div class="vis-ad-w-p-s-msg" style="align-items:flex-end;" id="divMessage_\' + windowNo + \'"></div></div>\' + \'</div>\' + \'</div>\';\n      bsyDiv = $("<div class=\'vis-apanel-busy\'>");\n      bsyDiv.css({\n        "position": "absolute",\n        "width": "98%",\n        "height": "97%",\n        \'text-align\': \'center\',\n        \'z-index\': \'999\'\n      });\n      $root.append(bsyDiv);\n      $root.append(html);\n      initUI();\n      bindEvents();\n    }\n\n    //************* Is Busy Indicator ******************//\n\n    function setBusy(isBusy) {\n      if (isBusy) {\n        bsyDiv[0].style.visibility = "visible";\n      } else {\n        bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    function initUI() {\n      drpSetColumns = $root.find("#drpSetColumn_" + windowNo);\n      divSetValue1 = $root.find("#divSetValue1_" + windowNo);\n      lblSetQryValue = $root.find("#lblSetQryValue_" + windowNo);\n      tblSetValue = $root.find("#tblSetValue_" + windowNo);\n      drpColumns = $root.find("#drpColumn_" + windowNo);\n      drpOp = $root.find("#drpOperator_" + windowNo);\n      btnSave = $root.find("#btnSave_" + windowNo);\n      btnSetSave = $root.find("#btnSetSave_" + windowNo);\n      btnOk = $root.find("#btnOk_" + windowNo);\n      btnCancel = $root.find("#btnCancel_" + windowNo);\n      divMessage = $root.find("#divMessage_" + windowNo);\n      var html = \'<option value="-1"> </option>\';\n      var sortedFields = [];\n      for (var c = 0; c < findFields.length; c++) {\n        var field = findFields[c]; // get field                       \n        var columnName = field.getColumnName(); // get field\'s column name\n        /*if (field.getDisplayType() == VIS.DisplayType.Button) {\r\n            if (field.getAD_Reference_Value_ID() == 0)\r\n                // change done here to display textbox for search in case where buttons don\'t have Reference List bind with Column\r\n                field.setDisplayType(VIS.DisplayType.String);\r\n            else {\r\n                if (columnName.endsWith("_ID"))\r\n                    field.setDisplayType(VIS.DisplayType.Table);\r\n                else {\r\n                    field.setDisplayType(VIS.DisplayType.List);\r\n                    // bind lookup for buttons having Reference List bind with column\r\n                    field.lookup = new VIS.MLookupFactory.getMLookUp(VIS.context, windowNo, field.getAD_Column_ID(), VIS.DisplayType.List);\r\n                }\r\n            }\r\n        }*/\n        if (field.getDisplayType() == VIS.DisplayType.Image || field.getDisplayType() == VIS.DisplayType.Button) {\n          continue;\n        }\n        var header = field.getHeader();\n        if (header == null || header.length == 0) {\n          // get text according to the language selected\n          header = VIS.Msg.getElement(VIS.context, columnName);\n          if (header == null || header.Length == 0) continue;\n        }\n        if (!field.vo.IsUpdateable) {\n          continue;\n        }\n        if (field.getIsKey() || field.getIsReadOnly() || !field.getIsDisplayed() || field.getIsEncrypted() || field.getCallout() != \'\') {\n          continue;\n        }\n        sortedFields.push({\n          \'value\': columnName,\n          \'text\': header\n        });\n      }\n\n      // sort by text\n      sortedFields.sort(function (a, b) {\n        var n1 = a.text.toUpperCase();\n        var n2 = b.text.toUpperCase();\n        if (n1 > n2) return 1;\n        if (n1 < n2) return -1;\n        return 0;\n      });\n      for (var col = 0; col < sortedFields.length; col++) {\n        html += \'<option value="\' + sortedFields[col].value + \'">\' + sortedFields[col].text + \'</option>\';\n      }\n      drpSetColumns.html(html);\n      drpColumns.html(html);\n    }\n\n    //*************All Event ******************//\n\n    function bindEvents() {\n      drpSetColumns.on("change", function () {\n        var columnName = drpSetColumns.val();\n        setControlNullValue(true);\n        if (columnName && columnName != "-1") {\n          var f = curTab.getField(columnName);\n          $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 150px)\');\n          if ($self.getIsUserColumn(columnName)) {\n            $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 195px)\');\n          }\n          if (f.getDisplayType() == VIS.DisplayType.YesNo) {\n            lblSetQryValue.hide();\n          } else {\n            lblSetQryValue.show();\n          }\n          var field = getTargetMField(columnName);\n          setControl(true, field, divSetValue1);\n          setEnableButton(btnSetSave, true);\n        }\n        setValueEnabled(true, divSetValue1);\n      });\n      drpColumns.on("change", function () {\n        var columnName = drpColumns.val();\n        setControlNullValue(true);\n        if (columnName && columnName != "-1") {\n          var dsOp = null;\n          if (columnName.endsWith("_ID") || columnName.endsWith("_Acct") || columnName.endsWith("_ID_1") || columnName.endsWith("_ID_2") || columnName.endsWith("_ID_3")) {\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_ID);\n          } else if (columnName.startsWith("Is")) {\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_YN);\n          } else {\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS); // fill dataset with all operators available\n          }\n          var f = curTab.getField(columnName);\n          $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 150px)\');\n          if ($self.getIsUserColumn(columnName)) {\n            $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 195px)\');\n          }\n          if (f.getDisplayType() == VIS.DisplayType.YesNo) {\n            lblQryValue.hide();\n          } else {\n            lblQryValue.show();\n          }\n          drpOp.html(dsOp);\n          drpOp[0].SelectedIndex = 0;\n          var field = getTargetMField(columnName);\n          setControl(true, field, divValue1);\n          setEnableButton(btnSave, true);\n          drpOp.prop("disabled", false);\n        }\n        setValueEnabled(true, divValue1);\n      });\n      drpOp.on("change", function () {\n        var selOp = drpOp.val();\n        // set control at value2 position according to the operator selected\n        if (!selOp) {\n          selOp = "";\n        }\n        var columnName = drpColumns.val();\n        // get field\n        var field = getTargetMField(columnName);\n        if (selOp && selOp != "0") {\n          //if user selects between operator\n          if (VIS.Query.prototype.BETWEEN.equals(selOp)) {\n            // set control at value2 position\n            setControl(false, field, divValue1);\n          } else {\n            columnName = drpColumns.val();\n            field = getTargetMField(columnName);\n          }\n        } else {\n          setEnableButton(btnSave, false);\n          setControlNullValue(true);\n        }\n      });\n      btnSetSave.on("click", saveSetRowTemp);\n      btnSave.on("click", saveRowTemp);\n      btnOk.on("click", function () {\n        excuteQuery();\n        curTab.dataRefreshAll();\n      });\n      btnCancel.on("click", function () {\n        dispose();\n      });\n    }\n    function setControlNullValue(isValue2) {\n      var crtlObj = null;\n      crtlObj = control1;\n      if (crtlObj != null) {\n        crtlObj.setValue(null);\n      }\n    }\n    ;\n\n    // get control\n\n    function setValueEnabled(isEnabled, div1) {\n      var ctrl = div1.children()[1];\n      var btn = null;\n      if (div1.children().length > 2) btn = div1.children()[2];\n      if (btn) $(btn).prop("disabled", !isEnabled).prop("readonly", !isEnabled);else if (ctrl != null) {\n        $(ctrl).prop("disabled", !isEnabled).prop("readonly", !isEnabled);\n      }\n    }\n    ;\n    function getTargetMField(columnName) {\n      if (columnName == null || columnName.length == 0) return null;\n      for (var c = 0; c < findFields.length; c++) {\n        var field = findFields[c];\n        if (columnName.equals(field.getColumnName())) return field;\n      }\n      return null;\n    }\n    ;\n    function setEnableButton(btn, isEnable) {\n      btn.prop("disabled", !isEnable);\n    }\n    ;\n\n    /*****Get control form specified column and row from Grid***********/\n\n    function setControl(isValue1, field, div1) {\n      control1 = null;\n      var ctrl = null;\n      var ctrl2 = null;\n      if (isValue1) {\n        ctrl = div1.children()[1];\n        if (div1.children().length > 2) ctrl2 = div1.children()[2];\n      }\n      //Remove any elements in the list\n      if (ctrl != null) {\n        $(ctrl).remove();\n        if (ctrl2 != null) $(ctrl2).remove();\n        ctrl = null;\n      }\n      var crt = null;\n      // if any filed is given\n      if (field != null) {\n        // if field id any key, then show number textbox \n        if (field.getIsKey()) {\n          crt = new VIS.Controls.VNumTextBox(field.getColumnName(), false, false, true, field.getDisplayLength(), field.getFieldLength(), field.getColumnName());\n        } else {\n          crt = VIS.VControlFactory.getControl(null, field, true, false, false);\n        }\n      } else {\n        // if no field is given show an empty disabled textbox\n        crt = new VIS.Controls.VTextBox("columnName", false, true, false, 20, 20, "format", "GetObscureType", false);\n      }\n      if (crt != null && field != null) {\n        crt.setReadOnly(false);\n        if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n          crt.hideButton(false);\n          crt.setReadOnlyTextbox(false);\n        }\n        if (VIS.DisplayType.Text == field.getDisplayType() || VIS.DisplayType.TextLong == field.getDisplayType()) {\n          crt.getControl().attr("rows", "1");\n          crt.getControl().css("width", "100%");\n        } else if (VIS.DisplayType.YesNo == field.getDisplayType()) {\n          crt.getControl().css("clear", "both");\n        } else if (VIS.DisplayType.IsDate(field.getDisplayType())) {\n          crt.getControl().css("line-height", "1");\n        }\n        var btn = null;\n        if (crt.getBtnCount() > 0 && !(crt instanceof VIS.Controls.VComboBox)) btn = crt.getBtn(0);\n        if (isValue1) {\n          div1.append(crt.getControl());\n          control1 = crt;\n          if (btn) {\n            div1.append(btn);\n            crt.getControl().css("width", "calc(100% - 30px)");\n            btn.css("max-width", "30px");\n          }\n        }\n        if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n          crt.getControl().css("width", "100%");\n        }\n      } else {\n        div1.append(crt.getControl());\n        lblSetQryValue.show();\n      }\n    }\n    ;\n    function getControlValue(isValue1) {\n      var crtlObj = null;\n      if (isValue1) {\n        crtlObj = control1;\n      }\n      if (crtlObj != null) {\n        // if control is any checkbox\n        if (crtlObj.getDisplayType() == VIS.DisplayType.YesNo) {\n          if (crtlObj.getValue().toString().toLowerCase() == "true") {\n            return "Y";\n          } else {\n            return "N";\n          }\n        }\n        if (crtlObj.displayType == VIS.DisplayType.AmtDimension) {\n          return crtlObj.getText();\n        } else {\n          return crtlObj.getValue();\n        }\n      }\n      return "";\n    }\n    ;\n    function getControlType() {\n      var crtlObj = null;\n      crtlObj = control1;\n      if (crtlObj != null) {\n        return crtlObj.getDisplayType();\n      }\n      return 0;\n    }\n    ;\n    function getControlText(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        crtlObj = control1;\n      }\n      if (crtlObj != null) {\n        if (crtlObj.displayType == VIS.DisplayType.AmtDimension) {\n          return crtlObj.getText();\n        } else {\n          return crtlObj.getDisplay();\n        }\n      }\n      return "";\n    }\n    ;\n    function saveRowTemp() {\n      var cVal = drpColumns.val();\n      if (!cVal || cVal == "-1") return false;\n      var colName = drpColumns.find("option:selected").text();\n      var colValue = "";\n      if (colName == null || colName.trim().length == 0) {\n        return false;\n      } else {\n        colValue = cVal.toString();\n      }\n      if (tblSetValue.find(\'tbody [data-cVal="\' + cVal + \'"]\').length > 0) {\n        return;\n      }\n    }\n    function saveSetRowTemp() {\n      var cVal = drpSetColumns.val();\n      if (!cVal || cVal == "-1") return false;\n      var colName = drpSetColumns.find("option:selected").text();\n      var colValue = "";\n      if (colName == null || colName.trim().length == 0) {\n        return false;\n      } else {\n        colValue = cVal.toString();\n      }\n      if (tblSetValue.find(\'tbody [data-cVal="\' + cVal + \'"]\').length > 0) {\n        VIS.ADialog.info(\'AlreadyAdded\');\n        return;\n      }\n      var controlText = getControlValue(true);\n      if (getControlType() == VIS.DisplayType.Date) {\n        controlText = controlText.replace(\'Z\', \'\');\n      }\n      var htm = \'<tr class="vis-advancedSearchTableRowBatch"><td data-cVal="\' + cVal + \'">\' + colName + \'</td>\' + \'<td data-settype="\' + getControlType() + \'" data-setVal="\' + controlText + \'">\' + controlText + \'</td>\' + \'<td class="vis-batchUpdate-deletewrap"><i style="cursor:pointer;" class="vis vis-delete" onclick="$(this).closest(\\\'tr\\\').remove()"></i></td></tr>\';\n      tblSetValue.find(\'tbody\').append(htm);\n      setControl(true, null, divSetValue1);\n      drpSetColumns.val(-1);\n      setControlNullValue(true);\n    }\n\n    //*************Update records ******************//\n\n    function excuteQuery() {\n      var objSetValue = [];\n      var recordIds = [];\n      tblSetValue.find(\'tbody tr\').each(function () {\n        objSetValue.push({\n          column: $(this).find(\'td:eq(0)\').data(\'cval\'),\n          setValue: $(this).find(\'td:eq(1)\').data(\'setval\'),\n          setType: $(this).find(\'td:eq(1)\').data(\'settype\')\n        });\n      });\n      if (objSetValue.length == 0) {\n        return divMessage.text(VIS.Msg.getMsg("VIS_AddAction"));\n      }\n      for (var i = 0; i < selectedRows.length; i++) {\n        recordIds.push(selectedRows[i][(tableName + \'_ID\').toLower()]);\n      }\n      var obj = {\n        AD_Table_ID: AD_Table_ID,\n        setValue: objSetValue,\n        recordIds: recordIds\n      };\n      VIS.ADialog.confirm("UpdateRecord", true, "", "Confirm", function (result) {\n        if (result) {\n          setBusy(true);\n          $.ajax({\n            url: baseUrl + \'BatchUpdate/ExcuteBatchUpdate\',\n            type: "POST",\n            datatype: "json",\n            contentType: "application/json; charset=utf-8",\n            async: false,\n            data: JSON.stringify(obj),\n            success: function (result) {\n              if (result == "OK") {\n                curTab.dataRefreshAll();\n                dispose();\n              } else {\n                divMessage.text(result);\n                setBusy(false);\n              }\n            },\n            error: function (error) {\n              divMessage.text(error);\n            }\n          });\n        } else {\n          return;\n        }\n      });\n    }\n    setView();\n\n    //************* Dialog for Batch Update ******************//\n\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      var windowWidth = $(window).width();\n      if (windowWidth >= 1366) {\n        ch.setHeight(550);\n        ch.setWidth(870);\n      } else {\n        ch.setHeight(450);\n        ch.setWidth(670);\n      }\n      ch.setTitle(VIS.Msg.getMsg("BatchUpdate"));\n      ch.setEnableResize(true);\n      ch.setModal(true);\n      ch.onClose = function () {\n        $self.onClose();\n        $self.dispose();\n      };\n      ch.show();\n      ch.setContent($root);\n      ch.hideButtons();\n      setBusy(false);\n    };\n\n    //*************Clean Up ******************//\n\n    function dispose() {\n      ch.close();\n      if ($root) $root.remove();\n      $root = null;\n      if (btnOk) btnOk.off(VIS.Events.onClick);\n      btnOk = null;\n      if (btnCancel) btnCancel.off(VIS.Events.onClick);\n      btnCancel = null;\n      AD_Table_ID = null;\n      tableName = null;\n      findFields = null;\n      control1 = null;\n      ch = null;\n      drpSetColumns = null;\n      divSetValue1 = null;\n      lblSetQryValue = null;\n      drpColumns = null;\n      drpOp = null;\n      divValue1 = null;\n      lblQryValue = null;\n      btnSave = null;\n      btnSetSave = null;\n      tblSetValue = null;\n      divMessage = null;\n      setBusy(false);\n    }\n    this.disposeComponent = function () {\n      if ($root) $root.remove();\n      $root = null;\n    };\n  }\n  BatchUpdate.prototype.getOperatorsQuery = function (vnpObj, translate) {\n    var html = "";\n    var val = "";\n    for (var p in vnpObj) {\n      val = vnpObj[p];\n      if (translate) val = VIS.Msg.getMsg(val);\n      html += \'<option value="\' + p + \'">\' + val + \'</option>\';\n    }\n    return html;\n  };\n  BatchUpdate.prototype.getIsUserColumn = function (columnName) {\n    if (columnName.endsWith("atedBy") || columnName.equals("AD_User_ID")) return true;\n    if (columnName.equals("SalesRep_ID")) return true;\n    return false;\n  };\n  BatchUpdate.prototype.getIsCreated = function () {\n    return this.created;\n  };\n  BatchUpdate.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.BatchUpdate = BatchUpdate;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/batchUpdate.js?')},"./Areas/VIS/Scripts/app/Framework/bpartner.js":()=>{eval(';\n(function (VIS, $) {\n  var addBPartnerDialog = null;\n  var $addBPartnerRoot = null;\n  var self = null;\n  var txtLoc = null;\n  var $selectBPRelation = null;\n  var $selectBPLocation = null;\n  var $selectBPGroup = null;\n  var isload = false;\n  VIS.BPartner = function BPartner(selfobject, userid, BPartnerID, bpgroupID, category, $isBusyImg, $isBusy) {\n    if ($addBPartnerRoot != null) {\n      $addBPartnerRoot.empty();\n    }\n    self = selfobject;\n    Load(self, userid, BPartnerID, bpgroupID, category, $isBusyImg, $isBusy);\n  };\n  //WSP.BPartner = function BPartner(selfobject) {\n  //    \n  //    self = selfobject;\n  //    Load(self, userid, BPartnerID, bpgroupID, category, $isBusyImg, $isBusy);\n\n  //};\n\n  function OnRelationChangeEvent(relationID, self) {\n    var result = null;\n    var bplocation = "";\n    url = VIS.Application.contextUrl + "WSP/Contacts/GetBPLocation?WinNo=" + self.windowNo + "&bpartnerID=" + relationID;\n    $.ajax({\n      type: "GET",\n      async: false,\n      url: url,\n      dataType: "json",\n      success: function (data) {\n        result = JSON.parse(data);\n        for (var i = 0; i < result.lstBPLocation.length; i++) {\n          bplocation += "<option value=\'" + result.lstBPLocation[i].ID + "\'>" + result.lstBPLocation[i].Name + "</option>";\n        }\n        $selectBPLocation.empty();\n        $selectBPLocation.append(bplocation);\n      }\n    });\n  }\n  ;\n  function OpenDialog(root, category, $selectBPRelation, self, $isBusyImg, $isBusy) {\n    addBPartnerDialog = new VIS.ChildDialog();\n    addBPartnerDialog.setContent(root);\n    //addBPartnerDialog.setWidth(w);\n    //addBPartnerDialog.setHeight(h);\n    if (category == "Customer") {\n      addBPartnerDialog.setTitle(VIS.Msg.getMsg("Customer"));\n    } else if (category == "Employee") {\n      addBPartnerDialog.setTitle(VIS.Msg.getMsg("Employee"));\n    } else if (category == "Vendor") {\n      addBPartnerDialog.setTitle(VIS.Msg.getMsg("Vendor"));\n    } else if (category == "Prospect") {\n      addBPartnerDialog.setTitle(VIS.Msg.getMsg("Prospect"));\n    }\n    addBPartnerDialog.setEnableResize(false);\n    addBPartnerDialog.setModal(true);\n    addBPartnerDialog.show();\n    SaveBPartnerEvents($isBusyImg, category, $isBusy);\n    $selectBPRelation.on("change", function () {\n      OnRelationChangeEvent($selectBPRelation.val(), self);\n    });\n  }\n  ;\n  function SaveBPartnerEvents($isBusyImg, category, $isBusy) {\n    addBPartnerDialog.onOkClick = function (e) {\n      // addBPartnerDialog.dialog("open");\n      var $IsBPartnerBusy = $("#divBPartner_" + self.windowNo).find("img");\n      var h = $(window).height() * (50 / 100);\n      var w = $(window).width() * (50 / 100);\n      $isBusyImg.css("margin-top", h);\n      $isBusyImg.css("margin-left", w);\n      $isBusy.show();\n      $IsBPartnerBusy.css("visibility", "visible");\n      var txtName = $("#txtName_" + self.windowNo).val();\n      var txtSearchKey = $("#txtSearchKey_" + self.windowNo).val();\n      var ddlgreeting1 = $("#ddlGreeting1_" + self.windowNo).val();\n      var txtName2 = $("#txtName2_" + self.windowNo).val();\n      var ddlBPGroup = $("#ddlBPGroup_" + self.windowNo).val();\n      var ddlBPRelation = $("#ddlBPRelation_" + self.windowNo).val();\n      var ddlBPLocation = $("#ddlBPLoaction_" + self.windowNo).val();\n      var txtContact = $("#txtContact_" + self.windowNo).val();\n      var ddlgreeting = $("#ddlGreeting_" + self.windowNo).val();\n      var ddlTitle = $("#txtTitle_" + self.windowNo).val();\n      var ddlEmail = $("#txtEmail_" + self.windowNo).val();\n      var ddlAddress = txtLoc.getValue();\n      var txtPhone = $("#txtPhone_" + self.windowNo).val();\n      var txtPhone2 = $("#txtPhone2_" + self.windowNo).val();\n      var txtFax = $("#txtFax_" + self.windowNo).val();\n      if (txtName.trim() == "" || txtSearchKey.trim() == "") {\n        //alert(VIS.Msg.getMsg("NameMandatory"));\n        VIS.ADialog.info("NameMandatory");\n        $isBusy.hide();\n        $IsBPartnerBusy.css("visibility", "collapse");\n        return;\n      }\n      var BPtype = null;\n      if (category == "Customer") {\n        BPtype = VIS.Msg.getMsg("Customer");\n      } else if (category == "Employee") {\n        BPtype = VIS.Msg.getMsg("Employee");\n      } else if (category == "Vendor") {\n        BPtype = VIS.Msg.getMsg("Vendor");\n      } else if (category == "Prospect") {\n        BPtype = VIS.Msg.getMsg("Prospect");\n      }\n      url = VIS.Application.contextUrl + "WSP/Contacts/AddBPartnerInfo";\n      if (ddlBPGroup == "0") {\n        ddlBPGroup = undefined;\n      }\n      if (ddlBPRelation == "0") {\n        ddlBPRelation = undefined;\n      }\n      if (ddlBPLocation == "0") {\n        ddlBPLocation = undefined;\n      }\n      if (ddlgreeting == "0") {\n        ddlgreeting = undefined;\n      }\n      if (ddlgreeting1 == "0") {\n        ddlgreeting1 = undefined;\n      }\n      if (ddlAddress == null) {\n        ddlAddress = undefined;\n      }\n      if (txtPhone == "") {\n        txtPhone = undefined;\n      }\n      if (txtPhone2 == "") {\n        txtPhone2 = undefined;\n      }\n      if (txtContact == "") {\n        txtContact = undefined;\n      }\n      if (txtName == null) {\n        txtName = undefined;\n      }\n      if (txtFax == "") {\n        txtFax = undefined;\n      }\n      if (txtSearchKey == "") {\n        txtSearchKey = undefined;\n      }\n      if (ddlTitle == "") {\n        ddlTitle = undefined;\n      }\n      if (ddlEmail == "") {\n        ddlEmail = undefined;\n      }\n      if (BPtype == "") {\n        BPtype = undefined;\n      }\n      $.ajax({\n        type: "Post",\n        async: false,\n        url: url,\n        dataType: "json",\n        data: {\n          searchKey: txtSearchKey,\n          name: txtName,\n          name2: txtName2,\n          greeting: ddlgreeting,\n          bpGroup: ddlBPGroup,\n          bpRelation: ddlBPRelation,\n          bpLocation: ddlBPLocation,\n          contact: txtContact,\n          greeting1: ddlgreeting1,\n          title: ddlTitle,\n          email: ddlEmail,\n          address: ddlAddress,\n          phoneNo: txtPhone,\n          phoneNo2: txtPhone2,\n          fax: txtFax,\n          windowNo: self.windowNo,\n          BPtype: BPtype\n        },\n        success: function (data) {\n          $isBusy.hide();\n          $IsBPartnerBusy.css("visibility", "collapse");\n          // addBPartnerDialog.dialog("close");\n          alert(data);\n          $addBPartnerRoot.empty();\n        }\n      });\n    };\n  }\n  ;\n  function Load(self, userid, BPartnerID, bpgroupID, category, $isBusyImg, $isBusy) {\n    var $bpartnerroot = null;\n\n    // userID = $("#userID").val();\n    var greeting = "";\n    var bpgroup = "";\n    var bprelation = "";\n    var bplocation = "";\n    var lookup = new VIS.MLocationLookup(VIS.context.ctx, self.windowNo);\n    txtLoc = new VIS.Controls.VLocation("C_Location_ID", true, false, true, VIS.DisplayType.Location, lookup);\n    var count = txtLoc.getBtnCount();\n    $addBPartnerRoot = $("<div id=\'divBPartner_" + self.windowNo + "\' style=\'width:auto;height:auto;margin-right:5px\'> <img src=\'/ViennaAdvantageWeb1/Areas/VIS/Images/busy.gif\' style=\' margin-top: 120px; margin-left: 327px; z-index:9999;position:absolute;visibility:collapse\'>");\n    var url = VIS.Application.contextUrl + "WSP/Contacts/AddBusinessPartner?WinNo=" + self.windowNo + "&UserID=" + userid;\n    $.ajax({\n      type: "GET",\n      async: false,\n      url: url,\n      dataType: "json",\n      success: function (data) {\n        var dd = JSON.parse(data);\n        for (var i = 0; i < dd.lstGreeting.length; i++) {\n          greeting += "<option value=\'" + dd.lstGreeting[i].ID + "\'>" + dd.lstGreeting[i].Name + "</option>";\n        }\n        for (var i = 0; i < dd.lstBPGroup.length; i++) {\n          bpgroup += "<option value=\'" + dd.lstBPGroup[i].ID + "\'>" + dd.lstBPGroup[i].Name + "</option>";\n        }\n        for (var i = 0; i < dd.lstBPRelation.length; i++) {\n          bprelation += "<option value=\'" + dd.lstBPRelation[i].ID + "\'>" + dd.lstBPRelation[i].Name + "</option>";\n        }\n        for (var i = 0; i < dd.lstBPLocation.length; i++) {\n          bplocation += "<option value=\'" + dd.lstBPLocation[i].ID + "\'>" + dd.lstBPLocation[i].Name + "</option>";\n        }\n        $bpartnerroot = AddControls(greeting, bpgroup, bplocation, bprelation, BPartnerID, bpgroupID);\n      }\n    });\n    $addBPartnerRoot.append($bpartnerroot);\n    $addBPartnerRoot.load();\n    OpenDialog($addBPartnerRoot, category, $selectBPRelation, self, $isBusyImg, $isBusy);\n  }\n  ;\n  function AddControls(greeting, bpgroup, bplocation, bprelation, BPartnerID, bpgroupID) {\n    var $bpartnerroot = $("<table id=\'tableBPartner_" + self.windowNo + "\'><tr><td><div style=\'margin-top: 0px; float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'margin-top: 0px;width:100%\' class=\'wsp-BPartner\'><input id=\'txtSearchKey_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: right;margin-right: 5px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-top: 0px;margin-right:5px\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + self.windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:100%\' class=\'wsp-BPartner\'><input id=\'txtName_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></td></tr><tr><td><div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name2") + "  </div></td><td style=\'width:300px\'><div style=\'width:100%\' class=\'wsp-BPartner\'><input id=\'txtName2_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></td><td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px\' class=\'wsp-BPartner\'><select id=\'ddlBPGroup_" + self.windowNo + "\' style=\'width: 100%\'>" + bpgroup + "</select>" + "</div>" + "</td>" + "</tr>" + "<tr>" + "<td>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPRelation") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div style=\'width:100%\' class=\'wsp-BPartner\'>" + "<select style=\'width:100%\' id=\'ddlBPRelation_" + self.windowNo + "\' >" + bprelation + "</select>" + "</div>" + "</td> <td style=\'width:50px\'></td>" + "<td style=\'margin-left:10px\'>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPLoaction") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px\'>" + "<select id=\'ddlBPLoaction_" + self.windowNo + "\' style=\'width:100%\'>" + "</select>" + "</div>" + "</td>" + "</tr>" + "<tr>" + "<td>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Contact") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div style=\'width:100%\' class=\'wsp-BPartner\'>" + "<input id=\'txtContact_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>" + "</div>" + "</td> <td style=\'width:50px\'></td>" + "<td style=\'margin-left:10px\'>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px\'>" + "<select id=\'ddlGreeting_" + self.windowNo + "\' style=\'width: 100%\'>" + greeting + "</select>" + "</div>" + "</td>" + "</tr>" + "<tr>" + "<td>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Title") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div style=\'width:100%\' class=\'wsp-BPartner\'>" + "<input id=\'txtTitle_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>" + "</div>" + "</td> <td style=\'width:50px\'></td>" + "<td style=\'margin-left:10px\'>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("EmailAddress") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px\'>" + "<input id=\'txtEmail_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>" + "</div>" + "</td>" + "</tr>" + "<tr>" + "<td>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Address") + "  </div>" + "</td>" + "<td style=\'width:300px\'><div style=\'width:100%\' id=\'divAddress_" + self.windowNo + "\' class=\'wsp-BPartner\' ></div> </td> <td style=\'width:50px\'></td>" + "<td style=\'margin-left:10px\'>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Phone") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px\'>" + "<input id=\'txtPhone_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>" + "</div>" + "</td>" + "</tr>" + "<tr>" + "<td>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("2ndPhone") + "  </div>" + "</td>" + "<td style=\'width:300px\'>" + "<div class=\'wsp-BPartner\' style=\'width:100%;\'>" + "<input id=\'txtPhone2_" + self.windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>" + "</div>" + "</td> <td style=\'width:50px\'></td>" + "<td style=\'margin-left:10px\'>" + "<div style=\'float: right\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Fax") + "  </div>" + "</td>" + "<td style=\'width:300px\' >" + "<div style=\'margin-bottom:7px;margin-right: 5px\' class=\'wsp-BPartner\' >" + "<input id=\'txtFax_" + self.windowNo + "\' style=\'height: 25px;width:100%;\' type=\'text\'>" + "</div>" + "</td>" + "</tr>" + "</table>");\n    var $div = $bpartnerroot.find("#divAddress_" + self.windowNo);\n    $bpartnerroot.find("#ddlBPRelation_" + self.windowNo).val(BPartnerID);\n    $selectBPRelation = $bpartnerroot.find("#ddlBPRelation_" + self.windowNo);\n    $selectBPLocation = $bpartnerroot.find("#ddlBPLoaction_" + self.windowNo);\n    $selectBPGroup = $bpartnerroot.find("#ddlBPGroup_" + self.windowNo).val(bpgroupID);\n    OnRelationChangeEvent(BPartnerID, self);\n    txtLoc.getBtn(0).css("width", "10%");\n    txtLoc.getBtn(0).css("height", "10%");\n    txtLoc.getBtn(0).css("padding", "0px");\n    //txtLoc.getBtn(0).css("border-radius", "none");\n    txtLoc.getBtn(1).css("width", "10%");\n    txtLoc.getBtn(1).css("height", "10%");\n    txtLoc.getBtn(1).css("padding", "0px");\n    //txtLoc.getBtn(1).css("border-radius", "none");\n    $div.append(txtLoc.getControl().css("width", "80%")).append(txtLoc.getBtn(0)).append(txtLoc.getBtn(1));\n    return $bpartnerroot;\n  }\n  ;\n\n  //----------------------------------------------------------------------------------------------------//\n  // Add or Update business partner\n  //----------------------------------------------------------------------------------------------------//\n\n  VIS.AddUpdateBPartner = function BPartner(windowNo, BPartnerID, BPtype, $busy, bpartnerID, bpGroupID) {\n    var $txtName = null;\n    var $txtSearchKey = null;\n    var $txtGreeting = null;\n    var $txtName2 = null;\n    var $txtContact = null;\n    var $txtGreeting1 = null;\n    var $txtTitle = null;\n    var $txtEmail = null;\n    //txtLoc.getV\n    var $txtPhone = null;\n    var $txtPhone2 = null;\n    var $txtFax = null;\n    var $txtTitle = null;\n    var $txtAddress = null;\n    var $btnAddress = null;\n    var $isBusy = null;\n    var BPRelationID = 0;\n    var BPGroupID = 0;\n    var ddlAddress = null;\n    var $chkCustomer = null;\n    var $chkVendor = null;\n    var $chkProspect = null;\n    var $chkEmployee = null;\n    var btnUpload = null;\n    var fileDialog = null;\n    var imageName = null;\n    var fileKey = "";\n    var imgBPartner = null;\n    var txtMobile = null;\n    var txtWebUrl = null;\n    if ($busy == null) {\n      $(".vis-apanel-busy").css("visibility", "visible");\n      $(".vis-apanel-busy").css("z-index", "9999999");\n    }\n    $isBusy = $busy;\n    if ($addBPartnerRoot != null) {\n      $addBPartnerRoot.empty();\n    }\n    BPRelationID = bpartnerID;\n    BPGroupID = bpGroupID;\n    function InitBP(windowNo, BPartnerID, BPtype) {\n      LoadControls(windowNo, BPartnerID, BPtype);\n    }\n    ;\n    function LoadControls(windowNo, BPartnerID, BPtype) {\n      var $bpartnerroot = null;\n\n      // userID = $("#userID").val();\n      var greeting = "";\n      var bpgroup = "";\n      var bprelation = "";\n      var bplocation = "";\n      var lookup = new VIS.MLocationLookup(VIS.context.ctx, windowNo);\n      txtLoc = new VIS.Controls.VLocation("C_Location_ID", true, false, true, VIS.DisplayType.Location, lookup);\n      var count = txtLoc.getBtnCount();\n      $addBPartnerRoot = $("<div id=\'divBPartner_" + windowNo + "\' style=\'width:auto;height:auto;margin-right:5px\'> <img src=\'/ViennaAdvantageWeb1/Areas/VIS/Images/busy.gif\' style=\' margin-top: 120px; margin-left: 327px; z-index:9999;position:absolute;visibility:collapse\'>");\n      OpenDialogPopup($addBPartnerRoot, windowNo, BPartnerID, BPtype);\n      var url = VIS.Application.contextUrl + "BPartner/InitBP?WinNo=" + windowNo + "&bPartnerID=" + BPartnerID + "&bpType=" + BPtype;\n      $.ajax({\n        type: "GET",\n        async: false,\n        url: url,\n        dataType: "json",\n        success: function (data) {\n          var dd = JSON.parse(data);\n          for (var i = 0; i < dd.lstGreeting.length; i++) {\n            greeting += "<option value=\'" + dd.lstGreeting[i].ID + "\'>" + VIS.Utility.encodeText(dd.lstGreeting[i].Name) + "</option>";\n          }\n          for (var i = 0; i < dd.lstBPGroup.length; i++) {\n            bpgroup += "<option value=\'" + dd.lstBPGroup[i].ID + "\'>" + VIS.Utility.encodeText(dd.lstBPGroup[i].Name) + "</option>";\n          }\n          // VIS0060\n          //for (var i = 0; i < dd.lstBPRelation.length; i++) {\n          //    bprelation += "<option value=\'" + dd.lstBPRelation[i].ID + "\'>" + VIS.Utility.encodeText(dd.lstBPRelation[i].Name) + "</option>";\n          //}\n          //for (var i = 0; i < dd.lstBPLocation.length; i++) {\n          //    bplocation += "<option value=\'" + dd.lstBPLocation[i].ID + "\'>" + dd.lstBPLocation[i].Name + "</option>";\n          //}\n          $bpartnerroot = HtmlTable(windowNo, BPartnerID, BPtype, dd, greeting, bpgroup, bplocation, bprelation);\n        }\n      });\n      ////$addBPartnerRoot.append($bpartnerroot);\n      ////$addBPartnerRoot.load();\n      window.setTimeout(function () {\n        if (addBPartnerDialog != null) {\n          //addBPartnerDialog.setContent($bpartnerroot);\n          $addBPartnerRoot.append($bpartnerroot);\n          $addBPartnerRoot.load();\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          $(".vis-apanel-busy").css("height", "460px");\n          $(".vis-apanel-busy").css("z-index", "99");\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n        }\n      }, 500);\n      //OpenDialogPopup($addBPartnerRoot, windowNo, BPartnerID, BPtype);\n    }\n    ;\n\n    //function HtmlTable(windowNo, BPartnerID, BPtype, dd, greeting, bpgroup, bplocation, bprelation) {\n\n    //    //var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'><tr><td><div style=\'margin-top: 0px; float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divSearchKey\' style=\'color:red;visibility:collapse\'>*</div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right:5px;width:95%\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divName\' style=\'color:red;visibility:collapse\'>*</div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name2") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%\' class=\'wsp-BPartner\'><input id=\'txtName2_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></td><td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px;width: 95%\' class=\'wsp-BPartner\'><select id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select>"\n    //    //var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'> <tr> <td ><div style=\'margin-top: 0px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPType") + "</div></td><td style=\'border: 1px solid #bdbdbd;border-right: 1px white;\'><div style=\'float:left;margin-right: 15px;margin-bottom: 2px;\'>  <input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "  </div> <div style=\'float:right;margin-right: 15px;margin-bottom: 2px;\'> <input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + "  </div></td>  <td style=\'border: 1px solid #bdbdbd;border-left: 1px white;border-right: 1px white;width:50px\'></td> <td style=\'border: 1px solid #bdbdbd;border-left: 1px white;border-right: 1px white;margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'></div></td><td ><div style=\'float:right;margin-right: 15px;/* margin-bottom: 2px; */border: 1px solid #bdbdbd;      border-left: 1px white;width: 288px;height: 25px;\'>  </div></td></tr>" +\n    //    //        var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'> <tr> <td ><div style=\'margin-top: 0px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPType") + "</div></td><td  colspan=\'4\' ><div style=\'float:left;margin-right: 15px;margin-bottom: 2px;border: 1px solid #bdbdbd;width:98%;height: 35px;margin-left: 5px;\'> <div style=\'float:left;margin-left:100px;margin-top: 5px;\'> <input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "</div> <div style=\'float:left;margin-left:150px;margin-top: 5px;\'> <input id=\'chkProspect_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Prospect") + "</div> <div style=\'float:left;margin-left: 200px;margin-top: 5px;\'>  <input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + " </div>  </div></td>  </tr>" +\n    //    //            "<tr><td><div style=\'margin-top: 0px; float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input class=\'vis-gc-vpanel-table-mandatory\'  id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divSearchKey\' style=\'color:red;visibility:collapse\'>*</div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right:5px;width:95%\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divName\' style=\'color:red;visibility:collapse\'>*</div></td>  <td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px;width: 95%\' class=\'wsp-BPartner\'><select class=\'vis-gc-vpanel-table-mandatory\' id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select></div> <div id=\'divBPGroup\' style=\'color:red;visibility:collapse\'>*</div></td></tr>"\n    //    //+ "<tr>"\n    //    //+ "<td>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPRelation") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div style=\'width:95%\' class=\'wsp-BPartner\'>"\n    //    //  + "<select style=\'width:100%\' id=\'ddlBPRelation_" + windowNo + "\' >"\n\n    //    //      + bprelation\n    //    //  + "</select>"\n    //    //+ "</div>"\n    //    //+ "</td> <td style=\'width:50px\'></td>"\n    //    //+ "<td style=\'margin-left:10px\'>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPLocation") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n    //    //  + "<select id=\'ddlBPLoaction_" + windowNo + "\' style=\'width:100%\'>"\n    //    //  + "</select>"\n    //    //+ "</div>"\n    //    //+ "</td>"\n    //    //+ "</tr>"\n    //    //+ "<tr>"\n    //    //+ "<td>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Contact") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div style=\'width:95%;float:left\' class=\'wsp-BPartner\'>"\n    //    //  + "<input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtContact_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n    //    //+ "</div><div id=\'divContact_" + windowNo + "\' style=\'color:red;visibility:collapse\'>*</div>"\n    //    //+ "</td> <td style=\'width:50px\'></td>"\n    //    //+ "<td style=\'margin-left:10px\'>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n    //    //  + "<select id=\'ddlGreeting_" + windowNo + "\' style=\'width: 100%\'>"\n    //    //    + greeting\n    //    //  + "</select>"\n    //    //+ "</div>"\n    //    //+ "</td>"\n    //    //+ "</tr>"\n    //    //+ "<tr>"\n    //    //+ "<td>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Title") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div style=\'width:95%\' class=\'wsp-BPartner\'>"\n    //    //  + "<input id=\'txtTitle_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n    //    //+ "</div>"\n    //    //+ "</td> <td style=\'width:50px\'></td>"\n    //    //+ "<td style=\'margin-left:10px\'>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("EmailAddress") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n    //    //  + "<input id=\'txtEmail_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n    //    //+ "</div>"\n    //    //+ "</td>"\n    //    //+ "</tr>"\n    //    //+ "<tr>"\n    //    //+ "<td>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Address") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'><div style=\'width:95%;float:left\' id=\'divAddress_" + windowNo + "\' class=\'wsp-BPartner\' ></div> <div id=\'divAddressValidate_" + windowNo + "\' style=\'color:red;visibility:collapse\'>*</div></td> <td style=\'width:50px\'></td>"\n    //    //+ "<td style=\'margin-left:10px\'>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Phone") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n    //    //  + "<input id=\'txtPhone_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n    //    //+ "</div>"\n    //    //+ "</td>"\n    //    //+ "</tr>"\n    //    //+ "<tr>"\n    //    //+ "<td>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("2ndPhone") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\'>"\n    //    //+ "<div class=\'wsp-BPartner\' style=\'width:95%;\'>"\n    //    //  + "<input id=\'txtPhone2_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n    //    //+ "</div>"\n    //    //+ "</td> <td style=\'width:50px\'></td>"\n    //    //+ "<td style=\'margin-left:10px\'>"\n    //    //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Fax") + "  </div>"\n    //    //+ "</td>"\n    //    //+ "<td style=\'width:300px\' >"\n    //    //+ "<div style=\'margin-bottom:7px;margin-right: 5px;width:95%\' class=\'wsp-BPartner\' >"\n    //    //  + "<input id=\'txtFax_" + windowNo + "\' style=\'height: 25px;width:100%;\' type=\'text\'>"\n    //    //+ "</div>"\n    //    //+ "</td>"\n    //    //+ "</tr>"\n    //    //+ "</table>");\n\n    //    var $bpartnerroot = $("<DIV class=\'vis-MainDivBPartnerPopUp\'>" +\n    //        "<DIV class=\'vis-DivBPartnerLeft\' >" +\n    //        "<DIV class=\'vis-FirstDivBPartnerPopUp\' > </DIV>" +\n    //        "" + Splliter("50%", "Phone Number", 5) + Splliter("50%", "Internet", 100) +\n    //        "<DIV class=\'vis-SecondDivBPartnerPopUp\'> </DIV>" +\n    //          "" + Splliter("100%", "Address", 5) +\n    //        "<DIV class=\'vis-ThirdDivBPartnerPopUp\'> </DIV> </DIV>" +\n\n    //          //"<DIV class=\'vis-DivBPartnerRight\' > </DIV>" +\n    //          "<DIV class=\'vis-FourthDivBPartnerPopUp\'> </DIV> " +\n    //        "</DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivBPartnerPopUp").append("<DIV class=\'vis-FirstDivCotrol\' ></DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivBPartnerPopUp").append("<DIV class=\'vis-DivBPartnerRight\' > </DIV>");\n    //    $bpartnerroot.find(".vis-SecondDivBPartnerPopUp").append("<DIV class=\'vis-SecondDivCotrol\' ></DIV> ");\n    //    $bpartnerroot.find(".vis-SecondDivBPartnerPopUp").append("<DIV class=\'vis-SecondDivImgCotrol\'></DIV> ");\n    //    $bpartnerroot.find(".vis-ThirdDivBPartnerPopUp").append("<DIV class=\'vis-ThirdDivCotrol\' ></DIV>");\n    //    $bpartnerroot.find(".vis-FourthDivBPartnerPopUp").append("<DIV class=\'vis-FourthDivHeader\' > " + VIS.Msg.getMsg("BPType") + " </DIV> <DIV class=\'vis-FourthDivControl\'></DIV>");\n    //    $bpartnerroot.find(".vis-DivBPartnerRight").append("<div class=\'image-upload\' style=\'float: right; position: absolute; z-index: 999; top:12px;overflow:hidden;right:0\'><label for=\'file-input\' class=\'wsp-file-label\'><span class=\'wsp-change-picture-ico\'></span></label><input type=\'file\' id=\'VISFileDialog_" + windowNo + "\' accept=\'image/*\' class=\'wsp-file-input\' value=\'Add Pic\' style=\'opacity: 0; width: 100%; margin-top: 0px; float: right; z-index: 999; position: absolute; right: 0px; cursor: pointer;\'></div>");\n    //    $bpartnerroot.find(".vis-DivBPartnerRight").append("<DIV class=\'vis-FirstDivImgCotrol\'></DIV>");\n    //    // $bpartnerroot.find(".vis-DivBPartnerRight").append("<DIV class=\'vis-SecondDivImgCotrol\'></DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("SearchKeyValue") + "  </div> <div class=\'vis-all-control\'><input class=\'vis-gc-vpanel-table-mandatory\'  id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Greeting") + "  </div> <div class=\'vis-all-control\'><select id=\'ddlGreeting_" + windowNo + "\' style=\'width: 100%\'>" + greeting + "</select></div></DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Contact") + "  </div> <div class=\'vis-all-control\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtContact_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Name") + "  </div> <div class=\'vis-all-control\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n    //    $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("BPGroup") + "  </div> <div class=\'vis-all-control\'><select class=\'vis-gc-vpanel-table-mandatory\' id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select> </div></DIV>");\n    //    //$bpartnerroot.find(".vis-FirstDivImgCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\' >  <div style=\'float: left;width:320px;height:150px;line-height: 236px;background: none repeat scroll 0% 0% #EEE;padding:0px;text-align:center\' ><img id=\'imgBPartner_" + windowNo + "\' /></div>  <div style=\'float: left;width:100%;height:20%;padding:2px\' >   <button  id=\'VISBPartenrImg_" + windowNo + "\' class=\'VIS-open-icon\'></button>" +\n    //    //                "<input type=\'file\' id=\'VISFileDialog_" + windowNo + "\' accept=\'image/*\' style=\'display:none\'></div></DIV>");\n\n    //    $bpartnerroot.find(".vis-FirstDivImgCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\' >  <div style=\'float: left;width:320px;height:186px;line-height: 184px;background: none repeat scroll 0% 0% #EEE;padding:0px;text-align:center\' ><img id=\'imgBPartner_" + windowNo + "\' /></div> ");\n\n    //    $bpartnerroot.find(".vis-SecondDivCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Phone") + "  </div> <div class=\'vis-all-control\'><input id=\'txtPhone_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></DIV>");\n    //    $bpartnerroot.find(".vis-SecondDivCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Mobile") + "  </div> <div class=\'vis-all-control\'><input id=\'txtMobile_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></DIV>");\n    //    $bpartnerroot.find(".vis-SecondDivCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Fax") + "  </div> <div class=\'vis-all-control\'><input id=\'txtFax_" + windowNo + "\' style=\'height: 25px;width:100%;\' type=\'text\'> </div></DIV>");\n    //    $bpartnerroot.find(".vis-SecondDivImgCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\' style=\'padding:0px\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("EmailAddress") + "  </div> <div class=\'vis-all-control\'><input id=\'txtEmail_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n    //    $bpartnerroot.find(".vis-SecondDivImgCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\' style=\'padding:0px\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("WebUrl") + "  </div> <div class=\'vis-all-control\'><input id=\'txtWebUrl_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n    //    $bpartnerroot.find(".vis-ThirdDivCotrol").append("<DIV class=\'vis-ThirdDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Address") + "  </div> <div id=\'divAddress_" + windowNo + "\' class=\'vis-all-control\'></div></DIV>");\n\n    //    $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:33%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "</div></DIV>");\n    //    $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:33%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + " </div></DIV>");\n    //    $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:33%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkProspect_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Prospect") + "</div></DIV>");\n\n    //    var $div = $bpartnerroot.find("#divAddress_" + windowNo);\n    //    $selectBPRelation = $bpartnerroot.find("#ddlBPRelation_" + windowNo);\n    //    $selectBPLocation = $bpartnerroot.find("#ddlBPLoaction_" + windowNo);\n    //    $selectBPGroup = $bpartnerroot.find("#ddlBPGroup_" + windowNo);\n    //    $txtName = $bpartnerroot.find("#txtName_" + windowNo);\n    //    $txtSearchKey = $bpartnerroot.find("#txtSearchKey_" + windowNo);\n    //    $txtGreeting1 = $bpartnerroot.find("#ddlGreeting1_" + windowNo);\n    //    $txtName2 = $bpartnerroot.find("#txtName2_" + windowNo);\n\n    //    $txtContact = $bpartnerroot.find("#txtContact_" + windowNo);\n    //    $txtGreeting = $bpartnerroot.find("#ddlGreeting_" + windowNo);\n    //    $txtTitle = $bpartnerroot.find("#txtTitle_" + windowNo);\n    //    $txtEmail = $bpartnerroot.find("#txtEmail_" + windowNo);\n\n    //    $txtPhone = $bpartnerroot.find("#txtPhone_" + windowNo);\n    //    $txtPhone2 = $bpartnerroot.find("#txtPhone2_" + windowNo);\n    //    $txtFax = $bpartnerroot.find("#txtFax_" + windowNo);\n    //    $chkCustomer = $bpartnerroot.find("#chkCustomer_" + windowNo);\n    //    $chkVendor = $bpartnerroot.find("#chkVendor_" + windowNo);\n    //    $chkProspect = $bpartnerroot.find("#chkProspect_" + windowNo);\n    //    txtLoc.setValue(dd.location);\n    //    //btnUpload = $bpartnerroot.find("#VISBPartenrImg_" + windowNo);\n    //    fileDialog = $bpartnerroot.find("#VISFileDialog_" + windowNo);\n    //    imgBPartner = $bpartnerroot.find("#imgBPartner_" + windowNo);\n    //    txtMobile = $bpartnerroot.find("#txtMobile_" + windowNo);\n    //    txtWebUrl = $bpartnerroot.find("#txtWebUrl_" + windowNo);\n    //    Events();\n    //    if (BPartnerID > 0) {\n    //        //$bpartnerroot.find("#ddlBPRelation_" + windowNo).val(dd.bpRelationID);\n    //        //$bpartnerroot.find("#ddlBPGroup_" + windowNo).val(dd.bpGroupID);\n    //        //$bpartnerroot.find("#ddlBPLoaction_" + windowNo).val(dd.bpLocationID);\n\n    //        //$bpartnerroot.find("#txtName_" + windowNo).val(dd.name);\n    //        //$bpartnerroot.find("#txtSearchKey_" + windowNo).val(dd.searchKey);\n    //        //$bpartnerroot.find("#ddlGreeting1_" + windowNo).val();\n    //        //$bpartnerroot.find("#txtName2_" + windowNo).val(dd.name2);\n\n    //        //$bpartnerroot.find("#txtContact_" + windowNo).val(dd.contact);\n    //        //$bpartnerroot.find("#ddlGreeting_" + windowNo).val();\n    //        //$bpartnerroot.find("#txtTitle_" + windowNo).val(dd.title);\n    //        //$bpartnerroot.find("#txtEmail_" + windowNo).val(dd.email);\n    //        ////txtLoc.getValue();\n    //        //$bpartnerroot.find("#txtPhone_" + windowNo).val(dd.phoneNo);\n    //        //$bpartnerroot.find("#txtPhone2_" + windowNo).val(dd.phoneNo2);\n    //        //$bpartnerroot.find("#txtFax_" + windowNo).val(dd.fax);\n    //        //$bpartnerroot.find("#ddlGreeting1_" + windowNo).val(dd.greeting);\n    //        //$bpartnerroot.find("#ddlGreeting_" + windowNo).val(dd.greeting1);\n    //        //$bpartnerroot.find("#txtTitle_" + windowNo).val(dd.title);\n\n    //        $selectBPRelation.val(dd.bpRelationID);\n    //        $selectBPGroup.val(dd.bpGroupID);\n    //        $selectBPLocation.val(dd.bpLocationID);\n\n    //        $txtName.val(VIS.Utility.decodeText(dd.name));\n    //        $txtSearchKey.val(VIS.Utility.decodeText(dd.searchKey));\n    //        $txtGreeting1.val();\n    //        $txtName2.val(VIS.Utility.decodeText(dd.name2));\n    //        imgBPartner.removeAttr("src").attr("src", dd.userImage);\n    //        $txtContact.val(VIS.Utility.decodeText(dd.contact));\n    //        $txtGreeting.val();\n    //        $txtTitle.val(VIS.Utility.decodeText(dd.title));\n    //        $txtEmail.val(VIS.Utility.decodeText(dd.email));\n    //        //txtLoc.getValue();\n    //        $txtPhone.val(VIS.Utility.decodeText(dd.phoneNo));\n    //        $txtPhone2.val(VIS.Utility.decodeText(dd.phoneNo2));\n    //        $txtFax.val(VIS.Utility.decodeText(dd.fax));\n    //        $txtGreeting.val(dd.greeting);\n    //        $txtGreeting1.val(dd.greeting1);\n    //        txtLoc.setValue(dd.location);\n    //        txtMobile.val(dd.mobile);\n    //        txtWebUrl.val(dd.WebUrl);\n    //        if (dd.isCustomer) {\n    //            $chkCustomer.attr("checked", "checked");\n    //        }\n    //        if (dd.isVendor) {\n    //            $chkVendor.attr("checked", "checked");\n    //        }\n    //        OnSelectionChangeEvent($selectBPRelation.val(), windowNo, dd.bpLocationID);\n    //    }\n    //    else if (BPRelationID > 0 && BPGroupID > 0) {\n    //        $bpartnerroot.find("#ddlBPRelation_" + windowNo).val(BPRelationID);\n    //        $bpartnerroot.find("#ddlBPGroup_" + windowNo).val(BPGroupID);\n    //        OnSelectionChangeEvent($selectBPRelation.val(), windowNo, dd.bpLocationID);\n    //    }\n\n    //    txtLoc.getBtn(0).css("width", "10%");\n    //    txtLoc.getBtn(0).css("height", "30px");\n    //    txtLoc.getBtn(0).css("padding", "0px");\n    //    //txtLoc.getBtn(0).css("border-radius", "none");\n    //    txtLoc.getBtn(1).css("width", "10%");\n    //    txtLoc.getBtn(1).css("height", "30px");\n    //    txtLoc.getBtn(1).css("padding", "0px");\n    //    //txtLoc.getBtn(1).css("border-radius", "none");\n    //    $div.append(txtLoc.getControl().css("width", "80%")).append(txtLoc.getBtn(0)).append(txtLoc.getBtn(1));\n    //    $txtAddress = $bpartnerroot.find("#divAddress_" + windowNo).find("Input");\n    //    $btnAddress = $bpartnerroot.find("#divAddress_" + windowNo).find("Button").eq(1);\n    //    SaveBPartner(windowNo, BPtype, BPartnerID);\n    //    $selectBPRelation.on("change", function () {\n\n    //        OnSelectionChangeEvent($selectBPRelation.val(), windowNo);\n    //    });\n    //    $txtSearchKey.on("focusout", function () {\n\n    //        if ($txtSearchKey.val() == "") {\n    //            $("#divSearchKey").css("visibility", "visible");\n    //        }\n    //        else {\n    //            $("#divSearchKey").css("visibility", "collapse ");\n    //        }\n    //    });\n    //    $txtName.on("focusout", function () {\n\n    //        if ($txtName.val() == "") {\n    //            $("#divName").css("visibility", "visible");\n    //        }\n    //        else {\n    //            $("#divName").css("visibility", "collapse");\n    //        }\n    //    });\n    //    $selectBPGroup.on("focusout", function () {\n\n    //        if ($selectBPGroup.val() == "0" || $selectBPGroup.val() == "") {\n    //            $("#divBPGroup").css("visibility", "visible");\n    //        }\n    //        else {\n    //            $("#divBPGroup").css("visibility", "collapse ");\n    //        }\n    //    });\n\n    //    $txtAddress.on("focusout", function () {\n\n    //        if (txtLoc.getValue() <= 0) {\n    //            $("#divAddressValidate_" + windowNo).css("visibility", "visible");\n    //        }\n    //        else {\n    //            $("#divAddressValidate_" + windowNo).css("visibility", "collapse ");\n    //        }\n    //    });\n    //    $btnAddress.on("focusout", function () {\n\n    //        if (txtLoc.getValue() <= 0) {\n    //            $("#divAddressValidate_" + windowNo).css("visibility", "visible");\n    //        }\n    //        else {\n    //            $("#divAddressValidate_" + windowNo).css("visibility", "collapse ");\n    //        }\n    //    });\n    //    $txtContact.on("focusout", function () {\n\n    //        if ($txtContact.val() == "") {\n    //            $("#divContact_" + windowNo).css("visibility", "visible");\n    //        }\n    //        else {\n    //            $("#divContact_" + windowNo).css("visibility", "collapse");\n    //        }\n    //    });\n    //    return $bpartnerroot;\n    //};\n\n    function HtmlTable(windowNo, BPartnerID, BPtype, dd, greeting, bpgroup, bplocation, bprelation) {\n      //var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'><tr><td><div style=\'margin-top: 0px; float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divSearchKey\' style=\'color:red;visibility:collapse\'>*</div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right:5px;width:95%\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divName\' style=\'color:red;visibility:collapse\'>*</div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name2") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%\' class=\'wsp-BPartner\'><input id=\'txtName2_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></td><td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px;width: 95%\' class=\'wsp-BPartner\'><select id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select>"\n      //var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'> <tr> <td ><div style=\'margin-top: 0px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPType") + "</div></td><td style=\'border: 1px solid #bdbdbd;border-right: 1px white;\'><div style=\'float:left;margin-right: 15px;margin-bottom: 2px;\'>  <input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "  </div> <div style=\'float:right;margin-right: 15px;margin-bottom: 2px;\'> <input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + "  </div></td>  <td style=\'border: 1px solid #bdbdbd;border-left: 1px white;border-right: 1px white;width:50px\'></td> <td style=\'border: 1px solid #bdbdbd;border-left: 1px white;border-right: 1px white;margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'></div></td><td ><div style=\'float:right;margin-right: 15px;/* margin-bottom: 2px; */border: 1px solid #bdbdbd;      border-left: 1px white;width: 288px;height: 25px;\'>  </div></td></tr>" +\n      //        var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'> <tr> <td ><div style=\'margin-top: 0px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPType") + "</div></td><td  colspan=\'4\' ><div style=\'float:left;margin-right: 15px;margin-bottom: 2px;border: 1px solid #bdbdbd;width:98%;height: 35px;margin-left: 5px;\'> <div style=\'float:left;margin-left:100px;margin-top: 5px;\'> <input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "</div> <div style=\'float:left;margin-left:150px;margin-top: 5px;\'> <input id=\'chkProspect_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Prospect") + "</div> <div style=\'float:left;margin-left: 200px;margin-top: 5px;\'>  <input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + " </div>  </div></td>  </tr>" +\n      //            "<tr><td><div style=\'margin-top: 0px; float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input class=\'vis-gc-vpanel-table-mandatory\'  id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divSearchKey\' style=\'color:red;visibility:collapse\'>*</div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right:5px;width:95%\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divName\' style=\'color:red;visibility:collapse\'>*</div></td>  <td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px;width: 95%\' class=\'wsp-BPartner\'><select class=\'vis-gc-vpanel-table-mandatory\' id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select></div> <div id=\'divBPGroup\' style=\'color:red;visibility:collapse\'>*</div></td></tr>"\n      //+ "<tr>"\n      //+ "<td>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPRelation") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div style=\'width:95%\' class=\'wsp-BPartner\'>"\n      //  + "<select style=\'width:100%\' id=\'ddlBPRelation_" + windowNo + "\' >"\n\n      //      + bprelation\n      //  + "</select>"\n      //+ "</div>"\n      //+ "</td> <td style=\'width:50px\'></td>"\n      //+ "<td style=\'margin-left:10px\'>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPLocation") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n      //  + "<select id=\'ddlBPLoaction_" + windowNo + "\' style=\'width:100%\'>"\n      //  + "</select>"\n      //+ "</div>"\n      //+ "</td>"\n      //+ "</tr>"\n      //+ "<tr>"\n      //+ "<td>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Contact") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div style=\'width:95%;float:left\' class=\'wsp-BPartner\'>"\n      //  + "<input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtContact_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n      //+ "</div><div id=\'divContact_" + windowNo + "\' style=\'color:red;visibility:collapse\'>*</div>"\n      //+ "</td> <td style=\'width:50px\'></td>"\n      //+ "<td style=\'margin-left:10px\'>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n      //  + "<select id=\'ddlGreeting_" + windowNo + "\' style=\'width: 100%\'>"\n      //    + greeting\n      //  + "</select>"\n      //+ "</div>"\n      //+ "</td>"\n      //+ "</tr>"\n      //+ "<tr>"\n      //+ "<td>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Title") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div style=\'width:95%\' class=\'wsp-BPartner\'>"\n      //  + "<input id=\'txtTitle_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n      //+ "</div>"\n      //+ "</td> <td style=\'width:50px\'></td>"\n      //+ "<td style=\'margin-left:10px\'>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("EmailAddress") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n      //  + "<input id=\'txtEmail_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n      //+ "</div>"\n      //+ "</td>"\n      //+ "</tr>"\n      //+ "<tr>"\n      //+ "<td>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Address") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'><div style=\'width:95%;float:left\' id=\'divAddress_" + windowNo + "\' class=\'wsp-BPartner\' ></div> <div id=\'divAddressValidate_" + windowNo + "\' style=\'color:red;visibility:collapse\'>*</div></td> <td style=\'width:50px\'></td>"\n      //+ "<td style=\'margin-left:10px\'>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Phone") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n      //  + "<input id=\'txtPhone_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n      //+ "</div>"\n      //+ "</td>"\n      //+ "</tr>"\n      //+ "<tr>"\n      //+ "<td>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("2ndPhone") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\'>"\n      //+ "<div class=\'wsp-BPartner\' style=\'width:95%;\'>"\n      //  + "<input id=\'txtPhone2_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n      //+ "</div>"\n      //+ "</td> <td style=\'width:50px\'></td>"\n      //+ "<td style=\'margin-left:10px\'>"\n      //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Fax") + "  </div>"\n      //+ "</td>"\n      //+ "<td style=\'width:300px\' >"\n      //+ "<div style=\'margin-bottom:7px;margin-right: 5px;width:95%\' class=\'wsp-BPartner\' >"\n      //  + "<input id=\'txtFax_" + windowNo + "\' style=\'height: 25px;width:100%;\' type=\'text\'>"\n      //+ "</div>"\n      //+ "</td>"\n      //+ "</tr>"\n      //+ "</table>");\n\n      var $bpartnerroot = $("<DIV class=\'vis-MainDivBPartnerPopUp\'>" + "<DIV class=\'vis-DivBPartnerLeft\' >" + "<DIV class=\'vis-FirstDivBPartnerPopUp\' > </DIV>" + "" + Splliter("50%", "Phone Number", 5) + Splliter("50%", "Internet", 100) + "<DIV class=\'vis-SecondDivBPartnerPopUp\'> </DIV>" + "" + Splliter("100%", "Address", 5) + "<DIV class=\'vis-ThirdDivBPartnerPopUp\'> </DIV> </DIV>" +\n      //"<DIV class=\'vis-DivBPartnerRight\' > </DIV>" +\n      "<DIV class=\'vis-FourthDivBPartnerPopUp\'> </DIV> " + "</DIV>");\n      $bpartnerroot.find(".vis-FirstDivBPartnerPopUp").append("<DIV class=\'vis-FirstDivCotrol\' ></DIV>");\n      $bpartnerroot.find(".vis-FirstDivBPartnerPopUp").append("<DIV class=\'vis-DivBPartnerRight\' > </DIV>");\n      $bpartnerroot.find(".vis-SecondDivBPartnerPopUp").append("<DIV class=\'vis-SecondDivCotrol\' ></DIV> ");\n      $bpartnerroot.find(".vis-SecondDivBPartnerPopUp").append("<DIV class=\'vis-SecondDivImgCotrol\'></DIV> ");\n      $bpartnerroot.find(".vis-ThirdDivBPartnerPopUp").append("<DIV class=\'vis-ThirdDivCotrol\' ></DIV>");\n      $bpartnerroot.find(".vis-FourthDivBPartnerPopUp").append("<DIV class=\'vis-FourthDivHeader\' > " + VIS.Msg.getMsg("BPType") + " </DIV> <DIV class=\'vis-FourthDivControl\'></DIV>");\n      $bpartnerroot.find(".vis-DivBPartnerRight").append("<div class=\'image-upload\' style=\'float: right; position: absolute; z-index: 999; top:40px;overflow:hidden;right:20px\'><label for=\'file-input\' class=\'vis-file-label-bp\'><span style=\'margin-right:8px\' class=\'vis-change-picture-ico vis vis-pencil\'></span></label><input type=\'file\' id=\'VISFileDialog_" + windowNo + "\' accept=\'image/*\' class=\'wsp-file-input\' value=\'Add Pic\' style=\'opacity: 0; width: 100%; margin-top: 0px; float: right; z-index: 999; position: absolute; right: 0px; cursor: pointer;\'></div>");\n      $bpartnerroot.find(".vis-DivBPartnerRight").append("<DIV class=\'vis-FirstDivImgCotrol\'></DIV>");\n      // $bpartnerroot.find(".vis-DivBPartnerRight").append("<DIV class=\'vis-SecondDivImgCotrol\'></DIV>");\n      $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("SearchKeyValue") + "  </div> <div class=\'vis-all-control\'><input class=\'vis-gc-vpanel-table-mandatory\'  id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></DIV>");\n      $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Greeting") + "  </div> <div class=\'vis-all-control\'><select id=\'ddlGreeting_" + windowNo + "\' style=\'width: 100%\'>" + greeting + "</select></div></DIV>");\n      $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("ContactName") + "  </div> <div class=\'vis-all-control\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtContact_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n      $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("CompanyName") + "  </div> <div class=\'vis-all-control\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n      $bpartnerroot.find(".vis-FirstDivCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("BusinessPartnerGroup") + "  </div> <div class=\'vis-all-control\'><select class=\'vis-gc-vpanel-table-mandatory\' id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select> </div></DIV>");\n      //$bpartnerroot.find(".vis-FirstDivImgCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\' >  <div style=\'float: left;width:320px;height:150px;line-height: 236px;background: none repeat scroll 0% 0% #EEE;padding:0px;text-align:center\' ><img id=\'imgBPartner_" + windowNo + "\' /></div>  <div style=\'float: left;width:100%;height:20%;padding:2px\' >   <button  id=\'VISBPartenrImg_" + windowNo + "\' class=\'VIS-open-icon\'></button>" +\n      //                "<input type=\'file\' id=\'VISFileDialog_" + windowNo + "\' accept=\'image/*\' style=\'display:none\'></div></DIV>");\n\n      $bpartnerroot.find(".vis-FirstDivImgCotrol").append("<DIV class=\'vis-FirstDivCotrolChild\' >  <div style=\'float: left;width:100%;height:242px;line-height:236px;background: none repeat scroll 0% 0% #EEE;padding:0px;text-align:center;margin-top:20px\' ><img id=\'imgBPartner_" + windowNo + "\' /></div> ");\n      $bpartnerroot.find(".vis-SecondDivCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Phone") + "  </div> <div class=\'vis-all-control\'><input id=\'txtPhone_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></DIV>");\n      $bpartnerroot.find(".vis-SecondDivCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Mobile") + "  </div> <div class=\'vis-all-control\'><input id=\'txtMobile_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></DIV>");\n      $bpartnerroot.find(".vis-SecondDivCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Fax") + "  </div> <div class=\'vis-all-control\'><input id=\'txtFax_" + windowNo + "\' style=\'height: 25px;width:100%;\' type=\'text\'> </div></DIV>");\n      $bpartnerroot.find(".vis-SecondDivImgCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\' > <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("EmailAddress") + "  </div> <div class=\'vis-all-control\'><input id=\'txtEmail_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n      $bpartnerroot.find(".vis-SecondDivImgCotrol").append("<DIV class=\'vis-SecondDivCotrolChild\' > <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("WebUrl") + "  </div> <div class=\'vis-all-control\'><input id=\'txtWebUrl_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'> </div></DIV>");\n      $bpartnerroot.find(".vis-ThirdDivCotrol").append("<DIV class=\'vis-ThirdDivCotrolChild\'> <div class=\'vis-all-lable\'>" + VIS.Msg.getMsg("Address") + "  </div> <div id=\'divAddress_" + windowNo + "\' class=\'vis-all-control\'></div></DIV>");\n      $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:25%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "</div></DIV>");\n      $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:25%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + " </div></DIV>");\n      $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:25%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkProspect_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Prospect") + "</div></DIV>");\n      $bpartnerroot.find(".vis-FourthDivControl").append("<DIV style=\'float: left;width:25%\'> <div style=\'float: left;width:100%\' class=\'wsp-BPartner\'><input id=\'chkEmployee_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Employee") + "</div></DIV>");\n      var $div = $bpartnerroot.find("#divAddress_" + windowNo);\n      $selectBPRelation = $bpartnerroot.find("#ddlBPRelation_" + windowNo);\n      $selectBPLocation = $bpartnerroot.find("#ddlBPLoaction_" + windowNo);\n      $selectBPGroup = $bpartnerroot.find("#ddlBPGroup_" + windowNo);\n      $txtName = $bpartnerroot.find("#txtName_" + windowNo);\n      $txtSearchKey = $bpartnerroot.find("#txtSearchKey_" + windowNo);\n      $txtGreeting1 = $bpartnerroot.find("#ddlGreeting1_" + windowNo);\n      $txtName2 = $bpartnerroot.find("#txtName2_" + windowNo);\n      $txtContact = $bpartnerroot.find("#txtContact_" + windowNo);\n      $txtGreeting = $bpartnerroot.find("#ddlGreeting_" + windowNo);\n      $txtTitle = $bpartnerroot.find("#txtTitle_" + windowNo);\n      $txtEmail = $bpartnerroot.find("#txtEmail_" + windowNo);\n      $txtPhone = $bpartnerroot.find("#txtPhone_" + windowNo);\n      $txtPhone2 = $bpartnerroot.find("#txtPhone2_" + windowNo);\n      $txtFax = $bpartnerroot.find("#txtFax_" + windowNo);\n      $chkCustomer = $bpartnerroot.find("#chkCustomer_" + windowNo);\n      $chkVendor = $bpartnerroot.find("#chkVendor_" + windowNo);\n      $chkProspect = $bpartnerroot.find("#chkProspect_" + windowNo);\n      $chkEmployee = $bpartnerroot.find("#chkEmployee_" + windowNo);\n      txtLoc.setValue(dd.location);\n      //btnUpload = $bpartnerroot.find("#VISBPartenrImg_" + windowNo);\n      fileDialog = $bpartnerroot.find("#VISFileDialog_" + windowNo);\n      imgBPartner = $bpartnerroot.find("#imgBPartner_" + windowNo);\n      txtMobile = $bpartnerroot.find("#txtMobile_" + windowNo);\n      txtWebUrl = $bpartnerroot.find("#txtWebUrl_" + windowNo);\n      Events();\n      if (BPartnerID > 0) {\n        //$bpartnerroot.find("#ddlBPRelation_" + windowNo).val(dd.bpRelationID);\n        //$bpartnerroot.find("#ddlBPGroup_" + windowNo).val(dd.bpGroupID);\n        //$bpartnerroot.find("#ddlBPLoaction_" + windowNo).val(dd.bpLocationID);\n\n        //$bpartnerroot.find("#txtName_" + windowNo).val(dd.name);\n        //$bpartnerroot.find("#txtSearchKey_" + windowNo).val(dd.searchKey);\n        //$bpartnerroot.find("#ddlGreeting1_" + windowNo).val();\n        //$bpartnerroot.find("#txtName2_" + windowNo).val(dd.name2);\n\n        //$bpartnerroot.find("#txtContact_" + windowNo).val(dd.contact);\n        //$bpartnerroot.find("#ddlGreeting_" + windowNo).val();\n        //$bpartnerroot.find("#txtTitle_" + windowNo).val(dd.title);\n        //$bpartnerroot.find("#txtEmail_" + windowNo).val(dd.email);\n        ////txtLoc.getValue();\n        //$bpartnerroot.find("#txtPhone_" + windowNo).val(dd.phoneNo);\n        //$bpartnerroot.find("#txtPhone2_" + windowNo).val(dd.phoneNo2);\n        //$bpartnerroot.find("#txtFax_" + windowNo).val(dd.fax);\n        //$bpartnerroot.find("#ddlGreeting1_" + windowNo).val(dd.greeting);\n        //$bpartnerroot.find("#ddlGreeting_" + windowNo).val(dd.greeting1);\n        //$bpartnerroot.find("#txtTitle_" + windowNo).val(dd.title);\n\n        $selectBPRelation.val(dd.bpRelationID);\n        $selectBPGroup.val(dd.bpGroupID);\n        $selectBPLocation.val(dd.bpLocationID);\n        $txtName.val(VIS.Utility.decodeText(dd.name));\n        $txtSearchKey.val(VIS.Utility.decodeText(dd.searchKey));\n        $txtGreeting1.val();\n        $txtName2.val(VIS.Utility.decodeText(dd.name2));\n        imgBPartner.removeAttr("src").attr("src", dd.userImage);\n        $txtContact.val(VIS.Utility.decodeText(dd.contact));\n        $txtGreeting.val();\n        $txtTitle.val(VIS.Utility.decodeText(dd.title));\n        $txtEmail.val(VIS.Utility.decodeText(dd.email));\n        //txtLoc.getValue();\n        $txtPhone.val(VIS.Utility.decodeText(dd.phoneNo));\n        $txtPhone2.val(VIS.Utility.decodeText(dd.phoneNo2));\n        $txtFax.val(VIS.Utility.decodeText(dd.fax));\n        $txtGreeting.val(dd.greeting);\n        $txtGreeting1.val(dd.greeting1);\n        txtLoc.setValue(dd.location);\n        txtMobile.val(dd.mobile);\n        txtWebUrl.val(dd.WebUrl);\n        if (dd.isCustomer) {\n          $chkCustomer.attr("checked", "checked");\n        }\n        if (dd.isVendor) {\n          $chkVendor.attr("checked", "checked");\n        }\n        if (dd.isEmployee) {\n          $chkEmployee.attr("checked", "checked");\n        }\n        // VIS0060\n        OnSelectionChangeEvent(VIS.Utility.Util.getValueOfInt($selectBPRelation.val()), windowNo, dd.bpLocationID);\n      } else if (BPRelationID > 0 && BPGroupID > 0) {\n        $bpartnerroot.find("#ddlBPRelation_" + windowNo).val(BPRelationID);\n        $bpartnerroot.find("#ddlBPGroup_" + windowNo).val(BPGroupID);\n        // VIS0060\n        OnSelectionChangeEvent(VIS.Utility.Util.getValueOfInt($selectBPRelation.val()), windowNo, dd.bpLocationID);\n      }\n      txtLoc.getBtn(0).css("width", "10%");\n      txtLoc.getBtn(0).css("height", "30px");\n      txtLoc.getBtn(0).css("padding", "0px");\n      //txtLoc.getBtn(0).css("border-radius", "none");\n      txtLoc.getBtn(1).css("width", "10%");\n      txtLoc.getBtn(1).css("height", "30px");\n      txtLoc.getBtn(1).css("padding", "0px");\n      //txtLoc.getBtn(1).css("border-radius", "none");\n      $div.append(txtLoc.getControl().css("width", "80%")).append(txtLoc.getBtn(0)).append(txtLoc.getBtn(1));\n      $txtAddress = $bpartnerroot.find("#divAddress_" + windowNo).find("Input");\n      $btnAddress = $bpartnerroot.find("#divAddress_" + windowNo).find("Button").eq(1);\n      SaveBPartner(windowNo, BPtype, BPartnerID);\n      $selectBPRelation.on("change", function () {\n        // VIS0060\n        OnSelectionChangeEvent(VIS.Utility.Util.getValueOfInt($selectBPRelation.val()), windowNo);\n      });\n      $txtSearchKey.on("focusout", function () {\n        if ($txtSearchKey.val() == "") {\n          $("#divSearchKey").css("visibility", "visible");\n        } else {\n          $("#divSearchKey").css("visibility", "collapse ");\n        }\n      });\n      $txtName.on("focusout", function () {\n        if ($txtName.val() == "") {\n          $("#divName").css("visibility", "visible");\n        } else {\n          $("#divName").css("visibility", "collapse");\n        }\n      });\n      $selectBPGroup.on("focusout", function () {\n        if ($selectBPGroup.val() == "0" || $selectBPGroup.val() == "") {\n          $("#divBPGroup").css("visibility", "visible");\n        } else {\n          $("#divBPGroup").css("visibility", "collapse ");\n        }\n      });\n      $txtAddress.on("focusout", function () {\n        if (txtLoc.getValue() <= 0) {\n          $("#divAddressValidate_" + windowNo).css("visibility", "visible");\n        } else {\n          $("#divAddressValidate_" + windowNo).css("visibility", "collapse ");\n        }\n      });\n      $btnAddress.on("focusout", function () {\n        if (txtLoc.getValue() <= 0) {\n          $("#divAddressValidate_" + windowNo).css("visibility", "visible");\n        } else {\n          $("#divAddressValidate_" + windowNo).css("visibility", "collapse ");\n        }\n      });\n      $txtContact.on("focusout", function () {\n        if ($txtContact.val() == "") {\n          $("#divContact_" + windowNo).css("visibility", "visible");\n        } else {\n          $("#divContact_" + windowNo).css("visibility", "collapse");\n        }\n      });\n      return $bpartnerroot;\n    }\n    ;\n    function Splliter(width, text, marginleft) {\n      var splliter = "<DIV class=\'vis-BPsplitter\' style=\'width:" + width + "\'><span style=\'background-color: white; position: relative;top: -0.8em;margin-left: " + marginleft + "px;\'> " + text + " </span></DIV>";\n      return splliter;\n    }\n    ;\n    function Events() {\n      //if (btnUpload != null) {\n      //    btnUpload.on("click", function () {\n      //fileDialog.off(\'click\');\n      //fileDialog.trigger(\'click\');\n      fileDialog.on(\'change\', function (evt) {\n        fileKey = Date.now().toString();\n        var xhr = new XMLHttpRequest();\n        var fd = new FormData();\n        // var fileUploadFile = $("#wsp-file-input_" + self.windowNo);\n\n        fd.append("file", fileDialog[0].files[0]);\n        fd.append("fileKey", fileKey);\n        //if ((fileDialog[0].files[0].size / kbSize) > maxSize) {\n        //    alert(VIS.Msg.getMsg("UploadedFileSizeLimit"));\n        //    $fileUpload.replaceWith($fileUpload.val(\'\').clone(true));\n        //    $isBusy.hide();\n        //    return;\n        //}\n\n        xhr.open("POST", VIS.Application.contextUrl + "BPartner/SaveImageAsByte", true);\n        xhr.setRequestHeader("Cache-Control", "no-cache");\n        xhr.setRequestHeader("Pragma", "no-cache");\n        xhr.send(fd);\n        xhr.addEventListener("load", function (event) {\n          var dd = event.target.response;\n          var res = JSON.parse(dd);\n          var image = JSON.parse(res);\n          imgBPartner.removeAttr("src").attr("src", "data:image/jpg;base64," + image[0]);\n          imageName = image[1];\n        }, false);\n        //  fileDialog.val("");\n      });\n      //});\n      // }\n    }\n    ;\n    function dispose() {\n      $txtSearchKey.off("focusout");\n      $txtName.off("focusout");\n      $selectBPGroup.off("focusout");\n      $txtAddress.off("focusout");\n      $btnAddress.off("focusout");\n      $txtContact.off("focusout");\n      txtLoc.dispose();\n      txtLoc = null;\n      $txtName = null;\n      $txtName2 = null;\n      $txtAddress = null;\n      $txtContact = null;\n      $txtEmail = null;\n      $txtFax = null;\n      $txtGreeting = null;\n      $txtGreeting1 = null;\n      $txtPhone = null;\n      $txtPhone2 = null;\n      $txtSearchKey = null;\n      $txtTitle = null;\n      BPtype = null;\n      $addBPartnerRoot.remove();\n      $addBPartnerRoot.empty();\n    }\n    ;\n    function OpenDialogPopup(root, windowNo, BPartnerID, BPtype) {\n      addBPartnerDialog = new VIS.ChildDialog();\n      addBPartnerDialog.setContent(root);\n      addBPartnerDialog.onClose = function () {\n        dispose();\n      };\n      var windowWidth = $(window).width();\n      if (windowWidth >= 1366) {\n        addBPartnerDialog.setHeight(620);\n        addBPartnerDialog.setWidth(870);\n      } else {\n        addBPartnerDialog.setHeight(520);\n        addBPartnerDialog.setWidth(670);\n      }\n      addBPartnerDialog.setTitle(VIS.Msg.getMsg("BusinessPartner"));\n      addBPartnerDialog.setEnableResize(false);\n      addBPartnerDialog.setModal(true);\n      addBPartnerDialog.show();\n      addBPartnerDialog.getRoot().dialog({\n        position: [200, 130]\n      });\n    }\n    ;\n    function SaveBPartner(windowNo, category, BPartnerID) {\n      addBPartnerDialog.onOkClick = function (e) {\n        // addBPartnerDialog.dialog("open");\n\n        if ($isBusy != null) {\n          $isBusy.show();\n          var h = $(window).height() * (50 / 100);\n          var w = $(window).width() * (50 / 100);\n        } else {\n          $(".vis-apanel-busy").css("visibility", "visible");\n        }\n        ddlAddress = txtLoc.getValue();\n        if ($txtSearchKey.val().trim() == "") {\n          //alert(VIS.Msg.getMsg("SearchkeyMandatory"));\n          VIS.ADialog.info("SearchKeyMandatory");\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          return false;\n        }\n        if ($txtName.val().trim() == "") {\n          //alert(VIS.Msg.getMsg("NameMandatory"));\n          VIS.ADialog.info("NameMandatory");\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          return false;\n        }\n\n        //if (ddlBPGroup.trim() == "0") {\n        if ($selectBPGroup.val().trim() == "0") {\n          //alert(VIS.Msg.getMsg("BPGroupMandatory"));\n          VIS.ADialog.info("BPGroupMandatory");\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          return false;\n        }\n        //if (txtContact.trim() == "") {\n        if ($txtContact.val().trim() == "") {\n          //alert(VIS.Msg.getMsg("ContactMandatory"));\n          VIS.ADialog.info("ContactMandatory");\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          return false;\n        }\n        if (ddlAddress <= 0 || ddlAddress == null) {\n          //alert(VIS.Msg.getMsg("AddressMandatory"));\n          VIS.ADialog.info("AddressMandatory");\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          return false;\n        }\n        if ($chkCustomer.is(":checked") == false && $chkVendor.is(":checked") == false && $chkProspect.is(":checked") == false && $chkEmployee.is(":checked") == false) {\n          alert(VIS.Msg.getMsg("PleaseSelectBusinessType"));\n          if ($isBusy != null) {\n            $isBusy.hide();\n          }\n          $(".vis-apanel-busy").css("visibility", "hidden");\n          return false;\n        }\n        //if ($selectBPRelation.val() > 0 && $selectBPLocation.val() <= 0) {\n        //    alert(VIS.Msg.getMsg("LocationMandatory"));\n        //    if ($isBusy != null) {\n        //        $isBusy.hide();\n        //    }\n        //    $(".vis-apanel-busy").css("visibility", "hidden");\n        //    return false;\n        //}\n        var BPtype = null;\n\n        //if (category == "Customer") {\n        //    BPtype = VIS.Msg.getMsg("Customer");\n        //}\n        //else if (category == "Employee") {\n        //    BPtype = VIS.Msg.getMsg("Employee");\n        //}\n        //else if (category == "Vendor") {\n        //    BPtype = VIS.Msg.getMsg("Vendor");\n        //}\n        //else if (category == "Prospect") {\n        //    BPtype = VIS.Msg.getMsg("Prospect");\n        //}\n        BPtype = category;\n        url = VIS.Application.contextUrl + "BPartner/AddBPartnerInfo";\n        var searchKey = $txtSearchKey.val();\n        var name = $txtName.val();\n        var name2 = $txtName.val();\n        var greeting = $txtGreeting.val();\n        var bpgroup = $selectBPGroup.val();\n        var bprelation = $selectBPRelation.val();\n        var bploaction = $selectBPLocation.val();\n        var contact = $txtContact.val();\n        var greeting1 = $txtGreeting1.val();\n        var title = $txtTitle.val();\n        var email = $txtEmail.val();\n        var phone = $txtPhone.val();\n        var phone2 = $txtPhone.val();\n        var fax = $txtFax.val();\n        var isCustomer = $chkCustomer.is(":checked");\n        var isVendor = $chkVendor.is(":checked");\n        var isProspect = $chkProspect.is(":checked");\n        var isEmployee = $chkEmployee.is(":checked");\n        var uMobile = txtMobile.val();\n        var weburl = txtWebUrl.val();\n        window.setTimeout(function () {\n          $.ajax({\n            type: "Post",\n            async: false,\n            url: url,\n            dataType: "json",\n            data: {\n              C_BPartner_ID: BPartnerID,\n              searchKey: searchKey,\n              name: name,\n              name2: name2,\n              greeting: greeting,\n              bpGroup: bpgroup,\n              bpRelation: bprelation,\n              bpLocation: bploaction,\n              contact: contact,\n              greeting1: greeting,\n              title: title,\n              email: email,\n              address: ddlAddress,\n              phoneNo: phone,\n              phoneNo2: phone2,\n              fax: fax,\n              windowNo: windowNo,\n              BPtype: BPtype,\n              isCustomer: isCustomer,\n              isVendor: isVendor,\n              isProspect: isProspect,\n              fileName: imageName,\n              mobile: uMobile,\n              webUrl: weburl,\n              isEmployee: isEmployee\n            },\n            success: function (data) {\n              //alert(data);                            \n              //VIS.ADialog.info(JSON.parse(data));\n\n              VIS.ADialog.info("", "", JSON.parse(data));\n              if ($isBusy != null) {\n                $isBusy.hide();\n              }\n              $(".vis-apanel-busy").css("visibility", "hidden");\n            }\n          });\n        }, 2);\n      };\n    }\n    ;\n    function OnSelectionChangeEvent(relationID, windowNo, bpLocationID) {\n      var result = null;\n      var bplocation = "";\n      url = VIS.Application.contextUrl + "BPartner/GetBPLocation?WinNo=" + windowNo + "&bpartnerID=" + relationID;\n      $.ajax({\n        type: "GET",\n        async: false,\n        url: url,\n        dataType: "json",\n        success: function (data) {\n          result = JSON.parse(data);\n          for (var i = 0; i < result.lstBPLocation.length; i++) {\n            bplocation += "<option value=\'" + result.lstBPLocation[i].ID + "\'>" + VIS.Utility.encodeText(result.lstBPLocation[i].Name) + "</option>";\n          }\n          $selectBPLocation.empty();\n          $selectBPLocation.append(bplocation);\n          $selectBPLocation.val(bpLocationID);\n        }\n      });\n    }\n    ;\n    InitBP(windowNo, BPartnerID, BPtype);\n  };\n\n  //    function HtmlTable(windowNo, BPartnerID, BPtype, dd, greeting, bpgroup, bplocation, bprelation) {\n\n  //        //var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'><tr><td><div style=\'margin-top: 0px; float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divSearchKey\' style=\'color:red;visibility:collapse\'>*</div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right:5px;width:95%\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divName\' style=\'color:red;visibility:collapse\'>*</div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name2") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%\' class=\'wsp-BPartner\'><input id=\'txtName2_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div></td><td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px;width: 95%\' class=\'wsp-BPartner\'><select id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select>"\n  //        //var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'> <tr> <td ><div style=\'margin-top: 0px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPType") + "</div></td><td style=\'border: 1px solid #bdbdbd;border-right: 1px white;\'><div style=\'float:left;margin-right: 15px;margin-bottom: 2px;\'>  <input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "  </div> <div style=\'float:right;margin-right: 15px;margin-bottom: 2px;\'> <input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + "  </div></td>  <td style=\'border: 1px solid #bdbdbd;border-left: 1px white;border-right: 1px white;width:50px\'></td> <td style=\'border: 1px solid #bdbdbd;border-left: 1px white;border-right: 1px white;margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'></div></td><td ><div style=\'float:right;margin-right: 15px;/* margin-bottom: 2px; */border: 1px solid #bdbdbd;      border-left: 1px white;width: 288px;height: 25px;\'>  </div></td></tr>" +\n  //        var $bpartnerroot = $("<table id=\'tableBPartner_" + windowNo + "\'> <tr> <td ><div style=\'margin-top: 0px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPType") + "</div></td><td  colspan=\'4\' ><div style=\'float:left;margin-right: 15px;margin-bottom: 2px;border: 1px solid #bdbdbd;width:98%;height: 35px;margin-left: 5px;\'> <div style=\'float:left;margin-left:100px;margin-top: 5px;\'> <input id=\'chkCustomer_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Customer") + "</div> <div style=\'float:left;margin-left:150px;margin-top: 5px;\'> <input id=\'chkProspect_" + windowNo + "\' type=\'checkbox\'> " + VIS.Msg.getMsg("Prospect") + "</div> <div style=\'float:left;margin-left: 200px;margin-top: 5px;\'>  <input id=\'chkVendor_" + windowNo + "\' type=\'checkbox\'>  " + VIS.Msg.getMsg("Vendor") + " </div>  </div></td>  </tr>" +\n  //            "<tr><td><div style=\'margin-top: 0px; float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("SearchKey") + " </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input class=\'vis-gc-vpanel-table-mandatory\'  id=\'txtSearchKey_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divSearchKey\' style=\'color:red;visibility:collapse\'>*</div></td><td style=\'width:50px\'></td> <td style=\'margin-left:10px\'><div style=\'margin-top: 0px; float: left;margin-right: 5px;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right:5px;width:95%\' class=\'wsp-BPartner\'><select id=\'ddlGreeting1_" + windowNo + "\' style=\'width:100%\'>" + greeting + "</select></div></td></tr><tr><td><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Name") + "  </div></td><td style=\'width:300px\'><div style=\'width:95%;float:left\' class=\'wsp-BPartner\'><input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtName_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'></div> <div id=\'divName\' style=\'color:red;visibility:collapse\'>*</div></td>  <td style=\'width:50px\'> </td> <td style=\'margin-left:10px\'><div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPGroup") + "  </div></td><td style=\'width:300px\'><div style=\'margin-right: 5px;width: 95%\' class=\'wsp-BPartner\'><select class=\'vis-gc-vpanel-table-mandatory\' id=\'ddlBPGroup_" + windowNo + "\' style=\'width: 100%;float:left\'>" + bpgroup + "</select></div> <div id=\'divBPGroup\' style=\'color:red;visibility:collapse\'>*</div></td></tr>"\n  //+ "<tr>"\n  //+ "<td>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPRelation") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div style=\'width:95%\' class=\'wsp-BPartner\'>"\n  //  + "<select style=\'width:100%\' id=\'ddlBPRelation_" + windowNo + "\' >"\n\n  //      + bprelation\n  //  + "</select>"\n  //+ "</div>"\n  //+ "</td> <td style=\'width:50px\'></td>"\n  //+ "<td style=\'margin-left:10px\'>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("BPLocation") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n  //  + "<select id=\'ddlBPLoaction_" + windowNo + "\' style=\'width:100%\'>"\n  //  + "</select>"\n  //+ "</div>"\n  //+ "</td>"\n  //+ "</tr>"\n  //+ "<tr>"\n  //+ "<td>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Contact") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div style=\'width:95%;float:left\' class=\'wsp-BPartner\'>"\n  //  + "<input class=\'vis-gc-vpanel-table-mandatory\' id=\'txtContact_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n  //+ "</div><div id=\'divContact_" + windowNo + "\' style=\'color:red;visibility:collapse\'>*</div>"\n  //+ "</td> <td style=\'width:50px\'></td>"\n  //+ "<td style=\'margin-left:10px\'>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Greeting") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n  //  + "<select id=\'ddlGreeting_" + windowNo + "\' style=\'width: 100%\'>"\n  //    + greeting\n  //  + "</select>"\n  //+ "</div>"\n  //+ "</td>"\n  //+ "</tr>"\n  //+ "<tr>"\n  //+ "<td>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Title") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div style=\'width:95%\' class=\'wsp-BPartner\'>"\n  //  + "<input id=\'txtTitle_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n  //+ "</div>"\n  //+ "</td> <td style=\'width:50px\'></td>"\n  //+ "<td style=\'margin-left:10px\'>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("EmailAddress") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n  //  + "<input id=\'txtEmail_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n  //+ "</div>"\n  //+ "</td>"\n  //+ "</tr>"\n  //+ "<tr>"\n  //+ "<td>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Address") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'><div style=\'width:95%;float:left\' id=\'divAddress_" + windowNo + "\' class=\'wsp-BPartner\' ></div> <div id=\'divAddressValidate_" + windowNo + "\' style=\'color:red;visibility:collapse\'>*</div></td> <td style=\'width:50px\'></td>"\n  //+ "<td style=\'margin-left:10px\'>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Phone") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div  class=\'wsp-BPartner\' style=\'margin-right: 5px;width:95%\'>"\n  //  + "<input id=\'txtPhone_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n  //+ "</div>"\n  //+ "</td>"\n  //+ "</tr>"\n  //+ "<tr>"\n  //+ "<td>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("2ndPhone") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\'>"\n  //+ "<div class=\'wsp-BPartner\' style=\'width:95%;\'>"\n  //  + "<input id=\'txtPhone2_" + windowNo + "\' style=\'height: 25px;width:100%\' type=\'text\'>"\n  //+ "</div>"\n  //+ "</td> <td style=\'width:50px\'></td>"\n  //+ "<td style=\'margin-left:10px\'>"\n  //+ "<div style=\'float: left;width:125px\' class=\'wsp-BPartner\'>" + VIS.Msg.getMsg("Fax") + "  </div>"\n  //+ "</td>"\n  //+ "<td style=\'width:300px\' >"\n  //+ "<div style=\'margin-bottom:7px;margin-right: 5px;width:95%\' class=\'wsp-BPartner\' >"\n  //  + "<input id=\'txtFax_" + windowNo + "\' style=\'height: 25px;width:100%;\' type=\'text\'>"\n  //+ "</div>"\n  //+ "</td>"\n  //+ "</tr>"\n  //+ "</table>");\n  //        var $div = $bpartnerroot.find("#divAddress_" + windowNo);\n  //        $selectBPRelation = $bpartnerroot.find("#ddlBPRelation_" + windowNo);\n  //        $selectBPLocation = $bpartnerroot.find("#ddlBPLoaction_" + windowNo);\n  //        $selectBPGroup = $bpartnerroot.find("#ddlBPGroup_" + windowNo);\n  //        $txtName = $bpartnerroot.find("#txtName_" + windowNo);\n  //        $txtSearchKey = $bpartnerroot.find("#txtSearchKey_" + windowNo);\n  //        $txtGreeting1 = $bpartnerroot.find("#ddlGreeting1_" + windowNo);\n  //        $txtName2 = $bpartnerroot.find("#txtName2_" + windowNo);\n\n  //        $txtContact = $bpartnerroot.find("#txtContact_" + windowNo);\n  //        $txtGreeting = $bpartnerroot.find("#ddlGreeting_" + windowNo);\n  //        $txtTitle = $bpartnerroot.find("#txtTitle_" + windowNo);\n  //        $txtEmail = $bpartnerroot.find("#txtEmail_" + windowNo);\n\n  //        $txtPhone = $bpartnerroot.find("#txtPhone_" + windowNo);\n  //        $txtPhone2 = $bpartnerroot.find("#txtPhone2_" + windowNo);\n  //        $txtFax = $bpartnerroot.find("#txtFax_" + windowNo);\n  //        $chkCustomer = $bpartnerroot.find("#chkCustomer_" + windowNo);\n  //        $chkVendor = $bpartnerroot.find("#chkVendor_" + windowNo);\n  //        $chkProspect = $bpartnerroot.find("#chkProspect_" + windowNo);\n  //        txtLoc.setValue(dd.location);\n  //        if (BPartnerID > 0) {\n  //            //$bpartnerroot.find("#ddlBPRelation_" + windowNo).val(dd.bpRelationID);\n  //            //$bpartnerroot.find("#ddlBPGroup_" + windowNo).val(dd.bpGroupID);\n  //            //$bpartnerroot.find("#ddlBPLoaction_" + windowNo).val(dd.bpLocationID);\n\n  //            //$bpartnerroot.find("#txtName_" + windowNo).val(dd.name);\n  //            //$bpartnerroot.find("#txtSearchKey_" + windowNo).val(dd.searchKey);\n  //            //$bpartnerroot.find("#ddlGreeting1_" + windowNo).val();\n  //            //$bpartnerroot.find("#txtName2_" + windowNo).val(dd.name2);\n\n  //            //$bpartnerroot.find("#txtContact_" + windowNo).val(dd.contact);\n  //            //$bpartnerroot.find("#ddlGreeting_" + windowNo).val();\n  //            //$bpartnerroot.find("#txtTitle_" + windowNo).val(dd.title);\n  //            //$bpartnerroot.find("#txtEmail_" + windowNo).val(dd.email);\n  //            ////txtLoc.getValue();\n  //            //$bpartnerroot.find("#txtPhone_" + windowNo).val(dd.phoneNo);\n  //            //$bpartnerroot.find("#txtPhone2_" + windowNo).val(dd.phoneNo2);\n  //            //$bpartnerroot.find("#txtFax_" + windowNo).val(dd.fax);\n  //            //$bpartnerroot.find("#ddlGreeting1_" + windowNo).val(dd.greeting);\n  //            //$bpartnerroot.find("#ddlGreeting_" + windowNo).val(dd.greeting1);\n  //            //$bpartnerroot.find("#txtTitle_" + windowNo).val(dd.title);\n\n  //            $selectBPRelation.val(dd.bpRelationID);\n  //            $selectBPGroup.val(dd.bpGroupID);\n  //            $selectBPLocation.val(dd.bpLocationID);\n\n  //            $txtName.val(VIS.Utility.decodeText(dd.name));\n  //            $txtSearchKey.val(VIS.Utility.decodeText(dd.searchKey));\n  //            $txtGreeting1.val();\n  //            $txtName2.val(VIS.Utility.decodeText(dd.name2));\n\n  //            $txtContact.val(VIS.Utility.decodeText(dd.contact));\n  //            $txtGreeting.val();\n  //            $txtTitle.val(VIS.Utility.decodeText(dd.title));\n  //            $txtEmail.val(VIS.Utility.decodeText(dd.email));\n  //            //txtLoc.getValue();\n  //            $txtPhone.val(VIS.Utility.decodeText(dd.phoneNo));\n  //            $txtPhone2.val(VIS.Utility.decodeText(dd.phoneNo2));\n  //            $txtFax.val(VIS.Utility.decodeText(dd.fax));\n  //            $txtGreeting.val(dd.greeting);\n  //            $txtGreeting1.val(dd.greeting1);\n  //            txtLoc.setValue(dd.location);\n  //            if (dd.isCustomer) {\n  //                $chkCustomer.attr("checked", "checked");\n  //            }\n  //            if (dd.isVendor) {\n  //                $chkVendor.attr("checked", "checked");\n  //            }\n  //            OnSelectionChangeEvent($selectBPRelation.val(), windowNo, dd.bpLocationID);\n  //        }\n  //        else if (BPRelationID > 0 && BPGroupID > 0) {\n  //            $bpartnerroot.find("#ddlBPRelation_" + windowNo).val(BPRelationID);\n  //            $bpartnerroot.find("#ddlBPGroup_" + windowNo).val(BPGroupID);\n  //            OnSelectionChangeEvent($selectBPRelation.val(), windowNo, dd.bpLocationID);\n  //        }\n\n  //        txtLoc.getBtn(0).css("width", "10%");\n  //        txtLoc.getBtn(0).css("height", "30px");\n  //        txtLoc.getBtn(0).css("padding", "0px");\n  //        //txtLoc.getBtn(0).css("border-radius", "none");\n  //        txtLoc.getBtn(1).css("width", "10%");\n  //        txtLoc.getBtn(1).css("height", "30px");\n  //        txtLoc.getBtn(1).css("padding", "0px");\n  //        //txtLoc.getBtn(1).css("border-radius", "none");\n  //        $div.append(txtLoc.getControl().css("width", "80%")).append(txtLoc.getBtn(0)).append(txtLoc.getBtn(1));\n  //        $txtAddress = $bpartnerroot.find("#divAddress_" + windowNo).find("Input");\n  //        $btnAddress = $bpartnerroot.find("#divAddress_" + windowNo).find("Button").eq(1);\n  //        SaveBPartner(windowNo, BPtype, BPartnerID);\n  //        $selectBPRelation.on("change", function () {\n\n  //            OnSelectionChangeEvent($selectBPRelation.val(), windowNo);\n  //        });\n  //        $txtSearchKey.on("focusout", function () {\n\n  //            if ($txtSearchKey.val() == "") {\n  //                $("#divSearchKey").css("visibility", "visible");\n  //            }\n  //            else {\n  //                $("#divSearchKey").css("visibility", "collapse ");\n  //            }\n  //        });\n  //        $txtName.on("focusout", function () {\n\n  //            if ($txtName.val() == "") {\n  //                $("#divName").css("visibility", "visible");\n  //            }\n  //            else {\n  //                $("#divName").css("visibility", "collapse");\n  //            }\n  //        });\n  //        $selectBPGroup.on("focusout", function () {\n\n  //            if ($selectBPGroup.val() == "0" || $selectBPGroup.val() == "") {\n  //                $("#divBPGroup").css("visibility", "visible");\n  //            }\n  //            else {\n  //                $("#divBPGroup").css("visibility", "collapse ");\n  //            }\n  //        });\n\n  //        $txtAddress.on("focusout", function () {\n\n  //            if (txtLoc.getValue() <= 0) {\n  //                $("#divAddressValidate_" + windowNo).css("visibility", "visible");\n  //            }\n  //            else {\n  //                $("#divAddressValidate_" + windowNo).css("visibility", "collapse ");\n  //            }\n  //        });\n  //        $btnAddress.on("focusout", function () {\n\n  //            if (txtLoc.getValue() <= 0) {\n  //                $("#divAddressValidate_" + windowNo).css("visibility", "visible");\n  //            }\n  //            else {\n  //                $("#divAddressValidate_" + windowNo).css("visibility", "collapse ");\n  //            }\n  //        });\n  //        $txtContact.on("focusout", function () {\n\n  //            if ($txtContact.val() == "") {\n  //                $("#divContact_" + windowNo).css("visibility", "visible");\n  //            }\n  //            else {\n  //                $("#divContact_" + windowNo).css("visibility", "collapse");\n  //            }\n  //        });\n  //        return $bpartnerroot;\n  //    };\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/bpartner.js?')},"./Areas/VIS/Scripts/app/Framework/bulkdownload.js":()=>{eval(';\n(function (VIS, $) {\n  //var $record_id, $chat_id, $table_id, $description, $chatclose;\n  function BulkDownload(windowNo, forFile) {\n    this.onClose = null; //outer apanel close function\n\n    var $maindiv = $(\'<div></div>\'); //layout\n    var $div = $(\'<div style="overflow-y:auto;margin-bottom:15px"></div>\');\n    var $createbar = $(\'<p id="forreportcreate"></p>\' + \'<div class="vis-ui-progress-bar hide" id="reportcreate"><div class="progress-bar vis-ui-progress" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div></div><br /><p class="hide" id="reportcreateresult"></p> <div style="margin-bottom: 15px;"></div>\');\n    var $downloadbar = $(\'<p id="forreportdownload" class="hide"></p>\' + \'<div class="vis-ui-progress-bar hide" id="reportdownload"><div class="progress-bar vis-ui-progress" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div></div><br /><p class="hide" id="reportdownloadresult"></p>\');\n    var $bulkbusyDiv = $("<div class=\'vis-apanel-busy\' style=\'width:98%;height:98%;position:absolute\'>");\n    $maindiv.append($bulkbusyDiv).append($createbar).append($downloadbar);\n    this.winNo = windowNo;\n    var bd = null;\n    this.prop = {\n      WindowNo: windowNo\n    };\n    init($div, windowNo, this.prop, forFile);\n    var self = this;\n    this.show = function () {\n      bd = new VIS.ChildDialog();\n      bd.setContent($maindiv);\n      bd.setHeight(450);\n      bd.setWidth(650);\n      bd.setTitle(VIS.Msg.getMsg("Reports"));\n      bd.setModal(true);\n\n      //Disposing Everything on Close\n      bd.onClose = function () {\n        if (self.onClose) self.onClose();\n        self.dispose();\n      };\n      bd.show();\n      events();\n      bd.hidebuttons();\n    };\n    this.onClose = function () {\n      bd.close();\n    };\n    this.setBulkBusy = function (isBusy) {\n      $bulkbusyDiv.css("display", isBusy ? \'block\' : \'none\');\n    };\n    this.dispose = function () {\n      this.prop = null;\n      $div = null;\n      $maindiv = null;\n      bd = null;\n      self = null;\n      this.setBulkBusy(false);\n    };\n    function events() {}\n    ;\n    function init($container, windowNo, prop, forFile) {\n      $createbar.filter(\'p#forreportcreate\').text(VIS.Msg.getMsg(\'Generating\' + forFile + \'File\'));\n      $downloadbar.filter(\'p#forreportdownload\').text(VIS.Msg.getMsg(\'Downloading\' + forFile + \'File\'));\n    }\n    ;\n  }\n  ;\n  VIS.BulkDownload = BulkDownload;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/bulkdownload.js?')},"./Areas/VIS/Scripts/app/Framework/cardTemplateMaster.js":()=>{eval(";\n(function (VIS, $) {\n  function VCTMaster() {\n    this.frame;\n    var self = this;\n    var WindowNo = VIS.Env.getWindowNo();\n    var btnTemplateBack = null;\n    var count = 1;\n    var DivTemplate = null;\n    var DivCardFieldSec = null;\n    var DivCradStep2 = null;\n    var DivStyleSec1 = null;\n    var DivViewBlock = null;\n    var btnLayoutSetting = null;\n    var AD_HeaderLayout_ID = null;\n    var btnChangeTemplate = null;\n    var divTopNavigator = null;\n    var spnLastSaved = null;\n    var DivGridSec = null;\n    var activeSection = null;\n    var startRowIndex = null;\n    var startCellIndex = null;\n    var lastSelectedID = null;\n    var mdown = false;\n    var chkAllBorderRadius = null;\n    var chkAllPadding = null;\n    var chkAllMargin = null;\n    var chkAllBorder = null;\n    var txtCustomStyle = null;\n    var txtSQLQuery = null;\n    var txtRowGap = null;\n    var txtColGap = null;\n    var btnAddField = null;\n    var btnAddImgField = null;\n    var btnAddImgTxtField = null;\n    var btn_BlockCancel = null;\n    var btnFinesh = null;\n    var rowIdx = null;\n    var colIdx = null;\n    var txtTemplateName = null;\n    var addedColPos = [];\n    var sectionCount = 2;\n    var btnEditIcon = null;\n    var isNewSection = false;\n    var isSystemTemplate = 'Y';\n    var btnaddBlankTemplate = null;\n    var btnUndo = null;\n    var btnRedo = null;\n    var dragged = null;\n    var btnVaddrow = null;\n    var btnVaddCol = null;\n    var btnVdelrow = null;\n    var btnVdelCol = null;\n    var btnRefreshTemplate = null;\n    var force = 0;\n    var cmbTemplateCategory = null;\n    var cmbViwBlockTemplateCategory = null;\n    var btnExport = null;\n    var gridObj = {};\n    var chMI = null;\n    var isUndoRedo = false;\n    var history = [];\n    var s_history = true;\n    var cur_history_index = 0;\n    var measurment = ['px', '%', 'cm', 'mm', 'in', 'pc', 'pt', 'ch', 'em', 'rem', 'vh', 'vw', 'vmin', 'vmax'];\n    /* Editor Style property */\n    var editorProp = {\n      width: {\n        proprty: 'width',\n        value: '',\n        measurment: true\n      },\n      minWidth: {\n        proprty: 'min-width',\n        value: '',\n        measurment: true\n      },\n      height: {\n        proprty: 'height',\n        value: '',\n        measurment: true\n      },\n      minHeight: {\n        proprty: 'min-height',\n        value: '',\n        measurment: true\n      },\n      fontSize: {\n        proprty: 'font-size',\n        value: '',\n        measurment: true\n      },\n      fontFamily: {\n        proprty: 'font-family',\n        value: '',\n        measurment: false\n      },\n      color: {\n        proprty: 'color',\n        value: '',\n        measurment: false\n      },\n      border: {\n        proprty: 'border',\n        value: '',\n        measurment: true\n      },\n      borderType: {\n        proprty: 'border-style',\n        value: '',\n        measurment: false\n      },\n      borderColor: {\n        proprty: 'border-color',\n        value: '',\n        measurment: false\n      },\n      borderLeft: {\n        proprty: 'border-left-width',\n        value: '',\n        measurment: true\n      },\n      borderLeftStyle: {\n        proprty: 'border-left-style',\n        value: '',\n        measurment: false\n      },\n      borderLeftColor: {\n        proprty: 'border-left-color',\n        value: '',\n        measurment: false\n      },\n      borderTop: {\n        proprty: 'border-top-width',\n        value: '',\n        measurment: true\n      },\n      borderTopStyle: {\n        proprty: 'border-top-style',\n        value: '',\n        measurment: false\n      },\n      borderTopColor: {\n        proprty: 'border-top-color',\n        value: '',\n        measurment: false\n      },\n      borderRight: {\n        proprty: 'border-right-width',\n        value: '',\n        measurment: true\n      },\n      borderRightStyle: {\n        proprty: 'border-right-style',\n        value: '',\n        measurment: false\n      },\n      borderRightColor: {\n        proprty: 'border-right-color',\n        value: '',\n        measurment: false\n      },\n      borderBottom: {\n        proprty: 'border-bottom-width',\n        value: '',\n        measurment: true\n      },\n      borderBottomStyle: {\n        proprty: 'border-bottom-style',\n        value: '',\n        measurment: false\n      },\n      borderBottomColor: {\n        proprty: 'border-bottom-color',\n        value: '',\n        measurment: false\n      },\n      borderRadius: {\n        proprty: 'border-radius',\n        value: '',\n        measurment: true\n      },\n      borderTopLeftRadius: {\n        proprty: 'border-top-left-radius',\n        value: '',\n        measurment: true\n      },\n      borderTopRightRadius: {\n        proprty: 'border-top-right-radius',\n        value: '',\n        measurment: true\n      },\n      borderBottomRightRadius: {\n        proprty: 'border-bottom-right-radius',\n        value: '',\n        measurment: true\n      },\n      borderBottomLeftRadius: {\n        proprty: 'border-bottom-left-radius',\n        value: '',\n        measurment: true\n      },\n      padding: {\n        proprty: 'padding',\n        value: '',\n        measurment: true\n      },\n      paddingLeft: {\n        proprty: 'padding-left',\n        value: '',\n        measurment: true\n      },\n      paddingTop: {\n        proprty: 'padding-top',\n        value: '',\n        measurment: true\n      },\n      paddingRight: {\n        proprty: 'padding-right',\n        value: '',\n        measurment: true\n      },\n      paddingBottom: {\n        proprty: 'padding-bottom',\n        value: '',\n        measurment: true\n      },\n      margin: {\n        proprty: 'margin',\n        value: '',\n        measurment: true\n      },\n      marginLeft: {\n        proprty: 'margin-left',\n        value: '',\n        measurment: true\n      },\n      marginTop: {\n        proprty: 'margin-top',\n        value: '',\n        measurment: true\n      },\n      marginRight: {\n        proprty: 'margin-right',\n        value: '',\n        measurment: true\n      },\n      marginBottom: {\n        proprty: 'margin-bottom',\n        value: '',\n        measurment: true\n      },\n      opacity: {\n        proprty: 'opacity',\n        value: '',\n        measurment: false\n      },\n      backgroundColor: {\n        proprty: 'background-color',\n        value: '',\n        measurment: false\n      },\n      gradientInput: {\n        proprty: 'background',\n        value: '',\n        measurment: false\n      },\n      gradient: {\n        proprty: 'background',\n        value: '',\n        measurment: false\n      },\n      boxShadow: {\n        proprty: 'box-shadow',\n        value: '',\n        measurment: true\n      },\n      flexDirection: {\n        proprty: 'flex-direction',\n        value: '',\n        measurment: false\n      },\n      bold: {\n        proprty: 'font-weight',\n        value: 'bold',\n        measurment: false\n      },\n      italic: {\n        proprty: 'font-style',\n        value: 'italic',\n        measurment: false\n      },\n      underline: {\n        proprty: 'text-decoration',\n        value: 'underline',\n        measurment: false\n      },\n      upperCase: {\n        proprty: 'text-transform',\n        value: 'uppercase',\n        measurment: false\n      },\n      capitalize: {\n        proprty: 'text-transform',\n        value: 'capitalize',\n        measurment: false\n      },\n      textLeft: {\n        proprty: 'text-align',\n        value: 'left',\n        measurment: false\n      },\n      textCenter: {\n        proprty: 'text-align',\n        value: 'center',\n        measurment: false\n      },\n      textJustify: {\n        proprty: 'text-align',\n        value: 'justify',\n        measurment: false\n      },\n      textRight: {\n        proprty: 'text-align',\n        value: 'right',\n        measurment: false\n      },\n      lowerCase: {\n        proprty: 'text-transform',\n        value: 'lowercase',\n        measurment: false\n      },\n      flexJustifyCenter: {\n        proprty: 'justify-content',\n        value: 'center',\n        measurment: false\n      },\n      flexJustifyStart: {\n        proprty: 'justify-content',\n        value: 'flex-start',\n        measurment: false\n      },\n      flexJustifyEnd: {\n        proprty: 'justify-content',\n        value: 'flex-end',\n        measurment: false\n      },\n      flexJustifySpaceBetween: {\n        proprty: 'justify-content',\n        value: 'space-between',\n        measurment: false\n      },\n      flexJustifySpaceAround: {\n        proprty: 'justify-content',\n        value: 'space-around',\n        measurment: false\n      },\n      flexAlignCenter: {\n        proprty: 'align-items',\n        value: 'center',\n        measurment: false\n      },\n      flexAlignEnd: {\n        proprty: 'align-items',\n        value: 'flex-end',\n        measurment: false\n      },\n      flexAlignStart: {\n        proprty: 'align-items',\n        value: 'flex-start',\n        measurment: false\n      },\n      maxTextmultiline: {\n        proprty: '-webkit-line-clamp',\n        value: '',\n        measurment: false\n      },\n      objectFit: {\n        proprty: 'object-fit',\n        value: '',\n        measurment: false\n      }\n    };\n    var root = $('<div style=\"height:100%\"><div class=\"vis-apanel-busy vis-cardviewmainbusy\" style=\"display:block\"></div></div>');\n    var isBusyRoot = $(\"<div class='vis-apanel-busy vis-cardviewmainbusy'></div> \");\n\n    /**\r\n     * Busy Indigater\r\n     * @param {any} isBusy\r\n     */\n    function IsBusy(isBusy) {\n      if (isBusy && isBusyRoot != null) {\n        isBusyRoot.css({\n          \"display\": \"block\"\n        });\n      }\n      if (!isBusy && isBusyRoot != null) {\n        isBusyRoot.css({\n          \"display\": \"none\"\n        });\n      }\n    }\n    ;\n\n    /** Load UI from Partial view */\n    function loadUI() {\n      root.load(VIS.Application.contextUrl + 'CardViewWizard/GetCardTemplate/?windowno=' + WindowNo, function (event) {\n        root.append(isBusyRoot);\n        btnTemplateBack = root.find('#BtnTemplateBack_' + WindowNo);\n        DivTemplate = root.find('#DivTemplate_' + WindowNo);\n        DivCardFieldSec = root.find('#DivCardFieldSec_' + WindowNo);\n        DivCradStep2 = root.find('#DivCardStep2_' + WindowNo);\n        DivViewBlock = root.find('#DivViewBlock_' + WindowNo);\n        DivStyleSec1 = root.find('#DivStyleSec1_' + WindowNo);\n        btnLayoutSetting = root.find('#BtnLayoutSetting_' + WindowNo);\n        btnChangeTemplate = root.find('#BtnChangeTemplate_' + WindowNo);\n        divTopNavigator = DivCradStep2.find('.vis-topNavigator');\n        DivGridSec = root.find('#DivGridSec_' + WindowNo);\n        activeSection = DivViewBlock.find('.section1');\n        chkAllBorderRadius = root.find('#chkAllBorderRadius_' + WindowNo);\n        chkAllPadding = root.find('#chkAllPadding_' + WindowNo);\n        chkAllMargin = root.find('#chkAllMargin_' + WindowNo);\n        chkAllBorder = root.find('#chkAllBorder_' + WindowNo);\n        txtTemplateName = root.find('#txtTemplateName_' + WindowNo);\n        btnFinesh = root.find('#BtnFinesh_' + WindowNo);\n        txtCustomStyle = root.find('#txtCustomStyle_' + WindowNo);\n        txtSQLQuery = root.find('#txtSQLQuery_' + WindowNo);\n        txtRowGap = DivGridSec.find('.rowGap');\n        txtColGap = DivGridSec.find('.colGap');\n        btn_BlockCancel = root.find('#Btn_BlockCancel_' + WindowNo);\n        btnAddField = root.find('#BtnAddField_' + WindowNo);\n        btnAddImgField = root.find('#BtnAddImgField_' + WindowNo);\n        btnAddImgTxtField = root.find('#BtnAddImgTxtField_' + WindowNo);\n        spnLastSaved = root.find('#spnLastSaved_' + WindowNo);\n        btnEditIcon = root.find('#btnEditIcon_' + WindowNo);\n        btnaddBlankTemplate = root.find('#btnaddBlankTemplate_' + WindowNo);\n        btnUndo = root.find('#btnUndo_' + WindowNo);\n        btnRedo = root.find('#btnRedo_' + WindowNo);\n        btnVaddrow = root.find('#btnVaddrow_' + WindowNo);\n        btnVaddCol = root.find('#btnVaddCol_' + WindowNo);\n        btnVdelrow = root.find('#btnVdelrow_' + WindowNo);\n        btnVdelCol = root.find('#btnVdelCol_' + WindowNo);\n        btnExport = root.find('#BtnExport_' + WindowNo);\n        btnRefreshTemplate = root.find('#BtnRefreshTemplate_' + WindowNo);\n        cmbTemplateCategory = root.find('#CmbTemplateCategory_' + WindowNo);\n        cmbViwBlockTemplateCategory = root.find('#CmbViwBlockTemplateCategory_' + WindowNo);\n        DivStyleSec1.find('.nav-tabs li:last').hide();\n        btnTemplateBack.hide();\n        getTemplateDesign();\n        getTemplateCategory();\n        events();\n      });\n    }\n\n    /** Click event for Import Checkbox\r\n     * */\n    function importcheckBoxEvent() {\n      root.find('.chkMark').change(function () {\n        if (root.find('.chkMark:checked').length > 0) {\n          btnExport.show();\n        } else {\n          btnExport.hide();\n        }\n        if (root.find('.chkMark:checked').length > 1) {\n          btnLayoutSetting.hide();\n        } else {\n          btnLayoutSetting.show();\n        }\n      });\n    }\n\n    /** All click events handle here\r\n     * */\n    function events() {\n      $('body').mouseup(function (e) {\n        mdown = false;\n      });\n      btnAddField.click(function () {\n        divTopNavigator.hide();\n        var itm = $('<div class=\"fieldGroup\" draggable=\"true\">' + '<span class=\"fieldLbl\" title=\"Label\" contenteditable=\"true\">Label</span>' + '<span class=\"fieldValue\" contenteditable=\"true\">:Value</span>' + '</div>');\n        var blok = DivViewBlock.find('.vis-active-block');\n        if (blok.hasClass('grdDiv')) {\n          blok.append(itm);\n        }\n        templatechanges();\n      });\n      btnAddImgField.click(function () {\n        divTopNavigator.hide();\n        self.show(false);\n      });\n      btnAddImgTxtField.click(function () {\n        divTopNavigator.hide();\n        self.show(true);\n      });\n      btnEditIcon.click(function () {\n        divTopNavigator.hide();\n        var activeblok = DivViewBlock.find('.vis-active-block').closest('.fieldGroup');\n        if (activeblok.find('.imgField').length > 0 && activeblok.find('.fieldValue').length > 0) {\n          self.show(true, true);\n        } else {\n          self.show(false, true);\n        }\n      });\n      btnTemplateBack.click(function (e) {\n        count++;\n        DivTemplate.hide();\n        DivCradStep2.find('.vis-two-sec-two').show();\n        DivStyleSec1.show();\n      });\n      btnLayoutSetting.click(function () {\n        addSelectedTemplate();\n        count++;\n        fillcardLayoutfromTemplate();\n        DivTemplate.hide();\n        DivCradStep2.find('.vis-two-sec-two').show();\n        DivStyleSec1.show();\n        if (AD_HeaderLayout_ID == 0 && DivGridSec.find('.rowBox').length == 1) {\n          DivGridSec.find('.addGridCol').click();\n          DivGridSec.find('.addGridRow').click();\n        }\n        if (AD_HeaderLayout_ID == 0) {\n          DivViewBlock.find('.vis-viewBlock').css('backgroundColor', '#fff');\n        }\n        btnEditIcon.hide();\n        isUndoRedo = false;\n        history = [];\n        s_history = true;\n        cur_history_index = 0;\n        templatechanges();\n        btnUndo.attr(\"disabled\", \"disabled\");\n      });\n      btnChangeTemplate.click(function () {\n        btnTemplateBack.show();\n        divTopNavigator.hide();\n        count--;\n        DivTemplate.show();\n        DivStyleSec1.hide();\n        DivCradStep2.find('.vis-two-sec-two').hide();\n        DivTemplate.find('[templateid=\"' + lastSelectedID + '\"]').click();\n        scaleTemplate();\n        cmbTemplateCategory.val('');\n        DivTemplate.find('[issystemtemplate=\"Y\"]').removeClass('displayNone');\n      });\n      btnFinesh.click(function (e) {\n        saveTemplate(e);\n      });\n      btnExport.click(function () {\n        markmoduleImport();\n      });\n      btnRefreshTemplate.click(function () {\n        cmbTemplateCategory.val('');\n        getTemplateDesign();\n      });\n      DivTemplate.find('.vis-cardSingleViewTemplate').click(function (e) {\n        if ($(e.target).hasClass('chkMark')) {\n          return;\n        } else {\n          if ($(e.target).index() == 0) {\n            btnExport.hide();\n          } else {\n            btnExport.show();\n          }\n          DivTemplate.find('.vis-cardSingleViewTemplate').removeClass('vis-active-template');\n          $(this).addClass('vis-active-template');\n          DivTemplate.find('.chkMark').prop('checked', false);\n          $(this).find('.chkMark').prop('checked', true);\n        }\n        root.find('.chkMark').change();\n      });\n      chkAllBorderRadius.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allBorderRadius').removeClass('displayNone');\n          DivStyleSec1.find('.singleBorderRadius').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allBorderRadius').addClass('displayNone');\n          DivStyleSec1.find('.singleBorderRadius').removeClass('displayNone');\n        }\n      });\n      chkAllPadding.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allPadding').removeClass('displayNone');\n          DivStyleSec1.find('.singlePadding').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allPadding').addClass('displayNone');\n          DivStyleSec1.find('.singlePadding').removeClass('displayNone');\n        }\n      });\n      chkAllMargin.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allMargin').removeClass('displayNone');\n          DivStyleSec1.find('.singleMargin').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allMargin').addClass('displayNone');\n          DivStyleSec1.find('.singleMargin').removeClass('displayNone');\n        }\n      });\n      chkAllBorder.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allBorder').removeClass('displayNone');\n          DivStyleSec1.find('.singleBorder').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allBorder').addClass('displayNone');\n          DivStyleSec1.find('.singleBorder').removeClass('displayNone');\n        }\n      });\n      DivStyleSec1.find('.vis-circular-slider-circle').mousedown(function (e) {\n        mdown = true;\n      }).mousemove(function (e) {\n        if (mdown) {\n          var $slider = DivStyleSec1.find('.vis-circular-slider-dot');\n          var deg = getGradientDeg($slider, e);\n          $slider.css({\n            WebkitTransform: 'rotate(' + deg + 'deg)'\n          });\n          $slider.css({\n            '-moz-transform': 'rotate(' + deg + 'deg)'\n          });\n          $slider.attr(\"deg\", deg);\n          applycommand(\"gradient\", deg);\n        }\n      });\n      divTopNavigator.find(\"i\").click(function () {\n        var blok = DivViewBlock.find('.vis-active-block');\n        var cmd = $(this).attr('command');\n        //isChange = true;\n        var f = blok.closest('.fieldGroup').find('.fieldLbl');\n        if (cmd == 'Show') {\n          if (blok.prop('tagName') == 'I' && !blok.hasClass('imgField')) {\n            blok.attr(\"class\", \"fa fa-star\");\n            blok.next().attr('showFieldIcon', false);\n          } else {\n            f.attr('showFieldText', false);\n            f.removeClass(\"displayNone\");\n          }\n          divTopNavigator.find('[command=\"Hide\"]').parent().show();\n          divTopNavigator.find('[command=\"Show\"]').parent().hide();\n          divTopNavigator.hide();\n          templatechanges();\n        } else if (cmd == 'Hide') {\n          if (blok.prop('tagName') == 'I' && !blok.hasClass('imgField')) {\n            blok.attr(\"class\", \"\");\n            blok.next().attr('showFieldIcon', true);\n          } else if (blok.hasClass('imgField')) {\n            blok.css('display', 'none');\n          } else {\n            if (blok.hasClass('fieldValue')) {\n              blok.css(\"display\", \"none\");\n            } else {\n              blok.attr('showFieldText', true);\n              blok.addClass(\"displayNone\");\n            }\n            //blok.html('&nbsp;');\n          }\n          divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n          divTopNavigator.find('[command=\"Show\"]').parent().show();\n          divTopNavigator.hide();\n          btnEditIcon.hide();\n          templatechanges();\n        } else if (cmd == 'SelectParent') {\n          //isChange = false;\n          if (blok.parent().hasClass(\"fieldGroup\")) {\n            blok.parent().parent().mousedown().mouseup();\n          } else {\n            blok.parent().mousedown().mouseup();\n          }\n        } else if (cmd == 'Separate') {\n          applyunMerge(blok);\n          blok.find('.vis-split-cell:first').remove();\n          $(this).parent().hide();\n          templatechanges();\n        } else if (cmd == 'Merge') {\n          mergeCell();\n          divTopNavigator.find('[command=\"Merge\"]').parent().hide();\n          templatechanges();\n        } else if (cmd == 'Unlink') {\n          divTopNavigator.hide();\n          var fldLbl = blok.closest('.fieldGroup').find('.fieldLbl');\n          unlinkField(fldLbl.attr('title'), fldLbl);\n          btnEditIcon.hide();\n          templatechanges();\n        } else if (cmd == 'ShowImg') {\n          blok.closest('.fieldGroup').find('.imgField').css(\"display\", \"unset\");\n          divTopNavigator.find('[command=\"ShowImg\"]').parent().hide();\n          templatechanges();\n        } else if (cmd == 'ShowValue') {\n          blok.closest('.fieldGroup').find('.fieldValue').css(\"display\", \"unset\");\n          divTopNavigator.find('[command=\"ShowValue\"]').parent().hide();\n          templatechanges();\n        }\n\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n\n        // divTopNavigator.hide();\n      });\n      var viewBlock = DivViewBlock.find('.canvas *');\n\n      //View Block click action going here\n\n      viewBlock.mousedown(function (e) {\n        setTimeout(function () {\n          if (e.target.tagName == 'SQL' || $(e.target).hasClass('fieldGroup') || $(e.target).hasClass('vis-addRemoveRowCol')) {\n            return;\n          }\n          if (e.ctrlKey) {\n            if ($(e.target).attr('contenteditable')) {\n              $(e.target).attr('contenteditable', false);\n            }\n            return;\n          } else {\n            if ($(e.target).attr('contenteditable')) {\n              $(e.target).attr('contenteditable', true);\n            }\n          }\n          DivCradStep2.find('.vis-v-rowcol').hide();\n          if ($(e.target).hasClass('grdDiv')) {\n            e.preventDefault();\n            btnAddField.removeClass(\"vis-disable-event\");\n            btnAddImgField.removeClass(\"vis-disable-event\");\n            btnAddImgTxtField.removeClass(\"vis-disable-event\");\n            ViewBlockAddDelRowCol(e);\n          } else {\n            btnAddField.addClass('vis-disable-event');\n            btnAddImgField.addClass('vis-disable-event');\n            btnAddImgTxtField.addClass('vis-disable-event');\n          }\n          divTopNavigator.find('[command=\"Merge\"]').parent().hide();\n          divTopNavigator.find('[command=\"ShowImg\"]').parent().hide();\n          divTopNavigator.find('[command=\"ShowValue\"]').parent().hide();\n          DivStyleSec1.find('.imgTextCont').addClass('vis-disable-event');\n          DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n          if (count == 1) {\n            DivViewBlock.find('.vis-viewBlock').addClass(\"vis-active-block\");\n          } else {\n            var secCount = $(e.target).closest('.vis-wizard-section').attr(\"sectionCount\");\n            if (!DivGridSec.find(\"[sectionCount='\" + secCount + \"']\").hasClass('section-active')) {\n              DivGridSec.find(\"[sectionCount='\" + secCount + \"'] .vis-grey-disp-el\").click();\n            }\n            $(e.target).addClass(\"vis-active-block\");\n            var top = e.target.offsetTop - divTopNavigator.outerHeight();\n            var left = e.target.offsetLeft;\n            divTopNavigator.css({\n              'top': top,\n              'left': left\n            });\n            divTopNavigator.show();\n            //divTopNavigator.find('[command=\"Unlink\"]').parent().hide();\n            divTopNavigator.find('[command=\"fieldName\"]').text('').hide();\n            if ($(e.target).hasClass('imgField')) {\n              btnEditIcon.show();\n              if (e.target.tagName == 'I') {\n                btnEditIcon.css({\n                  \"left\": $(e.target).closest('.grdDiv')[0].offsetLeft + 22,\n                  \"top\": $(e.target).closest('.grdDiv')[0].offsetTop + 6\n                });\n              } else {\n                btnEditIcon.css({\n                  \"left\": e.target.offsetLeft + (e.target.width || 0) - 12,\n                  \"top\": e.target.offsetTop\n                });\n              }\n            } else {\n              btnEditIcon.hide();\n            }\n            var isIcon = false;\n            if ($(e.target).closest('.fieldGroup').length > 0) {\n              divTopNavigator.find('[command=\"Unlink\"]').parent().show();\n            } else {\n              divTopNavigator.find('[command=\"Unlink\"]').parent().hide();\n            }\n            if ($(e.target).hasClass('fieldLbl')) {\n              divTopNavigator.find('[command=\"fieldName\"]').text($(e.target).closest('.fieldGroup').find('.fieldLbl').attr('title')).show();\n              //divTopNavigator.find('[command=\"Unlink\"]').parent().show();\n              var isTrue = $(e.target).attr('showFieldText') == 'true' ? true : false;\n              if (e.target.hasAttribute('showFieldText') && isTrue) {\n                divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                divTopNavigator.find('[command=\"Show\"]').parent().show();\n              } else {\n                divTopNavigator.find('[command=\"Show\"]').parent().hide();\n                divTopNavigator.find('[command=\"Hide\"]').parent().show();\n              }\n            } else if (e.target.tagName == 'I' && $(e.target).closest('.fieldGroup').find('.imgField').length == 0) {\n              var isTrue = $(e.target).next().attr('showFieldIcon') == 'true' ? true : false;\n              if ($(e.target).next().attr('showFieldIcon') && isTrue) {\n                divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                divTopNavigator.find('[command=\"Show\"]').parent().show();\n              } else {\n                divTopNavigator.find('[command=\"Show\"]').parent().hide();\n                divTopNavigator.find('[command=\"Hide\"]').parent().show();\n              }\n            } else {\n              divTopNavigator.find('[command=\"Show\"]').parent().hide();\n              divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n              if ($(e.target).closest('.fieldGroup').length > 0) {\n                var target = $(e.target).closest('.fieldGroup').find('.fieldLbl');\n                var trget = $(e.target).closest('.fieldGroup');\n                if (trget.find('.imgField:hidden').length > 0) {\n                  divTopNavigator.find('[command=\"ShowImg\"]').parent().show();\n                  divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                } else if (trget.find('.fieldValue:hidden').length > 0) {\n                  divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                  divTopNavigator.find('[command=\"ShowValue\"]').parent().show();\n                } else if (trget.find('.imgField').length == 1 && trget.find('.fieldValue').length == 1) {\n                  divTopNavigator.find('[command=\"Hide\"]').parent().show();\n                  DivStyleSec1.find('.imgTextCont').removeClass('vis-disable-event');\n                } else {\n                  DivStyleSec1.find('.imgTextCont').addClass('vis-disable-event');\n                }\n                var isTrue = target.attr('showFieldText') == 'true' ? true : false;\n                divTopNavigator.find('[command=\"fieldName\"]').text(target.attr('title')).show();\n              }\n              if (isTrue) {\n                divTopNavigator.find('[command=\"Show\"]').parent().show();\n              }\n            }\n            if ($(e.target).find('.vis-split-cell').length == 0) {\n              divTopNavigator.find('[command=\"Separate\"]').parent().hide();\n              if ($(e.target).hasClass('grdDiv')) {\n                mdown = true;\n              }\n              activeSection.find('.grdDiv').each(function (e) {\n                var totalCol = DivGridSec.find('.colBox').length - 1;\n                var currentRow = Math.ceil((e + 1) / totalCol);\n                if ($(this).hasClass('vis-active-block')) {\n                  startRowIndex = currentRow - 1;\n                  startCellIndex = e - totalCol * startRowIndex;\n                }\n              });\n            } else {\n              divTopNavigator.find('[command=\"Separate\"]').parent().show();\n            }\n          }\n          if ($(e.target).hasClass('vis-wizard-section')) {\n            divTopNavigator.find('[command=\"fieldName\"]').text('Section ' + $(e.target).attr('sectioncount')).show();\n          }\n          if ($(e.target).hasClass('vis-viewBlock')) {\n            divTopNavigator.find('[command=\"fieldName\"]').text('Main container').show();\n          }\n        }, 30);\n        //$(e.target).not('.ui-resizable-handle').addClass(\"vis-active-block\");\n        //$(this).resizable();\n      }).mouseup(function (e) {\n        setTimeout(function () {\n          mdown = false;\n          fill($(e.target));\n        }, 30);\n      });\n\n      // style input change command\n      DivStyleSec1.find('[data-command]').on('change', function (e) {\n        $(this).removeClass('vis-editor-validate');\n        var command = $(this).data('command');\n        var styleValue = $(this).val();\n        var isNegativeNumber = false;\n        if (command.indexOf('margin') != -1 && styleValue.indexOf('-') != -1) {\n          isNegativeNumber = true;\n        }\n        var mtext = styleValue.replace(/\\d+/g, \"\").replace('.', '');\n        var mvalue = styleValue.replace(styleValue.replace(/\\d+/g, \"\"), \"\");\n        if (editorProp[command] && editorProp[command].measurment && styleValue != \"\" && $(this).attr('type') != 'color') {\n          if (measurment.indexOf(mtext) < 0) {\n            if (isNaN(Number(mvalue))) {\n              $(this).addClass('vis-editor-validate');\n              return;\n            }\n            if (isNegativeNumber) {\n              $(this).val(\"-\" + mvalue + \"px\");\n            } else {\n              $(this).val(mvalue + \"px\");\n            }\n          } else if (isNaN(Number(mvalue))) {\n            $(this).addClass('vis-editor-validate');\n            return;\n          }\n        }\n        if (command == 'backgroundColor') {\n          // var clr= rgb2hex(styleValue);\n          DivStyleSec1.find('.vis-zero-BTopLeftBLeft:first').css('background-color', styleValue);\n          DivStyleSec1.find('[data-command=\"backgroundColor\"]').val(styleValue);\n        } else if (command == 'color') {\n          DivStyleSec1.find('.vis-zero-BTopLeftBLeft:last').css('background-color', styleValue);\n          DivStyleSec1.find('[data-command=\"color\"]').val(styleValue);\n        } else if (command == 'borderColor' || command == 'borderLeftColor' || command == 'borderRightColor' || command == 'borderTopColor' || command == 'borderBottomColor') {\n          var bdrDiv = DivStyleSec1.find(\"[data-command='\" + command + \"']\").closest('.vis-prop-pan-cont');\n          bdrDiv.find(\".vis-back-color03\").css('background-color', styleValue);\n        }\n        applycommand(command, $(this).val());\n      });\n\n      // Style clickable command\n      DivStyleSec1.find('[data-command1]').on('click', function (e) {\n        var command = $(this).data('command1');\n        var tag = DivViewBlock.find('.vis-active-block');\n        var isStyleExist = false;\n        if (editorProp[command].measurment) {\n          isStyleExist = checkStyle(editorProp[command].proprty, editorProp[command].value, tag);\n        } else {\n          isStyleExist = checkStyle(editorProp[command].proprty, false, tag);\n        }\n        var activ = $(this).closest('.vis-horz-align-d').find('.vis-hr-elm-inn-active');\n        activ.removeClass('vis-hr-elm-inn-active');\n        if ((editorProp[command].proprty == \"justify-content\" || editorProp[command].proprty == \"align-items\") && checkStyle(\"display\", \"flex\", tag)) {\n          //applyCommend(\"displayFlex\", \"\");\n          tag[0].style.removeProperty(\"display\");\n          applycommand(command, \"\");\n          if (activ.find('[data-command1]').attr('data-command1') != command) {\n            $(this).parent().addClass('vis-hr-elm-inn-active');\n            applycommand(command, editorProp[command].value);\n          }\n        } else if (editorProp[command].proprty == 'text-align' || editorProp[command].proprty == 'text-transform') {\n          applycommand(command, \"\");\n          if (activ.find('[data-command1]').attr('data-command1') != command) {\n            $(this).parent().addClass('vis-hr-elm-inn-active');\n            applycommand(command, editorProp[command].value);\n          }\n        } else {\n          if (isStyleExist) {\n            $(this).parent().removeClass('vis-hr-elm-inn-active');\n            applycommand(command, \"\");\n          } else {\n            $(this).parent().addClass('vis-hr-elm-inn-active');\n            applycommand(command, editorProp[command].value);\n          }\n        }\n        if (tag.attr('style').indexOf('justify-content') != -1 || tag.attr('style').indexOf('align-items') != -1 || tag.attr('style').indexOf('flex-direction') != -1) {\n          tag.css(\"display\", \"flex\");\n        }\n      });\n\n      // style align image and text command\n      DivStyleSec1.find('[data-command2]').on('click', function (e) {\n        divTopNavigator.hide();\n        var tag = activeSection.find('.vis-active-block').closest('.fieldGroup');\n        var command = $(this).data('command2');\n        var styleProp = tag.find('.fieldValue').attr('style');\n        var classPro = tag.find('.fieldValue').attr('class');\n        tag.find('.fieldValue br').remove();\n        if (command == 'SwapImgTxt') {\n          tag.find('.imgField').before(tag.find('.fieldValue'));\n        } else if (command == 'SwapTxtImg') {\n          tag.find('.fieldValue').before(tag.find('.imgField'));\n        } else if (command == 'SwapTxtImgBr') {\n          tag.find('.fieldValue').before(tag.find('.imgField'));\n          tag.find('.fieldValue').prepend('<br>');\n        } else if (command == 'SwapImgTxtBr') {\n          tag.find('.imgField').before(tag.find('.fieldValue'));\n          tag.find('.fieldValue').append('<br>');\n        }\n        templatechanges();\n      });\n\n      // apply custom css\n      txtCustomStyle.change(function () {\n        var selectedItem = DivViewBlock.find('.vis-active-block');\n        selectedItem.attr(\"style\", $(this).val());\n        templatechanges();\n      });\n      txtSQLQuery.change(function () {\n        var selectedItem = DivViewBlock.find('.vis-active-block');\n        if ($(this).val() == null || $(this).val() == \"\") {\n          selectedItem.find('sql').remove();\n          selectedItem.attr(\"query\", \"\");\n        } else {\n          var qry = VIS.secureEngine.encrypt($(this).val());\n          selectedItem.attr(\"query\", qry);\n          if (selectedItem.find('sql').length == 0) {\n            selectedItem.append('<sql>SQL</sql>');\n          }\n        }\n        templatechanges();\n      });\n      DivGridSec.find('.addGridRow').click(function () {\n        var rClone = DivGridSec.find('.rowBox:first').clone(true);\n        rClone.show();\n        DivGridSec.find('.DivRowBox').append(rClone);\n        createGrid();\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.addGridCol').click(function () {\n        var cClone = DivGridSec.find('.colBox:first').clone(true);\n        cClone.show();\n        DivGridSec.find('.DivColBox').append(cClone);\n        createGrid();\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.addGridSection').click(function () {\n        isNewSection = true;\n        DivGridSec.find('.section-active').removeClass('section-active');\n        var sClone = DivGridSec.find('.grid-Section:first').clone(true);\n        sClone.removeClass('displayNone');\n        sClone.addClass('section-active');\n        sectionCount = DivGridSec.find('.grid-Section').length; //Number(DivGridSec.find('.grid-Section:last').attr(\"sectionCount\")) + 1;\n        sClone.attr('sectionCount', sectionCount);\n        sClone.find('.vis-grey-disp-ttl').text(\"Section \" + sectionCount);\n        DivGridSec.find('.vis-sectionAdd').append(sClone);\n        activeSection = $('<div name=\"Section ' + sectionCount + '\" sectionCount=\"' + sectionCount + '\"  class=\"section' + sectionCount + ' vis-wizard-section\" style=\"padding:5px\"></div>');\n        DivViewBlock.find('.vis-viewBlock').append(activeSection);\n        //sectionCount++;\n        DivGridSec.find('.rowBox:not(:first)').remove();\n        DivGridSec.find('.colBox:not(:first)').remove();\n        DivGridSec.find('.addGridRow').click();\n        DivGridSec.find('.addGridCol').click();\n        DivGridSec.find('.vis-sectionAdd').sortable({\n          disabled: false,\n          update: function (event, ui) {\n            var sectionCount = ui.item.attr('sectioncount');\n            var end_pos = ui.item.index();\n            var next = ui.item.next().attr('sectioncount');\n            if (next) {\n              DivViewBlock.find('[sectioncount=\"' + next + '\"]').before(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n            } else {\n              var pre = ui.item.prev().attr('sectioncount');\n              DivViewBlock.find('[sectioncount=\"' + pre + '\"]').after(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n            }\n            templatechanges();\n          }\n        });\n        templatechanges();\n      });\n      DivGridSec.find('.grid-Section .vis-grey-disp-el-xross').click(function () {\n        var secNo = $(this).closest('.grid-Section').attr('sectionCount');\n        if ($(this).closest('.grid-Section').hasClass('section-active')) {\n          DivGridSec.find('.grid-Section').eq(1).addClass('section-active');\n          DivGridSec.find('.grid-Section').eq(1).find('.vis-grey-disp-el').click();\n        }\n        $(this).closest('.grid-Section').remove();\n        var removeSection = DivViewBlock.find('.vis-viewBlock .section' + secNo);\n        removeSection.find('.fieldLbl').each(function () {\n          if ($(this).attr('title') && $(this).attr('title').length > 0) {\n            unlinkField($(this).attr('title'), $(this));\n          }\n        });\n        removeSection.remove();\n        delete gridObj['section' + secNo];\n        secNo = DivGridSec.find('.section-active').attr('sectionCount');\n        activeSection = DivViewBlock.find('.vis-viewBlock .section' + secNo);\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.grid-Section .vis-grey-disp-el').click(function () {\n        DivGridSec.find('.section-active').removeClass('section-active');\n        $(this).parent().addClass('section-active');\n        var secNo = DivGridSec.find('.section-active').attr('sectionCount');\n        activeSection = DivViewBlock.find('.vis-viewBlock .section' + secNo);\n        DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n        activeSection.addClass('vis-active-block');\n        createGridRowCol();\n        if (isUndoRedo) {\n          isUndoRedo = false;\n        } else {\n          templatechanges();\n        }\n      });\n      btnVaddrow.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdRowAdd').eq(Number(gridArea[2]) - 1).click();\n      });\n      btnVdelrow.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdRowDel').eq(Number(gridArea[2]) - 1).click();\n      });\n      btnVaddCol.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdColAdd').eq(Number(gridArea[3]) - 1).click();\n      });\n      btnVdelCol.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdColDel').eq(Number(gridArea[3]) - 1).click();\n      });\n      DivGridSec.find('.grdRowDel').click(function () {\n        var idx = $(this).closest('.rowBox').index();\n        rowIdx = idx;\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        var dNo = idx * totalCol + 1 - totalCol;\n        for (var i = dNo; i < dNo + totalCol; i++) {\n          activeSection.find('.grdDiv').eq(i - 1).addClass('del');\n          var blk = activeSection.find('.grdDiv').eq(i - 1).find('.fieldLbl');\n          if (blk && blk.attr('title') && blk.attr('title').length > 0) {\n            unlinkField(blk.attr('title'), blk);\n          }\n        }\n        activeSection.find('.del').remove();\n        $(this).closest('.rowBox').remove();\n        gridCss(-1, 0);\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.grdRowAdd').click(function () {\n        var idx = $(this).closest('.rowBox').index() - 1;\n        var rClone = DivGridSec.find('.rowBox:first').clone(true);\n        rClone.show();\n        DivGridSec.find('.DivRowBox').append(rClone);\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        var pos = (idx + 1) * totalCol;\n        rowIdx = idx + 1;\n        for (var i = 0; i < totalCol; i++) {\n          activeSection.find('.grdDiv').eq(pos - 1).after(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n        }\n        grdsecMousehover();\n        gridCss(1, 0);\n        templatechanges();\n      });\n      DivGridSec.find('.grdColDel').click(function () {\n        var idx = $(this).closest('.colBox').index() - 1;\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        colIdx = idx + 1;\n        for (var i = 0; i < totalRow; i++) {\n          for (var j = 0; j < totalCol; j++) {\n            if (j == idx) {\n              var dNo = totalCol * i + j;\n              activeSection.find('.grdDiv').eq(dNo).addClass('del');\n              var blk = activeSection.find('.grdDiv').eq(dNo).find('.fieldLbl');\n              if (blk && blk.attr('title') && blk.attr('title').length > 0) {\n                unlinkField(blk.attr('title'), blk);\n              }\n            }\n          }\n        }\n        activeSection.find('.del').remove();\n        $(this).closest('.colBox').remove();\n        gridCss(0, -1);\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.grdColAdd').click(function () {\n        var cClone = DivGridSec.find('.colBox:first').clone(true);\n        cClone.show();\n        DivGridSec.find('.DivColBox').append(cClone);\n        addedColPos = [];\n        var idx = $(this).closest('.colBox').index() - 1;\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        colIdx = idx + 1;\n        for (var i = 0; i < totalRow; i++) {\n          for (var j = 0; j < totalCol; j++) {\n            if (j == idx) {\n              var pos = totalCol * i + j;\n              addedColPos.push(pos + 1);\n              activeSection.find('.grdDiv').eq(pos).after(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n            }\n          }\n        }\n        grdsecMousehover();\n        gridCss(0, 1);\n        templatechanges();\n      });\n      DivGridSec.find('.mergeCell').click(function () {\n        mergeCell();\n        templatechanges();\n      });\n      txtColGap.change(function () {\n        gridCss();\n        templatechanges();\n      });\n      txtRowGap.change(function () {\n        gridCss();\n        templatechanges();\n      });\n      DivGridSec.find('.rowBox input,select').change(function () {\n        gridCss();\n        templatechanges();\n      });\n      DivGridSec.find('.colBox input,select').change(function () {\n        gridCss();\n        templatechanges();\n      });\n      btn_BlockCancel.click(function () {\n        DivTemplate.find('.mainTemplate[templateid=\"' + AD_HeaderLayout_ID + '\"]').parent().click();\n        if (count > 1) {\n          addSelectedTemplate();\n          fillcardLayoutfromTemplate();\n        }\n        btn_BlockCancel.hide();\n      });\n      btnaddBlankTemplate.click(function () {\n        DivTemplate.find('.mainTemplate[templateid=\"0\"]').parent().click();\n        btnLayoutSetting.click();\n      });\n      DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"dragstart\", function (event) {\n        // store a ref. on the dragged elem \n        dragged = $(event.target);\n        if (dragged.hasClass('grdDiv') || !event.ctrlKey) {\n          event.preventDefault();\n        } else {\n          divTopNavigator.hide();\n          mdown = false;\n        }\n      }, false);\n      DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"dragover\", function (event) {\n        // prevent default to allow drop\n        event.preventDefault();\n      });\n      DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"drop\", function (event) {\n        // prevent default action (open as link for some elements)\n        event.preventDefault();\n        DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n        var ev = $(event.target);\n        if (ev.hasClass('grdDiv')) {\n          ev.append(dragged);\n          templatechanges();\n        }\n      });\n      btnUndo.click(function (e) {\n        if (cur_history_index > 0) {\n          isUndoRedo = true;\n          s_history = false;\n          canv_data = JSON.parse(history[cur_history_index - 1]);\n          DivViewBlock.find('.vis-viewBlock').html(canv_data);\n          cur_history_index--;\n          btnRedo.removeAttr(\"disabled\");\n          if (cur_history_index <= 0) {\n            btnUndo.attr(\"disabled\", \"disabled\");\n          }\n          fillcardLayoutfromTemplate();\n          DivViewBlock.find('.grdDiv').unbind('mouseover');\n          DivViewBlock.find('.grdDiv').mouseover(function (e) {\n            if (mdown && $(this).find('.vis-split-cell').length == 0) {\n              selectTo($(this));\n            }\n          });\n        } else {\n          btnUndo.attr(\"disabled\", \"disabled\");\n        }\n      });\n      btnRedo.click(function (e) {\n        if (history[cur_history_index + 1]) {\n          isUndoRedo = true;\n          s_history = false;\n          canv_data = JSON.parse(history[cur_history_index + 1]);\n          DivViewBlock.find('.vis-viewBlock').html(canv_data);\n          cur_history_index++;\n          btnUndo.removeAttr(\"disabled\");\n          fillcardLayoutfromTemplate();\n          if (cur_history_index >= history.length - 1) {\n            btnRedo.attr(\"disabled\", \"disabled\");\n          }\n          DivViewBlock.find('.grdDiv').unbind('mouseover');\n          DivViewBlock.find('.grdDiv').mouseover(function (e) {\n            if (mdown && $(this).find('.vis-split-cell').length == 0) {\n              selectTo($(this));\n            }\n          });\n        } else {\n          btnRedo.attr(\"disabled\", \"disabled\");\n        }\n      });\n      cmbTemplateCategory.change(function () {\n        if ($(this).val() != \"\") {\n          DivTemplate.find('[issystemtemplate=\"Y\"]').not('.blankTemp').addClass('displayNone');\n          DivTemplate.find('[issystemtemplate=\"Y\"][category=\"' + $(this).val() + '\"]').removeClass('displayNone');\n        } else {\n          DivTemplate.find('[issystemtemplate=\"Y\"]').removeClass('displayNone');\n        }\n        if (DivTemplate.find('.vis-cardSingleViewTemplate:not(:hidden)').length == 1) {\n          DivTemplate.find('.vis-noTemplateIcon').show();\n        } else {\n          DivTemplate.find('.vis-noTemplateIcon').hide();\n        }\n      });\n      DivViewBlock.find('.vis-viewBlock').on('DOMSubtreeModified', function () {\n        var iH = DivViewBlock.height();\n        var cH = DivViewBlock.find('.canvas').height();\n        if (iH && cH && cH > iH) {\n          DivViewBlock.find('.canvas').addClass('canvasOverFlow');\n        } else {\n          DivViewBlock.find('.canvas').removeClass('canvasOverFlow');\n        }\n      });\n    }\n    ;\n    /**\r\n     * Genrate Gradient Degree\r\n     * @param {any} id\r\n     * @param {any} e\r\n     */\n    var getGradientDeg = function (id, e) {\n      var radius = 9;\n      var deg = 0;\n      var elP = id.parent().offset();\n      var elPos = {\n        x: elP.left,\n        y: elP.top\n      };\n      if (mdown) {\n        var mPos = {\n          x: e.clientX - elPos.x,\n          y: e.clientY - elPos.y\n        };\n        var atan = Math.atan2(mPos.x - radius, mPos.y - radius);\n        deg = -atan / (Math.PI / 180) + 180; // final (0-360 positive) degrees from mouse position \n        deg = Math.ceil(deg);\n        return deg;\n        // AND FINALLY apply exact degrees to ball rotation\n      }\n    };\n\n    /**\r\n     * Add Selected Template into viewport\r\n     * */\n    function addSelectedTemplate() {\n      var $this = DivTemplate.find('.vis-active-template').clone(true);\n      if ($this.attr(\"lastupdated\")) {\n        spnLastSaved.text(VIS.Msg.getMsg(\"LastSaved\") + \" \" + $this.attr(\"lastupdated\"));\n      }\n      //$this.find('.grdDiv').html('');\n      $this.find('.mainTemplate').css(\"zoom\", 1);\n      CardCreatedby = $this.attr(\"createdBy\");\n      isSystemTemplate = $this.attr(\"isSystemTemplate\");\n      cmbViwBlockTemplateCategory.val($this.attr(\"category\") == '0' ? '' : $this.attr(\"category\"));\n      AD_HeaderLayout_ID = $this.find('.mainTemplate').attr('templateid');\n      lastSelectedID = AD_HeaderLayout_ID;\n      templateName = $this.find('.mainTemplate').attr('name');\n      if (AD_HeaderLayout_ID == \"0\") {\n        $this.find('.mainTemplate').html($('<div name=\"Section 1\" sectionCount=\"1\" class=\"section1 vis-wizard-section\" style=\"padding:5px;\"></div>'));\n      }\n      $this.find('[contenteditable]').attr('contenteditable', true);\n      txtTemplateName.val($this.find('.mainTemplate').attr('name'));\n      AD_HeaderLayout_ID = $this.find('.mainTemplate').attr('templateid');\n      if ($this.html() != \"\" || $this.html() != null) {\n        $this.find('.vis-wizard-section').each(function () {\n          var row = $(this).attr('row');\n          var col = $(this).attr('col');\n          var arr = [];\n          for (var i = 0; i < row * col; i++) {\n            arr.push('<div class=\"grdDiv\" style=\"display:none\"></div>');\n          }\n          $(this).find('.grdDiv').each(function () {\n            var areagrid = $(this).css('grid-area').split('/');\n            var idx = col * ($.trim(areagrid[0]) - 1) + ($.trim(areagrid[1]) - 1);\n            if ($.trim(areagrid[0]) != $.trim(areagrid[2]) - 1 || $.trim(areagrid[1]) != $.trim(areagrid[3]) - 1) {\n              $(this).append('<span class=\"vis-split-cell\"></span>');\n            }\n            arr[idx] = $(this)[0].outerHTML;\n          });\n          $(this).html(arr.join(\" \"));\n        });\n        DivViewBlock.find('.vis-viewBlock').attr(\"style\", $this.find('.mainTemplate').attr('style') || '');\n        DivViewBlock.find('.vis-viewBlock').html($this.find('.mainTemplate').html());\n        DivViewBlock.find('.vis-viewBlock').find('.fieldValue').attr(\"contenteditable\", true);\n        DivViewBlock.find('.vis-viewBlock').find('.fieldLbl').attr(\"contenteditable\", true);\n        DivViewBlock.find('.fieldGroup').each(function () {\n          if ($(this).find('.imgField').length > 0 && $(this).find('.fieldValue').length > 0) {\n            $(this).find('.fieldLbl').attr('title', 'Image+Text');\n          } else if ($(this).find('.imgField').length > 0) {\n            $(this).find('.fieldLbl').attr('title', 'Image');\n          }\n        });\n        DivViewBlock.find('.grdDiv').unbind('mouseover');\n        DivViewBlock.find('.grdDiv').mouseover(function (e) {\n          if (mdown && $(this).find('.vis-split-cell').length == 0) {\n            selectTo($(this));\n          }\n        });\n      }\n    }\n\n    /**\r\n     * Fill card property into section\r\n     * */\n    var fillcardLayoutfromTemplate = function () {\n      gridObj = {};\n      var sClone = DivGridSec.find('.grid-Section:first').clone(true);\n      sClone.removeClass('displayNone');\n      DivGridSec.find('.grid-Section:not(:first)').remove();\n      DivViewBlock.find('.vis-wizard-section').each(function (i) {\n        var secNo = $(this).attr('sectionCount');\n        if (i == 0) {\n          sClone.addClass('section-active');\n          $(this).addClass('vis-active-block');\n        }\n        sClone.attr('sectionCount', secNo);\n        var secName = $(this).attr('name');\n        sClone.find('.vis-grey-disp-ttl').text(secName);\n        DivGridSec.find('.vis-sectionAdd').append(sClone);\n        sClone = DivGridSec.find('.grid-Section:first').clone(true);\n        sClone.removeClass('displayNone');\n        if (!gridObj[\"section\" + secNo]) {\n          var totalRow = $(this).attr('row');\n          var totalCol = $(this).attr('col');\n          var grdAreaCol = $(this)[0].style.gridTemplateColumns.split(' ');\n          var grdAreaRow = $(this)[0].style.gridTemplateRows.split(' ');\n          var Obj = {};\n          for (var i = 0; i < totalRow; i++) {\n            if (grdAreaRow.length > 0 && grdAreaRow[i] != 'auto') {\n              var v = grdAreaRow[i].replace(/\\'/g, '').split(/(\\d+)/).filter(Boolean);\n              Obj['row_' + i] = {\n                val: v[0],\n                msr: v[1]\n              };\n            } else {\n              Obj['row_' + i] = {\n                val: 1,\n                msr: 'auto'\n              };\n            }\n          }\n          ;\n          for (var j = 0; j < totalCol; j++) {\n            if (grdAreaCol.length > 0 && grdAreaCol[j] != 'auto') {\n              var c = grdAreaCol[j].replace(/\\'/g, '').split(/(\\d+)/).filter(Boolean);\n              Obj['col_' + j] = {\n                val: c[0],\n                msr: c[1]\n              };\n            } else {\n              Obj['col_' + j] = {\n                val: 1,\n                msr: 'auto'\n              };\n            }\n          }\n          Obj[\"sectionNo\"] = secNo;\n          Obj[\"sectionName\"] = secName;\n          Obj[\"rowGap\"] = 0;\n          Obj[\"colGap\"] = 0;\n          Obj[\"totalRow\"] = totalRow;\n          Obj[\"totalCol\"] = totalCol;\n          gridObj[\"section\" + secNo] = Obj;\n        }\n      });\n      DivGridSec.find('.vis-sectionAdd').sortable({\n        disabled: false,\n        update: function (event, ui) {\n          var sectionCount = ui.item.attr('sectioncount');\n          var end_pos = ui.item.index();\n          var next = ui.item.next().attr('sectioncount');\n          if (next) {\n            DivViewBlock.find('[sectioncount=\"' + next + '\"]').before(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n          } else {\n            var pre = ui.item.prev().attr('sectioncount');\n            DivViewBlock.find('[sectioncount=\"' + pre + '\"]').after(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n          }\n        }\n      });\n      DivGridSec.find('.section-active .vis-grey-disp-el').click();\n      DivGridSec.find('.vis-grey-disp-el-xross').eq(1).hide();\n    };\n    function grdsecMousehover() {\n      var grSec = activeSection;\n      grSec.find('.grdDiv').unbind('mouseover');\n      grSec.find('.grdDiv').mouseover(function (e) {\n        if (mdown && $(this).find('.vis-split-cell').length == 0) {\n          selectTo($(this));\n        }\n      });\n    }\n\n    /**\r\n     * Apply row column grid css\r\n     * @param {any} r row\r\n     * @param {any} c column\r\n     */\n    function gridCss(r, c) {\n      if (!r) {\n        r = 0;\n      }\n      if (!c) {\n        c = 0;\n      }\n      var secNo = DivGridSec.find('.section-active').attr('sectionCount');\n      var secName = DivGridSec.find('.section-active .vis-grey-disp-ttl').text();\n      var Obj = {};\n      var rowCss = \"\";\n      DivGridSec.find('.rowBox:not(:first)').each(function (i) {\n        if (i == 0) {\n          $(this).find('.grdRowDel').hide();\n        }\n        if ($(this).find('select :selected').val() == 'auto') {\n          rowCss += $(this).find('select :selected').val() + ' ';\n        } else {\n          rowCss += $(this).find('input').val() + '' + $(this).find('select :selected').val() + ' ';\n        }\n        Obj['row_' + i] = {\n          val: $(this).find('input').val(),\n          msr: $(this).find('select :selected').val()\n        };\n      });\n      var colCss = \"\";\n      DivGridSec.find('.colBox:not(:first)').each(function (i) {\n        if (i == 0) {\n          $(this).find('.grdColDel').hide();\n        }\n        if ($(this).find('select :selected').val() == 'auto') {\n          colCss += $(this).find('select :selected').val() + ' ';\n        } else {\n          colCss += $(this).find('input').val() + '' + $(this).find('select :selected').val() + ' ';\n        }\n        Obj['col_' + i] = {\n          val: $(this).find('input').val(),\n          msr: $(this).find('select :selected').val()\n        };\n      });\n      var totalRow = DivGridSec.find('.rowBox:not(:first)').length;\n      var totalCol = DivGridSec.find('.colBox:not(:first)').length;\n      Obj[\"sectionNo\"] = secNo;\n      Obj[\"sectionName\"] = secName;\n      Obj[\"rowGap\"] = txtRowGap.val();\n      Obj[\"colGap\"] = txtColGap.val();\n      Obj[\"totalRow\"] = totalRow;\n      Obj[\"totalCol\"] = totalCol;\n      gridObj[\"section\" + secNo] = Obj;\n      var grSec = activeSection;\n      grSec.attr(\"row\", totalRow);\n      grSec.attr(\"col\", totalCol);\n      grSec.css({\n        'grid-template-columns': colCss,\n        'grid-template-rows': rowCss,\n        'gap': txtRowGap.val() + 'px ' + txtColGap.val() + 'px'\n      });\n      var isEnter = false;\n      var ri = rowIdx;\n      var ci = colIdx;\n      if (r == -1) {\n        ri--;\n      }\n      if (c == -1) {\n        ci--;\n      }\n      var cc = 0;\n      var ps = addedColPos;\n      grSec.find('.grdDiv').each(function (index) {\n        var gArea = $(this).css('grid-area').split('/');\n        var r_start = Number($.trim(gArea[0]));\n        var r_end = Number($.trim(gArea[2]));\n        var c_start = Number($.trim(gArea[1]));\n        var c_end = Number($.trim(gArea[3]));\n        var rowPosition = Math.floor(index / totalCol) + 1;\n        if (rowIdx != null) {\n          if (rowIdx > r_start - 1 && rowIdx < r_end - 1) {\n            $(this).css('grid-area', r_start + '/' + c_start + '/' + (r_end + r) + '/' + c_end);\n            isEnter = true;\n          }\n          if (isEnter && r > 0) {\n            for (var i = Number(r_start); i <= Number(r_end); i++) {\n              for (var j = c_start; j < c_end; j++) {\n                var pos = totalCol * i + j;\n                grSec.find('.grdDiv').eq(pos - 1).css('display', 'none');\n              }\n              if (rowIdx == i) {\n                break;\n              }\n            }\n            isEnter = false;\n            rowIdx = null;\n          }\n        } else if (colIdx != null) {\n          if (colIdx > c_start - 1 && colIdx < c_end - 1) {\n            $(this).css('grid-area', r_start + '/' + c_start + '/' + r_end + '/' + (c_end + c));\n            isEnter = true;\n            grSec.find('.grdDiv').eq(ps[cc]).css('display', 'none');\n          }\n          cc++;\n          if (isEnter && c > 0) {\n            for (var i = 0; i < addedColPos.length; i++) {\n              var rowPos = Math.floor(addedColPos[i] / totalCol) + 1;\n              if (rowPos > r_start - 1 && rowPos < r_end) {\n                grSec.find('.grdDiv').eq(addedColPos[i]).css('display', 'none');\n              }\n            }\n            isEnter = false;\n            //colIdx = null;\n            addedColPos = [];\n          }\n        }\n        gArea = $(this).css('grid-area').split('/');\n        r_start = Number($.trim(gArea[0]));\n        r_end = Number($.trim(gArea[2]));\n        c_start = Number($.trim(gArea[1]));\n        c_end = Number($.trim(gArea[3]));\n        var colposition = index % totalCol + 1;\n        if ($(this).find('.vis-split-cell').length == 0) {\n          $(this).css('grid-area', rowPosition + '/' + colposition + '/' + (rowPosition + 1) + '/' + (colposition + 1));\n        } else if (c != 0) {\n          if (c > 0) {\n            if (colposition > ci) {\n              $(this).css('grid-area', r_start + '/' + (c_start + c) + '/' + r_end + '/' + (c_end + c));\n            }\n          } else {\n            if (colposition > ci) {\n              $(this).css('grid-area', r_start + '/' + (c_start - 1) + '/' + r_end + '/' + (c_end - 1));\n            }\n          }\n        } else if (r != 0) {\n          if (r > 0) {\n            if (rowPosition > ri) {\n              $(this).css('grid-area', r_start + r + '/' + c_start + '/' + (r_end + r) + '/' + c_end);\n            }\n          } else {\n            if (rowPosition > ri) {\n              $(this).css('grid-area', r_start - 1 + '/' + c_start + '/' + (r_end - 1) + '/' + c_end);\n            }\n          }\n        }\n      });\n      colIdx = null;\n    }\n\n    /**\r\n     * Create grid layout\r\n     * */\n    function createGrid() {\n      var rowBox = DivGridSec.find('.rowBox');\n      var colBox = DivGridSec.find('.colBox');\n      var totalRow = rowBox.length - 1;\n      var totalCol = colBox.length - 1;\n      var grSec = activeSection;\n      if (totalCol > 0 && totalRow > 0) {\n        var oldrow = grSec.attr('row');\n        var oldcol = grSec.attr('col');\n        if (oldcol != totalCol && !isNewSection) {\n          for (var r = 1; r <= oldrow; r++) {\n            var pos = r * oldcol + (r - 1);\n            grSec.find('.grdDiv').eq(pos - 1).after(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n          }\n        } else {\n          var totalDiv = totalRow * totalCol - grSec.find('.grdDiv').length;\n          for (var i = 0; i < totalDiv; i++) {\n            grSec.append(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n          }\n        }\n        grdsecMousehover();\n        isNewSection = false;\n      }\n      gridCss();\n    }\n    function createGridRowCol() {\n      DivGridSec.find('.rowBox:not(:first)').remove();\n      var secNo = DivGridSec.find('.section-active').attr('sectionCount');\n      var section = gridObj[\"section\" + secNo];\n      var rClone = DivGridSec.find('.rowBox:first').clone(true);\n      rClone.show();\n      DivGridSec.find('.colBox:not(:first)').remove();\n      var cClone = DivGridSec.find('.colBox:first').clone(true);\n      cClone.show();\n      if (section) {\n        for (let key in section) {\n          var item = section[key];\n          if (key.indexOf('row_') != -1) {\n            rClone.find('input').val(item.val);\n            rClone.find('select').val(item.msr);\n            DivGridSec.find('.DivRowBox').append(rClone);\n            rClone = DivGridSec.find('.rowBox:last').clone(true);\n          } else if (key.indexOf('col_') != -1) {\n            cClone.find('input').val(item.val);\n            cClone.find('select').val(item.msr);\n            DivGridSec.find('.DivColBox').append(cClone);\n            cClone = DivGridSec.find('.colBox:last').clone(true);\n          }\n        }\n        txtRowGap.val(section.rowGap);\n        txtColGap.val(section.colGap);\n        DivGridSec.find('.rowBox .grdRowDel').eq(1).hide();\n        DivGridSec.find('.colBox .grdColDel').eq(1).hide();\n      }\n    }\n    /**\r\n     * Select Cell for merge\r\n     * @param {any} cell\r\n     */\n    function selectTo(cell) {\n      var totalCol = DivGridSec.find('.colBox').length - 1;\n      var idx = activeSection.find(cell).index();\n      if (idx < 0) {\n        return;\n      }\n      var currentRow = Math.ceil((idx + 1) / totalCol) - 1;\n\n      //var row = cell.parent();\n      var cellIndex = idx - totalCol * currentRow;\n      var rowIndex = currentRow;\n      var rowStart, rowEnd, cellStart, cellEnd;\n      if (rowIndex < startRowIndex) {\n        rowStart = rowIndex;\n        rowEnd = startRowIndex;\n      } else {\n        rowStart = startRowIndex;\n        rowEnd = rowIndex;\n      }\n      if (cellIndex < startCellIndex) {\n        cellStart = cellIndex;\n        cellEnd = startCellIndex;\n      } else {\n        cellStart = startCellIndex;\n        cellEnd = cellIndex;\n      }\n\n      //console.log(rowStart, rowEnd, cellStart, cellEnd);\n      DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n      for (var i = rowStart; i <= rowEnd; i++) {\n        for (var j = cellStart; j <= cellEnd; j++) {\n          activeSection.find('.grdDiv').eq(totalCol * i + j).addClass(\"vis-active-block\");\n        }\n      }\n      if (DivViewBlock.find('.vis-active-block').length > 1) {\n        divTopNavigator.find('[command=\"Merge\"]').parent().show();\n      } else {\n        divTopNavigator.find('[command=\"Merge\"]').parent().hide();\n      }\n    }\n\n    /**\r\n     * Merge Selected Cell\r\n     * */\n    function mergeCell() {\n      var rowStart = 0,\n        rowEnd = 0,\n        colStart = 0,\n        colEnd = 1;\n      var rowCount = 0;\n      var colCount = 0;\n      var countActive = 1;\n      var totalActive = activeSection.find('.vis-active-block').length;\n      var lastRow = 1;\n      var isRowChange = false;\n      var activColInRow = 0;\n      var colBoxLen = DivGridSec.find('.colBox').length - 1;\n      activeSection.find('.grdDiv').each(function (e) {\n        colCount++;\n        var currentRow = Math.ceil((e + 1) / colBoxLen);\n        if (currentRow != lastRow) {\n          colCount = 1;\n        }\n        lastRow = currentRow;\n        //$(this).css('grid-area', currentRow + '/' + colCount + '/' + (currentRow + 1) + '/' + (colCount+1));\n\n        if ($(this).hasClass('vis-active-block')) {\n          if (activColInRow == 0) {\n            activColInRow = currentRow;\n          }\n          if (rowStart == 0 && colStart == 0) {\n            rowStart = currentRow;\n            colStart = colCount;\n            colEnd = colCount;\n          }\n          if (activColInRow == currentRow) {\n            colEnd++;\n          }\n          if (countActive == totalActive) {\n            rowEnd = currentRow + 1;\n          }\n          countActive++;\n          $(this)[0].style.removeProperty('grid-area');\n          $(this)[0].style.removeProperty('display');\n        }\n      });\n      var unMearge = $('<span class=\"vis-split-cell\"></span>');\n      activeSection.find('.vis-active-block:not(:first)').hide().removeClass('vis-active-block');\n      activeSection.find('.vis-active-block:first').css('grid-area', rowStart + '/' + colStart + '/' + rowEnd + '/' + colEnd).append(unMearge);\n      unMearge.click(function () {\n        applyunMerge($(this).parent());\n        $(this).remove();\n      });\n    }\n\n    /**\r\n     * Split merge Cell\r\n     * @param {any} e\r\n     */\n    function applyunMerge(e) {\n      var gArea = e.css('grid-area').split('/');\n      var totalCol = DivGridSec.find('.colBox').length - 1;\n      var DVB = activeSection.find('.grdDiv');\n      for (var i = Number($.trim(gArea[0])); i < Number($.trim(gArea[2])); i++) {\n        for (var j = Number($.trim(gArea[1])); j < Number($.trim(gArea[3])); j++) {\n          var gIdx = totalCol * (i - 1) + (j - 1);\n          DVB.eq(gIdx)[0].style.removeProperty('grid-area');\n          DVB.eq(gIdx)[0].style.removeProperty('display');\n        }\n      }\n      gridCss();\n    }\n    /**\r\n     * Check style weather Apply or not\r\n     * @param {any} prop\r\n     * @param {any} val\r\n     * @param {any} htm\r\n     */\n    function checkStyle(prop, val, htm) {\n      var styles = htm.attr('style'),\n        value = false;\n      styles && styles.split(\";\").forEach(function (e) {\n        var style = e.split(\":\");\n        if (val && $.trim(style[0]) === prop && $.trim(style[1]) === val) {\n          value = true;\n        } else if (!val && $.trim(style[0]) === prop) {\n          value = true;\n        }\n      });\n      return value;\n    }\n\n    /**\r\n     * Apply css style on viewblock\r\n     * @param {any} command\r\n     * @param {any} styleValue\r\n     */\n    function applycommand(command, styleValue) {\n      DivViewBlock.css({\n        'width': DivCradStep2.find('.vis-cardViewTemplateHead')[0].offsetWidth,\n        'overflow': 'auto'\n      });\n\n      //isChange = true;\n      //if (isChange && AD_HeaderLayout_ID != \"0\") {\n      //    btn_BlockCancel.show();\n      //}\n      var tag = DivViewBlock.find('.vis-active-block');\n      if (editorProp[command].proprty == \"flex-direction\") {\n        tag[0].style.removeProperty(\"display\");\n        tag.find('.fieldGroup').removeAttr('style');\n      }\n      if (command == 'maxTextmultiline') {\n        if (styleValue == \"\" || styleValue == null) {\n          tag[0].style.removeProperty('overflow');\n          tag[0].style.removeProperty('display');\n          tag[0].style.removeProperty('-webkit-box-orient');\n        } else {\n          tag.css({\n            'overflow': 'hidden',\n            'display': '-webkit-box',\n            '-webkit-box-orient': 'vertical'\n          });\n        }\n      }\n      if (command != 'gradient' && (styleValue == \"\" || styleValue == null)) {\n        tag[0].style.removeProperty(editorProp[command].proprty);\n        return;\n      }\n      if (command == 'gradient') {\n        var color1 = DivStyleSec1.find('.' + command + '1').val();\n        var color2 = DivStyleSec1.find('.' + command + '2').val();\n        var prcnt = DivStyleSec1.find('.percent1').val();\n        var prcnt2 = DivStyleSec1.find('.percent2').val();\n        var deg = DivStyleSec1.find('.grdDirection option:selected').val();\n        styleValue = 'linear-gradient(' + deg + ',' + color1 + ' ' + prcnt + '%,  ' + color2 + ' ' + prcnt2 + '%)';\n        //DivStyleSec1.find('.vis-gradient-comp').css('background', styleValue);\n        DivStyleSec1.find('[data-command=\"gradientInput\"]').val('(' + deg + ',' + color1 + ' ' + prcnt + '%,  ' + color2 + ' ' + prcnt2 + '%)');\n      }\n      if (command == 'gradientInput') {\n        styleValue = 'linear-gradient' + styleValue;\n      }\n      if (command == 'boxShadow') {\n        var x = DivStyleSec1.find('.boxX').val();\n        var y = DivStyleSec1.find('.boxY').val();\n        var b = DivStyleSec1.find('.boxB').val();\n        var c = DivStyleSec1.find('.boxC').val();\n        styleValue = x + ' ' + y + ' ' + b + ' ' + c;\n      }\n      if (editorProp[command].proprty == 'justify-content' || editorProp[command].proprty == \"align-items\" || editorProp[command].proprty == \"flex-direction\") {\n        tag.css(\"display\", \"flex\");\n        if (editorProp[command].proprty == \"flex-direction\") {\n          tag.find('.fieldGroup').css({\n            \"display\": \"flex\",\n            \"flex-direction\": $.trim(styleValue)\n          });\n        }\n      }\n      if (styleValue == 'column' || styleValue == 'column-reverse') {\n        DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').addClass('vis-disable-event');\n      } else {\n        DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').removeClass('vis-disable-event');\n      }\n      if (command == 'width' || command == 'height') {\n        var sty = tag.attr('style') + ';' + editorProp[command].proprty + ':' + $.trim(styleValue) + ' !important';\n        tag.attr('style', sty);\n      } else {\n        tag.css(editorProp[command].proprty, $.trim(styleValue));\n      }\n      templatechanges();\n    }\n\n    /**\r\n     * Fill value back to style while select any block form viewport\r\n     * @param {any} htm\r\n     */\n    function fill(htm) {\n      DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').removeClass('vis-disable-event');\n      DivStyleSec1.find('#master001_' + WindowNo + ' input').val('');\n      DivStyleSec1.find('#master001_' + WindowNo + ' select').val('');\n      DivStyleSec1.find('.gradient1').val('#000');\n      DivStyleSec1.find('.gradient2').val('#000');\n      DivStyleSec1.find('.percent1').val('0');\n      DivStyleSec1.find('.percent2').val('100');\n      DivStyleSec1.find('.grdDirection').val('to bottom');\n      DivStyleSec1.find(\"[data-command1]\").parent().removeClass('vis-hr-elm-inn-active');\n      var styles = htm.attr('style');\n      if (htm.find('sql').length > 0) {\n        txtSQLQuery.val(VIS.secureEngine.decrypt(htm.attr(\"query\")));\n      } else {\n        txtSQLQuery.val('');\n      }\n      txtCustomStyle.val(styles);\n      styles && styles.split(\";\").forEach(function (e) {\n        var style = e.split(\":\");\n        for (const a in editorProp) {\n          if ($.trim(style[0]) == 'border-left' || $.trim(style[0]) == 'border-right' || $.trim(style[0]) == 'border-top' || $.trim(style[0]) == 'border-bottom') {\n            style[0] = style[0] + '-width';\n          }\n          if ($.trim(style[0]) == $.trim(editorProp[a].proprty)) {\n            var v = $.trim(style[1]);\n            if (editorProp[a].value == '') {\n              if (a == 'width' || a == 'height') {\n                v = v.replaceAll('!important', '');\n              }\n              if (a == 'fontFamily') {\n                v = v.replaceAll('\"', '');\n              }\n              if (a == 'padding' && $.trim(v).split(' ').length > 1) {\n                chkAllPadding.prop('checked', false);\n                DivStyleSec1.find('.allPadding').addClass('displayNone');\n                DivStyleSec1.find('.singlePadding').removeClass('displayNone');\n                DivStyleSec1.find(\"[data-command='paddingLeft']\").val(htm.css('padding-left'));\n                DivStyleSec1.find(\"[data-command='paddingTop']\").val(htm.css('padding-top'));\n                DivStyleSec1.find(\"[data-command='paddingRight']\").val(htm.css('padding-right'));\n                DivStyleSec1.find(\"[data-command='paddingBottom']\").val(htm.css('padding-bottom'));\n              } else if (a == 'padding') {\n                chkAllPadding.prop('checked', true);\n                DivStyleSec1.find('.allPadding').removeClass('displayNone');\n                DivStyleSec1.find('.singlePadding').addClass('displayNone');\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              } else if (a == 'margin' && $.trim(v).split(' ').length > 1) {\n                chkAllMargin.prop('checked', false);\n                DivStyleSec1.find('.allMargin').addClass('displayNone');\n                DivStyleSec1.find('.singleMargin').removeClass('displayNone');\n                DivStyleSec1.find(\"[data-command='marginLeft']\").val(htm.css('margin-left'));\n                DivStyleSec1.find(\"[data-command='marginTop']\").val(htm.css('margin-top'));\n                DivStyleSec1.find(\"[data-command='marginRight']\").val(htm.css('margin-right'));\n                DivStyleSec1.find(\"[data-command='marginBottom']\").val(htm.css('margin-bottom'));\n              } else if (a == 'margin') {\n                chkAllMargin.prop('checked', true);\n                DivStyleSec1.find('.allMargin').removeClass('displayNone');\n                DivStyleSec1.find('.singleMargin').addClass('displayNone');\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              } else if (a == 'borderRadius' && $.trim(v).split(' ').length > 1) {\n                chkAllBorderRadius.prop('checked', false);\n                DivStyleSec1.find('.allBorderRadius').addClass('displayNone');\n                DivStyleSec1.find('.singleBorderRadius').removeClass('displayNone');\n                DivStyleSec1.find(\"[data-command='borderTopLeftRadius']\").val(htm.css('border-top-left-radius'));\n                DivStyleSec1.find(\"[data-command='borderTopRightRadius']\").val(htm.css('border-top-right-radius'));\n                DivStyleSec1.find(\"[data-command='borderBottomRightRadius']\").val(htm.css('border-bottom-right-radius'));\n                DivStyleSec1.find(\"[data-command='borderBottomLeftRadius']\").val(htm.css('border-bottom-left-radius'));\n              } else if (a == 'borderRadius') {\n                chkAllBorderRadius.prop('checked', true);\n                DivStyleSec1.find('.allBorderRadius').removeClass('displayNone');\n                DivStyleSec1.find('.singleBorderRadius').addClass('displayNone');\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              } else {\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              }\n              if (a == 'backgroundColor') {\n                DivStyleSec1.find('.vis-zero-BTopLeftBLeft:first').css('background-color', v);\n                DivStyleSec1.find(\"[data-command='\" + a + \"'][type='color']\").val(rgb2hex(v));\n              } else if (a == 'color') {\n                DivStyleSec1.find('.vis-zero-BTopLeftBLeft:last').css('background-color', v);\n                DivStyleSec1.find(\"[data-command='\" + a + \"'][type='color']\").val(rgb2hex(v));\n              } else if (a.indexOf('border') != -1 && a.indexOf('radius') == -1) {\n                var brd = htm[0].style;\n                if (brd.border == \"\") {\n                  if (brd.borderLeftWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderLeft']\").val(brd.borderLeftWidth);\n                    DivStyleSec1.find(\"[data-command='borderLeftStyle']\").val(brd.borderLeftStyle);\n                    DivStyleSec1.find(\"[data-command='borderLeftColor']\").val(rgb2hex(brd.borderLeftColor));\n                    DivStyleSec1.find(\"[data-command='borderLeftColor']\").parent().css('background-color', brd.borderLeftColor);\n                  }\n                  if (brd.borderRightWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderRight']\").val(brd.borderRightWidth);\n                    DivStyleSec1.find(\"[data-command='borderRightStyle']\").val(brd.borderRightStyle);\n                    DivStyleSec1.find(\"[data-command='borderRightColor']\").val(rgb2hex(brd.borderRightColor));\n                    DivStyleSec1.find(\"[data-command='borderRightColor']\").parent().css('background-color', brd.borderRightColor);\n                  }\n                  if (brd.borderTopWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderTop']\").val(brd.borderTopWidth);\n                    DivStyleSec1.find(\"[data-command='borderTopStyle']\").val(brd.borderTopStyle);\n                    DivStyleSec1.find(\"[data-command='borderTopColor']\").val(rgb2hex(brd.borderTopColor));\n                    DivStyleSec1.find(\"[data-command='borderTopColor']\").parent().css('background-color', brd.borderTopColor);\n                  }\n                  if (brd.borderBottomWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderBottom']\").val(brd.borderBottomWidth);\n                    DivStyleSec1.find(\"[data-command='borderBottomStyle']\").val(brd.borderBottomStyle);\n                    DivStyleSec1.find(\"[data-command='borderBottomColor']\").val(rgb2hex(brd.borderBottomColor));\n                    DivStyleSec1.find(\"[data-command='borderBottomColor']\").parent().css('background-color', brd.borderBottomColor);\n                  }\n                } else {\n                  var rgb = v.split('rgb');\n                  if (rgb.length > 1) {\n                    v = v.replace('rgb' + rgb[1], rgb2hex('rgb' + rgb[1]));\n                  }\n                  DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n                }\n                if (brd.border == \"\" && (brd.borderTopWidth != \"\" || brd.borderRightWidth != \"\" || brd.borderTopWidth != \"\" || brd.borderBottomWidth != \"\")) {\n                  chkAllBorder.prop('checked', false);\n                  DivStyleSec1.find('.allBorder').addClass('displayNone');\n                  DivStyleSec1.find('.singleBorder').removeClass('displayNone');\n                } else {\n                  chkAllBorder.prop('checked', true);\n                  DivStyleSec1.find('.allBorder').removeClass('displayNone');\n                  DivStyleSec1.find('.singleBorder').addClass('displayNone');\n                }\n              }\n              break;\n            } else {\n              if (editorProp[a].value == v) {\n                DivStyleSec1.find(\"[data-command1='\" + a + \"']\").parent().addClass('vis-hr-elm-inn-active');\n                break;\n              }\n            }\n          }\n        }\n      });\n      if (DivStyleSec1.find(\"[data-command='flexDirection'] option:selected\").val() == 'column' || DivStyleSec1.find(\"[data-command='flexDirection'] option:selected\").val() == 'column-reverse') {\n        DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').addClass('vis-disable-event');\n      }\n    }\n    /**\r\n     * Convert color from RGB To\r\n     * @param {any} rgb\r\n     */\n    function rgb2hex(rgb) {\n      try {\n        if (/^#[0-9A-F]{6}$/i.test(rgb)) return rgb;\n        rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n        function hex(x) {\n          return (\"0\" + parseInt(x).toString(16)).slice(-2);\n        }\n        return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n      } catch (error) {\n        return rgb;\n      }\n    }\n\n    /**\r\n     * Unlink field which is linked\r\n     * @param {any} fieldName\r\n     * @param {any} itm\r\n     */\n    function unlinkField(fieldName, itm) {\n      itm.closest('.fieldGroup').remove();\n      itm.remove();\n      divTopNavigator.hide();\n    }\n\n    /** Get System Template */\n    function getTemplateDesign() {\n      IsBusy(true);\n      var url = VIS.Application.contextUrl + \"CardView/GetSystemTemplateDesign\";\n      DivTemplate.find('.mainTemplate[templateid=\"0\"]').parent().click();\n      DivTemplate.find('.vis-cardSingleViewTemplate:not(:first)').remove();\n      var obj = {};\n      $.ajax({\n        type: \"POST\",\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify(obj),\n        success: function (data) {\n          var result = JSON.parse(data);\n          for (var i = 0; i < result.length; i++) {\n            DivTemplate.find('.vis-cardTemplateContainer').append($(result[i].template));\n          }\n          IsBusy(false);\n          if (DivTemplate.find('.vis-cardSingleViewTemplate:not(:hidden)').length == 1) {\n            DivTemplate.find('.vis-noTemplateIcon').show();\n          } else {\n            DivTemplate.find('.vis-noTemplateIcon').hide();\n          }\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        },\n        complete: function () {\n          DivTemplate.find('.vis-cardSingleViewTemplate').click(function (e) {\n            if ($(e.target).hasClass('chkMark')) {\n              return;\n            } else {\n              if ($(e.target).index() == 0) {\n                btnExport.hide();\n              } else {\n                btnExport.show();\n              }\n              DivTemplate.find('.vis-cardSingleViewTemplate').removeClass('vis-active-template');\n              $(this).addClass('vis-active-template');\n              DivTemplate.find('.chkMark').prop('checked', false);\n              $(this).find('.chkMark').prop('checked', true);\n            }\n            root.find('.chkMark').change();\n          });\n          DivTemplate.find('.vis-deleteTemplate').click(function () {\n            deleteTemplate(Number($(this).next().attr('templateID')), $(this));\n          });\n          scaleTemplate();\n          $.each(root.find('[issystemtemplate=\"Y\"]:not(:first)'), function () {\n            var chkdiv = '<div style=\"position: absolute;left: 5px;top: 5px;z-index:9\"><input type=\"checkbox\" value=\"' + $(this).find('.mainTemplate').attr('templateid') + '\" class=\"pull-right vis-styledCheckbox m-0 chkMark\" style=\"width:20px;height:20px;position: absolute;\" ><label></label></div>';\n            $(this).append(chkdiv);\n          });\n          checkModuleExported();\n          importcheckBoxEvent();\n        }\n      });\n    }\n    function getTemplateCategory() {\n      cmbTemplateCategory.find('option').remove();\n      cmbViwBlockTemplateCategory.find('option').remove();\n      cmbTemplateCategory.append('<option value=\"\">All</option>');\n      cmbViwBlockTemplateCategory.append('<option value=\"\">--Select Category--</option>');\n      $.ajax({\n        type: \"POST\",\n        url: VIS.Application.contextUrl + \"CardView/GetTemplateCategory\",\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: {},\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            for (var i = 0; i < result.length; i++) {\n              cmbTemplateCategory.append('<option value=\"' + result[i].TemplateCategoryID + '\">' + result[i].Name + '</option>');\n              cmbViwBlockTemplateCategory.append('<option value=\"' + result[i].TemplateCategoryID + '\">' + result[i].Name + '</option>');\n            }\n          }\n          IsBusy(false);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        }\n      });\n    }\n    /**\r\n     * Save Template\r\n     * @param {any} e\r\n     */\n    function saveTemplate(e) {\n      e.preventDefault();\n      if (txtTemplateName.val() == \"\") {\n        VIS.ADialog.error(\"FillMandatory\", true, \"Template Name\");\n        return false;\n      }\n\n      //if (cmbViwBlockTemplateCategory.find('option:selected').val() == \"\" || cmbViwBlockTemplateCategory.find('option:selected').val() == null) {\n      //    VIS.ADialog.error(\"FillMandatory\", true, \"Template Category\");\n      //    return false;\n      //}\n\n      var isExist = false;\n      if (AD_HeaderLayout_ID == 0) {\n        DivTemplate.find('.mainTemplate').each(function () {\n          if ($(this).attr('name') && $.trim($(this).attr('name').toUpperCase()) == $.trim(txtTemplateName.val().toUpperCase())) {\n            isExist = true;\n            VIS.ADialog.error(\"TempalteAlreadyExist\", true, \"\");\n            return false;\n          }\n        });\n      }\n      if (isExist) {\n        return false;\n      }\n      IsBusy(true);\n      var fieldObj = [];\n      var seq = 10;\n      var cardSection = [];\n      cardViewColArray = [];\n      DivViewBlock.find('.grdDiv:not(:hidden)').each(function (index) {\n        var gridArea = $(this).css('grid-area').split('/');\n        var secNo = $(this).closest('.vis-wizard-section').attr(\"sectioncount\");\n        gridObj['section' + secNo][\"style\"] = $(this).closest('.vis-wizard-section').attr(\"style\");\n        gridObj['section' + secNo][\"sectionID\"] = $(this).closest('.vis-wizard-section').attr(\"sectionid\") || 0;\n        var sectionSeq = ($(this).closest('.vis-wizard-section').index() + 1) * 10;\n        gridObj['section' + secNo][\"sectionSeq\"] = sectionSeq;\n        gridObj['section' + secNo][\"sectionName\"] = $(this).closest('.vis-wizard-section').attr(\"name\");\n        var columnSQL = null;\n        if ($(this).find('sql').length > 0) {\n          columnSQL = $(this).attr('query') || null;\n        }\n        if ($(this).find('.fieldGroup:not(:hidden)').length > 0) {\n          $(this).find('.fieldGroup:not(:hidden)').each(function (index) {\n            var contentValue = \"\";\n            var contentLabel = $(this).find('.fieldLbl').text();\n            var valueStyle = \"\";\n            if ($(this).find('.imgField').length > 0 && $(this).find('.fieldValue').length > 0) {\n              if ($(this).find('.imgField').attr('src')) {\n                contentValue = '<img class=\"imgField\" src=\"' + $(this).find('.imgField').attr('src') + '\" style=\"' + $(this).find('.imgField').attr('style') + '\">';\n              } else {\n                var cls = $(this).find('.imgField').attr('class');\n                cls = cls.replace('vis-active-block', '');\n                contentValue = '<i class=\"imgField ' + cls + '\" style=\"' + $(this).find('.imgField').attr('style') + '\"></i>';\n              }\n              contentValue += ' |' + $(this).find('.fieldValue').text();\n              var isBR = $(this).find('br').length;\n              if ($(this).find('.imgField').next('.fieldValue').length > 0) {\n                valueStyle = '@img::' + $(this).find('.imgField').attr('style') || 0;\n                if (isBR > 0) {\n                  valueStyle += '|<br>';\n                }\n                valueStyle += ' |@value::' + $(this).find('.fieldValue').attr('style') || 0;\n              } else {\n                valueStyle = '@value::' + $(this).find('.fieldValue').attr('style') || 0;\n                if (isBR > 0) {\n                  valueStyle += '|<br>';\n                }\n                valueStyle += ' |@img::' + $(this).find('.imgField').attr('style') || 0;\n              }\n            } else if ($(this).find('.imgField').length > 0) {\n              contentValue = '<img class=\"imgField\" src=\"' + $(this).find('.imgField').attr('src') + '\" style=\"' + $(this).find('.imgField').attr('style') + '\">';\n              valueStyle = '@value::' + $(this).find('.fieldValue').attr('style') || 0;\n              valueStyle += ' |@img::' + $(this).find('.imgField').attr('style') || 0;\n            } else {\n              contentValue = $(this).find('.fieldValue').text();\n              valueStyle = $(this).find('.fieldValue').attr('style') || '';\n            }\n            var hideFieldIcon = true;\n            if ($(this).find('.fa-star').length == 0) {\n              hideFieldIcon = true;\n            }\n            if ($(this).find('.fieldLbl').attr('showfieldicon')) {\n              hideFieldIcon = $(this).find('.fieldLbl').attr('showfieldicon') == 'true' ? true : false;\n            }\n            obj1 = {\n              cardFieldID: $(this).attr('cardfieldid'),\n              sectionNo: sectionSeq,\n              //secNo * 10,\n              rowStart: $.trim(gridArea[0]),\n              rowEnd: $.trim(gridArea[2]),\n              colStart: $.trim(gridArea[1]),\n              colEnd: $.trim(gridArea[3]),\n              seq: seq,\n              style: $(this).closest('.grdDiv').attr('style'),\n              fieldID: $(this).find('.fieldLbl').attr('fieldid'),\n              valueStyle: valueStyle,\n              fieldStyle: $(this).find('.fieldLbl').attr('style') || '',\n              hideFieldIcon: hideFieldIcon,\n              hideFieldText: $(this).find('.fieldLbl').attr('showfieldtext') == 'true' ? true : false,\n              columnSQL: columnSQL,\n              contentFieldValue: contentValue,\n              contentFieldLabel: contentLabel\n            };\n\n            //var f = {}\n            //f.AD_Field_ID = obj1.fieldID;\n            //f.CardViewID = 0;\n            //cardViewColArray.push(f);\n\n            fieldObj.push(obj1);\n          });\n        } else {\n          var obj1 = {\n            cardFieldID: null,\n            sectionNo: sectionSeq,\n            rowStart: $.trim(gridArea[0]),\n            rowEnd: $.trim(gridArea[2]),\n            colStart: $.trim(gridArea[1]),\n            colEnd: $.trim(gridArea[3]),\n            seq: seq,\n            style: $(this).attr('style'),\n            fieldID: null,\n            valueStyle: \"\",\n            fieldStyle: '',\n            hideFieldIcon: false,\n            hideFieldText: false,\n            columnSQL: columnSQL,\n            contentFieldValue: null,\n            contentFieldLable: null\n          };\n          fieldObj.push(obj1);\n        }\n        seq += 10;\n      });\n      Object.keys(gridObj).forEach(function (key) {\n        var fobj = {\n          sectionName: gridObj[key].sectionName,\n          sectionID: gridObj[key].sectionID,\n          sectionNo: gridObj[key].sectionSeq,\n          style: gridObj[key].style,\n          totalRow: gridObj[key].totalRow,\n          totalCol: gridObj[key].totalCol,\n          rowGap: gridObj[key].rowGap,\n          colGap: gridObj[key].colGap\n        };\n        cardSection.push(fobj);\n      });\n      var finalobj = {\n        CardViewID: 0,\n        templateID: AD_HeaderLayout_ID || 0,\n        templateName: txtTemplateName.val(),\n        templateCategory: cmbViwBlockTemplateCategory.find('option:selected').val() || 0,\n        style: DivViewBlock.find('.vis-viewBlock').attr('style'),\n        cardSection: cardSection,\n        cardTempField: fieldObj,\n        isSystemTemplate: 'Y',\n        refTempID: 0\n      };\n      var url = VIS.Application.contextUrl + \"CardView/SaveCardTemplate\";\n      $.ajax({\n        type: \"POST\",\n        async: false,\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify(finalobj),\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (isNaN(result)) {\n            toastr.error(result, '', {\n              timeOut: 3000,\n              \"positionClass\": \"toast-top-center\",\n              \"closeButton\": true\n            });\n            IsBusy(false);\n            return;\n          }\n          AD_HeaderLayout_ID = result;\n          isSystemTemplate = 'Y';\n          toastr.success(VIS.Msg.getMsg('SavedSuccessfully'), '', {\n            timeOut: 3000,\n            \"positionClass\": \"toast-top-center\",\n            \"closeButton\": true\n          });\n          IsBusy(false);\n          var importtemp = root.find('.mainTemplate[templateid=\"' + result + '\"] ').closest('.vis-cardSingleViewTemplate').find('.vis-removeExport');\n          if (importtemp.length > 0) {\n            var splitID = importtemp.data('id').split('|');\n            var data = {\n              moduleId: splitID[1],\n              _strRecordID: splitID[0]\n            };\n            var res = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"CardView/SaveCardExportData\", data);\n          }\n          getTemplateDesign();\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        }\n      });\n    }\n\n    /** check is Module Exported or not\r\n     * */\n    function checkModuleExported() {\n      root.find('.vis-removeExport').remove();\n      var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"CardView/GetExportTemplateIDs\", null, null);\n      if (dr != null) {\n        for (var i in dr) {\n          root.find('.mainTemplate[templateid=\"' + dr[i].split('|')[0] + '\"]').closest('.vis-cardSingleViewTemplate').prepend('<i data-id=\"' + dr[i] + '\" class=\"vis vis-remove-export-data vis-removeExport\" title=\"Remove export\" style=\"\"></i>');\n        }\n        root.find('.vis-removeExport').click(function () {\n          var $this = $(this);\n          var tempID = $this.data('id').split('|')[0];\n          VIS.ADialog.confirm(\"SureWantToRemove\", true, \"\", VIS.Msg.getMsg(\"Confirm\"), function (result) {\n            if (result) {\n              var obj = {\n                templateID: tempID\n              };\n              var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"CardView/RemoveExportTemplate\", obj, null);\n              if (dr != null && dr > 0) {\n                $this.remove();\n              }\n            }\n          });\n        });\n      }\n    }\n    this.getRoot = function () {\n      return root;\n    };\n\n    /**Scale Template to fit in block */\n    function scaleTemplate() {\n      DivTemplate.find('.vis-cardSingleViewTemplate').each(function () {\n        var pH = $(this).height();\n        var pW = $(this).width();\n        var inner = $(this).find('.mainTemplate');\n        var iH = inner.height();\n        var iW = inner.width();\n        var zoom = 1;\n        var hR = pH / iH;\n        var wR = pW / iW;\n        if (hR > wR) {\n          zoom = wR;\n        } else {\n          zoom = hR;\n        }\n        inner.css('zoom', zoom);\n      });\n    }\n    function addImgValue(element, isText, isEdit, InputIcon) {\n      var itm = '<div class=\"fieldGroup\" draggable=\"true\">';\n      if ($.trim(InputIcon.val()).length > 0) {\n        if (!isEdit) {\n          if (isText) {\n            itm += '<span class=\"fieldLbl\" title=\"Image+Text\" contenteditable=\"true\">Label</span>';\n            itm += '<i class=\"imgField ' + $.trim(InputIcon.val()) + '\"></i>';\n            itm += '<span class=\"fieldValue\" contenteditable=\"true\">:Value</span>';\n            itm += '</div>';\n            var blok = DivViewBlock.find('.vis-active-block');\n            if (blok.hasClass('grdDiv')) {\n              blok.append($(itm));\n            }\n            templatechanges();\n          }\n        } else {\n          var dvb = DivViewBlock.find('.vis-active-block');\n          dvb.removeAttr('class');\n          dvb.addClass('imgField vis-active-block');\n          dvb.addClass($.trim(InputIcon.val()));\n          templatechanges();\n        }\n        return;\n      }\n      var MAX_WIDTH = 320;\n      var MAX_HEIGHT = 180;\n      var MIME_TYPE = \"image/jpeg\";\n      var QUALITY = 0.7;\n      var file = element[0].files[0];\n      var blobURL = URL.createObjectURL(file);\n      var img = new Image();\n      img.src = blobURL;\n      img.onerror = function () {\n        URL.revokeObjectURL(this.src);\n        // Handle the failure properly\n        console.log(\"Cannot load image\");\n      };\n      img.onload = function () {\n        URL.revokeObjectURL(this.src);\n        var wh = calculateSize(img, MAX_WIDTH, MAX_HEIGHT);\n        newWidth = wh.width;\n        newHeight = wh.height;\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = newWidth;\n        canvas.height = newHeight;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0, newWidth, newHeight);\n        canvas.toBlob(function (blob) {}, MIME_TYPE, QUALITY);\n        //console.log(canvas.toDataURL());  \n        if (!isEdit) {\n          if (isText) {\n            itm += '<span class=\"fieldLbl\" title=\"Image+Text\" contenteditable=\"true\">Label</span>';\n            itm += '<img class=\"imgField\" style=\"width:30px; height:30px\" src=\"' + canvas.toDataURL() + '\">';\n            itm += '<span class=\"fieldValue\" contenteditable=\"true\">:Value</span>';\n          } else {\n            itm += '<span class=\"fieldLbl displayNone\" title=\"Image\" contenteditable=\"true\" showfieldtext=\"true\" >Label</span>';\n            itm += '<img class=\"imgField\" style=\"width:100px; height:100px\" src=\"' + canvas.toDataURL() + '\">';\n          }\n          itm += '</div>';\n          var blok = DivViewBlock.find('.vis-active-block');\n          if (blok.hasClass('grdDiv')) {\n            blok.append($(itm));\n          }\n          templatechanges();\n        } else {\n          DivViewBlock.find('.vis-active-block').attr('src', canvas.toDataURL());\n          templatechanges();\n        }\n      };\n    }\n    ;\n    function calculateSize(img, maxWidth, maxHeight) {\n      var width = img.width;\n      var height = img.height;\n\n      // calculate the width and height, constraining the proportions\n      if (width > height) {\n        if (width > maxWidth) {\n          height = Math.round(height * maxWidth / width);\n          width = maxWidth;\n        }\n      } else {\n        if (height > maxHeight) {\n          width = Math.round(width * maxHeight / height);\n          height = maxHeight;\n        }\n      }\n      return {\n        width: width,\n        height: height\n      };\n    }\n    function deleteTemplate(tempID, e) {\n      VIS.ADialog.confirm(\"SureWantToDelete\", true, \"\", VIS.Msg.getMsg(\"Confirm\"), function (result) {\n        if (result) {\n          var url = VIS.Application.contextUrl + \"CardView/DeleteTemplate\";\n          $.ajax({\n            type: \"POST\",\n            async: false,\n            url: url,\n            dataType: \"json\",\n            contentType: 'application/json; charset=utf-8',\n            data: JSON.stringify({\n              'tempID': tempID\n            }),\n            success: function (data) {\n              var result = JSON.parse(data);\n              e.parent().remove();\n            },\n            error: function (errorThrown) {\n              alert(errorThrown.statusText);\n            }\n          });\n        }\n      });\n    }\n    function templatechanges() {\n      var Chtml = DivViewBlock.find('.vis-viewBlock').html();\n      if (cur_history_index < history.length - 1) {\n        history = history.slice(0, cur_history_index + 1);\n        cur_history_index++;\n        //btnRedo.attr(\"disabled\", \"disabled\");\n      }\n      var cur_canvas = JSON.stringify(Chtml);\n      if (cur_canvas != history[cur_history_index] || force == 1) {\n        history.push(cur_canvas);\n        if (history.length > 11) {\n          history.shift();\n        }\n        cur_history_index = history.length - 1;\n      }\n      DivCradStep2.find('.vis-v-rowcol').hide();\n      btnRedo.attr(\"disabled\", \"disabled\");\n      btnUndo.removeAttr(\"disabled\");\n    }\n    function ViewBlockAddDelRowCol(e) {\n      DivCradStep2.find('.vis-v-rowcol').show();\n      var idx = $(e.target).index();\n      var rc = getRowColPostion(idx);\n      if (rc.rowNo == 1) {\n        btnVdelrow.hide();\n      }\n      if (rc.colNo == 1) {\n        btnVdelCol.hide();\n      }\n      btnVaddrow.css({\n        'left': $(e.target).closest('.vis-viewBlock')[0].offsetLeft - 38,\n        'top': $(e.target).height() + $(e.target)[0].offsetTop\n      });\n      btnVdelrow.css({\n        'left': $(e.target).closest('.vis-viewBlock')[0].offsetLeft - 20,\n        'top': $(e.target).height() + $(e.target)[0].offsetTop\n      });\n      btnVaddCol.css({\n        'top': $(e.target).closest('.vis-viewBlock')[0].offsetTop - 20,\n        'left': $(e.target).width() - 8 + $(e.target)[0].offsetLeft\n      });\n      btnVdelCol.css({\n        'top': $(e.target).closest('.vis-viewBlock')[0].offsetTop - 20,\n        'left': $(e.target).width() - 5 + $(e.target)[0].offsetLeft + 15\n      });\n    }\n    function getRowColPostion(idx) {\n      var totalCol = DivGridSec.find('.colBox').length - 1;\n      var rowPosition = Math.floor(idx / totalCol) + 1;\n      var colposition = idx % totalCol + 1;\n      return {\n        rowNo: rowPosition,\n        colNo: colposition\n      };\n    }\n\n    /** Open popup for import card template\r\n     * */\n    function markmoduleImport() {\n      rootMI = $(\"<div>\");\n      var bsyDiv = $('<div class=\"vis-busyindicatorouterwrap\"><div class=\"vis-busyindicatorinnerwrap\"><i class=\"vis-busyindicatordiv\"></i></div></div>');\n      bsyDiv[0].style.visibility = \"visible\";\n      rootMI.append(bsyDiv);\n      var contentDiv = $(\"<div>\");\n      var divMlist = $(\"<div class='vis-markmodulemainwrap'>\");\n      contentDiv.append(divMlist);\n      var divButtons = $('<div>');\n      contentDiv.append(divButtons);\n      var canceltxt = VIS.Msg.getMsg(\"Cancel\");\n      var Oktxt = VIS.Msg.getMsg(\"Ok\");\n      var btnCancel = $(\"<button class='VIS_Pref_btn-2' style='margin-top: 5px;margin-bottom: -10px;'>\").append(canceltxt);\n      var btnOk = $(\"<button class='VIS_Pref_btn-2' style='margin-top: 5px;margin-bottom: -10px;margin-right:5px'>\").append(Oktxt);\n      divButtons.append(btnCancel);\n      divButtons.append(btnOk);\n      rootMI.append(contentDiv);\n      var table = $('<table>');\n      chMI = new VIS.ChildDialog();\n      chMI.setTitle(VIS.Msg.getMsg(\"Module\"));\n      chMI.setWidth('30%');\n\n      //ch.setHeight(h);\n      chMI.setContent(rootMI);\n      chMI.onOkClick = function (e) {};\n      chMI.onCancelClick = cancel;\n      chMI.onClose = cancel;\n      chMI.show();\n      chMI.hideButtons();\n      lstModules = [];\n      var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"MarkModule/LoadModules\", null, null);\n      if (dr != null) {\n        for (var i in dr) {\n          var module = {\n            AD_ModuleInfo_ID: dr[i][\"AD_ModuleInfo_ID\"],\n            Name: dr[i][\"Name\"]\n          };\n          lstModules.push(module);\n        }\n      }\n      var strTempID = \"\";\n      $.each(root.find('.chkMark:checked'), function () {\n        strTempID += this.value + ',';\n      });\n      strTempID = strTempID.replace(/,(\\s+)?$/, '');\n      var lstExistingRec = [];\n      if (strTempID.length > 0) {\n        var data = {\n          _strRecordID: strTempID\n        };\n        var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"CardView/GetCardExportData\", data, null);\n        if (dr != null) {\n          for (var i in dr) {\n            lstExistingRec.push(dr[i]);\n          }\n        }\n      }\n      var tr = null;\n      var td = null;\n      var lbl = null;\n      var chkbox = null;\n      var lstCtrl = [];\n      if (lstExistingRec.length == 0) {\n        for (var i = 0; i < lstModules.length; i++) {\n          tr = $('<tr>');\n          td = $('<td>');\n          lbl = $('<label class=\"vis-gc-vpanel-table-label-checkbox\" style=\"display: inline-block; opacity: 1;\">');\n          chkbox = $(\"<input type='checkbox'>\");\n          lbl.append(chkbox);\n          lbl.append(lstModules[i].Name);\n          td.append(lbl);\n          tr.append(td);\n          table.append(tr);\n          var ctrlItem = {};\n          ctrlItem.Ctrl = chkbox;\n          ctrlItem.AD_ModuleInfo_ID = lstModules[i].AD_ModuleInfo_ID;\n          lstCtrl.push(ctrlItem);\n          //htmlstr += \"<tr><td><label class='vis-gc-vpanel-table-label-checkbox' style='display: inline-block; opacity: 1;'><input type='checkbox'>\" + lstModules[i].Name + \"</label></td></tr>\";\n        }\n      } else {\n        //for (var i = 0; i < lstExistingRec.length; i++) {\n        for (var j = 0; j < lstModules.length; j++) {\n          tr = $('<tr>');\n          td = $('<td>');\n          lbl = $('<label class=\"vis-gc-vpanel-table-label-checkbox\" style=\"display: inline-block; opacity: 1;\">');\n          if (lstExistingRec.indexOf(lstModules[j].AD_ModuleInfo_ID) > -1) {\n            chkbox = $(\"<input type='checkbox' checked>\");\n            // htmlstr += \"<tr><td><label class='vis-gc-vpanel-table-label-checkbox' style='display: inline-block; opacity: 1;'><input type='checkbox' checked>\" + lstModules[j].Name + \"</label></td></tr>\";\n          } else {\n            chkbox = $(\"<input type='checkbox'>\");\n            // htmlstr += \"<tr><td><label class='vis-gc-vpanel-table-label-checkbox' style='display: inline-block; opacity: 1;'><input type='checkbox'>\" + lstModules[j].Name + \"</label></td></tr>\";\n          }\n          lbl.append(chkbox);\n          lbl.append(lstModules[j].Name);\n          td.append(lbl);\n          tr.append(td);\n          table.append(tr);\n          var ctrlItem = {};\n          ctrlItem.Ctrl = chkbox;\n          ctrlItem.AD_ModuleInfo_ID = lstModules[j].AD_ModuleInfo_ID;\n          lstCtrl.push(ctrlItem);\n          //}\n        }\n      }\n      divMlist.append(table);\n      bsyDiv[0].style.visibility = \"hidden\";\n      btnOk.on(\"click\", function () {\n        bsyDiv[0].style.visibility = \"visible\";\n        var lstselectedID = [];\n        // var selectedID = '';\n        for (var i = 0; i < lstCtrl.length; i++) {\n          var chkbox = lstCtrl[i].Ctrl;\n          if (chkbox.prop('checked')) {\n            lstselectedID.push(lstCtrl[i].AD_ModuleInfo_ID);\n            // selectedID += lstCtrl[i].AD_ModuleInfo_ID + ',';\n          }\n        }\n        var data = {\n          moduleId: lstselectedID,\n          //_recordID: _recordID,\n          //_tableID: _tableID,\n          _strRecordID: strTempID\n        };\n        var res = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"CardView/SaveCardExportData\", data);\n        if (res.result != \"OK\") {\n          alert(res.result);\n        } else {\n          cancel();\n          toastr.success(VIS.Msg.getMsg('SavedSuccessfully'), '', {\n            timeOut: 3000,\n            \"positionClass\": \"toast-top-center\",\n            \"closeButton\": true\n          });\n          checkModuleExported();\n        }\n        bsyDiv[0].style.visibility = \"hidden\";\n      });\n      btnCancel.on(\"click\", function () {\n        cancel();\n      });\n    }\n    this.show = function (istext, isEdit) {\n      var mainDiv = $('<div>');\n      var input = $('<input type=\"file\" name=\"\" maxlength=\"50\" style=\"height: 45px;padding: 10px\" class=\"\" accept=\"image/*\" placeholder=\" \" data-placeholder=\"\">');\n      var lbl = $('<label for=\"\">' + VIS.Msg.getMsg(\"SelectFromFiles\") + '</label>');\n      var $root = $('<div class=\"input-group vis-input-wrap\"></div>');\n      var control = $('<div class=\"vis-control-wrap\"></div>');\n      control.append(input).append(lbl);\n      $root.append(control);\n      mainDiv.append($root);\n      IconInput = $('<input type=\"text\" name=\"\" class=\"\" placeholder=\" \" data-placeholder=\"\">');\n      if (istext) {\n        var orDiv = $('<div class=\"mb-2\"><center>OR</center></div>');\n        $root = $('<div class=\"input-group vis-input-wrap\"></div>');\n        lbl = $('<label style=\"left:10px\" for=\"\">' + VIS.Msg.getMsg(\"Icon\") + '</label>');\n        control = $('<div class=\"vis-control-wrap\"></div>');\n        control.append(IconInput).append(lbl);\n        $root.append(control);\n        mainDiv.append(orDiv).append($root);\n        mainDiv.append('<div class=\"input-group vis-input-wrap \"><div class=\"vis-control-wrap\"><p style=\"word-break: break-all\" for=\"\">' + VIS.Msg.getMsg(\"IconLinkMsg\") + '</p></div></div>');\n      }\n      input.change(function () {\n        IconInput.val('');\n        if ($(this).val().length > 0) {\n          IconInput.attr('disabled', 'disabled');\n        } else {\n          IconInput.removeAttr('disabled');\n        }\n      });\n      IconInput.change(function () {\n        input.val('');\n        if ($(this).val().length > 0) {\n          input.attr('disabled', 'disabled');\n        } else {\n          input.removeAttr('disabled');\n        }\n        if (IconInput.val().indexOf('fa-') != -1 && IconInput.val().indexOf('fa ') == -1) {\n          IconInput.val('fa ' + IconInput.val());\n        } else if (IconInput.val().indexOf('vis-') != -1 && IconInput.val().indexOf('vis ') == -1) {\n          IconInput.val('vis ' + IconInput.val());\n        }\n        //IconInput.val(IconInput.val().replace('fa ', ''));\n        //IconInput.val(IconInput.val().replace('vis ', ''));\n      });\n      ch = new VIS.ChildDialog();\n      ch.setTitle(VIS.Msg.getMsg(\"InsertImage\"));\n      ch.setWidth('30%');\n      //ch.setHeight(h);\n      ch.setContent(mainDiv);\n      ch.onOkClick = function (e) {\n        addImgValue(input, istext, isEdit, IconInput);\n        //convertImageToBase64(input, istext, isEdit);\n      };\n      ch.onCancelClick = cancel;\n      ch.onClose = cancel;\n      ch.show();\n      //ch.hideButtons();\n    };\n    function cancel() {\n      chMI.close();\n      return true;\n    }\n    ;\n    this.disposeComponent = function () {\n      self = null;\n      root.remove();\n      root = null;\n    };\n    loadUI();\n  }\n  VCTMaster.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.windowNo = windowNo;\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n  VCTMaster.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.CardTemplateMaster = VCTMaster;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/cardTemplateMaster.js?")},"./Areas/VIS/Scripts/app/Framework/cardviewdialog.js":()=>{eval(";\n(function (VIS, $) {\n  function cvd(aPanel, fromCardDialogBtn) {\n    var self = this;\n    var gc = aPanel.curGC;\n    var mTab = gc.getMTab();\n    var WindowNo = mTab.getWindowNo();\n    var cardView = gc.vCardView;\n    var AD_Window_ID = mTab.getAD_Window_ID();\n    var AD_Tab_ID = mTab.getAD_Tab_ID();\n    var AD_CardView_ID = cardView.getAD_CardView_ID();\n    var AD_GroupField_ID = cardView.getField_Group_ID();\n    var tabField = mTab.getFields();\n    var findFields = mTab.getFields().slice();\n    var control1 = null;\n    var control2 = null;\n    var divValue1 = null;\n    var cardViewColumns = [];\n    var columnFieldArray = [];\n    var cardViewColArray = [];\n    var totalTabFileds = [];\n    var orginalIncludedCols = [];\n    var cvTable = null;\n    var cardviewCondition = [];\n    var cvConditionArray = null;\n    var chkDefault = null;\n    var chkPublic = null;\n\n    //aPanel.fromCardDialogBtn = false;\n\n    var root, ch, chCopy;\n    var btnCardCustomization = null;\n    var btnChangeTemplate = null;\n    var btnSaveClose = null;\n    var DivCradStep1 = null;\n    var DivCradStep2 = null;\n    var btnLayoutSetting = null;\n    var btnFinesh = null;\n    var btnOnlySave = null;\n    var count = 1;\n    var LstCardViewCondition = null;\n    var dbResult = null;\n    var cardViewInfo = [];\n    var cardsList = null;\n    var txtCardName = null;\n    var cmbColumn = null;\n    var drpOp = null;\n    var cmbGroupField = null;\n    //var availableFeilds = null;\n    //var includedFeilds = null;\n    var groupSequenceFeilds = null;\n    var cmbOrderClause = null;\n    var sortList = null;\n    var isAsc = \"ASC\";\n    var btnCopy = null;\n    var btnEdit = null;\n    var btnDelete = null;\n    var btnCancle = null;\n    var btnNewCards = null;\n    var chkGradient = null;\n    var txtBgColor = null;\n    var DivGrdntBlock = null;\n    var txtGrdntColor1 = null;\n    var txtGrdntColor2 = null;\n    var txtGrdntPrcnt = null;\n    var txtGrdntPrcnt2 = null;\n    var cmbGrdntDirection = null;\n    var btnAddCondition = null;\n    var isEdit = false;\n    var isNewRecord = false;\n    var closeDialog = true;\n    var btnAddOrder = null;\n    var isBusyRoot = null;\n    var isSameUser = true;\n    var lastSelectedID = null;\n    var mdown = false;\n    var DivViewBlock = null;\n    var DivStyleSec1 = null;\n    var chkAllBorderRadius = null;\n    var chkAllPadding = null;\n    var chkAllMargin = null;\n    var chkAllBorder = null;\n    var DivTemplate = null;\n    var DivGridSec = null;\n    var startRowIndex = null;\n    var startCellIndex = null;\n    var txtRowGap = null;\n    var txtColGap = null;\n    var DivCardField = null;\n    var activeSection = null;\n    //var txtTemplateName = null;\n    var sectionCount = 2;\n    var AD_HeaderLayout_ID = 0;\n    var refTempID = 0;\n    var templateID = 0;\n    var templateName = null;\n    var txtCustomStyle = null;\n    var txtSQLQuery = null;\n    var CardCreatedby = null;\n    var hideShowGridSec = null;\n    var txtZoomInOut = null;\n    var divTopNavigator = null;\n    var btn_BlockCancel = null;\n    var btnTemplateBack = null;\n    var spnLastSaved = null;\n    var isChange = false;\n    var isOnlySave = false;\n    var isSystemTemplate = 'Y';\n    var isCopy = false;\n    var dragged = null;\n    var rowIdx = null;\n    var colIdx = null;\n    var addedColPos = [];\n    var isNewSection = false;\n    var isChangeTemplate = false;\n    var btnVaddrow = null;\n    var btnVaddCol = null;\n    var btnVdelrow = null;\n    var btnVdelCol = null;\n    var txtFilterField = null;\n    var btnClearFilter = null;\n    var gridObj = {};\n    var btnUndo = null;\n    var btnRedo = null;\n    var btnApply = null;\n    var cmbTemplateCategory = null;\n    var isUndoRedo = false;\n    var history = [];\n    var s_history = true;\n    var cur_history_index = 0;\n    var force = 0;\n    var newCopyCard = null;\n    var isTemplateLoaded = false;\n    var BtnRefreshTemplate = null;\n    function init() {\n      root = $('<div style=\"height:100%\"><div class=\"vis-apanel-busy vis-cardviewmainbusy\" style=\"display:block\"></div></div>');\n      isBusyRoot = $(\"<div class='vis-apanel-busy vis-cardviewmainbusy'></div> \");\n      var url = VIS.Application.contextUrl + \"CardView/GetTemplateDesign\";\n      var obj = {\n        ad_Window_ID: mTab.getAD_Window_ID(),\n        ad_Tab_ID: mTab.getAD_Tab_ID()\n      };\n\n      /** Load First Time Template\r\n       */\n      $.ajax({\n        type: \"POST\",\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify(obj),\n        success: function (data) {\n          var result = JSON.parse(data);\n          //console.log(result);\n          CardViewUI(result);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n        },\n        complete: function () {}\n      });\n    }\n\n    /**\r\n     * Busy Indigater\r\n     * @param {any} isBusy\r\n     */\n    function IsBusy(isBusy) {\n      if (isBusy && isBusyRoot != null) {\n        isBusyRoot.css({\n          \"display\": \"block\"\n        });\n      }\n      if (!isBusy && isBusyRoot != null) {\n        isBusyRoot.css({\n          \"display\": \"none\"\n        });\n      }\n    }\n    ;\n\n    // #region Step 1 Events\n\n    function events() {\n      /*Step 1 Events*/\n      btnCardCustomization.click(function (e) {\n        closeDialog = false;\n        divTopNavigator.hide();\n        count = 1;\n        DivTemplate.show();\n        DivCardFieldSec.hide();\n        DivCradStep1.hide();\n        DivCradStep2.show();\n        DivTemplate.find('.mainTemplate[templateid=\"' + AD_HeaderLayout_ID + '\"]').parent().click();\n        DivStyleSec1.hide();\n        DivCradStep2.find('.vis-two-sec-two').hide();\n        scaleTemplate();\n        if (!isNewRecord) {\n          btnLayoutSetting.click();\n        }\n      });\n      btnSaveClose.click(function (e) {\n        closeDialog = true;\n        cardViewColArray = [];\n        VIS.context.setContext(\"CardDialogLaststepSelected_\" + WindowNo, 1);\n        SaveChanges(e);\n      });\n      btnTemplateBack.click(function (e) {\n        if (AD_CardView_ID == \"undefined\") {\n          btnBack.click();\n        } else {\n          count++;\n          DivTemplate.hide();\n          DivCardFieldSec.show();\n          DivCradStep2.find('.vis-two-sec-two').show();\n          DivStyleSec1.show();\n        }\n      });\n      btnNewCard.click(function () {\n        isEdit = false;\n        isNewRecord = true;\n        resetAll();\n        enableDisable(true);\n        lastSelectedID = cardsList.find('.crd-active').attr('idx');\n        cardsList.find('.crd-active').removeClass('crd-active');\n        btnSaveClose.removeClass('vis-disable-event');\n        btnFinesh.removeClass('vis-disable-event');\n        btnOnlySave.removeClass('vis-disable-event');\n        btnChangeTemplate.removeClass('vis-disable-event');\n        AD_HeaderLayout_ID = 0;\n        refTempID = 0;\n        AD_CardView_ID = \"undefined\";\n        cmbTemplateCategory.val('');\n        DivTemplate.find('[issystemtemplate=\"Y\"]').removeClass('displayNone');\n        btnTemplateBack.text(VIS.Msg.getMsg(\"Back\"));\n        btnLayoutSetting.text(VIS.Msg.getMsg(\"NextLayout\"));\n        if (!isTemplateLoaded) {\n          getSystemTemplateDesign();\n        }\n        btnCardCustomization.click();\n      });\n      btnApply.click(function (e) {\n        closeDialog = false;\n        IsBusy(true);\n        SaveChanges(e);\n      });\n      btnCopy.click(function () {\n        newCopyCard = new cardCopyDialog();\n        newCopyCard.show();\n        newCopyCard.btnCopySave.click(function () {\n          var newcardname = newCopyCard.getName();\n          if (newcardname && newcardname.length > 0) {\n            IsBusy(true);\n            saveCopyCard(newcardname);\n          }\n        });\n        newCopyCard.btnCopyCancle.click(function () {\n          newCopyCard.close();\n        });\n      });\n      btnCancle.click(function () {\n        isNewRecord = false;\n        isEdit = true;\n        enableDisable(false);\n        cardsList.find('[idx=\"' + lastSelectedID + '\"]').click();\n      });\n      btnLayoutSetting.click(function () {\n        txtFilterField.val('');\n        DivCardField.find('.fieldLbl:not(:first)').show();\n        addSelectedTemplate();\n        count++;\n        fillcardLayoutfromTemplate();\n        DivTemplate.hide();\n        DivCardFieldSec.show();\n        DivCradStep2.find('.vis-two-sec-two').show();\n        DivStyleSec1.show();\n        if (AD_HeaderLayout_ID == 0 && DivGridSec.find('.rowBox').length == 1) {\n          DivGridSec.find('.addGridCol').click();\n          DivGridSec.find('.addGridRow').click();\n        }\n        if (AD_HeaderLayout_ID == 0 && !isCopy) {\n          DivViewBlock.find('.vis-viewBlock').css('backgroundColor', '#fff');\n        }\n        if (isCopy) {\n          setTimeout(function () {\n            btnFinesh.click();\n          }, 2000);\n        }\n        var templatePreview = DivCardFieldSec.find('.vis-templatePreview');\n        var inner = DivTemplate.find('.vis-active-template .mainTemplate').clone(true);\n        templatePreview.html(inner);\n        var pH = templatePreview.height();\n        var pW = templatePreview.width();\n        var iH = inner.height();\n        var iW = inner.width();\n        var zoom = 1;\n        var hR = pH / iH;\n        var wR = pW / iW;\n        if (hR > wR) {\n          zoom = wR;\n        } else {\n          zoom = hR;\n        }\n        templatePreview.find('.mainTemplate').css(\"zoom\", zoom);\n        isUndoRedo = false;\n        history = [];\n        s_history = true;\n        cur_history_index = 0;\n        templatechanges();\n        btnUndo.attr(\"disabled\", \"disabled\");\n        //FillFields(true, false);\n      });\n      btnChangeTemplate.click(function () {\n        btnTemplateBack.text(VIS.Msg.getMsg(\"Cancle\"));\n        btnLayoutSetting.text(VIS.Msg.getMsg(\"Ok\"));\n        divTopNavigator.hide();\n        count--;\n        DivTemplate.show();\n        DivCardFieldSec.hide();\n        DivStyleSec1.hide();\n        DivCradStep2.find('.vis-two-sec-two').hide();\n        if (!isTemplateLoaded) {\n          getSystemTemplateDesign();\n        } else {\n          scaleTemplate();\n        }\n        isChangeTemplate = true;\n        cmbTemplateCategory.val('');\n        DivTemplate.find('[issystemtemplate=\"Y\"]').removeClass('displayNone');\n      });\n      btnFinesh.click(function (e) {\n        isOnlySave = false;\n        closeDialog = true;\n        cardViewColArray = [];\n        VIS.context.setContext(\"CardDialogLaststepSelected_\" + WindowNo, 2);\n        saveTemplate(e);\n      });\n      btnOnlySave.click(function (e) {\n        isOnlySave = true;\n        saveTemplate(e);\n        var tme = new Date();\n        var dateString = '';\n        var h = tme.getHours();\n        var m = tme.getMinutes();\n        var s = tme.getSeconds();\n        var ampm = h >= 12 ? 'PM' : 'AM';\n        h %= 12;\n        h = h || 12;\n        if (h < 10) h = '0' + h;\n        if (m < 10) m = '0' + m;\n        if (s < 10) s = '0' + s;\n        dateString = h + ':' + m + ':' + s + ' ' + ampm;\n        spnLastSaved.text(VIS.Msg.getMsg(\"LastSaved\") + \" \" + dateString);\n        DivTemplate.find('.mainTemplate[templateid=\"' + AD_HeaderLayout_ID + '\"]').parent().attr('lastupdated', dateString);\n      });\n      btnBack.click(function () {\n        resetAll();\n        DivCradStep1.show();\n        DivCradStep2.hide();\n        btnCancle.click();\n      });\n      btnDelete.click(function () {\n        VIS.ADialog.confirm(\"SureWantToDelete\", true, \"\", VIS.Msg.getMsg(\"Confirm\"), function (result) {\n          if (result) {\n            DeleteCardView();\n          }\n        });\n      });\n      btnCardAsc.on('click', function () {\n        if (cmbOrderClause.val() == -1 || cmbOrderClause.val() == null) return;\n        btnCardAsc.css('color', 'rgba(var(--v-c-primary), 1)');\n        btnCardDesc.css('color', 'rgba(var(--v-c-on-secondary), 1)');\n        isAsc = \"ASC\";\n      });\n      btnCardDesc.on('click', function () {\n        if (cmbOrderClause.val() == -1 || cmbOrderClause.val() == null) return;\n        btnCardAsc.css('color', 'rgba(var(--v-c-on-secondary), 1)');\n        btnCardDesc.css('color', 'rgba(var(--v-c-primary), 1)');\n        isAsc = \"DESC\";\n      });\n      addCardListEvent();\n      groupSequenceFeilds.find('.grpChk').click(function () {\n        if ($(this).hasClass('fa-check-square-o')) {\n          $(this).removeClass('fa-check-square-o').addClass('fa-square-o');\n        } else {\n          $(this).removeClass('fa-square-o').addClass('fa-check-square-o');\n        }\n      });\n      chkGradient.click(function () {\n        if ($(this).is(':checked')) {\n          DivGrdntBlock.show();\n          txtBgColor.hide();\n        } else {\n          DivGrdntBlock.hide();\n          txtBgColor.show();\n        }\n      });\n      txtGrdntColor1.on('input', function () {\n        updateGradientColor();\n      });\n      txtGrdntColor2.on('input', function () {\n        updateGradientColor();\n      });\n      txtGrdntPrcnt.on('input', function () {\n        updateGradientColor();\n      });\n      txtGrdntPrcnt2.on('input', function () {\n        updateGradientColor();\n      });\n      cmbGrdntDirection.on('change', function () {\n        updateGradientColor();\n      });\n      $('body').mouseup(function (e) {\n        mdown = false;\n      });\n      btnAddCondition.click(function () {\n        if (cmbColumn.find(\":selected\").val() == -1) {\n          return;\n        }\n        if (control1.isMandatory && (getControlValue(true) == null || getControlValue(true) == '')) {\n          VIS.ADialog.error(\"FillMandatory\", true, control1.colName);\n          return;\n        }\n        var condition = {};\n        cvConditionArray = {};\n        var colorValue = \"\";\n        if (chkGradient.is(':checked')) {\n          colorValue = DivGrdntBlock.find('.grd-preview').css('background');\n        } else {\n          if (!Modernizr.inputtypes.color) {\n            colorValue = ctrColor.spectrum('get');\n          } else {\n            colorValue = txtBgColor.val();\n          }\n        }\n        var index = $.map(cardviewCondition, function (value, i) {\n          if (value.Color == colorValue) {\n            return i;\n          }\n        });\n        if (index.length <= 0) {\n          cvConditionArray[\"Color\"] = colorValue.toString();\n          cvConditionArray[\"Condition\"] = [];\n          condition[\"ColHeader\"] = cmbColumn.find(\":selected\").text();\n          condition[\"ColName\"] = cmbColumn.find(\":selected\").val();\n          condition[\"Operator\"] = drpOp.val();\n          condition[\"OperatorText\"] = drpOp.find(\":selected\").text();\n          ;\n          condition[\"QueryValue\"] = getControlValue(true);\n          condition[\"QueryText\"] = getControlText(true);\n          cvConditionArray[\"Condition\"].push(condition);\n          cardviewCondition.push(cvConditionArray);\n        } else {\n          condition[\"ColHeader\"] = cmbColumn.find(\":selected\").text();\n          condition[\"ColName\"] = cmbColumn.find(\":selected\").val();\n          condition[\"Operator\"] = drpOp.val();\n          condition[\"OperatorText\"] = drpOp.find(\":selected\").text();\n          ;\n          condition[\"QueryValue\"] = getControlValue(true);\n          condition[\"QueryText\"] = getControlText(true);\n          cardviewCondition[index[0]].Condition.push(condition);\n        }\n        AddRow(cardviewCondition);\n        cmbColumn.val('-1');\n        drpOp[0].SelectedIndex = -1;\n        SetControlValue(true);\n        SetControlText(true);\n        txtGrdntColor1.val('#000');\n        txtGrdntColor2.val('#000');\n        txtGrdntPrcnt.val(0);\n        txtGrdntPrcnt2.val(0);\n        cmbGrdntDirection.val('to bottom');\n        DivGrdntBlock.find('.grd-preview').css('background', '#000');\n        //divValue1.empty();\n      });\n      btnAddOrder.on(\"click\", function (e) {\n        var selectedVal = cmbOrderClause.val();\n        if (selectedVal == -1) {\n          return;\n        }\n        btnCardAsc.css('color', 'rgba(var(--v-c-on-secondary), 1)');\n        btnCardDesc.css('color', 'rgba(var(--v-c-on-secondary), 1)');\n        if (sortOrderArray && sortOrderArray.length < 3) {\n          var selectedColtext = cmbOrderClause.find(':selected').text();\n          if (sortOrderArray.indexOf(selectedVal + ' ASC') > -1 || sortOrderArray.indexOf(selectedVal + ' DESC') > -1) {\n            VIS.ADialog.warn(\"CardSortColAdded\");\n            return;\n          }\n          addOrderByClauseItems(selectedColtext, selectedVal, isAsc);\n          sortOrderArray.push(selectedVal + ' ' + isAsc);\n          cmbOrderClause.val(-1);\n        } else {\n          VIS.ADialog.warn(\"MaxSortColumn\");\n        }\n      });\n      sortList.on(\"click\", function (e) {\n        if (isEdit || isNewRecord) {\n          var $target = $(e.target);\n          if ($target.hasClass('fa-close')) $target = $target.parent();\n          if ($target.hasClass('vis-sortListItemClose')) {\n            const itemid = sortOrderArray.indexOf($target.data('text'));\n            sortOrderArray.splice(itemid, 1);\n            $target.closest('.vis-sortListItem').remove();\n          }\n        }\n      });\n      if (cmbColumn != null) {\n        cmbColumn.on(\"change\", function (evt) {\n          evt.stopPropagation();\n          var columnName = cmbColumn.val();\n          setControlNullValue(true);\n          if (columnName && columnName != \"-1\") {\n            var dsOp = null;\n            var dsOpDynamic = null;\n            if (columnName.endsWith(\"_ID\") || columnName.endsWith(\"_Acct\") || columnName.endsWith(\"_ID_1\") || columnName.endsWith(\"_ID_2\") || columnName.endsWith(\"_ID_3\")) {\n              // fill dataset with operators of type ID\n              dsOp = self.getOperatorsQuery(VIS.Query.prototype.CVOPERATORS_ID);\n            } else if (columnName.startsWith(\"Is\")) {\n              // fill dataset with operators of type Yes No\n              dsOp = self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_YN);\n            } else {\n              // fill dataset with all operators available\n              dsOp = self.getOperatorsQuery(VIS.Query.prototype.CVOPERATORS);\n            }\n            var f = mTab.getField(columnName);\n            drpOp.html(dsOp);\n            drpOp[0].SelectedIndex = 0;\n            // get field\n            var field = getTargetMField(columnName);\n            // set control at value1 position\n            setControl(true, field);\n            // enable the save row button\n            // setEnableButton(btnSave, true);//silverlight comment\n            drpOp.prop(\"disabled\", false);\n          }\n          // enable control at value1 position\n          setValueEnabled(true);\n          // disable control at value2 position\n          // setValue2Enabled(false);\n        });\n      }\n      if (drpOp != null) {\n        drpOp.on(\"change\", function () {\n          var selOp = drpOp.val();\n          // set control at value2 position according to the operator selected\n          if (!selOp) {\n            selOp = \"\";\n          }\n          var columnName = \"\";\n          var field = \"\";\n          if (selOp && selOp != \"0\") {\n            //if user selects between operator\n            if (VIS.Query.prototype.BETWEEN.equals(selOp)) {\n              columnName = cmbColumn.val();\n              // get field\n              field = getTargetMField(columnName);\n              // set control at value2 position\n              setControl(false, field);\n              // enable the control at value2 position\n              // setValue2Enabled(true);\n            } else {\n              //setValue2Enabled(false);\n            }\n          } else {\n            setEnableButton(btnSave, false); //\n            // setValue2Enabled(false);\n            setControlNullValue(true);\n          }\n        });\n      }\n      if (cmbGroupField != null) {\n        cmbGroupField.on(\"change\", function () {\n          AD_GroupField_ID = parseInt($(this).find(\":selected\").val());\n          FillforGroupSeq(AD_GroupField_ID);\n        });\n      }\n      if (cvTable != null) {\n        cvTable.on(\"click\", \"tr .td_Action i\", function () {\n          if (isEdit || isNewRecord) {\n            var rowIndex = $(this).parent().parent().index();\n            var selectRowColor = $(this).parent().parent().children().eq(0).attr(\"value\");\n            var colName = $(this).parent().parent().children().eq(1).attr(\"value\");\n            cvTable.find(\"tr\").eq(rowIndex).remove();\n            var idx = $.map(cardviewCondition, function (value, i) {\n              if (value.Color == selectRowColor) {\n                return i;\n              }\n            });\n            for (i = 0; i < cardviewCondition[idx].Condition.length; i++) {\n              if (colName == cardviewCondition[idx].Condition[i].ColName) {\n                cardviewCondition[idx].Condition.splice(i, 1);\n              }\n              if (cardviewCondition[idx].Condition.length <= 0) {\n                cardviewCondition.splice(idx, 1);\n                break;\n              }\n            }\n          }\n          if (cardviewCondition.length == 0) {\n            AddRow(\"\");\n          }\n        });\n      }\n      txtCustomStyle.change(function () {\n        var selectedItem = DivViewBlock.find('.vis-active-block');\n        selectedItem.attr(\"style\", $(this).val());\n      });\n      txtSQLQuery.change(function () {\n        var selectedItem = DivViewBlock.find('.vis-active-block');\n        if ($(this).val() == null || $(this).val() == \"\") {\n          selectedItem.find('sql').remove();\n          selectedItem.attr(\"query\", \"\");\n        } else {\n          var qry = VIS.secureEngine.encrypt($(this).val());\n          selectedItem.attr(\"query\", qry);\n          if (selectedItem.find('sql').length == 0) {\n            selectedItem.append('<sql>SQL</sql>');\n          }\n        }\n      });\n      txtZoomInOut.on('input', function () {\n        DivViewBlock.find('.canvas').css('zoom', $(this).val());\n      });\n      DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"dragstart\", function (event) {\n        // store a ref. on the dragged elem\n        dragged = $(event.target);\n        if (dragged.hasClass('grdDiv') || !event.ctrlKey) {\n          event.preventDefault();\n        } else {\n          divTopNavigator.hide();\n          mdown = false;\n        }\n      }, false);\n      DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"dragover\", function (event) {\n        // prevent default to allow drop\n        event.preventDefault();\n      });\n      DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"drop\", function (event) {\n        // prevent default action (open as link for some elements)\n        event.preventDefault();\n        DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n        var fldLbl = null;\n        var ev = $(event.target);\n        if (ev.hasClass('grdDiv')) {\n          if (!dragged.hasClass('.fieldLbl')) {\n            fldLbl = dragged.find('.fieldLbl');\n          }\n          if (fldLbl.length > 0) {\n            ev.append(dragged);\n          } else {\n            ev.addClass('vis-active-block');\n            linkField(dragged);\n          }\n          templatechanges();\n        }\n      });\n      btnUndo.click(function (e) {\n        if (cur_history_index > 0) {\n          isUndoRedo = true;\n          s_history = false;\n          canv_data = JSON.parse(history[cur_history_index - 1]);\n          DivViewBlock.find('.vis-viewBlock').html(canv_data);\n          cur_history_index--;\n          btnRedo.removeAttr(\"disabled\");\n          fillcardLayoutfromTemplate();\n          isUndoRedo = false;\n          if (cur_history_index <= 0) {\n            btnUndo.attr(\"disabled\", \"disabled\");\n          }\n        } else {\n          btnUndo.attr(\"disabled\", \"disabled\");\n        }\n        markfilledField();\n      });\n      btnRedo.click(function (e) {\n        if (history[cur_history_index + 1]) {\n          isUndoRedo = true;\n          s_history = false;\n          canv_data = JSON.parse(history[cur_history_index + 1]);\n          DivViewBlock.find('.vis-viewBlock').html(canv_data);\n          cur_history_index++;\n          btnUndo.removeAttr(\"disabled\");\n          fillcardLayoutfromTemplate();\n          isUndoRedo = false;\n          if (cur_history_index >= history.length - 1) {\n            btnRedo.attr(\"disabled\", \"disabled\");\n          }\n        } else {\n          btnRedo.attr(\"disabled\", \"disabled\");\n        }\n        markfilledField();\n      });\n      txtFilterField.keyup(function () {\n        var value = $(this).val();\n        if (value == \"\") {\n          DivCardField.find('.fieldLbl:not(:first)').show();\n        } else {\n          DivCardField.find('.fieldLbl').hide();\n          DivCardField.find('.fieldLbl:contains(' + value + ')').show();\n        }\n      });\n      btnClearFilter.click(function () {\n        txtFilterField.val('');\n        txtFilterField.focus();\n        DivCardField.find('.fieldLbl:not(:first)').show();\n      });\n      cmbTemplateCategory.change(function () {\n        if ($(this).val() != \"\") {\n          DivTemplate.find('[issystemtemplate=\"Y\"]').not('.blankTemp').addClass('displayNone');\n          DivTemplate.find('[issystemtemplate=\"Y\"][category=\"' + $(this).val() + '\"]').removeClass('displayNone');\n        } else {\n          DivTemplate.find('[issystemtemplate=\"Y\"]').removeClass('displayNone');\n        }\n        if (DivTemplate.find('.vis-cardSingleViewTemplate:not(:hidden)').length == 1) {\n          DivTemplate.find('.vis-noTemplateIcon').show();\n        } else {\n          DivTemplate.find('.vis-noTemplateIcon').hide();\n        }\n      });\n      jQuery.expr[':'].contains = function (a, i, m) {\n        return jQuery(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n      };\n\n      /**\r\n       * check anything chnage in Viewblock and add scroll acording to height\r\n       */\n      DivViewBlock.find('.vis-viewBlock').on('DOMSubtreeModified', function () {\n        var iH = DivViewBlock.height();\n        var cH = DivViewBlock.find('.canvas').height();\n        if (iH && cH && cH > iH) {\n          DivViewBlock.find('.canvas').addClass('canvasOverFlow');\n        } else {\n          DivViewBlock.find('.canvas').removeClass('canvasOverFlow');\n        }\n      });\n      BtnRefreshTemplate.click(function () {\n        getSystemTemplateDesign();\n      });\n\n      /* End Step 1*/\n    }\n\n    // change status of linked field\n    function markfilledField() {\n      DivCardField.find('.linked').removeClass('linked vis-succes-clr');\n      DivCardField.find('.fieldLbl:not(:first)').prop(\"draggable\", true);\n      DivViewBlock.find('.vis-viewBlock').find('.fieldLbl').each(function () {\n        var fidUR = DivCardField.find('[fieldid=\"' + $(this).attr('fieldid') + '\"]');\n        fidUR.find('.fa-circle').addClass('linked vis-succes-clr');\n        fidUR.prop(\"draggable\", false);\n      });\n      DivCardField.find('[draggable=\"true\"]:not(:first)').sort(Ascending_sort).appendTo(DivCardField);\n      DivViewBlock.find('.grdDiv').unbind('mouseover');\n      DivViewBlock.find('.grdDiv').mouseover(function (e) {\n        if (mdown && !$(this).hasClass('vis-split-cell')) {\n          selectTo($(this));\n        }\n      });\n    }\n\n    // sort field in ascending order\n    function Ascending_sort(a, b) {\n      return $(b).attr('title').toUpperCase() < $(a).attr('title').toUpperCase() ? 1 : -1;\n    }\n    function addCardListEvent() {\n      cardsList.find('div').unbind('click');\n      cardsList.find('div').click(function () {\n        cardsList.find('.crd-active').removeClass('crd-active');\n        $(this).addClass('crd-active');\n        cmbOrderClause.val(-1);\n        sortOrderArray = [];\n        lastSortOrderArray = [];\n        LastCVCondition = [];\n        var idx = $(this).attr('idx');\n        lastSelectedID = idx;\n        if (cardViewInfo && cardViewInfo.length != 0) {\n          ControlMgmt(idx);\n          txtCardName.val(cardViewInfo[idx].CardViewName);\n          //txtTemplateName.val(cardViewInfo[idx].CardViewName);\n          AD_CardView_ID = cardViewInfo[idx].CardViewID;\n          cardViewUserID = cardViewInfo[idx].CreatedBy;\n          chkDefault.prop(\"checked\", cardViewInfo[idx].DefaultID ? true : false);\n          chkPublic.prop(\"checked\", cardViewInfo[idx].UserID == 0 ? false : true);\n          AD_HeaderLayout_ID = cardViewInfo[idx].AD_HeaderLayout_ID;\n          //templateID = AD_HeaderLayout_ID;\n          if (cardViewInfo && cardViewInfo[idx].OrderByClause && cardViewInfo[idx].OrderByClause.length) {\n            addOrderByClauseFromDB(cardViewInfo[idx].OrderByClause);\n          } else {\n            clearOrderByClause();\n          }\n          if (AD_CardView_ID > 0) {\n            FillFields(true, false);\n          } else {\n            FillFields(false, false);\n          }\n          FillGroupFields();\n        }\n      });\n    }\n\n    // #endregion\n    // load UI From partial view\n    function CardViewUI(temResult) {\n      root.load(VIS.Application.contextUrl + 'CardViewWizard/Index/?windowno=' + WindowNo, function (event) {\n        /*step 1*/\n        root.append(isBusyRoot);\n        IsBusy(true);\n        DivCradStep1 = root.find('#DivCardStep1_' + WindowNo);\n        DivCradStep1.hide();\n        btnCardCustomization = root.find('#btnCardCustomization_' + WindowNo);\n        btnSaveClose = root.find('#btnSaveCloseStep1_' + WindowNo);\n        btnApply = root.find('#btnApplyStep1_' + WindowNo);\n        btnLayoutSetting = root.find('#BtnLayoutSetting_' + WindowNo);\n        btnChangeTemplate = root.find('#BtnChangeTemplate_' + WindowNo);\n        btnTemplateBack = root.find('#BtnTemplateBack_' + WindowNo);\n        btnBack = root.find('#BtnBack_' + WindowNo);\n        btnFinesh = root.find('#BtnFinesh_' + WindowNo);\n        btnOnlySave = root.find('#btnOnlySave_' + WindowNo);\n        cardsList = root.find('#DivCardList_' + WindowNo);\n        txtCardName = root.find('#txtCardName_' + WindowNo);\n        cmbGroupField = root.find('#cmbGroupField_' + WindowNo);\n        //availableFeilds = root.find('#AvailableFeilds_' + WindowNo);\n        //includedFeilds = root.find('#IncludedFeilds_' + WindowNo);\n        groupSequenceFeilds = root.find('#GroupSequenceFeilds_' + WindowNo);\n        cvTable = root.find('#conditionTable_' + WindowNo);\n        cmbColumn = root.find('#cmbColumn_' + WindowNo);\n        drpOp = root.find('#ddlOperator_' + WindowNo);\n        divValue1 = root.find('#valcontainer_' + WindowNo);\n        cmbOrderClause = root.find('#cmbOrderClause_' + WindowNo);\n        sortList = root.find('#sortList_' + WindowNo);\n        chkDefault = root.find('#chkDefault_' + WindowNo);\n        chkPublic = root.find('#chkPublic_' + WindowNo);\n        btnNewCard = root.find('#btnNewCard_' + WindowNo);\n        btnCopy = root.find('#btnCopy_' + WindowNo);\n        //btnEdit = root.find('#btnEdit_' + WindowNo);\n        btnDelete = root.find('#btnDelete_' + WindowNo);\n        btnCancle = root.find('#btnCancle_' + WindowNo);\n        chkGradient = root.find('#chkGradient_' + WindowNo);\n        txtBgColor = root.find('#txtBgColor_' + WindowNo);\n        DivGrdntBlock = root.find('#DivGrdntBlock_' + WindowNo);\n        txtGrdntColor1 = root.find('#txtGrdntColor1_' + WindowNo);\n        txtGrdntColor2 = root.find('#txtGrdntColor2_' + WindowNo);\n        txtGrdntPrcnt = root.find('#txtGrdntPrcnt_' + WindowNo);\n        txtGrdntPrcnt2 = root.find('#txtGrdntPrcnt2_' + WindowNo);\n        cmbGrdntDirection = root.find('#cmbGrdntDirection_' + WindowNo);\n        btnAddCondition = root.find('#btnAddCondition_' + WindowNo);\n        btnCardAsc = root.find('#btnCardAsc_' + WindowNo);\n        btnCardDesc = root.find('#btnCardDesc_' + WindowNo);\n        btnAddOrder = root.find('#btnAddOrder_' + WindowNo);\n        spnLastSaved = root.find('#spnLastSaved_' + WindowNo);\n        txtFilterField = root.find('#txtFilterField_' + WindowNo);\n        btnClearFilter = root.find('#btnClearFilter_' + WindowNo);\n        /*END Step 1*/\n\n        /* Step 2*/\n        DivCradStep2 = root.find('#DivCardStep2_' + WindowNo);\n        DivViewBlock = root.find('#DivViewBlock_' + WindowNo);\n        DivStyleSec1 = root.find('#DivStyleSec1_' + WindowNo);\n        chkAllBorderRadius = root.find('#chkAllBorderRadius_' + WindowNo);\n        chkAllPadding = root.find('#chkAllPadding_' + WindowNo);\n        chkAllMargin = root.find('#chkAllMargin_' + WindowNo);\n        chkAllBorder = root.find('#chkAllBorder_' + WindowNo);\n        DivGridSec = root.find('#DivGridSec_' + WindowNo);\n        //hideShowGridSec = root.find('.DivGridSec');\n        DivTemplate = root.find('#DivTemplate_' + WindowNo);\n        DivCardField = root.find('#DivCardField_' + WindowNo);\n        //txtTemplateName = root.find('#txtTemplateName_' + WindowNo);\n        DivCardFieldSec = root.find('#DivCardFieldSec_' + WindowNo);\n        txtCustomStyle = root.find('#txtCustomStyle_' + WindowNo);\n        txtSQLQuery = root.find('#txtSQLQuery_' + WindowNo);\n        txtZoomInOut = root.find('#txtZoomInOut_' + WindowNo);\n        btn_BlockCancel = root.find('#Btn_BlockCancel_' + WindowNo);\n        btnUndo = root.find('#btnUndo_' + WindowNo);\n        btnRedo = root.find('#btnRedo_' + WindowNo);\n        divTopNavigator = DivCradStep2.find('.vis-topNavigator');\n        txtRowGap = DivGridSec.find('.rowGap');\n        txtColGap = DivGridSec.find('.colGap');\n        btnVaddrow = root.find('#btnVaddrow_' + WindowNo);\n        btnVaddCol = root.find('#btnVaddCol_' + WindowNo);\n        btnVdelrow = root.find('#btnVdelrow_' + WindowNo);\n        btnVdelCol = root.find('#btnVdelCol_' + WindowNo);\n        cmbTemplateCategory = root.find('#CmbTemplateCategory_' + WindowNo);\n        BtnRefreshTemplate = root.find('#BtnRefreshTemplate_' + WindowNo);\n        activeSection = DivViewBlock.find('.section1');\n        isEdit = true;\n        isNewRecord = false;\n        //chkDefault.parent().hide();\n        /*END Step 2*/\n\n        ArrayTotalTabFields();\n        for (var i = 0; i < temResult.length; i++) {\n          DivTemplate.find('.vis-cardTemplateContainer').append($(temResult[i].template));\n        }\n\n        //scaleTemplate();\n        setTimeout(function () {\n          scaleTemplate();\n          if (DivTemplate.find('.vis-cardSingleViewTemplate:not(:hidden)').length == 1) {\n            DivTemplate.find('.vis-noTemplateIcon').show();\n          } else {\n            DivTemplate.find('.vis-noTemplateIcon').hide();\n          }\n          DivTemplate.find('.vis-cardSingleViewTemplate').click(function () {\n            DivTemplate.find('.vis-cardSingleViewTemplate').removeClass('vis-active-template');\n            $(this).addClass('vis-active-template');\n          });\n          DivCradStep1.show();\n          //get all cards\n          GetCards();\n          //get template category\n          getTemplateCategory();\n          FillFields(true, false);\n          FillGroupFields();\n          FillCVConditionCmbColumn();\n          events();\n          events2();\n          updateGradientColor();\n          totalTabFileds.sort(function (a, b) {\n            var n1 = a.getHeader().toUpperCase();\n            if (n1 == null || n1.length == 0) {\n              n1 = VIS.Msg.getElement(VIS.context, a.getColumnName());\n            }\n            var n2 = b.getHeader().toUpperCase();\n            if (n2 == null || n2.length == 0) {\n              n2 = VIS.Msg.getElement(VIS.context, b.getColumnName());\n            }\n            if (n1 > n2) return 1;\n            if (n1 < n2) return -1;\n            return 0;\n          });\n          enableDisable(false);\n          cmbOrderClause.find('option').remove();\n          cmbOrderClause.append('<option value=\"-1\"></option>)');\n          for (var j = 0; j < totalTabFileds.length; j++) {\n            var header = totalTabFileds[j].getHeader();\n            if (header == null || header.length == 0) {\n              header = VIS.Msg.getElement(VIS.context, totalTabFileds[j].getColumnName());\n              if (header == null || header.Length == 0) continue;\n            }\n            cmbOrderClause.append('<option value=\"' + totalTabFileds[j].getColumnName() + '\">' + header + '</option>');\n          }\n          if (cardViewInfo && cardViewInfo.length == 0) {\n            isSameUser = true;\n            btnNewCard.click();\n            btnDelete.addClass('vis-disable-event');\n            btnCancle.addClass('vis-disable-event');\n            btnCopy.addClass('vis-disable-event');\n          } else if (VIS.context.getContext(\"CardDialogLaststepSelected_\" + WindowNo) == 2) {\n            btnCardCustomization.click();\n          }\n          IsBusy(false);\n        }, 1000);\n      });\n    }\n\n    // #region Step 1 functions\n    var updateGradientColor = function () {\n      var color1 = txtGrdntColor1.val();\n      var color2 = txtGrdntColor2.val();\n      var prct = txtGrdntPrcnt.val();\n      var prct2 = txtGrdntPrcnt2.val();\n      var deg = cmbGrdntDirection.find('option:selected').val();\n      var style = 'linear-gradient(' + deg + ',' + color1 + ' ' + prct + '%,  ' + color2 + ' ' + prct2 + '%)';\n      DivGrdntBlock.find('.grd-preview').css('background', style);\n    };\n    /**\r\n     * Gradient degree\r\n     * @param {any} id\r\n     * @param {any} e\r\n     */\n    //var getGradientDeg = function (id, e) {\n    //    var radius = 9;\n    //    var deg = 0;\n    //    var elP = id.parent().offset();\n    //    var elPos = { x: elP.left, y: elP.top };\n\n    //    if (mdown) {\n    //        var mPos = { x: e.clientX - elPos.x, y: e.clientY - elPos.y };\n    //        var atan = Math.atan2(mPos.x - radius, mPos.y - radius);\n    //        deg = -atan / (Math.PI / 180) + 180; // final (0-360 positive) degrees from mouse position \n    //        deg = Math.ceil(deg);\n    //        return deg;\n    //        // AND FINALLY apply exact degrees to ball rotation\n\n    //    }\n    //}\n\n    var ArrayTotalTabFields = function () {\n      for (var i = 0; i < mTab.getFields().length; i++) {\n        totalTabFileds.push(mTab.getFields()[i]);\n      }\n      for (var i = 0; i < cardView.fields.length; i++) {\n        orginalIncludedCols.push(cardView.fields[i].getAD_Field_ID());\n      }\n    };\n\n    /**\r\n     * Get Login User's Card\r\n     * @param {any} isReload\r\n     */\n    var GetCards = function (isReload) {\n      var url = VIS.Application.contextUrl + \"CardView/GetCardView\";\n      cardsList.html('');\n      $.ajax({\n        type: \"GET\",\n        async: false,\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: {\n          ad_Window_ID: AD_Window_ID,\n          ad_Tab_ID: AD_Tab_ID\n        },\n        success: function (data) {\n          dbResult = JSON.parse(data);\n          cardViewInfo = dbResult[0].lstCardViewData;\n          //roleInfo = dbResult[0].lstRoleData;\n          //LstCardViewRole = dbResult[0].lstCardViewRoleData;\n          LstCardViewCondition = dbResult[0].lstCardViewConditonData;\n          if (cardViewInfo != null && cardViewInfo.length > 0) {\n            btnDelete.removeClass('vis-disable-event');\n            var isDefaultcard = false;\n            for (var i = 0; i < cardViewInfo.length; i++) {\n              var template = \"\";\n              if (!isReload && AD_CardView_ID) {\n                if (cardViewInfo[i].CardViewID == AD_CardView_ID) {\n                  template = '<div idx=\"' + i + '\" class=\"vis-lft-sgl p-2 d-flex flex-column mb-2 crd-active\">';\n                } else {\n                  template = '<div idx=\"' + i + '\" class=\"vis-lft-sgl p-2 d-flex flex-column mb-2\">';\n                }\n              } else if (cardViewInfo[i].DefaultID && !isReload) {\n                isDefaultcard = true;\n                template = '<div idx=\"' + i + '\" class=\"vis-lft-sgl p-2 d-flex flex-column mb-2 crd-active\">';\n              } else if (isReload && cardViewInfo[i].CardViewID == AD_CardView_ID) {\n                template = '<div idx=\"' + i + '\" class=\"vis-lft-sgl p-2 d-flex flex-column mb-2 crd-active\">';\n              } else {\n                template = '<div idx=\"' + i + '\" class=\"vis-lft-sgl p-2 d-flex flex-column mb-2\">';\n              }\n              template += '<span class=\"vis-lft-sgl-title\">' + w2utils.encodeTags(cardViewInfo[i].CardViewName) + '</span>' + '    <span class=\"vis-lft-sgl-sub-title\">Created By: ' + cardViewInfo[i].CreatedName + '</span>' + '    <span class=\"vis-lft-sgl-sub-title\">Last Modified: ' + new Date(cardViewInfo[i].Updated).toLocaleDateString() + '</span>' + '</div>';\n              cardsList.append($(template));\n\n              //cardsList.append(\"<Option idx=\" + i + \" is_shared=\" + cardViewInfo[i].UserID + \" ad_user_id=\" + cardViewInfo[i].CreatedBy + \" cardviewid=\" + cardViewInfo[i].CardViewID + \" groupSequence='\" + cardViewInfo[i].groupSequence + \"' excludedGroup='\" + cardViewInfo[i].excludedGroup + \"'  ad_field_id=\" + cardViewInfo[i].AD_GroupField_ID + \" isdefault=\" + cardViewInfo[i].DefaultID + \" ad_headerLayout_id=\" + cardViewInfo[i].AD_HeaderLayout_ID + \"> \" + w2utils.encodeTags(cardViewInfo[i].CardViewName) + \"</Option>\");\n            }\n            if (!isDefaultcard && !isReload && !AD_CardView_ID) {\n              cardsList.find('div:first').addClass(\"crd-active\");\n              isReload = true;\n            }\n            var idx = cardsList.find(\".crd-active\").attr('idx');\n            lastSelectedID = idx;\n            AD_CardView_ID = cardViewInfo[idx].CardViewID;\n            txtCardName.val(cardViewInfo[idx].CardViewName);\n            //txtTemplateName.val(cardViewInfo[idx].CardViewName);\n            AD_HeaderLayout_ID = cardViewInfo[idx].AD_HeaderLayout_ID;\n            ControlMgmt(idx);\n            chkPublic.attr(\"checked\", cardViewInfo[idx].UserID > 0 ? true : false);\n            chkDefault.attr(\"checked\", cardViewInfo[idx].DefaultID ? true : false);\n            if (idx && cardViewInfo[idx].OrderByClause && cardViewInfo[idx].OrderByClause.length > 0) {\n              addOrderByClauseFromDB(cardViewInfo[idx].OrderByClause);\n            } else {\n              clearOrderByClause();\n            }\n          } else {\n            btnDelete.addClass('vis-disable-event');\n            cardViewInfo = [];\n          }\n          //if (isReload) {                        \n          addCardListEvent();\n          //}\n\n          cardsList.scrollTop(cardsList.find('.crd-active').offset().top - cardsList.find('.crd-active').height() - 100); // focus selected card\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n        }\n      });\n    };\n\n    /**\r\n     * Get Template category for filter\r\n     * */\n    function getTemplateCategory() {\n      cmbTemplateCategory.find('option').remove();\n      cmbTemplateCategory.append('<option value=\"\">All</option>');\n      $.ajax({\n        type: \"POST\",\n        url: VIS.Application.contextUrl + \"CardView/GetTemplateCategory\",\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: {},\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            for (var i = 0; i < result.length; i++) {\n              cmbTemplateCategory.append('<option value=\"' + result[i].TemplateCategoryID + '\">' + result[i].Name + '</option>');\n            }\n          }\n          IsBusy(false);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        }\n      });\n    }\n\n    /**\r\n     *  Fill selected card template Layout\r\n     * */\n\n    var fillcardLayoutfromTemplate = function () {\n      gridObj = {};\n      var sClone = DivGridSec.find('.grid-Section:first').clone(true);\n      sClone.removeClass('displayNone');\n      DivGridSec.find('.grid-Section:not(:first)').remove();\n      DivViewBlock.find('.vis-wizard-section').each(function (i) {\n        var secNo = $(this).attr('sectionCount');\n        if (i == 0) {\n          sClone.addClass('section-active');\n          $(this).addClass('vis-active-block');\n        }\n        sClone.attr('sectionCount', secNo);\n        var secName = $(this).attr('name');\n        sClone.find('.vis-grey-disp-ttl').text(secName);\n        DivGridSec.find('.vis-sectionAdd').append(sClone);\n        sClone = DivGridSec.find('.grid-Section:first').clone(true);\n        sClone.removeClass('displayNone');\n        if (!gridObj[\"section\" + secNo]) {\n          var totalRow = $(this).attr('row');\n          var totalCol = $(this).attr('col');\n          var grdAreaCol = $(this)[0].style.gridTemplateColumns.split(' ');\n          var grdAreaRow = $(this)[0].style.gridTemplateRows.split(' ');\n          var Obj = {};\n          for (var i = 0; i < totalRow; i++) {\n            if (grdAreaRow.length > 0 && grdAreaRow[i] && grdAreaRow[i] != 'auto') {\n              var v = grdAreaRow[i].replace(/\\'/g, '').split(/(\\d+)/).filter(Boolean);\n              Obj['row_' + i] = {\n                val: v[0],\n                msr: v[1]\n              };\n            } else {\n              Obj['row_' + i] = {\n                val: 1,\n                msr: 'auto'\n              };\n            }\n          }\n          ;\n          for (var j = 0; j < totalCol; j++) {\n            if (grdAreaCol.length > 0 && grdAreaCol[j] && grdAreaCol[j] != 'auto') {\n              var c = grdAreaCol[j].replace(/\\'/g, '').split(/(\\d+)/).filter(Boolean);\n              Obj['col_' + j] = {\n                val: c[0],\n                msr: c[1]\n              };\n            } else {\n              Obj['col_' + j] = {\n                val: 1,\n                msr: 'auto'\n              };\n            }\n          }\n          Obj[\"sectionNo\"] = secNo;\n          Obj[\"sectionName\"] = secName;\n          Obj[\"rowGap\"] = 0;\n          Obj[\"colGap\"] = 0;\n          Obj[\"totalRow\"] = totalRow;\n          Obj[\"totalCol\"] = totalCol;\n          gridObj[\"section\" + secNo] = Obj;\n        }\n      });\n\n      //change sequence of sections\n      DivGridSec.find('.vis-sectionAdd').sortable({\n        disabled: false,\n        update: function (event, ui) {\n          var sectionCount = ui.item.attr('sectioncount');\n          var end_pos = ui.item.index();\n          var next = ui.item.next().attr('sectioncount');\n          if (next) {\n            DivViewBlock.find('[sectioncount=\"' + next + '\"]').before(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n          } else {\n            var pre = ui.item.prev().attr('sectioncount');\n            DivViewBlock.find('[sectioncount=\"' + pre + '\"]').after(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n          }\n        }\n      });\n      DivGridSec.find('.section-active .vis-grey-disp-el').click();\n      DivGridSec.find('.vis-grey-disp-el-xross').eq(1).hide();\n      if (!isNewRecord && !isChangeTemplate) {\n        DivCardField.find('.fieldLbl[seqNo]').each(function (i) {\n          var fID = $(this).attr('fieldid');\n          if (DivViewBlock.find('[fieldid=\"' + fID + '\"]').length == 0) {\n            var vlu = $(this).text();\n            var fidItm = DivViewBlock.find('[seqNo=\"' + $(this).attr('seqNo') + '\"]');\n            //fidItm.html('');\n            if (fidItm.length == 0) {\n              $(this).find('.linked').removeClass('linked vis-succes-clr');\n            } else {\n              $(this).find('.fa-circle').addClass('linked vis-succes-clr');\n              $(this).prop(\"draggable\", false);\n              var vlstyle = \"\";\n              var imgStyle = \"\";\n              var spnStyle = \"\";\n              var firstImg = false;\n              var brStart = 0;\n              var styleArr = fidItm.attr(\"fieldValuestyle\");\n              if (styleArr && styleArr.indexOf('|') > -1) {\n                var brPos = styleArr.split('<br>');\n                styleArr = styleArr.split(\"|\");\n                if (styleArr && styleArr.length > 0) {\n                  if (styleArr[0].indexOf(\"@img::\") > -1) {\n                    firstImg = true;\n                  }\n                  for (var j = 0; j < styleArr.length; j++) {\n                    if (styleArr[j].indexOf(\"@img::\") > -1) {\n                      imgStyle = styleArr[j].replace(\"@img::\", \"\");\n                    } else if (styleArr[j].indexOf(\"@value::\") > -1) {\n                      vlstyle = styleArr[j].replace(\"@value::\", \"\");\n                    } else if (styleArr[j].indexOf(\"@span::\") > -1) {\n                      spnStyle = styleArr[j].replace(\"@span::\", \"\");\n                    }\n                  }\n                  if (brPos != null && brPos.length > 1) {\n                    if (styleArr[0].indexOf(\"@img::\") > -1) {\n                      brStart = 1;\n                    } else {\n                      brStart = 2;\n                    }\n                  }\n                }\n              } else {\n                vlstyle = styleArr;\n              }\n            }\n            if (fidItm.length > 0) {\n              var styleflx = fidItm.attr(\"style\");\n              var fIdx = styleflx.indexOf('flex-direction');\n              var lblflxstyle = \"\";\n              if (fIdx > -1) {\n                var cIdx = styleflx.indexOf(\";\", fIdx + 'flex-direction'.length);\n                lblflxstyle = 'display:flex; ' + styleflx.substring(fIdx, cIdx);\n              }\n              var fieldHtml = $('<div class=\"fieldGroup\" style=\"' + lblflxstyle + '\" draggable=\"true\">' + '</div>');\n              var hideIcon = fidItm.attr(\"showfieldicon\") == 'Y' ? true : false;\n              var hideTxt = fidItm.attr(\"showfieldtext\") == 'Y' ? true : false;\n              if (mTab.getFieldById(Number(fID)).getShowIcon()) {\n                if (hideIcon) {\n                  fieldHtml.append($('<i class=\"\">&nbsp;</i>'));\n                } else {\n                  fieldHtml.append($('<i class=\"fa fa-star\">&nbsp;</i>'));\n                }\n              }\n              var cls = hideTxt ? \"displayNone\" : \"\";\n              var src = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='50' height='50'%3E%3Cdefs%3E%3Cpath d='M23 31l-3.97-2.9L19 28l-.24-.09.19.13L13 33v2h24v-2l-3-9-5-3-6 10zm-2-12c0-1.66-1.34-3-3-3s-3 1.34-3 3 1.34 3 3 3 3-1.34 3-3zm-11-8c-.55 0-1 .45-1 1v26c0 .55.45 1 1 1h30c.55 0 1-.45 1-1V12c0-.55-.45-1-1-1H10zm28 26H12c-.55 0-1-.45-1-1V14c0-.55.45-1 1-1h26c.55 0 1 .45 1 1v22c-.3.67-.63 1-1 1z' id='a'/%3E%3C/defs%3E%3Cuse xlink:href='%23a' fill='%23fff'/%3E%3Cuse xlink:href='%23a' fill-opacity='0' stroke='%23000' stroke-opacity='0'/%3E%3C/svg%3E\";\n              var displayType = mTab.getFieldById(Number(fID)).getDisplayType();\n              if (displayType == VIS.DisplayType.Image) {\n                fieldHtml.append($('<span style=\"' + fidItm.attr(\"fieldValueLabel\") + '\" class=\"fieldLbl ' + cls + '\" draggable=\"false\" showFieldText=\"' + hideTxt + '\" showFieldIcon=\"' + hideIcon + '\"  title=\"' + vlu + '\" fieldid=\"' + fID + '\" id=\"' + $(this).attr('id') + '\" >' + vlu + '</span><img class=\"vis-colorInvert imgField\" style=\"' + imgStyle + '\" src=\"' + src + '\"/>'));\n              } else if (displayType == VIS.DisplayType.TableDir || displayType == VIS.DisplayType.Table || displayType == VIS.DisplayType.List || displayType == VIS.DisplayType.Search) {\n                var fldlbl = '<span style=\"' + fidItm.attr(\"fieldValueLabel\") + '\" class=\"fieldLbl ' + cls + '\" draggable=\"false\" showFieldText=\"' + hideTxt + '\" showFieldIcon=\"' + hideIcon + '\" ondragstart=\"drag(event)\" title=\"' + vlu + '\" fieldid=\"' + fID + '\" id=\"' + $(this).attr('id') + '\" >' + vlu + '</span>';\n                src = \"data:image/svg+xml,%3Csvg width='30' height='30' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cdefs%3E%3Cpath id='a' d='m23,31l-3.97,-2.9l-0.03,-0.1l-0.24,-0.09l0.19,0.13l-5.95,4.96l0,2l24,0l0,-2l-3,-9l-5,-3l-6,10zm-2,-12c0,-1.66 -1.34,-3 -3,-3s-3,1.34 -3,3s1.34,3 3,3s3,-1.34 3,-3zm-11,-8c-0.55,0 -1,0.45 -1,1l0,26c0,0.55 0.45,1 1,1l30,0c0.55,0 1,-0.45 1,-1l0,-26c0,-0.55 -0.45,-1 -1,-1l-30,0zm28,26l-26,0c-0.55,0 -1,-0.45 -1,-1l0,-22c0,-0.55 0.45,-1 1,-1l26,0c0.55,0 1,0.45 1,1l0,22c-0.3,0.67 -0.63,1 -1,1z'/%3E%3C/defs%3E%3Cg%3E%3Cuse transform='matrix(0.567292 0 0 0.499809 0.901418 2.3385)' x='0' y='0' stroke='null' id='svg_1' fill='%23fff' xlink:href='%23a'/%3E%3C/g%3E%3C/svg%3E\";\n                var img = '<img class=\"vis-colorInvert imgField\" style=\"' + imgStyle + '\" src=\"' + src + '\"/>';\n                var spn = '';\n                if (brStart == 0) {\n                  spn = '<span class=\"fieldValue\" style=\"' + vlstyle + '\">Value</span>';\n                } else if (brStart == 1) {\n                  spn = '<span class=\"fieldValue\" style=\"' + vlstyle + '\"><br>Value</span>';\n                } else if (brStart == 2) {\n                  spn = '<span class=\"fieldValue\" style=\"' + vlstyle + '\">Value<br></span>';\n                }\n                if (firstImg) {\n                  fldlbl += img;\n                  fldlbl += spn;\n                } else {\n                  fldlbl += spn;\n                  fldlbl += img;\n                }\n                fieldHtml.append($(fldlbl));\n              } else {\n                fieldHtml.append($('<span style=\"' + fidItm.attr(\"fieldValueLabel\") + '\" class=\"fieldLbl ' + cls + '\" draggable=\"false\" showFieldText=\"' + hideTxt + '\" showFieldIcon=\"' + hideIcon + '\" ondragstart=\"drag(event)\" title=\"' + vlu + '\" fieldid=\"' + fID + '\" id=\"' + $(this).attr('id') + '\" >' + vlu + '</span><span class=\"fieldValue\" style=\"' + vlstyle + '\">:Value</span>'));\n              }\n              if (fidItm.attr(\"query\") != null && fidItm.attr(\"query\") != \"\") {\n                fieldHtml.append('<sql>SQL</sql>');\n              }\n              fidItm.append(fieldHtml);\n              //$(this).remove();\n            }\n          }\n        });\n        DivViewBlock.find('.canvas [query]').each(function () {\n          if ($(this).attr('query') != \"\" && $(this).attr('query') != null && $(this).attr('query') != undefined) {\n            $(this).append('<sql>SQL</sql>');\n          }\n        });\n      } else {\n        isChangeTemplate = false;\n        if (isUndoRedo) {\n          return;\n        }\n        DivCardField.find('.fieldLbl[seqNo]').each(function () {\n          if ($(this).attr('title') && $(this).attr('title').length > 0) {\n            //unlinkField($(this).attr('title'), $(this));\n            $(this).find('.linked').removeClass('linked vis-succes-clr');\n            $(this).removeAttr('seqNo');\n            var fieldName = $(this).attr('title');\n            $(this).prop(\"draggable\", true);\n          }\n        });\n        DivCardField.find('[draggable=\"true\"]:not(:first)').sort(Ascending_sort).appendTo(DivCardField);\n      }\n    };\n\n    /**\r\n     * Fill linked field\r\n     * @param {any} isReload\r\n     * @param {any} isShowAllColumn\r\n     */\n    var FillFields = function (isReload, isShowAllColumn) {\n      //if (!isReload) {\n      //var feildClone = availableFeilds.find('.vis-sec-2-sub-itm:first').clone(true);\n      //availableFeilds.find('.vis-sec-2-sub-itm').remove();\n\n      fields = null;\n      dbResult = null;\n      tabField = mTab.getFields();\n      tabField.sort(function (a, b) {\n        var a1 = a.getHeader().toLower(),\n          b1 = b.getHeader().toLower();\n        if (a1 == b1) return 0;\n        return a1 > b1 ? 1 : -1;\n      });\n      FillIncluded(isReload);\n      if (mTab != null && mTab.getFields().length > 0) {\n        var iClone = DivCardField.find('.fieldLbl:first').clone(true);\n        iClone.removeClass('displayNone');\n        for (var i = 0; i < tabField.length; i++) {\n          var c = tabField[i].getColumnName().toLower();\n          if (c == \"created\" || c == \"createdby\" || c == \"updated\" || c == \"updatedby\") {\n            continue;\n          }\n          if (VIS.DisplayType.IsLOB(tabField[i].getDisplayType())) {\n            continue;\n          }\n\n          //if (!tabField[i].getIsDisplayed()) {\n          //    continue;\n          //}\n\n          if (!isShowAllColumn) {\n            var result = jQuery.grep(columnFieldArray, function (value) {\n              return value == tabField[i].getAD_Field_ID();\n            });\n            if (result.length > 0) {\n              continue;\n            }\n          }\n\n          //feildClone.find('.vis-sub-itm-title').text(tabField[i].getHeader());\n          //feildClone.attr(\"fieldid\", tabField[i].getAD_Field_ID());\n          //availableFeilds.append(feildClone);\n          //feildClone = availableFeilds.find('.vis-sec-2-sub-itm:first').clone(true);\n\n          iClone.prepend(tabField[i].getHeader()).attr(\"title\", tabField[i].getHeader());\n          if (tabField[i].getShowIcon()) {\n            iClone.attr(\"showfieldicon\", false);\n          }\n\n          //if (tabField[i].getDisplayType() == VIS.DisplayType.Image) {\n          //    iClone.attr(\"fieldid\", tabField[i].getAD_Field_ID()).attr(\"displayType\", \"img\");\n          //} else {\n          //    iClone.attr(\"fieldid\", tabField[i].getAD_Field_ID());\n          //}\n          iClone.attr(\"fieldid\", tabField[i].getAD_Field_ID());\n          iClone.attr(\"id\", WindowNo + \"_\" + tabField[i].getAD_Field_ID());\n          DivCardField.append(iClone);\n          iClone = DivCardField.find('.fieldLbl:first').clone(true);\n          iClone.removeClass('displayNone');\n        }\n      }\n    };\n\n    /**\r\n     * Fill Included Filled\r\n     * @param {any} isReload\r\n     */\n    var FillIncluded = function (isReload) {\n      var iClone = DivCardField.find('.fieldLbl:first').clone(true);\n      DivCardField.find('.fieldLbl:not(:first)').remove();\n      iClone.removeClass('displayNone');\n      cardViewColArray = [];\n      cardViewColumns = [];\n      columnFieldArray = [];\n      if (isReload && (AD_CardView_ID > 0 || typeof AD_CardView_ID == \"undefined\")) {\n        if (typeof AD_CardView_ID == \"undefined\") {\n          AD_CardView_ID = 0;\n        }\n        var url = VIS.Application.contextUrl + \"CardView/GetCardViewColumns\";\n        $.ajax({\n          type: \"GET\",\n          async: false,\n          url: url,\n          dataType: \"json\",\n          contentType: 'application/json; charset=utf-8',\n          data: {\n            ad_CardView_ID: AD_CardView_ID\n          },\n          success: function (data) {\n            dbResult = JSON.parse(data);\n            var CVColumns = dbResult[0].lstCardViewData;\n            LstCardViewCondition = dbResult[0].lstCardViewConditonData;\n            if (CVColumns != null && CVColumns.length > 0) {\n              AD_GroupField_ID = CVColumns[0].AD_GroupField_ID;\n              cardViewUserID = CVColumns[0].CreatedBy;\n              for (var i = 0; i < CVColumns.length; i++) {\n                if (CVColumns[i].AD_Field_ID == 0) {\n                  continue;\n                }\n                var fieldItem = jQuery.grep(totalTabFileds, function (value) {\n                  return value.getAD_Field_ID() == CVColumns[i].AD_Field_ID;\n                });\n                if (fieldItem.length > 0) {\n                  columnFieldArray.push(fieldItem[0].getAD_Field_ID());\n                }\n                iClone.prepend(CVColumns[i].FieldName).attr(\"title\", CVColumns[i].FieldName);\n                if (mTab.getFieldById(CVColumns[i].AD_Field_ID).getShowIcon()) {\n                  iClone.attr(\"showfieldicon\", false);\n                }\n                iClone.attr(\"fieldid\", CVColumns[i].AD_Field_ID).attr(\"seqNo\", CVColumns[i].SeqNo);\n                iClone.attr(\"id\", WindowNo + \"_\" + CVColumns[i].AD_Field_ID);\n                DivCardField.append(iClone);\n                iClone = DivCardField.find('.fieldLbl:first').clone(true);\n                iClone.removeClass('displayNone');\n              }\n              DivCardField[0].addEventListener(\"dragstart\", function (event) {\n                // store a ref. on the dragged elem\n                dragged = $(event.target);\n              });\n            }\n            if (LstCardViewCondition != null && LstCardViewCondition.length > 0) {\n              cardviewCondition = [];\n              FillCVConditonTable(LstCardViewCondition);\n            } else {\n              cardviewCondition = [];\n              AddRow(cardviewCondition);\n            }\n            addOrderByClauseFromDB(CVColumns[0].OrderByClause);\n          },\n          error: function (errorThrown) {\n            alert(errorThrown.statusText);\n          }\n        });\n      } else if (cardView.hasIncludedCols) {\n        var fieldItem = null;\n        columnFieldArray = [];\n        var includedFields = cardView.fields;\n        //cardViewColumns = cardView.fields;\n        if (includedFields != null && includedFields.length > 0) {\n          for (var i = 0; i < includedFields.length; i++) {\n            fieldItem = jQuery.grep(totalTabFileds, function (value) {\n              return value.getAD_Field_ID() == includedFields[i].getAD_Field_ID();\n            });\n            if (fieldItem.length > 0) {\n              columnFieldArray.push(fieldItem[0].getAD_Field_ID());\n            }\n            cardViewColArray.push({\n              AD_Field_ID: includedFields[i].getAD_Field_ID(),\n              CardViewID: AD_CardView_ID,\n              SeqNo: 0,\n              FieldName: includedFields[i].getHeader()\n            });\n            iClone.prepend(includedFields[i].getHeader()).attr(\"title\", includedFields[i].getHeader());\n            if (mTab.getFieldById(includedFields[i].getAD_Field_ID()).getShowIcon()) {\n              iClone.attr(\"showfieldicon\", false);\n            }\n            iClone.attr(\"fieldid\", includedFields[i].getAD_Field_ID()).attr(\"seqNo\", includedFields[i].SeqNo);\n            iClone.attr(\"id\", WindowNo + \"_\" + includedFields[i].getAD_Field_ID());\n            DivCardField.append(iClone);\n            iClone = DivCardField.find('.fieldLbl:first').clone(true);\n            iClone.removeClass('displayNone');\n          }\n        }\n      }\n    };\n\n    /**Fill group filled */\n    var FillGroupFields = function () {\n      if (cmbGroupField != null) {\n        cmbGroupField.children().remove();\n      }\n      var fields = null;\n      var dbResult = null;\n      lovcardList = {};\n      if (mTab != null && mTab.getFields().length > 0) {\n        cmbGroupField.append(\"<Option value=\" + -1 + \"></Option>\");\n        tabField = mTab.getFields();\n        for (var i = 0; i < tabField.length; i++) {\n          var c = tabField[i].getColumnName().toLower();\n          if (c == \"created\" || c == \"createdby\" || c == \"updated\" || c == \"updatedby\") {\n            continue;\n          }\n          if (VIS.DisplayType.IsLookup(tabField[i].getDisplayType()) && tabField[i].getLookup() && tabField[i].getLookup().getIsValidated() && tabField[i].getIsDisplayed() || tabField[i].getDisplayType() == VIS.DisplayType.YesNo) {\n            cmbGroupField.append(\"<Option value=\" + tabField[i].getAD_Field_ID() + \"> \" + VIS.Utility.Util.getIdentifierDisplayVal(tabField[i].getHeader()) + \"</Option>\");\n            if (tabField[i].getDisplayType() == VIS.DisplayType.List || tabField[i].getDisplayType() == VIS.DisplayType.TableDir || tabField[i].getDisplayType() == VIS.DisplayType.Table || tabField[i].getDisplayType() == VIS.DisplayType.Search) {\n              if (tabField[i].lookup && tabField[i].lookup.getData()) {\n                lovcardList[tabField[i].getAD_Field_ID()] = tabField[i].lookup.getData();\n              }\n            }\n          }\n        }\n      }\n      if (AD_GroupField_ID != null && AD_GroupField_ID > 0) {\n        var result = jQuery.grep(tabField, function (value) {\n          return value.getAD_Field_ID() == AD_GroupField_ID;\n        });\n        cmbGroupField.find(\"[value='\" + AD_GroupField_ID + \"']\").attr(\"selected\", \"selected\");\n      }\n      FillforGroupSeq(AD_GroupField_ID);\n    };\n\n    /**\r\n     * Fill Group sequence\r\n     * @param {any} fieldID\r\n     */\n    var FillforGroupSeq = function (fieldID) {\n      groupSequenceFeilds.find('.onlyLOV').remove();\n      var GrpSeqfeildClone = groupSequenceFeilds.find('.vis-sec-2-sub-itm:hidden').clone(true);\n      GrpSeqfeildClone.removeClass(\"displayNone\");\n      groupSequenceFeilds.find('.vis-sec-2-sub-itm:not(:hidden)').remove();\n      if (lovcardList[fieldID]) {\n        for (var i = 0, ln = lovcardList[fieldID]; i < ln.length; i++) {\n          if (ln[i].Key.toString().length > 0 && ln[i].Name.toString().length > 0) {\n            GrpSeqfeildClone.attr(\"key\", ln[i].Key);\n            GrpSeqfeildClone.find('.vis-sub-itm-title').text(VIS.Utility.Util.getIdentifierDisplayVal(ln[i].Name));\n            groupSequenceFeilds.append(GrpSeqfeildClone);\n            GrpSeqfeildClone = groupSequenceFeilds.find('.vis-sec-2-sub-itm:last').clone(true);\n            //ulGroupSeqColumns.append('<li key=\"' + ln[i].Key + '\"><input type=\"checkbox\"/>' + ln[i].Name + '</li>');\n          }\n        }\n        ;\n        //ulGroupSeqColumns.find('input').prop('checked', true)\n        var idx = cardsList.find(\".crd-active\").attr('idx');\n        var seq = cardViewInfo[idx].groupSequence;\n        var excGrp = cardViewInfo[idx].excludedGroup;\n        if (seq) {\n          seq = seq.split(\",\");\n          excGrp = excGrp.split(\",\");\n          for (var j = 0; j < seq.length; j++) {\n            var item = groupSequenceFeilds.find(\"[key='\" + seq[j] + \"']\");\n            if (excGrp.lastIndexOf(seq[j]) != -1) {\n              item.find('.fa-check-square-o').removeClass('fa-check-square-o').addClass('fa-square-o');\n              //item.find('input').prop('checked', false);\n            }\n            var before = groupSequenceFeilds.find(\".vis-sec-2-sub-itm\").eq(j);\n            item.insertBefore(before);\n          }\n        }\n        groupSequenceFeilds.closest('.vis-sec-2-wrapper').css('height', '100%');\n        var h = $(window).height() - 248;\n        groupSequenceFeilds.css('height', h + 'px');\n        groupSequenceFeilds.sortable({\n          disabled: false\n        });\n      } else {\n        groupSequenceFeilds.closest('.vis-sec-2-wrapper').css('height', '100%');\n        groupSequenceFeilds.append('<div class=\"onlyLOV\"  key=\"\"><span>' + VIS.Msg.getMsg(\"OnlyForLOV\") + '</span></div>');\n        groupSequenceFeilds.sortable({\n          disabled: true\n        });\n      }\n    };\n\n    /** Fill condition dropdown */\n    var FillCVConditionCmbColumn = function () {\n      var html = '<option value=\"-1\"> </option>';\n      for (var c = 0; c < findFields.length; c++) {\n        // get field\n        var field = findFields[c];\n        if (field.getDisplayType() == VIS.DisplayType.Image) {\n          continue;\n        }\n        if (field.getIsEncrypted()) continue;\n        // get field's column name\n        var columnName = field.getColumnName();\n        if (field.getDisplayType() == VIS.DisplayType.Button) {\n          if (field.getAD_Reference_Value_ID() == 0) continue;\n          if (columnName.endsWith(\"_ID\")) field.setDisplayType(VIS.DisplayType.Table);else field.setDisplayType(VIS.DisplayType.List);\n          //field.loadLookUp();\n        }\n\n        // get text to be displayed\n        var header = field.getHeader();\n        if (header == null || header.length == 0) {\n          // get text according to the language selected\n          header = VIS.Msg.getElement(VIS.context, columnName);\n          if (header == null || header.Length == 0) continue;\n        }\n        // if given field is any key, then add \"(ID)\" to it\n        if (field.getIsKey()) header += \" (ID)\";\n        html += '<option value=\"' + columnName + '\">' + header + '</option>';\n      }\n      cmbColumn.html(html);\n    };\n\n    /**\r\n     * Fill condition Table\r\n     * @param {any} data\r\n     */\n    function FillCVConditonTable(data) {\n      var condition = {};\n      cvConditionArray = {};\n      var strConditionValue = \"\";\n      var strConditionText = \"\";\n      var s = null;\n      var st = null;\n      var colHeader = null;\n      var colVaue = null;\n      var queryValue = null;\n      var queryText = null;\n      var operator = null;\n      var operatorText = null;\n      for (var i = 0; i < data.length; i++) {\n        cvConditionArray = {};\n        cvConditionArray[\"Color\"] = data[i].Color;\n        cvConditionArray[\"Condition\"] = [];\n        strConditionValue = data[i].ConditionValue.split(\"&\");\n        strConditionText = data[i].ConditionText.split(\"&\");\n        for (var j = 0; j < strConditionValue.length; j++) {\n          condition = {};\n          if (strConditionValue[j].contains(\"!\")) {\n            s = strConditionValue[j].trim().split(\"!\");\n            st = strConditionText[j].trim().split(\"!\");\n            operator = \"!\";\n            operatorText = \"!=\";\n            colHeader = st[0].trim().substring(0 + 1, st[0].lastIndexOf(\"@\"));\n            colVaue = s[0].trim().substring(0 + 1, s[0].lastIndexOf(\"@\"));\n            queryText = st[1];\n            queryValue = s[1];\n          } else if (strConditionValue[j].contains(\"=\")) {\n            s = strConditionValue[j].split(\"=\");\n            st = strConditionText[j].split(\"=\");\n            operator = \"=\";\n            operatorText = \"=\";\n            colHeader = st[0].trim().substring(0 + 1, st[0].lastIndexOf(\"@\"));\n            colVaue = s[0].trim().substring(0 + 1, s[0].lastIndexOf(\"@\"));\n            queryText = st[1];\n            queryValue = s[1];\n          } else if (strConditionValue[j].contains(\"<\")) {\n            s = strConditionValue[j].split(\"<\");\n            st = strConditionText[j].split(\"<\");\n            operator = \"<\";\n            operatorText = \"<\";\n            colHeader = st[0].trim().substring(0 + 1, st[0].lastIndexOf(\"@\"));\n            colVaue = s[0].trim().substring(0 + 1, s[0].lastIndexOf(\"@\"));\n            queryText = st[1];\n            queryValue = s[1];\n          } else if (strConditionValue[j].contains(\">\")) {\n            s = strConditionValue[j].split(\">\");\n            st = strConditionText[j].split(\">\");\n            operator = \">\";\n            operatorText = \">\";\n            colHeader = st[0].trim().substring(0 + 1, st[0].lastIndexOf(\"@\"));\n            colVaue = s[0].trim().substring(0 + 1, s[0].lastIndexOf(\"@\"));\n            queryText = st[1];\n            queryValue = s[1];\n          }\n          condition[\"ColHeader\"] = colHeader;\n          condition[\"ColName\"] = colVaue;\n          condition[\"Operator\"] = operator;\n          condition[\"OperatorText\"] = operatorText;\n          condition[\"QueryValue\"] = queryValue;\n          condition[\"QueryText\"] = queryText;\n          cvConditionArray[\"Condition\"].push(condition);\n        }\n        cardviewCondition.push(cvConditionArray);\n      }\n      //if (!isFirstLoad) {\n      AddRow(cardviewCondition);\n      //}\n    }\n    ;\n    var AddRow = function (data) {\n      var rowClone = cvTable.find('tr:first').clone(true);\n      rowClone.removeAttr('style');\n      cvTable.find('tr:not(:first)').remove();\n      if (data.length > 0) {\n        for (var i = 0; i < data.length; i++) {\n          for (var j = 0; j < data[i].Condition.length; j++) {\n            rowClone.find('.td_bgColor i').css({\n              'background': data[i].Color,\n              'color': 'transparent'\n            });\n            rowClone.find('.td_bgColor').attr(\"value\", data[i].Color);\n            rowClone.find('.td_column').text(data[i].Condition[j].ColHeader).attr('value', data[i].Condition[j].ColName);\n            rowClone.find('.td_operator').text(data[i].Condition[j].Operator).attr('value', data[i].Condition[j].OperatorText);\n            rowClone.find('.td_queryValue').text(data[i].Condition[j].QueryValue).attr('value', data[i].Condition[j].QueryText);\n            cvTable.append(rowClone);\n            rowClone = cvTable.find('tr:last').clone(true);\n          }\n        }\n      } else {\n        cvTable.append(\"<tr style='height:100%'><td colspan='5' style='background-color: #f1f1f173;'><div class='align-items-center d-flex justify-content-center'><i class='fa fa-database mr-1 fa-2x' aria-hidden='true'></i>\" + VIS.Msg.getMsg(\"NoResult\") + \"</div></td></tr>\");\n      }\n    };\n\n    /**\r\n     * Delete card\r\n     * */\n    var DeleteCardView = function () {\n      var url = VIS.Application.contextUrl + \"CardView/DeleteCardViewRecord\";\n      $.ajax({\n        type: \"POST\",\n        async: false,\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify({\n          'ad_CardView_ID': AD_CardView_ID\n        }),\n        success: function (data) {\n          var result = JSON.parse(data);\n          isDefaultcard = false;\n          AD_CardView_ID = 0;\n          GetCards(false);\n          //idx = cardsList.find('.crd-active').attr('idx');\n          //if (cardViewInfo && cardViewInfo.length > 0) {\n          //    cardViewInfo.splice(idx, 1);\n          //}\n          //cardsList.find('.crd-active').remove();\n\n          //if (cardViewInfo && cardViewInfo.length > 0) {\n          //    cardsList.find('div:first').addClass('crd-active');\n          //    cardsList.find('div:first').clcik();                       \n          //} else {\n          //    AD_CardView_ID = 0;\n          //    idx = -1;\n          //    isSameUser = true;\n          //    btnNewCard.click();\n          //    btnCancle.addClass('vis-disable-event');\n          //}\n          //cardView.getCardViewData(mTab, AD_CardView_ID);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n        }\n      });\n    };\n\n    /**\r\n     * manage control according to user\r\n     * @param {any} indx\r\n     */\n    var ControlMgmt = function (indx) {\n      if (indx && cardViewInfo && cardViewInfo[indx] && cardViewInfo[indx].CreatedBy == VIS.context.getAD_User_ID() && cardViewInfo[indx].IsEditable) {\n        isSameUser = true;\n        //btnCopy.addClass('vis-disable-event');\n        //btnEdit.removeClass('vis-disable-event');\n        btnDelete.removeClass('vis-disable-event');\n        btnSaveClose.removeClass('vis-disable-event');\n        btnApply.removeClass('vis-disable-event');\n        btnFinesh.removeClass('vis-disable-event');\n        btnOnlySave.removeClass('vis-disable-event');\n        btnChangeTemplate.removeClass('vis-disable-event');\n      } else {\n        isSameUser = false;\n        //btnCopy.removeClass('vis-disable-event');\n        //btnEdit.addClass('vis-disable-event');\n        btnDelete.addClass('vis-disable-event');\n        btnSaveClose.addClass('vis-disable-event');\n        btnApply.addClass('vis-disable-event');\n        btnFinesh.addClass('vis-disable-event');\n        btnOnlySave.addClass('vis-disable-event');\n        btnChangeTemplate.addClass('vis-disable-event');\n      }\n\n      //if (VIS.MRole.isAdministrator) {\n      //    chkPublic.show();\n      //} else {\n      //    chkPublic.hide();\n      //}\n    };\n    var enableDisable = function (isEnable) {\n      if (isNewRecord || isEdit) {\n        isNewRecord ? btnDelete.addClass('vis-disable-event') : btnDelete.removeClass('vis-disable-event');\n        if (isEdit && !isSameUser) {\n          btnDelete.addClass('vis-disable-event');\n        }\n      }\n    };\n\n    /**\r\n     * Save card details\r\n     * @param {any} e\r\n     */\n    function SaveChanges(e) {\n      IsBusy(true);\n      window.setTimeout(function () {\n        var cvConditionValue = \"\";\n        var cvConditionText = \"\";\n        strConditionArray = [];\n        var queryValue = \"\";\n        for (i = 0; i < cardviewCondition.length; i++) {\n          cvConditionValue = \"\";\n          cvConditionText = \"\";\n          for (j = 0; j < cardviewCondition[i].Condition.length; j++) {\n            if (j == 0) {\n              cvConditionValue += \"@\" + cardviewCondition[i].Condition[j].ColName + \"@\" + cardviewCondition[i].Condition[j].Operator + cardviewCondition[i].Condition[j].QueryValue;\n              cvConditionText += \"@\" + cardviewCondition[i].Condition[j].ColHeader + \"@\" + cardviewCondition[i].Condition[j].Operator + cardviewCondition[i].Condition[j].QueryText;\n            } else {\n              cvConditionValue += \" & \" + \"@\" + cardviewCondition[i].Condition[j].ColName + \"@\" + cardviewCondition[i].Condition[j].Operator + cardviewCondition[i].Condition[j].QueryValue;\n              cvConditionText += \" & \" + \"@\" + cardviewCondition[i].Condition[j].ColHeader + \"@\" + cardviewCondition[i].Condition[j].Operator + cardviewCondition[i].Condition[j].QueryText;\n            }\n          }\n          strConditionArray.push({\n            \"Color\": cardviewCondition[i].Color.toString(),\n            \"ConditionValue\": cvConditionValue,\n            \"ConditionText\": cvConditionText\n          });\n        }\n        if (isNewRecord) {\n          if (txtCardName.val() == \"\") {\n            VIS.ADialog.error(\"FillMandatory\", true, \"Name\");\n            IsBusy(false);\n            return false;\n          }\n        } else if (!isNewRecord && AD_CardView_ID < 1 && VIS.MRole.isAdministrator) {\n          VIS.ADialog.error(\"ClickNew\", true, \"\");\n          IsBusy(false);\n          return false;\n        }\n\n        //var len = includedFeilds.find('div:not(:first)').length;\n        //if (len.length <= 0)\n        //    return false;\n\n        SaveCardViewColumn();\n        e.stopPropagation();\n        e.preventDefault();\n      }, 50);\n    }\n    ;\n    var SaveCardViewColumn = function () {\n      var idx = cardsList.find('.crd-active').attr('idx');\n      if (idx && cardViewInfo != null && cardViewInfo.length > 0) {\n        cardViewUserID = parseInt(cardViewInfo[idx].CreatedBy);\n      } else {\n        cardViewUserID = VIS.context.getAD_User_ID();\n      }\n      AD_User_ID = VIS.context.getAD_User_ID();\n      if (isCopy) {\n        isNewRecord = true;\n        isCopy = false;\n        //if (!VIS.MRole.isAdministrator) {\n        //    chkPublic.prop(\"checked\", false);\n        //    chkDefault.prop(\"checked\", false);\n        //}\n      }\n      if (isNewRecord && cardViewInfo != null) {\n        for (var a = 0; a < cardViewInfo.length; a++) {\n          if (cardViewInfo[a].CardViewName.trim() == txtCardName.val().trim()) {\n            VIS.ADialog.error(\"cardAlreadyExist\", true, \"\");\n            IsBusy(false);\n            return false;\n          }\n        }\n      }\n      cardViewName = txtCardName.val().trim();\n      //}\n\n      if (isEdit || isNewRecord) {\n        SaveCardInfoFinal();\n      } else {\n        IsBusy(false);\n        if (closeDialog) {\n          ch.close();\n          isEdit = false;\n          isNewRecord = false;\n          if (gc.isCardRow && !fromCardDialogBtn)\n            //cardView.requeryData();\n            cardView.getCardViewData(mTab, AD_CardView_ID);\n        } else {\n          isEdit = true;\n          isNewRecord = false;\n          if (!isOnlySave) {\n            DivCradStep1.show();\n            DivCradStep2.hide();\n          }\n        }\n      }\n    };\n    var SaveCardInfoFinal = function () {\n      var grpSeq = \"\";\n      var skipGrp = \"\";\n      $.each(groupSequenceFeilds.find('.vis-sec-2-sub-itm'), function () {\n        grpSeq += $(this).attr('key') + \",\";\n        if (!$(this).find('.grpChk').hasClass('fa-check-square-o')) {\n          skipGrp += $(this).attr('key') + \",\";\n        }\n      });\n      var selIdx = cardsList.find(\".crd-active\").attr('idx');\n      grpSeq = grpSeq.replace(/,\\s*$/, \"\");\n      skipGrp = skipGrp.replace(/,\\s*$/, \"\");\n      var sortOrder = sortOrderArray.join(',');\n      cardViewArray = [];\n      var cardID = AD_CardView_ID;\n      if (isNewRecord) cardID = 0;\n      cardViewArray.push({\n        AD_Window_ID: AD_Window_ID,\n        AD_Tab_ID: AD_Tab_ID,\n        UserID: AD_User_ID,\n        AD_GroupField_ID: cmbGroupField.find(\":selected\").val(),\n        isNewRecord: isNewRecord,\n        CardViewName: cardViewName,\n        CardViewID: cardID,\n        IsDefault: chkDefault.is(\":checked\"),\n        AD_HeaderLayout_ID: AD_HeaderLayout_ID,\n        isPublic: chkPublic.is(\":checked\") == true ? false : true,\n        groupSequence: grpSeq\n      });\n      var url = VIS.Application.contextUrl + \"CardView/SaveCardViewColumns\";\n      $.ajax({\n        type: \"POST\",\n        async: false,\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify({\n          'lstCardView': cardViewArray,\n          'lstCardViewColumns': cardViewColArray,\n          'lstCardViewCondition': strConditionArray,\n          'excludeGrp': skipGrp,\n          'orderByClause': sortOrder\n        }),\n        success: function (data) {\n          var result = JSON.parse(data);\n          AD_CardView_ID = result;\n          toastr.success(VIS.Msg.getMsg('SavedSuccessfully'), '', {\n            timeOut: 3000,\n            \"positionClass\": \"toast-top-center\",\n            \"closeButton\": true\n          });\n          if (closeDialog) {\n            isNewRecord = false;\n            isEdit = false;\n            if (gc.isCardRow && !fromCardDialogBtn) cardView.getCardViewData(mTab, AD_CardView_ID);\n            ch.close();\n          } else {\n            if (isNewRecord) {\n              GetCards(true);\n              //getTemplateDesign();                            \n            } else {\n              cardViewInfo[selIdx].groupSequence = grpSeq;\n              cardViewInfo[selIdx].excludedGroup = skipGrp;\n              cardViewInfo[selIdx].AD_GroupField_ID = cmbGroupField.find(\":selected\").attr(\"fieldid\");\n              //cardViewInfo[selIdx].AD_HeaderLayout_ID = 0;\n              cardViewInfo[selIdx].CardViewName = cardViewName;\n              cardViewInfo[selIdx].UserID = AD_User_ID;\n              cardViewInfo[selIdx].OrderByClause = sortOrder;\n              cardViewInfo[selIdx].Updated = new Date().toLocaleDateString();\n              cardsList.find('.crd-active .vis-lft-sgl-title').text(cardViewName);\n            }\n            getTemplateDesign();\n            isEdit = true;\n            isNewRecord = false;\n            if (!isOnlySave) {\n              DivCradStep1.show();\n              DivCradStep2.hide();\n              FillFields(true, false);\n            }\n          }\n          IsBusy(false);\n          btnCopy.removeClass('vis-disable-event');\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        }\n      });\n      //return includeCols;\n    };\n    var resetAll = function () {\n      txtCardName.val('');\n      cmbGroupField.val('-1');\n      cmbGroupField.change();\n      cmbOrderClause.val('-1');\n      sortOrderArray = [];\n      lastSortOrderArray = [];\n      LastCVCondition = [];\n      cardviewCondition = [];\n      AddRow(cardviewCondition);\n      clearOrderByClause();\n      btnDelete.addClass('vis-disable-event');\n      btnCancle.addClass('vis-disable-event');\n      chkDefault.prop(\"checked\", false);\n      chkPublic.prop(\"checked\", false);\n      chkDefault.parent().show();\n    };\n    function getTargetMField(columnName) {\n      // if no column name, then return null\n      if (columnName == null || columnName.length == 0) return null;\n      // else find field for the given column\n      for (var c = 0; c < mTab.getFields().length; c++) {\n        var field = mTab.getFields()[c];\n        if (columnName.equals(field.getColumnName())) return field;\n      }\n      return null;\n    }\n    ;\n    function getControlValue(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(2, 1);\n        crtlObj = control1;\n      }\n      // if control exists\n      if (crtlObj != null) {\n        // if control is any checkbox\n        if (crtlObj.getDisplayType() == VIS.DisplayType.YesNo) {\n          if (crtlObj.getValue().toString().toLowerCase() == \"true\") {\n            return \"Y\";\n          } else {\n            return \"N\";\n          }\n        }\n        if (VIS.DisplayType.IsDate(crtlObj.getDisplayType())) {\n          var val = crtlObj.getValue();\n          if (val && val.endsWith('.000Z')) val = val.replace('.000Z', 'Z');\n          return val;\n        }\n        if (VIS.DisplayType.IsNumeric(crtlObj.getDisplayType())) {\n          // return 0;\n        }\n        // return control's value\n        if (crtlObj.getValue() == '') {\n          return null;\n        }\n        return crtlObj.getValue();\n      }\n      return \"\";\n    }\n    ;\n    function SetControlValue(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(2, 1);\n        crtlObj = control1;\n      }\n      // if control exists\n      if (crtlObj != null) {\n        // if control is any checkbox\n        if (crtlObj.getDisplayType() == VIS.DisplayType.YesNo) {\n          if (crtlObj.getValue().toString().toLowerCase() == \"true\") {\n            return \"Y\";\n          } else {\n            return \"N\";\n          }\n        }\n        // return control's value\n        crtlObj.setValue(null);\n      }\n    }\n    ;\n\n    /* <param name=\"isValue1\">true if get control's text at value1 position else false</param>\r\n     */\n\n    function getControlText(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(2, 1);\n        crtlObj = control1;\n      }\n      // if control exists\n      if (crtlObj != null) {\n        // get control's text\n        return crtlObj.getDisplay();\n      }\n      return \"\";\n    }\n    ;\n    function SetControlText(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(2, 1);\n        crtlObj = control1;\n      }\n      // if control exists\n      if (crtlObj != null) {\n        // get control's text\n        return crtlObj.getDisplayType(\"\");\n      }\n      return \"\";\n    }\n    ;\n    function setControlNullValue(isValue2) {\n      var crtlObj = null;\n      if (isValue2) {\n        crtlObj = control1;\n      }\n\n      // if control exists\n      if (crtlObj != null) {\n        crtlObj.setValue(null);\n      }\n    }\n    ;\n    function setValueEnabled(isEnabled) {\n      // get control\n      var ctrl = divValue1.children()[1];\n      var btn = null;\n      if (divValue1.children().length > 2) btn = divValue1.children()[2];\n      if (btn) $(btn).prop(\"disabled\", !isEnabled).prop(\"readonly\", !isEnabled);else if (ctrl != null) {\n        $(ctrl).prop(\"disabled\", !isEnabled).prop(\"readonly\", !isEnabled);\n      }\n    }\n    ;\n    function setEnableButton(btn, isEnable) {\n      btn.prop(\"disabled\", !isEnable);\n    }\n    ;\n    function setControl(isValue1, field) {\n      // set column and row position\n      /*****Get control form specified column and row from Grid***********/\n      if (isValue1) control1 = null;\n      control2 = null;\n      var ctrl = null;\n      var ctrl2 = null;\n      if (isValue1) {\n        ctrl = divValue1.children()[0];\n        if (divValue1.children().length > 1) ctrl2 = divValue1.children()[1];\n      }\n\n      //Remove any elements in the list\n      if (ctrl != null) {\n        $(ctrl).remove();\n        if (ctrl2 != null) $(ctrl2).remove();\n        ctrl = null;\n      }\n      /**********************************/\n      var crt = null;\n      // if any filed is given\n      if (field != null) {\n        // if field id any key, then show number textbox \n        if (field.getIsKey()) {\n          crt = new VIS.Controls.VNumTextBox(field.getColumnName(), false, false, true, field.getDisplayLength(), field.getFieldLength(), field.getColumnName());\n        } else {\n          crt = VIS.VControlFactory.getControl(null, field, true, true, false);\n        }\n      } else {\n        // if no field is given show an empty disabled textbox\n        crt = new VIS.Controls.VTextBox(\"columnName\", false, true, false, 20, 20, \"format\", \"GetObscureType\", false); // VAdvantage.Controls.VTextBox.TextType.Text, DisplayType.String);\n      }\n      if (crt != null) {\n        //crt.SetIsMandatory(false);\n        crt.setReadOnly(false);\n        if (VIS.DisplayType.Text == field.getDisplayType() || VIS.DisplayType.TextLong == field.getDisplayType()) {\n          crt.getControl().attr(\"rows\", \"1\");\n          crt.getControl().css(\"width\", \"100%\");\n        } else if (VIS.DisplayType.YesNo == field.getDisplayType()) {\n          crt.getControl().css(\"clear\", \"both\");\n        } else if (VIS.DisplayType.IsDate(field.getDisplayType())) {\n          crt.getControl().css(\"line-height\", \"1\");\n        }\n        var btn = null;\n        if (crt.getBtnCount() > 0 && !(crt instanceof VIS.Controls.VComboBox)) btn = crt.getBtn(0);\n        if (isValue1) {\n          divValue1.find('label').remove();\n          divValue1.append(crt.getControl().css(\"width\", \"95%\"));\n          control1 = crt;\n          if (btn) {\n            divValue1.append(btn);\n            //crt.getControl().css(\"width\", \"60%\");\n            btn.css(\"max-width\", \"35px\");\n          }\n          if (VIS.DisplayType.YesNo != field.getDisplayType()) {\n            divValue1.append('<label for=\"txtQueryValue\">' + VIS.Msg.getMsg(\"QueryValue\") + '</label>');\n          }\n        }\n      }\n    }\n    ;\n    function addOrderByClauseFromDB(OrderByClause) {\n      clearOrderByClause();\n      if (OrderByClause && OrderByClause.length > 0) {\n        sortOrderArray = OrderByClause.split(\",\");\n        for (var m = 0; m < sortOrderArray.length; m++) {\n          var val = sortOrderArray[m].split(' ');\n          var f = mTab.getField(val[0]);\n          addOrderByClauseItems(f.getHeader(), val[0], val[1]);\n        }\n      }\n    }\n    ;\n    function clearOrderByClause() {\n      sortList.empty();\n      sortOrderArray = [];\n      lastSortOrderArray = [];\n    }\n    ;\n    function addOrderByClauseItems(selectedColtext, val, isAsc) {\n      var item = '<div class=\"vis-sortListItem\">' + '<p>' + selectedColtext + '</p>' + '<div class=\"vis-sortListIcons\">' + '<span class=\"vis-sortAsc\">';\n      if (isAsc == \"ASC\") item += '<i class=\"fa fa-sort-amount-asc\"></i>';else item += '<i class=\"fa fa-sort-amount-asc\" style=\"transform: rotate(180deg);padding-top:1px\"></i>';\n      item += '</span>' + '<span class=\"vis-sortIcon vis-sortListItemClose\" data-text=\"' + val + ' ' + isAsc + '\">' + '<i class=\"fa fa-close\"></i>' + '</span>' + '</div>' + '</div>';\n      // $divHeadderLay.append('<label>' + selectedColtext + '(' + isAsc + ')</label>');\n      sortList.append(item);\n    }\n    ;\n    /** Add Selected Template to viewport */\n    function addSelectedTemplate() {\n      var $this = DivTemplate.find('.vis-active-template').clone(true);\n      if ($this.attr(\"lastupdated\")) {\n        spnLastSaved.text(VIS.Msg.getMsg(\"LastSaved\") + \" \" + $this.attr(\"lastupdated\"));\n      }\n      $this.find('.grdDiv').html('');\n      $this.find('.mainTemplate').css(\"zoom\", 1);\n      CardCreatedby = $this.attr(\"createdBy\");\n      isSystemTemplate = $this.attr(\"isSystemTemplate\");\n      AD_HeaderLayout_ID = $this.find('.mainTemplate').attr('templateid');\n      refTempID = Number(AD_HeaderLayout_ID);\n      templateName = $this.find('.mainTemplate').attr('name');\n      if (AD_HeaderLayout_ID == \"0\") {\n        $this.find('.mainTemplate').html($('<div name=\"Section 1\" sectionCount=\"1\" class=\"section1 vis-wizard-section\" style=\"padding:5px;\"></div>'));\n      }\n\n      //if (isSystemTemplate == 'N' || AD_HeaderLayout_ID == \"0\") {\n      //    DivCardFieldSec.find('.vis-previewCard').hide();\n      //} else {\n      //    DivCardFieldSec.find('.vis-previewCard').show();\n      //}\n\n      //txtTemplateName.val($(this).find('.mainTemplate').attr('name')).attr(\"templateid\", $(this).find('.mainTemplate').attr('templateid'));\n\n      if ($this.html() != \"\" || $this.html() != null) {\n        $this.find('.vis-wizard-section').each(function () {\n          var row = $(this).attr('row');\n          var col = $(this).attr('col');\n          var arr = [];\n          for (var i = 0; i < row * col; i++) {\n            arr.push('<div class=\"grdDiv\" style=\"display:none\"></div>');\n          }\n          $(this).find('.grdDiv').each(function () {\n            var areagrid = $(this).css('grid-area').split('/');\n            var idx = col * ($.trim(areagrid[0]) - 1) + ($.trim(areagrid[1]) - 1);\n            if ($.trim(areagrid[0]) != $.trim(areagrid[2]) - 1 || $.trim(areagrid[1]) != $.trim(areagrid[3]) - 1) {\n              -\n              //$(this).append('<span class=\"vis-split-cell\"></span>');\n              $(this).addClass('vis-split-cell');\n            }\n            arr[idx] = $(this)[0].outerHTML;\n          });\n          $(this).html(arr.join(\" \"));\n        });\n        DivViewBlock.find('.grdDiv').unbind('mouseover');\n        DivViewBlock.find('.vis-viewBlock').attr(\"style\", $this.find('.mainTemplate').attr('style') || '');\n        DivViewBlock.find('.vis-viewBlock').html($this.find('.mainTemplate').html());\n        DivViewBlock.find('.grdDiv').mouseover(function (e) {\n          if (mdown && !$(this).hasClass('vis-split-cell')) {\n            selectTo($(this));\n          }\n        });\n        DivViewBlock.find('.vis-viewBlock')[0].addEventListener(\"dragstart\", function (event) {\n          dragged = $(event.target);\n          if (dragged.hasClass('grdDiv')) {\n            event.preventDefault();\n          } else {\n            divTopNavigator.hide();\n            mdown = false;\n          }\n        }, false);\n      }\n    }\n\n    // #endregion\n\n    // #region Step 2 events\n    var measurment = ['px', '%', 'cm', 'mm', 'in', 'pc', 'pt', 'ch', 'em', 'rem', 'vh', 'vw', 'vmin', 'vmax'];\n    var editorProp = {\n      width: {\n        proprty: 'width',\n        value: '',\n        measurment: true\n      },\n      minWidth: {\n        proprty: 'min-width',\n        value: '',\n        measurment: true\n      },\n      height: {\n        proprty: 'height',\n        value: '',\n        measurment: true\n      },\n      minHeight: {\n        proprty: 'min-height',\n        value: '',\n        measurment: true\n      },\n      fontSize: {\n        proprty: 'font-size',\n        value: '',\n        measurment: true\n      },\n      fontFamily: {\n        proprty: 'font-family',\n        value: '',\n        measurment: false\n      },\n      color: {\n        proprty: 'color',\n        value: '',\n        measurment: false\n      },\n      border: {\n        proprty: 'border',\n        value: '',\n        measurment: true\n      },\n      borderType: {\n        proprty: 'border-style',\n        value: '',\n        measurment: false\n      },\n      borderColor: {\n        proprty: 'border-color',\n        value: '',\n        measurment: false\n      },\n      borderLeft: {\n        proprty: 'border-left-width',\n        value: '',\n        measurment: true\n      },\n      borderLeftStyle: {\n        proprty: 'border-left-style',\n        value: '',\n        measurment: false\n      },\n      borderLeftColor: {\n        proprty: 'border-left-color',\n        value: '',\n        measurment: false\n      },\n      borderTop: {\n        proprty: 'border-top-width',\n        value: '',\n        measurment: true\n      },\n      borderTopStyle: {\n        proprty: 'border-top-style',\n        value: '',\n        measurment: false\n      },\n      borderTopColor: {\n        proprty: 'border-top-color',\n        value: '',\n        measurment: false\n      },\n      borderRight: {\n        proprty: 'border-right-width',\n        value: '',\n        measurment: true\n      },\n      borderRightStyle: {\n        proprty: 'border-right-style',\n        value: '',\n        measurment: false\n      },\n      borderRightColor: {\n        proprty: 'border-right-color',\n        value: '',\n        measurment: false\n      },\n      borderBottom: {\n        proprty: 'border-bottom-width',\n        value: '',\n        measurment: true\n      },\n      borderBottomStyle: {\n        proprty: 'border-bottom-style',\n        value: '',\n        measurment: false\n      },\n      borderBottomColor: {\n        proprty: 'border-bottom-color',\n        value: '',\n        measurment: false\n      },\n      borderRadius: {\n        proprty: 'border-radius',\n        value: '',\n        measurment: true\n      },\n      borderTopLeftRadius: {\n        proprty: 'border-top-left-radius',\n        value: '',\n        measurment: true\n      },\n      borderTopRightRadius: {\n        proprty: 'border-top-right-radius',\n        value: '',\n        measurment: true\n      },\n      borderBottomRightRadius: {\n        proprty: 'border-bottom-right-radius',\n        value: '',\n        measurment: true\n      },\n      borderBottomLeftRadius: {\n        proprty: 'border-bottom-left-radius',\n        value: '',\n        measurment: true\n      },\n      padding: {\n        proprty: 'padding',\n        value: '',\n        measurment: true\n      },\n      paddingLeft: {\n        proprty: 'padding-left',\n        value: '',\n        measurment: true\n      },\n      paddingTop: {\n        proprty: 'padding-top',\n        value: '',\n        measurment: true\n      },\n      paddingRight: {\n        proprty: 'padding-right',\n        value: '',\n        measurment: true\n      },\n      paddingBottom: {\n        proprty: 'padding-bottom',\n        value: '',\n        measurment: true\n      },\n      margin: {\n        proprty: 'margin',\n        value: '',\n        measurment: true\n      },\n      marginLeft: {\n        proprty: 'margin-left',\n        value: '',\n        measurment: true\n      },\n      marginTop: {\n        proprty: 'margin-top',\n        value: '',\n        measurment: true\n      },\n      marginRight: {\n        proprty: 'margin-right',\n        value: '',\n        measurment: true\n      },\n      marginBottom: {\n        proprty: 'margin-bottom',\n        value: '',\n        measurment: true\n      },\n      opacity: {\n        proprty: 'opacity',\n        value: '',\n        measurment: false\n      },\n      backgroundColor: {\n        proprty: 'background-color',\n        value: '',\n        measurment: false\n      },\n      gradientInput: {\n        proprty: 'background',\n        value: '',\n        measurment: false\n      },\n      gradient: {\n        proprty: 'background',\n        value: '',\n        measurment: false\n      },\n      boxShadow: {\n        proprty: 'box-shadow',\n        value: '',\n        measurment: true\n      },\n      flexDirection: {\n        proprty: 'flex-direction',\n        value: '',\n        measurment: false\n      },\n      bold: {\n        proprty: 'font-weight',\n        value: 'bold',\n        measurment: false\n      },\n      italic: {\n        proprty: 'font-style',\n        value: 'italic',\n        measurment: false\n      },\n      underline: {\n        proprty: 'text-decoration',\n        value: 'underline',\n        measurment: false\n      },\n      textLeft: {\n        proprty: 'text-align',\n        value: 'left',\n        measurment: false\n      },\n      textCenter: {\n        proprty: 'text-align',\n        value: 'center',\n        measurment: false\n      },\n      textJustify: {\n        proprty: 'text-align',\n        value: 'justify',\n        measurment: false\n      },\n      textRight: {\n        proprty: 'text-align',\n        value: 'right',\n        measurment: false\n      },\n      upperCase: {\n        proprty: 'text-transform',\n        value: 'uppercase',\n        measurment: false\n      },\n      capitalize: {\n        proprty: 'text-transform',\n        value: 'capitalize',\n        measurment: false\n      },\n      lowerCase: {\n        proprty: 'text-transform',\n        value: 'lowercase',\n        measurment: false\n      },\n      flexJustifyCenter: {\n        proprty: 'justify-content',\n        value: 'center',\n        measurment: false\n      },\n      flexJustifyStart: {\n        proprty: 'justify-content',\n        value: 'flex-start',\n        measurment: false\n      },\n      flexJustifyEnd: {\n        proprty: 'justify-content',\n        value: 'flex-end',\n        measurment: false\n      },\n      flexJustifySpaceBetween: {\n        proprty: 'justify-content',\n        value: 'space-between',\n        measurment: false\n      },\n      flexJustifySpaceAround: {\n        proprty: 'justify-content',\n        value: 'space-around',\n        measurment: false\n      },\n      flexAlignCenter: {\n        proprty: 'align-items',\n        value: 'center',\n        measurment: false\n      },\n      flexAlignEnd: {\n        proprty: 'align-items',\n        value: 'flex-end',\n        measurment: false\n      },\n      flexAlignStart: {\n        proprty: 'align-items',\n        value: 'flex-start',\n        measurment: false\n      },\n      maxTextmultiline: {\n        proprty: '-webkit-line-clamp',\n        value: '',\n        measurment: false\n      },\n      objectFit: {\n        proprty: 'object-fit',\n        value: '',\n        measurment: false\n      }\n    };\n    var events2 = function () {\n      chkAllBorderRadius.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allBorderRadius').removeClass('displayNone');\n          DivStyleSec1.find('.singleBorderRadius').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allBorderRadius').addClass('displayNone');\n          DivStyleSec1.find('.singleBorderRadius').removeClass('displayNone');\n        }\n      });\n      chkAllPadding.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allPadding').removeClass('displayNone');\n          DivStyleSec1.find('.singlePadding').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allPadding').addClass('displayNone');\n          DivStyleSec1.find('.singlePadding').removeClass('displayNone');\n        }\n      });\n      chkAllMargin.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allMargin').removeClass('displayNone');\n          DivStyleSec1.find('.singleMargin').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allMargin').addClass('displayNone');\n          DivStyleSec1.find('.singleMargin').removeClass('displayNone');\n        }\n      });\n      chkAllBorder.change(function () {\n        if ($(this).is(':checked')) {\n          DivStyleSec1.find('.allBorder').removeClass('displayNone');\n          DivStyleSec1.find('.singleBorder').addClass('displayNone');\n        } else {\n          DivStyleSec1.find('.allBorder').addClass('displayNone');\n          DivStyleSec1.find('.singleBorder').removeClass('displayNone');\n        }\n      });\n\n      //DivStyleSec1.find('.vis-circular-slider-circle').mousedown(function (e) {\n      //    mdown = true;\n      //}).mousemove(function (e) {\n      //    if (mdown) {\n      //        var $slider = DivStyleSec1.find('.vis-circular-slider-dot')\n      //        var deg = getGradientDeg($slider, e);\n      //        $slider.css({ WebkitTransform: 'rotate(' + deg + 'deg)' });\n      //        $slider.css({ '-moz-transform': 'rotate(' + deg + 'deg)' });\n      //        $slider.attr(\"deg\", deg);\n      //        applycommand(\"gradient\", deg);\n      //    }\n      //});\n\n      divTopNavigator.find(\"i\").click(function () {\n        var blok = DivViewBlock.find('.vis-active-block');\n        var cmd = $(this).attr('command');\n        //isChange = true;\n        var f = blok.closest('.fieldGroup').find('.fieldLbl');\n        if (cmd == 'Show') {\n          if (blok.prop('tagName') == 'I' && !blok.hasClass('imgField')) {\n            blok.attr(\"class\", \"fa fa-star\");\n            blok.next().attr('showFieldIcon', false);\n          } else {\n            f.attr('showFieldText', false);\n            f.removeClass(\"displayNone\");\n          }\n          divTopNavigator.find('[command=\"Hide\"]').parent().show();\n          divTopNavigator.find('[command=\"Show\"]').parent().hide();\n          divTopNavigator.hide();\n          templatechanges();\n        } else if (cmd == 'Hide') {\n          if (blok.prop('tagName') == 'I' && !blok.hasClass('imgField')) {\n            blok.attr(\"class\", \"\");\n            blok.next().attr('showFieldIcon', true);\n            templatechanges();\n          } else if (blok.hasClass('imgField')) {\n            blok.css('display', 'none');\n            templatechanges();\n          } else {\n            if (blok.hasClass('fieldValue')) {\n              blok.css(\"display\", \"none\");\n            } else {\n              blok.attr('showFieldText', true);\n              blok.addClass(\"displayNone\");\n            }\n            templatechanges();\n            //blok.html('&nbsp;');\n          }\n          divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n          divTopNavigator.find('[command=\"Show\"]').parent().show();\n          divTopNavigator.hide();\n        } else if (cmd == 'SelectParent') {\n          //isChange = false;\n          if (blok.parent().hasClass(\"fieldGroup\")) {\n            blok.parent().parent().mousedown().mouseup();\n          } else {\n            blok.parent().mousedown().mouseup();\n          }\n        } else if (cmd == 'Separate') {\n          applyunMerge(blok);\n          blok.removeClass('vis-split-cell');\n          $(this).parent().hide();\n          templatechanges();\n        } else if (cmd == 'Merge') {\n          mergeCell();\n          divTopNavigator.find('[command=\"Merge\"]').parent().hide();\n          templatechanges();\n        } else if (cmd == 'Unlink') {\n          divTopNavigator.hide();\n          var fldLbl = blok.closest('.fieldGroup').find('.fieldLbl');\n          unlinkField(fldLbl.attr('title'), fldLbl);\n          templatechanges();\n        } else if (cmd == 'ShowImg') {\n          blok.closest('.fieldGroup').find('.imgField').css(\"display\", \"unset\");\n          divTopNavigator.find('[command=\"ShowImg\"]').parent().hide();\n          templatechanges();\n        } else if (cmd == 'ShowValue') {\n          blok.closest('.fieldGroup').find('.fieldValue').css(\"display\", \"unset\");\n          divTopNavigator.find('[command=\"ShowValue\"]').parent().hide();\n          templatechanges();\n        }\n\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n      });\n      var viewBlock = DivViewBlock.find('.canvas *');\n      viewBlock.mousedown(function (e) {\n        setTimeout(function () {\n          if (e.target.tagName == 'SQL' || $(e.target).hasClass('fieldGroup')) {\n            return;\n          }\n          if (e.ctrlKey) {\n            return;\n          }\n          DivCradStep2.find('.vis-v-rowcol').hide();\n          if ($(e.target).hasClass('grdDiv')) {\n            e.preventDefault();\n            ViewBlockAddDelRowCol(e);\n          }\n          divTopNavigator.find('[command=\"Merge\"]').parent().hide();\n          divTopNavigator.find('[command=\"ShowImg\"]').parent().hide();\n          divTopNavigator.find('[command=\"ShowValue\"]').parent().hide();\n          DivStyleSec1.find('.imgTextCont').addClass('vis-disable-event');\n          DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n          if (count == 1) {\n            DivViewBlock.find('.vis-viewBlock').addClass(\"vis-active-block\");\n          } else {\n            var secCount = $(e.target).closest('.vis-wizard-section').attr(\"sectionCount\");\n            if (!DivGridSec.find(\"[sectionCount='\" + secCount + \"']\").hasClass('section-active')) {\n              DivGridSec.find(\"[sectionCount='\" + secCount + \"'] .vis-grey-disp-el\").click();\n            }\n            $(e.target).addClass(\"vis-active-block\");\n            var top = e.target.offsetTop - divTopNavigator.outerHeight();\n            var left = e.target.offsetLeft;\n            divTopNavigator.css({\n              'top': top,\n              'left': left\n            });\n            divTopNavigator.show();\n            if ($(e.target).closest('.fieldGroup').length > 0) {\n              divTopNavigator.find('[command=\"Unlink\"]').parent().show();\n            } else {\n              divTopNavigator.find('[command=\"Unlink\"]').parent().hide();\n            }\n            divTopNavigator.find('[command=\"fieldName\"]').text('').hide();\n            if ($(e.target).hasClass('fieldLbl')) {\n              divTopNavigator.find('[command=\"fieldName\"]').text($(e.target).closest('.fieldGroup').find('.fieldLbl').attr('title')).show();\n              //divTopNavigator.find('[command=\"Unlink\"]').parent().show();\n              var isTrue = $(e.target).attr('showFieldText') == 'true' ? true : false;\n              if (e.target.hasAttribute('showFieldText') && isTrue) {\n                divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                divTopNavigator.find('[command=\"Show\"]').parent().show();\n              } else {\n                divTopNavigator.find('[command=\"Show\"]').parent().hide();\n                divTopNavigator.find('[command=\"Hide\"]').parent().show();\n              }\n            } else if (e.target.tagName == 'I' && $(e.target).closest('.fieldGroup').find('.imgField').length == 0) {\n              var isTrue = $(e.target).next().attr('showFieldIcon') == 'true' ? true : false;\n              if ($(e.target).next().attr('showFieldIcon') && isTrue) {\n                divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                divTopNavigator.find('[command=\"Show\"]').parent().show();\n              } else {\n                divTopNavigator.find('[command=\"Show\"]').parent().hide();\n                divTopNavigator.find('[command=\"Hide\"]').parent().show();\n              }\n            } else {\n              divTopNavigator.find('[command=\"Show\"]').parent().hide();\n              divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n              if ($(e.target).closest('.fieldGroup').length > 0) {\n                var target = $(e.target).closest('.fieldGroup').find('.fieldLbl');\n                var displayType = mTab.getFieldById(Number(target.attr('fieldid'))).getDisplayType();\n                if (displayType == VIS.DisplayType.TableDir || displayType == VIS.DisplayType.Table || displayType == VIS.DisplayType.List || displayType == VIS.DisplayType.Search) {\n                  var trget = $(e.target).closest('.fieldGroup');\n                  if (trget.find('.imgField:hidden').length > 0) {\n                    divTopNavigator.find('[command=\"ShowImg\"]').parent().show();\n                    divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                  } else if (trget.find('.fieldValue:hidden').length > 0) {\n                    divTopNavigator.find('[command=\"Hide\"]').parent().hide();\n                    divTopNavigator.find('[command=\"ShowValue\"]').parent().show();\n                  } else if (trget.find('.imgField').length == 1 && trget.find('.fieldValue').length == 1) {\n                    divTopNavigator.find('[command=\"Hide\"]').parent().show();\n                    DivStyleSec1.find('.imgTextCont').removeClass('vis-disable-event');\n                  } else {\n                    DivStyleSec1.find('.imgTextCont').addClass('vis-disable-event');\n                  }\n                }\n                var isTrue = target.attr('showFieldText') == 'true' ? true : false;\n                divTopNavigator.find('[command=\"fieldName\"]').text(target.attr('title')).show();\n              }\n              if (isTrue) {\n                divTopNavigator.find('[command=\"Show\"]').parent().show();\n              }\n            }\n            if (!$(e.target).hasClass('vis-split-cell')) {\n              divTopNavigator.find('[command=\"Separate\"]').parent().hide();\n              if ($(e.target).hasClass('grdDiv')) {\n                mdown = true;\n              }\n              var totalCol = DivGridSec.find('.colBox').length - 1;\n              activeSection.find('.grdDiv').each(function (e) {\n                var currentRow = Math.ceil((e + 1) / totalCol);\n                if ($(this).hasClass('vis-active-block')) {\n                  startRowIndex = currentRow - 1;\n                  startCellIndex = e - totalCol * startRowIndex;\n                }\n              });\n            } else {\n              divTopNavigator.find('[command=\"Separate\"]').parent().show();\n            }\n          }\n          if ($(e.target).hasClass('vis-wizard-section')) {\n            divTopNavigator.find('[command=\"fieldName\"]').text('Section ' + $(e.target).attr('sectioncount')).show();\n          }\n          if ($(e.target).hasClass('vis-viewBlock')) {\n            divTopNavigator.find('[command=\"fieldName\"]').text('Main container').show();\n          }\n        }, 30);\n        //$(e.target).not('.ui-resizable-handle').addClass(\"vis-active-block\");\n        //$(this).resizable();\n      }).mouseup(function (e) {\n        setTimeout(function () {\n          mdown = false;\n          fill($(e.target));\n        }, 30);\n      });\n      DivStyleSec1.find('[data-command]').on('change', function (e) {\n        $(this).removeClass('vis-editor-validate');\n        var command = $(this).data('command');\n        var styleValue = $(this).val();\n        var isNegativeNumber = false;\n        if (command.indexOf('margin') != -1 && styleValue.indexOf('-') != -1) {\n          isNegativeNumber = true;\n        }\n        var mtext = styleValue.replace(/\\d+/g, \"\").replace('.', '');\n        var mvalue = styleValue.replace(styleValue.replace(/\\d+/g, \"\"), \"\");\n        if (editorProp[command] && editorProp[command].measurment && styleValue != \"\" && $(this).attr('type') != 'color') {\n          if (measurment.indexOf(mtext) < 0) {\n            if (isNaN(Number(mvalue))) {\n              $(this).addClass('vis-editor-validate');\n              return;\n            }\n            if (isNegativeNumber) {\n              $(this).val(\"-\" + mvalue + \"px\");\n            } else {\n              $(this).val(mvalue + \"px\");\n            }\n          } else if (isNaN(Number(mvalue))) {\n            $(this).addClass('vis-editor-validate');\n            return;\n          }\n        }\n        if (command == 'backgroundColor') {\n          // var clr= rgb2hex(styleValue);\n          DivStyleSec1.find('.vis-zero-BTopLeftBLeft:first').css('background-color', styleValue);\n          DivStyleSec1.find('[data-command=\"backgroundColor\"]').val(styleValue);\n        } else if (command == 'color') {\n          DivStyleSec1.find('.vis-zero-BTopLeftBLeft:last').css('background-color', styleValue);\n          DivStyleSec1.find('[data-command=\"color\"]').val(styleValue);\n        } else if (command == 'borderColor' || command == 'borderLeftColor' || command == 'borderRightColor' || command == 'borderTopColor' || command == 'borderBottomColor') {\n          var bdrDiv = DivStyleSec1.find(\"[data-command='\" + command + \"']\").closest('.vis-prop-pan-cont');\n          bdrDiv.find(\".vis-back-color03\").css('background-color', styleValue);\n        }\n        applycommand(command, $(this).val());\n      });\n      DivStyleSec1.find('[data-command2]').on('click', function (e) {\n        divTopNavigator.hide();\n        var tag = activeSection.find('.vis-active-block').closest('.fieldGroup');\n        var command = $(this).data('command2');\n        var styleProp = tag.find('.fieldValue').attr('style');\n        var classPro = tag.find('.fieldValue').attr('class');\n        tag.find('.fieldValue br').remove();\n        if (command == 'SwapImgTxt') {\n          tag.find('.imgField').before(tag.find('.fieldValue'));\n        } else if (command == 'SwapTxtImg') {\n          tag.find('.fieldValue').before(tag.find('.imgField'));\n        } else if (command == 'SwapTxtImgBr') {\n          tag.find('.fieldValue').before(tag.find('.imgField'));\n          tag.find('.fieldValue').prepend('<br>');\n        } else if (command == 'SwapImgTxtBr') {\n          tag.find('.imgField').before(tag.find('.fieldValue'));\n          tag.find('.fieldValue').append('<br>');\n        }\n      });\n      DivStyleSec1.find('[data-command1]').on('click', function (e) {\n        var command = $(this).data('command1');\n        var tag = DivViewBlock.find('.vis-active-block');\n        var isStyleExist = false;\n        if (editorProp[command].measurment) {\n          isStyleExist = checkStyle(editorProp[command].proprty, editorProp[command].value, tag);\n        } else {\n          isStyleExist = checkStyle(editorProp[command].proprty, false, tag);\n        }\n        var activ = $(this).closest('.vis-horz-align-d').find('.vis-hr-elm-inn-active');\n        activ.removeClass('vis-hr-elm-inn-active');\n        if ((editorProp[command].proprty == \"justify-content\" || editorProp[command].proprty == \"align-items\") && checkStyle(\"display\", \"flex\", tag)) {\n          //applycommand(\"displayFlex\", \"\");\n          tag[0].style.removeProperty(\"display\");\n          applycommand(command, \"\");\n          if (activ.find('[data-command1]').attr('data-command1') != command) {\n            $(this).parent().addClass('vis-hr-elm-inn-active');\n            applycommand(command, editorProp[command].value);\n          }\n        } else if (editorProp[command].proprty == 'text-align' || editorProp[command].proprty == 'text-transform') {\n          applycommand(command, \"\");\n          if (activ.find('[data-command1]').attr('data-command1') != command) {\n            $(this).parent().addClass('vis-hr-elm-inn-active');\n            applycommand(command, editorProp[command].value);\n          }\n        } else {\n          if (isStyleExist) {\n            $(this).parent().removeClass('vis-hr-elm-inn-active');\n            applycommand(command, \"\");\n          } else {\n            $(this).parent().addClass('vis-hr-elm-inn-active');\n            applycommand(command, editorProp[command].value);\n          }\n        }\n        if (tag.attr('style').indexOf('justify-content') != -1 || tag.attr('style').indexOf('align-items') != -1 || tag.attr('style').indexOf('flex-direction') != -1) {\n          tag.css(\"display\", \"flex\");\n        }\n      });\n      DivGridSec.find('.addGridRow').click(function () {\n        var rClone = DivGridSec.find('.rowBox:first').clone(true);\n        rClone.show();\n        DivGridSec.find('.DivRowBox').append(rClone);\n        createGrid();\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.addGridCol').click(function () {\n        var cClone = DivGridSec.find('.colBox:first').clone(true);\n        cClone.show();\n        DivGridSec.find('.DivColBox').append(cClone);\n        createGrid();\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.addGridSection').click(function () {\n        isNewSection = true;\n        DivGridSec.find('.section-active').removeClass('section-active');\n        var sClone = DivGridSec.find('.grid-Section:first').clone(true);\n        sClone.removeClass('displayNone');\n        sClone.addClass('section-active');\n        sectionCount = DivGridSec.find('.grid-Section').length; //Number(DivGridSec.find('.grid-Section:last').attr(\"sectionCount\")) + 1;\n        sClone.attr('sectionCount', sectionCount);\n        sClone.find('.vis-grey-disp-ttl').text(\"Section \" + sectionCount);\n        DivGridSec.find('.vis-sectionAdd').append(sClone);\n        activeSection = $('<div name=\"Section ' + sectionCount + '\" sectionCount=\"' + sectionCount + '\"  class=\"section' + sectionCount + ' vis-wizard-section\" style=\"padding:5px\"></div>');\n        DivViewBlock.find('.vis-viewBlock').append(activeSection);\n        //sectionCount++;\n        DivGridSec.find('.rowBox:not(:first)').remove();\n        DivGridSec.find('.colBox:not(:first)').remove();\n        DivGridSec.find('.addGridRow').click();\n        DivGridSec.find('.addGridCol').click();\n        DivGridSec.find('.vis-sectionAdd').sortable({\n          disabled: false,\n          update: function (event, ui) {\n            var sectionCount = ui.item.attr('sectioncount');\n            var end_pos = ui.item.index();\n            var next = ui.item.next().attr('sectioncount');\n            if (next) {\n              DivViewBlock.find('[sectioncount=\"' + next + '\"]').before(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n            } else {\n              var pre = ui.item.prev().attr('sectioncount');\n              DivViewBlock.find('[sectioncount=\"' + pre + '\"]').after(DivViewBlock.find('[sectioncount=\"' + sectionCount + '\"]'));\n            }\n          }\n        });\n      });\n      DivGridSec.find('.grid-Section .vis-grey-disp-el-xross').click(function () {\n        var secNo = $(this).closest('.grid-Section').attr('sectionCount');\n        if ($(this).closest('.grid-Section').hasClass('section-active')) {\n          DivGridSec.find('.grid-Section').eq(1).addClass('section-active');\n          DivGridSec.find('.grid-Section').eq(1).find('.vis-grey-disp-el').click();\n        }\n        $(this).closest('.grid-Section').remove();\n        var removeSection = DivViewBlock.find('.vis-viewBlock .section' + secNo);\n        removeSection.find('.fieldLbl').each(function () {\n          if ($(this).attr('title') && $(this).attr('title').length > 0) {\n            unlinkField($(this).attr('title'), $(this));\n          }\n        });\n        removeSection.remove();\n        delete gridObj['section' + secNo];\n        secNo = DivGridSec.find('.section-active').attr('sectionCount');\n        activeSection = DivViewBlock.find('.vis-viewBlock .section' + secNo);\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.grid-Section .vis-grey-disp-el').click(function () {\n        DivGridSec.find('.section-active').removeClass('section-active');\n        $(this).parent().addClass('section-active');\n        var secNo = DivGridSec.find('.section-active').attr('sectionCount');\n        activeSection = DivViewBlock.find('.vis-viewBlock .section' + secNo);\n        DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n        activeSection.addClass('vis-active-block');\n        createGridRowCol();\n        if (isUndoRedo) {\n          //isUndoRedo = false;\n        } else {\n          templatechanges();\n        }\n      });\n      btnVaddrow.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdRowAdd').eq(Number(gridArea[2]) - 1).click();\n      });\n      btnVdelrow.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdRowDel').eq(Number(gridArea[2]) - 1).click();\n      });\n      btnVaddCol.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdColAdd').eq(Number(gridArea[3]) - 1).click();\n      });\n      btnVdelCol.click(function () {\n        var gridArea = DivViewBlock.find('.vis-active-block').css('grid-area').split('/');\n        DivGridSec.find('.grdColDel').eq(Number(gridArea[3]) - 1).click();\n      });\n      DivGridSec.find('.grdRowDel').click(function () {\n        var idx = $(this).closest('.rowBox').index();\n        rowIdx = idx;\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        var dNo = idx * totalCol + 1 - totalCol;\n        for (var i = dNo; i < dNo + totalCol; i++) {\n          activeSection.find('.grdDiv').eq(i - 1).addClass('del');\n          var blk = activeSection.find('.grdDiv').eq(i - 1).find('.fieldLbl');\n          if (blk && blk.attr('title') && blk.attr('title').length > 0) {\n            unlinkField(blk.attr('title'), blk);\n          }\n        }\n        activeSection.find('.del').remove();\n        $(this).closest('.rowBox').remove();\n        gridCss(-1, 0);\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.grdRowAdd').click(function () {\n        var idx = $(this).closest('.rowBox').index() - 1;\n        var rClone = DivGridSec.find('.rowBox:first').clone(true);\n        rClone.show();\n        DivGridSec.find('.DivRowBox').append(rClone);\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        var pos = (idx + 1) * totalCol;\n        rowIdx = idx + 1;\n        for (var i = 0; i < totalCol; i++) {\n          activeSection.find('.grdDiv').eq(pos - 1).after(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n        }\n        gridCss(1, 0);\n        templatechanges();\n      });\n      DivGridSec.find('.grdColDel').click(function () {\n        var idx = $(this).closest('.colBox').index() - 1;\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        colIdx = idx + 1;\n        for (var i = 0; i < totalRow; i++) {\n          for (var j = 0; j < totalCol; j++) {\n            if (j == idx) {\n              var dNo = totalCol * i + j;\n              activeSection.find('.grdDiv').eq(dNo).addClass('del');\n              var blk = activeSection.find('.grdDiv').eq(dNo).find('.fieldLbl');\n              if (blk && blk.attr('title') && blk.attr('title').length > 0) {\n                unlinkField(blk.attr('title'), blk);\n              }\n            }\n          }\n        }\n        activeSection.find('.del').remove();\n        $(this).closest('.colBox').remove();\n        gridCss(0, -1);\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        templatechanges();\n      });\n      DivGridSec.find('.grdColAdd').click(function () {\n        var cClone = DivGridSec.find('.colBox:first').clone(true);\n        cClone.show();\n        DivGridSec.find('.DivColBox').append(cClone);\n        addedColPos = [];\n        var idx = $(this).closest('.colBox').index() - 1;\n        var totalRow = DivGridSec.find('.rowBox').length - 1;\n        var totalCol = DivGridSec.find('.colBox').length - 1;\n        colIdx = idx + 1;\n        for (var i = 0; i < totalRow; i++) {\n          for (var j = 0; j < totalCol; j++) {\n            if (j == idx) {\n              var pos = totalCol * i + j;\n              addedColPos.push(pos + 1);\n              activeSection.find('.grdDiv').eq(pos).after(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n            }\n          }\n        }\n        gridCss(0, 1);\n        templatechanges();\n      });\n      DivGridSec.find('.mergeCell').click(function () {\n        mergeCell();\n      });\n      txtColGap.change(function () {\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        gridCss();\n        templatechanges();\n      });\n      txtRowGap.change(function () {\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        gridCss();\n        templatechanges();\n      });\n      DivGridSec.find('.rowBox input,select').change(function () {\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        gridCss();\n        templatechanges();\n      });\n      DivGridSec.find('.colBox input,select').change(function () {\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n        gridCss();\n        templatechanges();\n      });\n      DivCardField.find('.vis-grey-icon .fa-circle').click(function () {\n        if ($(this).hasClass('vis-succes-clr')) {\n          var fid = $(this).closest('.fieldLbl').attr('fieldid');\n          DivViewBlock.find('[fieldid=\"' + fid + '\"]').mousedown().mouseup();\n          setTimeout(function () {\n            divTopNavigator.find('[command=\"Unlink\"]').click();\n          }, 100);\n        } else {\n          linkField($(this).closest('.fieldLbl'));\n        }\n        templatechanges();\n      });\n      btn_BlockCancel.click(function () {\n        DivTemplate.find('.mainTemplate[templateid=\"' + AD_HeaderLayout_ID + '\"]').parent().click();\n        if (count > 1) {\n          addSelectedTemplate();\n          fillcardLayoutfromTemplate();\n        }\n        btn_BlockCancel.hide();\n      });\n    };\n    // #endregion\n    // #region Step 2 functions    \n\n    /**\r\n     * Genrate grid css Layout\r\n     * @param {any} r\r\n     * @param {any} c\r\n     */\n    function gridCss(r, c) {\n      if (!r) {\n        r = 0;\n      }\n      if (!c) {\n        c = 0;\n      }\n      var secNo = DivGridSec.find('.section-active').attr('sectionCount');\n      var secName = DivGridSec.find('.section-active .vis-grey-disp-ttl').text();\n      var Obj = {};\n      var rowCss = \"\";\n      DivGridSec.find('.rowBox:not(:first)').each(function (i) {\n        if (i == 0) {\n          $(this).find('.grdRowDel').hide();\n        }\n        if ($(this).find('select :selected').val() == 'auto') {\n          rowCss += $(this).find('select :selected').val() + ' ';\n        } else {\n          rowCss += $(this).find('input').val() + '' + $(this).find('select :selected').val() + ' ';\n        }\n        Obj['row_' + i] = {\n          val: $(this).find('input').val(),\n          msr: $(this).find('select :selected').val()\n        };\n      });\n      var colCss = \"\";\n      DivGridSec.find('.colBox:not(:first)').each(function (i) {\n        if (i == 0) {\n          $(this).find('.grdColDel').hide();\n        }\n        if ($(this).find('select :selected').val() == 'auto') {\n          colCss += $(this).find('select :selected').val() + ' ';\n        } else {\n          colCss += $(this).find('input').val() + '' + $(this).find('select :selected').val() + ' ';\n        }\n        Obj['col_' + i] = {\n          val: $(this).find('input').val(),\n          msr: $(this).find('select :selected').val()\n        };\n      });\n      var totalRow = DivGridSec.find('.rowBox:not(:first)').length;\n      var totalCol = DivGridSec.find('.colBox:not(:first)').length;\n      Obj[\"sectionNo\"] = secNo;\n      Obj[\"sectionName\"] = secName;\n      Obj[\"rowGap\"] = txtRowGap.val();\n      Obj[\"colGap\"] = txtColGap.val();\n      Obj[\"totalRow\"] = totalRow;\n      Obj[\"totalCol\"] = totalCol;\n      gridObj[\"section\" + secNo] = Obj;\n      var grSec = activeSection;\n      grSec.attr(\"row\", totalRow);\n      grSec.attr(\"col\", totalCol);\n      grSec.css({\n        'grid-template-columns': colCss,\n        'grid-template-rows': rowCss,\n        'gap': txtRowGap.val() + 'px ' + txtColGap.val() + 'px'\n      });\n      var isEnter = false;\n      var ri = rowIdx;\n      var ci = colIdx;\n      if (r == -1) {\n        ri--;\n      }\n      if (c == -1) {\n        ci--;\n      }\n      var cc = 0;\n      var ps = addedColPos;\n      grSec.find('.grdDiv').each(function (index) {\n        var gArea = $(this).css('grid-area').split('/');\n        var r_start = Number($.trim(gArea[0]));\n        var r_end = Number($.trim(gArea[2]));\n        var c_start = Number($.trim(gArea[1]));\n        var c_end = Number($.trim(gArea[3]));\n        var rowPosition = Math.floor(index / totalCol) + 1;\n        if (rowIdx != null) {\n          if (rowIdx > r_start - 1 && rowIdx < r_end - 1) {\n            $(this).css('grid-area', r_start + '/' + c_start + '/' + (r_end + r) + '/' + c_end);\n            isEnter = true;\n          }\n          if (isEnter && r > 0) {\n            for (var i = Number(r_start); i <= Number(r_end); i++) {\n              for (var j = c_start; j < c_end; j++) {\n                var pos = totalCol * i + j;\n                grSec.find('.grdDiv').eq(pos - 1).css('display', 'none');\n              }\n              if (rowIdx == i) {\n                break;\n              }\n            }\n            isEnter = false;\n            rowIdx = null;\n          }\n        } else if (colIdx != null) {\n          if (colIdx > c_start - 1 && colIdx < c_end - 1) {\n            $(this).css('grid-area', r_start + '/' + c_start + '/' + r_end + '/' + (c_end + c));\n            isEnter = true;\n            grSec.find('.grdDiv').eq(ps[cc]).css('display', 'none');\n          }\n          cc++;\n          if (isEnter && c > 0) {\n            for (var i = 0; i < addedColPos.length; i++) {\n              var rowPos = Math.floor(addedColPos[i] / totalCol) + 1;\n              if (rowPos > r_start - 1 && rowPos < r_end) {\n                grSec.find('.grdDiv').eq(addedColPos[i]).css('display', 'none');\n              }\n            }\n            isEnter = false;\n            //colIdx = null;\n            addedColPos = [];\n          }\n        }\n        gArea = $(this).css('grid-area').split('/');\n        r_start = Number($.trim(gArea[0]));\n        r_end = Number($.trim(gArea[2]));\n        c_start = Number($.trim(gArea[1]));\n        c_end = Number($.trim(gArea[3]));\n        var colposition = index % totalCol + 1;\n        if (!$(this).hasClass('vis-split-cell')) {\n          $(this).css('grid-area', rowPosition + '/' + colposition + '/' + (rowPosition + 1) + '/' + (colposition + 1));\n        } else if (c != 0) {\n          if (c > 0) {\n            if (colposition > ci) {\n              $(this).css('grid-area', r_start + '/' + (c_start + c) + '/' + r_end + '/' + (c_end + c));\n            }\n          } else {\n            if (colposition > ci) {\n              $(this).css('grid-area', r_start + '/' + (c_start - 1) + '/' + r_end + '/' + (c_end - 1));\n            }\n          }\n        } else if (r != 0) {\n          if (r > 0) {\n            if (rowPosition > ri) {\n              $(this).css('grid-area', r_start + r + '/' + c_start + '/' + (r_end + r) + '/' + c_end);\n            }\n          } else {\n            if (rowPosition > ri) {\n              $(this).css('grid-area', r_start - 1 + '/' + c_start + '/' + (r_end - 1) + '/' + c_end);\n            }\n          }\n        }\n      });\n      colIdx = null;\n    }\n\n    /**Genrate Grid */\n    function createGrid() {\n      var rowBox = DivGridSec.find('.rowBox');\n      var colBox = DivGridSec.find('.colBox');\n      var totalRow = rowBox.length - 1;\n      var totalCol = colBox.length - 1;\n      var grSec = activeSection;\n      if (totalCol > 0 && totalRow > 0) {\n        var oldrow = grSec.attr('row');\n        var oldcol = grSec.attr('col');\n        if (oldcol != totalCol && !isNewSection) {\n          for (var r = 1; r <= oldrow; r++) {\n            var pos = r * oldcol + (r - 1);\n            grSec.find('.grdDiv').eq(pos - 1).after(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n          }\n        } else {\n          var totalDiv = totalRow * totalCol - grSec.find('.grdDiv').length;\n          for (var i = 0; i < totalDiv; i++) {\n            grSec.append(\"<div class='grdDiv' style='padding:5px;display: flex; flex-direction: row;'></div>\");\n          }\n        }\n        grSec.find('.grdDiv').unbind('mouseover');\n        grSec.find('.grdDiv').mouseover(function (e) {\n          e.preventDefault();\n          if (mdown && !$(this).hasClass('vis-split-cell')) {\n            selectTo($(this));\n          }\n        });\n        isNewSection = false;\n      }\n      gridCss();\n    }\n    function createGridRowCol() {\n      DivGridSec.find('.rowBox:not(:first)').remove();\n      var secNo = DivGridSec.find('.section-active').attr('sectionCount');\n      var section = gridObj[\"section\" + secNo];\n      var rClone = DivGridSec.find('.rowBox:first').clone(true);\n      rClone.show();\n      DivGridSec.find('.colBox:not(:first)').remove();\n      var cClone = DivGridSec.find('.colBox:first').clone(true);\n      cClone.show();\n      if (section) {\n        for (let key in section) {\n          var item = section[key];\n          if (key.indexOf('row_') != -1) {\n            rClone.find('input').val(item.val);\n            rClone.find('select').val(item.msr);\n            DivGridSec.find('.DivRowBox').append(rClone);\n            rClone = DivGridSec.find('.rowBox:last').clone(true);\n          } else if (key.indexOf('col_') != -1) {\n            cClone.find('input').val(item.val);\n            cClone.find('select').val(item.msr);\n            DivGridSec.find('.DivColBox').append(cClone);\n            cClone = DivGridSec.find('.colBox:last').clone(true);\n          }\n        }\n        txtRowGap.val(section.rowGap);\n        txtColGap.val(section.colGap);\n        DivGridSec.find('.rowBox .grdRowDel').eq(1).hide();\n        DivGridSec.find('.colBox .grdColDel').eq(1).hide();\n      }\n    }\n    function selectTo(cell) {\n      var totalCol = DivGridSec.find('.colBox').length - 1;\n      var idx = activeSection.find(cell).index();\n      if (idx < 0) {\n        return;\n      }\n      var currentRow = Math.ceil((idx + 1) / totalCol) - 1;\n\n      //var row = cell.parent();\n      var cellIndex = idx - totalCol * currentRow;\n      var rowIndex = currentRow;\n      var rowStart, rowEnd, cellStart, cellEnd;\n      if (rowIndex < startRowIndex) {\n        rowStart = rowIndex;\n        rowEnd = startRowIndex;\n      } else {\n        rowStart = startRowIndex;\n        rowEnd = rowIndex;\n      }\n      if (cellIndex < startCellIndex) {\n        cellStart = cellIndex;\n        cellEnd = startCellIndex;\n      } else {\n        cellStart = startCellIndex;\n        cellEnd = cellIndex;\n      }\n\n      //console.log(rowStart, rowEnd, cellStart, cellEnd);\n      DivViewBlock.find('.vis-active-block').removeClass('vis-active-block');\n      for (var i = rowStart; i <= rowEnd; i++) {\n        for (var j = cellStart; j <= cellEnd; j++) {\n          activeSection.find('.grdDiv').eq(totalCol * i + j).addClass(\"vis-active-block\");\n        }\n      }\n      if (DivViewBlock.find('.vis-active-block').length > 1) {\n        divTopNavigator.find('[command=\"Merge\"]').parent().show();\n      } else {\n        divTopNavigator.find('[command=\"Merge\"]').parent().hide();\n      }\n    }\n    function mergeCell() {\n      var rowStart = 0,\n        rowEnd = 0,\n        colStart = 0,\n        colEnd = 1;\n      var rowCount = 0;\n      var colCount = 0;\n      var countActive = 1;\n      var totalActive = activeSection.find('.vis-active-block').length;\n      var lastRow = 1;\n      var isRowChange = false;\n      var activColInRow = 0;\n      var colBoxLen = DivGridSec.find('.colBox').length - 1;\n      activeSection.find('.grdDiv').each(function (e) {\n        colCount++;\n        var currentRow = Math.ceil((e + 1) / colBoxLen);\n        if (currentRow != lastRow) {\n          colCount = 1;\n        }\n        lastRow = currentRow;\n        //$(this).css('grid-area', currentRow + '/' + colCount + '/' + (currentRow + 1) + '/' + (colCount+1));\n\n        if ($(this).hasClass('vis-active-block')) {\n          if (activColInRow == 0) {\n            activColInRow = currentRow;\n          }\n          if (rowStart == 0 && colStart == 0) {\n            rowStart = currentRow;\n            colStart = colCount;\n            colEnd = colCount;\n          }\n          if (activColInRow == currentRow) {\n            colEnd++;\n          }\n          if (countActive == totalActive) {\n            rowEnd = currentRow + 1;\n          }\n          countActive++;\n          $(this)[0].style.removeProperty('grid-area');\n          $(this)[0].style.removeProperty('display');\n        }\n      });\n      var unMearge = $('<span class=\"vis-split-cell\"></span>');\n      activeSection.find('.vis-active-block:not(:first)').hide().removeClass('vis-active-block');\n      activeSection.find('.vis-active-block:first').css('grid-area', rowStart + '/' + colStart + '/' + rowEnd + '/' + colEnd).addClass('vis-split-cell');\n      unMearge.click(function () {\n        applyunMerge($(this).parent());\n        $(this).remove();\n      });\n    }\n    function applyunMerge(e) {\n      var gArea = e.css('grid-area').split('/');\n      var totalCol = DivGridSec.find('.colBox').length - 1;\n      var DVB = activeSection.find('.grdDiv');\n      for (var i = Number($.trim(gArea[0])); i < Number($.trim(gArea[2])); i++) {\n        for (var j = Number($.trim(gArea[1])); j < Number($.trim(gArea[3])); j++) {\n          var gIdx = totalCol * (i - 1) + (j - 1);\n          DVB.eq(gIdx)[0].style.removeProperty('grid-area');\n          DVB.eq(gIdx)[0].style.removeProperty('display');\n        }\n      }\n      gridCss();\n    }\n    function checkStyle(prop, val, htm) {\n      var styles = htm.attr('style'),\n        value = false;\n      styles && styles.split(\";\").forEach(function (e) {\n        var style = e.split(\":\");\n        if (val && $.trim(style[0]) === prop && $.trim(style[1]) === val) {\n          value = true;\n        } else if (!val && $.trim(style[0]) === prop) {\n          value = true;\n        }\n      });\n      return value;\n    }\n    function applycommand(command, styleValue) {\n      //isChange = true;\n      //if (isChange && AD_HeaderLayout_ID != \"0\") {\n      //    btn_BlockCancel.show();\n      //}\n      var tag = DivViewBlock.find('.vis-active-block');\n      if (editorProp[command].proprty == \"flex-direction\") {\n        tag[0].style.removeProperty(\"display\");\n        tag.find('.fieldGroup').removeAttr('style');\n      }\n      if (command == 'maxTextmultiline') {\n        if (styleValue == \"\" || styleValue == null) {\n          tag[0].style.removeProperty('overflow');\n          tag[0].style.removeProperty('display');\n          tag[0].style.removeProperty('-webkit-box-orient');\n        } else {\n          tag.css({\n            'overflow': 'hidden',\n            'display': '-webkit-box',\n            '-webkit-box-orient': 'vertical'\n          });\n        }\n      }\n      if (command != 'gradient' && (styleValue == \"\" || styleValue == null)) {\n        tag[0].style.removeProperty(editorProp[command].proprty);\n        return;\n      }\n      if (command == 'gradient') {\n        var color1 = DivStyleSec1.find('.' + command + '1').val();\n        var color2 = DivStyleSec1.find('.' + command + '2').val();\n        var prcnt = DivStyleSec1.find('.percent1').val();\n        var prcnt2 = DivStyleSec1.find('.percent2').val();\n        var deg = DivStyleSec1.find('.grdDirection option:selected').val();\n        styleValue = 'linear-gradient(' + deg + ',' + color1 + ' ' + prcnt + '%,  ' + color2 + ' ' + prcnt2 + '%)';\n        //DivStyleSec1.find('.vis-gradient-comp').css('background', styleValue);\n        DivStyleSec1.find('[data-command=\"gradientInput\"]').val('(' + deg + ',' + color1 + ' ' + prcnt + '%,  ' + color2 + ' ' + prcnt2 + '%)');\n      }\n      if (command == 'gradientInput') {\n        styleValue = 'linear-gradient' + styleValue;\n      }\n      if (command == 'boxShadow') {\n        var x = DivStyleSec1.find('.boxX').val();\n        var y = DivStyleSec1.find('.boxY').val();\n        var b = DivStyleSec1.find('.boxB').val();\n        var c = DivStyleSec1.find('.boxC').val();\n        styleValue = x + ' ' + y + ' ' + b + ' ' + c;\n      }\n      if (editorProp[command].proprty == 'justify-content' || editorProp[command].proprty == \"align-items\" || editorProp[command].proprty == \"flex-direction\") {\n        tag.css(\"display\", \"flex\");\n        if (editorProp[command].proprty == \"flex-direction\") {\n          tag.find('.fieldGroup').css({\n            \"display\": \"flex\",\n            \"flex-direction\": $.trim(styleValue)\n          });\n        }\n      }\n      if (styleValue == 'column' || styleValue == 'column-reverse') {\n        DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').addClass('vis-disable-event');\n      } else {\n        DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').removeClass('vis-disable-event');\n      }\n      tag.css(editorProp[command].proprty, $.trim(styleValue));\n      if (command == 'width' || command == 'height') {\n        var sty = tag.attr('style'); //+ ';' + editorProp[command].proprty + ':' + $.trim(styleValue) + ' !important';\n        sty = sty.replace(editorProp[command].proprty + ': ' + $.trim(styleValue), editorProp[command].proprty + ':' + $.trim(styleValue) + '!important');\n        tag.attr('style', sty);\n      }\n      templatechanges();\n    }\n    function getTemplateDesign() {\n      var url = VIS.Application.contextUrl + \"CardView/getTemplateDesign\";\n      DivTemplate.find('.vis-cardSingleViewTemplate[issystemtemplate=\"N\"]').remove();\n      var obj = {\n        ad_Window_ID: mTab.getAD_Window_ID(),\n        ad_Tab_ID: mTab.getAD_Tab_ID()\n      };\n      $.ajax({\n        type: \"POST\",\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify(obj),\n        success: function (data) {\n          var result = JSON.parse(data);\n          for (var i = 0; i < result.length; i++) {\n            DivTemplate.find('.vis-cardTemplateContainer').append($(result[i].template));\n          }\n          //scaleTemplate();\n          IsBusy(false);\n          //setTimeout(function () {\n          //    scaleTemplate();\n          //    IsBusy(false);\n          //    if (DivTemplate.find('.vis-cardSingleViewTemplate:not(:hidden)').length == 1) {\n          //        DivTemplate.find('.vis-noTemplateIcon').show();\n          //    } else {\n          //        DivTemplate.find('.vis-noTemplateIcon').hide();\n          //    }\n          //}, 1000);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        },\n        complete: function () {\n          DivTemplate.find('.vis-cardSingleViewTemplate').click(function () {\n            DivTemplate.find('.vis-cardSingleViewTemplate').removeClass('vis-active-template');\n            $(this).addClass('vis-active-template');\n          });\n        }\n      });\n    }\n    function getSystemTemplateDesign() {\n      IsBusy(true);\n      var url = VIS.Application.contextUrl + \"CardView/GetSystemTemplateDesign\";\n      DivTemplate.find('.vis-cardSingleViewTemplate[issystemtemplate=\"Y\"]:not(:first)').remove();\n      var obj = {};\n      $.ajax({\n        type: \"POST\",\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify(obj),\n        success: function (data) {\n          isTemplateLoaded = true;\n          var result = JSON.parse(data);\n          for (var i = 0; i < result.length; i++) {\n            DivTemplate.find('.vis-cardTemplateContainer').append($(result[i].template));\n          }\n          DivTemplate.find('.vis-deleteTemplate').remove();\n          scaleTemplate();\n          //IsBusy(false);\n          setTimeout(function () {\n            scaleTemplate();\n            IsBusy(false);\n            if (DivTemplate.find('.vis-cardSingleViewTemplate:not(:hidden)').length == 1) {\n              DivTemplate.find('.vis-noTemplateIcon').show();\n            } else {\n              DivTemplate.find('.vis-noTemplateIcon').hide();\n            }\n          }, 1000);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        },\n        complete: function () {\n          DivTemplate.find('.vis-cardSingleViewTemplate').click(function () {\n            DivTemplate.find('.vis-cardSingleViewTemplate').removeClass('vis-active-template');\n            $(this).addClass('vis-active-template');\n          });\n        }\n      });\n    }\n    function saveTemplate(e) {\n      if (isNewRecord) {\n        if (txtCardName.val() == \"\") {\n          VIS.ADialog.error(\"FillMandatory\", true, \"Name\");\n          IsBusy(false);\n          return false;\n        }\n      }\n      if (isNewRecord && cardViewInfo != null) {\n        for (var a = 0; a < cardViewInfo.length; a++) {\n          if (cardViewInfo[a].CardViewName.trim() == txtCardName.val().trim()) {\n            VIS.ADialog.error(\"cardAlreadyExist\", true, \"\");\n            IsBusy(false);\n            return false;\n          }\n        }\n      }\n      IsBusy(true);\n      //if (txtTemplateName.val() == \"\") {\n      //    VIS.ADialog.error(\"FillMandatory\", true, \"Template Name\");\n      //    return false;\n      //}\n      var fieldObj = [];\n      var seq = 10;\n      var cardSection = [];\n      cardViewColArray = [];\n      var isFieldLinked = false;\n      DivViewBlock.find('.grdDiv:not(:hidden)').each(function (index) {\n        var gridArea = $(this).css('grid-area').split('/');\n        var secNo = $(this).closest('.vis-wizard-section').attr(\"sectioncount\");\n        gridObj['section' + secNo][\"style\"] = $(this).closest('.vis-wizard-section').attr(\"style\");\n        gridObj['section' + secNo][\"sectionID\"] = $(this).closest('.vis-wizard-section').attr(\"sectionid\") || 0;\n        var sectionSeq = ($(this).closest('.vis-wizard-section').index() + 1) * 10;\n        gridObj['section' + secNo][\"sectionSeq\"] = sectionSeq;\n        gridObj['section' + secNo][\"sectionName\"] = $(this).closest('.vis-wizard-section').attr(\"name\");\n        var columnSQL = null;\n        if ($(this).find('sql').length > 0) {\n          columnSQL = $(this).attr('query') || null;\n        }\n        if ($(this).find('.fieldGroup:not(:hidden)').length > 0) {\n          $(this).find('.fieldGroup:not(:hidden)').each(function (index) {\n            isFieldLinked = true;\n            var valueStyle = \"\";\n            if ($(this).find('.imgField').length > 0) {\n              var isBR = $(this).find('br').length;\n              if ($(this).find('.imgField').next('.fieldValue').length > 0) {\n                valueStyle = '@img::' + $(this).find('.imgField').attr('style') || 0;\n                if (isBR > 0) {\n                  valueStyle += '|<br>';\n                }\n                valueStyle += ' |@value::' + $(this).find('.fieldValue').attr('style') || 0;\n              } else {\n                valueStyle = '@value::' + $(this).find('.fieldValue').attr('style') || 0;\n                if (isBR > 0) {\n                  valueStyle += '|<br>';\n                }\n                valueStyle += ' |@img::' + $(this).find('.imgField').attr('style') || 0;\n              }\n            } else {\n              valueStyle = $(this).find('.fieldValue').attr('style') || '';\n            }\n            var hideFieldIcon = true;\n            if ($(this).find('.fa-star').length == 0) {\n              hideFieldIcon = true;\n            }\n            if ($(this).find('.fieldLbl').attr('showfieldicon')) {\n              hideFieldIcon = $(this).find('.fieldLbl').attr('showfieldicon') == 'true' ? true : false;\n            }\n            var obj1 = {\n              cardFieldID: $(this).attr('cardfieldid'),\n              sectionNo: sectionSeq,\n              rowStart: $.trim(gridArea[0]),\n              rowEnd: $.trim(gridArea[2]),\n              colStart: $.trim(gridArea[1]),\n              colEnd: $.trim(gridArea[3]),\n              seq: seq,\n              style: $(this).closest('.grdDiv').attr('style'),\n              fieldID: $(this).find('.fieldLbl').attr('fieldid'),\n              valueStyle: valueStyle,\n              fieldStyle: $(this).find('.fieldLbl').attr('style') || '',\n              hideFieldIcon: hideFieldIcon,\n              hideFieldText: $(this).find('.fieldLbl').attr('showfieldtext') == 'true' ? true : false,\n              columnSQL: columnSQL,\n              contentFieldValue: null,\n              contentFieldLabel: null\n            };\n            var f = {};\n            f.AD_Field_ID = obj1.fieldID;\n            f.CardViewID = AD_CardView_ID;\n            f.SeqNo = obj1.seq;\n            cardViewColArray.push(f);\n            fieldObj.push(obj1);\n          });\n        } else {\n          var hideTxt = false;\n          if ($(this).attr(\"showfieldtext\")) {\n            hideTxt = $(this).attr(\"showfieldtext\") == 'Y' ? true : false;\n          }\n          var hideIcon = false;\n          if ($(this).attr(\"showfieldicon\")) {\n            hideIcon = $(this).attr(\"showfieldicon\") == 'Y' ? true : false;\n          }\n          var obj1 = {\n            cardFieldID: null,\n            sectionNo: sectionSeq,\n            rowStart: $.trim(gridArea[0]),\n            rowEnd: $.trim(gridArea[2]),\n            colStart: $.trim(gridArea[1]),\n            colEnd: $.trim(gridArea[3]),\n            seq: seq,\n            style: $(this).attr('style'),\n            fieldID: null,\n            valueStyle: $(this).attr(\"fieldValuestyle\"),\n            fieldStyle: $(this).attr(\"fieldValueLabel\"),\n            hideFieldIcon: hideIcon,\n            hideFieldText: hideTxt,\n            columnSQL: columnSQL,\n            contentFieldValue: null,\n            contentFieldLabel: null\n          };\n          var f = {};\n          f.AD_Field_ID = obj1.fieldID;\n          f.CardViewID = AD_CardView_ID;\n          f.SeqNo = obj1.seq;\n          cardViewColArray.push(f);\n          fieldObj.push(obj1);\n        }\n        seq += 10;\n      });\n      if (!isFieldLinked) {\n        VIS.ADialog.error(\"FillMandatory\", true, \"Link atleast one field\");\n        IsBusy(false);\n        return false;\n      }\n\n      //console.log(gridObj);\n      //console.log(fieldObj);\n      Object.keys(gridObj).forEach(function (key) {\n        var fobj = {\n          sectionName: gridObj[key].sectionName,\n          sectionID: gridObj[key].sectionID,\n          sectionNo: gridObj[key].sectionSeq,\n          style: gridObj[key].style,\n          totalRow: gridObj[key].totalRow,\n          totalCol: gridObj[key].totalCol,\n          rowGap: gridObj[key].rowGap,\n          colGap: gridObj[key].colGap\n        };\n        cardSection.push(fobj);\n      });\n      if (isSystemTemplate == \"Y\") {\n        templateName = (templateName || txtCardName.val()) + \"_\" + Math.floor(Math.random() * 10000);\n        AD_HeaderLayout_ID = 0;\n      }\n      ;\n      if (isCopy) {\n        templateName = txtCardName.val() + \"_\" + Math.floor(Math.random() * 10000);\n        AD_HeaderLayout_ID = 0;\n        AD_CardView_ID = \"undefined\";\n        isNewRecord = true;\n      }\n      var cardID = AD_CardView_ID;\n      if (cardID == \"undefined\") {\n        cardID = 0;\n      }\n      if (isNewRecord) cardID = 0;\n      var finalobj = {\n        CardViewID: cardID,\n        templateID: AD_HeaderLayout_ID || 0,\n        templateName: templateName,\n        templateCategory: 0,\n        style: DivViewBlock.find('.vis-viewBlock').attr('style'),\n        cardSection: cardSection,\n        cardTempField: fieldObj,\n        isSystemTemplate: 'N',\n        refTempID: refTempID || 0\n      };\n      var url = VIS.Application.contextUrl + \"CardView/SaveCardTemplate\";\n      $.ajax({\n        type: \"POST\",\n        async: false,\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify(finalobj),\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (isNaN(result)) {\n            toastr.error(result, '', {\n              timeOut: 3000,\n              \"positionClass\": \"toast-top-center\",\n              \"closeButton\": true\n            });\n            IsBusy(false);\n            return;\n          }\n          AD_HeaderLayout_ID = result;\n          isSystemTemplate = 'N';\n          if (!isNewRecord) {\n            isEdit = true;\n          }\n          IsBusy(false);\n          SaveChanges(e);\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n          IsBusy(false);\n        }\n      });\n    }\n    function fill(htm) {\n      DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').removeClass('vis-disable-event');\n      DivStyleSec1.find('#master001_' + WindowNo + ' input').val('');\n      DivStyleSec1.find('#master001_' + WindowNo + ' select').val('');\n      DivStyleSec1.find('.vis-back-color03').css('background-color', 'teal');\n      DivStyleSec1.find('.gradient2').val('#000');\n      DivStyleSec1.find('.percent1').val('0');\n      DivStyleSec1.find('.percent2').val('100');\n      DivStyleSec1.find('.grdDirection').val('to bottom');\n      chkAllBorderRadius.prop('checked', true);\n      DivStyleSec1.find('.allBorderRadius').removeClass('displayNone');\n      DivStyleSec1.find('.singleBorderRadius').addClass('displayNone');\n      DivStyleSec1.find(\"[data-command1]\").parent().removeClass('vis-hr-elm-inn-active');\n      var styles = htm.attr('style');\n      if (htm.find('sql').length > 0 && htm.attr(\"query\")) {\n        txtSQLQuery.val(VIS.secureEngine.decrypt(htm.attr(\"query\")));\n      } else {\n        txtSQLQuery.val('');\n      }\n\n      //styles = styles.split(';');\n      //styles.join(\"\\n\\r\");\n      txtCustomStyle.val(styles);\n      styles && styles.split(\";\").forEach(function (e) {\n        var style = e.split(\":\");\n        for (const a in editorProp) {\n          if ($.trim(style[0]) == 'border-left' || $.trim(style[0]) == 'border-right' || $.trim(style[0]) == 'border-top' || $.trim(style[0]) == 'border-bottom') {\n            style[0] = style[0] + '-width';\n          }\n          if ($.trim(style[0]) == $.trim(editorProp[a].proprty)) {\n            var v = $.trim(style[1]);\n            if (editorProp[a].value == '') {\n              if (a == 'width' || a == 'height') {\n                v = v.replaceAll('!important', '');\n              }\n              if (a == 'fontFamily') {\n                v = v.replaceAll('\"', '');\n              }\n              if (a == 'padding' && $.trim(v).split(' ').length > 1) {\n                chkAllPadding.prop('checked', false);\n                DivStyleSec1.find('.allPadding').addClass('displayNone');\n                DivStyleSec1.find('.singlePadding').removeClass('displayNone');\n                DivStyleSec1.find(\"[data-command='paddingLeft']\").val(htm.css('padding-left'));\n                DivStyleSec1.find(\"[data-command='paddingTop']\").val(htm.css('padding-top'));\n                DivStyleSec1.find(\"[data-command='paddingRight']\").val(htm.css('padding-right'));\n                DivStyleSec1.find(\"[data-command='paddingBottom']\").val(htm.css('padding-bottom'));\n              } else if (a == 'padding') {\n                chkAllPadding.prop('checked', true);\n                DivStyleSec1.find('.allPadding').removeClass('displayNone');\n                DivStyleSec1.find('.singlePadding').addClass('displayNone');\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              } else if (a == 'margin' && $.trim(v).split(' ').length > 1) {\n                chkAllMargin.prop('checked', false);\n                DivStyleSec1.find('.allMargin').addClass('displayNone');\n                DivStyleSec1.find('.singleMargin').removeClass('displayNone');\n                DivStyleSec1.find(\"[data-command='marginLeft']\").val(htm.css('margin-left'));\n                DivStyleSec1.find(\"[data-command='marginTop']\").val(htm.css('margin-top'));\n                DivStyleSec1.find(\"[data-command='marginRight']\").val(htm.css('margin-right'));\n                DivStyleSec1.find(\"[data-command='marginBottom']\").val(htm.css('margin-bottom'));\n              } else if (a == 'margin') {\n                chkAllMargin.prop('checked', true);\n                DivStyleSec1.find('.allMargin').removeClass('displayNone');\n                DivStyleSec1.find('.singleMargin').addClass('displayNone');\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              } else if (a == 'borderRadius' && $.trim(v).split(' ').length > 1) {\n                chkAllBorderRadius.prop('checked', false);\n                DivStyleSec1.find('.allBorderRadius').addClass('displayNone');\n                DivStyleSec1.find('.singleBorderRadius').removeClass('displayNone');\n                DivStyleSec1.find(\"[data-command='borderTopLeftRadius']\").val(htm.css('border-top-left-radius'));\n                DivStyleSec1.find(\"[data-command='borderTopRightRadius']\").val(htm.css('border-top-right-radius'));\n                DivStyleSec1.find(\"[data-command='borderBottomRightRadius']\").val(htm.css('border-bottom-right-radius'));\n                DivStyleSec1.find(\"[data-command='borderBottomLeftRadius']\").val(htm.css('border-bottom-left-radius'));\n              } else if (a == 'borderRadius') {\n                chkAllBorderRadius.prop('checked', true);\n                DivStyleSec1.find('.allBorderRadius').removeClass('displayNone');\n                DivStyleSec1.find('.singleBorderRadius').addClass('displayNone');\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              } else {\n                DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n              }\n              if (a == 'backgroundColor') {\n                DivStyleSec1.find('.vis-zero-BTopLeftBLeft:first').css('background-color', v);\n                DivStyleSec1.find(\"[data-command='\" + a + \"'][type='color']\").val(rgb2hex(v));\n              } else if (a == 'color') {\n                DivStyleSec1.find('.vis-zero-BTopLeftBLeft:last').css('background-color', v);\n                DivStyleSec1.find(\"[data-command='\" + a + \"'][type='color']\").val(rgb2hex(v));\n              } else if (a.indexOf('border') != -1 && a.indexOf('radius') == -1) {\n                var brd = htm[0].style;\n                if (brd.border == \"\") {\n                  if (brd.borderLeftWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderLeft']\").val(brd.borderLeftWidth);\n                    DivStyleSec1.find(\"[data-command='borderLeftStyle']\").val(brd.borderLeftStyle);\n                    DivStyleSec1.find(\"[data-command='borderLeftColor']\").val(rgb2hex(brd.borderLeftColor));\n                    DivStyleSec1.find(\"[data-command='borderLeftColor']\").parent().css('background-color', brd.borderLeftColor);\n                  }\n                  if (brd.borderRightWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderRight']\").val(brd.borderRightWidth);\n                    DivStyleSec1.find(\"[data-command='borderRightStyle']\").val(brd.borderRightStyle);\n                    DivStyleSec1.find(\"[data-command='borderRightColor']\").val(rgb2hex(brd.borderRightColor));\n                    DivStyleSec1.find(\"[data-command='borderRightColor']\").parent().css('background-color', brd.borderRightColor);\n                  }\n                  if (brd.borderTopWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderTop']\").val(brd.borderTopWidth);\n                    DivStyleSec1.find(\"[data-command='borderTopStyle']\").val(brd.borderTopStyle);\n                    DivStyleSec1.find(\"[data-command='borderTopColor']\").val(rgb2hex(brd.borderTopColor));\n                    DivStyleSec1.find(\"[data-command='borderTopColor']\").parent().css('background-color', brd.borderTopColor);\n                  }\n                  if (brd.borderBottomWidth != \"\") {\n                    DivStyleSec1.find(\"[data-command='borderBottom']\").val(brd.borderBottomWidth);\n                    DivStyleSec1.find(\"[data-command='borderBottomStyle']\").val(brd.borderBottomStyle);\n                    DivStyleSec1.find(\"[data-command='borderBottomColor']\").val(rgb2hex(brd.borderBottomColor));\n                    DivStyleSec1.find(\"[data-command='borderBottomColor']\").parent().css('background-color', brd.borderBottomColor);\n                  }\n                } else {\n                  var rgb = v.split('rgb');\n                  if (rgb.length > 1) {\n                    v = v.replace('rgb' + rgb[1], rgb2hex('rgb' + rgb[1]));\n                  }\n                  DivStyleSec1.find(\"[data-command='\" + a + \"']\").val(v);\n                }\n                if (brd.border == \"\" && (brd.borderTopWidth != \"\" || brd.borderRightWidth != \"\" || brd.borderTopWidth != \"\" || brd.borderBottomWidth != \"\")) {\n                  chkAllBorder.prop('checked', false);\n                  DivStyleSec1.find('.allBorder').addClass('displayNone');\n                  DivStyleSec1.find('.singleBorder').removeClass('displayNone');\n                } else {\n                  chkAllBorder.prop('checked', true);\n                  DivStyleSec1.find('.allBorder').removeClass('displayNone');\n                  DivStyleSec1.find('.singleBorder').addClass('displayNone');\n                }\n              }\n              break;\n            } else {\n              if (editorProp[a].value == v) {\n                DivStyleSec1.find(\"[data-command1='\" + a + \"']\").parent().addClass('vis-hr-elm-inn-active');\n                break;\n              }\n            }\n          }\n        }\n      });\n      if (DivStyleSec1.find(\"[data-command='flexDirection'] option:selected\").val() == 'column' || DivStyleSec1.find(\"[data-command='flexDirection'] option:selected\").val() == 'column-reverse') {\n        DivStyleSec1.find('[data-command1=\"flexJustifyStart\"]').closest('.vis-horz-align-d').addClass('vis-disable-event');\n      }\n    }\n    function rgb2hex(rgb) {\n      try {\n        if (/^#[0-9A-F]{6}$/i.test(rgb)) return rgb;\n        rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n        function hex(x) {\n          return (\"0\" + parseInt(x).toString(16)).slice(-2);\n        }\n        return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n      } catch (error) {\n        return rgb;\n      }\n    }\n    function unlinkField(fieldName, itm) {\n      itm.closest('.fieldGroup').remove();\n      var fld = DivCardField.find('[fieldid=\"' + itm.attr('fieldid') + '\"]');\n      fld.find('.linked').removeClass('linked vis-succes-clr');\n      fld.removeAttr('seqNo');\n      fld.prop(\"draggable\", true);\n      DivCardField.find('[draggable=\"true\"]:not(:first)').sort(Ascending_sort).appendTo(DivCardField);\n      itm.remove();\n      divTopNavigator.hide();\n    }\n    function linkField(itm) {\n      if (itm) {\n        var blok = DivViewBlock.find('.vis-active-block');\n        if (blok.hasClass('grdDiv')) {\n          var fieldHtml = $('<div class=\"fieldGroup\" draggable=\"true\"></div>');\n          var fID = itm.attr('fieldid');\n          var newitm = itm.clone(true);\n          newitm.attr(\"showfieldicon\", true);\n          itm.find('.vis-grey-icon').remove();\n          itm.attr('draggable', false);\n          if (mTab.getFieldById(Number(fID)).getShowIcon()) {\n            fieldHtml.append($('<i class=\"fa fa-star\">&nbsp;</i>'));\n          }\n          blok.append(fieldHtml);\n          fieldHtml.append(itm);\n          var displayType = mTab.getFieldById(Number(fID)).getDisplayType();\n          var src = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='50' height='50'%3E%3Cdefs%3E%3Cpath d='M23 31l-3.97-2.9L19 28l-.24-.09.19.13L13 33v2h24v-2l-3-9-5-3-6 10zm-2-12c0-1.66-1.34-3-3-3s-3 1.34-3 3 1.34 3 3 3 3-1.34 3-3zm-11-8c-.55 0-1 .45-1 1v26c0 .55.45 1 1 1h30c.55 0 1-.45 1-1V12c0-.55-.45-1-1-1H10zm28 26H12c-.55 0-1-.45-1-1V14c0-.55.45-1 1-1h26c.55 0 1 .45 1 1v22c-.3.67-.63 1-1 1z' id='a'/%3E%3C/defs%3E%3Cuse xlink:href='%23a' fill='%23fff'/%3E%3Cuse xlink:href='%23a' fill-opacity='0' stroke='%23000' stroke-opacity='0'/%3E%3C/svg%3E\";\n          if (displayType == VIS.DisplayType.Image) {\n            fieldHtml.append($('<img class=\"vis-colorInvert imgField\" style=\"width:100px;height:100px\" src=\"' + src + '\"/>'));\n          } else if (displayType == VIS.DisplayType.TableDir || displayType == VIS.DisplayType.Table || displayType == VIS.DisplayType.List || displayType == VIS.DisplayType.Search) {\n            src = \"data:image/svg+xml,%3Csvg width='30' height='30' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cdefs%3E%3Cpath id='a' d='m23,31l-3.97,-2.9l-0.03,-0.1l-0.24,-0.09l0.19,0.13l-5.95,4.96l0,2l24,0l0,-2l-3,-9l-5,-3l-6,10zm-2,-12c0,-1.66 -1.34,-3 -3,-3s-3,1.34 -3,3s1.34,3 3,3s3,-1.34 3,-3zm-11,-8c-0.55,0 -1,0.45 -1,1l0,26c0,0.55 0.45,1 1,1l30,0c0.55,0 1,-0.45 1,-1l0,-26c0,-0.55 -0.45,-1 -1,-1l-30,0zm28,26l-26,0c-0.55,0 -1,-0.45 -1,-1l0,-22c0,-0.55 0.45,-1 1,-1l26,0c0.55,0 1,0.45 1,1l0,22c-0.3,0.67 -0.63,1 -1,1z'/%3E%3C/defs%3E%3Cg%3E%3Cuse transform='matrix(0.567292 0 0 0.499809 0.901418 2.3385)' x='0' y='0' stroke='null' id='svg_1' fill='%23fff' xlink:href='%23a'/%3E%3C/g%3E%3C/svg%3E\";\n            fieldHtml.append($('<img class=\"vis-colorInvert imgField\" style=\"width:30px;height:30px\" style=\"display:none\" src=\"' + src + '\"/>'));\n            fieldHtml.append($('<span class=\"fieldValue\">:Value</span>'));\n          } else {\n            fieldHtml.append($('<span class=\"fieldValue\">:Value</span>'));\n          }\n          var linkedLength = DivCardField.find('.linked').length;\n          newitm.find('.fa-circle').addClass('linked vis-succes-clr');\n          newitm.prop(\"draggable\", false);\n          //newitm.find('.fa-chain-broken').addClass('vis-succes-clr').removeClass('fa-chain-broken');\n          newitm.attr('seqNo', fieldHtml.attr('seqNo') || linkedLength * 10);\n          DivCardField.find('.fieldLbl').eq(linkedLength).after(newitm);\n          applyLinkCss(blok);\n        }\n        //isChange = true;\n        //if (isChange && AD_HeaderLayout_ID != \"0\") {\n        //    btn_BlockCancel.show();\n        //}\n      }\n    }\n    function applyLinkCss(fidItm) {\n      var vlstyle = \"\";\n      var imgStyle = \"\";\n      var spnStyle = \"\";\n      var firstImg = false;\n      var brStart = 0;\n      var styleArr = fidItm.attr(\"fieldValuestyle\");\n      if (styleArr && styleArr.indexOf('|') > -1) {\n        var brPos = styleArr.split('<br>');\n        styleArr = styleArr.split(\"|\");\n        if (styleArr && styleArr.length > 0) {\n          if (styleArr[0].indexOf(\"@img::\") > -1) {\n            firstImg = true;\n          }\n          for (var j = 0; j < styleArr.length; j++) {\n            if (styleArr[j].indexOf(\"@img::\") > -1) {\n              imgStyle = styleArr[j].replace(\"@img::\", \"\");\n            } else if (styleArr[j].indexOf(\"@value::\") > -1) {\n              vlstyle = styleArr[j].replace(\"@value::\", \"\");\n            } else if (styleArr[j].indexOf(\"@span::\") > -1) {\n              spnStyle = styleArr[j].replace(\"@span::\", \"\");\n            }\n          }\n          if (brPos != null && brPos.length > 1) {\n            if (styleArr[0].indexOf(\"@img::\") > -1) {\n              brStart = 1;\n            } else {\n              brStart = 2;\n            }\n          }\n        }\n      } else {\n        if (styleArr && styleArr.indexOf(\"@img::\") > -1) {\n          imgStyle = styleArr.replace(\"@img::\", \"\");\n        } else if (styleArr && styleArr.indexOf(\"@value::\") > -1) {\n          vlstyle = styleArr.replace(\"@value::\", \"\");\n        } else {\n          vlstyle = styleArr;\n        }\n      }\n      var cls = \"\";\n      if (fidItm.attr(\"showfieldicon\")) {\n        var hideIcon = fidItm.attr(\"showfieldicon\") == 'Y' ? true : false;\n        fidItm.find('.fieldLbl').attr('showfieldtext', hideIcon);\n      }\n      if (fidItm.attr(\"showfieldtext\")) {\n        var hideTxt = fidItm.attr(\"showfieldtext\") == 'Y' ? true : false;\n        cls = hideTxt ? \"displayNone\" : \"\";\n        fidItm.find('.fieldLbl').attr('showfieldtext', hideTxt);\n      }\n      fidItm.find('.fieldValue').attr('style', vlstyle);\n      fidItm.find('.fieldLbl').attr('style', fidItm.attr(\"fieldValueLabel\"));\n      fidItm.find('.fieldLbl').addClass(cls);\n      if (imgStyle != \"\" && imgStyle != undefined) {\n        fidItm.find('.imgField').attr('style', imgStyle);\n      }\n      if (brStart == 1) {\n        fidItm.find('.fieldValue').prepend('<br>');\n      } else if (brStart == 2) {\n        fidItm.find('.fieldValue').append('<br>');\n      }\n      var styleflx = fidItm.attr(\"style\");\n      var fIdx = styleflx.indexOf('flex-direction');\n      var lblflxstyle = \"\";\n      if (fIdx > -1) {\n        var cIdx = styleflx.indexOf(\";\", fIdx + 'flex-direction'.length);\n        lblflxstyle = 'display:flex; ' + styleflx.substring(fIdx, cIdx);\n        fidItm.find('.fieldGroup').attr(\"style\", lblflxstyle);\n      }\n      if (fidItm.attr(\"fieldValuestyle\") && fidItm.attr(\"fieldValuestyle\").indexOf('@img::') == -1 && fidItm.find('.fieldGroup .fieldValue').length > 0 && fidItm.find('.fieldGroup .imgField').length > 0) {\n        fidItm.find('.fieldGroup .imgField').css('display', 'none');\n      }\n    }\n    function saveCopyCard(copyCardName) {\n      if (copyCardName == null || copyCardName == \"\") {\n        VIS.ADialog.info(\"FileNameMendatory\");\n        return false;\n      }\n      for (var a = 0; a < cardViewInfo.length; a++) {\n        if (cardViewInfo[a].CardViewName.trim() == copyCardName.trim()) {\n          VIS.ADialog.error(\"cardAlreadyExist\", true, \"\");\n          IsBusy(false);\n          return false;\n        }\n      }\n      txtCardName.val(copyCardName);\n      isCopy = true;\n      btnCardCustomization.click();\n      newCopyCard.close();\n      //setTimeout(function () {\n      //    btnFinesh.click();\n      //}, 1000);\n    }\n\n    /**Scale Template for fit to Block\r\n     * */\n    function scaleTemplate() {\n      DivTemplate.find('.vis-cardSingleViewTemplate').each(function () {\n        var pH = $(this).height();\n        var pW = $(this).width();\n        var inner = $(this).find('.mainTemplate');\n        var iH = inner.height();\n        var iW = inner.width();\n        var zoom = 1;\n        var hR = pH / iH;\n        var wR = pW / iW;\n        if (hR > wR) {\n          zoom = wR;\n        } else {\n          zoom = hR;\n        }\n        inner.css('zoom', zoom);\n      });\n    }\n    // #endregion\n\n    /*\r\n     * Get Fields without role          \r\n     */\n    if (fromCardDialogBtn) {\n      url = VIS.Application.contextUrl + 'JsonData/GetGridWindowSkipRole';\n      var obj = {\n        windowNo: WindowNo,\n        AD_Window_ID: mTab.getField('AD_Window_ID').value\n      };\n      $.ajax({\n        type: \"GET\",\n        async: false,\n        url: url,\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: obj,\n        success: function (data) {\n          dbResult = JSON.parse(data.result);\n          var GridWindow = new VIS.GridWindow(dbResult);\n          if (GridWindow == null) {\n            return;\n          }\n          var _mTab = null;\n          var tabs = GridWindow.getTabs();\n          for (var i = 0; tabs.length > 0; i++) {\n            if (tabs[i].getAD_Tab_ID() == mTab.getRecord_ID()) {\n              _mTab = tabs[i];\n              break;\n            }\n          }\n          if (_mTab == null) {\n            return;\n          }\n          var id = WindowNo + \"_\" + _mTab.getRecord_ID(); //uniqueID\n          gc = new VIS.GridController(false, false, id);\n          gc.initGrid(true, WindowNo, self, _mTab);\n          mTab = gc.getMTab();\n\n          //WindowNo = mTab.getWindowNo();\n          cardView = gc.vCardView;\n          AD_Window_ID = mTab.getAD_Window_ID();\n          AD_Tab_ID = mTab.getAD_Tab_ID();\n          tabName = mTab.getName();\n\n          //WindowName = aPanel.curGC.aPanel.$parentWindow.getName();\n          AD_CardView_ID = cardView.getAD_CardView_ID();\n          AD_GroupField_ID = cardView.getField_Group_ID();\n          tabField = mTab.getFields();\n          findFields = mTab.getFields().slice();\n          init();\n        },\n        error: function (errorThrown) {\n          alert(errorThrown.statusText);\n        }\n      });\n    } else {\n      init();\n    }\n    this.getRoot = function () {\n      return root;\n    };\n\n    /** Show card Dialog\r\n     * */\n    this.show = function () {\n      var w = $(window).width() - 150;\n      var h = $(window).height() - 10;\n      ch = new VIS.ChildDialog();\n      ch.setTitle(VIS.Msg.getMsg(\"Card\"));\n      ch.setWidth(w);\n      ch.setHeight(h);\n      ch.setContent(root);\n      ch.onOkClick = function (e) {};\n      ch.onCancelClick = cancel;\n      ch.onClose = cancel;\n      ch.show();\n      ch.hideButtons();\n    };\n    function cancel() {\n      ch.close();\n      //aPanel.fromCardDialogBtn = false;\n      return true;\n    }\n    ;\n\n    /** Change Template\r\n     * */\n    function templatechanges() {\n      var Chtml = DivViewBlock.find('.vis-viewBlock').html();\n      if (cur_history_index < history.length - 1) {\n        history = history.slice(0, cur_history_index + 1);\n        cur_history_index++;\n        //btnRedo.attr(\"disabled\", \"disabled\");\n      }\n      var cur_canvas = JSON.stringify(Chtml);\n      if (cur_canvas != history[cur_history_index] || force == 1) {\n        history.push(cur_canvas);\n        if (history.length > 11) {\n          history.shift();\n        }\n        cur_history_index = history.length - 1;\n      }\n      DivCradStep2.find('.vis-v-rowcol').hide();\n      btnRedo.attr(\"disabled\", \"disabled\");\n      btnUndo.removeAttr(\"disabled\");\n    }\n\n    /**\r\n     * Add or Delete row and column from viewblock\r\n     * @param {any} e\r\n     */\n    function ViewBlockAddDelRowCol(e) {\n      DivCradStep2.find('.vis-v-rowcol').show();\n      var idx = $(e.target).index();\n      var rc = getRowColPostion(idx);\n      if (rc.rowNo == 1) {\n        btnVdelrow.hide();\n      }\n      if (rc.colNo == 1) {\n        btnVdelCol.hide();\n      }\n      btnVaddrow.css({\n        'left': $(e.target).closest('.vis-viewBlock')[0].offsetLeft - 38,\n        'top': $(e.target).height() + $(e.target)[0].offsetTop\n      });\n      btnVdelrow.css({\n        'left': $(e.target).closest('.vis-viewBlock')[0].offsetLeft - 20,\n        'top': $(e.target).height() + $(e.target)[0].offsetTop\n      });\n      btnVaddCol.css({\n        'top': $(e.target).closest('.vis-viewBlock')[0].offsetTop - 20,\n        'left': $(e.target).width() - 8 + $(e.target)[0].offsetLeft\n      });\n      btnVdelCol.css({\n        'top': $(e.target).closest('.vis-viewBlock')[0].offsetTop - 20,\n        'left': $(e.target).width() - 5 + $(e.target)[0].offsetLeft + 15\n      });\n    }\n    function getRowColPostion(idx) {\n      var totalCol = DivGridSec.find('.colBox').length - 1;\n      var rowPosition = Math.floor(idx / totalCol) + 1;\n      var colposition = idx % totalCol + 1;\n      return {\n        rowNo: rowPosition,\n        colNo: colposition\n      };\n    }\n    this.disposeComponent = function () {\n      self = null;\n      root.remove();\n      root = null;\n    };\n  }\n  ;\n  cvd.prototype.getOperatorsQuery = function (vnpObj, translate) {\n    var html = \"\";\n    var val = \"\";\n    for (var p in vnpObj) {\n      val = vnpObj[p];\n      if (translate) val = VIS.Msg.getMsg(val);\n      html += '<option value=\"' + p + '\">' + val + '</option>';\n    }\n    return html;\n  };\n  cvd.prototype.sizeChanged = function (height, width) {\n    console.log(height, width);\n  };\n  cvd.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.CVDialog = cvd;\n\n  /**\r\n   * Open dialog for copy any card\r\n   * */\n  function cardCopyDialog() {\n    var self = this;\n    var $root = $('<div>');\n    var $inputText = $('<div class=\"input-group vis-input-wrap mb-0\" >');\n    var $controlBlock = $('<div class=\"vis-control-wrap d-block mt-1\" >');\n    var txtDescription = $('<span style=\"display:block;margin-bottom:5px;\">' + VIS.Msg.getMsg('NewCardInfo') + '</span>');\n    $inputText.append(txtDescription).append($controlBlock);\n    var $txtName = $('<input type=\"text\">');\n    var $lblName = $('<label>' + VIS.Msg.getMsg('EnterName') + '</label>');\n    $controlBlock.append($txtName).append($lblName);\n    var btnDiv = $('<div class=\"d-flex align-items-center justify-content-end mt-2\">');\n    self.btnCopySave = $('<button class=\"vis-save-cont mr-2\">' + VIS.Msg.getMsg('Ok') + '</button>');\n    self.btnCopyCancle = $('<button class=\"vis-save-cont mr-2\">' + VIS.Msg.getMsg('Cancle') + '</button>');\n    btnDiv.append(self.btnCopySave).append(self.btnCopyCancle);\n    $root.append($inputText).append(btnDiv);\n    this.show = function () {\n      chCopy = new VIS.ChildDialog();\n      chCopy.setTitle(VIS.Msg.getMsg(\"CardName\"));\n      chCopy.setModal(true);\n      chCopy.setContent($root);\n      chCopy.setWidth(\"50%\");\n      chCopy.show();\n      chCopy.onOkClick = ok;\n      chCopy.onCancelClick = cancel;\n      chCopy.onClose = cancel;\n      chCopy.hideButtons();\n    };\n    this.getName = function () {\n      return $txtName.val();\n    };\n    function ok() {\n      if ($txtName.val() == null || $txtName.val() == \"\") {\n        VIS.ADialog.info(\"FileNameMendatory\");\n        return false;\n      }\n      self.onSave();\n      return true;\n    }\n    ;\n    self.close = function () {\n      chCopy.close();\n    };\n    function cancel() {\n      chCopy.close();\n      // aPanel.fromCardDialogBtn = false;\n      return true;\n    }\n    ;\n    function dispose() {\n      $txtName.remove();\n      $txtName = null;\n      txtDescription.remove();\n      txtDescription = null;\n      self.btnCopyCancle = null;\n      self.btnCopyCancle = null;\n      $lblName.remove();\n      $lblName = null;\n      $root.remove();\n      $root = null;\n      chCopy = null;\n    }\n    ;\n  }\n  ;\n  VIS.CardCopyDialog = cardCopyDialog;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/cardviewdialog.js?")},"./Areas/VIS/Scripts/app/Framework/chat.js":()=>{eval(';\n(function (VIS, $) {\n  //var $record_id, $chat_id, $table_id, $description, $chatclose;\n  function Chat(record_id, chat_id, table_id, description, windowNo) {\n    this.onClose = null; //outer apanel close function\n\n    var $maindiv = $(\'<div class="vis-forms-container"></div>\'); //layout\n    var $div = $(\'<div class="vis-chatdetailouterwrap"></div>\');\n    var $inputChat = $(\'<textarea  id="input-chat-new" class="vis-chat-msgbox"  maxlength="500" />\');\n    //  var $buttonsdiv = $(\'<div style="overflow:auto"></div>\');\n    // var $btnOK = $(\'<button>\');\n    // var $btnCancel = $(\'<button>\');\n    $maindiv.append($div).append($inputChat); //.append($buttonsdiv); //ui\n    this.winNo = windowNo;\n    var ch = null;\n    this.prop = {\n      WindowNo: windowNo,\n      ChatID: chat_id,\n      AD_Table_ID: table_id,\n      Record_ID: record_id,\n      Description: description,\n      TrxName: null,\n      ChatText: "",\n      page: 0,\n      pageSize: 10\n    };\n    init($div, windowNo, this.prop);\n    var self = this;\n    createButtons();\n    //events();\n\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setContent($maindiv);\n      ch.setHeight(450);\n      ch.setWidth(655);\n      ch.setTitle(VIS.Msg.getMsg("Chat"));\n      ch.setModal(true);\n      //Ok Button Click\n      //  ch.onOkClick =\n\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        if (self.onClose) self.onClose();\n        self.dispose();\n      };\n      ch.show();\n      events();\n      //ch.hidebuttons();\n    };\n    this.dispose = function () {\n      this.prop = null;\n      $div = null;\n      $maindiv.remove();\n      $maindiv = null;\n      ch = null;\n      self = null;\n    };\n    function createButtons() {\n      //Ok Button\n      //$btnOK.addClass("VIS_Pref_btn-2");\n      //$btnOK.text(VIS.Msg.getMsg("OK"));\n      //$btnOK.css({ "margin-top": "0px", "margin-bottom": "0px" });\n\n      ////Cancel Button\n      //$btnCancel.addClass("VIS_Pref_btn-2");\n      //$btnCancel.text(VIS.Msg.getMsg("Cancel"));\n      //$btnCancel.css({ "margin-top": "0px", "margin-bottom": "0px", "margin-left": "5px" });\n\n      // $buttonsdiv.append($btnCancel).append($btnOK);\n    }\n    function events() {\n      ch.onOkClick = function (e) {\n        var text = $inputChat.val();\n        if ($.trim(text) == "" || text == "" || text == null) {\n          VIS.ADialog.info("EnterData");\n          if (e != undefined) {\n            e.preventDefault();\n          }\n          return false;\n        }\n        //  $btnOK.prop(\'disabled\', true);\n        self.prop.ChatText = text;\n        VIS.dataContext.saveChat(self.prop);\n        //ch.close();\n        //if (self.onClose) self.onClose();\n        //self.dispose();\n      };\n      ch.onCancelClick = function () {\n        // ch.close();\n        //if (self.onClose) self.onClose();\n        //  self.dispose();\n      };\n    }\n    ;\n    function init($container, windowNo, prop) {\n      VIS.dataContext.getChatRecords(prop, function (result) {\n        var data = JSON.parse(result);\n        //set retrieved chatid in local var\n        self.prop.ChatID = data.chatId;\n        var htmll = "";\n        for (var chat in data.subChat) {\n          var d = new Date(data.subChat[chat].ChatDate);\n          var date = d.toLocaleString();\n\n          //     (Globalize.format(date, \'G\', Globalize.cultureSelector));\n\n          var str = \'   <div class="vis-chatboxwrap">\';\n          if (VIS.Application.isRTL) {\n            str += \'<div class="vis-chatimgwrap">\';\n          } else {\n            str += \'<div class="vis-chatimgwrap">\';\n          }\n          var ispic = false;\n          if (data.subChat[chat].AD_Image_ID == 0) {\n            //str += "<img  data-uID=\'" + data.subChat[chat].AD_User_ID + "\'  src= \'" + VIS.Application.contextUrl + "Areas/VIS/Images/Home/userAvatar.png\'/>";\n            str += "<i class=\'fa fa-user\' data-uID=\'" + data.subChat[chat].AD_User_ID + "\'></i>";\n            ispic = true;\n          } else {\n            for (var a in data.userimages) {\n              if (data.userimages[a].AD_Image_ID == data.subChat[chat].AD_Image_ID && data.userimages[a].UserImg != "NoRecordFound" && data.userimages[a].UserImg != "FileDoesn\'tExist") {\n                str += \'<img  data-uID="\' + data.subChat[chat].AD_User_ID + \'" src="\' + VIS.Application.contextUrl + data.userimages[a].UserImg + \'" />\';\n                ispic = true;\n                break;\n              }\n            }\n          }\n          if (ispic == false) {\n            str += "<i class=\'fa fa-user\' data-uID=\'" + data.subChat[chat].AD_User_ID + "\'></i>";\n          }\n          str += \'</div><div class="vis-chatdetailwrap"><div style="display: flex;">\';\n          if (VIS.Application.isRTL) {\n            str += \'<span data-uID="\' + data.subChat[chat].AD_User_ID + \'" class="vis-chatusername">\';\n          } else {\n            str += \'<span data-uID="\' + data.subChat[chat].AD_User_ID + \'" class="vis-chatusername">\';\n          }\n          if (VIS.Env.getCtx().getAD_User_ID() == data.subChat[chat].AD_User_ID) {\n            str += "Me";\n          } else {\n            str += data.subChat[chat].UserName;\n          }\n          if (VIS.Application.isRTL) {\n            str += \'</span><span style="font-size: .75rem; padding-right: 5px;">\' + date + \'</span></div><div  style="overflow:auto">\';\n          } else {\n            str += \'</span><span style="font-size: .75rem; padding-right: 5px;">\' + date + \'</span></div><div>\';\n          }\n\n          //+ \'<textarea readonly style="width:640px">\' + data[chat].ChatData + \'</textarea>\'\n          if (VIS.Application.isRTL) {\n            str += \'<span style="font-size: .75rem;padding-right:5px">\' + VIS.Utility.encodeText(data.subChat[chat].ChatData) + \'</span></div>\';\n          } else {\n            str += \'<span style="font-size: .75rem;padding-right:5px">\' + VIS.Utility.encodeText(data.subChat[chat].ChatData) + \'</span></div>\';\n          }\n          str += \'</div>\';\n          str += \'            </div>  \';\n          htmll += str;\n        }\n        $container.html(htmll);\n      });\n      $container.on("click", function (e) {\n        if ($(e.target).is("span") || $(e.target).is("img")) {\n          var uID = $(e.target).data("uid");\n          if (uID != undefined && uID != null && uID > 0) {\n            var contactInfo = new VIS.ContactInfo(uID, windowNo);\n            contactInfo.show();\n            ch.close();\n          }\n        }\n      });\n    }\n    ;\n  }\n  ;\n  VIS.Chat = Chat;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/chat.js?')},"./Areas/VIS/Scripts/app/Framework/contactInfo.js":()=>{eval(';\n(function (VIS, $) {\n  var windowNo = 0;\n  var windowWidth = $(document).width();\n  var windowHeight = $(document).height();\n  var $contactInfoRoot = null;\n  var ad_userID = 0;\n  var url = null;\n  var NavigateURL = null;\n  var $divDots = null;\n  //var $mainUserInfo = null;\n  var animateTime = null;\n  var kbSize = null;\n  var maxSize = null;\n  var contactInfoDialog = null;\n  var windowWidth = $(document).width();\n  var windowHeight = $(document).height();\n  VIS.ContactInfo = function (userID, winNo) {\n    //var sql = "SELECT COUNT(*) FROM AD_Table WHERE TableName=\'C_BPartner\'";\n    //var dr = \n\n    if (VIS.Application.isBasicDB) {\n      VIS.ADialog.error(\'VIS_NotSupported\');\n      self.dispose();\n      return;\n    }\n    ad_userID = userID;\n    windowNo = winNo;\n    $(".vis-apanel-busy").css("visibility", "visible");\n    url = VIS.Application.contextUrl + "WSP/Contacts/UserContactInfo?WinNo=" + windowNo + "&userID=" + ad_userID + "&isPartialViewLoad=" + true;\n    LoadHtmlDesign(ad_userID, url);\n    this.show = function () {\n      if (!window.WSP) {\n        alert("please download WSP !!!");\n        $(".vis-apanel-busy").css("visibility", "hidden");\n        return;\n      }\n      window.setTimeout(function () {\n        contactInfoDialog = new VIS.ChildDialog();\n        contactInfoDialog.setContent($contactInfoRoot);\n        contactInfoDialog.setWidth(610);\n        //contactInfoDialog.setHeight(700);\n        contactInfoDialog.setTitle(VIS.Msg.getMsg("ContactInfo"));\n        contactInfoDialog.setEnableResize(false);\n        contactInfoDialog.setModal(true);\n        contactInfoDialog.show();\n        //if (windowWidth <= 1024) {\n        //    contactInfoDialog.getRoot().dialog({ position: [200, 0] });\n        //}\n        //else {\n        contactInfoDialog.getRoot().dialog({\n          position: [400, 0]\n        });\n        //}\n        contactInfoDialog.onClose = function () {\n          dispose();\n        };\n        $.ajax({\n          type: "GET",\n          async: false,\n          url: url,\n          dataType: "json",\n          success: function (data) {\n            var result = JSON.parse(data);\n            var category = "";\n            if (result[0].Customer != "") {\n              category += result[0].Customer;\n            }\n            if (result[0].Vendor != "") {\n              if (result[0].Customer != "") {\n                category += ",";\n              }\n              category += result[0].Vendor;\n            }\n            if (result[0].Employee != "") {\n              if (result[0].Customer != "" || result[0].Vendor != "") {\n                category += ",";\n              }\n              category += result[0].Employee;\n            }\n            if (result[0].Prospect != "") {\n              if (result[0].Customer != "" || result[0].Vendor != "" || result[0].Employee != "") {\n                category += ",";\n              }\n              category += result[0].Prospect;\n            }\n            var $divRole = $contactInfoRoot.find("#divRole_" + windowNo);\n            var $divTeam = $contactInfoRoot.find("#divTeam_" + windowNo);\n            var $divContactDetails = $contactInfoRoot.find("#divContactDetails_" + windowNo);\n            var $sliderDotImg = $contactInfoRoot.find("#dotImg_" + windowNo);\n            var $slideruserID = $contactInfoRoot.find("#userID_" + windowNo);\n            var $slideruserTableID = $contactInfoRoot.find("#userTableID_" + windowNo);\n            var $sliderhduserName = $contactInfoRoot.find("#hduserName_" + windowNo);\n            var $slideruserName = $contactInfoRoot.find("#userName_" + windowNo);\n            var $sliderBpID = $contactInfoRoot.find("#BPID_" + windowNo);\n            var $slideruBPGroupID = $contactInfoRoot.find("#BPGroupID_" + windowNo);\n            var $slidercompanyName = $contactInfoRoot.find("#companyName_" + windowNo);\n            var $sliderpContactTypeCategory = $contactInfoRoot.find("#pContactTypeCategory_" + windowNo);\n            var $slidermobileImg = $contactInfoRoot.find("#mobileImg_" + windowNo);\n            var $sliderteam = $contactInfoRoot.find("#team_" + windowNo);\n            var $sliderteamNotFound = $contactInfoRoot.find("#teamNotFound_" + windowNo);\n            var $slideraddress = $contactInfoRoot.find("#address_" + windowNo);\n            var $slidercountry = $contactInfoRoot.find("#country_" + windowNo);\n            var $sliderpostal = $contactInfoRoot.find("#postal_" + windowNo);\n            var $sliderphone = $contactInfoRoot.find("#phone_" + windowNo);\n            var $slideruserEmail = $contactInfoRoot.find("#userEmail_" + windowNo);\n            var $slideremailNotFound = $contactInfoRoot.find("#emailNotFound_" + windowNo);\n            var $slidercompanyDetails = $contactInfoRoot.find("#divcompanyDetails_" + windowNo);\n            var $slidercompanyNotFound = $contactInfoRoot.find("#companyNotFound" + windowNo);\n            var $sliderrole = $contactInfoRoot.find("#role_" + windowNo);\n            var $sliderroleNotFound = $contactInfoRoot.find("#roleNotFound_" + windowNo);\n            var $sliderbigUserImage = $contactInfoRoot.find("#bigUserImage_" + windowNo);\n            var $sliderdivBirthday = $contactInfoRoot.find("#divBirthday_" + windowNo);\n            var $sliderdivbigUserImage = $contactInfoRoot.find("#userBigImg_" + windowNo);\n            var $editContact = $contactInfoRoot.find("#edit_" + windowNo);\n            $divDots = $contactInfoRoot.find("#WSP_dots_" + windowNo);\n            var $sendSms = $contactInfoRoot.find("#sendSMS_" + windowNo);\n            var $email = $contactInfoRoot.find("#email_" + windowNo);\n            var $BPInfo = $contactInfoRoot.find("#BPInfo_" + windowNo);\n            var $createOrder = $contactInfoRoot.find("#createOrder_" + windowNo);\n            var $addBPartner = $contactInfoRoot.find("#addBPartner_" + windowNo);\n            var $history = $contactInfoRoot.find("#History_" + windowNo);\n            var $appointment = $contactInfoRoot.find("#appointment_" + windowNo);\n            var $activity = $contactInfoRoot.find("#activity_" + windowNo);\n            var $importContacts = $contactInfoRoot.find("#ImportContacts_" + windowNo);\n            var $fileUpload = $contactInfoRoot.find("#wsp-file-input_" + windowNo);\n            var $mobilefileUpload = $contactInfoRoot.find("#wsp-fileinput_" + windowNo);\n            var $bigUserImage = $contactInfoRoot.find(".WSP_profile_big_img");\n            var $mobileImg = $contactInfoRoot.find(".WSP_profile_big_img_mobile");\n            var $showAddressOnGoogleMap = null;\n            var $mainUserInfo = $contactInfoRoot.find("#mainUserInfoDiv_" + windowNo);\n            //var $contactInfoRoot = null;\n\n            var isTeamExist = false;\n            var isContactDetails = false;\n            var isRole = false;\n            var result = JSON.parse(data);\n            var strRole = "";\n            var strTeams = "";\n            $slideruserID.empty();\n            $slideruserID.append(result[0].UserID);\n            $sliderhduserName.empty();\n            $sliderhduserName.append(result[0].FirstName);\n            $sliderhduserName.hide();\n            $slideruserName.empty();\n            $sliderDotImg.empty();\n            if (category == "" || category == null) {\n              $editContact.removeAttr(\'href\');\n              $editContact.css(\'cursor\', \'auto\');\n              $editContact.find("p").css(\'color\', \'black\');\n              $BPInfo.removeAttr(\'href\');\n              $BPInfo.css(\'cursor\', \'auto\');\n              $BPInfo.find("p").css(\'color\', \'black\');\n            } else {\n              $editContact.attr(\'href\', \'javascript:void(0)\');\n              $editContact.css(\'cursor\', \'pointer\');\n              $editContact.removeAttr("style");\n              $BPInfo.attr(\'href\', \'javascript:void(0)\');\n              $BPInfo.css(\'cursor\', \'pointer\');\n              $BPInfo.removeAttr("style");\n            }\n            if (windowWidth >= 1000 && windowWidth <= 1024) {\n              if (result[0].FirstName.length > 15) {\n                $sliderDotImg.show();\n                $slideruserName.append(result[0].FirstName.substring(0, 15)).append($sliderDotImg.append("..."));\n              } else {\n                $slideruserName.append(result[0].FirstName);\n              }\n            } else {\n              if (result[0].FirstName.length > 20) {\n                $sliderDotImg.show();\n                $slideruserName.append(result[0].FirstName.substring(0, 20)).append($sliderDotImg.append("..."));\n              } else {\n                $slideruserName.append(result[0].FirstName);\n              }\n            }\n            $sliderBpID.empty();\n            $sliderBpID.append(result[0].BPartnerID);\n            $slideruserTableID.append(result[0].TableID);\n            $slideruBPGroupID.empty();\n            $slideruBPGroupID.append(result[0].BPGroupID);\n            $slidercompanyName.empty();\n            $slidercompanyName.append(result[0].CompanyName);\n            $sliderpContactTypeCategory.empty();\n            $sliderpContactTypeCategory.append(category);\n            $slidermobileImg.removeAttr("src").attr("src", result[0].Image);\n            $divTeam.empty();\n            $divTeam.append("<p>" + VIS.Msg.getMsg("Teams") + "</p>");\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].Team != "" && result[i].Team != null) {\n                isTeamExist = true;\n                if (i == 0 || strTeams == "") {\n                  strTeams += result[i].Team;\n                } else {\n                  strTeams += ", " + result[i].Team;\n                }\n\n                //  $divTeam.append(" <p id=\'team_" + windowNo + "\' style=\'word-break: break-all\'>" + result[i].Team + "</p>");\n              }\n            }\n            if (!isTeamExist) {\n              $divTeam.append(" <p  id=\'teamNotFound_" + windowNo + "\' style=\'word-break: break-all; font-style: italic;\'>" + VIS.Msg.getMsg("NotFound") + "</p>");\n            }\n            if (isTeamExist) {\n              $divTeam.append(" <p id=\'team_" + windowNo + "\' >" + strTeams + "</p>");\n            }\n            $slideraddress.empty();\n            $divContactDetails.empty();\n            $divContactDetails.append("<p style=\'word-break: break-all;\'> " + VIS.Msg.getMsg("ContactDetails") + " <a href=\'javascript:void(0)\'> <i id=\'showAddressOnGoogleMap_" + windowNo + "\' class=\'vis vis-location\'></i> </a></p> ");\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].FirstName != "") {\n                continue;\n              }\n              if (result[i].Address != "" && result[i].Address != null) {\n                isContactDetails = true;\n                $divContactDetails.append("<p id=\'address_" + windowNo + "\' style=\'word-break: break-all\'>" + result[i].Address + "</p>");\n              }\n            }\n            $slidercountry.empty();\n            if (result[0].CountryName != "" && result[0].CountryName != null) {\n              isContactDetails = true;\n              $divContactDetails.append("<p id=\'country_" + windowNo + "\' style=\'word-break: break-all\'>" + result[0].City + "(" + result[0].CountryName + ")</p> ");\n            }\n            $sliderpostal.empty();\n            if (result[0].Postal != "" && result[0].Postal != null) {\n              isContactDetails = true;\n              $divContactDetails.append("<p id=\'postal_" + windowNo + "\' style=\'word-break: break-all\'>" + VIS.Msg.getMsg("ZipCode") + ": " + result[0].Postal + "</p>");\n            }\n            $sliderphone.empty();\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].FirstName != "") {\n                continue;\n              }\n              if (result[i].PhoneNo != "" && result[i].PhoneNo != null) {\n                isContactDetails = true;\n                if (windowWidth <= 1024) {\n                  $divContactDetails.append("<a href=\'tel:" + result[i].PhoneNo + "\'><p id=\'phone_" + windowNo + "\' style=\'word-break: break-all\'><span class=\'vis-caller\'><i class=\'fa fa-phone\'></i></span>" + result[i].PhoneNo + "</p></a>");\n                } else {\n                  $divContactDetails.append("<p id=\'phone_" + windowNo + "\' style=\'word-break: break-all\'><span class=\'vis-caller\'><i class=\'fa fa-phone\'></i></span>" + result[i].PhoneNo + "</p>");\n                }\n              }\n            }\n            $slideruserEmail.empty();\n            if (result[0].Email != "" && result[0].Email != null) {\n              isContactDetails = true;\n              $divContactDetails.append("<p id=\'userEmail_" + windowNo + "\' style=\'word-break: break-all;display: inline-flex;margin-top: 0;\'> <span class=\'vis-caller\'><i class=\'vis vis-email\'></i></span>" + result[0].Email + "</p>");\n            }\n            if (!isContactDetails) {}\n            $slidercompanyDetails.empty();\n            $slidercompanyDetails.append("<p>" + VIS.Msg.getMsg("Company") + "</p>");\n            $slidercompanyDetails.append("<p id=\'companyDetails_" + windowNo + "\' style=\'word-break: break-all\'>" + result[0].CompanyName + "</p>");\n            $slidercompanyNotFound.empty();\n            if (result[0].CompanyName != "" && result[0].CompanyName != null) {\n              $slidercompanyNotFound.append(VIS.Msg.getMsg("NotFound"));\n            }\n            $divRole.empty();\n            $divRole.append("<p>" + VIS.Msg.getMsg("RoleAssign") + "</p>");\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].Role != "" && result[i].Role != null) {\n                isRole = true;\n                if (i == 0) {\n                  strRole += result[i].Role;\n                } else {\n                  strRole += ", " + result[i].Role;\n                }\n                //if (i == 0) {\n                //    $divRole.append("<p id=\'role_" + windowNo + "\' style=\'word-break: break-all\'>" + result[i].Role + "</p>");\n                //}\n                //else {\n                //    $divRole.find("p").append();\n                //}\n              }\n            }\n            if (isRole) {\n              $divRole.append("<p id=\'role_" + windowNo + "\'>" + strRole + "</p>");\n            }\n            $sliderroleNotFound.empty();\n            if (!isRole) {\n              $divRole.append("<p id=\'roleNotFound_" + windowNo + "\' style=\'word-break: break-all; font-style: italic;\'>" + VIS.Msg.getMsg("NotFound") + "</p>");\n            }\n            if (result[0].Image.indexOf("User") > 0) {\n              $sliderbigUserImage.removeAttr("src").attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/home/User.png");\n            } else {\n              $sliderbigUserImage.removeAttr("src").attr("src", result[0].Image);\n            }\n            $sliderdivBirthday.empty();\n            var now = new Date();\n            var userDOB = new Date(result[0].Birthday);\n            var currentDate = now.getMonth() + 1 + "/" + now.getDate();\n            var userD = userDOB.getMonth() + 1 + "/" + userDOB.getDate();\n            if (result[0].Birthday != "") {\n              $sliderdivBirthday.show();\n              $sliderdivBirthday.css("border", "1px solid #1886BF");\n              var $birthdayDiv = $("<div class=\'vis-birthdat_text\'>");\n              if (userD == currentDate) {\n                $birthdayDiv.append("<p> " + VIS.Msg.getMsg("Today") + " " + VIS.Msg.getMsg("is") + " <span class=\'vis-birthday_text_highlight\'>" + result[0].FirstName + "</span> " + VIS.Msg.getMsg("Birthday") + "</p>");\n              }\n              $birthdayDiv.append("<p>" + result[0].FirstName + " " + VIS.Msg.getMsg("Birthday") + " " + VIS.Msg.getMsg("on") + "  <span class=\'vis-birthday_text_highlight\'>" + result[0].Birthday + "</span></p> </div>");\n              $sliderdivBirthday.append($birthdayDiv);\n            } else {\n              $sliderdivBirthday.hide();\n            }\n            $sliderDotImg.on("click", function (e) {\n              $popUp.show();\n              // var $userNameToolTip = $contactInfoRoot.find("<div style=\'width:0;height:0;border-bottom: 80px solid #37A047;border-left: 50px solid transparent;border-right: 50px solid transparent;\'> </div> <DIV id=\'PopUp\' style=\'position: absolute; border-radius: 5px;left: 100px; top: 50px; border: solid black 1px; padding: 10px; background-color: rgb(255,253,208); text-align: justify; font-size: 12px; width: auto;\' ><SPAN id=\'PopUpText\'>" + hdUserName + "</SPAN></DIV>");\n              var $userNameToolTip = $contactInfoRoot.find("<div class=\'arrow_box\'> <p style=\'margin-left:5px;margin-top:5px;margin-right:5px\'>" + $sliderhduserName.text() + "</p></div>");\n              $popUp.append($userNameToolTip);\n              $popUp.delay(2000).fadeOut();\n              e.stopPropagation();\n            });\n            if ($divDots != null) {\n              $divDots.on("click", function (e) {\n                $mainUserInfo.animate({\n                  right: \'-1000px\'\n                }, animateTime);\n                e.stopPropagation();\n              });\n            }\n            $(".ui-dialog-content").on("click", function (e) {\n              $("#w2ui-overlay").hide();\n              e.stopPropagation();\n            });\n            //$sliderdivbigUserImage.css("width", $userInfoRightPanelDiv.width());\n            //$mainUserInfo.animate({ right: \'0px\' }, animateTime);\n            //$mainUserInfo.css("display", "block");\n\n            //var img = new Image();\n            //img.onload = function () {\n\n            //    if (ismobile) {\n            //        // $sliderdivbigUserImage.css("width", $userInfoRightPanelDiv.width());\n            //        if (img.width >= 320) {\n\n            //            $sliderbigUserImage.css("width", "100%");\n\n            //            //$sliderbigUserImage.css("height", img.height - (img.width - $sliderdivbigUserImage.width()));\n            //            var val = (img.width * 100) / img.height;\n            //            var finalHeight = ($sliderbigUserImage.width() * 100) / val;\n            //            $sliderbigUserImage.css("height", finalHeight);\n\n            //            // $sliderbigUserImage.css("height", img.height);\n            //        }\n            //        else {\n\n            //            $sliderbigUserImage.css("width", img.width);\n            //            $sliderbigUserImage.css("height", img.height);\n\n            //        }\n            //    }\n\n            //};\n            //img.src = $sliderbigUserImage.attr(\'src\');\n\n            //for (var i = 0; i < $(".vis-awindow").length; i++) {\n            //    if ($(".vis-awindow").eq(i).css("display") == "table") {\n            //        var $seletectWindow = $(".vis-awindow").eq(i);\n            //        $seletectWindow.find(".vis-apanel-table tr:first").find("#contactInfo_" + windowNo).remove();\n            //        $seletectWindow.find(".vis-apanel-table tr:first").append($contactInfoRoot);\n            //        $mainUserInfo.animate({ right: \'0px\' }, animateTime);\n            //        $mainUserInfo.css("display", "block");\n            //    }\n            //}\n            //var contactInfoDialog = new VIS.ChildDialog();\n\n            //contactInfoDialog.setContent($contactInfoRoot);\n            //contactInfoDialog.setWidth(665);\n            ////contactInfoDialog.setHeight(700);\n            //contactInfoDialog.setTitle(VIS.Msg.getMsg("ContactInfo"));\n            //contactInfoDialog.setEnableResize(false);\n            //contactInfoDialog.setModal(true);\n            //contactInfoDialog.show();\n            //contactInfoDialog.onClose = function () {\n            //    dispose();\n            //}\n\n            var $editOption = $("<ul id=\'ulEditOption\' class=\'vis-apanel-rb-ul\'>");\n            var $menu = $("<ul id=\'ulCreateOrder\' class=\'vis-apanel-rb-ul\'>");\n            $editContact.on("click", function (e) {\n              debugger;\n              if (category == "" || category == null) {\n                e.preventDefault();\n                return false;\n              }\n              $editContact.find("p").css("background-color", "#e0e0e0");\n              e.stopPropagation();\n              var url = "";\n              var userID = $slideruserID.text();\n              var strCategory = category.split(\',\');\n              if (strCategory.length > 1) {\n                $("#w2ui-overlay").show();\n                if ($editOption != null) {\n                  $editOption.empty();\n                }\n                var $createorderroot = $(\'<div/>\'); //, {\n                $createorderroot.css(\'width\', \'auto\');\n                $createorderroot.css(\'height\', \'100%\');\n                $editOption.css(\'width\', \'auto\');\n                $editOption.css(\'height\', \'100%\');\n                var li = "";\n                for (var i = 0; i < strCategory.length; i++) {\n                  li += "<li style=\'margin-top:15px;margin-left:10px;margin-right:13px;font-size: 15px\' id=\'" + strCategory[i].trim() + "_" + windowNo + "\'>" + VIS.Msg.getMsg(strCategory[i].trim()) + "</li>";\n                }\n                $editOption.append(li);\n                $createorderroot.append($editOption);\n                $editContact.w2overlay($createorderroot.clone(true), {\n                  css: {\n                    height: \'300px\'\n                  }\n                });\n                $createorderroot.css("top", "395px");\n                $editOption.load();\n              } else {\n                if (category == VIS.Msg.getMsg("Employee")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Employee Master&userID=" + userID;\n                if (category == VIS.Msg.getMsg("Customer")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Customer Master&userID=" + userID;\n                if (category == VIS.Msg.getMsg("Vendor")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Vendor Master&userID=" + userID;\n                if (category == VIS.Msg.getMsg("Prospect")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Prospects&userID=" + userID;\n                OpenWindow(NavigateURL, true, e);\n              }\n            });\n            $editOption.on("click", "LI", function (e) {\n              $("#w2ui-overlay").hide();\n              var editOption = $(this).text();\n              if (editOption == VIS.Msg.getMsg("Employee")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Employee Master&userID=" + $slideruserID.text();\n              if (editOption == VIS.Msg.getMsg("Customer")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Customer Master&userID=" + $slideruserID.text();\n              if (editOption == VIS.Msg.getMsg("Vendor")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Vendor Master&userID=" + $slideruserID.text();\n              if (editOption == VIS.Msg.getMsg("Prospect")) NavigateURL = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Prospects&userID=" + $slideruserID.text();\n              // CreateOrder(editOption, e, true);\n              OpenWindow(NavigateURL, true, e);\n              e.stopPropagation();\n            });\n            $sendSms.on("click", function (e) {\n              $sendSms.find("p").css("background-color", "#e0e0e0");\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              e.stopPropagation();\n              window.setTimeout(function () {\n                var sms = new VIS.Sms(null, null, 0, true);\n                var c = new VIS.CFrame();\n                c.setName(VIS.Msg.getMsg("Sms"));\n                c.setTitle(VIS.Msg.getMsg("Sms"));\n                c.hideHeader(true);\n                c.setContent(sms);\n                c.show();\n                sms.initializeComponent();\n                $(".vis-apanel-busy").css("visibility", "hidden");\n                contactInfoDialog.close();\n              }, 2);\n            });\n            $email.on("click", function (e) {\n              $email.find("p").css("background-color", "#e0e0e0");\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              e.stopPropagation();\n              window.setTimeout(function () {\n                var email = new VIS.Email($("#userEmail_" + windowNo).text(), null, null, $slideruserID.text(), true, true, $slideruserTableID.text());\n                var c = new VIS.CFrame();\n                c.setName(VIS.Msg.getMsg("EMail"));\n                c.setTitle(VIS.Msg.getMsg("EMail"));\n                c.hideHeader(true);\n                c.setContent(email);\n                c.show();\n                email.initializeComponent();\n                $(".vis-apanel-busy").css("visibility", "hidden");\n                contactInfoDialog.close();\n              }, 2);\n            });\n            $BPInfo.on("click", function (e) {\n              if (category == "" || category == null) {\n                e.preventDefault();\n                return false;\n              }\n              $BPInfo.find("p").css("background-color", "#e0e0e0");\n              window.setTimeout(function () {\n                var userID = $slideruserID.text();\n                var url = "";\n                url = VIS.Application.contextUrl + "WSP/Contacts/GetWindowID?windowName=Business Partner Info&userID=" + userID;\n                $.ajax({\n                  type: "GET",\n                  async: false,\n                  url: url,\n                  dataType: "json",\n                  success: function (data) {\n                    var dd = JSON.parse(data);\n                    var zoomQuery = new VIS.Query();\n                    zoomQuery.addRestriction("C_BPartner" + "_ID", VIS.Query.prototype.EQUAL, dd[1]);\n                    VIS.viewManager.startWindow(dd[0], zoomQuery);\n                    $BPInfo.find("p").removeAttr("style");\n                    contactInfoDialog.close();\n                  }\n                });\n              }, 500);\n            });\n            $createOrder.on("click", function (e) {\n              $createOrder.find("p").css("background-color", "#e0e0e0");\n              //events();\n              debugger;\n              $("#w2ui-overlay").show();\n              $("#w2ui-overlay").find("div").empty();\n              if ($menu != null) {\n                $menu.empty();\n              }\n              var $createorderroot = $(\'<div/>\'); //, {\n              $createorderroot.css(\'width\', \'auto\');\n              $createorderroot.css(\'height\', \'100%\');\n              $menu.css(\'width\', \'auto\');\n              $menu.css(\'height\', \'100%\');\n              var li = $("<li style=\'margin-top:15px;margin-left:10px;margin-right:13px;font-size: 15px\' id=\'SaleOrder_" + windowNo + "\'>" + VIS.Msg.getMsg("Sales Order") + "</li> <li  style=\'margin-top:10px;margin-left:10px;margin-right:13px;font-size: 15px\' id=\'PurchaseOrder_" + windowNo + "\' >" + VIS.Msg.getMsg("PurchaseOrder") + "</li>");\n              $menu.append(li);\n              $createorderroot.append($menu);\n              $createOrder.w2overlay($createorderroot.clone(true), {\n                css: {\n                  height: \'300px\'\n                }\n              });\n              $createorderroot.css("top", "395px");\n              e.stopPropagation();\n              $menu.load();\n            });\n            $menu.on("click", "LI", function (e) {\n              $("#w2ui-overlay").hide();\n              var createOrder = $(this).text();\n              //CreateOrder(createOrder, e, false);\n              url = VIS.Application.contextUrl + "WSP/Contacts/GetWindowAndOrderID?windowName=" + createOrder + "&userID=" + $slideruserID.text();\n              OpenWindow(url, false, e);\n              e.stopPropagation();\n            });\n            $addBPartner.on("click", function (e) {\n              $addBPartner.find("p").css("background-color", "#e0e0e0");\n              e.stopPropagation();\n              $saleOrder = null;\n              $purchaseOrder = null;\n              VIS.AddUpdateBPartner(windowNo, 0, category, null, $sliderBpID.text(), $slideruBPGroupID.text());\n              $addBPartner.find("p").removeAttr("style");\n            });\n            $history.on("click", function (e) {\n              // UserTableID, Record_ID, BP_ID, 0, "keyColumnName"\n              var atHistory = new VIS.AttachmentHistory($slideruserTableID.text(), $slideruserID.text(), $sliderBpID.text(), 0, "AD_User_ID");\n              atHistory.show();\n            });\n            $appointment.on("click", function (e) {\n              e.stopPropagation();\n              $appointment.find("p").css("background-color", "#e0e0e0");\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              window.setTimeout(function () {\n                VIS.AppointmentsForm.init($slideruserTableID.text(), $("#userID_" + windowNo).text(), VIS.context.getAD_User_ID(), $sliderhduserName.text(), false);\n                $appointment.find("p").removeAttr("style");\n                $(".vis-apanel-busy").css("visibility", "hidden");\n                contactInfoDialog.close();\n              }, 500);\n            });\n            $importContacts.on("click", function (e) {\n              e.stopPropagation();\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              window.setTimeout(function () {\n                WSP.importcontacts(self);\n                $(".vis-apanel-busy").css("visibility", "hidden");\n                //$importContacts.find("p").removeAttr("style");\n              }, 50);\n            });\n            $activity.on("click", function (e) {\n              e.stopPropagation();\n              $activity.find("p").css("background-color", "#e0e0e0");\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              window.setTimeout(function () {\n                //   VIS.AppointmentsForm.init($slideruserTableID.text(), $("#userID_" + windowNo).text(), $("#userID_" + windowNo).text(), $sliderhduserName.text(), true);\n\n                VIS.AppointmentsForm.init(0, $("#userID_" + windowNo).text(), VIS.context.getAD_User_ID(), $sliderhduserName.text(), true);\n                // $isBusy.hide();\n                $activity.find("p").removeAttr("style");\n                $(".vis-apanel-busy").css("visibility", "hidden");\n              }, 500);\n            });\n            $fileUpload.on("change", function () {\n              //$isBusy.show();\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              var userID = $slideruserID.text();\n              var xhr = new XMLHttpRequest();\n              var fd = new FormData();\n              var fileUploadFile = $fileUpload;\n\n              //fd.append("file", document.getElementById(\'#wsp-file-input_\' + self.windowNo).files[0]);\n              fd.append("file", fileUploadFile[0].files[0]);\n              fd.append("userID", userID);\n              if (fileUploadFile[0].files[0].size / kbSize > maxSize) {\n                alert(VIS.Msg.getMsg("UploadedFileSizeLimit"));\n                $fileUpload.replaceWith($fileUpload.val(\'\').clone(true));\n                return;\n              }\n              xhr.open("POST", VIS.Application.contextUrl + "WSP/Contacts/SaveImageAsByte", true);\n              xhr.setRequestHeader("Cache-Control", "no-cache");\n              xhr.setRequestHeader("Pragma", "no-cache");\n              xhr.send(fd);\n              xhr.addEventListener("load", function (event) {\n                var dd = event.target.response;\n                var res = JSON.parse(dd);\n                image = JSON.parse(res);\n                //  $selectedContact.find("#userImg_" + self.windowNo).removeAttr("src").attr("src", "data:image/jpg;base64," + image[0]);\n                $sliderbigUserImage.removeAttr("src").attr("src", "data:image/jpg;base64," + image[1]);\n                //$mobileImg.find("#mobileImg_" + windowNo).removeAttr("src").attr("src", "data:image/jpg;base64," + image[1]);\n                //  $sliderdivbigUserImage.css("width", $userInfoRightPanelDiv.width());\n                //    var img = new Image();\n                //    img.onload = function () {\n\n                //        if (ismobile) {\n                //            $sliderdivbigUserImage.css("width", $userInfoRightPanelDiv.width());\n                //            if (img.width >= 320) {\n\n                //                $sliderbigUserImage.css("width", "100%");\n                //                //$sliderbigUserImage.css("height", img.height - (img.width - $sliderdivbigUserImage.width()));\n                //                //alert(img.height);\n                //                //$sliderbigUserImage.css("height", (img.height - (img.width- $sliderbigUserImage.width()))+10);\n                //                var val = (img.width * 100) / img.height;\n                //                var finalHeight = ($sliderbigUserImage.width() * 100) / val;\n                //                $sliderbigUserImage.css("height", finalHeight);\n                //            }\n                //            else {\n                //                //alert("userName" + result[0].FirstName + "imgwidth:" + $sliderbigUserImage.width() + "  imfheight:" + $sliderbigUserImage.height());\n\n                //                $sliderbigUserImage.css("width", img.width);\n                //                $sliderbigUserImage.css("height", img.height);\n\n                //            }\n                //        }\n\n                //    };\n                //    img.src = $bigUserImage.find("#bigUserImage_" + self.windowNo).attr("src");\n                $(".vis-apanel-busy").css("visibility", "hidden");\n\n                //    //  $bigUserImage.find("img:eq(1)").attr("src", imageUrl.replace("\\Thumb32x32", ""));\n                //    // $("#imgUsrImage").attr(\'src\', "data:image/jpg;base64," + a);\n              }, false);\n              $fileUpload.val("");\n            });\n            $mobilefileUpload.on("change", function () {\n              $(".vis-apanel-busy").css("visibility", "visible");\n              $(".vis-apanel-busy").css("z-index", "999999999999");\n              var userID = $slideruserID.text();\n              var xhr = new XMLHttpRequest();\n              var fd = new FormData();\n              var fileUploadFile = $fileUpload;\n\n              //fd.append("file", document.getElementById(\'#wsp-file-input_\' + self.windowNo).files[0]);\n              fd.append("file", fileUploadFile[0].files[0]);\n              fd.append("userID", userID);\n              if (fileUploadFile[0].files[0].size / kbSize > maxSize) {\n                alert(VIS.Msg.getMsg("UploadedFileSizeLimit"));\n                return;\n              }\n              xhr.open("POST", VIS.Application.contextUrl + "WSP/Contacts/SaveImageAsByte", true);\n              xhr.setRequestHeader("Cache-Control", "no-cache");\n              xhr.setRequestHeader("Pragma", "no-cache");\n              xhr.send(fd);\n              xhr.addEventListener("load", function (event) {\n                var dd = event.target.response;\n                var res = JSON.parse(dd);\n                image = JSON.parse(res);\n                //$selectedContact.find("#userImg_" + self.windowNo).removeAttr("src").attr("src", "data:image/jpg;base64," + image[0]);\n                $sliderbigUserImage.removeAttr("src").attr("src", "data:image/jpg;base64," + image[1]);\n                $mobileImg.removeAttr("src").attr("src", "data:image/jpg;base64," + image[1]);\n                //  $sliderdivbigUserImage.css("width", $userInfoRightPanelDiv.width());\n                //var img = new Image();\n                //img.onload = function () {\n\n                //    if (ismobile) {\n                //        $sliderdivbigUserImage.css("width", $userInfoRightPanelDiv.width());\n                //        if (img.width >= 320) {\n\n                //            $sliderbigUserImage.css("width", "100%");\n                //            // $sliderbigUserImage.css("height", img.height - (img.width - $sliderdivbigUserImage.width()));\n                //            //$sliderbigUserImage.css("height", (img.height - (img.width - $sliderbigUserImage.width())) + 10);\n                //            var val = (img.width * 100) / img.height;\n                //            var finalHeight = ($sliderbigUserImage.width() * 100) / val;\n                //            $sliderbigUserImage.css("height", finalHeight);\n                //        }\n                //        else {\n                //            //alert("userName" + result[0].FirstName + "imgwidth:" + $sliderbigUserImage.width() + "  imfheight:" + $sliderbigUserImage.height());\n\n                //            $sliderbigUserImage.css("width", img.width);\n                //            $sliderbigUserImage.css("height", img.height);\n\n                //        }\n                //    }\n\n                //};\n                //img.src = $mobileImg.find("#mobileImg_" + self.windowNo).attr("src");\n                $(".vis-apanel-busy").css("visibility", "hidden");\n\n                //  $bigUserImage.find("img:eq(1)").attr("src", imageUrl.replace("\\Thumb32x32", ""));\n                // $("#imgUsrImage").attr(\'src\', "data:image/jpg;base64," + a);\n              }, false);\n            });\n            $showAddressOnGoogleMap = $divContactDetails.find("#showAddressOnGoogleMap_" + windowNo);\n            $showAddressOnGoogleMap.on("click", function () {\n              var urlAddress = $divContactDetails.find("#address_" + windowNo).text() + $divContactDetails.find("#country_" + windowNo).text();\n              var url = "http://local.google.com/maps?q=" + urlAddress;\n              window.open(url);\n            });\n            function OpenWindow(url, isEdit, e) {\n              e.stopPropagation();\n              $.ajax({\n                type: "GET",\n                async: false,\n                url: url,\n                dataType: "json",\n                success: function (data) {\n                  var dd = JSON.parse(data);\n                  var zoomQuery = new VIS.Query();\n                  if (isEdit) {\n                    zoomQuery.addRestriction("C_BPartner" + "_ID", VIS.Query.prototype.EQUAL, dd[1]);\n                    VIS.viewManager.startWindow(dd[0], zoomQuery);\n                    $editContact.find("p").removeAttr("style");\n                    contactInfoDialog.close();\n                  } else {\n                    //zoomQuery.addRestriction("C_Order" + "_ID", VIS.Query.prototype.EQUAL, dd[1]);\n                    zoomQuery.addRestriction("C_Order" + "_ID", VIS.Query.prototype.EQUAL, dd[1]);\n                    win = VIS.viewManager.startWindow(dd[0], zoomQuery);\n                    win.onLoad = function () {\n                      var gc = win.cPanel.curGC;\n                      gc.onRowInserting = function () {\n                        win.cPanel.cmd_new(false);\n                      };\n                      gc.onRowInserted = function () {\n                        tab = win.cPanel.curTab;\n                        tab.setValue("C_BPartner_ID", $sliderBpID.text());\n                      };\n                    };\n                    $createOrder.find("p").removeAttr("style");\n                    contactInfoDialog.close();\n                  }\n\n                  // VIS.viewManager.startWindow(dd[0], null);\n                }\n              });\n            }\n            ;\n            function dispose() {\n              $addBPartner.off("click");\n              $activity.off("click");\n              $appointment.off("click");\n              $BPInfo.off("click");\n              $createOrder.off("click");\n              $editContact.off("click");\n              $sendSms.off("click");\n              $email.off("click");\n              $mobilefileUpload.off("change");\n              $fileUpload.off("change");\n              $menu.off("click");\n              $menu.off("click");\n              contactInfoDialog.dispose();\n              contactInfoDialog = null;\n              $contactInfoRoot.remove();\n              $contactInfoRoot.empty();\n            }\n            ;\n            $(".vis-apanel-busy").css("visibility", "hidden");\n          }\n        });\n      }, 2);\n    };\n  };\n  function LoadHtmlDesign(ad_userID, url) {\n    $contactInfoRoot = null;\n    NavigateURL = null;\n    $divDots = null;\n    $mainUserInfo = null;\n    animateTime = 800;\n    kbSize = 1048576;\n    maxSize = 10;\n    //$contactInfoRoot = $("<td id=\'contactInfo_" + windowNo + "\' style=\'position:absolute;z-index:9999999\'> <div id=\'mainUserInfoDiv_" + windowNo + "\' class=\'vis-view_profile_container sliderdiv\' style=\'margin-top: -2px; width: 601.6px; display: block; right: 0px;\'>" +\n    $contactInfoRoot = $(" <div id=\'mainUserInfoDiv_" + windowNo + "\'>" +\n    //"<div id=\'WSP_dots_" + windowNo + "\' class=\'vis-dots\' ></div>" +\n    //" <div id=\'divUserInfo_" + windowNo + "\' style=\'overflow: hidden;\'><div class=\'vis-view_left_part\'>" +\n    "<div class=\'vis-view_left_part\'>" + "<input type=\'hidden\' value=\'0\' id=\'userID_" + windowNo + "\'></input>" + " <p id=\'hduserName_" + windowNo + "\' style=\'display: none;\'></p>" + "  <p id=\'userName_" + windowNo + "\' class=\'vis-view_profile_name\'></p> <a id=\'dotImg_" + windowNo + "\' href=\'javascript:void(0)\' style=\'display: none;\'></a>" + "<div id=\'popUpDiv_" + windowNo + "\' style=\'display: none;\'></div>" + "<input type=\'hidden\' value=\'0\' id=\'BPID_" + windowNo + "\'></input>" + "<input type=\'hidden\' value=\'0\' id=\'BPGroupID_" + windowNo + "\'></input>" + "<input type=\'hidden\' value=\'\' id=\'userTableID_" + windowNo + "\'>" + "<p id=\'companyName_" + windowNo + "\' class=\'vis-view_profile_possession\'></p>" + "<p class=\'vis-view_profile_possession\' style=\'border-bottom: 1px solid rgba(var(--v-c-secondary), 1); padding-bottom: 10px;\' id=\'pContactTypeCategory_" + windowNo + "\'></p>" + "<div class=\'vis-profile_big_img_mobile\'>" + "<span id=\'editMobileImage_" + windowNo + "\' class=\'mobilespan\' style=\'width:24px;float:right;\'>" + "<input type=\'file\' id=\'vis-fileinput_" + windowNo + "\' class=\'vis-file-input\' value=\'Add Pic\' style=\'opacity: 0; width: 7%; margin-top: -6px; float: left; z-index: 999; position: absolute; cursor: pointer;\'>" + "<img src=\'" + VIS.Application.contextUrl + "Areas/WSP/Images/Edit-icon.png\' style=\'z-index: 100; position: absolute;\'>" + "</span>" + "<img id=\'mobileImg_" + windowNo + "\' width=\'100%\' alt=\'Image is not available\' src=\'Areas/VIS/Images/home/User.png\'>" + "</div>" + "<div id=\'divTeam_" + windowNo + "\' class=\'vis-view_team\'></div>" + "<div id=\'divContactDetails_" + windowNo + "\' class=\'vis-view_team\'></div>" + "<div id=\'divcompanyDetails_" + windowNo + "\' class=\'vis-view_team\'></div>" + "<div id=\'divRole_" + windowNo + "\' class=\'vis-view_team\'></div>" + "</div>" + "<div class=\'vis-view_right_part\'  style=\'float:left;width: 55%;\' id=\'WSP_view_right_part_" + windowNo + "\'>" + "<div id=\'userBigImg_" + windowNo + "\' class=\'vis-profile_big_img\' style=\'width: 322px;\'>" + "<div class=\'vis-image-upload\'>" + " <label for=\'file-input\' class=\'vis-fileupload-label\'>" + "<i class=\'vis vis-pencil\'></i>" + "</label>" + "<input type=\'file\' id=\'vis-file-input_" + windowNo + "\' class=\'vis-file-input\' value=\'Add Pic\' style=\'opacity: 0; width: 30%; margin-top: 0px; float: right; z-index: 999; position: absolute; right: 0px; cursor: pointer;\'>" + "</div>" + "<div class=\'vis-bigimg\'>" + " <i id=\'bigUserImage_" + windowNo + "\' class=\'vis vis-user\'></i>" + "</div>" + "</div>" + "<div class=\'vis-actionswrp\'>" + "<table id=\'actionTable_" + windowNo + "\' class=\'vis-tableRightContent\'>" + "<tbody><tr style=\'height:30px\'>" + " <td class=\'vis-tdactionlist\'><a id=\'edit_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon\'>" + " <i class=\'vis vis-edit\'></i></span>" + " <p>Edit </p>" + " </a>" + " </td>" + " <td class=\'vis-tdactionlist\'>" + " <a id=\'sendSMS_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon\'>" + " <i class=\'vis vis-sms\'></i></span>" + " <p>" + " Send Sms" + " </p>" + " </a>" + " </td>" + " </tr>" + "  <tr style=\'height:30px\'>" + "       <td class=\'vis-tdactionlist\'><a id=\'email_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon email_icon\'>" + "           <i class=\'vis vis-email\'></i></span>" + "           <p>Email </p>" + "       </a>" + "       </td>" + "       <td class=\'vis-tdactionlist\'><a id=\'appointment_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon\'>" + "           <i class=\'vis vis-appointment\'></i></span>" + "           <p>Appointment </p>" + "       </a>" + "       </td>" + "   </tr>" + "   <tr style=\'height:30px\'>" + "       <td class=\'vis-tdactionlist\'><a id=\'activity_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon\'>" + "            <i class=\'vis vis-cog\'></i></span>" + "           <p>Activity</p>" + "       </a>" + "       </td>" + "        <td class=\'vis-tdactionlist\'><a id=\'createOrder_" + windowNo + "\' href=\'javascript:void(0)\' class=\'vis-tableaction\'><span class=\'vis-left_icon\'>" + "           <i class=\'vis vis-createdocument\'></i></span>" + "           <p>Create Order</p>" + "       </a>" + "        </td>" + "    </tr>" + "   <tr style=\'height:30px\'>" + "       <td class=\'vis-tdactionlist\'><a id=\'BPInfo_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon\'>" + "           <i class=\'vis vis-info\'></i></span>" + "           <p>BP Info</p>" + "       </a>" + "        </td>" + "        <td class=\'vis-tdactionlist\'><a id=\'addBPartner_" + windowNo + "\' href=\'javascript:void(0)\' class=\'vis-tableaction\'><span class=\'vis-left_icon\'>" + "           <i class=\'vis vis-addbp\'></i></span>" + "           <p style=\'\'>Add BPartner </p>" + "       </a>" + "       </td>" + "   </tr>" + " <tr style=\'height:30px\'>" + "<td class=\'vis-tdactionlist\'><a id=\'History_" + windowNo + "\' class=\'vis-tableaction\' href=\'javascript:void(0)\'><span class=\'vis-left_icon\'>" + "<i class=\'vis vis-history\'></i></span>" + "<p>" + VIS.Msg.getMsg(\'History\') + "</p>" + "</a>" + "</td>" + "</tr>" + "   <tr>" + "   </tr>" + "</tbody></table>" + "</div>" + "<div id=\'divBirthday_" + windowNo + "\' class=\'vis-birthday_container\' style=\'display: none;\'></div></div></div>");\n  }\n  ;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/contactInfo.js?')},"./Areas/VIS/Scripts/app/Framework/email.js":()=>{eval('//; vis = window.VACOM || {};\n;\n(function (VIS, $) {\n  function Email(to, _curtab, _curGC, Record_ID, isEmail, isWindowForm, tableID, body, subject, attchID) {\n    //local variables          \n    this.frame = null;\n    this.windowNo = VIS.Env.getWindowNo();\n    var ctx = VIS.Env.getCtx();\n    var ch = null;\n    var bpColumnName = "C_BPARTNER_ID";\n    var rowsSource = null;\n    var rowsSingleView = null;\n    var selectedTemplateID = 0;\n    var formatName;\n    var saveForAllWindows;\n    var lstLatestFiles = [];\n    var oldFiles = [];\n    var dLAContent = null;\n    var dOldAtt = null;\n    var dOAContent = null;\n    var attachmentID = 0;\n    if (attchID) {\n      attachmentID = attchID;\n    }\n\n    //Is used to hide buttons of select file and upload , if it is set true then attachment design wil be changed\n    var newdesign = true;\n    // used to check email entered in inputs are valid or not\n    var hsaValidinputmails = false;\n    //  var dOAContent = null;\n\n    var currentTable_ID = 0;\n    var selectedValues = [];\n    var callingFromOutsideofWindow = false;\n    var filesforAttachmentforOpenFormat = [];\n    var filesforAttachmentforNewAttachment = [];\n    //var attachmentContainerOpen = false;\n\n    // Design variables        //contains Field names of tab on left side\n    var $ulFieldNames = null;\n    var $root = null;\n    var $leftDiv = null;\n    var $middleDiv = null;\n    var $rightDiv = null;\n    var $attachDmsDoc = null;\n    var $imgAction = null;\n    //contain list of bcc emails\n    var $bccChkList = null;\n    var $dynamicDisplay = null;\n    var $to = null;\n    var $bcc = null;\n    var $cc = null;\n    var $refresh = null;\n    var $attachment = null;\n    var $subject = null;\n    // Text Area of editor\n    var $txtArea = null;\n    // JQuery object of Text Area of editor after inserting kendo ui\n    var $textAreakeno = null;\n    //contains dynmic display checkbox and rest\n    var $leftfootArea = null;\n    // preview button\n    var $btnHdrPreview = null;\n    //send Button\n    var $btnHdrSend = null;\n    //open saved format button\n    var $btnHdrOpen = null;\n    //save new Format button\n    var $btnHdrSaveAs = null;\n    //save exsisting format if there, else save new format\n    var $btnHdrSave = null;\n    var $savePdf = null;\n    var $btnHdrCancel = null;\n    var $bsyDiv;\n    var $toolbarDiv = $(\'<div class="vis-awindow-header vis-menuTitle">\');\n    var self = this;\n    var $uploaddiv;\n    var $btnupload;\n    var $Attachdiv;\n    var $insertAttachdiv;\n    var $btnSavePdf;\n    var $btnNewLetter;\n    var $btnInsert;\n    var formHeight = 0;\n    var formWidth = 0;\n    var winNo = self.windowNo;\n    var arrWindowNo = [];\n    $root = $(\'<div class="vis-email-rootDiv vis-forms-container"></div>\');\n    var isBusy = $(\'<div class="vis-email-rootDivBusy"></div>\');\n    var $AttacmentOption = $("<ul id=\'ulAttachmentOption\' class=\'vis-apanel-rb-ul\'>");\n    // Added By Param On date 18-sep-2015\n    //Start//\n    var doc = null;\n    var $fileSystemOption = null;\n    var $dmsOption = null;\n    //End//\n    var isViewLoaded = false;\n    var $lineImgDiv;\n    var $toggleAction;\n    var $scrollIcon;\n    var flagImg = false;\n    var divReadOnly = $("<div style=\'width: 100%;height: 100%;background:black;opacity: .1;display:none\'>"); //table-cell\n    var divProgress = null;\n    if (VIS.Application.isRTL) {\n      divProgress = $("<div id=\'progress_bar\' class=\'vis-ui-progress-bar ui-container\' style=\'top:41%;width: 80%;right: 10%;\'>");\n    } else {\n      divProgress = $("<div id=\'progress_bar\' class=\'vis-ui-progress-bar ui-container\' style=\'top:41%;width: 80%;left: 9%;\'>");\n    }\n    divReadOnly.append(divProgress);\n    var divGreen = $("<div class=\'vis-ui-progress\' style=\'width: 0%; display: block;position:absolute;margin-top:2px\'>");\n    divProgress.append(divGreen);\n    var lblpercentage = $("<span class=\'ui-label\' >").append("0%");\n    divProgress.append(lblpercentage);\n\n    //Atachment\n    var currentchunk = 0;\n    var currentFile = 0;\n    var folder = Date.now().toString();\n    var chunkSize = 1 * 1024 * 1024;\n    var totalChunks = 0;\n    var currentFileChunkNo = 0;\n    var filesInfo = [];\n    var htt = \'\';\n    var fileBrowser = null;\n    var file;\n    var $dmsheader = null;\n    var $divlbNav;\n    // var $divlbNav;\n\n    var $SubjectTextChange = 0;\n\n    //Lakhwinder\n    //send printformats as attachment Dynamically\n    var $chkBSendPFasAtt = null;\n    var $cmbPfFiletype = null;\n\n    /** Tab panel-adding cc & bcc emails ** Dt: 28/06/2021 ** Modified By: Kumar **/\n    var ccmail = \'\';\n    var bccmail = \'\';\n    initEmail();\n    function initEmail() {\n      callingFromOutsideofWindow = isWindowForm;\n      if (!callingFromOutsideofWindow) {\n        currentTable_ID = _curtab.gridTable.AD_Table_ID;\n        // this is data source for multiView Records\n        rowsSource = _curGC.getSelectedRows();\n\n        // this is data source for single View Records\n        rowsSingleView = _curtab.getRecords()[_curtab.getCurrentRow()];\n      } else {\n        if (tableID != null && tableID != undefined) {\n          currentTable_ID = tableID;\n        }\n      }\n      $bccChkList = $(\'<ul class="vis-email-ul" ></ul>\');\n      $bsyDiv = $("<div>");\n      $bsyDiv.css("position", "absolute");\n      $bsyDiv.css("bottom", "0");\n      $bsyDiv.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/LoadingCircle.gif\') no-repeat");\n      $bsyDiv.css("background-position", "center center");\n      $bsyDiv.css("width", "98%");\n      $bsyDiv.css("height", "98%");\n      $bsyDiv.css(\'text-align\', \'center\');\n      $bsyDiv.css(\'opacity\', \'.1\');\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    this.initializeComponent = function () {\n      var $btncloseChart = null;\n      var pheader;\n      if (isEmail == true) {\n        $btncloseChart = $(\'<a href="javascript:void(0)"  class="vis-icon-menuclose"><i class="vis vis-cross"></i></a>\');\n        if (callingFromOutsideofWindow) {\n          pheader = $(\'<p>\' + VIS.Msg.getMsg("EMail") + \' (\' + VIS.Msg.getMsg("Contacts") + \')\' + \' </p>\');\n        } else {\n          pheader = $(\'<p>\' + VIS.Msg.getMsg("EMail") + \' (\' + _curGC.aPanel.$parentWindow.getName() + \')\' + \' </p>\');\n        }\n        //$btncloseChart.append(pheader); \n      } else {\n        $btncloseChart = $(\'<a href="javascript:void(0)"  class="vis-icon-menuclose"><i class="vis vis-cross"></i></a>\');\n        if (callingFromOutsideofWindow) {\n          pheader = $(\'<p>\' + VIS.Msg.getMsg("Letter") + \' (\' + VIS.Msg.getMsg("Contacts") + \')\' + \' </p>\');\n        } else {\n          pheader = $(\'<p>\' + VIS.Msg.getMsg("Letter") + \' (\' + _curGC.aPanel.$parentWindow.getName() + \')\' + \' </p>\');\n        }\n        //$btncloseChart.append(pheader);\n      }\n      $root.append($toolbarDiv.append($btncloseChart).append(pheader));\n      $btncloseChart.click(function (e) {\n        self.dispose();\n        self = null;\n        e.stopPropagation();\n      });\n\n      //if (checktextArea() == false) {\n      //    return;\n      //}\n\n      loadView();\n      if (loadTextArea() == false) {\n        return;\n      }\n      $root.append($bsyDiv);\n      Addbuttons();\n      if (!callingFromOutsideofWindow) {\n        if (isEmail) {\n          loadEmails(false);\n        }\n      }\n      if (!callingFromOutsideofWindow) {\n        loadFields(false);\n        addPrintOption();\n      }\n      //  loadTextArea();\n      //createDesign();\n\n      eventhandlers();\n    };\n    this.getRoot = function () {\n      return $root;\n    };\n    function Addbuttons() {\n      if (isEmail) {\n        $btnHdrSend = $(\'<i class="vis-email-sendbtn vis vis-paper-plane"  title="\' + VIS.Msg.getMsg("SendMail").replace(\'&\', \'\') + \'"></i>\');\n        $toolbarDiv.append($btnHdrSend);\n      } else {\n        $btnHdrSend = $(\'<i class="vis-email-saveAttachbtn vis vis-save-attach"  title="\' + VIS.Msg.getMsg("SaveAttachment").replace(\'&\', \'\') + \'" ></i>\');\n        $toolbarDiv.append($btnHdrSend);\n      }\n\n      //$btnHdrdDivider = $(\'<img  style="margin-top:10px;margin-right:20px;cursor: pointer;float:right"  src="\' + VIS.Application.contextUrl + \'Areas/vis/Images/divider.png"> </img>\');\n      //$toolbarDiv.append($btnHdrdDivider);\n\n      //$btnHdrCancel = $(\'<img  style="margin-top:10px;margin-right:20px;cursor: pointer;float:right" title="\' + VIS.Msg.getMsg("Cancel").replace(\'&\', \'\') + \'" src="\' + VIS.Application.contextUrl + \'Areas/vis/Images/cancel.png"> </img>\');\n      //$toolbarDiv.append($btnHdrCancel);\n      if (!callingFromOutsideofWindow) {\n        $btnHdrPreview = $(\'<i class="vis-email-btns vis vis-viewdocument"  title="\' + VIS.Msg.getMsg("Preview").replace(\'&\', \'\') + \'" ></i>\');\n        $toolbarDiv.append($btnHdrPreview);\n        $btnHdrSaveAs = $(\'<i class="vis-email-btns vis vis-save-as" title="\' + VIS.Msg.getMsg("SaveAs").replace(\'&\', \'\') + \'" ></i>\');\n        $toolbarDiv.append($btnHdrSaveAs);\n        $btnHdrSave = $(\'<i class="vis-email-btns vis vis-save" title="\' + VIS.Msg.getMsg("Save").replace(\'&\', \'\') + \'"></i>\');\n        $toolbarDiv.append($btnHdrSave);\n        $btnHdrOpen = $(\'<i class="vis-email-btns vis vis-open-file" title="\' + VIS.Msg.getMsg("Open").replace(\'&\', \'\') + \'" ></i>\');\n        $toolbarDiv.append($btnHdrOpen);\n      }\n      if (!isEmail) {\n        $btnSavePdf = $(\'<i class="vis-email-btns vis vis-save-pdf" title="\' + VIS.Msg.getMsg("SavePdf").replace(\'&\', \'\') + \'"></i>\');\n        ///Manish 31/5/2016                                                                                                                                    \n        $btnNewLetter = $(\'<i class="vis-email-btns vis vis-new" title="\' + VIS.Msg.getMsg("NewLetter").replace(\'&\', \'\') + \'" ></i>\');\n        ///End 31/5/2016\n        $toolbarDiv.append($btnSavePdf).append($btnNewLetter);\n      }\n    }\n    function loadView() {\n      var datainit = {\n        windowNo: self.windowNo,\n        language: VIS.Env.getAD_Language(VIS.Env.getCtx())\n      };\n      $.ajax({\n        type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Email/Init",\n        data: datainit,\n        success: function (data) {\n          setDesign(data);\n        }\n      });\n    }\n    ;\n    function setDesign(data) {\n      $root.append($(data));\n      var middleDivWidth = 0;\n      $dynamicDisplay = $root.find(\'#\' + self.windowNo + "_dyndis");\n      $chkBSendPFasAtt = $root.find(\'#\' + self.windowNo + "_dynPF");\n      $cmbPfFiletype = $root.find(\'#\' + self.windowNo + "_dynPFType");\n      $root.find(\'.vis-email-attachmentContainer\').hide();\n      $leftDiv = $root.find(\'.vis-email-leftDiv\');\n      $rightDiv = $root.find(\'.vis-Email-BccList\');\n      $subject = $root.find(\'#\' + self.windowNo + "_emailSubject");\n      //Add By Param on Date 22-sep-2015//\n      $attachDmsDoc = $root.find(\'.vis-DMSAttachDocList\');\n      $dmsheader = $root.find(\'.vis-dmsdocumentheader\');\n      if (!window.VADMS) {\n        $attachDmsDoc.css(\'display\', \'none\');\n        $dmsheader.css(\'display\', \'none\');\n      }\n      //End//\n      if (subject != undefined && subject != null) {\n        $subject.val(subject);\n      }\n      $attachment = $root.find(\'#\' + self.windowNo + "_vis-email-attacImg");\n      $txtArea = $root.find(\'#\' + self.windowNo + "_vis-Email-textarea");\n      $leftfootArea = $root.find(".vis-Email-leftFooter");\n\n      //$root.find(\'.vis-form-data-sub\').css(\'margin-top\', \'10px\');\n      $root.find(\'.contentArea\').css(\'height\', $root.height() - 44);\n      $root.find(".vis-Email-textarea-div").css({\n        \'margin-top\': \'10px\'\n      });\n      var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n      if (ismobile == true) {\n        $root.find(".vis-Email-textarea-div").css({\n          \'overflow\': \'auto\'\n        });\n      }\n      $root.find(\'.vis-email-leftDiv\').height($root.find(\'.contentArea\').height());\n      if (callingFromOutsideofWindow) {\n        $root.find(\'.vis-form-data-sub\').css(\'margin-top\', \'0px\');\n        $root.find(\'.vis-email-leftDiv\').hide();\n        $root.find(\'.vis-Email-rytWrap\').hide();\n        $to = $root.find(\'#\' + self.windowNo + "_emailToTop");\n        $bcc = $root.find(\'#\' + self.windowNo + "_emailBccTop");\n        $cc = $root.find(\'#\' + self.windowNo + "_eamilCcTop");\n\n        /** Tab panel-adding cc & bcc emails ** Dt: 28/06/2021 ** Modified By: Kumar **/\n        if (ccmail != undefined && ccmail != null && ccmail != \'\') {\n          $cc.val(ccmail);\n        } else $cc.hide();\n\n        /** Tab panel-adding cc & bcc emails ** Dt: 28/06/2021 ** Modified By: Kumar **/\n        if (bccmail != undefined && bccmail != null && bccmail != \'\') {\n          $bcc.val(bccmail);\n        } else $bcc.hide();\n        $root.find(".vis-Email-textarea-div").height($root.height() - 180);\n        $root.find(\'.vis-Email-leftWrap\').css("width", \'100%\');\n        $root.find(\'.vis-Email-leftFooter\').hide();\n        middleDivWidth = $root.width() - 40;\n        $dynamicDisplay.prop(\'checked\', false);\n        $root.find(\'.vis-Email-topinputWrap\').css(\'overflow\', \'auto\');\n        $dynamicDisplay.hide();\n        $chkBSendPFasAtt.prop(\'checked\', false);\n        $chkBSendPFasAtt.parent().hide();\n        $cmbPfFiletype.prop(\'checked\', false);\n        $cmbPfFiletype.parent().hide();\n        if (to != undefined && to != null) {\n          $to.val(to);\n        }\n\n        //$root.find(\'.vis-form-data-sub\').css({ \'width\': \'100%\', \'padding-right\': \'42px\' });\n        //$root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 60);\n        $root.find(\'.vis-form-data-sub\').width($root.width() - 85);\n      } else {\n        if (isEmail) {\n          $root.find(\'.vis-Email-topinputWrap\').hide();\n          $to = $root.find(\'#\' + self.windowNo + "_emailTo");\n          $bcc = $root.find(\'#\' + self.windowNo + "_emailBcc");\n          $cc = $root.find(\'#\' + self.windowNo + "_eamilCc");\n          $root.find(".vis-Email-textarea-div").height($root.height() - (115 + 30));\n          $refresh = $root.find(\'#\' + self.windowNo + "_emailRefresh");\n\n          //if ($textAreakeno != null && $textAreakeno != undefined) {\n          //    $textAreakeno.body.style.height = ($root.find(".vis-Email-textarea-div").height() - 80) + "px";\n          //}\n          middleDivWidth = $root.width() - 90;\n          $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 350);\n          $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 60);\n        } else {\n          $root.find(\'.vis-Email-rytWrap\').hide();\n          $root.find(\'.vis-Email-topinputWrap\').hide();\n          $attachment.hide();\n          $root.find(".vis-Email-textarea-div").height($root.height() - (125 + 17));\n          $root.find(\'.vis-Email-leftWrap\').css("margin-right", \'20px\');\n          middleDivWidth = $root.width() - 240;\n          $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 25);\n          //$root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width());\n          $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 60);\n        }\n      }\n      if (window.VADMS) {\n        $root.find(\'.vis-Email-BccList\').height($root.find(\'.vis-Email-rytContent\').height() - ($root.find(\'.vis-Email-rytForm\').height() + 70) - 520);\n      } else {\n        $root.find(\'.vis-Email-BccList\').height($root.find(\'.vis-Email-rytContent\').height() - ($root.find(\'.vis-Email-rytForm\').height() + 70) - 280);\n      }\n      $middleDiv = $root.find(\'.vis-Email-ContentWrap\');\n      $middleDiv.css(\'width\', middleDivWidth);\n      if ($textAreakeno != null && $textAreakeno != undefined) {\n        $textAreakeno.body.style.width = middleDivWidth - 370 + "px";\n      }\n      isViewLoaded = true;\n\n      // Hide Send Print Format as attachment in case of letter --VIS0228\n      if (isEmail == true) {\n        $chkBSendPFasAtt.show();\n        $chkBSendPFasAtt.next().show();\n      } else {\n        $chkBSendPFasAtt.hide();\n        $chkBSendPFasAtt.next().hide();\n      }\n    }\n    ;\n    function loadTextArea() {\n      try {\n        $txtArea.kendoEditor({\n          tools: ["bold", "italic", "underline", "strikethrough", "justifyLeft", "justifyCenter", "justifyRight", "justifyFull", "insertUnorderedList", "insertOrderedList", "indent", "outdent", "createLink", "unlink", "insertImage", "insertFile", "subscript", "superscript", "createTable", "addRowAbove", "addRowBelow", "addColumnLeft", "addColumnRight", "deleteRow", "deleteColumn", "viewHtml", "formatting", "cleanFormatting", "fontName", {\n            name: "fontSize",\n            items: [].concat([{\n              text: "8px",\n              value: "8px"\n            }], [{\n              text: "12px",\n              value: "12px"\n            }], [{\n              text: "16px",\n              value: "16px"\n            }], [{\n              text: "20px",\n              value: "20px"\n            }], [{\n              text: "24px",\n              value: "24px"\n            }])\n          }, "foreColor", "backColor"],\n          keyup: getTextChange,\n          encoded: false\n        });\n        $textAreakeno = $txtArea.data("kendoEditor");\n        $textAreakeno.value("");\n        if (body != undefined && body != null) {\n          $textAreakeno.value(body);\n        }\n      } catch (ex) {\n        console.log(ex);\n        VIS.ADialog.error("PleaseInstallKendoUIModule");\n        self.dispose();\n        self = null;\n        return false;\n      }\n      return true;\n\n      //$textAreakeno.body.style.height = ($root.find(".vis-Email-textarea-div").height() - 80) + "px";\n      //if ($textAreakeno != null && $textAreakeno != undefined) {\n      //    $textAreakeno.body.style.width = ($middleDiv.width() - 370) + "px";\n      //}\n    }\n    ;\n    function getTextChange() {\n      //if ($textAreakeno.value() != "") {\n      //    if ($subject.val() != "") {\n      //        $SubjectTextChange = 1;\n      //    }\n      //    else {\n      //        $SubjectTextChange = 0;\n      //    }\n      //}\n      //else {\n      //    $SubjectTextChange = 0;\n      //}\n      if ($textAreakeno.value() != "" || $subject.val() != "") {\n        $SubjectTextChange = 1;\n      }\n    }\n    ;\n    function loadEmails(refersh) {\n      if (refersh == true) {\n        //$bccChkList.empty();\n        // this is data source for multiView Records\n        rowsSource = _curGC.getSelectedRows();\n\n        // this is data source for single View Records\n        rowsSingleView = _curtab.getRecords()[_curtab.getCurrentRow()];\n      }\n      if (_curGC.singleRow && rowsSource.length == 0)\n        //show records for single window\n        {\n          loademailforSingleView();\n        } else {\n        if (rowsSource.length > 0) {\n          var htm = \'\';\n          for (var i = 0; i < rowsSource.length; i++) {\n            // else {\n            if (isEmail) {\n              if (rowsSource[i]["email"] != null) {\n                isEmail = true;\n                var ID = rowsSource[i][_curtab.getKeyColumnName().toLower()];\n                htm += \'<li class="vis-list-li-bcc"  data-email="\' + rowsSource[i]["email"] + \'"><input data-currentrec="Y" data-recID="\' + ID + \'" id="\' + self.windowNo + \'_\' + rowsSource[i]["email"] + \'_CheckBoxList1" type="checkbox" value="\' + rowsSource[i]["email"] + \'" checked/><label class="vis-chcklist-label"  for="\' + self.windowNo + \'_\' + rowsSource[i]["email"] + \'_CheckBoxList1">\' + rowsSource[i]["email"] + \'(\' + ID + \')</label></li>\';\n              }\n            }\n          }\n          $bccChkList.append(htm);\n          htm = null;\n        } else {\n          loademailforSingleView();\n        }\n      }\n      if (!refersh) {\n        $rightDiv.append($bccChkList);\n      }\n    }\n    ;\n    function loademailforSingleView() {\n      if (isEmail) {\n        if (rowsSingleView["email"] != null) {\n          isEmail = true;\n          var ID = rowsSingleView[_curtab.getKeyColumnName().toLower()];\n          $bccChkList.append(\'<li class="vis-list-li-bcc" data-email="\' + rowsSingleView["email"] + \'"><input id="\' + self.windowNo + \'_\' + rowsSingleView["email"] + \'_CheckBoxList1" type="checkbox" value="\' + rowsSingleView["email"] + \'" checked /><label class="vis-chcklist-label" for="\' + self.windowNo + \'_\' + rowsSingleView["email"] + \'_CheckBoxList1">\' + rowsSingleView["email"] + \'(\' + ID + \')</label></li>\');\n        }\n      }\n    }\n    ;\n    function loadFields(isRefresh) {\n      if (!isRefresh) {\n        $lineImgDiv = $(\'<div class="vis-apanel-lb-toggle">\');\n        $imgAction = $(\'<i class="fa fa-bars"></i>\');\n        //$toggleAction = $(\'<div class="vis-apanel-lb-toggle" style="height:100%;overflow-x:hidden;overflow-y: hidden;"></div>\');\n        $toggleAction = $(\'<div class="vis-apanel-lb-toggle" style="border:none;height:100%;overflow-x:hidden;overflow-y: hidden;"></div>\');\n\n        ///$divlbNav = $("<div class=\'vis-apanel-lb-oflow\'>").hide();\n        $divlbNav = $("<div class=\'vis-apanel-lb-oflow\' style=\'border-top:0;display:none\' >");\n        $divlbNav.html("<a data-dir=\'u\' href=\'javascript:void(0)\'><i class=\'vis vis-arrow-up\' data-dir=\'u\'></i></a><a data-dir=\'d\' href=\'javascript:void(0)\' ><i class=\'vis vis-arrow-down\' data-dir=\'d\'></i></a>");\n        $scrollIcon = $(\'<div class="vis-apanel-lb-toggle" style="padding: 5px 10px;overflow-x:hidden;overflow-y: hidden;"></div>\');\n        $scrollIcon.append($divlbNav);\n\n        //$toggleAction.append($imgAction);\n        $lineImgDiv.append($imgAction);\n        $leftDiv.append($lineImgDiv);\n        $leftDiv.append($toggleAction);\n        $leftDiv.append($scrollIcon);\n\n        //$divlbNav.hide();                \n        //$toggleAction.css("border-bottom", "none");\n\n        $ulFieldNames = $(\'<ul class="vis-apanel-lb-ul"></ul>\');\n\n        //$ulFieldNames.append($divlbNav);\n        $ulFieldNames.css({\n          "overflow": "auto",\n          "overflow-x": "hidden",\n          "white-space": "nowrap",\n          "width": "100%"\n        });\n      } else {\n        $ulFieldNames.empty();\n      }\n      var htmlmail = \'\';\n      for (var i = 0; i < _curtab.gridTable.getFields().length; i++) {\n        var iskeyColumn = _curtab.gridTable.getFields(0)[i].getColumnName().toUpper() == _curtab.getKeyColumnName().toUpper(); // in case of custmer Master , C_BPartner is not displayed but it is required to show its user\'s email which have isEmail=Y\n\n        if (!_curtab.gridTable.getFields(0)[i].getIsDisplayed() && !iskeyColumn) {\n          continue;\n        }\n        if (!iskeyColumn) {\n          htmlmail += \'<li>\' + _curtab.gridTable.getFields(0)[i].getHeader() + \'</li>\';\n        }\n        var bpList = [];\n        var pkList = [];\n        if (_curtab.gridTable.getFields(0)[i].getColumnName().toUpper().equals(bpColumnName)) {\n          for (var q = 0; q < rowsSource.length; q++) {\n            if (VIS.DisplayType.IsLookup(_curtab.getField(bpColumnName).getDisplayType())) {\n              if (rowsSource[q][bpColumnName.toLower()] != null) {\n                bpList.push(rowsSource[q][bpColumnName.toLower()]);\n                pkList.push(rowsSource[q][_curtab.getKeyColumnName().toLower()]);\n              }\n            } else if (rowsSource[q][bpColumnName.toLower()] != null) {\n              bpList.push(rowsSource[q][bpColumnName.toLower()]);\n              pkList.push(rowsSource[q][_curtab.getKeyColumnName().toLower()]);\n            }\n          }\n        }\n        fillIDsOFUsers(bpList, pkList);\n      }\n      if (!iskeyColumn) {\n        $ulFieldNames.append(htmlmail);\n      }\n      if (!isRefresh) {\n        $toggleAction.append($ulFieldNames);\n      }\n      $ulFieldNames.children(\'li\').on("click", insertSelectedField);\n    }\n    ;\n    this.leftULsize = function () {\n      //debugger;\n\n      if (!callingFromOutsideofWindow) {\n        var ulHeight = $scrollIcon.height() + $lineImgDiv.height() + 53;\n        $($ulFieldNames.parent()).height($leftDiv.height() - ulHeight);\n\n        //$ulFieldNames.height($leftDiv.height() - ulHeight);\n        //$toggleAction.height($leftDiv.height() - ulHeight);\n        if (flagImg == true) {\n          leftULdynamicheight();\n        }\n      }\n    };\n    function leftULdynamicheight() {\n      debugger;\n      if (!callingFromOutsideofWindow) {\n        if ($ulFieldNames.height() > $($ulFieldNames.parent()).height()) {\n          $toggleAction.css("border-bottom", "1px solid rgba(var(--v-c-secondary), 1)");\n          $divlbNav.css("display", "block");\n          var ulHeight = $scrollIcon.height() + $lineImgDiv.height() + 37;\n          $toggleAction.height($leftDiv.height() - ulHeight);\n          $leftDiv.css("overflow", "hidden");\n          $toggleAction.css({\n            "overflow-x": "hidden",\n            "width": "100%",\n            "overflow-y": "visible"\n          });\n        } else {\n          $toggleAction.css("border-bottom", "none");\n          $divlbNav.css("display", "none");\n\n          //$divlbNav.hide();\n        }\n      }\n    }\n    ;\n    function fillIDsOFUsers(bpID, prID) {\n      //Dictionary<int, string> dicExsit = vchkListBoxTop.GetKeyValues();\n      //List<int> exsisitnIDS = vchkListBoxTop.GetKeyValues().Keys.ToList();\n\n      var pvID = 0;\n      for (var i = 0; i < bpID.length; i++) {\n        //var sql = "Select AD_User_ID,email from ad_user where isEmail=\'Y\' AND c_bpartner_ID=" + bpID[i];\n        //var ds = VIS.DB.executeDataSet(sql);\n        var ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Email/GetUser", {\n          "BPartner_ID": bpID[i]\n        }, null);\n        var isBroken = false;\n        var htm = \'\';\n        //if (ds != null && ds.getTables()[0].getRows().length > 0) {\n        //    for (var j = 0; j < ds.getTables()[0].getRows().length; j++) {\n        //        if (ds.getTables()[0].getRows()[j].getCell("email") != null) {\n        //            //if (ds.getTables()[0].getRows()[j].getCell("ISEMAIL").toString().equals("Y")) {\n        //            if (ds.getTables()[0].getRows()[j].getCell("EMAIL") == null || ds.getTables()[0].getRows()[j].getCell("EMAIL") == "") {\n        //                continue;\n        //            }\n\n        //            if ($($bccChkList.children(\'li\').data(ds.getTables()[0].getRows()[j].getCell("EMAIL") + prID[i])).length > 0) {\n        //                continue;\n        //            }\n\n        //            htm += \'<li  class="vis-list-li-bcc"><input id="\' + self.windowNo + \'_\' + ds.getTables()[0].getRows()[j].getCell("EMAIL") + \'_CheckBoxList1" type="checkbox"  value="\' + ds.getTables()[0].getRows()[j].getCell("EMAIL")\n        //                 + \'" checked/><label class="vis-chcklist-label"  for="\' + self.windowNo + \'_\' + ds.getTables()[0].getRows()[j].getCell("EMAIL") + \'_CheckBoxList1">\' + ds.getTables()[0].getRows()[j].getCell("EMAIL") + \'(\' + prID[i] + \')</label></li>\';\n        //            // }\n        //        }\n        //    }\n        //}\n\n        if (ds != null) {\n          for (var j in ds) {\n            if (ds[j]["Email"] != null) {\n              if (ds[j]["Email"] == null || ds[j]["Email"] == "") {\n                continue;\n              }\n              if ($($bccChkList.children(\'li\').data(ds[j]["Email"] + prID[i])).length > 0) {\n                continue;\n              }\n              htm += \'<li  class="vis-list-li-bcc"><input data-currentrec="N" data-recid="\' + prID[i] + \'" id="\' + self.windowNo + \'_\' + ds[j]["Email"] + \'_CheckBoxList1" type="checkbox"  value="\' + ds[j]["Email"] + \'" checked/><label class="vis-chcklist-label"  for="\' + self.windowNo + \'_\' + ds[j]["Email"] + \'_CheckBoxList1">\' + ds[j]["Email"] + \'(\' + prID[i] + \')</label></li>\';\n              // }\n            }\n          }\n        }\n        $bccChkList.append(htm);\n        htm = null;\n      }\n    }\n    ;\n    function eventhandlers() {\n      //$attachment.on("click", attachContainer);\n\n      //if ($dynamicDisplay.is(":checked"))\n      //{\n      //    $divlbNav.show();\n      //    $toggleAction.css("border-bottom", "1px solid white");\n      //}\n      //else\n      //{\n      //    $divlbNav.hide();\n      //    $toggleAction.css("border-bottom", "none");\n      //};\n      $subject.on("change", getTextChange);\n\n      //$divlbNav.off("click");\n      if (!callingFromOutsideofWindow) {\n        $divlbNav.on("click", function (e) {\n          e.stopPropagation();\n          var dir = $(e.target).data(\'dir\');\n          if (!dir) return;\n          var dHeight = $ulFieldNames.parent().height();\n          var ulheight = $ulFieldNames.height();\n          var cPos = $ulFieldNames.parent().scrollTop();\n          var offSet = Math.ceil(dHeight / 2);\n          var s = 0;\n          if (dir == \'d\') {\n            if (cPos + offSet >= ulheight - offSet) return;\n            var ms = ulheight - dHeight;\n            s = cPos + offSet;\n            $ulFieldNames.parent().animate({\n              scrollTop: s > ms ? ms : s\n            }, 1000);\n          } else if (dir == \'u\') {\n            if (cPos == 0) return;\n            s = cPos - offSet;\n            $ulFieldNames.parent().animate({\n              scrollTop: s < 0 ? 0 : s\n            }, 1000);\n            //$divTabControl.scrollLeft(cPos - offSet);\n          }\n\n          //e.stopPropagation();\n          //var dir = $(e.target).data(\'dir\');\n          //if (!dir) return;\n\n          //var dHeight = $toggleAction.height();\n          //var ulheight = $ulFieldNames.height();                \n          //var cPos = $toggleAction.scrollTop();\n          //var offSet = Math.ceil(dHeight / 2);\n          //var s = 0;\n          //if (dir == \'d\') {\n          //    if ((cPos + offSet) >= (ulheight - offSet))\n          //        return;\n          //    var ms = ulheight - dHeight;\n          //    s = cPos + offSet;\n          //    $toggleAction.animate({ scrollTop: s > ms ? ms : s }, 1000, "easeOutBounce");\n          //}\n          //else if (dir == \'u\')\n          //{\n          //    if (cPos == 0) {\n          //        return;\n          //    }\n          //    else {\n          //        s = (cPos - offSet);\n          //        $toggleAction.animate({ scrollTop: s < 0 ? 0 : s }, 1000, "easeOutBounce");\n          //    }\n          //    //$divTabControl.scrollLeft(cPos - offSet);\n          //}\n\n          //e.stopPropagation();\n          //var dir = $(e.target).data(\'dir\');\n          //if (!dir) return;\n\n          //var dHeight = $leftDiv.height();\n          //var ulheight = $ulFieldNames.height();\n          //var cPos = $ulFieldNames.scrollTop();\n          //var offSet = Math.ceil(dHeight / 2);\n          //var s = 0;\n          //if (dir == \'d\')\n          //{\n          //    if ((cPos + offSet) >= ulheight - offSet)\n          //        //return;\n          //    var ms = ulheight - dHeight;\n          //    s = cPos + offSet;\n          //    $ulFieldNames.animate({ scrollTop: s > ms ? ms : s }, 1000, "easeOutBounce");\n          //}\n          //else if (dir == \'u\') {\n          //    if (cPos == 0)\n          //        return;\n          //    s = (cPos - offSet);\n          //    $ulFieldNames.animate({ scrollTop: s < 0 ? 0 : s }, 1000, "easeOutBounce");\n          //    //$divTabControl.scrollLeft(cPos - offSet);\n          //}\n        });\n      }\n      $attachment.on("click", function () {\n        AttachOptionOverLay();\n      });\n      $AttacmentOption.on("click", "li", function (evt) {\n        evt.stopPropagation();\n        var value = $(this).attr("value");\n        if (parseInt(value) == 0) {\n          attachContainer(evt);\n        } else if (parseInt(value) == 1) {\n          $("#w2ui-overlay").hide();\n          if (doc != null && doc.GetDmsCloseOrNot()) {\n            VIS.ADialog.info(\'DMSAlreadyOpen\');\n            return;\n          }\n          var frame = new VIS.CFrame();\n          doc = new VADMS.DocumentManagementSystem(); // window.VADMS.DocumentManagementSystem.prototype.init(VIS.Env.getWindowNo(), frame);\n          frame.setName(VIS.Msg.getMsg("VADMS_Document"));\n          frame.setTitle(VIS.Msg.getMsg("VADMS_Document"));\n          frame.hideHeader(true);\n          doc.setWindowNo(self.windowNo);\n          doc.OpenFromEmail(true);\n          frame.setContent(doc);\n          doc.initialize();\n          frame.show();\n          // arrWindowNo.push(winNo);\n          // winNo++;\n        }\n      });\n      if (isEmail) {\n        $btnHdrSend.on("click", send);\n        if ($refresh != null && $refresh != undefined) {\n          $refresh.on("click", refresh);\n        }\n      } else {\n        $btnHdrSend.on("click", saveAttachment);\n      }\n      if (!isEmail) {\n        $btnSavePdf.on("click", pdf);\n        ///Manish 31/5/2016\n        $btnNewLetter.on("click", createNewLetter);\n        /////End 31/5/2016\n      }\n      //ch.onClose = dispose;\n      if (!callingFromOutsideofWindow) {\n        $imgAction.on("click", imgActionClick);\n        $dynamicDisplay.on("click", dynamicDisplaychange);\n        ///  $ulFieldNames.children(\'li\').on("click", insertSelectedField);\n        $btnHdrPreview.on("click", preview);\n        $btnHdrOpen.on("click", open);\n        $btnHdrSaveAs.on("click", saveAs);\n        $btnHdrSave.on("click", save);\n        //$btnHdrCancel.on("click", cancel);\n        $imgAction.trigger(\'click\');\n        $chkBSendPFasAtt.on("click", attachDynamicPF);\n      } else {\n        $root.find(\'.vis-Email-CcBcc\').on("click", showBccpanel);\n      }\n\n      //$dynamicDisplay.trigger(\'click\');\n      setDesignOnSizeChange();\n      //if (!isEmail) {\n      //    $subject.on("keypress", function ()\n      //    {\n      //        if ($textAreakeno.value() != "" && $subject.val() != "") {\n      //            $SubjectTextChange = 1;\n      //        }\n      //        else\n      //        {\n      //            $SubjectTextChange = 0;\n      //        }\n      //    });\n      //}\n      if (!isEmail) {\n        $subject.keyup(function (e) {\n          if ($subject.val() != "") {\n            if ($textAreakeno.value() != "") {\n              $SubjectTextChange = 1;\n            } else {\n              $SubjectTextChange = 0;\n            }\n          } else {\n            $SubjectTextChange = 0;\n          }\n        });\n      }\n    }\n    ;\n    function AttachOptionOverLay() {\n      if ($AttacmentOption != null) {\n        $AttacmentOption.empty();\n      }\n      var $root = $(\'<div/>\'); //, {\n      $root.css(\'width\', \'auto\');\n      $root.css(\'height\', \'100%\');\n      $AttacmentOption.css(\'width\', \'auto\');\n      $AttacmentOption.css(\'height\', \'100%\');\n      var li = "<li class=\'vis-filesystem\' value=\'0\'>" + VIS.Msg.getMsg("FileSystem") + "</li> ";\n      if (window.VADMS) {\n        li += "<li class=\'vis-dms\' value=\'1\'>" + VIS.Msg.getMsg("DMS") + "</li>";\n      }\n      $AttacmentOption.append(li);\n      $root.append($AttacmentOption);\n      $attachment.w2overlay($root.clone(true), {\n        css: {\n          height: \'300px\'\n        }\n      });\n      $root.css("top", "395px");\n      $AttacmentOption.load();\n    }\n    ;\n    function imgActionClick(e) {\n      if ($dynamicDisplay.prop("checked") == true) {\n        if ($leftDiv.width() == 40) {\n          //   $middleDiv.width($middleDiv.width() - 160);\n          // $root.find(\'.vis-Email-leftWrap\').width($root.find(\'.vis-Email-leftWrap\').width() - 160);\n          // $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 20);\n\n          if (!isEmail) {\n            middleDivWidth = formWidth - ($root.find(\'.vis-email-leftDiv\').width() + 200);\n            $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 15);\n            $root.find(\'.vis-form-data-sub\').width(middleDivWidth - 40);\n            $middleDiv.width(middleDivWidth);\n          } else {\n            middleDivWidth = formWidth - ($root.find(\'.vis-email-leftDiv\').width() + 200);\n            $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 355);\n            $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 45);\n            $middleDiv.width(middleDivWidth);\n          }\n          $leftDiv.css(\'width\', \'200px\');\n          $leftDiv.find(\'ul\').show();\n          leftULdynamicheight();\n\n          //$divlbNav.css("display", "inherit");\n          //$toggleAction.css("border-bottom", "1px solid white");\n\n          if ($textAreakeno != null && $textAreakeno != undefined) {\n            $textAreakeno.body.style.width = $textAreakeno.body.style.width - 160;\n          }\n        } else {\n          shrinkLeftDiv();\n          //leftULdynamicheight();\n\n          $toggleAction.css("border-bottom", "none");\n          if (!callingFromOutsideofWindow) {\n            $divlbNav.css("display", "none");\n          }\n        }\n      } else {\n        if ($leftDiv.width() != 40) {\n          shrinkLeftDiv();\n        }\n      }\n      e.stopPropagation();\n    }\n    ;\n    function shrinkLeftDiv() {\n      $leftDiv.css({\n        \'width\': \'40px\'\n      });\n      $leftDiv.find(\'ul\').hide();\n      //$middleDiv.width($middleDiv.width() + 160);\n      //$root.find(\'.vis-Email-leftWrap\').width($root.find(\'.vis-Email-leftWrap\').width() + 160);\n      //$root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 20);\n\n      if (!isEmail) {\n        middleDivWidth = formWidth - ($root.find(\'.vis-email-leftDiv\').width() + 40);\n        $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 15);\n        $root.find(\'.vis-form-data-sub\').width(middleDivWidth - 40);\n        $middleDiv.width(middleDivWidth);\n      } else {\n        middleDivWidth = formWidth - ($root.find(\'.vis-email-leftDiv\').width() + 40);\n        $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 355);\n        $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 45);\n        $middleDiv.width(middleDivWidth);\n      }\n      if ($textAreakeno != null && $textAreakeno != undefined) {\n        $textAreakeno.body.style.width = $textAreakeno.body.style.width + 160;\n      }\n    }\n    ;\n    function attachContainer(e) {\n      if (newdesign == false) {\n        if (!$root.find(\'.vis-email-attachmentContainer\').is(":visible")) {\n          var conheight = $root.find(\'.vis-Email-ContentArea\').height();\n          $root.find(\'.vis-email-attachmentContainer\').show();\n          $root.find(".vis-Email-textarea-div").height($root.find(".vis-Email-textarea-div").height() - ($root.find(".vis-email-attachmentContainer").height() + 13));\n          if (fileBrowser == null || fileBrowser == undefined) {\n            createattachmentcontainer();\n            fileBrowser = $root.find("<input type=\'file\' multiple=\'true\' style=\'display:none;\'>");\n            $uploaddiv.append(fileBrowser);\n            $btnupload.on("click", function () {\n              fileBrowser.trigger(\'click\');\n            });\n\n            //Add file to Latest File Content\n            fileBrowser.change(function () {\n              AppendFile(this);\n            });\n          }\n        } else {\n          $root.find(\'.vis-email-attachmentContainer\').hide();\n          $root.find(".vis-Email-textarea-div").height($root.find(".vis-Email-textarea-div").height() + ($root.find(".vis-email-attachmentContainer").height() + 13));\n        }\n      } else {\n        if (!$root.find(\'.vis-email-attachmentContainer\').is(":visible")) {\n          var conheight = $root.find(\'.vis-Email-ContentArea\').height();\n\n          // if (attachmentContainerOpen == false) {\n          if (fileBrowser == null || fileBrowser == undefined) {\n            createattachmentcontainer();\n            fileBrowser = $("<input type=\'file\' multiple=\'true\' style=\'display:none;\'>");\n            //Add file to Latest File Content\n            fileBrowser.change(function () {\n              if (this.files.length < 1) {\n                return;\n              }\n              $root.find(\'.vis-email-attachmentContainer\').show();\n              AppendFile(this);\n              //if ($root.find(\'.vis-email-attachmentContainer\').is(\':visible\')) {\n              //    $root.find(".vis-Email-textarea-div").height($root.find(".vis-Email-textarea-div").height() - ($root.find(".vis-email-attachmentContainer").height() + 13));\n              //}\n              if (callingFromOutsideofWindow) {\n                $root.find(".vis-Email-textarea-div").height($root.find(\'.vis-Email-ContentArea\').height() - ($root.find(\'.vis-form-horizontal\').height() + 30));\n              } else {\n                $root.find(".vis-Email-textarea-div").height($root.find(\'.vis-Email-ContentArea\').height() - ($root.find(\'.vis-form-horizontal\').height() + 50));\n              }\n              if (lstLatestFiles && lstLatestFiles.length > 0) {\n                UploadFiles();\n              }\n            });\n          }\n        }\n        fileBrowser.trigger(\'click\');\n      }\n      //  attachmentContainerOpen = true;\n    }\n    ;\n    function createattachmentcontainer() {\n      $uploaddiv = $(\'<div></div>\');\n      var divup = $(\'<div></div>\');\n      $root.find(\'.vis-email-attachmentContainer\').append(divup);\n      if (newdesign == false) {\n        $btnupload = $(\'<a class="vis-attach-ico browse-ico" style="margin-right:8px;float:right;height:30px;width:30px;margin-top:6px;"></a>\');\n        $uploaddiv.append($btnupload);\n        divup.append($btnupload);\n      }\n      $Attachdiv = $(\'<div></div>\');\n      divup.append($Attachdiv);\n      dLAContent = $("<div class=\'vis-attach-content-wrap\' style=\'height:83px;border-bottom:2px solid rgba(var(--v-c-secondary), 1);padding-bottom:0px\'>");\n      dLAContent.append($(\'<div style="height:auto;overflow:auto" ></div>\'));\n      $Attachdiv.append(dLAContent);\n      $root.find(\'.vis-email-attachmentContainer\').append(divReadOnly);\n      if (newdesign == false) {\n        $insertAttachdiv = $(\'<div></div>\');\n        divup.append($insertAttachdiv);\n        $btnInsert = $(\'<a href="javascript:void(0)" class="vis-attach-ico uploadall-ico" style="height:30px;width:30px;margin-right: 7px;float:right"></a>\');\n        $insertAttachdiv.append($btnInsert);\n        $btnInsert.on("click", function () {\n          UploadFiles();\n        });\n      }\n    }\n    ;\n    var showProgress = function (show) {\n      if (show) {\n        divReadOnly.show();\n        divProgress.show();\n      } else {\n        divReadOnly.hide();\n        divProgress.hide();\n      }\n    };\n    var invalidExtensions = [];\n    var AppendFile = function (sender) {\n      invalidExtensions = [];\n      for (var i = 0; i < sender.files.length; i++) {\n        file = sender.files[i];\n        if (file == undefined) {\n          return;\n        }\n        if (file.size == 0) {\n          continue;\n        }\n        var allowedExtensions = VIS.context.getContext("#ALLOWED_FILE_EXTENSION");\n        if (allowedExtensions && allowedExtensions.length > 0) {\n          if (allowedExtensions.split(\',\').indexOf(\'.\' + file.name.split(\'.\').pop()) == -1) {\n            invalidExtensions.push(file.name);\n            continue;\n          }\n        }\n        for (var itm in lstLatestFiles) {\n          if (file.name == lstLatestFiles[itm].name) {\n            window.setTimeout(function () {\n              VIS.ADialog.info(\'fileAlreadyAttached\');\n            }, 2);\n            return;\n          }\n        }\n        if (filesforAttachmentforOpenFormat != null) {\n          for (var o = 0; o < filesforAttachmentforOpenFormat.length; o++) {\n            if (file.name == filesforAttachmentforOpenFormat[o]) {\n              window.setTimeout(function () {\n                VIS.ADialog.info(\'fileAlreadyAttached\');\n              }, 2);\n              return;\n            }\n          }\n        }\n        totalChunks = 0;\n        for (var itm in lstLatestFiles) {\n          totalChunks += lstLatestFiles[itm].size;\n        }\n        if (totalChunks + file.size > chunkSize * 24) {\n          window.setTimeout(function () {\n            VIS.ADialog.info("MaxFileSize25MB");\n          }, 2);\n          return;\n        }\n        if (file.size > chunkSize * 24) {\n          window.setTimeout(function () {\n            VIS.ADialog.info("MaxFileSize25MB");\n          }, 2);\n          return;\n        }\n\n        //var windowWidth = $(window).width();\n        ///* latop and large display screen size */\n        //if (windowWidth >= 1366) {\n        //}\n        //if (windowWidth > 1024 && windowWidth < 1366) {\n        //}\n        //else if (windowWidth >= 1000 && windowWidth <= 1024) {\n        //}\n        //else if (windowWidth < 1000) {\n        //}\n\n        var fileInfo = {};\n        var dAWrap = $("<div style=\'margin-bottom:3px\' class=\'vis-attach-file-wrapla\'>");\n        dLAContent.children(0).append(dAWrap);\n        var dTop = $("<div class=\'vis-attach-file-top\'>");\n        var btnRemove = $("<a class=\'vis-file-close-ico\'><i class=\'vis vis-mark\'></i></a>");\n        dTop.append(btnRemove);\n        dAWrap.append(dTop);\n        dLAContent.show();\n        btnRemove.on("click", function () {\n          var c = null;\n          var divFInfo = $($(this).parent()).parent();\n          // divFInfo.css("display", "none");\n          var html = divFInfo.html();\n          divFInfo.remove();\n          divFInfo = null;\n          for (var itm in lstLatestFiles) {\n            if (String(html).indexOf(lstLatestFiles[itm].name) > -1) {\n              totalChunks = totalChunks - itm.size;\n              lstLatestFiles.splice(itm, 1);\n              break;\n            }\n          }\n          filesforAttachmentforNewAttachment.splice(0, filesforAttachmentforNewAttachment.length);\n          for (var itm in lstLatestFiles) {\n            filesforAttachmentforNewAttachment.push(lstLatestFiles[itm].name);\n          }\n          if (!hasScrollBar()) {\n            $root.find(\'.vis-attach-content-wrap\').height(83);\n            $root.find(\'.vis-email-attachmentContainer\').height(90);\n            if (callingFromOutsideofWindow) {\n              $root.find(".vis-Email-textarea-div").height($(\'.vis-Email-ContentArea\').height() - ($(\'.vis-form-horizontal\').height() + 30));\n            } else {\n              $root.find(".vis-Email-textarea-div").height($(\'.vis-Email-ContentArea\').height() - ($(\'.vis-form-horizontal\').height() + 50));\n            }\n          }\n          if (lstLatestFiles.length == 0) {\n            $root.find(\'.vis-email-attachmentContainer\').hide();\n            $root.find(\'.vis-email-attachmentContainer\').height(90);\n            $root.find(\'.vis-attach-content-wrap\').height(83);\n            if (callingFromOutsideofWindow) {\n              $root.find(".vis-Email-textarea-div").height($(\'.vis-Email-ContentArea\').height() - ($(\'.vis-form-horizontal\').height() + 30));\n            } else {\n              $root.find(".vis-Email-textarea-div").height($(\'.vis-Email-ContentArea\').height() - ($(\'.vis-form-horizontal\').height() + 50));\n            }\n          }\n          currentFile--;\n        });\n        var dAContent = $("<div class=\'vis-attach-file-content\'>");\n        dAWrap.append(dAContent);\n        var dIcon = $("<div class=\'vis-attach-file-icon\'>");\n        var imgsrc = getImageUrl(file.name);\n        dIcon.append($("<img src=\'" + imgsrc + "\'>"));\n        dAContent.append(dIcon);\n        var dfInfo = $("<div class=\'vis-attach-file-text\' style=\'margin-bottom:10px\'>");\n        var shortName = \'\';\n        var lblFName = $("<p>");\n        if (file.name.length > 17) {\n          shortName = file.name.toString().substr(0, 17);\n          lblFName.append(shortName);\n          var aFName = $("<a href=\'javascript:void(0)\' class=\'VIS_Pref_tooltip\'>").append(\'...\');\n          var span = $("<span style=\'width: inherit;\'>");\n          span.append($("<img class=\'VIS_Pref_callout\'>").attr(\'src\', VIS.Application.contextUrl + "Areas/VIS/Images/email-ccc.png").append("ToolTip Text"));\n          span.append($("<label class=\'VIS_Pref_Label_Font\'>").append(file.name));\n          aFName.append(span);\n          lblFName.append(aFName);\n        } else {\n          lblFName.append(file.name);\n        }\n        // dfInfo.append($("<p>").append(shortName));\n        dfInfo.append(lblFName);\n        dfInfo.append($("<p>").append((Number(file.size) / 1024).toFixed(2) + "KB"));\n        dAContent.append(dfInfo);\n        fileInfo.Name = file.name;\n        fileInfo.Size = file.size;\n        lstLatestFiles.push(file);\n        if (hasScrollBar()) {\n          if ($root.find(\'.vis-email-attachmentContainer\').height() == 90) {\n            $root.find(\'.vis-email-attachmentContainer\').height(155);\n            $root.find(\'.vis-attach-content-wrap\').height(145);\n          }\n        }\n      }\n      if (invalidExtensions && invalidExtensions.length > 0) {\n        var FileNames = \'\';\n        for (var item in invalidExtensions) {\n          FileNames += invalidExtensions[item].toString() + \', \';\n        }\n        var resString = \'\';\n        if (invalidExtensions.length == 1) {\n          resString += \'FileInvalidExtension\';\n        } else {\n          resString += \'FilesInvalidExtension\';\n        }\n        VIS.ADialog.warn(resString, true, FileNames);\n      }\n    };\n    function hasScrollBar() {\n      if (dLAContent.children(0).height() < 75) {\n        return false;\n      } else {\n        return true;\n      }\n\n      ////if ($root.find(\'.attach-content-wrap\')[0].scrollHeight > $root.find(\'.attach-content-wrap\').height()) {\n      //if ($root.find(\'.attach-content-wrap\')[0].scrollHeight > dLAContent.children(0).height()) {\n\n      //    return true;\n      //}\n      //else {\n      //    return false;\n      //}\n    }\n    ;\n    var getImageUrl = function (fileName) {\n      if (fileName == null || fileName.length == 0) {\n        return \'\';\n      }\n      var index = fileName.lastIndexOf(\'.\');\n      var imgUrl = VIS.Application.contextUrl + "Areas/VIS/Images/";\n      if (index < 1) {\n        //return Default Image\n        imgUrl += \'defult.png\';\n        return imgUrl;\n      }\n      var ext = fileName.substr(index, fileName.length - index);\n      if (ext == \'.xlsx\' || ext == \'.xls\') {\n        imgUrl += \'excel.png\';\n      } else if (ext == \'.html\' || ext == \'.htm\') {\n        imgUrl += \'html.png\';\n      } else if (ext == \'.pdf\') {\n        imgUrl += \'pdf.png\';\n      } else if (ext == \'.ppt\') {\n        imgUrl += \'ppt.png\';\n      } else if (ext == \'.txt\') {\n        imgUrl += \'text.png\';\n      } else if (ext == \'.docx\' || ext == \'.doc\') {\n        imgUrl += \'word.png\';\n      } else if (ext == \'.xml\') {\n        imgUrl += \'xml.png\';\n      } else {\n        imgUrl += \'defult.png\';\n      }\n      return imgUrl;\n    };\n    var AppendFileOldRegion = function (file, size, index) {\n      //var dAWrap = $("<div class=\'attach-file-wrapla\'>");\n      //dLAContent.append(dAWrap);\n\n      //var dTop = $("<div class=\'attach-file-top\'>");\n      //var btnRemove = $("<a class=\'file-close-ico\'>");\n      //dTop.append(btnRemove);\n      //dAWrap.append(dTop);\n\n      //btnRemove.on("click", function () {\n      //    \n      //    var c = null;\n      //    var divFInfo = $($(this).parent()).parent();\n      //    divFInfo.css("display", "none");\n      //    var html = divFInfo.html();\n      //    divFInfo.empty();\n      //    divFInfo = null;\n      //    for (var itm in filesforAttachmentforOpenFormat) {\n      //        if ((String(html).indexOf(filesforAttachmentforOpenFormat[itm])) > -1) {\n      //            filesforAttachmentforOpenFormat.splice(itm, 1);\n      //            break;\n      //        }\n      //    }\n      //});\n\n      //filesforAttachmentforOpenFormat.push(file);\n\n      var dAWrap = $("<div class=\'vis-attach-file-wrapla\'>");\n      dLAContent.append(dAWrap);\n      var dTop = $("<div class=\'vis-attach-file-top\'>");\n      var btnRemove = $("<a class=\'vis-file-close-ico\'>");\n      dTop.append(btnRemove);\n      dAWrap.append(dTop);\n      btnRemove.on("click", function () {\n        var c = null;\n        var divFInfo = $($(this).parent()).parent();\n        divFInfo.css("display", "none");\n        var html = divFInfo.html();\n        divFInfo.empty();\n        divFInfo = null;\n        for (var itm in filesforAttachmentforOpenFormat) {\n          if (String(html).indexOf(filesforAttachmentforOpenFormat[itm]) > -1) {\n            filesforAttachmentforOpenFormat.splice(itm, 1);\n            break;\n          }\n        }\n      });\n      var oldFile = {};\n      var dAContent = $("<div class=\'vis-attach-file-content\'>");\n      dAWrap.append(dAContent);\n      var dIcon = $("<div class=\'vis-attach-file-icon\'>");\n      dIcon.append($("<img src=\'" + getImageUrl(file) + "\'>"));\n      dAContent.append(dIcon);\n      var dfInfo = $("<div class=\'vis-attach-file-text\'  style=\'margin-bottom:10px\'>");\n      var shortName = \'\';\n      var lblFName = $("<p>");\n      if (file.length > 17) {\n        shortName = file.toString().substr(0, 17);\n        lblFName.append(shortName);\n        var aFName = $("<a href=\'javascript:void(0)\' class=\'VIS_Pref_tooltip\'>").append(\'...\');\n        var span = $("<span style=\'width: inherit;\'>");\n        span.append($("<img class=\'VIS_Pref_callout\'>").attr(\'src\', VIS.Application.contextUrl + "Areas/VIS/Images/email-ccc.png").append("ToolTip Text"));\n        span.append($("<label class=\'VIS_Pref_Label_Font\'>").append(file));\n        aFName.append(span);\n        lblFName.append(aFName);\n      } else {\n        lblFName.append(file);\n      }\n      dfInfo.append(lblFName);\n      dfInfo.append($("<p>").append((Number(size) / 1024).toFixed(2) + "KB"));\n      dAContent.append(dfInfo);\n      oldFile.Name = file;\n      // oldFile.Size = file.Size;\n      oldFile.Line_ID = 0;\n      oldFile.HaveSource = false;\n      oldFile.Source = null;\n      oldFile.IsDeleted = false;\n      oldFiles.push(oldFile);\n    };\n    var UploadFiles = function () {\n      var fileInfo = null;\n      //folder = Date.now().toString();\n      //$bsyDiv[0].style.visibility = "visible";\n\n      var tcSingleFile = 0;\n      var currentChunk = 0;\n\n      // filesforAttachment.splice(0, filesforAttachment.length);\n      var totalSize = 0;\n      totalChunks = 0;\n      for (var itm in lstLatestFiles) {\n        tcSingleFile = parseInt(lstLatestFiles[itm].size / chunkSize);\n        if (file.size % chunkSize > 0) {\n          tcSingleFile++;\n        }\n        totalChunks += tcSingleFile;\n        totalSize += lstLatestFiles[itm].size;\n        fileInfo = {};\n        filesforAttachmentforNewAttachment.push(lstLatestFiles[itm].name);\n        fileInfo.Name = lstLatestFiles[itm].name;\n        fileInfo.Size = lstLatestFiles[itm].size;\n        filesInfo.push(fileInfo);\n      }\n      if (totalSize > chunkSize * 24) {\n        return;\n      }\n      showProgress(true);\n      TransferFile();\n    };\n    var TransferFile = function () {\n      if (lstLatestFiles == null || lstLatestFiles.length == 0) {\n        showProgress(false);\n        $root.find(\'.vis-email-attachmentContainer\').hide();\n        $root.find(".vis-Email-textarea-div").height($root.find(".vis-Email-textarea-div").height() + ($root.find(".vis-email-attachmentContainer").height() + 13));\n        window.setTimeout(function () {\n          VIS.ADialog.info("NothingToUpload");\n          return;\n        }, 2);\n      }\n      if (currentFile >= lstLatestFiles.length) {\n        showProgress(false);\n        return;\n      }\n      var xhr = new XMLHttpRequest();\n      var fd = new FormData();\n      fd.append("file", lstLatestFiles[currentFile].slice(currentFileChunkNo * chunkSize, currentFileChunkNo * chunkSize + Number(chunkSize)));\n      xhr.open("POST", VIS.Application.contextUrl + "Email/SaveAttachmentinTemp?filename=" + lstLatestFiles[currentFile].name + "&folderKey=" + folder, false);\n      xhr.onload = function () {\n        if (xhr.readyState === xhr.DONE) {\n          if (xhr.status === 200) {\n            if (xhr.responseText && xhr.responseText.indexOf("ERROR") > -1) {\n              var response = xhr.responseText;\n              response = response.replace("ERROR: ", "");\n              for (var itm in lstLatestFiles) {\n                if (String(response).indexOf(lstLatestFiles[itm].name) > -1) {\n                  lstLatestFiles.splice(itm, 1);\n                }\n              }\n              VIS.ADialog.warn("FilesInvalidExtension", true, xhr.responseText);\n\n              // FilesInvalidExtension\n\n              showProgress(false);\n              IsBusy(false);\n              return;\n            }\n            var response = xhr.responseText;\n            response = response.replace("ERROR: ", "");\n            currentchunk++;\n            currentFileChunkNo++;\n            var totalFileChunk = parseInt(lstLatestFiles[currentFile].size / chunkSize);\n            if (lstLatestFiles[currentFile].size % chunkSize > 0) {\n              totalFileChunk++;\n            }\n            if (currentFileChunkNo == totalFileChunk) {\n              currentFile++;\n              currentFileChunkNo = 0;\n            }\n            if (currentchunk <= totalChunks) {\n              setProgressValue(parseInt(currentchunk / totalChunks * 100));\n            }\n            window.setTimeout(function () {\n              TransferFile();\n            }, 2);\n          }\n        }\n      };\n      xhr.send(fd);\n    };\n    var setProgressValue = function (value) {\n      divGreen.css(\'width\', value + \'%\');\n      lblpercentage.empty();\n      lblpercentage.append(value + \'%\');\n    };\n    function dynamicDisplaychange(e) {\n      if (this.checked) {\n        if ($leftDiv.width() != 40) {\n          $leftDiv.find(\'ul\').show();\n        }\n        //in ase of dynmic mail, to, bccc and cc will be enabled only for single record.\n        //otherwise disable them.\n        if (isEmail == true && _curGC.singleRow == false && rowsSource.length > 1) {\n          $to.val(\'\');\n          $to.prop(\'disabled\', true);\n          $cc.val(\'\');\n          $cc.prop(\'disabled\', true);\n          $bcc.val(\'\');\n          $bcc.prop(\'disabled\', true);\n        }\n        flagImg = true;\n      } else {\n        if ($leftDiv.width() != 40) {\n          shrinkLeftDiv();\n        }\n        if (isEmail == true && _curGC.singleRow == false && rowsSource.length > 1 && $chkBSendPFasAtt.prop("checked") == false) {\n          $to.prop(\'disabled\', false);\n          $cc.prop(\'disabled\', false);\n          $bcc.prop(\'disabled\', false);\n        }\n        flagImg = false;\n        $toggleAction.css("border-bottom", "none");\n        if (!callingFromOutsideofWindow) {\n          $divlbNav.css("display", "none");\n        }\n      }\n    }\n    ;\n    function attachDynamicPF(e) {\n      if (this.checked) {\n        $cmbPfFiletype.parent().show();\n        //in ase of dynmic mail, to, bccc and cc will be enabled only for single record.\n        //otherwise disable them.\n\n        if (isEmail == true && _curGC.singleRow == false && rowsSource.length > 1) {\n          $to.val(\'\');\n          $to.prop(\'disabled\', true);\n          $cc.val(\'\');\n          $cc.prop(\'disabled\', true);\n          $bcc.val(\'\');\n          $bcc.prop(\'disabled\', true);\n        }\n      } else {\n        $cmbPfFiletype.parent().hide();\n        if (isEmail == true && _curGC.singleRow == false && rowsSource.length > 1 && $dynamicDisplay.prop("checked") == false) {\n          $to.prop(\'disabled\', false);\n          $cc.prop(\'disabled\', false);\n          $bcc.prop(\'disabled\', false);\n        }\n      }\n    }\n    ;\n    function addPrintOption() {\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/GetReportFileTypes",\n        datatype: "json",\n        type: "post",\n        cache: false,\n        data: {\n          AD_Process_ID: _curtab.getAD_Process_ID()\n        },\n        success: function (data) {\n          if (data == null) {\n            return;\n          }\n          var d = jQuery.parseJSON(data);\n          if (d.length == 0) {\n            return;\n          }\n          for (var i = 0; i < d.length; i++) {\n            $cmbPfFiletype.append($("<option value=" + d[i].Key + ">" + d[i].Name + "</option>"));\n          }\n        }\n      });\n    }\n    ;\n    function insertSelectedField(e) {\n      $textAreakeno.paste(\'@@\' + $(this).text() + \'@@\');\n    }\n    ;\n    function preview(e) {\n      var html = $textAreakeno.value();\n      var finalhtmls = \'\';\n      if (_curGC.singleRow == false || rowsSource.length > 0) {\n        finalhtmls = parseHtml1(html, 0);\n      } else {\n        finalhtmls = parseHtml2(html);\n      }\n      var $preDiv = $(\'<div></div>\');\n      $preDiv.append(finalhtmls);\n      $($preDiv.find(\'table\')).css({\n        "width": \'100%\',\n        "border": "1px solid Black"\n      });\n      $($preDiv.find(\'td\')).css({\n        "border": "1px solid Black"\n      });\n      var chp = new VIS.ChildDialog();\n      chp.setHeight(420);\n      chp.setWidth(850);\n      chp.setTitle(VIS.Msg.getMsg("Preview"));\n      chp.setModal(true);\n      chp.setContent($preDiv);\n      chp.show();\n      chp.hidebuttons();\n      //var $preDiv = $(\'<div></div>\');\n      //$preDiv.append(finalhtmls);\n      //$preDiv.dialog();\n    }\n    ;\n    function send(e) {\n      var subj = $subject.val();\n      var body = $textAreakeno.value();\n      var canExecute = true;\n      if ((subj == null || subj == "" || subj.trim().length == 0) && (body == null || body == "" || body.trim().length == 0)) {\n        canExecute = false;\n        VIS.ADialog.confirm("SendWithoutSubjectandBody", true, "", "Confirm", function (result) {\n          if (result) {\n            sendCallback(e, subj, body);\n          }\n        });\n        return;\n        subj = " "; //done bcoz mail is not being sent if subject length is 0....\n      } else {\n        if (subj == null || subj == "" || subj.trim().length == 0) {\n          canExecute = false;\n          VIS.ADialog.confirm("SendWithoutSubject", true, "", "Confirm", function (result) {\n            if (result) {\n              sendCallback(e, subj, body);\n            }\n          });\n          return;\n          subj = " "; //done bcoz mail is not being sent if subject length is 0....\n        }\n        if (body == null || body == "" || body.trim().length == 0) {\n          canExecute = false;\n          //if (!VIS.ADialog.ask(VIS.Msg.getMsg("SendWithoutBody"))) {\n          //    return;\n          //}\n          VIS.ADialog.confirm("SendWithoutBody", true, "", "Confirm", function (result) {\n            if (result) {\n              sendCallback(e, subj, body);\n            }\n          });\n          return;\n        }\n      }\n      if (canExecute) {\n        sendCallback(e, subj, body);\n      }\n    }\n    ;\n    function sendCallback(e, subj, body) {\n      hsaValidinputmails = false;\n      var toval = $to.val();\n      var bccVal = $bcc.val();\n      var ccval = $cc.val();\n      if (toval.trim().length > 0) {\n        if (toval.contains(\';\')) {\n          var arraybcc = toval.split(\';\');\n          for (var i = 0; i < arraybcc.length; i++) {\n            if (arraybcc[i] != null && arraybcc[i] != "") {\n              if (!validateEmail(arraybcc[i].trim())) {\n                window.setTimeout(function () {\n                  VIS.ADialog.info("NotValidEmail", true, ":" + arraybcc[i]);\n                }, 2);\n                return;\n              } else {\n                hsaValidinputmails = true;\n              }\n            }\n          }\n        } else {\n          if (!validateEmail(toval.trim())) {\n            window.setTimeout(function () {\n              VIS.ADialog.info("NotValidEmail", true, ":" + toval);\n            }, 2);\n            return;\n          } else {\n            hsaValidinputmails = true;\n          }\n        }\n      }\n      if (ccval.trim().length > 0) {\n        if (ccval.contains(\';\')) {\n          var arraybcc = ccval.split(\';\');\n          for (var i = 0; i < arraybcc.length; i++) {\n            if (arraybcc[i] != null && arraybcc[i] != "") {\n              if (!validateEmail(arraybcc[i].trim())) {\n                window.setTimeout(function () {\n                  VIS.ADialog.info("NotValidEmail", true, ":" + arraybcc[i]);\n                }, 2);\n                return;\n              } else {\n                hsaValidinputmails = true;\n              }\n            }\n          }\n        } else {\n          if (!validateEmail(ccval.trim())) {\n            window.setTimeout(function () {\n              VIS.ADialog.info("NotValidEmail", true, ":" + ccval);\n            }, 2);\n            return;\n          } else {\n            hsaValidinputmails = true;\n          }\n        }\n      }\n      if (bccVal.trim().length > 0) {\n        if (bccVal.contains(\';\')) {\n          var arraybcc = bccVal.split(\';\');\n          for (var i = 0; i < arraybcc.length; i++) {\n            if (arraybcc[i] != null && arraybcc[i] != "") {\n              if (!validateEmail(arraybcc[i].trim())) {\n                window.setTimeout(function () {\n                  VIS.ADialog.info("NotValidEmail", true, ":" + arraybcc[i]);\n                }, 2);\n                return;\n              } else {\n                hsaValidinputmails = true;\n              }\n            }\n          }\n        } else {\n          if (!validateEmail(bccVal.trim())) {\n            window.setTimeout(function () {\n              VIS.ADialog.info("NotValidEmail", true, ":" + bccVal);\n            }, 2);\n            return;\n          } else {\n            hsaValidinputmails = true;\n          }\n        }\n      }\n\n      //for static mails\n      var mail = [];\n      if ($dynamicDisplay.prop("checked") == false && $chkBSendPFasAtt.prop("checked") == false) {\n        var hasMailID = false;\n        var mailInfo = {};\n        mailInfo.To = toval;\n        mailInfo.Cc = ccval;\n        mailInfo.Bcc = [];\n        if (bccVal.contains(\';\')) {\n          var arraybcc = bccVal.split(\';\');\n          for (var i = 0; i < arraybcc.length; i++) {\n            if (arraybcc[i] != null && arraybcc[i] != "") {\n              mailInfo.Bcc.push(arraybcc[i]);\n            }\n          }\n        } else {\n          if (bccVal != null && bccVal != "") {\n            mailInfo.Bcc.push(bccVal);\n          }\n        }\n        if ($bccChkList != null && $bccChkList != undefined) {\n          selectedValues = [];\n          $("[id*=CheckBoxList1]:checked").each(function () {\n            selectedValues.push($(this).val());\n          });\n          if (selectedValues.length > 0) {\n            for (var l = 0; l < selectedValues.length; l++) {\n              if (!validateEmail(selectedValues[l])) {\n                window.setTimeout(function () {\n                  VIS.ADialog.info("NotValidEmail", true, ":" + selectedValues[l]);\n                }, 2);\n                return;\n              }\n              hasMailID = true;\n              mailInfo.Bcc.push(selectedValues[l]);\n            }\n          }\n        }\n        mailInfo.Subject = subj;\n\n        // mailInfo.Body = $textAreakeno.value();\n        mailInfo.TableID = currentTable_ID;\n        mailInfo.Recordids = \'\';\n        if (rowsSingleView != null) {\n          if (_curGC.singleRow == false || rowsSource.length > 0) {\n            var recsIDs = \'\';\n            for (var r = 0; r < rowsSource.length; r++) {\n              recsIDs += rowsSource[r][_curtab.keyColumnName.toLower()] + ",";\n            }\n            mailInfo.Recordids = recsIDs;\n          } else {\n            if (Record_ID > 0) {\n              mailInfo.Recordids = Record_ID;\n            } else {\n              if (_curGC.singleRow == true) {\n                mailInfo.Recordids = _curtab.getField(_curtab.keyColumnName.toLower()).value;\n              } else {\n                mailInfo.Recordids = rowsSingleView[_curtab.keyColumnName.toLower()];\n              }\n            }\n          }\n        } else {\n          if (Record_ID > 0) {\n            mailInfo.Recordids = Record_ID;\n          }\n        }\n        mailInfo.AttachmentFolder = folder;\n        if (!hasMailID) {\n          if (!hsaValidinputmails) {\n            window.setTimeout(function () {\n              VIS.ADialog.info("NoEmailAddressFound");\n            }, 2);\n            return;\n          }\n        }\n        mail.push(mailInfo);\n      }\n      //for dynamic mails\n      else {\n        selectedValues = [];\n        var selectedRecs = [];\n        var currentRec = [];\n        $("[id*=CheckBoxList1]:checked").each(function () {\n          selectedValues.push($(this).val());\n          selectedRecs.push($(this).data(\'recid\'));\n          currentRec.push($(this).data(\'currentrec\'));\n        });\n        if (selectedValues.length > 0) {\n          for (var l = 0; l < selectedValues.length; l++) {\n            if (!validateEmail(selectedValues[l])) {\n              window.setTimeout(function () {\n                VIS.ADialog.info("NotValidEmail", true, ":" + selectedValues[l]);\n              }, 2);\n              return;\n            }\n          }\n          for (var z = 0; z < selectedValues.length; z++) {\n            if (_curGC.singleRow == true && rowsSource.length == 0) {\n              var mailRes = createDynmicmails(rowsSingleView, 0);\n              if (mailRes == null || mailRes == undefined) {\n                return;\n              }\n              mail.push(mailRes);\n            } else {\n              for (var r = 0; r < rowsSource.length; r++) {\n                if (selectedRecs[z] == rowsSource[r][_curtab.getKeyColumnName().toLower()]) {\n                  var mailRes = null;\n                  if (currentRec[z] == "N") {\n                    mailRes = createDynmicmails(rowsSource[r], r, selectedValues[z]);\n                  } else {\n                    mailRes = createDynmicmails(rowsSource[r], r);\n                  }\n                  if (mailRes == null || mailRes == undefined) {\n                    continue;\n                  }\n                  mail.push(mailRes);\n                }\n              }\n            }\n          }\n        } else if (hsaValidinputmails) {\n          if (_curGC.singleRow == true && rowsSource.length == 0) {\n            var mailRes = createDynmicmails(rowsSingleView, 0);\n            if (mailRes == null || mailRes == undefined) {\n              return;\n            }\n            mail.push(mailRes);\n          } else {\n            for (var r = 0; r < rowsSource.length; r++) {\n              var mailRes = createDynmicmails(rowsSource[r], r);\n              if (mailRes == null || mailRes == undefined) {\n                continue;\n              }\n              mail.push(mailRes);\n            }\n          }\n        }\n\n        //if (_curGC.singleRow == true && rowsSource.length == 0) {\n        //    var mailRes = createDynmicmails(rowsSingleView, 0);\n        //    if (mailRes == null || mailRes == undefined) {\n        //        return;\n        //    }\n        //    mail.push(mailRes);\n        //}\n        //else {\n        //    for (var r = 0; r < rowsSource.length; r++) {\n\n        //        var mailRes = createDynmicmails(rowsSource[r], r)\n        //        if (mailRes == null || mailRes == undefined) {\n        //            continue;\n        //        }\n        //        mail.push(mailRes);\n        //    }\n        //}\n      }\n      if (mail.length == 0) {\n        window.setTimeout(function () {\n          VIS.ADialog.info("NoEmailAddressFound");\n        }, 2);\n        return;\n      }\n      var mails = JSON.stringify(mail);\n      var wantNotification = false;\n      var pfFiletype = \'X\'; // no Action\n      if ($chkBSendPFasAtt.prop("checked")) {\n        pfFiletype = $cmbPfFiletype.val();\n      }\n      VIS.ADialog.confirm("WantAlertMessage", true, "", "Confirm", function (result) {\n        if (result) {\n          wantNotification = true;\n        }\n        $bsyDiv[0].style.visibility = "visible";\n        var datainit = {\n          mails: VIS.Utility.encodeText(mails),\n          AD_User_ID: ctx.getAD_User_ID(),\n          AD_Client_ID: ctx.getAD_Client_ID(),\n          AD_Org_ID: ctx.getAD_Org_ID(),\n          attachment_ID: attachmentID,\n          fileNamesFornNewAttach: JSON.stringify(filesforAttachmentforNewAttachment),\n          fileNamesForopenFormat: JSON.stringify(filesforAttachmentforOpenFormat),\n          mailFormat: VIS.Utility.encodeText($textAreakeno.value()),\n          notify: wantNotification,\n          strDocAttach: VIS.context.getContext("DocumentAttachViaEmail_" + self.windowNo),\n          /** tab panel- null check ** Dt: 05/07/2021 ** Modified By: Kumar **/\n          AD_Process_ID: _curtab != null ? _curtab.getAD_Process_ID() : 0,\n          printformatfileType: pfFiletype\n        };\n        $.ajax({\n          url: VIS.Application.contextUrl + "Email/SendMail",\n          data: datainit,\n          datatype: "json",\n          type: "post",\n          cache: false,\n          async: true,\n          success: function (data) {\n            $bsyDiv[0].style.visibility = "hidden";\n            var res = JSON.parse(data);\n            if (res == "") {\n              self.dispose();\n              self = null;\n              if (doc != null) {\n                doc.dispose();\n              }\n              doc = null;\n            } else {\n              window.setTimeout(function () {\n                VIS.ADialog.info(res);\n                if (res.contains("MailSent")) {\n                  VIS.context.setContext("DocumentAttachViaEmail_" + self.windowNo, "");\n                }\n              }, 2);\n            }\n          }\n        });\n      });\n    }\n    ;\n    function validateEmail(email) {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\"]+)*)|(\\".+\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n    function saveAttachment(e) {\n      debugger;\n      var subj = $subject.val();\n      if (subj == null || subj == "" || subj.trim().length == 0) {\n        VIS.ADialog.info("PleaseAddSubject");\n        return;\n      }\n      var html = $textAreakeno.value();\n      if (html == null || html == "" || html == undefined || html.trim().length < 1) {\n        return;\n      }\n      var finalhtmls = \'\';\n      var values = {};\n      rowsSource = _curGC.getSelectedRows();\n\n      // this is data source for single View Records\n      rowsSingleView = _curtab.getRecords()[_curtab.getCurrentRow()];\n      if (_curGC.singleRow == false || rowsSource.length > 0) {\n        for (var r = 0; r < rowsSource.length; r++) {\n          values[rowsSource[r][_curtab.keyColumnName.toLower()]] = listofSelectedItems1(html, r);\n        }\n      } else {\n        if (Record_ID > 0) {\n          values[Record_ID] = listofSelectedItems2(html);\n        } else {\n          values[rowsSingleView[_curtab.keyColumnName.toLower()]] = listofSelectedItems2(html);\n        }\n      }\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Email/SaveAttachment",\n        datatype: "json",\n        type: "post",\n        cache: false,\n        data: {\n          subject: subj,\n          AD_Table_ID: currentTable_ID,\n          html: VIS.Utility.encodeText(html),\n          values: JSON.stringify(values)\n        },\n        success: function (data) {\n          $bsyDiv[0].style.visibility = "hidden";\n          VIS.ADialog.info("Saved");\n          //var result = JSON.parse(data);\n          //htt = result;\n          //var datauri = \'data:application/pdf;base64,\' + htt;\n\n          //window.open(datauri);\n          //return;\n        },\n        error: function (err) {\n          //A potentially dangerous Request.Form value was detected from the client\n          //VIS.ADialog.error("PotentiallyDangerous");\n          console.log(err);\n        }\n      });\n    }\n    ;\n    function pdf(e) {\n      var html = $textAreakeno.value();\n      if (html == null || html == "" || html == undefined || html.trim().length < 1) {\n        return;\n      }\n      var finalhtmls = \'\';\n      var values = [];\n      rowsSource = _curGC.getSelectedRows();\n\n      // this is data source for single View Records\n      rowsSingleView = _curtab.getRecords()[_curtab.getCurrentRow()];\n      if (_curGC.singleRow == false || rowsSource.length > 0) {\n        for (var r = 0; r < rowsSource.length; r++) {\n          //  finalhtmls += parseHtml1(html, r) + \'~\';\n\n          values.push(listofSelectedItems1(html, r));\n          //doc.fromHTML(finalhtmls, 15, 15, {\n          //    \'elementHandlers\': {}\n          //});\n          //doc.addPage();\n        }\n      } else {\n        values.push(listofSelectedItems2(html));\n        //finalhtmls = parseHtml2(html);\n        //doc.fromHTML(finalhtmls, 15, 15, {\n        //    \'elementHandlers\': {}\n        //});\n      }\n\n      //newLetters = [];\n      //newLetters.push({ Body: finalhtmls, Subject: "asdadsaDSA" });\n\n      $bsyDiv[0].style.visibility = "visible";\n\n      //var mywindow = window.open();\n      //mywindow.document.write(\'<html><head>\');\n      //mywindow.document.write(\'</head><body >\');\n\n      //mywindow.document.write(html);\n\n      //mywindow.document.write(\'</body></html>\');\n      //mywindow.print();\n\n      $.ajax({\n        url: VIS.Application.contextUrl + "Email/InsertAttachmentText",\n        datatype: "json",\n        type: "post",\n        cache: false,\n        data: {\n          html: VIS.Utility.encodeText(html),\n          values: JSON.stringify(values)\n        },\n        success: function (data) {\n          $bsyDiv[0].style.visibility = "hidden";\n          var result = JSON.parse(data);\n          htt = result;\n          // var datauri = \'data:application/pdf;charset=utf-8;base64,\' + htt;\n          var datauri = htt;\n\n          //var iframe = "<iframe width=\'100%\' height=\'100%\' style=\'direction:rtl\'  src=\'" + datauri + "\'></iframe>"\n\n          //var x = window.open();\n          //x.document.open();\n          //x.document.write(iframe);\n          //x.document.close();\n\n          window.open(VIS.Application.contextUrl + datauri);\n\n          //var mywindow = window.open();\n          //mywindow.document.write(\'<html dir="rtl"><head>\');\n          //mywindow.document.write(\'</head><body >\');\n          //mywindow.document.write(htt);\n\n          //mywindow.document.write(\'</body></html>\');\n          return;\n        }\n      });\n    }\n    ;\n    var isCallNew = 0;\n    function createNewLetter(e) {\n      onOkOpentn = false;\n      isCallNew = 0;\n      if ($SubjectTextChange == 1) {\n        if ($textAreakeno.value() != "" || $subject.val() != "") {\n          VIS.ADialog.confirm("DoYouWantToSave", true, "", "Confirm", function (result) {\n            if (!result) {\n              $subject.val("");\n              $textAreakeno.value(\'\');\n              selectedTemplateID = 0;\n              $btnHdrSave.css("opacity", "1");\n              $SubjectTextChange = 0;\n            } else {\n              save(e);\n              $SubjectTextChange = 0;\n              isCallNew = 1;\n            }\n          });\n        }\n      } else {\n        $subject.val("");\n        $textAreakeno.value(\'\');\n        selectedTemplateID = 0;\n        $btnHdrSave.css("opacity", "1");\n        $SubjectTextChange = 0;\n      }\n    }\n    ;\n    var openFormatClientID = ctx.getAD_Client_ID();\n    var onOkOpentn = false;\n    var getMailFormat = null;\n    var openCallAgain = 0;\n    function open(e) {\n      var openDailogshow = 0;\n      openCallAgain = 0;\n      var mailformat = new VIS.Openmailformat(_curGC.gTab.getAD_Window_ID(), isEmail);\n      getMailFormat = mailformat;\n      if (!isEmail) {\n        isCallNew = 0;\n        if ($textAreakeno.value() != "" && $subject.val() != "" && $SubjectTextChange == 1) {\n          VIS.ADialog.confirm("DoYouWantToSave", true, "", "Confirm", function (result) {\n            if (!result) {\n              //$subject.val("");\n              //$textAreakeno.value(\'\');\n              selectedTemplateID = 0;\n              $btnHdrSave.css("opacity", "1");\n              $SubjectTextChange = 0;\n              mailformat.show();\n            } else {\n              save(e);\n              openCallAgain = 1;\n              onOkOpentn = true;\n            }\n          });\n          openDailogshow = 1;\n        }\n      }\n      if (openDailogshow == 0) {\n        mailformat.show();\n      }\n      mailformat.onClose = function () {\n        $SubjectTextChange = 0;\n        var selectedRow = mailformat.getSelectedRow();\n        if (selectedRow != null && selectedRow != undefined) {\n          // changes done by Bharat on 27 Sep 2018 to habdle issue of open text format\n          selectedTemplateID = selectedRow.AD_TEXTTEMPLATE_ID;\n          openFormatClientID = selectedRow.AD_CLIENT_ID;\n          $subject.val(selectedRow.SUBJECT);\n          if (openFormatClientID != ctx.getAD_Client_ID()) {\n            $btnHdrSave.css("opacity", "0.4");\n          } else {\n            $btnHdrSave.css("opacity", "1");\n          }\n          if (selectedRow.ISDYNAMICCONTENT == "Y") {\n            $dynamicDisplay.prop("checked", false).trigger("click");\n          } else {\n            $dynamicDisplay.prop("checked", true).trigger("click");\n          }\n          if (selectedRow.AD_Window_ID != null && selectedRow.AD_Window_ID != undefined && selectedRow.AD_Window_ID > 0) {\n            saveForAllWindows = false;\n          } else {\n            saveForAllWindows = true;\n          }\n          formatName = selectedRow.NAME;\n          $textAreakeno.value(selectedRow.MAILTEXT);\n        }\n        onOkOpentn = false;\n      };\n    }\n    ;\n    function saveAs(e) {\n      var text = $textAreakeno.value();\n      if (text != null && text.trim() != "" && text != undefined) {\n        var newformat = new VIS.Newmailformat(isEmail);\n        newformat.show();\n        newformat.onClose = function () {\n          formatName = newformat.getName();\n          saveForAllWindows = newformat.saveForAll();\n          saveFormat(0);\n        };\n      }\n    }\n    ;\n    function save(e) {\n      if (openFormatClientID != ctx.getAD_Client_ID()) {\n        return;\n      }\n      var text = $textAreakeno.value();\n      if (text != null && text != "" && text != undefined) {\n        if (selectedTemplateID > 0) {\n          saveFormat(selectedTemplateID);\n        } else {\n          saveAs();\n        }\n      }\n    }\n    ;\n\n    //Refresh Email IDs..\n    function refresh(e) {\n      $bccChkList.empty(); //Create already added mail address.\n\n      loadEmails(true); // Load emails\n\n      loadFields(true); // Load Feilds and their bpartner\'s email IDS....\n    }\n    ;\n    function cancel(e) {\n      self.dispose();\n      self = null;\n    }\n    ;\n    function saveFormat(id) {\n      var inputData = {\n        id: id,\n        AD_Client_ID: ctx.getAD_Client_ID(),\n        AD_Org_ID: ctx.getAD_Org_ID(),\n        name: VIS.Utility.encodeText(formatName),\n        isDynamic: $dynamicDisplay.prop("checked"),\n        subject: VIS.Utility.encodeText($subject.val()),\n        text: VIS.Utility.encodeText($textAreakeno.value()),\n        saveforAll: saveForAllWindows,\n        AD_Window_ID: _curtab.getAD_Window_ID(),\n        folderName: folder,\n        attachmentID: attachmentID\n      };\n      $.ajax({\n        type: \'POST\',\n        url: VIS.Application.contextUrl + "Email/SaveFormats",\n        data: inputData,\n        success: function (data) {\n          selectedTemplateID = parseInt(data);\n          openFormatClientID = ctx.getAD_Client_ID();\n          $btnHdrSave.css("opacity", "1");\n          $SubjectTextChange = 0;\n          if (!isEmail) {\n            if (isCallNew == 1) {\n              $subject.val("");\n              $textAreakeno.value("");\n            }\n            if (onOkOpentn == true) {\n              window.setTimeout(function () {\n                if (openCallAgain == 1) {\n                  open();\n                  onOkOpentn = false;\n                }\n              }, 200);\n            }\n          }\n        }\n      });\n    }\n    ;\n\n    /* Will be visible when user click on link of CC & Bcc*/\n    function showBccpanel(e) {\n      if ($bcc.is(\':visible\')) {\n        $bcc.hide();\n        $cc.hide();\n        //   $root.find(".vis-Email-textarea-div").height($root.find(".vis-Email-textarea-div").height() + 85);\n\n        if (!$root.find(\'.vis-email-attachmentContainer\').is(":visible")) {\n          $root.find(".vis-Email-textarea-div").height($root.height() - 180);\n        } else {\n          $root.find(".vis-Email-textarea-div").height($root.height() - 365);\n        }\n      } else {\n        $bcc.show();\n        $cc.show();\n        // $root.find(".vis-Email-textarea-div").height($root.height() - 265);\n\n        if (!$root.find(\'.vis-email-attachmentContainer\').is(":visible")) {\n          $root.find(".vis-Email-textarea-div").height($root.height() - 255);\n        } else {\n          $root.find(".vis-Email-textarea-div").height($root.height() - 440);\n        }\n      }\n    }\n    ;\n    function createDynmicmails(source, i, email) {\n      var hasMail = false;\n      var mailInfo = {};\n      mailInfo.To = $to.val();\n      mailInfo.Cc = $cc.val();\n      mailInfo.Bcc = [];\n      if ($bcc.val().contains(\';\')) {\n        var arraybcc = $bcc.val().split(\';\');\n        for (var i = 0; i < arraybcc.length; i++) {\n          if (arraybcc[i] != null && arraybcc[i] != "") {\n            mailInfo.Bcc.push(arraybcc[i]);\n          }\n        }\n      } else {\n        if ($bcc.val() != null && $bcc.val() != "") {\n          mailInfo.Bcc.push($bcc.val());\n        }\n      }\n      if (email) {\n        if (!validateEmail(email)) {\n          window.setTimeout(function () {\n            VIS.ADialog.info("NotValidEmail", true, ":" + email);\n            return;\n          }, 2);\n        }\n        mailInfo.Bcc.push(email);\n        hasMail = true;\n      } else if ($bccChkList != null && $bccChkList != undefined) {\n        if (Object.keys(source).indexOf("email") > -1 && selectedValues.indexOf(source[\'email\']) > -1) {\n          //var lis = $bccChkList.children(\'li\');\n          //if (lis.length > 0) {\n          //    for (var l = 0; l < lis.length; l++) {\n          //        mailInfo.bcc.push($(lis[l]).data(\'email\'));\n          //    }\n          //}\n          if (!validateEmail(source[\'email\'])) {\n            window.setTimeout(function () {\n              VIS.ADialog.info("NotValidEmail", true, ":" + source[\'email\']);\n              return;\n            }, 2);\n          }\n          mailInfo.Bcc.push(source[\'email\']);\n          hasMail = true;\n        } else if (!_curGC.singleRow == false && rowsSource.length == 1) {} else {\n          if (!_curGC.singleRow == false || rowsSource.length > 1) {\n            return;\n          }\n        }\n      }\n      var sssub = $subject.val();\n      if (sssub.trim().length == 0) {\n        sssub = "  ";\n      }\n      mailInfo.Subject = sssub; //done bcoz mail is not being sent if subject length is 0....\n      mailInfo.TableID = currentTable_ID;\n      if (_curGC.singleRow == true && rowsSource.length == 0) {\n        mailInfo.Recordids = Record_ID;\n      } else {\n        mailInfo.Recordids = source[_curtab.keyColumnName.toLower()];\n      }\n      if (_curGC.singleRow == false) {\n        mailInfo.Body = listofSelectedItems1($textAreakeno.value(), i);\n      } else {\n        mailInfo.Body = listofSelectedItems2($textAreakeno.value());\n      }\n      mailInfo.AttachmentFolder = folder;\n      if (_curGC.singleRow == true || rowsSource.length == 1) {\n        if (!hasMail) {\n          if (!hsaValidinputmails) {\n            return;\n          }\n        }\n      }\n      return mailInfo;\n    }\n    ;\n\n    ///For Multi Row Selection\n    function listofSelectedItems1(html, i) {\n      var copyhtml = html;\n      var retValues = {};\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (columnName != undefined && columnName != null) {\n          if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n            if (rowsSource[i][columnName.toLower()] != null && rowsSource[i][columnName.toLower()] != undefined) {\n              fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSource[i][columnName.toLower()]);\n            }\n          } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n            var displayType = _curtab.getField(columnName).getDisplayType();\n            fieldValue = _curtab.getField(columnName).value;\n            if (VIS.DisplayType.Date == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleDateString();\n            } else if (VIS.DisplayType.Time == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleTimeString();\n            } else {\n              fieldValue = new Date(fieldValue).toLocaleString();\n            }\n\n            //toLocaleDateString\n            //toLocaleTimeString\n          } else {\n            fieldValue = rowsSource[i][columnName.toLower()];\n          }\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        retValues[\'@@\' + fieldname + \'@@\'] = fieldValue;\n      }\n      return retValues;\n    }\n    ;\n\n    ///For Single View Selection\n    function listofSelectedItems2(html) {\n      var copyhtml = html;\n      var retValues = {};\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (columnName != undefined && columnName != null) {\n          if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n            if (rowsSource.length > 0 && rowsSource[0][columnName.toLower()] != null && rowsSource[0][columnName.toLower()] != undefined) {\n              fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSource[0][columnName.toLower()]);\n            } else if (rowsSingleView[columnName.toLower()] != null && rowsSingleView[columnName.toLower()] != undefined) {\n              fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSingleView[columnName.toLower()]);\n            }\n          } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n            var displayType = _curtab.getField(columnName).getDisplayType();\n            fieldValue = _curtab.getField(columnName).value;\n            if (VIS.DisplayType.Date == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleDateString();\n            } else if (VIS.DisplayType.Time == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleTimeString();\n            } else {\n              fieldValue = new Date(fieldValue).toLocaleString();\n            }\n          } else {\n            if (_curGC.singleRow == true && rowsSource.length == 0) {\n              fieldValue = _curtab.getField(columnName).value;\n            } else {\n              if (rowsSource && rowsSource.length > 0) {\n                fieldValue = rowsSource[0][columnName.toLower()];\n              } else fieldValue = rowsSingleView[columnName.toLower()];\n            }\n          }\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        retValues[\'@@\' + fieldname + \'@@\'] = fieldValue;\n      }\n      return retValues;\n    }\n    ;\n\n    ///For Multi Row Selection\n    function parseHtml1(html, i) {\n      var finalhtmlperRecord = html;\n      var copyhtml = html;\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (columnName != undefined && columnName != null) {\n          if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n            if (rowsSource[i][columnName.toLower()] != null && rowsSource[i][columnName.toLower()] != undefined) {\n              //fieldValue = _curtab.getField(columnName.toLower()).lookup.lookup[" " + rowsSource[i][columnName.toLower()]].Name;\n              fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSource[i][columnName.toLower()]);\n            }\n          } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n            var displayType = _curtab.getField(columnName).getDisplayType();\n            fieldValue = _curtab.getField(columnName).value;\n            if (VIS.DisplayType.Date == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleDateString();\n            } else if (VIS.DisplayType.Time == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleTimeString();\n            } else {\n              fieldValue = new Date(fieldValue).toLocaleString();\n            }\n          } else {\n            fieldValue = rowsSource[i][columnName.toLower()];\n          }\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        if (fieldValue != null && fieldValue != undefined) {\n          finalhtmlperRecord = finalhtmlperRecord.replace(\'@@\' + fieldname + \'@@\', fieldValue);\n        } else {\n          finalhtmlperRecord = finalhtmlperRecord.replace(\'@@\' + fieldname + \'@@\', "");\n        }\n      }\n      return finalhtmlperRecord;\n    }\n    ;\n\n    ///For Single View Selection\n    function parseHtml2(html) {\n      var copyhtml = html;\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (columnName != undefined && columnName != null) {\n          if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n            if (rowsSingleView[columnName.toLower()] != null && rowsSingleView[columnName.toLower()] != undefined) {\n              fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSingleView[columnName.toLower()]);\n            } else {\n              fieldValue = "";\n            }\n          } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n            var displayType = _curtab.getField(columnName).getDisplayType();\n            fieldValue = _curtab.getField(columnName).value;\n            if (VIS.DisplayType.Date == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleDateString();\n            } else if (VIS.DisplayType.Time == displayType) {\n              fieldValue = new Date(fieldValue).toLocaleTimeString();\n            } else {\n              fieldValue = new Date(fieldValue).toLocaleString();\n            }\n          } else {\n            if (_curGC.singleRow == true && rowsSource.length == 0) {\n              fieldValue = _curtab.getField(columnName).value;\n              if (fieldValue == null) {\n                fieldValue = "";\n                //$($textAreakeno.selectionRestorePoint.range.commonAncestorContainer.parentNode).remove();\n              }\n            } else {\n              fieldValue = rowsSingleView[columnName.toLower()];\n            }\n          }\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        html = html.replace(\'@@\' + fieldname + \'@@\', fieldValue);\n      }\n      return html;\n    }\n    ;\n    function setDesignOnSizeChange() {\n      var middleDivWidth = 0;\n      $root.height(formHeight);\n      $root.width(formWidth);\n      $root.find(\'.contentArea\').css(\'height\', $root.height() - 42);\n      $root.find(\'.vis-Email-BccList\').height(1);\n      $root.find(\'.vis-email-leftDiv\').height($root.find(\'.contentArea\').height());\n      if (callingFromOutsideofWindow) {\n        if (!$root.find(\'.vis-email-attachmentContainer\').is(":visible")) {\n          $root.find(".vis-Email-textarea-div").height($root.height() - 180);\n        } else {\n          $root.find(".vis-Email-textarea-div").height($root.height() - 345);\n        }\n        $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 85);\n        middleDivWidth = $root.width() - 40;\n      } else {\n        if (isEmail) {\n          if ($root.find(\'.vis-email-attachmentContainer\').is(":visible")) {\n            $root.find(".vis-Email-textarea-div").height($root.height() - ($root.find(\'.vis-email-attachmentContainer\').height() + 150));\n\n            //if ($textAreakeno != null && $textAreakeno != undefined) {\n            //    $textAreakeno.body.style.height = ($root.find(".vis-Email-textarea-div").height() - 80) + "px";\n            //}\n          } else {\n            //$root.find(".vis-Email-textarea-div").height($root.height() - ($root.find(\'.vis-email-attachmentContainer\').height() + 50));\n\n            $root.find(".vis-Email-textarea-div").height($root.height() - ($root.find(\'.vis-email-attachmentContainer\').height() + 70));\n\n            //if ($textAreakeno != null && $textAreakeno != undefined) {\n            //    $textAreakeno.body.style.height = ($root.find(".vis-Email-textarea-div").height() - 80) + "px";\n            //}\n          }\n          //middleDivWidth = $root.width() - 232;\n          middleDivWidth = formWidth - ($root.find(\'.vis-email-leftDiv\').width() + 30);\n          $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 355);\n          $root.find(\'.vis-form-data-sub\').width($root.find(\'.vis-Email-leftWrap\').width() - 45);\n        } else {\n          $root.find(".vis-Email-textarea-div").height($root.height() - (125 + 30));\n          if ($textAreakeno != null && $textAreakeno != undefined) {\n            //if ($textAreakeno != null && $textAreakeno != undefined) {\n            //    $textAreakeno.body.style.height = ($root.find(".vis-Email-textarea-div").height() - 80) + "px";\n            //}\n            //$textAreakeno.height($root.height() - (125 + 30 + 10));\n          }\n          // $(\'.vis-Email-leftWrap\').css("width", \'100%\');\n          //middleDivWidth = $root.width() - 232;\n          middleDivWidth = formWidth - ($root.find(\'.vis-email-leftDiv\').width() + 30);\n          $root.find(\'.vis-Email-leftWrap\').width(middleDivWidth - 15);\n          $root.find(\'.vis-form-data-sub\').width(middleDivWidth - 40);\n        }\n      }\n      if ($middleDiv != null) {\n        $middleDiv.css(\'width\', middleDivWidth - 10);\n        //window.setInterval(function () {\n        //    $middleDiv.css(\'width\', middleDivWidth);\n        //}, 200);\n      }\n      if ($textAreakeno != null && $textAreakeno != undefined) {\n        $textAreakeno.body.style.width = middleDivWidth - 370 + "px";\n      }\n      if (!callingFromOutsideofWindow) {\n        if (window.VADMS) {\n          $root.find(\'.vis-Email-BccList\').height($root.find(\'.vis-Email-rytContent\').height() - ($root.find(\'.vis-Email-rytForm\').height() + 310));\n        } else {\n          $root.find(\'.vis-Email-BccList\').height($root.find(\'.vis-Email-rytContent\').height() - ($root.find(\'.vis-Email-rytForm\').height() + 70));\n        }\n      }\n    }\n    ;\n    this.showCcBccMails = function (mailcc, mailbcc) {\n      if (mailcc != undefined && mailcc != null && mailcc != \'\') ccmail = mailcc;\n      if (mailbcc != undefined && mailbcc != null && mailbcc != \'\') bccmail = mailbcc;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setHeight(800);\n      ch.setWidth(1600);\n      ch.setTitle(VIS.Msg.getMsg("EMail"));\n      ch.setModal(true);\n      ch.show();\n      ch.setContent($root);\n      initializeComponent();\n    };\n    this.disposeComponent = function () {\n      //this.frame = null;\n      //this.windowNo = 0;\n      ctx = null;\n      ch = null;\n      bpColumnName = "";\n      //rowsSource = null;\n      //rowsSingleView = null;\n      currentTable_ID = 0;\n      //selectedValues.clear();\n      selectedValues = null;\n\n      //if ($btnHdrCancel != null) {\n      //    $btnHdrCancel.off(\'click\');\n      //}\n      if (!callingFromOutsideofWindow) {\n        if ($btnHdrOpen != null) $btnHdrOpen.off(\'click\');\n        if ($btnHdrPreview != null) $btnHdrPreview.off(\'click\');\n        if ($btnHdrSave != null) $btnHdrSave.off(\'click\');\n        if ($btnHdrSaveAs != null) $btnHdrSaveAs.off(\'click\');\n        if ($imgAction != null) $imgAction.off(\'click\');\n        if ($ulFieldNames != null) $ulFieldNames.remove();\n        if ($imgAction != null) $imgAction.remove();\n        if ($bccChkList != null) $bccChkList.remove();\n        if ($dynamicDisplay != null) $dynamicDisplay.remove();\n        if ($txtArea != null) $txtArea.remove();\n      }\n      if ($btnHdrSend != null) {\n        $btnHdrSend.off(\'click\');\n      }\n      if (fileBrowser != null && fileBrowser != undefined) {\n        fileBrowser.off("change");\n        fileBrowser.off("click");\n      }\n      $ulFieldNames = null;\n      if ($root != null) $root.remove();\n      $root = null;\n      if ($leftDiv != null) {\n        $leftDiv.remove();\n      }\n      $leftDiv = null;\n      if ($middleDiv != null) $middleDiv.remove();\n      $middleDiv = null;\n      if ($rightDiv != null) $rightDiv.remove();\n      $rightDiv = null;\n      //$imgAction.remove();\n      $imgAction = null;\n      // $bccChkList.remove();\n      $bccChkList = null;\n      //$dynamicDisplay.remove();\n      $dynamicDisplay = null;\n      if (isEmail) {\n        if ($to != null) $to.remove();\n        $to = null;\n        if ($bcc != null) $bcc.remove();\n        $bcc = null;\n        if ($cc != null) $cc.remove();\n        $cc = null;\n      }\n      if ($subject != null) $subject.remove();\n      $subject = null;\n      //  $txtArea.remove();\n      $txtArea = null;\n      if ($textAreakeno != null && $textAreakeno != undefined) {\n        $textAreakeno.destroy();\n      }\n      $textAreakeno = null;\n      if ($leftfootArea != null) $leftfootArea.remove();\n      $leftfootArea = null;\n      $btnHdrPreview = null;\n      $btnHdrSend = null;\n      $btnHdrCancel = null;\n      $btnHdrOpen = null;\n      $btnHdrSave = null;\n      $btnHdrSaveAs = null;\n      if ($chkBSendPFasAtt != null) {\n        $chkBSendPFasAtt.off("click");\n        $chkBSendPFasAtt = null;\n      }\n      if ($cmbPfFiletype != null) {\n        $cmbPfFiletype = null;\n      }\n      //self = null;\n    };\n    this.sizeChanged = function (height, width) {\n      formHeight = height;\n      formWidth = width;\n      if (isViewLoaded == true) {\n        setDesignOnSizeChange();\n        this.leftULsize();\n      }\n    };\n    this.ShowDMSDocumentAttchment = function () {\n      var docLst = null;\n      var a = null;\n      $attachDmsDoc.children().remove();\n      var attachDocUl = $("<ul></ul>");\n      if (VIS.context.getContext("DocumentAttachViaEmail_" + self.windowNo) != "") {\n        $dmsheader.empty();\n        $dmsheader.append(VIS.Msg.getMsg("Documents"));\n        docLst = VIS.context.getContext("DocumentAttachViaEmail_" + self.windowNo).split(",");\n        for (var i = 0; i < docLst.length; i++) {\n          if (docLst[i].trim() == "") {\n            continue;\n          }\n          a = docLst[i].split("-");\n          attachDocUl.append("<Li><input type=\'checkbox\' checked value=\'" + a[0] + "\'> " + a[1] + "</Li>");\n        }\n        $attachDmsDoc.append(attachDocUl);\n      } else {\n        $dmsheader.empty();\n      }\n      attachDocUl.on("click", "input", function () {\n        var strAttachDocs = "";\n        var id = $(this).attr("value");\n        if (!$(this).is(":checked")) {\n          var l = VIS.context.getContext("DocumentAttachViaEmail_" + self.windowNo).split(",");\n          var r = jQuery.grep(l, function (value) {\n            if (!value.trim().contains(id.toString().trim())) return value;\n          });\n          for (var i = 0; i < r.length; i++) {\n            if (i == 0) {\n              strAttachDocs += r[i].trim();\n            } else {\n              strAttachDocs += "," + r[i].trim();\n            }\n          }\n        } else if ($(this).is(":checked")) {\n          var f = id + "-" + $(this).text();\n          strAttachDocs = VIS.context.getContext("DocumentAttachViaEmail_" + self.windowNo);\n          if (strAttachDocs != "") {\n            strAttachDocs += "," + f;\n          } else {\n            strAttachDocs += f;\n          }\n        }\n        VIS.context.setContext("DocumentAttachViaEmail_" + self.windowNo, strAttachDocs);\n      });\n      // self.IsBusy(false);\n    };\n    this.IsBusy = function (isShow) {\n      if (isShow) {\n        isBusy.css("display", "block");\n      } else {\n        isBusy.css("display", "none");\n      }\n      isBusy.appendTo($root);\n    };\n  }\n  ;\n\n  //Must Implement with same parameter\n  Email.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.windowNo = windowNo;\n    frame.hideHeader(true);\n    this.initializeComponent();\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n  Email.prototype.refresh = function () {\n    //this.IsBusy(true);\n    if (window.VADMS) {\n      this.ShowDMSDocumentAttchment();\n    }\n    this.leftULsize();\n  };\n  //Must implement dispose\n  Email.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.Email = Email;\n})(VIS, jQuery);\n\n//;(function($) {\n//    $.fn.hasScrollBar = function() {\n//        return this.get(0).scrollHeight > this.height();\n//    }\n//})(jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/email.js?')},"./Areas/VIS/Scripts/app/Framework/find.js":()=>{eval(';\n(function (VIS, $) {\n  var baseUrl = VIS.Application.contextUrl;\n  var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n  var executeQuery = function (sqls, params, callback) {\n    var async = callback ? true : false;\n    var ret = null;\n    var dataIn = {\n      sql: sqls,\n      param: params\n    };\n\n    // dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    $.ajax({\n      url: nonQueryUrl + \'yWithCode\',\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(dataIn)\n    }).done(function (json) {\n      ret = json;\n      if (callback) {\n        callback(json);\n      }\n    });\n    return ret;\n  };\n  var MUserQuery = {\n    alreadyExist: false,\n    id: 0,\n    getData: function (ctx, AD_Tab_ID, AD_Table_ID, valueColumnName) {\n      var AD_Client_ID = ctx.getAD_Client_ID();\n      var dr = null;\n      try {\n        //dr = VIS.DB.executeDataReader(sql, null, null);\n        dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ASearch/GetData", {\n          "ColumnName": valueColumnName,\n          "Tab_ID": AD_Tab_ID,\n          "Table_ID": AD_Table_ID\n        }, null);\n      } catch (ex) {\n        //if (dr != null) {\n        //    dr = null;\n        //}\n        //_log.Log(Level.SEVERE, sql, ex);\n        console.log(ex);\n      }\n      return dr;\n    },\n    getQueryLines: function (AD_UserQuery_ID) {\n      var dr = null;\n      var lines = [];\n      try {\n        //dr = VIS.DB.executeDataReader(sql, null, null);\n\n        dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ASearch/GetQueryLines", {\n          "UserQuery_ID": AD_UserQuery_ID\n        }, null);\n        var optrName = "";\n        var optr = "";\n        //while (dr.read()) {\n        //    var obj = {};\n        //    obj["KEYNAME"] = dr.get("KEYNAME");\n        //    obj["KEYVALUE"] = dr.get("KEYVALUE");\n        //    obj["OPERATORNAME"] = dr.get("OPERATORNAME");\n        //    obj["VALUE1NAME"] = dr.get("VALUE1NAME");\n        //    obj["VALUE1VALUE"] = dr.get("VALUE1VALUE");\n        //    obj["VALUE2NAME"] = dr.get("VALUE2NAME");\n        //    obj["VALUE2VALUE"] = dr.get("VALUE2VALUE");\n        //    obj["AD_USERQUERYLINE_ID"] = dr.get("AD_USERQUERYLINE_ID");\n\n        //    optrName = dr.get("OPERATORNAME").toString();\n        //    optr = VIS.Query.prototype.OPERATORS[optrName];\n        //    obj["OPERATOR"] = optr;\n        //    lines.push(obj);\n        //}\n\n        if (dr != null) {\n          for (var i in dr) {\n            var obj = {};\n            obj["KEYNAME"] = dr[i]["KEYNAME"];\n            obj["KEYVALUE"] = dr[i]["KEYVALUE"];\n            obj["OPERATORNAME"] = dr[i]["OPERATORNAME"];\n            obj["VALUE1NAME"] = dr[i]["VALUE1NAME"];\n            obj["VALUE1VALUE"] = dr[i]["VALUE1VALUE"];\n            obj["VALUE2NAME"] = dr[i]["VALUE2NAME"];\n            obj["VALUE2VALUE"] = dr[i]["VALUE2VALUE"];\n            obj["AD_USERQUERYLINE_ID"] = dr[i]["AD_USERQUERYLINE_ID"];\n            obj["FULLDAY"] = dr[i]["FULLDAY"];\n            optrName = dr[i]["OPERATORNAME"];\n            optr = VIS.Query.prototype.OPERATORS[optrName];\n            obj["OPERATOR"] = optr;\n            lines.push(obj);\n          }\n        }\n      } catch (ex) {}\n      return lines;\n    },\n    deleteLines: function (AD_UserQuery_ID) {\n      // Not used any where\n\n      var sqlQry = "VIS_147";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@AD_UserQuery_ID", AD_UserQuery_ID);\n      var no = executeQuery(sqlQry, param, null);\n      //log.Info("#" + no);\n      //_lines = null;\n      return no >= 0;\n    },\n    deleteUserQuery: function (AD_UserQuery_ID) {\n      var no = -1;\n      $.ajax({\n        url: VIS.Application.contextUrl + \'ASearch/DeleteQuery\',\n        type: "POST",\n        datatype: "json",\n        async: false,\n        data: {\n          id: AD_UserQuery_ID\n        }\n      }).done(function (json) {\n        no = parseInt(json);\n      });\n      return no >= 0;\n    },\n    insertOrUpdate: function (value, name, where, AD_Tab_ID, AD_Table_ID, dsAdvanceData, getID) {\n      var no = -1;\n      if (where) where = VIS.secureEngine.encrypt(where);\n      $.ajax({\n        url: VIS.Application.contextUrl + \'ASearch/InsertOrUpdateQuery\',\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify({\n          id: value,\n          name: name,\n          where: where,\n          tabid: AD_Tab_ID,\n          tid: AD_Table_ID,\n          qLines: dsAdvanceData\n        })\n      }).done(function (json) {\n        no = parseInt(json);\n        if (no == -5) {\n          MUserQuery.alreadyExist = true;\n        }\n      });\n      if (no > 0) {\n        MUserQuery.id = no;\n      }\n      return no >= 0;\n    }\n  };\n  function Find(windowNo, curTab, minRecord) {\n    var title = curTab.getName();\n    var AD_Tab_ID = curTab.getAD_Tab_ID();\n    var AD_Table_ID = curTab.getAD_Table_ID();\n    var tableName = curTab.getTableName();\n    var whereExtended = curTab.getWhereClause();\n    var findFields = curTab.getFields();\n    this.btnfields = [];\n    var $root = $("<div  class=\'vis-forms-container\' style=\'height:100%\'>");\n    var $busy = null;\n    var $self = this;\n    var ch = null;\n    var btnOk, btnCancel, btnDelete, btnSave, btnRefresh;\n    var txtQryName, drpSavedQry, drpColumns, drpOp, drpDynamicOp, chkDynamic, txtYear, txtMonth, txtDay, txtStatus, chkFullDay, spanAddFilter, btnBack;\n    var ulQryList, divDynamic, divYear, divMonth, divDay, divValue1, divValue2, tblGrid, tblBody, divFullDay, inputWarps, lblQryValue;\n    var FIELDLENGTH = 20,\n      TABNO = 99;\n    var total = 0,\n      isLoadError = false,\n      isSaveError = false,\n      isBusy = false;\n    var dsAdvanceData = null;\n    var log = VIS.Logging.VLogger.getVLogger("Find");\n    this.onClose = null, this.created = false, this.days = 0, this.okPressed = false, this.okBtnPressed = false, this.needRefreshWindow = false;\n    var control1,\n      control2,\n      ulListStaticHtml = "";\n    ;\n    this.saveQueryID = -1;\n    var saveChanges = false;\n    var savedFiltersCount = 0;\n    var query = new VIS.Query(tableName); //query\n    query.addRestriction(whereExtended); // restriction\n\n    //$root.load(VIS.Application.contextUrl + \'ASearch/Index/?windowNo=\' + windowNo, function (evt) {\n    //    initUI();\n    //    initFind();\n    //    bindEvents();\n\n    //});\n    setView();\n    function setView() {\n      var dStyle = \'\';\n      var isRTL = false;\n      //if (VIS.Application.isRTL) {\n      //    isRTL = true;\n      //    dStyle = "border-left: 3px solid #d9e3e7;";\n      //}\n      //else {\n      //    dStyle = "border-right: 3px solid #d9e3e7;";\n      //}\n\n      var html = \'<div class="vis-advancedSearch-contentWrap"> <div class="vis-advancedSearchContentArea vis-pull-left" style="\' + dStyle + \'">\' + \' <div class="vis-advancedSearchContentArea-up"> <div class="vis-advanedSearch-InputsWrap"><div class="vis-as-topfieldswrap">\' + \'<div style="display:none" class="vis-form-group vis-advancedSearchInput vis-adsearchgroup1">\' + \'<input readonly id="txtQryName_\' + windowNo + \'" type="text" name="QueryName" maxlength="60">\' + \'<label id="lblQryName_\' + windowNo + \'" for="QueryName">\' + VIS.Msg.getMsg("AddNameToSaveSearch") + \'</label>\' + \'</div> <div  class="vis-form-group vis-advancedSearchInput vis-adsearchgroup2">\' + \'<label id="lblSavedQry_\' + windowNo + \'" for="GetSavedQuery">\' + VIS.Msg.getMsg("GetSavedSearch") + \'</label>\' + \'<select id="drpSavedQry_\' + windowNo + \'"></select>\' + \'</div>\' + \' <div class="vis-advancedSearch-Icons vis-pull-left vis-adsearchgroup2">\' + \'   <ul>\' + \'   <li class="vis-pull-left"><button disabled id="btnDelete_\' + windowNo + \'" class="vis-advancedSearchActionIcon vis-advancedSearch-delIcon"><i class="vis vis-delete" aria-hidden="true"></i></button></li>\' + \'</ul>\' + \'</div></div>\' + \'<div class="vis-advanedSearch-AddFilterWrap vis-pull-left">\' + \'<a href="javascript:;" id="spnAddFilter_\' + windowNo + \'" class="vis-advancedSearch-AddFilter">\' + VIS.Msg.getMsg("AddFilter") + \'</a>\' + \'</div>\' + \'  <div class="vis-as-backbtn"><button id="btnArowBack_\' + windowNo + \'" class="vis-ads-icon"><i class="fa fa-arrow-left" aria-hidden="true"></i></button></div> \' + \'</div>\' + \'<div class="vis-advanedSearch-InputsWrap vis-advs-inputwraps vis-pull-left" data-show="N" style="display:none">\' + \'  <div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-v">\' + \'    <label id="lblColumn_\' + windowNo + \'"  for="Column">\' + VIS.Msg.getMsg("Column") + \'</label>\' + \'  <select id="drpColumn_\' + windowNo + \'">\' + \'</select>\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-op">\' + \'<label id="lblOperator_\' + windowNo + \'" for="Oprator">\' + VIS.Msg.getMsg("Operator") + \'</label>\' + \'<select id="drpOperator_\' + windowNo + \'">\' + \'</select>\' + \'</div>\' + \' <div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-v" id="divValue1_\' + windowNo + \'">\' + \'   <label  id="lblQryValue_\' + windowNo + \'" for="QueryValue">\' + VIS.Msg.getMsg("QueryValue") + \'</label>\' + \' <input  id="txtQryValue_\' + windowNo + \'" type="text" name="QueryValue">\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-v" id="divValue2_\' + windowNo + \'">\' + \'<label for="QueryName"  id="lblToQryValue_\' + windowNo + \'">\' + VIS.Msg.getMsg("ToQueryValue") + \'</label>\' + \'<input  id="txtToQryValue_\' + windowNo + \'" type="text" name="QueryName">\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchInput vis-advancedSearchInput-v" style="display:none;" id="divFullDay_\' + windowNo + \'">\' + \'<input style="width: auto;float: left;" id="checkFullDay_\' + windowNo + \'" type="checkbox" name="QueryName">\' + \'<label for="QueryName"  id="lblToQryValue_\' + windowNo + \'">\' + VIS.Msg.getMsg("FullDay") + \'</label>\' + \'</div>\' + \'<div class="vis-advancedSearch-calender-Icon vis-pull-left">\' + \'<ul>\' + \'<li class="vis-pull-left"><button id="btnSave_\' + windowNo + \'" disabled class="vis-ads-icon"><i class="vis vis-plus" aria-hidden="true"></i></button></li>\' + \'</ul>\' + \'</div>\' + \'</div>\' + \'<div id="divDynamic_\' + windowNo + \'">\' + \'<div class="vis-advanedSearch-InputsWrap vis-advancedSearchMrgin">\' + \'<div class="vis-form-group vis-advancedSearchInput1">\' + \'<input type="checkbox"  id="chkDynamic_\' + windowNo + \'"  name="IsDynamic" class="vis-pull-left">\' + \'<label for="IsDynamic" >\' + VIS.Msg.getMsg("IsDynamic") + \'</label>\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchInput">\' + \'<select id="drpDynamicOp_\' + windowNo + \'" disabled>\' + \'<option>\' + VIS.Msg.getMsg("Today") + \'</option>\' + \'<option>\' + VIS.Msg.getMsg("lastxDays") + \'</option>\' + \'<option>\' + VIS.Msg.getMsg("lastxMonth") + \'</option>\' + \'<option>\' + VIS.Msg.getMsg("lastxYears") + \'</option>\' + \'</select>\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchHorigontal vis-pull-left" id="divYear_\' + windowNo + \'">\' + \'<input id="txtYear_\' + windowNo + \'" type="number" min="1" max="99" />\' + \'<label for="Year">\' + VIS.Msg.getMsg("Year") + \'</label>\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchHorigontal vis-pull-left" id="divMonth_\' + windowNo + \'">\' + \'<input id="txtMonth_\' + windowNo + \'" type="number" min="0" max="12" />\' + \'<label for="Month">\' + VIS.Msg.getMsg("Month") + \'</label>\' + \'</div>\' + \'<div class="vis-form-group vis-advancedSearchHorigontal vis-pull-left" id="divDay_\' + windowNo + \'">\' + \'<input id="txtDay_\' + windowNo + \'" type="number" min="0" max="31" />\' + \' <label for="Day">\' + VIS.Msg.getMsg("Day") + \'</label>\' + \'</div>\' + \'</div>\' + \'</div>\' + \'</div>\' + \'<div class="vis-advancedSearchContentArea-down">\' + \'<div class="vis-advancedSearchTableWrap vis-table-responsive vis-pull-left">\' + \'<table id="tblQry_\' + windowNo + \'" class="vis-advancedSearchTable">\' + \'<thead>\' + \'<tr class="vis-advancedSearchTableHead">\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "AD_Column_ID") + \'</th>\' + \'<th style="display:none">\' + VIS.Msg.translate(VIS.Env.getCtx(), "KEYVALUE") + \'</th>\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "OperatorName") + \'</th>\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "QueryValue") + \'</th>\' + \'<th style="display:none">\' + VIS.Msg.translate(VIS.Env.getCtx(), "VALUE1VALUE") + \'</th>\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "QueryValue2") + \'</th>\' + \'<th>\' + VIS.Msg.getMsg("FullDay") + \'</th>\' + \'<th style="display:none">\' + VIS.Msg.translate(VIS.Env.getCtx(), "VALUE2VALUE") + \'</th>\' + \'<th style="display:none">\' + VIS.Msg.translate(VIS.Env.getCtx(), "AD_USERQUERYLINE_ID") + \'</th>\' + \'<th style="display:none">\' + VIS.Msg.translate(VIS.Env.getCtx(), "Operator") + \'</th>\' + \'<th>\' + VIS.Msg.translate(VIS.Env.getCtx(), "Action") + \'</th>\' + \'</tr>\' + \'</thead>\' + \'<tbody class="vis-advancedSearchTableBody">\' + \'</tbody>\' + \'</table>\' + \'</div>\' + \'</div>\' + \'<div class="vis-advancedSearchContentArea-button">\' + \'<div class="vis-advcedfooterBtn">\';\n      dStyle = isRTL ? "float:right" : "float:left";\n      html += \'<button id="btnRefresh_\' + windowNo + \'" class="ui-button ui-corner-all ui-widget">\' + VIS.Msg.getMsg("Refresh") + \'</button>\' + \'<div class="vis-pull-right">\' + \'<button id="btnOk_\' + windowNo + \'" class="ui-button ui-corner-all ui-widget" >\' + VIS.Msg.getMsg("Apply") + \'</button>\' + \'  <button id="btnCancel_\' + windowNo + \'" class="ui-button ui-corner-all ui-widget"  style="margin: 0 10px;">\' + VIS.Msg.getMsg("Close") + \'</button>\' + \'</div>\' + \'</div>\' + \'</div>\'\n      //\x3c!-- end of advancedSearchTableWrap --\x3e\n      + \'</div>\'\n      //\x3c!-- end of advancedSearchContentArea --\x3e\n      + \'<div class="vis-advancedSearch-RecentRecords">\' + \'  <div class="vis-RecentRecords-Heading">\';\n\n      //dStyle = isRTL ? "margin-right:15px" : "margin-left:15px";\n\n      html += \'<h4>\' + VIS.Msg.getMsg("VHistory") + \'</h4>\' + \'</div>\' + \'<div class="vis-RecentRecords-listWrap">\' + \' <ul id="ulQry_\' + windowNo + \'" >\' + \'<li data-value="0" title="\' + VIS.Msg.getMsg("All") + \'" >\' + VIS.Msg.getMsg("All") + \'</li>\' + \'<li data-value="365" title="\' + VIS.Msg.getMsg("YearAll") + \'">\' + VIS.Msg.getMsg("YearAll") + \'</li>\' + \'<li data-value="365 | C" title="\' + VIS.Msg.getMsg("YearCreated") + \'">\' + VIS.Msg.getMsg("YearCreated") + \'</li>\' + \'<li data-value="31" title="\' + VIS.Msg.getMsg("MonthAll") + \'">\' + VIS.Msg.getMsg("MonthAll") + \'</li>\' + \'<li data-value="31 | C" title="\' + VIS.Msg.getMsg("MonthCreated") + \'">\' + VIS.Msg.getMsg("MonthCreated") + \'</li>\' + \'<li data-value="7" title="\' + VIS.Msg.getMsg("WeekAll") + \'">\' + VIS.Msg.getMsg("WeekAll") + \'</li>\' + \'<li data-value="7 | C" title="\' + VIS.Msg.getMsg("WeekCreated") + \'">\' + VIS.Msg.getMsg("WeekCreated") + \'</li>\' + \'<li data-value="1" title="\' + VIS.Msg.getMsg("DayAll") + \'">\' + VIS.Msg.getMsg("DayAll") + \'</li>\' + \'<li data-value="1 | C" title="\' + VIS.Msg.getMsg("DayCreated") + \'">\' + VIS.Msg.getMsg("DayCreated") + \'</li>\' + \'</ul>\' + \'</div>\' + \'<div class="vis-advancedSearchFooter vis-pull-right"> \' + \'<p id="pstatus_\' + windowNo + \'" >16 / 16</p>\' + \'</div>\' + \'</div>\' + \'</div>\'\n\n      //\x3c!-- end of advancedSearch-GrayWrap --\x3e\n      + \'<div class="vis-apanel-busy vis-advancedSearchbusy" id="divBusy_\' + windowNo + \'" >\' + \'<p style="text-align:center"> \' + VIS.Msg.getMsg("Loading") + \'</p>\' + \'</div>\';\n      $root.append(html);\n      initUI();\n      initFind();\n      bindEvents();\n    }\n    ;\n    function initUI() {\n      //right side list\n      ulQryList = $root.find("#ulQry_" + windowNo);\n      drpSavedQry = $root.find("#drpSavedQry_" + windowNo);\n      drpColumns = $root.find("#drpColumn_" + windowNo);\n      drpOp = $root.find("#drpOperator_" + windowNo);\n      divValue1 = $root.find("#divValue1_" + windowNo);\n      lblQryValue = $root.find("#lblQryValue_" + windowNo);\n      divValue2 = $root.find("#divValue2_" + windowNo);\n      divFullDay = $root.find("#divFullDay_" + windowNo);\n      txtQryName = $root.find("#txtQryName_" + windowNo);\n\n      //actions\n      btnOk = $root.find("#btnOk_" + windowNo);\n      btnCancel = $root.find("#btnCancel_" + windowNo);\n      btnSave = $root.find("#btnSave_" + windowNo);\n      btnDelete = $root.find("#btnDelete_" + windowNo);\n      btnRefresh = $root.find("#btnRefresh_" + windowNo);\n      //dynamic\n      divDynamic = $root.find("#divDynamic_" + windowNo);\n      chkDynamic = $root.find("#chkDynamic_" + windowNo);\n      drpDynamicOp = $root.find("#drpDynamicOp_" + windowNo);\n      txtYear = $root.find("#txtYear_" + windowNo);\n      txtMonth = $root.find("#txtMonth_" + windowNo);\n      txtDay = $root.find("#txtDay_" + windowNo);\n      divYear = $root.find("#divYear_" + windowNo);\n      divMonth = $root.find("#divMonth_" + windowNo);\n      divDay = $root.find("#divDay_" + windowNo);\n      chkFullDay = $root.find(\'#checkFullDay_\' + windowNo);\n      spanAddFilter = $root.find(\'#spnAddFilter_\' + windowNo);\n      btnBack = $root.find(\'#btnArowBack_\' + windowNo);\n      inputWarps = $($root.find(\'.vis-advs-inputwraps\')[0]);\n      divYear.hide();\n      divMonth.hide();\n      divDay.hide();\n      divDynamic.hide();\n\n      //if (VIS.Application.isRTL) {\n      //    btnOk.css("margin-left", "-142px");\n      //    btnCancel.css("margin-left", "70px");\n      //}\n\n      //grid \n      tblGrid = $root.find("#tblQry_" + windowNo);\n      tblBody = tblGrid.find("tbody");\n      txtStatus = $root.find("#pstatus_" + windowNo);\n      $busy = $root.find("#divBusy_" + windowNo);\n    }\n    ;\n    function initFind() {\n      total = getNoOfRecords(null, false);\n      var drListQueries = MUserQuery.getData(VIS.context, AD_Tab_ID, AD_Table_ID, "Code");\n      setStatusDB(total);\n      ulListStaticHtml = ulQryList.html();\n      fillList(drListQueries);\n      //SetBusy(false);\n\n      var html = \'<option value="-1"> </option>\';\n      var sortedFields = [];\n      for (var c = 0; c < findFields.length; c++) {\n        // get field\n        var field = findFields[c];\n        if (field.getIsEncrypted()) continue;\n        // get field\'s column name\n        var columnName = field.getColumnName();\n        if (field.getDisplayType() == VIS.DisplayType.Button) {\n          if (field.getAD_Reference_Value_ID() == 0)\n            // change done here to display textbox for search in case where buttons don\'t have Reference List bind with Column\n            //continue;\n            field.setDisplayType(VIS.DisplayType.String);else {\n            if (columnName.endsWith("_ID")) field.setDisplayType(VIS.DisplayType.Table);else {\n              field.setDisplayType(VIS.DisplayType.List);\n              // bind lookup for buttons having Reference List bind with column\n              field.lookup = new VIS.MLookupFactory.getMLookUp(VIS.context, windowNo, field.getAD_Column_ID(), VIS.DisplayType.List);\n            }\n            //field.loadLookUp();\n          }\n        }\n        // get text to be displayed\n        var header = field.getHeader();\n        if (header == null || header.length == 0) {\n          // get text according to the language selected\n          header = VIS.Msg.getElement(VIS.context, columnName);\n          if (header == null || header.Length == 0) continue;\n        }\n        // if given field is any key, then add "(ID)" to it\n        if (field.getIsKey()) header += " (ID)";\n\n        // add a new row in datatable and set values\n        //dr = dt.NewRow();\n        //dr[0] = header; // Name\n        //dr[1] = columnName; // DB_ColName\n        //dt.Rows.Add(dr);\n        //html += \'<option value="\' + columnName + \'">\' + header + \'</option>\';\n        sortedFields.push({\n          \'value\': columnName,\n          \'text\': header\n        });\n      }\n\n      // sort by text\n      sortedFields.sort(function (a, b) {\n        var n1 = a.text.toUpperCase();\n        var n2 = b.text.toUpperCase();\n        if (n1 > n2) return 1;\n        if (n1 < n2) return -1;\n        return 0;\n      });\n      for (var col = 0; col < sortedFields.length; col++) {\n        html += \'<option value="\' + sortedFields[col].value + \'">\' + sortedFields[col].text + \'</option>\';\n      }\n      drpColumns.html(html);\n      setBusy(false);\n    }\n    ;\n    function bindEvents() {\n      btnCancel.on("click", function () {\n        if (isBusy) return;\n        $self.okBtnPressed = false;\n        ch.close();\n      });\n      chkDynamic.on("change", function () {\n        var enable = chkDynamic.prop("checked");\n        drpDynamicOp.prop("disabled", !enable);\n        drpOp.prop("disabled", enable);\n        setValueEnabled(!enable);\n        setValue2Enabled(!enable);\n        setEnabledFullDay(enable);\n        //setFullDayState(!enable);\n        if (enable) {\n          setDynamicQryControls($self.getIsUserColumn(drpColumns.val()));\n        } else {\n          divYear.hide();\n          divMonth.hide();\n          divDay.hide();\n        }\n      });\n      drpDynamicOp.on("change", function () {\n        setDynamicQryControls();\n      });\n      drpColumns.on("change", function () {\n        if (isBusy) return;\n        chkDynamic.prop("disabled", true);\n        chkDynamic.prop("checked", false);\n        chkDynamic.trigger("change");\n        divDynamic.hide();\n\n        // set control at value1 position according to the column selected\n\n        var columnName = drpColumns.val();\n        var f = curTab.getField(columnName);\n        setControlNullValue(true);\n        if (columnName && columnName != "-1") {\n          var dsOp = null;\n          var dsOpDynamic = null;\n          // if column name is of ant ID\n          if (columnName.endsWith("_ID") || columnName.endsWith("_Acct") || columnName.endsWith("_ID_1") || columnName.endsWith("_ID_2") || columnName.endsWith("_ID_3")) {\n            // fill dataset with operators of type ID\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_ID);\n          }\n          if (columnName.startsWith("Is")) {\n            // fill dataset with operators of type Yes No\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_YN);\n          } else if (f.getDisplayType() == VIS.DisplayType.YesNo) {\n            // fill dataset with operators of type Yes No\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_YN);\n          } else {\n            // fill dataset with all operators available\n            dsOp = $self.getOperatorsQuery(VIS.Query.prototype.OPERATORS);\n          }\n          $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 150px)\');\n          if (f != null && VIS.DisplayType.IsDate(f.getDisplayType())) {\n            drpDynamicOp.html($self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_DATE_DYNAMIC, true));\n            divDynamic.show();\n            chkDynamic.prop("disabled", false);\n            setDynamicQryControls();\n            $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 195px)\');\n            if (f.getDisplayType() == VIS.DisplayType.DateTime || f.getDisplayType() == VIS.DisplayType.Date)\n              // If Datetime, then on = operator, show full day checkbox.\n              {\n                showValue2(true);\n                showFullDay(true);\n              }\n          } else if ($self.getIsUserColumn(columnName)) {\n            drpDynamicOp.html($self.getOperatorsQuery(VIS.Query.prototype.OPERATORS_DYNAMIC_ID, true));\n            divDynamic.show();\n            $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 195px)\');\n            chkDynamic.prop("disabled", false);\n            setDynamicQryControls(true);\n          }\n          if (f.getDisplayType() != VIS.DisplayType.DateTime && f.getDisplayType() != VIS.DisplayType.Date)\n            // If Datetime, then on = operator, show full day checkbox.\n            {\n              showValue2(false);\n              showFullDay(false);\n            }\n          if (f.getDisplayType() == VIS.DisplayType.YesNo) {\n            lblQryValue.hide();\n          } else {\n            lblQryValue.show();\n          }\n          drpOp.html(dsOp);\n          drpOp[0].SelectedIndex = 0;\n          // get field\n          var field = getTargetMField(columnName);\n          // set control at value1 position\n          setControl(true, field);\n          // enable the save row button\n          setEnableButton(btnSave, true); //silverlight comment\n          drpOp.prop("disabled", false);\n        } else {\n          showFullDay(false);\n          showValue2(true);\n        }\n        // enable control at value1 position\n        setValueEnabled(true);\n        // disable control at value2 position\n        //setValue2Enabled(false);\n        showValue2(false);\n      });\n      drpOp.on("change", function () {\n        if (isBusy) return;\n        var selOp = drpOp.val();\n\n        // set control at value2 position according to the operator selected\n        if (!selOp) {\n          selOp = "";\n        }\n        var columnName = drpColumns.val();\n        // get field\n        var field = getTargetMField(columnName);\n        if (selOp && selOp != "0") {\n          //if user selects between operator\n          if (VIS.Query.prototype.BETWEEN.equals(selOp)) {\n            // set control at value2 position\n            setControl(false, field);\n\n            // enable the control at value2 position\n            showValue2(true);\n            setValue2Enabled(true);\n          } else {\n            columnName = drpColumns.val();\n            field = getTargetMField(columnName);\n            if (field.getDisplayType() == VIS.DisplayType.DateTime && VIS.Query.prototype.EQUAL.equals(selOp)) {\n              showValue2(false);\n              showFullDay(true);\n            } else {\n              showValue2(false);\n              showFullDay(false);\n              setValue2Enabled(false);\n            }\n          }\n        } else {\n          setEnableButton(btnSave, false); //\n          setValue2Enabled(false);\n          setControlNullValue(true);\n        }\n      });\n      drpSavedQry.on("change", function () {\n        if (isBusy) return;\n        // binds grid according to the query selected in combobox\n        var val = drpSavedQry.val();\n        // Done By Karan, to ask user to save save serach criteria created by User.\n\n        if (saveChanges && tblBody.find(\'.vis-advancedSearchTableRow\').length > 0) {\n          VIS.ADialog.confirm("SaveSearch?", true, "", "Confirm", function (result) {\n            if (!result) {\n              selectedSavedQuery(val);\n            } else {\n              drpSavedQry.val($self.saveQueryID);\n            }\n          });\n        } else {\n          selectedSavedQuery(val);\n        }\n      });\n      tblGrid.on("click", function (e) {\n        if (isBusy) return;\n        // if (e.target.nodeName === "IMG") {\n        if ($(e.target).hasClass(\'vis-delete\')) {\n          var index = $(e.target).data("index");\n          dsAdvanceData.splice(index, 1); //  .Tables[0].Rows.RemoveAt(index);\n          MUserQuery.deleteLines($(e.target).data("userquery"));\n          bindGrid(dsAdvanceData);\n          savedFiltersCount--;\n          if (savedFiltersCount == 0) {\n            txtQryName.prop("readonly", true);\n            txtQryName.val("");\n          }\n        }\n      });\n      ulQryList.on("click", "LI", function (e) {\n        if (isBusy) return;\n        var val = $(this).data("value");\n        //try for double click list\n        if (val != null) {\n          setBusy(true);\n          var ii = $(this).index();\n          setTimeout(function () {\n            if (ii < 9) {\n              var valSplit = val.toString().split(\'|\');\n              var cnt = valSplit.length;\n              if (cnt == 1) {\n                $self.created = false;\n              } else {\n                $self.created = true;\n              }\n              $self.days = parseInt(valSplit[0]);\n              val = "";\n            } else {\n              $self.days = 0;\n            }\n            query = new VIS.Query(tableName);\n            query.addRestriction(val);\n            var no = 0;\n            no = getNoOfRecords(query, true);\n            query.setRecordCount(no);\n            setBusy(false);\n            if (no != 0) {\n              $self.okBtnPressed = true;\n              ch.close();\n              //Close(_isOkButtonPressed);\n            }\n          }, 10);\n        } else {\n          // SetBusy(false);\n          $self.okBtnPressed = false;\n          ch.close();\n          // Close(_isOkButtonPressed);\n        }\n      });\n      btnSave.on("click", saveRowTemp);\n      btnDelete.on("click", function () {\n        if (isBusy) return;\n        var obj = drpSavedQry.val();\n        if (obj == null || obj.toString() == "" || parseInt(obj) < 1) return;\n        VIS.ADialog.confirm("DeleteConfirm", true, "", "Confirm", function (result) {\n          if (result) {\n            setBusy(true);\n            var uq;\n            window.setTimeout(function () {\n              //var sql = "SELECT Count(*) FROM AD_DefaultUserQuery WHERE AD_UserQuery_ID=" + obj + " AND AD_User_ID!=" + VIS.Env.getCtx().getAD_User_ID();\n              //var count = VIS.DB.executeScalar(sql);\n              var count = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ASearch/GetQueryDefault", {\n                "UserQuery_ID": obj\n              }, null);\n              if (count > 0) {\n                VIS.ADialog.warn("QueryDefaultForOther");\n                setBusy(false);\n                return;\n              }\n              if (curTab.userQueryID == obj) {\n                $self.needRefreshWindow = true;\n              }\n\n              // get name of the query\n              var name = drpSavedQry.find("option:selected").text();\n              // delete query\n\n              if (MUserQuery.deleteUserQuery(obj)) {\n                var drListQueries = MUserQuery.getData(VIS.context, AD_Tab_ID, AD_Table_ID, "Code");\n                ulQryList.empty();\n                ulQryList.html(ulListStaticHtml);\n                fillList(drListQueries);\n                drpSavedQry[0].selectedIndex = 0;\n                //// show message to user\n                VIS.ADialog.info("Deleted", true, name, "");\n                txtQryName.val("");\n                txtQryName.prop("readony", true);\n                setBusy(false);\n                drpSavedQry.trigger("change");\n              } else {\n                VIS.ADialog.info("DeleteError", true, name, "");\n              }\n              setBusy(false);\n            }, 10);\n          } else {\n            setBusy(false);\n          }\n        });\n      });\n      btnOk.on("click", function () {\n        if (isBusy) return;\n        //setBusy(true);\n        $self.okPressed = true;\n        $self.okBtnPressed = true;\n        //\tSave pending\n        saveAdvanced();\n      });\n      btnRefresh.on("click", function () {\n        if (isBusy) return;\n        //setBusy(true);\n        // save row\n        saveRowTemp(); //\tunsaved \n        // get query\n        var temp = getQueryAdvanced();\n        var records = 0;\n        records = getNoOfRecords(temp, true);\n        setStatusDB(records);\n        //setBusy(false);\n      });\n      spanAddFilter.on("click", function () {\n        if (inputWarps && inputWarps.data(\'show\') == "N") {\n          inputWarps.data(\'show\', \'Y\');\n          $(this).hide();\n          inputWarps.show();\n          btnBack.show();\n          $(\'.vis-adsearchgroup2\').hide();\n          $(\'.vis-adsearchgroup1\').show();\n          $(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 150px)\');\n        }\n      });\n      btnBack.on("click", function () {\n        inputWarps.data(\'show\', \'N\');\n        inputWarps.hide();\n        spanAddFilter.show();\n        btnBack.hide();\n        toggleDisplay();\n        //if (savedFiltersCount == 0) {\n        $(\'.vis-adsearchgroup1\').hide();\n        $(\'.vis-adsearchgroup2\').show();\n        drpSavedQry[0].selectedIndex = 0;\n        tblBody.empty();\n        dsAdvanceData = [];\n        txtQryName.val("");\n        //}\n      });\n      txtQryName.on("input", function () {\n        if (txtQryName.length > 0) {\n          btnOk.text(VIS.Msg.getMsg("SaveAndApply"));\n        } else {\n          btnOk.text(VIS.Msg.getMsg("Apply"));\n        }\n      });\n    }\n    ;\n    function toggleDisplay() {\n      drpColumns[0].selectedIndex = 0;\n      drpOp[0].selectedIndex = 0;\n      setControlNullValue();\n      setControlNullValue(true);\n      showFullDay(false);\n      showValue2(true);\n      chkDynamic.prop(\'checked\', false);\n      chkFullDay.prop(\'checked\', false);\n      divDynamic.hide();\n      $root.find(\'.vis-advancedSearchContentArea-down\').css(\'height\', \'calc(100% - 100px)\');\n    }\n    function unBindEvents() {\n      if (!btnCancel) return;\n      btnCancel.off("click");\n      chkDynamic.off("change");\n      drpDynamicOp.off("change");\n      drpColumns.off("change");\n      drpOp.off("change");\n      drpSavedQry.off("change");\n      tblGrid.off("click");\n      ulQryList.off("click");\n      btnSave.off("click");\n      btnDelete.off("click");\n      btnOk.off("click");\n      btnRefresh.off("click");\n    }\n    ;\n    function selectedSavedQuery(val) {\n      $self.saveQueryID = val;\n      saveChanges = false;\n      if (val && val != "-1") {\n        //setBusy(true);\n        var obj = null;\n        dsAdvanceData = MUserQuery.getQueryLines(val);\n        bindGrid(dsAdvanceData);\n        txtQryName.val(drpSavedQry.find("option:selected").text());\n        txtQryName.prop("readonly", false);\n        //setBusy(false);\n        setEnableButton(btnDelete, true);\n      } else {\n        // if nothing is selected\n        //ibtnDelQuery.Enabled = false;\n        setEnableButton(btnDelete, false); //silverlight comment\n        txtQryName.val("");\n        txtQryName.prop("readonly", true);\n        dsAdvanceData = null;\n        bindGrid(null);\n      }\n    }\n    ;\n    function fillList(dr) {\n      var html = "";\n      var html1 = "";\n      //while (dr.read()) {\n\n      //    var query = VIS.Utility.encodeText(dr.get(0));\n      //    var title = query;\n      //    if (query.length > 25) {\n      //        query = query.substr(0, 25) + "...";\n      //    }\n\n      //    html += \'<li data-value="\' + dr.get(1) + \'" title="\' + title + \'"> \' + query + \'</li>\';\n      //    html1 += \'<option value="\' + dr.get("AD_UserQuery_ID") + \'" title="\' + title + \'"> \' + query + \'</option>\';\n      //}\n\n      if (dr != null) {\n        for (var i in dr) {\n          var query = VIS.Utility.encodeText(dr[i].Name);\n          var title = query;\n          if (query.length > 25) {\n            query = query.substr(0, 25) + "...";\n          }\n          html += \'<li data-value="\' + dr[i]["Code"] + \'" title="\' + title + \'">\' + query + \'</li>\';\n          html1 += \'<option value="\' + dr[i]["AD_UserQuery_ID"] + \'" title="\' + title + \'">\' + query + \'</option>\';\n        }\n      }\n      if (html.length > 0) {\n        ulQryList.append(html);\n\n        //drpSavedQry.html("<option value=\'-1\' > </option>" + html1);   \n\n        //Commented by karan, Because if last item deleted from dropdown,\n        //then html.length is 0 and our dropdown doesn\'t get refreshed.. hence plased his code outside of check...\n      }\n      drpSavedQry.html("<option value=\'-1\' > </option>" + html1);\n    }\n    ;\n\n    /* show hide Dynamic div area */\n    function setDynamicQryControls(isUser) {\n      var index = drpDynamicOp[0].selectedIndex;\n      if (isUser) {\n        divYear.hide();\n        divMonth.hide();\n        divDay.hide();\n        return;\n      }\n      divYear.show();\n      divMonth.show();\n      if (chkDynamic.is(\':checked\')) {\n        divDay.show();\n      } else {\n        divDay.hide();\n      }\n      txtDay.prop("readonly", false);\n      txtMonth.prop("min", 1);\n      if (index == 3 || index == 6) {\n        txtMonth.prop("min", 0);\n        txtDay.val(0);\n        txtMonth.val(0);\n        txtYear.val(1);\n      } else if (index == 2 || index == 5) {\n        divYear.hide();\n        txtYear.val("");\n        txtMonth.val(1);\n        txtDay.val(0);\n      } else if (index == 1 || index == 4) {\n        divYear.hide();\n        divMonth.hide();\n        txtDay.val(0);\n      } else if (index == 0) {\n        txtDay.prop("readonly", true);\n        divYear.hide();\n        divMonth.hide();\n        txtDay.val(0);\n        //divDay.hide();\n      }\n    }\n    ;\n    function getIsDyanamicVisible() {\n      return divDay.is(\':visible\') || divYear.is(\':visible\') || divDay.is(\':visible\');\n    }\n    ;\n    function getDynamicText(index) {\n      var text = "";\n      var timeUnit;\n      if (index == 3 || index == 6) {\n        timeUnit = Math.round(getTotalDays(index) / 365, 1);\n        text = "Last " + timeUnit.toString() + " Years";\n      } else if (index == 2 || index == 5) {\n        timeUnit = Math.round(getTotalDays(index) / 31, 1);\n        text = "Last " + timeUnit.toString() + " Month";\n      } else {\n        if (getTotalDays() != 0) {\n          text = "Last " + getTotalDays() + " Days";\n        } else {\n          text = "This Day";\n        }\n      }\n      return text;\n    }\n    ;\n    function getDynamicValue(index) {\n      var text = "";\n      text = " adddays(sysdate, - " + getTotalDays(index) + ") ";\n      return text;\n    }\n    ;\n    function getTotalDays(index) {\n      var totasldays = 0;\n      if (index == 3 || index == 6) {\n        var y = txtYear.val(),\n          m = txtMonth.val(),\n          d = txtDay.val();\n        y = y && y != "" ? parseInt(y) : 0;\n        m = m && m != "" ? parseInt(m) : 0;\n        d = d && d != "" ? parseInt(d) : 0;\n        totasldays = y * 365 + m * 31 + d;\n      } else if (index == 2 || index == 5) {\n        var m = txtMonth.val(),\n          d = txtDay.val();\n        m = m && m != "" ? parseInt(m) : 0;\n        d = d && d != "" ? parseInt(d) : 0;\n        totasldays = m * 31 + d;\n      } else {\n        var d = d = txtDay.val();\n        d = d && d != "" ? parseInt(d) : 0;\n        totasldays = d;\n      }\n      return totasldays;\n    }\n    ;\n    function setValueEnabled(isEnabled) {\n      // get control\n      var ctrl = divValue1.children()[1];\n      var btn = null;\n      if (divValue1.children().length > 2) btn = divValue1.children()[2];\n      if (btn) $(btn).prop("disabled", !isEnabled).prop("readonly", !isEnabled);else if (ctrl != null) {\n        $(ctrl).prop("disabled", !isEnabled).prop("readonly", !isEnabled);\n      }\n    }\n    ;\n    function setValue2Enabled(isEnabled) {\n      var ctrl = divValue2.children()[1];\n      var btn = null;\n      if (divValue2.children().length > 2) btn = divValue2.children()[2];\n      if (btn) $(btn).prop("disabled", !isEnabled).prop("readonly", !isEnabled);else if (ctrl != null) {\n        $(ctrl).prop("disabled", !isEnabled).prop("readonly", !isEnabled);\n      }\n    }\n    ;\n\n    /*\r\n    *   Show OR Hide QueryTo value \r\n    *   Added By Karan\r\n    */\n    function showValue2(show) {\n      divValue2.css("display", show ? "block" : "none");\n    }\n    ;\n\n    /*\r\n    *   Show OR Hide Full Day value\r\n    *   Visible only if Column is of datetime time and operator is EQUAL\r\n    *   Added By Karan\r\n    */\n    function showFullDay(show) {\n      divFullDay.css(\'display\', show ? "flex" : "none");\n    }\n    ;\n\n    /*\r\n    *   Set Enable or disable full day icon\r\n    *   Added By Karan\r\n    */\n    function setEnabledFullDay(enable) {\n      if (enable) {\n        chkFullDay.prop(\'disabled\', true);\n      } else {\n        chkFullDay.prop(\'disabled\', false);\n      }\n    }\n    ;\n\n    //function setFullDayState(state)\n    //{\n    //    if (state) {\n    //        chkFullDay.prop("checked", true)\n    //    }\n    //    else {\n    //        chkFullDay.prop("checked", false);\n    //    }\n    //}\n\n    function setEnableButton(btn, isEnable) {\n      btn.prop("disabled", !isEnable);\n    }\n    ;\n    function setControl(isValue1, field) {\n      // set column and row position\n      /*****Get control form specified column and row from Grid***********/\n      if (isValue1) control1 = null;\n      control2 = null;\n      var ctrl = null;\n      var ctrl2 = null;\n      if (isValue1) {\n        ctrl = divValue1.children()[1];\n        if (divValue1.children().length > 2) ctrl2 = divValue1.children()[2];\n      } else {\n        ctrl = divValue2.children()[1];\n        if (divValue2.children().length > 2) ctrl2 = divValue2.children()[2];\n      }\n\n      //var eList = from child in tblpnlA.Children\n      //where Grid.GetRow((FrameworkElement)child) == row && Grid.GetColumn((FrameworkElement)child) == col\n      //select child;\n\n      //Remove any elements in the list\n      if (ctrl != null) {\n        $(ctrl).remove();\n        if (ctrl2 != null) $(ctrl2).remove();\n        ctrl = null;\n      }\n      /**********************************/\n      var crt = null;\n      // if any filed is given\n      if (field != null) {\n        // if field id any key, then show number textbox \n        if (field.getIsKey()) {\n          crt = new VIS.Controls.VNumTextBox(field.getColumnName(), false, false, true, field.getDisplayLength(), field.getFieldLength(), field.getColumnName());\n        } else {\n          crt = VIS.VControlFactory.getControl(null, field, true, true, false);\n        }\n      } else {\n        // if no field is given show an empty disabled textbox\n        crt = new VIS.Controls.VTextBox("columnName", false, true, false, 20, 20, "format", "GetObscureType", false); // VAdvantage.Controls.VTextBox.TextType.Text, DisplayType.String);\n      }\n      if (crt != null) {\n        //crt.SetIsMandatory(false);\n        crt.setReadOnly(false);\n        if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n          crt.hideButton(false);\n          crt.setReadOnlyTextbox(false);\n        }\n        if (VIS.DisplayType.Text == field.getDisplayType() || VIS.DisplayType.TextLong == field.getDisplayType()) {\n          crt.getControl().attr("rows", "1");\n          crt.getControl().css("width", "100%");\n        } else if (VIS.DisplayType.YesNo == field.getDisplayType()) {\n          crt.getControl().css("clear", "both");\n        } else if (VIS.DisplayType.IsDate(field.getDisplayType())) {\n          crt.getControl().css("line-height", "1");\n        }\n        var btn = null;\n        if (crt.getBtnCount() > 0 && !(crt instanceof VIS.Controls.VComboBox)) btn = crt.getBtn(0);\n        if (isValue1) {\n          divValue1.append(crt.getControl());\n          control1 = crt;\n          if (btn) {\n            divValue1.append(btn);\n            crt.getControl().css("width", "calc(100% - 30px)");\n            btn.css("max-width", "30px");\n          }\n        } else {\n          divValue2.append(crt.getControl());\n          control2 = crt;\n          if (btn) {\n            divValue2.append(btn);\n            crt.getControl().css("width", "calc(100% - 30px)");\n            btn.css("max-width", "30px");\n          }\n        }\n        if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n          crt.getControl().css("width", "100%");\n        }\n      }\n    }\n    ;\n    function bindGrid(list) {\n      tblBody.empty();\n      var html = "";\n      var htm = "",\n        obj = null;\n      if (list) {\n        for (var i = 0, j = list.length; i < j; i++) {\n          htm = \'<tr class="vis-advancedSearchTableRow">\';\n          obj = list[i];\n          htm += \'<td>\' + obj["KEYNAME"] + \'</td><td style="display:none">\' + obj["KEYVALUE"] + \'</td><td>\' + obj["OPERATORNAME"] + \'</td><td>\' + obj["VALUE1NAME"] + \'</td><td style="display:none">\' + obj["VALUE1VALUE"] + \'</td><td>\' + obj["VALUE2NAME"] + \'</td><td style="display:none">\' + obj["VALUE2VALUE"] + \'</td><td>\' + obj["FULLDAY"] + \'</td><td style="display:none">\' + obj["AD_USERQUERYLINE_ID"] + \'</td><td style="display:none">\' + obj["OPERATOR"] + \'</td><td><i style="cursor:pointer" data-userQuery="\' + obj["AD_USERQUERYLINE_ID"] + \'" data-index = "\' + i + \'" class="vis vis-delete"></i></td>\';\n          htm += \'</tr>\';\n          html += htm;\n        }\n      }\n      tblBody.html(html);\n    }\n    ;\n\n    /* get total number of record */\n    function getNoOfRecords(query, alertZeroRecords) {\n      // make query\n      var sqlSelect = "SELECT COUNT(*) FROM ";\n      // sqlSelect += tableName;\n      var sql = tableName;\n      var hasWhere = false;\n      // add where clause if already exists\n      if (whereExtended != null && whereExtended.length > 0) {\n        if (whereExtended.indexOf("@") == -1) {\n          sql += " WHERE " + whereExtended;\n        } else {\n          sql += " WHERE " + VIS.Env.parseContext(VIS.context, windowNo, whereExtended, false);\n        }\n        hasWhere = true;\n      }\n      // if user has given any query\n      if (query != null && query.getIsActive()) {\n        // if where clause is started, then add "AND"\n        if (hasWhere) {\n          sql += " AND ";\n        }\n        // add "WHERE"\n        else {\n          sql += " WHERE ";\n        }\n        sql += VIS.Env.parseContext(VIS.context, windowNo, query.getWhereClause(true), false);\n      }\n      //\tAdd Access\n      var finalSQL = VIS.MRole.getDefault().addAccessSQL(sqlSelect + sql.toString(), tableName, VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO);\n      // finalSQL = VIS.Env.parseContext(VIS.context, windowNo, finalSQL, false);\n\n      // VIS.context.setContext(windowNo, TABNO, "FindSQL", finalSQL);\n\n      //  Execute Query\n      total = 999999;\n\n      //System.Threading.ThreadPool.QueueUserWorkItem(delegate\n      //{\n      //    try\n      //    {\n      //        //_total = int.Parse(ExecuteQuery.ExecuteScalar(finalSQL));\n      //        _total = DataBase.DB.GetSQLValue(null, finalSQL, null);\n      //    }\n      //    catch (Exception ex)\n      //    {\n      //        log.Log(Level.SEVERE, finalSQL, ex);\n      //    }\n      //    System.Windows.Deployment.Current.Dispatcher.BeginInvoke(() => GetTotal(_total, query, alertZeroRecords));\n\n      //});\n      try {\n        //total = VIS.DB.executeScalar(finalSQL, null);\n\n        var _sql = VIS.secureEngine.encrypt(finalSQL);\n        total = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ASearch/GetNoOfRecrds", {\n          "RecQuery": _sql\n        }, null);\n      } catch (ex) {\n        log.Log(VIS.Level.SEVERE, finalSQL, ex);\n      }\n      var role = VIS.MRole.getDefault();\n      //\tNo Records\n      $self.okPressed = false;\n      if (total == 0 || total == null) {\n        total = 0;\n        if (alertZeroRecords) {\n          VIS.ADialog.info("FindZeroRecords", true, "");\n        }\n      }\n      //\tMore then allowed\n      else if (query != null && role.getIsQueryMax(total)) {\n        VIS.ADialog.error("FindOverMax", true, total + " > " + role.getMaxQueryRecords()); //silverlight\n        //MessageBox.Show("FindZeroRecords " + _total + " > " + role.GetMaxQueryRecords());\n      } else {\n        $self.okPressed = true;\n        //log.Config("#" + _total);\n      }\n      // show query\'s where clause on status bar\n      if (query != null) {\n        //CommonFunctions.ShowMessage(query.GetWhereClause(), lblStatusBar);\n      }\n      return total;\n    }\n    ;\n    function setStatusDB(currentCount) {\n      var text = " " + currentCount + " / " + total + " ";\n      // show records on status bar\n      txtStatus.text(text);\n      if (total < minRecord) {\n        isLoadError = true;\n        return;\n      }\n    }\n    ;\n    function getTargetMField(columnName) {\n      // if no column name, then return null\n      if (columnName == null || columnName.length == 0) return null;\n      // else find field for the given column\n      for (var c = 0; c < findFields.length; c++) {\n        var field = findFields[c];\n        if (columnName.equals(field.getColumnName())) return field;\n      }\n      return null;\n    }\n    ;\n    addRow;\n    function saveRowTemp() {\n      // set column name\n\n      var cVal = drpColumns.val();\n      if (!cVal || cVal == "-1") {\n        colValue = -1;\n        return false;\n      }\n      var colName = drpColumns.find("option:selected").text();\n      var colValue = "";\n      if (colName == null || colName.trim().length == 0) {\n        return false;\n      } else {\n        // set column value\n        colValue = cVal.toString();\n      }\n      saveChanges = true;\n      var dCheck = chkDynamic.prop("checked");\n      if (dCheck) {\n        if (getIsDyanamicVisible()) {\n          var opValueD = ">=";\n          var opNameD = " >= ";\n          var controlText = getDynamicText(drpDynamicOp[0].selectedIndex);\n          var controlValue = getDynamicValue(drpDynamicOp[0].selectedIndex);\n          addRow(colName, colValue, opNameD, opValueD, controlText, controlValue, null, null, getFullDay());\n        } else {\n          var opValueD = "=";\n          var opNameD = " = ";\n          var controlText = drpDynamicOp.find("option:selected").text();\n          var controlValue = drpDynamicOp.val();\n          addRow(colName, colValue, opNameD, opValueD, controlText, controlValue, null, null, getFullDay());\n        }\n      } else {\n        // set operator name\n        var opName = drpOp.val();\n        if (drpOp[0].selectedIndex > -1) opName = drpDynamicOp.find("option:selected").text();\n        ;\n        ; // vcmbOperator.Text;//silverlight comment\n        // set operator (sign)\n        var opValue = drpOp.val();\n        // add row in dataset\n        addRow(colName, colValue, opName, opValue, getControlText(true), getControlValue(true), getControlText(false), getControlValue(false), getFullDay());\n      }\n      //reset column & operator comboBox\n      txtQryName.prop("readonly", false);\n      toggleDisplay();\n      savedFiltersCount++;\n      if (inputWarps && inputWarps.data(\'show\') == "Y") {\n        inputWarps.data(\'show\', \'N\');\n        inputWarps.hide();\n        spanAddFilter.show();\n        btnBack.hide();\n        $(\'.vis-adsearchgroup2\').hide();\n        $(\'.vis-adsearchgroup1\').show();\n      }\n      return true;\n    }\n    ;\n\n    /* Gets control\'s value*/\n\n    function getControlValue(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(2, 1);\n        crtlObj = control1;\n      } else {\n        //  crtlObj = (IControl)tblpnlA2.GetControlFromPosition(3, 1);\n        crtlObj = control2;\n      }\n      // if control exists\n      if (crtlObj != null) {\n        // if control is any checkbox\n        if (crtlObj.getDisplayType() == VIS.DisplayType.YesNo) {\n          if (crtlObj.getValue().toString().toLowerCase() == "true") {\n            return "Y";\n          } else {\n            return "N";\n          }\n        }\n        // return control\'s value\n        if (crtlObj.displayType == VIS.DisplayType.AmtDimension) {\n          return crtlObj.getText();\n        } else {\n          return crtlObj.getValue();\n        }\n      }\n      return "";\n    }\n    ;\n\n    /* <param name="isValue1">true if get control\'s text at value1 position else false</param>\r\n     */\n    function getControlText(isValue1) {\n      var crtlObj = null;\n      // get control\n      if (isValue1) {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(2, 1);\n        crtlObj = control1;\n      } else {\n        // crtlObj = (IControl)tblpnlA2.GetControlFromPosition(3, 1);\n        crtlObj = control2;\n      }\n      // if control exists\n      if (crtlObj != null) {\n        // get control\'s text\n\n        if (crtlObj.displayType == VIS.DisplayType.AmtDimension) {\n          return crtlObj.getText();\n        } else {\n          return crtlObj.getDisplay();\n        }\n      }\n      return "";\n    }\n    ;\n    function getFullDay() {\n      if (chkFullDay) {\n        return chkFullDay.is(\':checked\') ? \'Y\' : \'N\';\n      }\n    }\n    ;\n    function addRow(colName, colValue, optr, optrName, value1Name, value1Value, value2Name, value2Value, fullDay) {\n      if (dsAdvanceData == null) dsAdvanceData = [];\n      var obj = {};\n      obj["KEYNAME"] = colName;\n      //dsAdvanceData.Tables[0].Columns.Add(dc);\n      obj["KEYVALUE"] = colValue;\n      obj["OPERATORNAME"] = optrName;\n      obj["VALUE1NAME"] = VIS.Utility.encodeText(value1Name);\n      obj["FULLDAY"] = fullDay;\n      if (value1Name == "") obj["VALUE1VALUE"] = "";else {\n        if (value1Value == null) obj["VALUE1VALUE"] = "NULL";else obj["VALUE1VALUE"] = VIS.Utility.encodeText(VIS.Utility.Util.getValueOfString(value1Value));\n      }\n      obj["VALUE2NAME"] = VIS.Utility.encodeText(value2Name);\n      if (value2Value == null) obj["VALUE2VALUE"] = "NULL";else obj["VALUE2VALUE"] = VIS.Utility.encodeText(VIS.Utility.Util.getValueOfString(value2Value));\n      obj["AD_USERQUERYLINE_ID"] = 0;\n      obj["OPERATOR"] = optr;\n      dsAdvanceData.push(obj);\n      bindGrid(dsAdvanceData); //for the time beeing commented today 3Dec.2010\n    }\n    ;\n    function setControlNullValue(isValue2) {\n      var crtlObj = null;\n      if (isValue2) {\n        crtlObj = control2;\n      } else {\n        crtlObj = control1;\n      }\n\n      // if control exists\n      if (crtlObj != null) {\n        crtlObj.setValue(null);\n      }\n    }\n    ;\n    function getQueryAdvanced() {\n      var _query = new VIS.Query(tableName);\n      // check if dataset have any table\n      // for every row in dataset\n      if (dsAdvanceData) {\n        for (var i = 0; i < dsAdvanceData.length; i++) {\n          var dtRowObj = dsAdvanceData[i];\n          //\tColumn\n          var infoName = dtRowObj["KEYNAME"].toString();\n          var columnName = dtRowObj["KEYVALUE"].toString();\n          var field = getTargetMField(columnName);\n          var columnSQL = field.getColumnSQL(); //\n\n          //\tOperator\n          var optr = dtRowObj["OPERATORNAME"].toString(); //dtRowObj["OPERATOR"].ToString()\n          //\tValue\n\n          var value = dtRowObj["VALUE1VALUE"];\n          var parsedValue = null;\n          if (value != null && value.toString().trim().startsWith("adddays") || value.toString().trim().startsWith("@")) {\n            ;\n          } else {\n            parsedValue = parseValue(field, value);\n          }\n          //string infoDisplay = dtRowObj["VALUE1NAME"].ToString();\n          var infoDisplay = null;\n          if (value == null || value.toString().length < 1) {\n            if (VIS.Query.prototype.BETWEEN.equals(optr)) continue; //\tno null in between\n            parsedValue = VIS.Env.NULLString;\n            infoDisplay = "NULL";\n          } else {\n            infoDisplay = dtRowObj["VALUE1NAME"].toString();\n          }\n          var fullDay = dtRowObj["FULLDAY"].toString();\n          if (field.getIsVirtualColumn()) {\n            columnSQL = field.vo.ColumnSQL;\n            columnName = field.vo.ColumnSQL;\n            if (VIS.Query.prototype.BETWEEN.equals(optr)) {\n              var value2 = dtRowObj["VALUE2VALUE"].toString();\n              if (value2 == null || value2.toString().trim().length < 1) continue;\n              var parsedValue2 = parseValue(field, value2);\n              var infoDisplay_to = dtRowObj["VALUE2NAME"].toString();\n              if (parsedValue2 == null) continue;\n\n              //var Where = "UPPER( " + columnName + ") BETWEEN UPPER(\'" + parsedValue + "\') AND UPPER(\'" + parsedValue2 + "\')";\n\n              var Where = createDirectSql(parsedValue, parsedValue2, columnName, optr, true, true);\n              where = VIS.Env.parseContext(VIS.context, windowNo, Where, false);\n              _query.addRestriction(Where);\n            } else {\n              //var Where = columnName + optr + value;\n\n              var Where = createDirectSql(parsedValue, parsedValue2, columnName, optr, true, true);\n              where = VIS.Env.parseContext(VIS.context, windowNo, Where, false);\n              _query.addRestriction(Where);\n            }\n          } else {\n            var tabName = "C_DimAmt";\n            var isAct = "IsActive";\n            var amt = "Amount";\n            var S = "S";\n            var E = "E";\n            var L = "L";\n            var elt = "ECT";\n            var F = "F";\n            var R = "R";\n            var OM = "OM";\n            var WH = "WH";\n            if (field.getDisplayType() == VIS.DisplayType.DateTime && VIS.Query.prototype.EQUAL.equals(optr) && parsedValue && fullDay == \'Y\') {\n              var yearr = parsedValue.getFullYear();\n              var month = parsedValue.getMonth();\n              var date = parsedValue.getDate();\n              parsedValue2 = new Date(yearr, month, date, 24, 0, 0);\n              parsedValue = new Date(yearr, month, date, 0, 0, 0);\n              dtRowObj["VALUE2VALUE"] = parsedValue2.toUTCString();\n              optr = VIS.Query.prototype.BETWEEN;\n            }\n\n            //\tValue2\n            // if "BETWEEN" selected\n            if (VIS.Query.prototype.BETWEEN.equals(optr)) {\n              var value2 = dtRowObj["VALUE2VALUE"].toString();\n              if (value2 == null || value2.toString().trim().length < 1) continue;\n              if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n                var sqlAmount = S + E + L + elt + " " + tabName + "_ID " + F + R + OM + " " + tabName + " " + WH + E + R + E + " " + isAct + "=\'Y\' AND " + amt + " " + optr + value + " AND " + value2;\n                parsedValue = VIS.MRole.getDefault().addAccessSQL(sqlAmount.toString(), "C_DimAmt", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO);\n                optr = VIS.Query.prototype.IN;\n              }\n              if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n                var Where = createDirectSql(parsedValue, parsedValue2, columnSQL, optr, false, false);\n                where = VIS.Env.parseContext(VIS.context, windowNo, Where, false);\n                _query.addRestriction(Where);\n              } else {\n                var parsedValue2 = parseValue(field, value2);\n                var infoDisplay_to = dtRowObj["VALUE2NAME"].toString();\n                if (parsedValue2 == null) continue;\n                // else add restriction where clause to query with between operator\n                _query.addRangeRestriction(columnSQL, parsedValue, parsedValue2, infoName, infoDisplay, infoDisplay_to);\n              }\n            } else {\n              // else add simple restriction where clause to query\n\n              if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n                var sqlAmount = S + E + L + elt + " " + tabName + "_ID " + F + R + OM + " " + tabName + " " + WH + E + R + E + " " + isAct + "=\'Y\' AND " + amt + " " + optr + value;\n                parsedValue = VIS.MRole.getDefault().addAccessSQL(sqlAmount.toString(), "C_DimAmt", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO);\n                optr = VIS.Query.prototype.IN;\n              }\n              if (parsedValue == null && value != null && (value.toString().trim().startsWith("adddays") || value.toString().trim().startsWith("@"))) {\n                var Where = tableName + "." + columnName + optr + value;\n                if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n                  Where = columnName + VIS.Query.prototype.IN + \'(\' + parsedValue + \')\';\n                }\n                where = VIS.Env.parseContext(VIS.context, windowNo, Where, false);\n                _query.addRestriction(Where);\n              } else {\n                if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n                  var Where = createDirectSql(parsedValue, parsedValue2, columnSQL, optr, false, false);\n                  where = VIS.Env.parseContext(VIS.context, windowNo, Where, false);\n                  _query.addRestriction(Where);\n                } else {\n                  _query.addRestriction(columnSQL, optr, parsedValue, infoName, infoDisplay);\n                }\n              }\n            }\n          }\n        }\n      }\n      return _query;\n    }\n    ;\n    function createDirectSql(code, code_to, column, operator, convertToString, isVirtualCol) {\n      var sb = "";\n      var isoDateRegx = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})/;\n      if (typeof code == "string") {\n        sb += " UPPER( ";\n      }\n      if (!isVirtualCol) sb += tableName + ".";\n      sb += column;\n      if (typeof code == "string") {\n        sb += " ) ";\n      }\n      if (code == null || "NULL".equals(code.toString().toUpper()) || "NullValue".toUpper().equals(code.toString().toUpper())) {\n        if (operator.equals(VIS.Query.prototype.EQUAL)) sb += " IS NULL ";else sb += " IS NOT NULL ";\n      } else {\n        sb += operator;\n        if (VIS.Query.prototype.IN.equals(operator) || VIS.Query.prototype.NOT_IN.equals(operator)) {\n          sb += "(";\n        }\n        if (code instanceof Date || code && isoDateRegx.test(code.toString())) {\n          //  endsWith(\'Z\') && this.code.toString().contains(\'T\')))) {\n          sb += VIS.DB.to_date(tcode, false);\n        } else if ("string" == typeof code) {\n          if (convertToString) {\n            sb += " UPPER( ";\n            sb += VIS.DB.to_string(code.toString());\n            sb += " ) ";\n          } else {\n            sb += code.toString();\n          }\n        } else sb += code;\n\n        //\tBetween\n        if (VIS.Query.prototype.BETWEEN.equals(operator)) {\n          //\tif (Code_to != null && InfoDisplay_to != null)\n          sb += " AND ";\n          if (code_to instanceof Date || code_to && isoDateRegx.test(code_to.toString())) {\n            //  endsWith(\'Z\') ||  this.code.toString().contains(\'T\')))) {\n            sb += VIS.DB.to_date(code_to, false);\n          } else if (typeof code_to == "string") {\n            sb += " UPPER( ";\n            sb += VIS.DB.to_string(code_to.toString());\n            sb += " ) ";\n          } else sb += code_to;\n        } else if (VIS.Query.prototype.IN.equals(operator) || VIS.Query.prototype.NOT_IN.equals(operator)) sb += ")";\n      }\n      return sb;\n    }\n    ;\n    function parseValue(field, pp) {\n      if (pp == null) return null;\n      var dt = field.getDisplayType();\n      var inStr = pp.toString();\n      if (inStr == null || inStr.equals(VIS.Env.NULLString) || inStr == "" || inStr.toUpper() == "NULL") return null;\n      try {\n        //\tReturn Integer\n        if (dt == VIS.DisplayType.Integer || VIS.DisplayType.IsID(dt) && field.getColumnName().endsWith("_ID")) {\n          //i = int.Parse(inStr);\n          return parseInt(inStr);\n          // return i;\n        }\n        //\tReturn BigDecimal\n        else if (VIS.DisplayType.IsNumeric(dt)) {\n          return parseFloat(inStr); //DisplayType.GetNumberFormat(dt).GetFormatedValue(inStr);\n        }\n        //\tReturn Timestamp\n        else if (VIS.DisplayType.IsDate(dt)) {\n          var time = "";\n          try {\n            return new Date(inStr);\n          } catch (e) {\n            //log.Log(Level.WARNING, inStr + "(" + inStr.GetType().FullName + ")" + e);\n            time = ""; //DisplayType.GetDateFormat(dt).Format(inStr);\n          }\n          try {\n            return Date.Parse(time);\n          } catch (ee) {\n            return null;\n          }\n        }\n      } catch (ex) {\n        //     log.Log(Level.WARNING, "Object=" + inStr, ex);\n        var error = ex.message;\n        if (error == null || error.length == 0) error = ex.toString();\n        var errMsg = "";\n        errMsg += field.getColumnName() + " = " + inStr + " - " + error;\n        //\n        //if(pp != null && pp.ToString().Trim().StartsWith("adddays") || pp.ToString().Trim().StartsWith("adddays")\n        VIS.ADialog.error("ValidationError", true, errMsg.toString());\n        //MessageBox.Show("ValidationError " + errMsg.ToString());\n        return null;\n      }\n      return inStr;\n    }\n    ; //\tparseValue\n\n    function saveAdvanced() {\n      // save all query lines temporarily\n\n      setBusy(true);\n      saveRowTemp(); //\tunsaved \n      // get query\n      query = getQueryAdvanced();\n      if (query.getRestrictionCount() == 0) {\n        setBusy(false);\n        ch.close();\n        return;\n      }\n\n      // get where clause\n      var where = query.getWhereClause(true);\n      // get query name entered by the user\n      var name = VIS.Utility.encodeText(txtQryName.val()); // vtxtQueryName.Text.Trim();\n      if (name != null && name.trim().length == 0) name = null;else $self.needRefreshWindow = true;\n\n      // get the selected value\n      var value = drpSavedQry.val(); // vcmbQueryA.SelectedValue;\n      var s = ""; // vcmbQueryA.Text;//silverlight comment\n      //\tUpdate Existing Query\n      var qMessage = "";\n      value = value != null && value.toString() != "-1" && parseInt(value) > 0 ? value : 0;\n      window.setTimeout(function () {\n        if (value != 0 || name != null) {\n          if (MUserQuery.insertOrUpdate(value, name, where, AD_Tab_ID, AD_Table_ID, dsAdvanceData, $self.getID)) {\n            isSaveError = false;\n            //ShowMessage.Info("Updated", true, uq.GetName(), "");\n            qMessage = value > 0 ? "Updated" : "Saved";\n            $self.saveQueryID = MUserQuery.id;\n          } else {\n            if (MUserQuery.alreadyExist) {\n              VIS.ADialog.error("SearchExist");\n              setBusy(false);\n              isSaveError = true;\n              return;\n            } else {\n              isSaveError = true;\n              //ShowMessage.Info("Updated", true, uq.GetName(), "");\n              qMessage = value > 0 ? "UpdatedError" : "SaveError";\n            }\n          }\n        }\n        var result = false;\n        if (getNoOfRecords(query, true) != 0) {\n          result = true;\n        }\n        setBusy(false);\n        if (qMessage != "") {\n          //MessageBox.Show(qMessage);\n          VIS.ADialog.info("", true, VIS.Msg.getMsg(qMessage) + " " + name, null);\n        }\n        if (result) {\n          ch.close();\n        }\n      }, 10);\n    }\n    ;\n    function setBusy(busy) {\n      isBusy = busy;\n      $busy.css("visibility", isBusy ? "visible" : "hidden");\n      btnOk.prop("disabled", busy);\n      btnCancel.prop("disabled", busy);\n      btnRefresh.prop("disabled", busy);\n    }\n    ;\n    this.getID = function (id) {\n      this.saveQueryID = id;\n    };\n    this.getSavedID = function (id) {\n      return this.saveQueryID;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setHeight(550);\n      ch.setWidth(860);\n      ch.setTitle(VIS.Msg.getMsg("Find"));\n      ch.setModal(true);\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        //$self.okBtnPressed = false;\n        if ($self.onClose) $self.onClose();\n        $self.dispose();\n      };\n      ch.show();\n      ch.setContent($root);\n      ch.hideButtons();\n      setBusy(false);\n      btnCancel.focus();\n      //$root.focus();\n      //$root.css(\'border\', \'1px solid white\');\n\n      //window.setTimeout(function () {\n      //    $(document).on(\'keydown\', function (e) {\n      //        console.log(\'1\');\n      //        e.preventDefault();\n      //        e.stopPropagation();\n      //        return;\n      //    });\n      //}, 100);\n\n      //  bindEvents();\n    };\n    this.getSavedQueryName = function () {\n      if (txtQryName.val()) {\n        return VIS.Utility.encodeText(txtQryName.val());\n      } else {\n        return "";\n      }\n    };\n    this.getQuery = function () {\n      var role = VIS.MRole.getDefault();\n      if (role.getIsQueryMax(total)) {\n        query = VIS.Query.prototype.getNoRecordQuery(tableName, false);\n        total = 0;\n        log.warning("Query - over max");\n      } else log.info("Query=" + query);\n      return query;\n    };\n    this.disposeComponent = function () {\n      unBindEvents();\n      btnOk = btnCancel = btnDelete = btnSave = btnRefresh = null;\n      txtQryName = drpSavedQry = drpColumns = drpOp = drpDynamicOp = chkDynamic = txtYear = txtMonth = txtDay = null;\n      ulQryList = divDynamic = divYear = divMonth = divDay = null;\n      if ($root) $root.remove();\n      $root = null;\n      total = isLoadError = isSaveError = null;\n      dsAdvanceData = null;\n      log = null;\n      this.created = this.days = 0, this.okPressed = this.okBtnPressed = null;\n      control1 = control2 = ulListStaticHtml = null;\n      query = null;\n    };\n  }\n  ;\n  Find.prototype.getOperatorsQuery = function (vnpObj, translate) {\n    var html = "";\n    var val = "";\n    for (var p in vnpObj) {\n      val = vnpObj[p];\n      if (translate) val = VIS.Msg.getMsg(val);\n      html += \'<option value="\' + p + \'">\' + val + \'</option>\';\n    }\n    return html;\n  };\n  Find.prototype.getIsUserColumn = function (columnName) {\n    if (columnName.endsWith("atedBy") || columnName.equals("AD_User_ID")) return true;\n    if (columnName.equals("SalesRep_ID")) return true;\n    return false;\n  };\n  Find.prototype.getCurrentDays = function () {\n    return this.days;\n  };\n  Find.prototype.getIsCreated = function () {\n    return this.created;\n  };\n  Find.prototype.getIsOKPressed = function () {\n    return this.okPressed && this.okBtnPressed;\n  };\n  Find.prototype.needRefresh = function () {\n    return this.needRefreshWindow;\n  };\n  Find.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.Find = Find;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/find.js?')},"./Areas/VIS/Scripts/app/Framework/genralattributeform.js":()=>{eval(';\n(function (VIS, $) {\n  // GenralAttributeForm form declraion for constructor class\n  function GenralAttributeForm(M_AttributeSetInstance_ID, VADMS_AttributeSet_ID, windowNoP, searchP, canSaveRecord, fromDMS) {\n    this.onClose = null;\n    var $self = this;\n    var $root = $("<div>");\n    // var $busyDiv = $("<div class=\'vis-apanel-busy\'>")\n    this.log = VIS.Logging.VLogger.getVLogger("GenralAttributeForm");\n    var windowNo = VIS.Env.getWindowNo();\n    var mAttributeSetInstanceId = null;\n    var mAttributeSetInstanceName = null;\n    var cBPartnerId = null;\n    var windowNoParent = windowNoP;\n    var vadms_AttributeSet_ID = 0;\n    var changed = false;\n    var INSTANCE_VALUE_LENGTH = 40;\n    var genAttSetInstance = null;\n    var dms = fromDMS;\n    var attributesList = {};\n    var search = false;\n    var Okbtn = null;\n    var cancelbtn = null;\n    var btnSelect = null;\n    var controlList = null;\n    this.log.config("C_GenAttributeSetInstance_ID=" + M_AttributeSetInstance_ID);\n\n    //constructor load\n    mAttributeSetInstanceId = M_AttributeSetInstance_ID;\n    vadms_AttributeSet_ID = VADMS_AttributeSet_ID;\n    dms = fromDMS;\n    search = searchP;\n    init();\n    function init() {\n      $.ajax({\n        url: VIS.Application.contextUrl + "GenralAttribute/Load",\n        dataType: "json",\n        async: false,\n        data: {\n          mAttributeSetInstanceId: mAttributeSetInstanceId,\n          vadms_AttributeSet_ID: vadms_AttributeSet_ID,\n          windowNo: windowNo\n        },\n        success: function (data) {\n          returnValue = data.result;\n          VIS.Env.getCtx().setContext(windowNo, "C_GenAttributeSet_ID", vadms_AttributeSet_ID);\n          if (returnValue.Error != null) {\n            VIS.ADialog.error(returnValue.Error, null, null, null);\n            return;\n          }\n          //load div\n          $root.html(returnValue.tableStucture);\n          controlList = returnValue.ControlList.split(\',\');\n        }\n      });\n    }\n    ;\n\n    //initialize control varibales after load from root\n    //Find Fontrols\n    Okbtn = $root.find("#btnOk_" + windowNo);\n    cancelbtn = $root.find("#btnCancel_" + windowNo);\n    if (canSaveRecord) {\n      Okbtn.attr(\'disabled\', false);\n      Okbtn.css(\'opacity\', \'1\');\n    } else {\n      Okbtn.attr(\'disabled\', true);\n      Okbtn.css(\'opacity\', \'0.6\');\n    }\n\n    //check Arebic Calture\n    if (VIS.Application.isRTL) {\n      //Okbtn.css("margin-right", "-132px");\n      cancelbtn.css("margin-right", "10px");\n    }\n    this.btnSelect = $root.find("#btnSelect_" + windowNo);\n    this.txtDescription = $root.find("#txtDescription_" + windowNo);\n\n    //Control that genrate run time get for first attribute\n\n    function saveSelection() {\n      //get all controls values into it\n      var lst = [];\n      for (var i = 0; i < controlList.length; i++) {\n        var cntrl = $root.find("#" + controlList[i]);\n        if (controlList[i].toString().contains("cmb")) {\n          lst.push({\n            \'Key\': Number(cntrl.find(\'option:selected\').val()),\n            \'Name\': cntrl.find(\'option:selected\').text()\n          });\n        } else {\n          lst.push({\n            \'Key\': 0,\n            \'Name\': VIS.Utility.decodeText(cntrl.val())\n          });\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "GenralAttribute/Save",\n        type: "POST",\n        dataType: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify({\n          windowNoParent: windowNoParent,\n          mAttributeSetInstanceId: mAttributeSetInstanceId,\n          vadms_AttributeSet_ID: vadms_AttributeSet_ID,\n          windowNo: windowNo,\n          lst: lst\n        }),\n        success: function (data) {\n          returnValue = data.result;\n          if ($self.onClose) {\n            $self.onClose(returnValue.M_AttributeSetInstance_ID, returnValue.M_AttributeSetInstanceName);\n          }\n        }\n      });\n    }\n    function setSearchValues() {\n      //get all controls values into it\n      var lst = [];\n      for (var i = 0; i < controlList.length; i++) {\n        var cntrl = $root.find("#" + controlList[i]);\n        if (controlList[i].toString().contains("cmb")) {\n          lst.push({\n            \'Key\': Number(cntrl.find(\'option:selected\').val()),\n            \'Name\': cntrl.find(\'option:selected\').text()\n          });\n        } else {\n          lst.push({\n            \'Key\': 0,\n            \'Name\': cntrl.val()\n          });\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "GenralAttribute/SearchValues",\n        type: "POST",\n        dataType: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify({\n          windowNoParent: Number(windowNoParent),\n          mAttributeSetInstanceId: mAttributeSetInstanceId,\n          vadms_AttributeSet_ID: vadms_AttributeSet_ID,\n          windowNo: windowNo,\n          lst: lst\n        }),\n        success: function (data) {\n          returnValue = data.result;\n          if ($self.onClose) {\n            if (returnValue.M_AttributeSetInstanceName == null) {\n              returnValue.M_AttributeSetInstanceName = returnValue.Description;\n            }\n            $self.onClose(returnValue.M_AttributeSetInstance_ID, returnValue.M_AttributeSetInstanceName, returnValue.GenSetInstance);\n          }\n        }\n      });\n    }\n    Okbtn.on("click", function () {\n      if (search) {\n        setSearchValues();\n      } else {\n        saveSelection();\n      }\n      $root.dialog(\'close\');\n    });\n    cancelbtn.on("click", function () {\n      $root.dialog(\'close\');\n    });\n    this.showDialog = function () {\n      $root.dialog({\n        modal: true,\n        title: VIS.Msg.translate(VIS.Env.getCtx(), "C_GenAttributeSetInstance_ID"),\n        width: 400,\n        close: function () {\n          $self.dispose();\n          $self = null;\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n    };\n    this.disposeComponent = function () {\n      if (Okbtn) Okbtn.off("click");\n      if (cancelbtn) cancelbtn.off("click");\n      VIS.Env.clearWinContext(VIS.Env.getCtx(), windowNo);\n      VIS.Env.getCtx().setContext(VIS.Env.WINDOW_INFO, VIS.Env.TAB_INFO, "M_AttributeSetInstance_ID", mAttributeSetInstanceId);\n      Okbtn = null;\n      cancelbtn = null;\n      mLocatorId = null;\n      mAttributeSetInstanceName = null;\n      mProductId = null;\n      cBPartnerId = null;\n      adColumnId = null;\n      windowNoParent = null;\n      productWindow = null;\n      /**\tChange\t\t\t\t\t\t\t*/\n      changed = null;\n      INSTANCE_VALUE_LENGTH = 0;\n      attributesList = null;\n\n      //attributesList = null;\n      //chkNewEdit = null;\n      //btnSelect = null;\n      //txtLotString = null;\n      //cmbLot = null;\n      //txtSerNo = null;\n      //dtpicGuaranteeDate = null;\n      //txtDescription = null;\n\n      $self = null;\n      windowNo = null;\n      mAttributeSetInstanceId = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n\n  //dispose call\n  GenralAttributeForm.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.GenralAttributeForm = GenralAttributeForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/genralattributeform.js?')},"./Areas/VIS/Scripts/app/Framework/help.js":()=>{eval(';\n(function (VIS, $) {\n  //VIS.Apps = VIS.Apps || {};\n  function help(gridWindow) {\n    //this.frame;\n    //this.windowNo; \n\n    var $root;\n    var htmlText = "";\n    function initializeComponent() {\n      $root = $(\'<div></div>\');\n      //var helpText = "";\n      var helpText = "<!DOCTYPE html PUBLIC \'-//W3C//DTD XHTML 1.0 Transitional//EN\' \'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\'>";\n      if (VIS.Application.isRTL) {\n        helpText += "<html dir=\'rtl\' xmlns=\'http://www.w3.org/1999/xhtml\'>";\n      } else {\n        helpText += "<html xmlns=\'http://www.w3.org/1999/xhtml\'>";\n      }\n      helpText += "<head>" + "<script type=\'text/javascript\' language=\'javascript\'> " + "document.onkeydown = function(){ " + "if((window.event && window.event .keyCode == 116)||(window.event && window.event .keyCode == 78)) " + "{ " + "window.event.keyCode = 505; " + "}" + "if(window.event && window.event .keyCode == 505)" + "{ " + "return false; " + "} }" +\n      //"  function anchorJump(anchor) {" +\n      //   "  "+\n      //     " var targAnchor = null,"+\n      //      " anchorID = anchor.replace(/.*#([^\\?]+).*/, \'$1\'); "+\n\n      //     " if (!(targAnchor = document.getElementsByName(anchorID))) " +\n      //       "   for (var i = 0, found = false, da = document.anchors, len = da.length; i < len && !targAnchor; i++) "+\n      //          "    targAnchor = (da[i].name == anchorID ? da[i] : null); "+\n\n      //      " if (targAnchor) { "+\n      //         " disp = getElemOffset(targAnchor); "+\n      //         " window.scrollTo(disp.x, disp.y); "+\n      //     " } "+\n      //     " else "+\n      //       "   alert(\'Did not find anchor/element \' + anchorID + \'\');"+\n\n      //     " function getElemOffset(elem) { "+\n      //         " var left = !!elem.offsetLeft ? elem.offsetLeft : 0; "+\n      //         " var top = !!elem.offsetTop ? elem.offsetTop : 0; "+\n\n      //        //" while ((elem = elem.offsetParent)) { "+\n      //        //     " left += !!elem.offsetLeft ? elem.offsetLeft : 0; "+\n      //        //     " top += !!elem.offsetTop ? elem.offsetTop : 0; "+\n      //        //  "}"+\n\n      //          "return { x: left, y: top };"+\n      //      "}" +\n      //         "return false;"+\n      //  "}"+\n\n      "<\/script> " + "<meta http-equiv=\'Content-Type\' content=\'text/html; charset=utf-8\' />" + "<title>Help &amp; Support " + gridWindow.vo.Name + "</title>" + "<style type=\'text/css\'>" + "\x3c!--" + "body {" + "margin-left: 0px;" + "margin-top: 0px;" + "margin-right: 0px;" + "margin-bottom: 0px;" + "font-family:verdana;" + "font-size:12px;" + "color:#000000;" + "}" + ".hed1" + "{" + "font-family:verdana;" + "font-weight:bold;" + "font-size:12px;" + "color:#000000;" + "}" + ".border" + "{" + "border:1px solid #c6daf3;" + "}" + ".border-1" + "{" + "border:1px solid #aac7e7;" + "background-color:#e9e8e8;" + "}" + ".border-2" + "{" + "border:1px solid #aac7e7;" + "}" + ".border-bottom" + "{" + "border-bottom:1px solid #c6daf3;" + "}" + ".border-top-none" + "{" + "border-bottom:1px solid #c6daf3;" + "border-right:1px solid #c6daf3;" + "border-left:1px solid #c6daf3;" + "}" + ".red" + "{" + "font-size:12px;" + "color:#FF0000;" + "font-weight:bold;" + "}" + ".white" + "{" + "font-size:16px;" + "color:#FFffff;" + "font-weight:bold;" + "}" + ".black" + "{" + "font-size:16px;" + "color:#000000;" + "font-weight:bold;" + "}" + ".blue" + "{" + "color:#5490fa;" + "font-weight:bold;" + "}" + ".orange" + "{" + "color:#f2b227;" + "font-weight:bold;" + "}" + ".pad" + "{" + "padding:5px;" + "}" + "a" + "{" + "color:#5490fa;\t" + "}" + "a:hover" + "{" + "color:#000000;\t" + "text-decoration:none;" + "}" + "--\x3e" + "</style></head>" + "<body oncontextmenu=\'return false;\'>";\n      helpText = helpText + "<table width=\'100%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' class=\'border\'>" + "<tr>" + "<td><table width=\'100%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' bgcolor=\'#c6daf3\' class=\'border-bottom\'>" + "<tr>" +\n      //"<td width=\'5%\'><img src=\'logo.gif\' width=\'42\' height=\'29\' /></td>" +\n      "<td width=\'100%\' class=\'hed1\' height=\'29\'>Vienna Solutions</td>" + "</tr>" + "</table></td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>";\n      helpText = helpText + "</tr>" + "<tr>" + "<td><table width=\'98%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' class=\'border\'>" + "<tr>" + "<td><table width=\'99%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\'>" + "<tr>" + "<td class=\'red\'>&nbsp;</td>" + "</tr>" + "<tr>" +\n      //get window data\n      "<td class=\'red\'>Window: " + gridWindow.vo.Name + "</td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>" + "</tr>" + "<tr>" + "<td>" + gridWindow.vo.Description + "</td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>" + "</tr>" + "<tr>" + "<td>" + gridWindow.vo.Help + "</td>" + "</tr>" +\n      //........................\n      "<tr>" + "<td>&nbsp;</td>" + "</tr>" + "<tr>" + "<td>";\n      //get all tabs of a window\n      var strTab = "";\n      for (var i = 0; i < gridWindow.tabs.length; i++) {\n        //var tab = gridWindow.getTab(i);\n        if (strTab == "") {\n          strTab = "<a href=\'#" + gridWindow.tabs[i].vo.Name + "" + i + "\'>" + gridWindow.tabs[i].vo.Name + "</a>";\n        } else {\n          strTab += " -&gt; <a href=\'#" + gridWindow.tabs[i].vo.Name + "" + i + "\'>" + gridWindow.tabs[i].vo.Name + "</a> ";\n        }\n      }\n      //..............................\n      //<a href=\'#\'>Table</a> -&gt; <a href=\'#\'>Colomn</a> -&gt; <a href=\'#\'>Selection Sequence</a> -&gt; <a href=\'#\'>Summary Sequence</a>+\n      helpText = helpText + strTab;\n      helpText = helpText + "</td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>" + "</tr>" + "</table></td>" + "</tr>" + "</table></td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>" + "</tr>";\n      helpText = helpText + "<tr>" + "<td><table width=\'98%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' class=\'border\'>";\n      //fo each tab\n      for (var i = 0; i < gridWindow.tabs.length; i++) {\n        // var tab = gridWindow.getTab(i);\n        helpText = helpText + "<tr>" + "<td><table width=\'99%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\'>" + "<tr>" + "<td class=\'black\' style=\'padding-top:5px;\' ><table width=\'100%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\'>" + "<tr>" + "<td width=\'340\' height=\'5\' bgcolor=\'#f9b31c\'></td>" + "<td width=\'4\'></td>" + "<td width=\'624\' bgcolor=\'#f9b31c\'></td>" + "</tr>" + "<tr>" + "<td height=\'35\' bgcolor=\'#FFFFFF\' class=\'border-top-none\' style=\'padding-left:10px;\'>Tab:" + gridWindow.tabs[i].vo.Name + "<a name=\'" + gridWindow.tabs[i].vo.Name + "" + i + "\'></a> </td>" + "<td ></td>" + "<td bgcolor=\'#FFFFFF\' class=\'border-top-none\' style=\'padding-left:10px;\'>" + gridWindow.tabs[i].vo.Description;\n        +" Definitions</td>" + "</tr>" + "</table></td>" + "</tr>" + "<tr>" + "<td >&nbsp;</td>" + "</tr>" + "<tr>" + "<td><table width=\'100%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' class=\'border-2\'>" + "<tr>" + "<td style=\'padding:10px; text-align:justify\'><span class=\'red\'>" + gridWindow.tabs[i].vo.Help;\n        +"</span><br />" + "<br />";\n        var strField = "";\n        //get field of each tab\n        for (var j = 0; j < gridWindow.tabs[i].gTab._gridTable.m_fields.length; j++) {\n          // var objField = tab.getField(j);\n          if (strField == "" && (gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.IsDisplayedMR || gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.IsDisplayedf)) {\n            strField = "<a href=\'#" + gridWindow.tabs[i].vo.Name + "" + i + "" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "" + j + "\'>" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "</a>";\n            //strField = "<a href=\'#\'>" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "</a>";\n          } else if (gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.IsDisplayedMR || gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.IsDisplayedf) {\n            strField += " | <a href=\'#" + gridWindow.tabs[i].vo.Name + "" + i + "" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "" + j + "\'>" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "</a>";\n            //strField += " | <a href=\'#\'>" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "</a>";\n          }\n        }\n        //..........................\n        helpText = helpText + strField;\n        helpText = helpText + " </tr>" + "</table></td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>" + "</tr>";\n        for (var j = 0; j < gridWindow.tabs[i].gTab._gridTable.m_fields.length; j++) {\n          // var objField = tab.getField(j);\n          if (gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header != "" && (gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.IsDisplayedMR || gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.IsDisplayedf)) {\n            //if (gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Description != "" || gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Help != "") {\n            helpText = helpText + "<tr>" + "<td><table width=\'100%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' class=\'border-1\'>" + "<tr>" + "<td style=\'padding:10px; text-align:justify\'><span class=\'blue\'>Field: " + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "</span><a name=\'" + gridWindow.tabs[i].vo.Name + "" + i + "" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Header + "" + j + "\'></a><br />" + "<br />" + "" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Description + "<br />" + "<br />" + "" + gridWindow.tabs[i].gTab._gridTable.m_fields[j]._vo.Help + " </td>" + "</tr>" + "</table></td>" + "</tr>" + "<tr>" + "<td>&nbsp;</td>" + "</tr>";\n            //   }\n          }\n        }\n        helpText = helpText + "</table></td>" + "</tr>" + "";\n      }\n      helpText = helpText + "</table></td></tr></table></body></html>";\n\n      //var tab="<table width=\'200px\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' class=\'border\'>"\n      //  +"<tr> <td><table width=\'100%\' border=\'0\' align=\'center\' cellpadding=\'0\' cellspacing=\'0\' bgcolor=\'#c6daf3\' class=\'border-bottom\'>"\n      //      +"<tr> <td width=\'5%\'><img src=\'logo.gif\' width=\'42\' height=\'29\' /></td> <td width=\'100%\' class=\'hed1\' height=\'29\'>Vienna Solutions</td>"\n      //      + "</tr></table></td></tr><tr><td>&nbsp;</td></tr></table>";\n\n      $root.append(jQuery.parseHTML(helpText));\n      htmlText = helpText;\n    }\n    ;\n    function show() {\n      var mywindow = window.open();\n      //mywindow.document.title = "Help";\n      //mywindow.location.href = "Help";\n      mywindow.document.open();\n      mywindow.document.write(htmlText);\n      //mywindow.close();\n      //var ch = new VIS.ChildDialog();\n      //ch.setContent($root);\n      //ch.setHeight(450);\n      //ch.setWidth(655);\n      //ch.setTitle(VIS.Msg.getMsg("Help"));\n      //ch.setModal(true);\n      //ch.show();\n    }\n    ;\n    initializeComponent();\n    show();\n\n    //this.getRoot = function () {\n    //    return $root;\n    //};\n  }\n  ;\n  ////Must Implement with same parameter\n  //VIS.Apps.help.prototype.init = function (windowNo, frame) {\n  //    //Assign to this Varable\n  //    this.frame = frame;\n  //    this.windowNo = windowNo;\n  //    this.frame.getContentGrid().append(this.getRoot());\n  //};\n\n  ////Must implement dispose\n  //VIS.Apps.help.prototype.dispose = function () {\n  //    /*CleanUp Code */\n  //    //dispose this component\n  //    this.disposeComponent();\n\n  //    //call frame dispose function\n  //    if (this.frame)\n  //        this.frame.dispose();\n  //    this.frame = null;\n  //};\n  VIS.Apps.help = help;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/help.js?')},"./Areas/VIS/Scripts/app/Framework/infogeneral.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate info dialog for tables which do not have any respective entry in Info WIndow .\r\n * Author         :     Lakhwinder\r\n * Date           :     10-Aug-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function infoGeneral(modal, WindowNo, value, tableName, keyColumn, multiSelection, validationCode, selectedIDs) {\n    this.onClose = null;\n    this.selectedIDs = selectedIDs;\n    var inforoot = $("<div class=\'vis-forms-container\'>");\n    var isExpanded = true;\n    var subroot = $("<div class=\'vis-info-subroot\'>");\n    var sSContainer = null;\n    var ssHeader = null;\n    var btnExpander = null;\n    var searchTab = null;\n    var searchSec = null;\n    var datasec = null;\n    var btnsec = null;\n    var refreshtxt = null;\n    var canceltxt = null;\n    var Oktxt = null;\n    var divbtnRight = null;\n    var btnCancel = null;\n    var btnOK = null;\n    var divbtnLeft = null;\n    var btnRequery = null;\n    var bsyDiv = null;\n    var schema = null;\n    var srchCtrls = [];\n    var displayCols = null;\n    var dGrid = null;\n    var self = this;\n    this.keyCol = \'\';\n    var multiValues = [];\n    var singlevalue = null;\n    var grdname = null;\n    var divPaging, ulPaging, liFirstPage, liPrevPage, liCurrPage, liNextPage, liLastPage, cmbPage, liPageNo;\n    var $spanPageResult = null;\n    var showText = VIS.Msg.getMsg("ShowingResult");\n    var ofText = VIS.Msg.getMsg("of");\n    var AD_Table_ID = 0;\n    function initializeComponent() {\n      inforoot.css("width", "100%");\n      inforoot.css("height", "100%");\n      inforoot.css("position", "relative");\n      //subroot.css("width", "98%");\n      //subroot.css("height", "97%");\n      //subroot.css("position", "absolute");\n      //subroot.css("margin-left", "-10px");\n\n      //sSContainer = $("<div style=\'display: inline-block; float: left;width:23%;height:87.8%;overflow:auto;\'>");\n      //ssHeader = $(\'<div style="padding: 7px; background-color: #F1F1F1;margin-bottom: 2px;height:10.5%;">\');\n      //btnExpander = $(\'<button style="border: 0px;background-color: transparent; padding: 0px;">\').append($(\'<img src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/base/arrow-left.png">\'));\n\n      //ssHeader.append(btnExpander);\n      //sSContainer.append(ssHeader);\n\n      //if (VIS.Application.isRTL) {\n      //searchTab = $("<div class=\'background-color: rgb(241, 241, 241);height:88.9%;display: inline-block;width:23%;height:87.8%;overflow:auto;padding-right: 10px;margin-left: 10px;\'>");\n      //searchSec = $("<div style=\'background-color: rgb(241, 241, 241);display: inline-block;height:87.8%;\'>");\n      //searchTab.append(searchSec);\n      //datasec = $("<div style=\'display: inline-block;width:75%;height:87.8%;overflow:auto;\'>");\n      //btnsec = $("<div style=\'display: inline-block;width:99%;height:auto;margin-top: 2px;\'>");\n      //}\n      //else {\n      searchTab = $("<div class=\'vis-info-l-s-wrap vis-leftsidebarouterwrap\'>");\n      searchSec = $("<div>");\n      searchTab.append(searchSec);\n      datasec = $("<div class=\'vis-info-datasec\'>");\n      btnsec = $("<div class=\'vis-info-btnsec\'>");\n      // }\n\n      subroot.append(searchTab);\n      subroot.append(datasec);\n      subroot.append(btnsec);\n      refreshtxt = VIS.Msg.getMsg("Refresh");\n      if (refreshtxt.indexOf(\'&\') > -1) {\n        refreshtxt = refreshtxt.replace(\'&\', \'\');\n      }\n      canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n      divbtnRight = $("<div class=\'vis-info-btnswrap\'>");\n      //if (VIS.Application.isRTL) {\n      //    btnCancel = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 0px;margin-right:10px\'>").append(canceltxt);\n      //    btnOK = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 0px;\'>").append(Oktxt);\n      //}\n      //else {\n      btnCancel = $("<button class=\'VIS_Pref_btn-2\'>").append(canceltxt);\n      btnOK = $("<button disabled=\'true\' style=\'cursor:default;opacity:.5\' class=\'VIS_Pref_btn-2\'>").append(Oktxt);\n      //}\n\n      divbtnRight.append(btnCancel);\n      divbtnRight.append(btnOK);\n      btnsec.append(divbtnRight);\n      divbtnLeft = $("<div class=\'vis-info-btnleft\'>");\n      btnRequery = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 10px;\'>").append($("<i class=\'vis vis-refresh\'></i>")); //.append(refreshtxt);\n\n      //PagingCtrls\n      divPaging = $(\'<div class="vis-info-pagingwrp">\');\n      createPageSettings();\n      divPaging.append(ulPaging);\n\n      //if (VIS.Application.isRTL) {\n      //    divbtnLeft.append(btnCancel);\n      //    divbtnLeft.append(btnOK);\n      //    divbtnRight.append(btnRequery);\n      //}\n      //else {\n      divbtnRight.append(btnCancel);\n      divbtnRight.append(btnOK);\n      divbtnLeft.append(btnRequery);\n      //}\n\n      // divbtnLeft.append(btnRequery);\n      btnsec.append(divbtnLeft);\n      btnsec.append(divPaging);\n      btnsec.append(divbtnRight);\n      //Busy Indicator\n      bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //bsyDiv.css("width", "98%");\n      //bsyDiv.css("height", "97%");\n      //bsyDiv.css(\'text-align\', \'center\');\n      //bsyDiv.css("position", "absolute");\n      bsyDiv[0].style.visibility = "visible";\n      inforoot.append(subroot);\n      inforoot.append(bsyDiv);\n      if (multiSelection == true && self.selectedIDs != null && self.selectedIDs.length > 0) {\n        multiValues = self.selectedIDs.split(\',\').map(Number);\n        value = null;\n      }\n    }\n    ;\n    initializeComponent();\n    function bindEvent() {\n      if (!VIS.Application.isMobile) {\n        inforoot.on(\'keyup\', function (e) {\n          if (!(e.keyCode === 13)) {\n            return;\n          }\n          bsyDiv[0].style.visibility = \'visible\';\n          //if (ctrl != null) {\n          if (validationCode != null && validationCode.length > 0) {\n            validationCode = VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, validationCode, false, false);\n          }\n          // }\n          displayData(true, cmbPage.val());\n        });\n      }\n      btnCancel.on("click", function () {\n        if (self.onClose != null) {\n          self.onClose();\n        }\n        disposeComponent();\n      });\n      btnOK.on("click", function () {\n        btnOKClick();\n      });\n      btnRequery.on("click", function () {\n        //debugger;\n        bsyDiv[0].style.visibility = \'visible\';\n        if (validationCode != null && validationCode != undefined && validationCode.length > 0) {\n          validationCode = VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, validationCode, false, false);\n        }\n        displayData(true, cmbPage.val());\n      });\n    }\n    ;\n    bindEvent();\n    var btnOKClick = function () {\n      //debugger;\n      //if (multiSelection) {\n      //var selection = w2ui[grdname].getSelection();\n      //for (item in selection) {\n      //    multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n      //}\n\n      var selection = w2ui[grdname].getSelection();\n      for (item in selection) {\n        if (multiValues.indexOf(w2ui[grdname].get(selection[item])[keyCol]) == -1) {\n          multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n        }\n      }\n      if (self.onClose != null && multiValues.length > 0) {\n        self.onClose();\n      }\n      disposeComponent();\n    };\n    function onClosing() {\n      if (self.onClose != null) {\n        self.onClose();\n      }\n      disposeComponent();\n      //inforoot.dialog("close");\n      //inforoot = null;\n    }\n    ;\n    this.show = function () {\n      // debugger;\n      //Change by mohit-to handle translation in general info. Added 2 new parametere- ad_Language, isBaseLangage. Asked by mukesh sir - 09/03/2018\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoGeneral/GetSearchColumns",\n        dataType: "json",\n        data: {\n          tableName: tableName,\n          ad_Language: VIS.context.getAD_Language(),\n          isBaseLangage: VIS.Env.isBaseLanguage(VIS.context)\n        },\n        error: function () {\n          //alert(VIS.Msg.getMsg(\'ERRORGettingSearchCols\'));\n          VIS.ADialog.error(\'ERRORGettingSearchCols\');\n          bsyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          schema = data.result;\n          if (schema == null) {\n            //alert(VIS.Msg.getMsg(\'ERRORGettingSearchCols\'));\n            VIS.ADialog.error(\'ERRORGettingSearchCols\');\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          displaySearchCol();\n        }\n      });\n    };\n    var displaySearchCol = function () {\n      AD_Table_ID = schema[0].AD_Table_ID;\n      //Change by mohit-to handle translation in general info. Added 2 new parametere- AD_Language, IsBaseLangage. Asked by mukesh sir - 09/03/2018\n      displayCols = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoGeneral/GetDispalyColumns", {\n        "AD_Table_ID": AD_Table_ID,\n        "AD_Language": VIS.context.getAD_Language(),\n        "IsBaseLangage": VIS.Env.isBaseLanguage(VIS.context),\n        "TableName": tableName\n      }).result;\n      if (displayCols == null) {\n        alert(VIS.Msg.getMsg(\'ERRORGettingDisplayCols\'));\n        bsyDiv[0].style.visibility = "hidden";\n        return;\n      }\n      var label = null;\n      var ctrl = null;\n      var tableSArea = $("<table>");\n      tableSArea.css("width", "100%");\n      var tr = null;\n      //var rowctrl = 0;\n      for (var item in schema) {\n        //tr = $("<tr>");\n        //tableSArea.append(tr);\n\n        var td = $("<td>");\n        var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n        var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n        tr = $("<tr>");\n        tableSArea.append(tr);\n        tr.append(td);\n        td.append(Leftformfieldwrp);\n        Leftformfieldwrp.append(Leftformfieldctrlwrp);\n        var srchCtrl = {};\n        ctrl = new VIS.Controls.VTextBox(schema[item].ColumnName, false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n        srchCtrl.Ctrl = ctrl;\n        srchCtrl.AD_Reference_ID = 10;\n        srchCtrl.ColumnName = schema[item].ColumnName;\n        // Change done by mohit asked by mukesh sir to show the data on info window from translated tab if logged in with langauge other than base language- 22/03/2018\n        srchCtrl.IsTranslated = schema[item].IsTranslated;\n        if (schema[item].IsIdentifier) {\n          ctrl.setValue(value);\n        }\n        var tdctrl = $("<td>");\n        //tr.append(tdctrl);\n        Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n        label = new VIS.Controls.VLabel(schema[item].Name, schema[item].ColumnName);\n        Leftformfieldctrlwrp.append(label.getControl());\n        srchCtrls.push(srchCtrl);\n      }\n      searchSec.append(tableSArea);\n      var refreshtxt = VIS.Msg.getMsg("Refresh");\n      if (refreshtxt.indexOf(\'&\') > -1) {\n        refreshtxt = refreshtxt.replace(\'&\', \'\');\n      }\n      var canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      var Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n      inforoot.dialog({\n        width: 1020,\n        height: 500,\n        resizable: false,\n        title: schema[0].TableDisplayName,\n        modal: true,\n        close: onClosing,\n        closeText: VIS.Msg.getMsg("close")\n      });\n      if (validationCode != null && validationCode != undefined && validationCode.length > 0) {\n        validationCode = VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, validationCode, false, false);\n      }\n      displayData(true, cmbPage.val());\n    };\n    var displayData = function (requery, pNo) {\n      if (multiSelection && w2ui[grdname]) {\n        var selection = w2ui[grdname].getSelection();\n        for (item in selection) {\n          if (multiValues.indexOf(w2ui[grdname].get(selection[item])[keyCol]) == -1) {\n            multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n          }\n        }\n      }\n      disposeDataSec();\n      //var sql = "SELECT ";\n      //var colName = null;\n      //var cname = null;\n      //var tabname = null;\n      //var displayType = 0;\n      //var count = $.makeArray(displayCols).length;\n\n      //var isTrlColExist = false;\n\n      //get Qry from InfoColumns\n      for (var item in displayCols) {\n        if (displayCols[item].IsKey) {\n          keyCol = displayCols[item].ColumnName.toUpperCase();\n        }\n      }\n      //    displayType = displayCols[item].AD_Reference_ID;\n      //    if (displayType == VIS.DisplayType.YesNo) {\n      //        sql += " ( CASE " + tableName + "." + displayCols[item].ColumnName + " WHEN \'Y\' THEN  \'True\' ELSE \'False\'  END ) AS " + (displayCols[item].ColumnName);\n      //    }\n      //    else if (displayType == VIS.DisplayType.List) {\n\n      //        var refList = displayCols[item].RefList;\n      //        sql += (" CASE ");\n      //        for (var refListItem in refList) {\n      //            sql += " WHEN " + tableName + "." + displayCols[item].ColumnName + "=\'" + refList[refListItem].Key + "\' THEN \'" + refList[refListItem].Value.replace("\'", "\'\'") + "\'";\n      //        }\n      //        sql += " END AS " + displayCols[item].ColumnName;\n\n      //    }\n      //    else {\n      //        // Change done by mohit asked by mukesh sir to show the data on info window from translated tab if logged in with langauge other than base language- 22/03/2018\n      //        if (VIS.Env.isBaseLanguage(VIS.context)) {\n      //            sql += tableName + "." + displayCols[item].ColumnName + " ";\n      //        }\n      //        else {\n      //            if (displayCols[item].trlTableExist) {\n      //                if (displayCols[item].IsTranslated) {\n      //                    sql += "trlTable." + displayCols[item].ColumnName + " ";\n      //                    isTrlColExist = true;\n      //                }\n      //                else {\n      //                    sql += tableName + "." + displayCols[item].ColumnName + " ";\n      //                }\n      //            }\n      //            else {\n      //                sql += tableName + "." + displayCols[item].ColumnName + " ";\n      //            }\n      //        }\n\n      //    }\n\n      //    if (displayCols[item].IsKey) {\n      //        keyCol = displayCols[item].ColumnName.toUpperCase();\n      //    }\n\n      //    if (!((count - 1) == item)) {\n      //        sql += \', \';\n      //    }\n\n      //}\n\n      //if (selectedIDs != null && selectedIDs.length > 0) {\n      //    sql += ", \'N\' AS ordcol";\n      //}\n\n      //sql += " FROM " + tableName + " " + tableName;\n      //// Change done by mohit asked by mukesh sir to show the data on info window from translated tab if logged in with langauge other than base language- 22/03/2018\n      //if (isTrlColExist) {\n      //    sql += " Inner join " + tableName + "_Trl trlTable on (" + tableName + "." + tableName + "_ID=trlTable." + tableName + "_ID  AND trlTable.AD_Language=\'" + VIS.context.getAD_Language() + "\')";\n      //}\n\n      if (requery == true) {\n        var whereClause = " ";\n        var srchValue = null;\n        var appendAND = false;\n        for (var i = 0; i < srchCtrls.length; i++) {\n          srchValue = srchCtrls[i].Ctrl.getValue();\n          if (srchValue == null || srchValue.length == 0 || srchValue == 0 || !srchValue) {\n            srchCtrls[i]["Value"] = null;\n            continue;\n          }\n\n          //if (appendAND == true) {\n          //    whereClause += " AND ";\n          //}\n\n          //if (!(String(srchValue).indexOf("%") == 0)) {\n          //    srchValue = "●" + srchValue;\n          //}\n          //else {\n          //    srchValue = String(srchValue).replace("%", "●");\n          //}\n          //if (!((String(srchValue).lastIndexOf("●")) == (String(srchValue).length))) {\n          //    srchValue = srchValue + "●";\n          //}\n\n          srchCtrls[i]["Value"] = srchValue;\n          // Change done by mohit asked by mukesh sir to show the data on info window from translated tab if logged in with langauge other than base language- 22/03/2018\n          //if (VIS.Env.isBaseLanguage(VIS.context)) {\n          //    whereClause += "  UPPER(" + tableName + "." + srchCtrls[i].ColumnName + ") LIKE \'" + srchValue.toUpperCase() + "\' ";\n          //}\n          //else {\n          //    if (isTrlColExist) {\n          //        if (srchCtrls[i].IsTranslated) {\n          //            whereClause += "  UPPER(trlTable." + srchCtrls[i].ColumnName + ") LIKE \'" + srchValue.toUpperCase() + "\' ";\n          //            isTrlColExist = true;\n          //        }\n          //        else {\n          //            whereClause += "  UPPER(" + tableName + "." + srchCtrls[i].ColumnName + ") LIKE \'" + srchValue.toUpperCase() + "\' ";\n          //        }\n          //    }\n          //    else {\n          //        whereClause += "  UPPER(" + tableName + "." + srchCtrls[i].ColumnName + ") LIKE \'" + srchValue.toUpperCase() + "\' ";\n          //    }\n          //}\n          appendAND = true;\n        }\n\n        //if (whereClause.length > 1) {\n        //    sql += " WHERE " + whereClause;\n        //    if (validationCode != null && validationCode.length > 0) {\n        //        sql += " AND " + validationCode;\n        //    }\n        //}\n        //else if (validationCode != null && validationCode.length > 0) {\n        //    sql += " WHERE " + validationCode;\n        //}\n\n        //sql = VIS.MRole.addAccessSQL(sql, tableName, true, false);\n        //var sqlUnion = " UNION " + sql;\n        //sqlUnion = sqlUnion.replace("\'N\' AS ordcol", "\'Y\' AS ordcol");\n\n        //if (selectedIDs != null && selectedIDs.length > 0) {\n        //    if (sql.toUpperCase().indexOf("WHERE") > -1) {\n        //        sql += " AND " + tableName + "." + keyCol + " IN(" + selectedIDs + ")";\n        //        sql += sqlUnion;\n        //        sql += " AND " + tableName + "." + keyCol + " NOT IN(" + selectedIDs + ")";\n        //    }\n        //    else {\n        //        sql += " WHERE " + tableName + "." + keyCol + " IN(" + selectedIDs + ")";\n        //        sql += sqlUnion;\n        //        sql += " WHERE " + tableName + "." + keyCol + " NOT IN(" + selectedIDs + ")";\n        //    }\n        //}\n      } else {\n        //if (validationCode.length > 0 && validationCode.trim().toUpperCase().startsWith(\'WHERE\')) {\n        //    sql += " " + validationCode + " AND " + tableName + "_ID=-1";\n        //}\n        //else if (validationCode.length > 0) {\n        //    sql += " WHERE " + tableName + "." + tableName + "_ID=-1 AND " + validationCode;\n        //}\n        //else {\n        //    sql += " WHERE " + tableName + "." + tableName + "_ID=-1";\n        //}\n      }\n\n      //if (selectedIDs != null && selectedIDs.length > 0) {\n      //    if (sql.toUpperCase().indexOf("ORDER BY") > -1) {\n      //        sql = sql.toUpperCase().replace("ORDER BY", "ORDER BY ordcol ASC,");\n      //    }\n      //    else {\n      //        sql += " ORDER BY ordcol ASC";\n      //    }\n      //}\n\n      var srhCtrls = [];\n      if (srchCtrls && Object.keys(srchCtrls).length > 0) {\n        for (var x = 0; x < Object.keys(srchCtrls).length; x++) {\n          var vals = {};\n          vals.ColumnName = srchCtrls[x].ColumnName;\n          vals.IsTranslated = srchCtrls[x].IsTranslated;\n          vals.Value = srchCtrls[x].Value;\n          srhCtrls.push(vals);\n        }\n      }\n      if (!pNo) {\n        pNo = 1;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoGeneral/GetData",\n        dataType: "json",\n        type: "POST",\n        //async: false,\n        data: {\n          TableName: tableName,\n          AD_Table_ID: AD_Table_ID,\n          PageNo: pNo,\n          KeyCol: keyCol,\n          SelectedIDs: selectedIDs,\n          Requery: requery,\n          SrchCtrl: JSON.stringify(srhCtrls),\n          ValidationCode: VIS.secureEngine.encrypt(validationCode)\n        },\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n          bsyDiv[0].style.visibility = \'hidden\';\n          return;\n        },\n        success: function (dyndata) {\n          var res = JSON.parse(dyndata);\n          if (res == null) {\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          if (res.Error) {\n            VIS.ADialog.error(res.Error);\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          resetPageCtrls(res.pSetting);\n          loadData(res.data);\n        }\n      });\n    };\n    var loadData = function (dynData) {\n      if (dynData == null) {\n        alert(VIS.Msg.getMsg(\'NoDataFound\'));\n        bsyDiv[0].style.visibility = "hidden";\n        return;\n      }\n      var grdCols = [];\n      var grdRows = [];\n      var rander = null;\n      var displayType = null;\n      for (var item in dynData) {\n        var oColumn = {\n          resizable: true\n        };\n        if (!displayCols[item]) continue;\n        displayType = displayCols[item].AD_Reference_ID;\n        oColumn.caption = displayCols[item].Name;\n        oColumn.field = displayCols[item].ColumnName.toUpperCase();\n        oColumn.columnName = displayCols[item].ColumnName.toUpperCase();\n        oColumn.sortable = true;\n        oColumn.hidden = !displayCols[item].IsDisplayed;\n        oColumn.size = \'100px\';\n        if (VIS.DisplayType.IsNumeric(displayType)) {\n          if (displayType == VIS.DisplayType.Integer) {\n            oColumn.render = \'int\';\n          } else if (displayType == VIS.DisplayType.Amount) {\n            oColumn.render = \'number:2\';\n          } else {\n            oColumn.render = \'number:1\';\n          }\n        }\n        //\tYesNo\n        //else if (displayType == VIS.DisplayType.YesNo) {\n\n        //    oColumn.render = function (record, index, colIndex) {\n\n        //        var chk = (record[grdCols[colIndex].field]) == \'True\' ? "checked" : "";\n\n        //        return \'<input type="checkbox" \' + chk + \' disabled="disabled" >\';\n        //    }\n        //}\n\n        //Date /////////\n        else if (VIS.DisplayType.IsDate(displayType)) {\n          oColumn.render = function (record, index, colIndex) {\n            var d = record[grdCols[colIndex].field];\n            if (d) {\n              d = Globalize.format(new Date(d), \'d\');\n            } else d = "";\n            return d;\n          };\n        } else if (displayType == VIS.DisplayType.Location || displayType == VIS.DisplayType.Locator) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.Account) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.PAttribute) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.Button) {\n          oColumn.render = function (record) {\n            return \'<div>button</div>\';\n          };\n        } else if (displayType == VIS.DisplayType.Image) {\n          oColumn.render = function (record) {\n            return \'<div>Image</div>\';\n          };\n        } else if (VIS.DisplayType.IsLOB(displayType)) {\n          oColumn.render = function (record) {\n            return \'<div>[Lob-blob]</div>\';\n          };\n        }\n        grdCols[item] = oColumn;\n\n        //grdCols[item] = { field: dynData[item].ColumnName, caption: schema[item].Name, hidden: !schema[item].IsDisplayed, sortable: true, size: \'100px\' };\n      }\n      for (var j = 0; j < dynData[0].RowCount; j++) {\n        var row = {};\n        for (var item in dynData) {\n          //grdCol[item] = { field: dynData[item].ColumnName, sortable: true, attr: \'align=center\' };\n          row[dynData[item].ColumnName.toUpperCase()] = dynData[item].Values[j];\n        }\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      grdname = \'gridGenInfodata\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(grdRows);\n      dGrid = $(datasec).w2grid({\n        name: grdname,\n        recordHeight: 40,\n        show: {\n          toolbar: false,\n          // indicates if toolbar is v isible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: false,\n          // indicates if line numbers column is visible\n          selectColumn: true,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: grdCols,\n        records: grdRows,\n        multiSelect: multiSelection,\n        onUnselect: onUnSelectRow,\n        onSelect: onSelectRow\n      });\n      if (multiSelection) {\n        for (itm in multiValues) {\n          for (item in w2ui[grdname].records) {\n            if (w2ui[grdname].records[item][keyCol] == multiValues[itm]) {\n              w2ui[grdname].select(parseInt(item) + 1);\n              toggleOkBtn(false);\n            }\n          }\n        }\n      } else {\n        toggleOkBtn(true);\n      }\n      // $("#w2ui-even").css("height", "40px");\n      bsyDiv[0].style.visibility = "hidden";\n    };\n    function onSelectRow(e) {\n      toggleOkBtn(false);\n    }\n    ;\n    function onUnSelectRow(e) {\n      if (!multiSelection) {\n        toggleOkBtn(true);\n        return;\n      }\n      //var unselectedVal = w2ui[e.target].records[e.index][keyCol];\n      //if (multiValues.indexOf(unselectedVal) > -1) {\n      //    multiValues.splice(multiValues.indexOf(unselectedVal), 1);\n      //}\n      if (e.index) {\n        var unselectedVal = w2ui[e.target].records[e.index][keyCol];\n        if (multiValues.indexOf(unselectedVal) > -1) {\n          multiValues.splice(multiValues.indexOf(unselectedVal), 1);\n        }\n      } else {\n        for (var l = 0; l < w2ui[e.target].records.length; l++) {\n          var unselectedVal = w2ui[e.target].records[l][keyCol];\n          if (multiValues.indexOf(unselectedVal) > -1) {\n            multiValues.splice(multiValues.indexOf(unselectedVal), 1);\n          }\n        }\n      }\n      window.setTimeout(function () {\n        if (multiValues.length == 0 && w2ui[e.target].getSelection().length == 0) toggleOkBtn(true);\n      }, 50);\n    }\n    ;\n    var disposeDataSec = function () {\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n    };\n    function toggleOkBtn(disable) {\n      if (disable) {\n        btnOK.prop(\'disabled\', \'true\').css({\n          "cursor": "default",\n          "opacity": ".5"\n        });\n      } else {\n        btnOK.prop(\'disabled\', \'\').css({\n          "cursor": "pointer",\n          "opacity": "1"\n        });\n      }\n    }\n    ;\n    this.getSelectedValues = function () {\n      return multiValues;\n    };\n    var disposeComponent = function () {\n      //   btnExpander.off(\'click\');\n      inforoot.off(\'keyup\');\n      btnCancel.off("click");\n      btnOK.off("click");\n      btnRequery.off("click");\n      liFirstPage.off("click");\n      liPrevPage.off("click");\n      liNextPage.off("click");\n      liLastPage.off("click");\n      cmbPage.off("change");\n      datasec = null;\n      searchSec = null;\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n      isExpanded = null;\n      subroot = null;\n      sSContainer = null;\n      ssHeader = null;\n      btnExpander = null;\n      searchTab = null;\n      searchSec = null;\n      datasec = null;\n      btnsec = null;\n      refreshtxt = null;\n      canceltxt = null;\n      Oktxt = null;\n      divbtnRight = null;\n      btnCancel = null;\n      btnOK = null;\n      divbtnLeft = null;\n      btnRequery = null;\n      bsyDiv = null;\n      schema = null;\n      srchCtrls = null;\n      displayCols = null;\n      dGrid = null;\n      self = null;\n      keyCol = null;\n      multiValues = null;\n      singlevalue = null;\n      liFirstPage = liPrevPage = liNextPage = liLastPage = cmbPage = null;\n      if (inforoot != null) {\n        // inforoot.dialog(\'close\');\n        inforoot.dialog(\'destroy\');\n        inforoot.remove();\n      }\n      inforoot = null;\n      this.btnOKClick = null;\n      this.displaySearchCol = null;\n      this.displayData = null;\n      this.loadData = null;\n      this.disposeComponent = null;\n      this.disposeDataSec = null;\n      this.getSelectedValues = null;\n    };\n    function createPageSettings() {\n      ulPaging = $(\'<ul class="vis-statusbar-ul">\');\n      liPageNo = $(\'<li class="flex-fill"><section class="vis-ad-w-p-s-result"><span></span></section></li>\');\n      liFirstPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftleft" title="\' + VIS.Msg.getMsg("FirstPage") + \'" style="opacity: 0.6;"></i></div></li>\');\n      liPrevPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pageup" title="\' + VIS.Msg.getMsg("PageUp") + \'" style="opacity: 0.6;"></i></div></li>\');\n      cmbPage = $("<select>");\n      liCurrPage = $(\'<li>\').append(cmbPage);\n      liNextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" title="\' + VIS.Msg.getMsg("PageDown") + \'" style="opacity: 0.6;"></i></div></li>\');\n      liLastPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" title="\' + VIS.Msg.getMsg("LastPage") + \'" style="opacity: 0.6;"></i></div></li>\');\n      $spanPageResult = liPageNo.find(".vis-ad-w-p-s-result").find("span");\n      ulPaging.append(liPageNo).append(liFirstPage).append(liPrevPage).append(liCurrPage).append(liNextPage).append(liLastPage);\n      pageEvents();\n    }\n    function pageEvents() {\n      liFirstPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, 1);\n        }\n      });\n      liPrevPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, parseInt(cmbPage.val()) - 1);\n        }\n      });\n      liNextPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, parseInt(cmbPage.val()) + 1);\n        }\n      });\n      liLastPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, parseInt(cmbPage.find("Option:last").val()));\n        }\n      });\n      cmbPage.on("change", function () {\n        displayData(true, cmbPage.val());\n      });\n    }\n    function resetPageCtrls(psetting) {\n      cmbPage.empty();\n      if (psetting.TotalPage > 0) {\n        for (var i = 0; i < psetting.TotalPage; i++) {\n          cmbPage.append($("<option value=" + (i + 1) + ">" + (i + 1) + "</option>"));\n        }\n        cmbPage.val(psetting.CurrentPage);\n        if (psetting.TotalPage > psetting.CurrentPage) {\n          liNextPage.css("opacity", "1");\n          liLastPage.css("opacity", "1");\n        } else {\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n        if (psetting.CurrentPage > 1) {\n          liFirstPage.css("opacity", "1");\n          liPrevPage.css("opacity", "1");\n        } else {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n        }\n        if (psetting.TotalPage == 1) {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n      } else {\n        liFirstPage.css("opacity", "0.6");\n        liPrevPage.css("opacity", "0.6");\n        liNextPage.css("opacity", "0.6");\n        liLastPage.css("opacity", "0.6");\n      }\n\n      // Show pages information\n      var cp = psetting.CurrentPage;\n      var ps = psetting.PageSize;\n      var tr = psetting.TotalRecords;\n      var s = (cp - 1) * ps;\n      var e = s + ps;\n      if (e > tr) e = tr;\n      if (tr == 0) {\n        s -= 1;\n      }\n      var text = showText + " " + (s + 1) + "-" + e + " " + ofText + " " + tr;\n      $spanPageResult.text(text);\n    }\n  }\n  ;\n  VIS.infoGeneral = infoGeneral;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/infogeneral.js?')},"./Areas/VIS/Scripts/app/Framework/infomenu.js":()=>{eval(";\n(function (VIS, $) {\n  var $root = $('<div/>'); //, {\n\n  $root.css('width', '100%');\n  $root.css('height', '100%');\n  var $menu = $(\"<ul class='vis-apanel-rb-ul'>\");\n  $menu.css('width', '100%');\n  $menu.css('height', '100%');\n  $root.append($menu);\n  $menu.on('click', \"LI\", function (e) {\n    var id = $(e.target).data(\"id\");\n    var InfoWindow = new VIS.InfoWindow(id, null, 0, null, null);\n    InfoWindow.show();\n  });\n  function load() {\n    $.ajax({\n      url: VIS.Application.contextUrl + \"InfoMenu/LoadMenu\",\n      dataType: \"json\",\n      error: function () {\n        alert('No DATA');\n      },\n      success: function (data) {\n        var infoWinMenu = data.result;\n        for (var item in infoWinMenu) {\n          var li = $(\"<li data-id='\" + infoWinMenu[item].AD_InfoWindow_ID + \"' >\");\n          li.append(infoWinMenu[item].Name);\n          $menu.append(li);\n        }\n      }\n    });\n  }\n  ;\n  function hide() {}\n  load();\n  VIS.InfoMenu = {\n    show: function ($btnInfo) {\n      $btnInfo.w2overlay($root.clone(true), {\n        css: {\n          height: '300px'\n        }\n      });\n    }\n  };\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/infomenu.js?")},"./Areas/VIS/Scripts/app/Framework/infoproduct.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate Product info.\r\n * Author         :     Bharat\r\n * Date           :     01-May-2015\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function infoProduct(modal, WindowNo, M_Warehouse_ID, M_PriceList_ID, value, tableName, keyColumn, multiSelection, validationCode, selectedIDs) {\n    this.onClose = null;\n    this.selectedIDs = selectedIDs;\n    var inforoot = $("<div>");\n    var isExpanded = true;\n    var subroot = $("<div class=\'vis-info-subroot\'>");\n    var sSContainer = null;\n    var ssHeader = null;\n    var btnExpander = null;\n    var searchTab = null;\n    var searchSec = null;\n    var datasec = null;\n    var btnsec = null;\n    var refreshtxt = null;\n    var addCatTxt = null;\n    var showSavedTxt = null;\n    var showScanTxt = null;\n    var showCartTxt = null;\n    var canceltxt = null;\n    var Oktxt = null;\n    var divbtnRight = null;\n    var divbtnsec = null;\n    var btnScanFile = null;\n    var btnShowSaved = null;\n    var btnShowCart = null;\n    var btnAddCart = null;\n    var btnCancel = null;\n    var btnOK = null;\n    var divbtnLeft = null;\n    var btnRequery = null;\n    var bsyDiv = null;\n    var schema = null;\n    var srchCtrls = [];\n    var displayCols = null;\n    var dGrid = null;\n    var self = this;\n    var keyCol = \'\';\n    var window_ID = 0;\n    var multiValues = [],\n      multiAttr = [];\n    var singlevalue = null;\n    var grdname = null;\n    var lblValuetxt = null;\n    var lblNametxt = null;\n    var lblUPCtxt = null;\n    var lblSKUtxt = null;\n    var lblWarehousetxt = null;\n    var lblPriceListtxt = null;\n    //Mohit Changes\n    var lblAttributeSet = null;\n    var lblAttrSetInstance = null;\n    var lblAttrCodeText = null;\n    var cmbAttributeSet = null;\n    var $AttrSetInstControl = null;\n    var _AttrSetInstLookUp = null;\n    var SubGridCol = [];\n    var SubGridArray = [];\n    // End------------------------------\n    var format = VIS.DisplayType.GetNumberFormat(VIS.DisplayType.Amount);\n    var dotFormatter = VIS.Env.isDecimalPoint();\n    var label = null;\n    var ctrl = null;\n    var cmbWarehoue = null;\n    var cmbPriceList = null;\n    var tableSArea = $("<table>");\n    var tr = null;\n    var lstWarehouse = null;\n    var lstPriceList = null;\n    var PriceList = null;\n    var M_PriceList_Version_ID = null;\n    var infoLines = [];\n    var savedProduct = [];\n    var refreshUI = false;\n    var updating = false;\n    var AD_Column_ID = 0;\n    var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n    var chkDelCart = false;\n    var invCount_ID = 0;\n    var validation = null;\n    var $productAttribute = null;\n    var pattrLookup = null;\n    //Paging\n    var divPaging, ulPaging, liFirstPage, liPrevPage, liCurrPage, liNextPage, liLastPage, cmbPage, liPageNo;\n    var $spanPageResult = null;\n    var showText = VIS.Msg.getMsg("ShowingResult");\n    var ofText = VIS.Msg.getMsg("of");\n    var selectedItems = [];\n    var $statusDiv;\n    var alength = 0,\n      TotalPages = 0,\n      insertedCount = 0,\n      noCount = 0,\n      saveCount = 500;\n    var errorMsgKeys = [];\n    var errorMsgProds = [];\n    // Variant Section---Change bu Mohit 08/07/2016\n    var variantRecords = [];\n    //------------------\n\n    var uomArray = [];\n    var infoMultipleLineSave = [];\n    function initializeComponent() {\n      SubGridCol = [];\n      SubGridCol.push({\n        field: \'WareHouse\',\n        caption: VIS.Msg.getMsg(\'Warehouse\'),\n        size: \'150px\'\n      }, {\n        field: \'Variant\',\n        caption: VIS.Msg.getMsg(\'Variant\'),\n        size: \'150px\'\n      }, {\n        field: \'Quantity\',\n        caption: VIS.Msg.getMsg(\'Quantity\'),\n        size: \'100px\',\n        editable: {\n          type: \'float\'\n        },\n        render: \'number:1\'\n      }, {\n        field: \'Available\',\n        caption: VIS.Msg.getElement(VIS.Env.getCtx(), \'QtyAvailable\'),\n        size: \'100px\'\n      }, {\n        field: \'OnHand\',\n        caption: VIS.Msg.getElement(VIS.Env.getCtx(), \'QtyOnHand\'),\n        size: \'100px\'\n      }, {\n        field: \'Reserved\',\n        caption: VIS.Msg.getElement(VIS.Env.getCtx(), \'QtyReserved\'),\n        size: \'100px\'\n      }, {\n        field: \'Ordered\',\n        caption: VIS.Msg.getElement(VIS.Env.getCtx(), \'QtyOrdered\'),\n        size: \'100px\'\n      }, {\n        field: \'M_Warehouse_ID\',\n        caption: \'WareHouse ID\',\n        size: \'150px\',\n        hidden: true\n      }, {\n        field: \'M_AttributeSetInstance_ID\',\n        caption: \'M_AttributeSetInstance_ID\',\n        size: \'150px\',\n        hidden: true\n      }, {\n        field: \'M_Product_ID\',\n        caption: \'M_Product_ID\',\n        size: \'150px\',\n        hidden: true\n      }, {\n        field: \'ParentRec_ID\',\n        caption: \'Parent recid\',\n        size: \'150px\',\n        hidden: true\n      });\n      inforoot.css("width", "100%");\n      inforoot.css("height", "100%");\n      inforoot.css("position", "relative");\n      //subroot.css("width", "98%");\n      //subroot.css("height", "97%");\n      //subroot.css("position", "absolute");\n      tableSArea.css("width", "100%");\n\n      //else {\n      searchTab = $("<div class=\'vis-info-l-s-wrap vis-pad-0 vis-leftsidebarouterwrap\'>");\n      searchSec = $("<div class=\'vis-info-l-s-content\'>");\n      searchTab.append(searchSec);\n      datasec = $("<div class=\'vis-info-datasec\'>");\n      btnsec = $("<div class=\'vis-info-btnsec\'>");\n      //}\n\n      subroot.append(searchTab);\n      subroot.append(datasec);\n      subroot.append(btnsec);\n      if (multiSelection == true && self.selectedIDs != null && self.selectedIDs.length > 0) {\n        multiValues = self.selectedIDs.split(\',\').map(Number);\n        ctrlValue = null;\n      }\n      lblValuetxt = VIS.Msg.getMsg("Value");\n      if (lblValuetxt.indexOf(\'&\') > -1) {\n        lblValuetxt = lblValuetxt.replace(\'&\', \'\');\n      }\n      lblNametxt = VIS.Msg.getMsg("Name");\n      if (lblNametxt.indexOf(\'&\') > -1) {\n        lblNametxt = lblNametxt.replace(\'&\', \'\');\n      }\n      lblUPCtxt = VIS.Msg.getMsg("UPC");\n      if (lblUPCtxt.indexOf(\'&\') > -1) {\n        lblUPCtxt = lblUPCtxt.replace(\'&\', \'\');\n      }\n      lblSKUtxt = VIS.Msg.getMsg("SKU");\n      if (lblSKUtxt.indexOf(\'&\') > -1) {\n        lblSKUtxt = lblSKUtxt.replace(\'&\', \'\');\n      }\n      lblWarehousetxt = VIS.Msg.getMsg("Warehouse");\n      if (lblWarehousetxt.indexOf(\'&\') > -1) {\n        lblWarehousetxt = lblWarehousetxt.replace(\'&\', \'\');\n      }\n      lblPriceListtxt = VIS.Msg.getMsg("PriceListVersion");\n      if (lblPriceListtxt.indexOf(\'&\') > -1) {\n        lblPriceListtxt = lblPriceListtxt.replace(\'&\', \'\');\n      }\n      refreshtxt = VIS.Msg.getMsg("Refresh");\n      if (refreshtxt.indexOf(\'&\') > -1) {\n        refreshtxt = refreshtxt.replace(\'&\', \'\');\n      }\n      addCatTxt = VIS.Msg.getMsg("AddCatalog");\n      if (addCatTxt.indexOf(\'&\') > -1) {\n        addCatTxt = addCatTxt.replace(\'&\', \'\');\n      }\n      showSavedTxt = VIS.Msg.getMsg("ShowSaved");\n      if (showSavedTxt.indexOf(\'&\') > -1) {\n        showSavedTxt = showSavedTxt.replace(\'&\', \'\');\n      }\n      showCartTxt = VIS.Msg.getMsg("ShowCart");\n      if (showCartTxt.indexOf(\'&\') > -1) {\n        showCartTxt = showCartTxt.replace(\'&\', \'\');\n      }\n      showScanTxt = VIS.Msg.getMsg("ShowScan");\n      if (showScanTxt.indexOf(\'&\') > -1) {\n        showScanTxt = showScanTxt.replace(\'&\', \'\');\n      }\n      canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n\n      //changes Mohit\n      lblAttributeSet = VIS.Msg.getElement(VIS.Env.getCtx(), "M_AttributeSet_ID");\n      if (lblAttributeSet.indexOf(\'&\') > -1) {\n        lblAttributeSet = lblAttributeSet.replace(\'&\', \'\');\n      }\n      lblAttrSetInstance = VIS.Msg.getElement(VIS.Env.getCtx(), "M_AttributeSetInstance_ID");\n      if (lblAttrSetInstance.indexOf(\'&\') > -1) {\n        lblAttrSetInstance = lblAttrSetInstance.replace(\'&\', \'\');\n      }\n      lblAttrCodeText = VIS.Msg.getMsg("AttrCode");\n      if (lblAttrCodeText.indexOf(\'&\') > -1) {\n        lblAttrCodeText = lblAttrCodeText.replace(\'&\', \'\');\n      }\n      //var rowctrl = 0;               \n\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblValuetxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("Value", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "Value";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblNametxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("Name", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "Name";\n      ctrl.setValue(value);\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblUPCtxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("UPC", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "UPC";\n      //var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblSKUtxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("SKU", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "SKU";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblWarehousetxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      cmbWarehoue = new VIS.Controls.VComboBox("M_Warehouse_ID", false, false, true, null, 50); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = cmbWarehoue;\n      srchCtrl.AD_Reference_ID = VIS.DisplayType.tableDir;\n      srchCtrl.ColumnName = "M_Warehouse_ID";\n      var tdctrl = $("<td>");\n      tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(cmbWarehoue.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblPriceListtxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      cmbPriceList = new VIS.Controls.VComboBox("M_PriceList_Version_ID", false, false, true, null, 50); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = cmbPriceList;\n      srchCtrl.AD_Reference_ID = VIS.DisplayType.tableDir;\n      srchCtrl.ColumnName = "M_PriceList_Version_ID";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(cmbPriceList.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n\n      // Mohit Changes\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblAttrCodeText);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("AttributeCode", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "AttributeCode";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblAttributeSet);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      cmbAttributeSet = new VIS.Controls.VComboBox("M_AttributeSet_ID", false, false, true, null, 50); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = cmbAttributeSet;\n      srchCtrl.AD_Reference_ID = VIS.DisplayType.tableDir;\n      srchCtrl.ColumnName = "M_AttributeSet_ID";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(cmbAttributeSet.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      //label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblAttrSetInstance);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      LoadAttributeControl();\n      //---end--------\n\n      searchSec.append(tableSArea);\n      divbtnRight = $("<div class=\'vis-info-btnswrap\'>");\n\n      //if (VIS.Application.isRTL) {\n      //    divbtnsec = $("<div style=\'float:left;\'>");\n      //    btnCancel = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px\'>").append(canceltxt);\n      //    btnOK = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px\'>").append(Oktxt);\n      //    btnAddCart = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px;display:block;\'>").append($("<img src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/base/addToCart.png\'>"));\n      //    btnShowSaved = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px\'>").append($("<img src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/base/list.png\'>"));\n      //    btnScanFile = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-left:5px\'>").append($("<img src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/base/scan.png\'>"));\n      //    btnShowCart = $("<button class=\'VIS_Pref_btn-2\'style=\'margin-top: 5px;margin-bottom: -10px;margin-left:5px\'>").append($("<img src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/base/opencart.png\'>"));\n      //}\n      //else {\n      divbtnsec = $("<div class=\'vis-info-ls-btnswrap\'>");\n      btnCancel = $("<button class=\'VIS_Pref_btn-2\'>").append(canceltxt);\n      btnOK = $("<button disabled=\'true\' style=\'cursor:default;opacity:.5\' class=\'VIS_Pref_btn-2\'>").append(Oktxt);\n      btnAddCart = $("<button class=\'VIS_Pref_btn-2\'>").append($("<i class=\'fa fa-cart-plus\'></i>"));\n      btnShowSaved = $("<button class=\'VIS_Pref_btn-2\' disabled>").append($("<i class=\'fa fa-list-ul\'></i>"));\n      btnScanFile = $("<button class=\'VIS_Pref_btn-2\'>").append($("<i class=\'vis vis-scanner\'>"));\n      btnShowCart = $("<button class=\'VIS_Pref_btn-2\'>").append($("<i class=\'fa fa-shopping-cart\'></i>"));\n      //btnShowSaved.prop(\'disabled\', true);\n      //}\n\n      //divbtnRight.append(btnCancel);\n      //divbtnRight.append(btnOK);\n      //divbtnRight.append(btnAddCart);\n      //divbtnRight.append(btnShowSaved);\n      //divbtnsec.append(btnScanFile);\n      //searchTab.append(divbtnsec);\n      //btnsec.append(divbtnRight);\n\n      divbtnLeft = $("<div class=\'vis-info-btnleft\'>");\n      btnRequery = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 10px;\'>").append($("<i class=\'vis vis-refresh\'></i>")); //.append(refreshtxt);\n\n      //PagingCtrls\n      divPaging = $(\'<div class="vis-info-pagingwrp">\');\n      createPageSettings();\n      divPaging.append(ulPaging);\n\n      //if (VIS.Application.isRTL) {\n      //    divbtnLeft.append(btnCancel);\n      //    divbtnLeft.append(btnOK);\n      //    divbtnLeft.append(btnShowSaved);\n      //    divbtnLeft.append(btnAddCart);\n      //    divbtnsec.append(btnScanFile);\n      //    divbtnsec.append(btnShowCart);\n      //    searchTab.append(divbtnsec);\n      //    divbtnRight.append(btnRequery);\n      //}\n      //else {\n      divbtnRight.append(btnCancel);\n      divbtnRight.append(btnOK);\n      divbtnRight.append(btnShowSaved);\n      divbtnRight.append(btnAddCart);\n      divbtnsec.append(btnScanFile);\n      divbtnsec.append(btnShowCart);\n      searchTab.append(divbtnsec);\n      divbtnLeft.append(btnRequery);\n      //}\n\n      // divbtnLeft.append(btnRequery);\n      btnsec.append(divbtnLeft);\n      btnsec.append(divPaging);\n      btnsec.append(divbtnRight);\n      //Busy Indicator\n      bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //bsyDiv.css("width", "98%");\n      //bsyDiv.css("height", "97%");\n      //bsyDiv.css(\'text-align\', \'center\');\n      //bsyDiv.css("position", "absolute");\n      bsyDiv[0].style.visibility = "visible";\n      inforoot.append(subroot);\n      inforoot.append(bsyDiv);\n    }\n    ;\n\n    //Mohit Change------\n    function LoadAttributeControl() {\n      var srchCtrl = {};\n      tr.empty();\n      var _WhereAttr = " M_AttributeSetInstance_ID IN (SELECT  asi.M_AttributeSetInstance_ID as M_AttributeSetInstance_ID   FROM M_AttributeSetInstance asi   WHERE asi.IsActive=\'Y\' AND asi.M_ATTRIBUTESET_ID=" + cmbAttributeSet.ctrl.val() + ")";\n      _AttrSetInstLookUp = VIS.MLookupFactory.get(VIS.Env.getCtx(), WindowNo, 8472, VIS.DisplayType.Search, "M_AttributeSetInstance_ID", 0, false, _WhereAttr);\n      $AttrSetInstControl = new VIS.Controls.VTextBoxButton("M_AttributeSetInstance_ID", false, false, true, VIS.DisplayType.Search, _AttrSetInstLookUp);\n      $AttrSetInstControl.getControl();\n      //$AttrSetInstControl.getBtn(0).css("height", "26px");\n      //$AttrSetInstControl.getBtn(0).css("margin-top", "-1px");\n      //$AttrSetInstControl.getBtn(0).css(\'float\',\'left\');\n      //$AttrSetInstControl.getBtn(1).css("height", "26px");\n      //$AttrSetInstControl.getBtn(1).css("margin-top", "-1px");\n      srchCtrl.Ctrl = $AttrSetInstControl;\n      srchCtrl.AD_Reference_ID = VIS.DisplayType.Search;\n      srchCtrl.ColumnName = "M_AttributeSetInstance_ID";\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      var Leftformfieldbtnwrap = $(\'<div class="input-group-append">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblAttrSetInstance);\n      //tr.append(tdctrl);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n      Leftformfieldwrp.append(Leftformfieldbtnwrap);\n\n      //tr.append(td);\n      Leftformfieldctrlwrp.append($AttrSetInstControl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \').attr(\'data-hasbtn\', \' \'));\n      Leftformfieldbtnwrap.append($AttrSetInstControl.getBtn(0));\n      Leftformfieldbtnwrap.append($AttrSetInstControl.getBtn(1));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n    }\n    ;\n    //---End Mohit Change---\n\n    initializeComponent();\n    InitInfo(M_Warehouse_ID, M_PriceList_ID);\n\n    //var winQry = "SELECT AD_Window_ID FROM AD_Tab WHERE AD_Tab_ID = " + VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(WindowNo, 0, "AD_Tab_ID"));\n    //window_ID = VIS.Utility.Util.getValueOfInt(VIS.DB.executeScalar(winQry));\n\n    // Added by Bharat on 31 May 2017 to remove client side queries\n    var AD_tab_ID = VIS.context.getWindowTabContext(WindowNo, 0, "AD_Tab_ID");\n    window_ID = VIS.dataContext.getJSONRecord("InfoProduct/GetWindowID", AD_tab_ID.toString());\n    // Bharat\n    if (window_ID == 146) {} else if (VIS.context.getContextAsInt(WindowNo, VIS.context.getWindowTabContext(WindowNo, 1, "KeyColumnName")) != 0) {\n      updating = true;\n    }\n    if (!multiSelection || updating) {\n      btnAddCart.hide();\n      btnShowSaved.hide();\n      btnScanFile.hide();\n      btnShowCart.hide();\n    }\n    function bindEvent() {\n      if (!VIS.Application.isMobile) {\n        inforoot.on(\'keyup\', function (e) {\n          if (!(e.keyCode === 13)) {\n            return;\n          }\n          bsyDiv[0].style.visibility = \'visible\';\n          //if (ctrl != null) {\n          if (validationCode != null && validationCode.length > 0) {\n            validation = VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, validationCode, false, false);\n          }\n          // }\n          displayData(true, cmbPage.val());\n          //Mohit Change\n          if (SubGridArray.length > 0) {\n            for (var i = 0; i < SubGridArray.length; i++) {\n              w2ui["subgrid-" + SubGridArray[i]].destroy();\n            }\n            SubGridArray = [];\n          }\n        });\n      }\n      btnScanFile.on("click", function () {\n        btnScanClick();\n      });\n      btnShowCart.on("click", function () {\n        btnShowCartClick();\n      });\n      btnAddCart.on("click", function () {\n        btnAddCartClick();\n      });\n      btnShowSaved.on("click", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        btnShowSavedClick();\n      });\n      btnCancel.on("click", function () {\n        if (self.onClose != null) {\n          self.onClose();\n        }\n        disposeComponent();\n      });\n      btnOK.on("click", function () {\n        btnOKClick();\n      });\n      btnRequery.on("click", function () {\n        validation = null;\n        if (multiSelection && !updating) {\n          btnAddCart.show();\n        }\n        if (infoLines.length == 0) {\n          btnShowSaved.prop(\'disabled\', true);\n        }\n        multiValues = [];\n        bsyDiv[0].style.visibility = \'visible\';\n        if (validationCode != null && validationCode != undefined && validationCode.length > 0) {\n          validation = VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, validationCode, false, false);\n        }\n        displayData(true, 1);\n        //Mohit CHange\n        if (SubGridArray.length > 0) {\n          for (var i = 0; i < SubGridArray.length; i++) {\n            w2ui["subgrid-" + SubGridArray[i]].destroy();\n          }\n          SubGridArray = [];\n        }\n      });\n      //Mohit CHange\n      cmbAttributeSet.ctrl.change(function () {\n        $AttrSetInstControl = null;\n        _AttrSetInstLookUp = null;\n        for (var i = 0; i < srchCtrls.length; i++) {\n          if (srchCtrls[i].Ctrl.colName == "M_AttributeSetInstance_ID") {\n            srchCtrls.splice(i);\n          }\n        }\n        LoadAttributeControl();\n      });\n    }\n    ;\n    bindEvent();\n    //M_Warehouse_ID = VIS.context.getContextAsInt("#M_Warehouse_ID");\n    //InitInfo(M_Warehouse_ID, M_PriceList_ID);\n\n    function InitInfo(M_Warehouse_ID, M_PriceList_ID) {\n      pattrLookup = new VIS.MPAttributeLookup(VIS.context, WindowNo);\n      $productAttribute = new VIS.Controls.VPAttribute("M_AttributeSetInstance_ID", false, false, true, VIS.DisplayType.PAttribute, pattrLookup, WindowNo, false, false, false, true);\n      cmbWarehoue.ctrl.append($(\'<Option value="\' + 0 + \'">\' + "" + \'</option>\'));\n      cmbPriceList.ctrl.append($(\'<Option value="\' + 0 + \'">\' + "" + \'</option>\'));\n      cmbAttributeSet.ctrl.append($(\'<Option value="\' + 0 + \'">\' + "" + \'</option>\'));\n      lstWarehouse = jQuery.parseJSON(lstWarehouse);\n      lstPriceList = jQuery.parseJSON(lstPriceList);\n      if (M_PriceList_ID == 0) {\n        M_PriceList_ID = GetDefaultPriceList();\n      }\n      M_PriceList_Version_ID = FindPLV(VIS.Env.getCtx(), WindowNo, M_PriceList_ID);\n      GetWarehouse();\n      //GetUOMS();\n    }\n    function GetUOMS() {\n      try {\n        VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetUOM", "", LoadUOMCallBack);\n      } catch (e) {\n        console.log(e);\n        bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    function GetWarehouse() {\n      //var sql = VIS.MRole.getDefault().addAccessSQL(\n      //        "SELECT M_Warehouse_ID, Value || \' - \' || Name AS ValueName " + "FROM M_Warehouse " + "WHERE IsActive=\'Y\'",\n      //        "M_Warehouse", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO)\n      //        + " ORDER BY Value";\n      //VIS.DB.executeReader(sql.toString(), null, GetWarehouseCallBack);\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      try {\n        var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetWarehouse", null, null);\n        GetWarehouseCallBack(dr);\n      } catch (e) {\n        console.log(e);\n        bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    function GetWarehouseCallBack(data) {\n      var key, value;\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      if (data.length > 0) {\n        for (var i in data) {\n          key = VIS.Utility.Util.getValueOfInt(data[i]["M_Warehouse_ID"]);\n          value = VIS.Utility.Util.getValueOfString(data[i]["Name"]);\n          cmbWarehoue.getControl().append(" <option value=" + key + ">" + value + "</option>");\n          if (key == M_Warehouse_ID) {\n            cmbWarehoue.ctrl.val(M_Warehouse_ID);\n          }\n        }\n\n        // if no login or default warehouse found then set first warehouse by default.\n        if (M_Warehouse_ID == 0) {\n          cmbWarehoue.ctrl.val(VIS.Utility.Util.getValueOfInt(data[0]["M_Warehouse_ID"]));\n        }\n      }\n      //while (dr.read()) {\n      //    key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n      //    value = dr.getString(1);\n      //    cmbWarehoue.getControl().append(" <option value=" + key + ">" + value + "</option>");\n      //    if (key == M_Warehouse_ID) {\n      //        cmbWarehoue.ctrl.val(M_Warehouse_ID);\n      //    }\n      //}\n      //dr.close();\n      GetPriceList(M_PriceList_ID);\n    }\n    function toggleOkBtn(disable) {\n      if (disable) {\n        btnOK.prop(\'disabled\', \'true\').css({\n          "cursor": "default",\n          "opacity": ".5"\n        });\n      } else {\n        btnOK.prop(\'disabled\', \'\').css({\n          "cursor": "pointer",\n          "opacity": "1"\n        });\n      }\n    }\n    ;\n\n    // function to check comma or dot from given value and return new value\n    function checkcommaordot(event, val) {\n      var foundComma = false;\n      event.value_new = VIS.Utility.Util.getValueOfString(val);\n      if (event.value_new.contains(".")) {\n        foundComma = true;\n        var indices = [];\n        for (var i = 0; i < event.value_new.length; i++) {\n          if (event.value_new[i] === ".") indices.push(i);\n        }\n        if (indices.length > 1) {\n          event.value_new = removeAllButLast(event.value_new, \'.\');\n        }\n      }\n      if (event.value_new.contains(",")) {\n        if (foundComma) {\n          event.value_new = removeAllButLast(event.value_new, \',\');\n        } else {\n          var indices = [];\n          for (var i = 0; i < event.value_new.length; i++) {\n            if (event.value_new[i] === ",") indices.push(i);\n          }\n          if (indices.length > 1) {\n            event.value_new = removeAllButLast(event.value_new, \',\');\n          } else {\n            event.value_new = event.value_new.replace(",", ".");\n          }\n        }\n      }\n      if (event.value_new == "") {\n        event.value_new = "0";\n      }\n      return event.value_new;\n    }\n    ;\n\n    // Remove all seperator but only bring last seperator\n    function removeAllButLast(amt, seprator) {\n      var parts = amt.split(seprator);\n      amt = parts.slice(0, -1).join(\'\') + \'.\' + parts.slice(-1);\n      if (amt.indexOf(\'.\') == amt.length - 1) {\n        amt = amt.replace(".", "");\n      }\n      return amt;\n    }\n    ;\n    function GetDefaultPriceList() {\n      var retValue = 0;\n      //var sql = "SELECT M_PriceList_ID FROM M_PriceList WHERE IsActive = \'Y\' AND IsDefault = \'Y\'";\n      //var qry = VIS.MRole.getDefault().addAccessSQL(sql, "M_PriceList", VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RO); // fully qualidfied - RO\n      //retValue = VIS.Utility.Util.getValueOfInt(VIS.DB.executeScalar(qry, null));\n      //return retValue;\n\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      try {\n        var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetDefaultPriceList", null, null);\n        if (data != null) {\n          retValue = data;\n        }\n      } catch (e) {\n        console.log(e);\n        bsyDiv[0].style.visibility = "hidden";\n      }\n      return retValue;\n    }\n\n    //function DefaultPriceCallBack(data) {\n    //    var retValue = 0;\n    //    if (data != null) {\n    //        retValue = data;\n    //    }\n    //    return retValue;\n    //}\n\n    function GetPriceList(PriceList) {\n      //var sql = "SELECT plv.M_PriceList_Version_ID,"\n      //         + " plv.Name || \' (\' || c.ISO_Code || \')\' AS ValueName "\n      //         + "FROM M_PriceList_Version plv, M_PriceList pl, C_Currency c "\n      //         + "WHERE plv.M_PriceList_ID=pl.M_PriceList_ID" + " AND pl.C_Currency_ID=c.C_Currency_ID"\n      //         + " AND plv.IsActive=\'Y\' AND pl.IsActive=\'Y\'";\n      //// Same PL currency as original one\n      //if (PriceList != 0) {\n      //    sql += " AND EXISTS (SELECT * FROM M_PriceList xp WHERE xp.M_PriceList_ID=" + PriceList + ")";\n      //    //   +" AND pl.C_Currency_ID=xp.C_Currency_ID)";\n      //}\n      //// Add Access & Order\n      //var qry = VIS.MRole.getDefault().addAccessSQL(sql, "M_PriceList_Version", VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RO) // fully qualidfied - RO\n      //        + " ORDER BY plv.Name";\n\n      //VIS.DB.executeReader(qry.toString(), null, PriceListCallBack);\n\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      try {\n        var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetPriceList", {\n          "PriceList": PriceList\n        }, null);\n        PriceListCallBack(dr);\n      } catch (e) {\n        console.log(e);\n        bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    function PriceListCallBack(data) {\n      var key, value;\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      if (data.length > 0) {\n        for (var i in data) {\n          key = VIS.Utility.Util.getValueOfInt(data[i]["M_PriceList_Version_ID"]);\n          value = VIS.Utility.Util.getValueOfString(data[i]["Name"]);\n          cmbPriceList.getControl().append(" <option value=" + key + ">" + value + "</option>");\n          if (key == M_PriceList_Version_ID) {\n            cmbPriceList.ctrl.val(M_PriceList_Version_ID);\n          }\n        }\n      }\n\n      //while (dr.read()) {\n      //    key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n      //    value = dr.getString(1);\n      //    cmbPriceList.getControl().append(" <option value=" + key + ">" + value + "</option>");\n      //    if (key == M_PriceList_Version_ID) {\n      //        cmbPriceList.ctrl.val(M_PriceList_Version_ID);\n      //    }\n      //}\n      //dr.close();\n      GetAttributeSet();\n    }\n\n    //Mohit-------------\n    function GetAttributeSet() {\n      //var sql = VIS.MRole.getDefault().addAccessSQL(\n      //        "SELECT M_AttributeSet_ID, Name FROM M_AttributeSet WHERE IsActive=\'Y\'",\n      //        "M_AttributeSet", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO)\n      //        + " ORDER BY Name";\n      //VIS.DB.executeReader(sql.toString(), null, GetAttributeSetCallBack);\n\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      try {\n        VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetAttributeSet", null, GetAttributeSetCallBack);\n      } catch (e) {\n        console.log(e);\n        bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    function GetAttributeSetCallBack(data) {\n      var key, value;\n      //while (dr.read()) {\n      //    key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n      //    value = dr.getString(1);\n      //    cmbAttributeSet.getControl().append(" <option value=" + key + ">" + value + "</option>");\n      //}\n      //dr.close();\n\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      if (data.length > 0) {\n        for (var i in data) {\n          key = VIS.Utility.Util.getValueOfInt(data[i]["M_AttributeSet_ID"]);\n          value = VIS.Utility.Util.getValueOfString(data[i]["Name"]);\n          cmbAttributeSet.getControl().append(" <option value=" + key + ">" + value + "</option>");\n        }\n      }\n    }\n    //end------------\n\n    function FindPLV(ctx, p_WindowNo, M_PriceList_ID) {\n      var priceDate = null;\n      var retValue = 0;\n      var dateStr = ctx.getContext(p_WindowNo, "DateOrdered");\n      if (dateStr != null && dateStr.Length > 0) {\n        priceDate = System.Convert.ToDateTime(VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, "DateOrdered", false, false));\n      } else {\n        dateStr = ctx.getContext(p_WindowNo, "DateInvoiced");\n        if (dateStr != null && dateStr.Length > 0) {\n          priceDate = System.Convert.ToDateTime(VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, "DateInvoiced", false, false));\n        }\n      }\n      //\tToday \n      if (priceDate == null) {\n        var d = new Date();\n        priceDate = VIS.Utility.Util.getValueOfDate(d);\n      }\n\n      // Added by Bharat on 31 May 2017 to remove client side queries\n      try {\n        var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetPriceListVersion", {\n          "PriceList": M_PriceList_ID\n        }, null);\n        if (data.length > 0) {\n          for (var i in data) {\n            var version_ID = VIS.Utility.Util.getValueOfInt(data[i]["M_PriceList_Version_ID"]);\n            var validFrom = VIS.Utility.Util.getValueOfString(data[i]["ValidFrom"]);\n            if (priceDate > validFrom) {\n              retValue = version_ID;\n            }\n          }\n          if (retValue == 0) {\n            retValue = VIS.Utility.Util.getValueOfInt(data[0]["M_PriceList_Version_ID"]);\n          }\n        }\n      } catch (e) {\n        console.log(e);\n        bsyDiv[0].style.visibility = "hidden";\n      }\n\n      //var retValue = 0;\n      //var sql = "SELECT plv.M_PriceList_Version_ID, plv.ValidFrom "\n      //   + "FROM M_PriceList pl, M_PriceList_Version plv "\n      //   + "WHERE pl.M_PriceList_ID=plv.M_PriceList_ID"\n      //   + " AND plv.IsActive=\'Y\'"\n      //   + " AND pl.M_PriceList_ID=" + M_PriceList_ID\t\t\t\t\t//\t1\n      //   + " ORDER BY plv.ValidFrom DESC";\n      //\tfind newest one\n      //var dr = null;\n      //try {\n\n      //    dr = VIS.DB.executeReader(sql, null);\n      //    if (dr.read()) {\n      //        var pldate = dr.getDateTime(1);\n      //        if (priceDate > pldate) {\n      //            retValue = dr.getInt(0);\n      //        }\n      //        else {\n      //            retValue = dr.getInt(0);\n      //        }\n      //    }\n      //    dr.close();\n      //    dr = null;\n      //}\n      //catch (e) {\n      //    if (dr != null) {\n      //        dr.close();\n      //    }\n      //    this.log.Log(Level.SEVERE, sql, e);\n      //}\n      return retValue;\n    }\n    function btnShowCartClick() {\n      chkDelCart = false;\n      invCount_ID = 0;\n      var obj = new VIS.InfoScanForm(WindowNo, true);\n      obj.showDialog();\n      obj.onClose = function (drProd, chk, count_ID) {\n        bsyDiv[0].style.visibility = "visible";\n        window.setTimeout(function () {\n          chkDelCart = chk;\n          invCount_ID = count_ID;\n          var session = VIS.Env.getCtx().getContext("#AD_Session_ID");\n          //while (drProd.read()) {\n          if (drProd && drProd.length > 0) {\n            for (var i in drProd) {\n              var prodName = "";\n              var uom = "";\n              var attr_ID = 0;\n              var uom_ID = 0;\n              var name = "";\n              //var qty = drProd.getDecimal("vaicnt_quantity");\n              //var M_Product_ID = drProd.getInt("M_Product_ID");\n              //var value = drProd.getString("value");\n              //attr_ID = drProd.getInt("M_AttributeSetInstance_ID");\n              //var attrName = drProd.getString("description");\n              //var countID = drProd.getInt("VAICNT_InventoryCountLine_ID");\n              //prodName = drProd.getString("name");\n              //uom = drProd.getString("uom");\n              //uom_ID = drProd.getInt("C_UOM_ID");\n              var qty = drProd[i]["VAICNT_Quantity"];\n              var M_Product_ID = drProd[i]["M_Product_ID"];\n              var value = drProd[i]["Value"];\n              attr_ID = drProd[i]["M_AttributeSetInstance_ID"];\n              var attrName = drProd[i]["Description"];\n              var countID = drProd[i]["VAICNT_InventoryCountLine_ID"];\n              prodName = drProd[i]["Name"];\n              uom = drProd[i]["UOM"];\n              uom_ID = drProd[i]["C_UOM_ID"];\n\n              // Reference Line ID will be Orderline and Requisitionline only in case of Reference no and for M_Inout table and Internal use Inventory and InventoryMove\n              var RefLineID = drProd[i]["LineID"];\n              if (qty > 0) {\n                if (infoLines.length > 0) {\n                  // Consolidate quantity based on 4 parameters Product, UOM , Attribute Set Instance and Line ID\n                  var removeIndex = infoLines.map(function (i) {\n                    return i._prdID == M_Product_ID && i._Attribute == attr_ID && i._uom == uom_ID && i._refLineID == RefLineID;\n                  }).indexOf(true);\n                  if (removeIndex > -1) {\n                    infoLines[removeIndex]._prodQty += qty;\n                  } else {\n                    infoLines.push({\n                      _prodQty: qty,\n                      _prdID: M_Product_ID,\n                      _prdName: prodName,\n                      _value: value,\n                      _uom: uom_ID,\n                      _uomName: uom,\n                      _AD_Session_ID: session,\n                      _windowNo: WindowNo,\n                      _RefNo: "",\n                      _Attribute: attr_ID,\n                      _AttributeName: attrName,\n                      _Locator_ID: 0,\n                      _IsLotSerial: "N",\n                      _countID: countID,\n                      _refLineID: RefLineID\n                    });\n                  }\n                } else {\n                  infoLines.push({\n                    _prodQty: qty,\n                    _prdID: M_Product_ID,\n                    _prdName: prodName,\n                    _value: value,\n                    _uom: uom_ID,\n                    _uomName: uom,\n                    _AD_Session_ID: session,\n                    _windowNo: WindowNo,\n                    _RefNo: "",\n                    _Attribute: attr_ID,\n                    _AttributeName: attrName,\n                    _Locator_ID: 0,\n                    _IsLotSerial: "N",\n                    _countID: countID,\n                    _refLineID: RefLineID\n                  });\n                }\n                multiAttr[attr_ID] = attrName;\n              }\n            }\n          }\n          btnShowSavedClick();\n        }, 200);\n      };\n    }\n    ;\n    var btnScanClick = function () {\n      chkDelCart = false;\n      invCount_ID = 0;\n      var obj = new VIS.InfoScanForm(WindowNo, false);\n      obj.showDialog();\n      obj.onClose = function (drProd, chk, count_ID) {\n        bsyDiv[0].style.visibility = "visible";\n        chkDelCart = chk;\n        invCount_ID = count_ID;\n        var session = VIS.Env.getCtx().getContext("#AD_Session_ID");\n        //while (drProd.read()) {\n        if (drProd && drProd.length > 0) {\n          for (var i in drProd) {\n            var prodName = "";\n            var uom = "";\n            var uom_ID = 0;\n            //var attr_ID = drProd.getInt("M_AttributeSetInstance_ID");\n            //var attrName = drProd.getString("description");\n            //var countID = drProd.getInt("VAICNT_InventoryCountLine_ID");\n            //var qty = drProd.getDecimal("vaicnt_quantity");\n            //var M_Product_ID = drProd.getInt("M_Product_ID");\n            //var value = drProd.getString("value");\n            //prodName = drProd.getString("name");\n            //uom = drProd.getString("uom");\n            //uom_ID = drProd.getInt("C_UOM_ID");\n            //var RefNo = drProd.getString("VAICNT_ReferenceNo");\n            var attr_ID = drProd[i]["M_AttributeSetInstance_ID"];\n            var attrName = drProd[i]["Description"];\n            var countID = drProd[i]["VAICNT_InventoryCountLine_ID"];\n            var qty = drProd[i]["VAICNT_Quantity"];\n            var M_Product_ID = drProd[i]["M_Product_ID"];\n            var value = drProd[i]["Value"];\n            prodName = drProd[i]["Name"];\n            uom = drProd[i]["UOM"];\n            uom_ID = drProd[i]["C_UOM_ID"];\n            var RefNo = drProd[i]["VAICNT_ReferenceNo"];\n            if (RefNo == "") {\n              RefNo = "null";\n            }\n            // Reference Line ID will be Orderline and Requisitionline only in case of Reference no and for M_Inout table and Internal use Inventory and InventoryMove\n            var RefLineID = drProd[i]["LineID"];\n            if (qty > 0) {\n              if (infoLines.length > 0) {\n                // Consolidate quantity based on 4 parameters Product, UOM , Attribute Set Instance and Line ID\n                var removeIndex = infoLines.map(function (i) {\n                  return i._prdID == M_Product_ID && i._Attribute == attr_ID && i._uom == uom_ID && i._refLineID == RefLineID;\n                }).indexOf(true);\n                if (removeIndex > -1) {\n                  infoLines[removeIndex]._prodQty += qty;\n                } else {\n                  infoLines.push({\n                    _prodQty: qty,\n                    _prdID: M_Product_ID,\n                    _prdName: prodName,\n                    _value: value,\n                    _uom: uom_ID,\n                    _uomName: uom,\n                    _AD_Session_ID: session,\n                    _windowNo: WindowNo,\n                    _RefNo: RefNo,\n                    _Attribute: attr_ID,\n                    _AttributeName: attrName,\n                    _Locator_ID: 0,\n                    _IsLotSerial: "N",\n                    _countID: countID,\n                    _refLineID: RefLineID\n                  });\n                }\n              } else {\n                infoLines.push({\n                  _prodQty: qty,\n                  _prdID: M_Product_ID,\n                  _prdName: prodName,\n                  _value: value,\n                  _uom: uom_ID,\n                  _uomName: uom,\n                  _AD_Session_ID: session,\n                  _windowNo: WindowNo,\n                  _RefNo: RefNo,\n                  _Attribute: attr_ID,\n                  _AttributeName: attrName,\n                  _Locator_ID: 0,\n                  _IsLotSerial: "N",\n                  _countID: countID,\n                  _refLineID: RefLineID\n                });\n              }\n              multiAttr[attr_ID] = attrName;\n            }\n          }\n        }\n        btnShowSavedClick();\n      };\n    };\n    var btnAddCartClick = function () {\n      //debugger;\n      //if (multiSelection) {\n      //var selection = w2ui[grdname].getSelection();\n      //for (item in selection) {\n      //    multiValues.push(w2ui[grdname].get(selection[item]));\n      //}\n      bsyDiv[0].style.visibility = "visible";\n      saveSelection();\n      displayData(true, cmbPage.val());\n      //Mohit Change\n      if (SubGridArray.length > 0) {\n        for (var i = 0; i < SubGridArray.length; i++) {\n          w2ui["subgrid-" + SubGridArray[i]].destroy();\n        }\n        SubGridArray = [];\n      }\n      if (infoLines.length > 0) {\n        btnShowSaved.prop(\'disabled\', false);\n      } else {\n        btnShowSaved.prop(\'disabled\', true);\n      }\n      multiValues = [];\n    };\n    var btnShowSavedClick = function () {\n      var prodID = [];\n      var value = [];\n      var qty = [];\n      var prodName = [];\n      var uomID = [];\n      var uom = [];\n      var Attribute = [];\n      var AttributeName = [];\n      var ReferenceNo = [];\n      savedProduct = [];\n      btnAddCart.hide();\n      for (var item in infoLines) {\n        prodID.push(infoLines[item]._prdID);\n        prodName.push(infoLines[item]._prdName);\n        value.push(infoLines[item]._value);\n        qty.push(infoLines[item]._prodQty);\n        ReferenceNo.push(infoLines[item]._RefNo);\n        Attribute.push(infoLines[item]._Attribute);\n        AttributeName.push(infoLines[item]._AttributeName);\n        uomID.push(infoLines[item]._uom);\n        uom.push(infoLines[item]._uomName);\n      }\n      if (prodID.length > 0) {\n        for (var i = 0; i < prodID.length; i++) {\n          savedProduct.push({\n            SrNo: i,\n            Product: prodName[i],\n            Value: value[i],\n            QtyEntered: qty[i],\n            UOM_ID: uomID[i],\n            UOM: uom[i],\n            M_Product_ID1: prodID[i],\n            Attribute: Attribute[i],\n            AttributeName: AttributeName[i],\n            RefNo: ReferenceNo[i]\n          });\n        }\n        BindGridSavedProducts();\n      }\n      bsyDiv[0].style.visibility = "hidden";\n    };\n    function LoadUOMCallBack(data) {\n      var key, value;\n      if (data.length > 0) {\n        for (var i in data) {\n          key = VIS.Utility.Util.getValueOfInt(data[i]["C_UOM_ID"]);\n          value = VIS.Utility.Util.getValueOfString(data[i]["Name"]);\n          uomArray.push({\n            id: key,\n            text: value\n          });\n        }\n      }\n    }\n    ;\n    function BindGridSavedProducts() {\n      if (dGrid != null) {\n        dGrid.destroy();\n        dGrid = null;\n      }\n      var grdRows = [];\n      for (var j = 0; j < savedProduct.length; j++) {\n        var row = {};\n        row["Product"] = savedProduct[j].Product;\n        row["Value"] = savedProduct[j].Value;\n        row["QtyEntered"] = savedProduct[j].QtyEntered;\n        row["UOM"] = savedProduct[j].UOM;\n        row["Attribute"] = savedProduct[j].Attribute;\n        row["ProdID"] = savedProduct[j].M_Product_ID1;\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      grdname = \'gridsavedprd\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(grdRows);\n      dGrid = $(datasec).w2grid({\n        name: grdname,\n        recordHeight: 40,\n        show: {\n          toolbar: false,\n          // indicates if toolbar is v isible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: false,\n          // indicates if line numbers column is visible\n          selectColumn: true,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: [{\n          field: "Value",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "Value") + \'</span></div>\',\n          sortable: false,\n          size: \'120px\',\n          min: 100,\n          hidden: false\n        }, {\n          field: "Product",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "Product") + \'</span></div>\',\n          sortable: false,\n          size: \'20%\',\n          min: 150,\n          hidden: false\n        }, {\n          field: "QtyEntered",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "QtyEntered") + \'</span></div>\',\n          sortable: false,\n          size: \'70px\',\n          min: 60,\n          hidden: false,\n          editable: {\n            type: \'float\'\n          },\n          render: function (record, index, colIndex) {\n            var val = VIS.Utility.Util.getValueOfDecimal(record["QtyEntered"]);\n            return val.toLocaleString();\n          }\n        }, {\n          field: "UOM",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "UOM") + \'</span></div>\',\n          sortable: false,\n          size: \'70px\',\n          min: 60,\n          hidden: false\n        },\n        //{\n        //    field: "UOM", caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.getElement(VIS.Env.getCtx(), "C_UOM_ID") + \'</span></div>\', sortable: false, size: \'80px\', min: 80, hidden: false, editable: { type: \'select\', items: uomArray, showAll: true },\n        //    render: function (record, index, col_index) {\n        //        var html = \'\';\n        //        for (var p in uomArray) {\n        //            if (uomArray[p].id == this.getCellValue(index, col_index)) html = uomArray[p].text;\n        //        }\n        //        return html;\n        //    }\n        //},\n        {\n          field: "Attribute",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "Attribute"),\n          sortable: false,\n          size: \'20%\',\n          min: 150,\n          hidden: false,\n          editable: {\n            type: \'custom\',\n            ctrl: $productAttribute,\n            showAll: true\n          },\n          render: function (record, index, col_index) {\n            var l = pattrLookup;\n            var val = record["Attribute"];\n            var d = multiAttr[val];\n            if (!d && val > 0) {\n              d = l.getDisplay(val, true);\n              multiAttr[val] = d;\n            }\n            return d;\n          }\n        }, {\n          field: "Delete",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "DeleteActivity") + \'</span></div>\',\n          sortable: false,\n          size: \'60px\',\n          min: 40,\n          hidden: false,\n          render: function () {\n            return \'<div class="vis-info-grid-icowrap"><i class="vis vis-delete title="Delete record" style="opacity: 1;"></i></div>\';\n          }\n        }, {\n          field: "Copy",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "Copy") + \'</span></div>\',\n          sortable: false,\n          size: \'60px\',\n          min: 40,\n          hidden: false,\n          render: function () {\n            return \'<div class="vis-info-grid-icowrap"><i class="vis vis-new title="Copy record" style="opacity: 1;"></i></div>\';\n          }\n        }, {\n          field: "ProdID",\n          caption: \'<div style="text-align: center;" ><span>\' + VIS.Msg.translate(VIS.Env.getCtx(), "ProdID") + \'</span></div>\',\n          sortable: false,\n          size: \'20%\',\n          min: 150,\n          hidden: true\n        }],\n        records: grdRows,\n        //multiSelect: multiSelection,\n\n        onChange: function (event) {\n          if (event.column == 2) {\n            w2ui[grdname].records[event.index]["QtyEntered"] = event.value_new;\n            infoLines[event.index]._prodQty = event.value_new;\n            savedProduct[event.index].QtyEntered = event.value_new;\n          } else if (event.column == 4) {\n            w2ui[grdname].records[event.index]["Attribute"] = event.value_new;\n            infoLines[event.index]._Attribute = event.value_new;\n            savedProduct[event.index].Attribute = event.value_new;\n          }\n        },\n        onClick: function (event) {\n          if (event.column == 5 && dGrid.records.length > 0) {\n            bsyDiv[0].style.visibility = "visible";\n            infoLines.splice(event.recid - 1, 1);\n            savedProduct.splice(event.recid - 1, 1);\n            BindDataSavedProduct();\n          } else if (event.column == 6 && dGrid.records.length > 0) {\n            bsyDiv[0].style.visibility = "visible";\n            savedProduct.push({\n              SrNo: savedProduct.length,\n              Product: savedProduct[event.recid - 1].Product,\n              Value: savedProduct[event.recid - 1].Value,\n              QtyEntered: savedProduct[event.recid - 1].QtyEntered,\n              UOM_ID: savedProduct[event.recid - 1].UOM_ID,\n              UOM: savedProduct[event.recid - 1].UOM,\n              M_Product_ID1: savedProduct[event.recid - 1].M_Product_ID1,\n              Attribute: "",\n              AttributeName: "",\n              RefNo: savedProduct[event.recid - 1].RefNo\n            });\n            infoLines[infoLines.length] = {\n              _prodQty: savedProduct[savedProduct.length - 1].QtyEntered,\n              _prdID: savedProduct[savedProduct.length - 1].M_Product_ID1,\n              _prdName: savedProduct[savedProduct.length - 1].Product,\n              _value: savedProduct[savedProduct.length - 1].Value,\n              _uom: savedProduct[savedProduct.length - 1].UOM_ID,\n              _uomName: savedProduct[savedProduct.length - 1].UOM,\n              _AD_Session_ID: VIS.Env.getCtx().getContext("#AD_Session_ID"),\n              _windowNo: WindowNo,\n              _RefNo: "",\n              _Attribute: 0,\n              _AttributeName: "",\n              _Locator_ID: 0,\n              _IsLotSerial: "N",\n              _countID: 0\n            };\n            BindDataSavedProduct();\n          } else if (event.column == 4 && dGrid.records.length > 0) {\n            //debugger;\n            //var productWindow = AD_Column_ID == 8418;\t\t//\tHARDCODED\n            //var M_Locator_ID = VIS.context.getContextAsInt(WindowNo, "M_Locator_ID");\n            //var C_BPartner_ID = VIS.context.getContextAsInt(WindowNo, "C_BPartner_ID");\n            //var obj = new VIS.PAttributesForm(VIS.Utility.Util.getValueOfInt(savedProduct[event.recid - 1].Attribute), VIS.Utility.Util.getValueOfInt(savedProduct[event.recid - 1].M_Product_ID1), M_Locator_ID, C_BPartner_ID, productWindow, AD_Column_ID, WindowNo);\n            //if (obj.hasAttribute) {\n            //    obj.showDialog();\n            //}\n            //obj.onClose = function (mAttributeSetInstanceId, name, mLocatorId) {\n            //    this.M_Locator_ID = mLocatorId;\n            //    savedProduct[event.recid - 1].AttributeName = name;\n            //    savedProduct[event.recid - 1].Attribute = mAttributeSetInstanceId;\n            //    infoLines[event.recid - 1]._Attribute = mAttributeSetInstanceId;\n            //    infoLines[event.recid - 1]._AttributeName = name;\n            //    BindGridSavedProducts();\n            //};\n            VIS.Env.getCtx().setContext(WindowNo, "M_Product_ID", VIS.Utility.Util.getValueOfInt(savedProduct[event.recid - 1].M_Product_ID1));\n          }\n        },\n        onSelect: onSelectRow,\n        onUnselect: onUnSelectRow\n      });\n      //for (var k = 0; k < dGrid.records.length; k++) {\n      //    $("#grid_" + grdname + "_rec_" + dGrid.records[k].recid).find("input[type=text]").val(savedProduct[k].AttributeName);\n      //}\n      bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    function onSelectRow(e) {\n      toggleOkBtn(false);\n    }\n    ;\n    function onUnSelectRow(e) {\n      if (!multiSelection) {\n        toggleOkBtn(true);\n        return;\n      }\n      window.setTimeout(function () {\n        if (w2ui[e.target].getSelection().length == 0) toggleOkBtn(true);\n      }, 50);\n    }\n    ;\n\n    // Bind data into Saved Product Grid\n    function BindDataSavedProduct() {\n      dGrid.clear();\n      var grdRows = [];\n      for (var j = 0; j < savedProduct.length; j++) {\n        var row = {};\n        //grdCol[item] = { field: dynData[item].ColumnName, sortable: true, attr: \'align=center\' };\n        row["Product"] = savedProduct[j].Product;\n        row["Value"] = savedProduct[j].Value;\n        row["QtyEntered"] = savedProduct[j].QtyEntered;\n        row["UOM"] = savedProduct[j].UOM;\n        row["Attribute"] = savedProduct[j].Attribute;\n        row["ProdID"] = savedProduct[j].M_Product_ID1;\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      if (grdRows.length > 0) {\n        w2utils.encodeTags(grdRows);\n        dGrid.add(grdRows);\n      }\n      bsyDiv[0].style.visibility = "hidden";\n    }\n    var btnOKClick = function () {\n      //debugger;\n\n      bsyDiv[0].style.visibility = "visible";\n      if (multiSelection && infoLines.length > 0 && btnAddCart.css("display") == "none") {\n        multiValues = [];\n        // refreshUI = true;\n\n        // Change by Lokesh Chauhan if records selected from cart and \n        // any specific rows selected in that case insert only selected lines\n        var grdSel = w2ui[grdname].getSelection();\n        var selectedItems = infoLines;\n        if (grdSel.length > 0) {\n          selectedItems = [];\n          for (var i = 0; i < grdSel.length; i++) {\n            var prodID = w2ui[grdname].records[grdSel[i] - 1].ProdID;\n            var attrID = w2ui[grdname].records[grdSel[i] - 1].Attribute;\n            selectedItems.push($.grep(infoLines, function (e) {\n              return e._prdID == prodID && e._Attribute == attrID;\n            })[0]);\n          }\n          infoLines = selectedItems;\n        }\n        SaveProducts(infoLines);\n      } else {\n        // grid is multiselection, and selected rows count greater than 1 and insert from main grid.\n        if (multiSelection && w2ui[grdname].getSelection().length > 1 && btnAddCart.css("display") == "block") {\n          infoMultipleLineSave = GetMultipleSelectionSave();\n          //refreshUI = true;\n          SaveProducts(infoMultipleLineSave);\n        } else {\n          multiValues = [];\n          var selection = w2ui[grdname].getSelection();\n          for (item in selection) {\n            if (multiValues.indexOf(w2ui[grdname].get(selection[item])[keyCol]) == -1) {\n              multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n            }\n          }\n          bsyDiv[0].style.visibility = "hidden";\n          if (self.onClose != null) {\n            self.onClose();\n          }\n          disposeComponent();\n        }\n      }\n    };\n    // Method to get array of rows selected from main grid in case of multiple selection and insertion.\n    var GetMultipleSelectionSave = function () {\n      var selection = w2ui[grdname].getSelection();\n      var selectedItems;\n      if (selection.length > 0) {\n        selectedItems = [];\n        for (var i = 0; i < selection.length; i++) {\n          if (w2ui[grdname].records[selection[i] - 1].QTYENTERED > 0) {\n            var product_ID = w2ui[grdname].records[selection[i] - 1].M_PRODUCT_ID;\n            var attribute_ID = w2ui[grdname].records[selection[i] - 1].M_AttributeSetInstance_ID;\n            //selectedItems.push($.grep(infoLines, function (e) { return e._prdID == prodID && e._Attribute == attrID; })[0]);\n            if (selectedItems.length > 0) {\n              var removeIndex = selectedItems.map(function (i) {\n                return i._prdID == product_ID && i._Attribute == attribute_ID;\n              }).indexOf(true);\n              if (removeIndex > -1) {\n                selectedItems[removeIndex]._prodQty += qty;\n              } else {\n                selectedItems.push({\n                  _prodQty: w2ui[grdname].records[selection[i] - 1].QTYENTERED,\n                  _prdID: w2ui[grdname].records[selection[i] - 1].M_PRODUCT_ID,\n                  _prdName: w2ui[grdname].records[selection[i] - 1].NAME,\n                  _value: w2ui[grdname].records[selection[i] - 1].NAME,\n                  _uom: w2ui[grdname].records[selection[i] - 1].C_UOM_ID,\n                  _uomName: w2ui[grdname].records[selection[i] - 1].UOM,\n                  _AD_Session_ID: VIS.Env.getCtx().getContext("#AD_Session_ID"),\n                  _windowNo: WindowNo,\n                  _RefNo: "",\n                  _Attribute: w2ui[grdname].records[selection[i] - 1].M_AttributeSetInstance_ID,\n                  _AttributeName: "",\n                  _Locator_ID: 0,\n                  _IsLotSerial: "N",\n                  _countID: 0\n                });\n              }\n            } else {\n              selectedItems.push({\n                _prodQty: w2ui[grdname].records[selection[i] - 1].QTYENTERED,\n                _prdID: w2ui[grdname].records[selection[i] - 1].M_PRODUCT_ID,\n                _prdName: w2ui[grdname].records[selection[i] - 1].NAME,\n                _value: w2ui[grdname].records[selection[i] - 1].NAME,\n                _uom: w2ui[grdname].records[selection[i] - 1].C_UOM_ID,\n                _uomName: w2ui[grdname].records[selection[i] - 1].UOM,\n                _AD_Session_ID: VIS.Env.getCtx().getContext("#AD_Session_ID"),\n                _windowNo: WindowNo,\n                _RefNo: "",\n                _Attribute: w2ui[grdname].records[selection[i] - 1].M_AttributeSetInstance_ID,\n                _AttributeName: "",\n                _Locator_ID: 0,\n                _IsLotSerial: "N",\n                _countID: 0\n              });\n            }\n          }\n        }\n      }\n      return selectedItems;\n    };\n\n    // change function to display message after completion of save\n    function saveComplete(success, extraMsg, count) {\n      bsyDiv[0].style.visibility = "hidden";\n      // if success, then refresh grid.\n      if (success) {\n        refreshUI = true;\n      }\n      if (self.onClose != null) {\n        self.onClose();\n      }\n      disposeComponent();\n\n      // var msg = VIS.Msg.getMsg("RecordsSavedPlzRequery");\n      var msg = VIS.Msg.getMsg("RecSaved");\n      if (!success) {\n        if (count > 0) {\n          msg = count + " " + VIS.Msg.getMsg("RecordsNotSaved");\n        } else msg = VIS.Msg.getMsg("ErrorInSaving");\n      }\n      if (extraMsg && extraMsg != "") msg += ", " + extraMsg;\n      VIS.ADialog.info("", true, msg);\n    }\n    ;\n    function SaveProducts(pqtyAll) {\n      var recordID = 0;\n      var keycolName = "";\n      var lineID = 0;\n      var lineName = "";\n      var M_Locator_ID = 0;\n      var M_LocatorTo_ID = 0;\n      var id = 0,\n        lineid = 0;\n\n      // Change by Lokesh Chauhan to set Product Container on windows\n      // where we have Product Container field\n      var prodContainerID = 0;\n      var prodContainerToID = 0;\n\n      //M_Locator_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(WindowNo, 1, "M_Locator_ID"));\n      // change by Lokesh Chauhan, picked locator selected on Line\n      // if not selected pick default locator from header while saving on Server side\n      M_Locator_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(WindowNo, "M_Locator_ID", true));\n      recordID = VIS.context.getContextAsInt(WindowNo, VIS.context.getWindowTabContext(WindowNo, 0, "KeyColumnName"));\n      keycolName = VIS.context.getWindowTabContext(WindowNo, 0, "KeyColumnName");\n      lineID = VIS.context.getContextAsInt(WindowNo, VIS.context.getWindowTabContext(WindowNo, 1, "KeyColumnName"));\n      lineName = VIS.context.getWindowTabContext(WindowNo, 1, "KeyColumnName");\n      prodContainerID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(WindowNo, "M_ProductContainer_ID", true));\n      if (window_ID == 170) {\n        // change by Lokesh Chauhan, picked Locator To selected on Line\n        M_LocatorTo_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(WindowNo, "M_LocatorTo_ID", true));\n        prodContainerToID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(WindowNo, "Ref_M_ProductContainerTo_ID", true));\n        //M_LocatorTo_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(WindowNo, 1, "M_LocatorTo_ID"));\n      }\n      if (window_ID == 146) {\n        recordID = VIS.context.getContextAsInt(WindowNo, VIS.context.getWindowTabContext(WindowNo, 1, "KeyColumnName"));\n        lineID = 0;\n      }\n      id = VIS.Utility.Util.getValueOfInt(recordID);\n      lineid = VIS.Utility.Util.getValueOfInt(lineID);\n      var prodID = [];\n      var qty = [];\n      var Attr = [];\n      var uoms = [];\n      var RefNo = [];\n      var listAst = [];\n      var IsLotSerial = [];\n      var Count_ID = [];\n\n      //var _referNo = "";\n      if (infoLines.length > 0 && btnAddCart.css("display") == "none") {\n        for (var item in infoLines) {\n          //if (item == 0) {\n          //    _referNo = infoLines[item]._RefNo;\n          //}\n          prodID.push(infoLines[item]._prdID);\n          qty.push(infoLines[item]._prodQty);\n          RefNo.push(infoLines[item]._RefNo);\n          listAst.push(infoLines[item]._Attribute);\n          uoms.push(infoLines[item]._uom);\n          Count_ID.push(infoLines[item]._countID);\n          // Commented by Lokesh Chauhan as No Locator ID selected from infoLines in any case\n          //if (infoLines[item]._Locator_ID > 0) {\n          //ListLoc.push(infoLines[item]._Locator_ID);\n          //}\n          //else {\n          //ListLoc.push(M_Locator_ID);\n          //}\n          if (lineid != 0) {\n            break;\n          }\n        }\n        alength = infoLines.length;\n      } else {\n        for (var item in infoMultipleLineSave) {\n          //if (item == 0) {\n          //    _referNo = infoLines[item]._RefNo;\n          //}\n          prodID.push(infoMultipleLineSave[item]._prdID);\n          qty.push(infoMultipleLineSave[item]._prodQty);\n          RefNo.push(infoMultipleLineSave[item]._RefNo);\n          listAst.push(infoMultipleLineSave[item]._Attribute);\n          uoms.push(infoMultipleLineSave[item]._uom);\n          Count_ID.push(infoMultipleLineSave[item]._countID);\n          // Commented by Lokesh Chauhan as No Locator ID selected from infoLines in any case\n          //if (infoLines[item]._Locator_ID > 0) {\n          //ListLoc.push(infoLines[item]._Locator_ID);\n          //}\n          //else {\n          //ListLoc.push(M_Locator_ID);\n          //}\n          if (lineid != 0) {\n            break;\n          }\n        }\n        alength = infoMultipleLineSave.length;\n      }\n      TotalPages = alength % saveCount == 0 ? alength / saveCount : Math.ceil(alength / saveCount);\n      if (TotalPages == 1) {\n        if (keycolName == "SAP001_StockTransfer_ID") {\n          $.ajax({\n            type: "POST",\n            url: VIS.Application.contextUrl + "InfoProduct/SaveStockTfr",\n            dataType: "json",\n            data: {\n              id: id,\n              keyColumn: keycolName,\n              AD_Table_ID: VIS.context.getWindowTabContext(WindowNo, 1, "AD_Table_ID"),\n              prod: JSON.stringify(prodID),\n              C_UOM_ID: JSON.stringify(uoms),\n              listAst: JSON.stringify(listAst),\n              qty: JSON.stringify(qty),\n              locatorTo: M_LocatorTo_ID,\n              lineID: lineid,\n              ContainerID: prodContainerID\n            },\n            success: function (data) {\n              var returnValue = data.result;\n              if (returnValue) {\n                return;\n              }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n              bsyDiv[0].style.visibility = "hidden";\n              console.log(textStatus);\n              if (returnValue) {\n                return;\n              }\n            }\n          });\n        } else {\n          $.ajax({\n            type: "POST",\n            url: VIS.Application.contextUrl + "InfoProduct/Save",\n            dataType: "json",\n            data: {\n              id: id,\n              keyColumn: keycolName,\n              prod: JSON.stringify(prodID),\n              C_UOM_ID: JSON.stringify(uoms),\n              listAst: JSON.stringify(listAst),\n              qty: JSON.stringify(qty),\n              locatorTo: M_LocatorTo_ID,\n              lineID: lineid,\n              InvCountID: JSON.stringify(Count_ID),\n              ReferenceNo: JSON.stringify(RefNo),\n              Locator_ID: M_Locator_ID,\n              WindowID: window_ID,\n              ContainerID: prodContainerID,\n              ContainerToID: prodContainerToID\n            },\n            success: function (data) {\n              var returnValue = JSON.parse(data);\n              if (returnValue.count == 0) {\n                if (chkDelCart) {\n                  try {\n                    VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/DeleteCart", {\n                      "invCount_ID": invCount_ID\n                    }, null);\n                  } catch (e) {\n                    console.log(e);\n                    saveComplete(true, e.message);\n                  }\n                }\n                saveComplete(true);\n                return;\n              } else {\n                setErrorMessage(returnValue);\n                saveComplete(false, getErrorMessage(), returnValue.count);\n                return;\n              }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n              bsyDiv[0].style.visibility = "hidden";\n              console.log(textStatus);\n            }\n          });\n        }\n      } else {\n        saveProductPaging(id, keycolName, lineid, prodID, qty, Attr, uoms, RefNo, listAst, M_Locator_ID, M_LocatorTo_ID, IsLotSerial, Count_ID, prodContainerID, prodContainerToID);\n      }\n    }\n    function saveProductPaging(id, keycolName, lineid, prodID, qty, Attr, uoms, RefNo, listAst, M_Locator_ID, M_LocatorTo_ID, IsLotSerial, Count_ID, prodContainerID, prodContainerToID) {\n      var $status = inforoot.find(\'.filestatuscounter\');\n      if ($status.text() != "") {\n        if (TotalPages == insertedCount) {\n          $status.text(alength + " Records Inserted..Please Wait..!!");\n        } else {\n          $status.text(insertedCount * saveCount - noCount + " Records Inserted..Please Wait..!!");\n        }\n      } else {\n        createStatusIndicator(insertedCount * saveCount);\n      }\n      if (keycolName == "SAP001_StockTransfer_ID") {\n        $.ajax({\n          type: "POST",\n          url: VIS.Application.contextUrl + "InfoProduct/SaveStockTfr",\n          dataType: "json",\n          data: {\n            id: id,\n            keyColumn: keycolName,\n            AD_Table_ID: VIS.context.getWindowTabContext(WindowNo, 1, "AD_Table_ID"),\n            prod: JSON.stringify(prodID.splice(0, saveCount)),\n            C_UOM_ID: JSON.stringify(uoms.splice(0, saveCount)),\n            listAst: JSON.stringify(listAst.splice(0, saveCount)),\n            qty: JSON.stringify(qty.splice(0, saveCount)),\n            locatorTo: M_LocatorTo_ID,\n            lineID: lineid,\n            ContainerID: prodContainerID\n          },\n          success: function (data) {\n            var returnValue = data.result;\n            if (returnValue) {\n              return;\n            }\n          },\n          error: function (jqXHR, textStatus, errorThrown) {\n            bsyDiv[0].style.visibility = "hidden";\n            console.log(textStatus);\n            if (returnValue) {\n              return;\n            }\n          }\n        });\n      } else {\n        $.ajax({\n          type: "POST",\n          //url: VIS.Application.contextUrl + "ViennaAdvantage/InfoProduct/Save",\n          url: VIS.Application.contextUrl + "InfoProduct/Save",\n          dataType: "json",\n          data: {\n            id: id,\n            keyColumn: keycolName,\n            prod: JSON.stringify(prodID.splice(0, saveCount)),\n            C_UOM_ID: JSON.stringify(uoms.splice(0, saveCount)),\n            listAst: JSON.stringify(listAst.splice(0, saveCount)),\n            qty: JSON.stringify(qty.splice(0, saveCount)),\n            locatorTo: M_LocatorTo_ID,\n            lineID: lineid,\n            InvCountID: JSON.stringify(Count_ID.splice(0, saveCount)),\n            ReferenceNo: RefNo,\n            Locator_ID: M_Locator_ID,\n            WindowID: window_ID,\n            ContainerID: prodContainerID,\n            ContainerToID: prodContainerToID\n          },\n          success: function (data) {\n            var returnValue = JSON.parse(data);\n            insertedCount++;\n            if (TotalPages == insertedCount) {\n              if (noCount == 0) {\n                if (chkDelCart) {\n                  try {\n                    VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/DeleteCart", {\n                      "invCount_ID": invCount_ID\n                    }, null);\n                  } catch (e) {\n                    console.log(e);\n                    saveComplete(true, e.message);\n                  }\n                }\n                saveComplete(true);\n                return;\n              } else {\n                setErrorMessage(returnValue);\n                noCount += returnValue.count;\n                saveComplete(false, getErrorMessage(), noCount);\n                return;\n              }\n            } else {\n              if (returnValue.count == 0) {} else {\n                setErrorMessage(returnValue);\n                noCount += returnValue.count;\n              }\n              saveProductPaging(id, keycolName, lineid, prodID, qty, Attr, uoms, RefNo, listAst, M_Locator_ID, M_LocatorTo_ID, IsLotSerial, Count_ID, prodContainerID, prodContainerToID);\n            }\n          },\n          error: function (jqXHR, textStatus, errorThrown) {\n            bsyDiv[0].style.visibility = "hidden";\n            console.log(textStatus);\n          }\n        });\n      }\n    }\n    ;\n\n    // function to get error Message in case \n    // some errors stored in case of pages and for single page as well\n    function getErrorMessage() {\n      var errorMsg = "";\n      if (errorMsgKeys.length > 0) {\n        for (var i = 0; i < errorMsgKeys.length; i++) {\n          if (i != 0) errorMsg += " ::: ";\n          errorMsg += errorMsgKeys[i] + " --\x3e " + errorMsgProds[i];\n        }\n      }\n      errorMsgKeys = [];\n      errorMsgProds = [];\n      return errorMsg;\n    }\n    ;\n\n    // function to set error Message against error key\n    // if same key is found then add products against same key\n    // else create new entry in the array\n    function setErrorMessage(retVal) {\n      if (retVal.errorKeys.length > 0) {\n        if (errorMsgKeys.length > 0) {\n          for (var i = 0; i < retVal.errorKeys.length; i++) {\n            var ind = errorMsgKeys.indexOf(retVal.errorKeys[i]);\n            if (ind >= 0) {\n              errorMsgProds[ind] = errorMsgProds[ind] + ", " + retVal.errorProds[i];\n            } else {\n              errorMsgKeys.push(retVal.errorKeys[i]);\n              errorMsgProds.push(retVal.errorProds[i]);\n            }\n          }\n        } else {\n          errorMsgKeys = retVal.errorKeys;\n          errorMsgProds = retVal.errorProds;\n        }\n      } else {\n        errorMsgKeys.push(retVal.error);\n      }\n    }\n    ;\n    function onClosing() {\n      if (self.onClose != null) {\n        self.onClose();\n      }\n      disposeComponent();\n      //inforoot.dialog("close");\n      //inforoot = null;\n    }\n    ;\n    this.show = function () {\n      //debugger;\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoProduct/GetInfoColumns",\n        dataType: "json",\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ERRORGettingSearchCols\'));\n          bsyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          displayCols = jQuery.parseJSON(data);\n          if (displayCols == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingSearchCols\'));\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n\n          //var refreshtxt = VIS.Msg.getMsg("Refresh");\n          //if (refreshtxt.indexOf(\'&\') > -1) {\n          //    refreshtxt = refreshtxt.replace(\'&\', \'\');\n          //}\n          //var canceltxt = VIS.Msg.getMsg("Cancel");\n          //if (canceltxt.indexOf(\'&\') > -1) {\n          //    canceltxt = canceltxt.replace(\'&\', \'\');\n          //}\n          //var Oktxt = VIS.Msg.getMsg("Ok");\n          //if (Oktxt.indexOf(\'&\') > -1) {\n          //    Oktxt = Oktxt.replace(\'&\', \'\');\n          //}\n          inforoot.dialog({\n            width: 1020,\n            height: 500,\n            title: VIS.Msg.translate(VIS.Env.getCtx(), "InfoProduct"),\n            resizable: false,\n            modal: true,\n            closeText: VIS.Msg.getMsg("close"),\n            close: onClosing\n          });\n          if (validationCode != null && validationCode.length > 0) {\n            validation = VIS.Env.parseContext(VIS.Env.getCtx(), WindowNo, validationCode, false, false);\n          }\n          displayData(true, cmbPage.val());\n        }\n      });\n    };\n    var displayData = function (requery, pNo) {\n      //debugger;\n      if (multiSelection && w2ui[grdname]) {\n        var selection = w2ui[grdname].getSelection();\n        for (item in selection) {\n          if (multiValues.indexOf(w2ui[grdname].get(selection[item])[keyCol]) == -1) {\n            multiValues.push(w2ui[grdname].get(selection[item]));\n            toggleOkBtn(false);\n          }\n        }\n      } else {\n        toggleOkBtn(true);\n      }\n      if (requery) toggleOkBtn(true);\n      disposeDataSec();\n      //var sql = "SELECT ";\n      //var sqlWhere = "";\n      //var cname = null;\n      var displayType = 0;\n      //var count = $.makeArray(displayCols).length;\n      //get Qry from InfoColumns\n      for (var item in displayCols) {\n        displayType = displayCols[item].AD_Reference_ID;\n        //if (displayType == VIS.DisplayType.YesNo) {\n        //    sql += " ( CASE " + displayCols[item].ColumnSQL + " WHEN \'Y\' THEN  \'True\' ELSE \'False\'  END ) " + displayCols[item].ColumnName;\n        //}\n        //else {\n        //    sql += displayCols[item].ColumnSQL + " ";\n        //}\n\n        if (displayType == VIS.DisplayType.ID && displayCols[item].ColumnName.toUpperCase() == "M_PRODUCT_ID") {\n          keyCol = displayCols[item].ColumnName.toUpperCase();\n        }\n\n        //if (!((count - 1) == item)) {\n        //    sql += \', \';\n        //}\n      }\n      if (requery == true) {\n        //var whereClause = " rownum <= " + (ismobile ? 50 : 100);\n        //var whereClause = " w.AD_Client_ID = " + VIS.context.getAD_Client_ID();\n        var name = "";\n        var value = "";\n        var upc = "";\n        var sku = "";\n        var srchValue = null;\n        var upcSearch = false;\n        //s_productFrom =\n        //    "M_Product p"\n        //    + " LEFT OUTER JOIN M_ProductPrice pr ON (p.M_Product_ID=pr.M_Product_ID AND pr.IsActive=\'Y\')"\n        //    + " LEFT OUTER JOIN M_PriceList_Version plv ON (pr.M_PriceList_Version_ID=plv.M_PriceList_Version_ID)"\n        //    + " LEFT OUTER JOIN M_AttributeSet pa ON (p.M_AttributeSet_ID=pa.M_AttributeSet_ID)"\n        //    + " LEFT OUTER JOIN C_UOM c ON (p.C_UOM_ID=c.C_UOM_ID)";\n        for (var i = 0; i < srchCtrls.length; i++) {\n          srchValue = srchCtrls[i].Ctrl.getValue();\n          if (srchValue == null || srchValue.length == 0 || srchValue == 0 || !srchValue) {\n            srchCtrls[i]["Value"] = "";\n            continue;\n          }\n          srchCtrls[i]["Value"] = srchValue;\n          srchCtrls[i]["CtrlColumnName"] = srchCtrls[i].Ctrl.colName;\n          //if (whereClause.length > 0) {\n          //    whereClause += " AND ";\n          //}\n\n          if (srchCtrls[i].Ctrl.displayType == 10) {\n            //if (!(String(srchValue).indexOf("%") == 0)) {\n            //    srchValue = "●" + srchValue;\n            //}\n            //else {\n            //    srchValue = String(srchValue).replace("%", "●");\n            //}\n            //if (!((String(srchValue).lastIndexOf("●")) == (String(srchValue).length))) {\n            //    srchValue = srchValue + "●";\n            //}\n            srchValue = VIS.DB.to_string(srchValue);\n          }\n\n          //if (srchCtrls[i].Ctrl.colName == "Value") {\n          //    whereClause += " AND UPPER(p." + srchCtrls[i].ColumnName + ") LIKE " + srchValue.toUpperCase();\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "Name") {\n          //    whereClause += " AND UPPER(p." + srchCtrls[i].ColumnName + ") LIKE " + srchValue.toUpperCase();\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "UPC") {\n          //    upcSearch = true;\n          //    //s_productFrom += " LEFT OUTER JOIN M_manufacturer mr ON (p.M_Product_ID=mr.M_Product_ID) LEFT OUTER JOIN M_ProductAttributes patr ON (p.M_Product_ID=patr.M_Product_ID)"\n          //    //whereClause += " AND (UPPER(patr.UPC) LIKE " + srchValue.toUpperCase() + " OR UPPER(p.UPC) LIKE " + srchValue.toUpperCase()\n          //    //    + " OR UPPER(mr.UPC) LIKE " + srchValue.toUpperCase() + " OR UPPER(uc.UPC) LIKE " + srchValue.toUpperCase() + ")"\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "SKU") {\n          //    whereClause += " AND UPPER(p." + srchCtrls[i].ColumnName + ") LIKE " + srchValue.toUpperCase();\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "M_Warehouse_ID") {\n          //    if (VIS.Utility.Util.getValueOfInt(srchValue) != 0) {\n          //        whereClause += " AND w.M_Warehouse_ID=" + VIS.Utility.Util.getValueOfInt(srchValue);\n          //    }\n          //}\n          //else if (srchCtrls[i].Ctrl.colName == "M_PriceList_Version_ID") {\n          //    if (VIS.Utility.Util.getValueOfInt(srchValue) != 0) {\n          //        whereClause += " AND pr.M_PriceList_Version_ID=" + VIS.Utility.Util.getValueOfInt(srchValue);\n          //    }\n          //}\n          //else if (srchCtrls[i].Ctrl.colName == "M_AttributeSet_ID") {\n          //    if (VIS.Utility.Util.getValueOfInt(srchValue) != 0) {\n          //        whereClause += " AND p.M_AttributeSet_ID=" + VIS.Utility.Util.getValueOfInt(srchValue);\n          //    }\n          //}\n          //else if (srchCtrls[i].Ctrl.colName == "AttributeCode") {\n          //    whereClause += " AND p.M_Product_ID in (SELECT distinct M_Product_ID from M_ProductAttributes WHERE UPPER(UPC) LIKE \'" + srchValue.toUpperCase() + "\')";\n          //}\n        }\n\n        //if (upcSearch) {\n        //    s_productFrom += " LEFT OUTER JOIN M_manufacturer mr ON (p.M_Product_ID=mr.M_Product_ID) LEFT OUTER JOIN M_ProductAttributes patr ON (p.M_Product_ID=patr.M_Product_ID)" +\n        //        " LEFT OUTER JOIN C_UOM_Conversion uc ON (p.M_Product_ID=uc.M_Product_ID)";\n        //}\n\n        //sql += " FROM " + s_productFrom + " JOIN M_Warehouse w ON (1=1)";\n\n        //if (window_ID == 181) {\n        //    if (validation != null && validation.length > 0) {\n        //        validation += " AND (p.Discontinued = \'N\' OR p.DiscontinuedBy > sysdate )";\n        //    }\n        //}\n\n        //if (whereClause.length > 1) {\n        //    sqlWhere += " WHERE " + whereClause;\n        //    if (validation != null && validation.length > 0) {\n        //        sqlWhere += " AND " + validation.replace(/M_Product\\./g, "p.");\n        //        //sql += " AND " + validationCode;\n        //    }\n        //}\n        //else if (validation != null && validation.length > 0) {\n        //    sqlWhere += " WHERE " + validation.replace(/M_Product\\./g, "p.");\n        //}\n      }\n      //else {\n      //sql += " FROM " + s_productFrom + " JOIN M_Warehouse w ON (1=1)";\n\n      //if (validation != null && validation.length > 0 && validation.trim().toUpperCase().startsWith(\'WHERE\')) {\n      //    sqlWhere += " " + validation.replace(/M_Product\\./g, "p.") + " AND " + tableName + "_ID=-1";\n      //}\n      //else if (validation != null && validation.length > 0) {\n      //    sqlWhere += " WHERE p." + tableName + "_ID=-1 AND " + validation.replace(/M_Product\\./g, "p.");\n      //}\n      //else {\n      //    sqlWhere += " WHERE p." + tableName + "_ID=-1";\n      //}\n      //}\n\n      if (!pNo) {\n        pNo = 1;\n      }\n      var srhCtrls = [];\n      if (srchCtrls && Object.keys(srchCtrls).length > 0) {\n        for (var x = 0; x < Object.keys(srchCtrls).length; x++) {\n          var vals = {};\n          vals.CtrlColumnName = srchCtrls[x].CtrlColumnName;\n          vals.ColumnName = srchCtrls[x].ColumnName;\n          vals.Value = srchCtrls[x].Value;\n          srhCtrls.push(vals);\n        }\n      }\n\n      //var _sql = VIS.secureEngine.encrypt(sql);\n      //var _sqlWhere = VIS.secureEngine.encrypt(sqlWhere);\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoProduct/GetData",\n        dataType: "json",\n        type: "POST",\n        //async: false,\n        data: {\n          //sql: _sql,\n          //where: _sqlWhere,\n          tableName: tableName,\n          pageNo: pNo,\n          ForMobile: ismobile,\n          Requery: requery,\n          SrchCtrl: JSON.stringify(srhCtrls),\n          Validation: VIS.secureEngine.encrypt(validation),\n          Window_ID: window_ID\n        },\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n          bsyDiv[0].style.visibility = \'hidden\';\n          return;\n        },\n        success: function (dyndata) {\n          var res = JSON.parse(dyndata);\n          if (res == null) {\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          if (res.Error) {\n            VIS.ADialog.error(res.Error);\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          resetPageCtrls(res.pSetting);\n          loadData(res.data);\n        }\n      });\n    };\n    var loadData = function (dynData) {\n      if (dynData == null) {\n        alert(VIS.Msg.getMsg(\'NoDataFound\'));\n        bsyDiv[0].style.visibility = "hidden";\n        return;\n      }\n      var grdCols = [];\n      var grdRows = [];\n      var rander = null;\n      var displayType = null;\n      for (var item in dynData) {\n        var oColumn = {\n          resizable: true\n        };\n        displayType = displayCols[item].AD_Reference_ID;\n        oColumn.caption = displayCols[item].Name;\n        oColumn.field = displayCols[item].ColumnName.toUpperCase();\n        oColumn.columnName = displayCols[item].ColumnName.toUpperCase();\n        oColumn.sortable = true;\n        oColumn.hidden = false;\n        oColumn.size = \'100px\';\n        if (VIS.DisplayType.IsNumeric(displayType)) {\n          if (displayType == VIS.DisplayType.Integer) {\n            oColumn.render = \'int\';\n          } else {\n            //if (displayType == VIS.DisplayType.Amount) {\n            oColumn.render = function (record, index, colIndex) {\n              var val = VIS.Utility.Util.getValueOfDecimal(record[grdCols[colIndex].field]);\n              return val.toLocaleString(undefined, {\n                minimumFractionDigits: 2\n              });\n            };\n          }\n          //else {\n          //    oColumn.render = \'number:1\';\n          //}\n          if (displayCols[item].ColumnName.toUpperCase() == \'QTYENTERED\') {\n            if (multiSelection && !updating) {\n              oColumn.editable = {\n                type: \'number\'\n              }, oColumn.render = function (record, index, colIndex) {\n                var val = record[grdCols[colIndex].field];\n                val = checkcommaordot(event, val);\n                return parseFloat(val).toLocaleString(undefined, {\n                  minimumFractionDigits: 2\n                });\n              };\n            }\n          }\n        }\n        //\tYesNo\n        //else if (displayType == VIS.DisplayType.YesNo) {\n\n        //    oColumn.render = function (record, index, colIndex) {\n\n        //        var chk = (record[grdCols[colIndex].field]) == \'True\' ? "checked" : "";\n\n        //        return \'<input type="checkbox" \' + chk + \' disabled="disabled" >\';\n        //    }\n        //}\n\n        //Date /////////\n        else if (VIS.DisplayType.IsDate(displayType)) {\n          oColumn.render = function (record, index, colIndex) {\n            var d = record[grdCols[colIndex].field];\n            if (d) {\n              d = new Date(d).toLocaleDateString();\n            } else d = "";\n            return d;\n          };\n        } else if (displayType == VIS.DisplayType.Location || displayType == VIS.DisplayType.Locator) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.Account) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.PAttribute) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.Button) {\n          oColumn.render = function (record) {\n            return \'<div>button</div>\';\n          };\n        } else if (displayType == VIS.DisplayType.Image) {\n          oColumn.render = function (record) {\n            return \'<div>Image</div>\';\n          };\n        } else if (VIS.DisplayType.IsLOB(displayType)) {\n          oColumn.render = function (record) {\n            return \'<div>[Lob-blob]</div>\';\n          };\n        }\n        grdCols[item] = oColumn;\n      }\n      grdCols[grdCols.length] = {\n        field: \'M_AttributeSetInstance_ID\',\n        caption: \'M_AttributeSetInstance_ID\',\n        size: \'150px\',\n        hidden: true\n      };\n\n      //var noofRecords = ismobile ? 50 : 100;\n      for (var j = 0; j < dynData[0].RowCount; j++) {\n        var row = {};\n        for (var item in dynData) {\n          //grdCol[item] = { field: dynData[item].ColumnName, sortable: true, attr: \'align=center\' };\n          row[dynData[item].ColumnName.toUpperCase()] = dynData[item].Values[j];\n        }\n        row[\'M_AttributeSetInstance_ID\'] = 0;\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      if (!multiSelection && (multiValues.length > 0 || w2ui[grdname] && w2ui[grdname].getSelection().length > 0)) {\n        toggleOkBtn(true);\n      }\n      grdname = \'gridPrdInfodata\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(grdRows);\n      dGrid = $(datasec).w2grid({\n        name: grdname,\n        recordHeight: 40,\n        show: {\n          toolbar: false,\n          // indicates if toolbar is v isible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: false,\n          // indicates if line numbers column is visible\n          selectColumn: true,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: grdCols,\n        records: grdRows,\n        // On Expand Function by Mohit        \n\n        onExpand: function (event) {\n          bsyDiv[0].style.visibility = \'visible\';\n          //Get Variant Data To Bind in grid\n          getVariantData(event);\n          //if (multiSelection && !updating) {\n\n          if (w2ui.hasOwnProperty(\'subgrid-\' + event.recid)) w2ui[\'subgrid-\' + event.recid].destroy();\n          if (SubGridArray.indexOf(event.recid) == -1) {\n            SubGridArray.push(event.recid);\n          }\n          $(\'#\' + event.box_id).css({\n            margin: \'0px\',\n            padding: \'0px\',\n            width: \'100%\',\n            height: \'105px\'\n          }); //.animate({ height: \'105px\' }, 100);\n          setTimeout(function () {\n            $(\'#\' + event.box_id).w2grid({\n              name: \'subgrid-\' + event.recid,\n              show: {\n                columnHeaders: true,\n                selectColumn: true\n              },\n              fixedBody: true,\n              columns: SubGridCol,\n              records: variantRecords,\n              onChange: function (event) {\n                var chk = -1;\n                var ParentRec_ID = w2ui[event.target].records[event.index]["ParentRec_ID"];\n\n                //w2ui[grdname].records[event.index]["QTYENTERED"] = event.value_new;\n                if (multiValues.length > 0) {\n                  for (var item in multiValues) {\n                    if (multiValues[item].M_PRODUCT_ID == w2ui[grdname].records[ParentRec_ID - 1].M_PRODUCT_ID && multiValues[item].M_AttributeSetInstance_ID == w2ui[event.target].records[event.index]["M_AttributeSetInstance_ID"]) {\n                      chk = item;\n                      break;\n                    }\n                  }\n                  if (chk > -1) {\n                    multiValues[chk].QTYENTERED = event.value_new;\n                  } else {\n                    var obj = w2ui[grdname].records[ParentRec_ID - 1];\n                    var ObjClone = JSON.parse(JSON.stringify(obj));\n                    ObjClone.M_AttributeSetInstance_ID = w2ui[event.target].records[event.index]["M_AttributeSetInstance_ID"];\n                    ObjClone.QTYENTERED = event.value_new;\n                    multiValues.push(ObjClone);\n                  }\n                } else {\n                  var obj = w2ui[grdname].records[ParentRec_ID - 1];\n                  var ObjClone = JSON.parse(JSON.stringify(obj));\n                  ObjClone.M_AttributeSetInstance_ID = w2ui[event.target].records[event.index]["M_AttributeSetInstance_ID"];\n                  ObjClone.QTYENTERED = event.value_new;\n                  multiValues.push(ObjClone);\n                }\n              }\n            });\n            w2ui[\'subgrid-\' + event.recid].resize();\n            bsyDiv[0].style.visibility = \'hidden\';\n          }, 500);\n        },\n        onEditField: function (event) {\n          id = event.recid;\n          if (event.column == 5) {\n            w2ui[grdname].records[event.index]["QTYENTERED"] = checkcommaordot(event, w2ui[grdname].records[event.index]["QTYENTERED"]);\n            var _value = format.GetFormatAmount(w2ui[grdname].records[event.index]["QTYENTERED"], "init", dotFormatter);\n            w2ui[grdname].records[event.index]["QTYENTERED"] = format.GetConvertedString(_value, dotFormatter);\n            $("#grid_" + dGrid.name + "_rec_" + id).keydown(function (event) {\n              if (!dotFormatter && (event.keyCode == 190 || event.keyCode == 110)) {\n                // , separator\n                return false;\n              } else if (dotFormatter && event.keyCode == 188) {\n                // . separator\n                return false;\n              }\n              if (event.target.value.contains(".") && (event.which == 110 || event.which == 190 || event.which == 188)) {\n                if (event.target.value.indexOf(\'.\') > -1) {\n                  event.target.value = event.target.value.replace(\'.\', \'\');\n                }\n              } else if (event.target.value.contains(",") && (event.which == 110 || event.which == 190 || event.which == 188)) {\n                if (event.target.value.indexOf(\',\') > -1) {\n                  event.target.value = event.target.value.replace(\',\', \'\');\n                }\n              }\n              if (event.keyCode != 8 && event.keyCode != 9 && (event.keyCode < 37 || event.keyCode > 40) && (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105) && event.keyCode != 109 && event.keyCode != 189 && event.keyCode != 110 && event.keyCode != 144 && event.keyCode != 188 && event.keyCode != 190) {\n                return false;\n              }\n            });\n          }\n        },\n        //On Expand Function ends here                \n\n        onChange: function (event) {\n          var chk = -1;\n          var _val = format.GetConvertedNumber(event.value_new, dotFormatter);\n          w2ui[grdname].records[event.index]["QTYENTERED"] = _val.toFixed(2);\n          if (multiValues.length > 0) {\n            for (var item in multiValues) {\n              if (multiValues[item].M_PRODUCT_ID == w2ui[grdname].records[event.index].M_PRODUCT_ID && multiValues[item].M_AttributeSetInstance_ID == 0) {\n                chk = item;\n                break;\n              }\n            }\n            if (chk > -1) {\n              multiValues[chk].QTYENTERED = _val.toFixed(2);\n            } else {\n              multiValues.push(w2ui[grdname].records[event.index]);\n            }\n          } else {\n            multiValues.push(w2ui[grdname].records[event.index]);\n          }\n        },\n        onSelect: onSelectRow,\n        onUnselect: onUnSelectRow\n      });\n      w2ui[grdname].hideColumn(\'M_PRODUCT_ID\');\n      w2ui[grdname].hideColumn(\'C_UOM_ID\');\n      w2ui[grdname].hideColumn(\'UOM\');\n      w2ui[grdname].hideColumn(\'M_WAREHOUSE_ID\');\n      w2ui[grdname].hideColumn(\'M_PRICELIST_VERSION_ID\');\n      if (!multiSelection || updating) {\n        w2ui[grdname].hideColumn(\'QTYENTERED\');\n      }\n      // $("#w2ui-even").css("height", "40px");\n      bsyDiv[0].style.visibility = "hidden";\n    };\n    var disposeDataSec = function () {\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n    };\n    this.getSelectedValues = function () {\n      return multiValues;\n    };\n    this.getRefreshStatus = function () {\n      return refreshUI;\n    };\n    var saveSelection = function () {\n      if (multiSelection && (multiValues.length > 0 || w2ui[grdname].getSelection().length > 0)) {\n        GetSelectedRowKeys();\n      } else {\n        return;\n      }\n    };\n    var GetSelectedRowKeys = function () {\n      if (w2ui[grdname].getSelection().length > 0) {\n        var selection = w2ui[grdname].getSelection();\n        for (var item in selection) {\n          var prd = w2ui[grdname].get(selection[item]).M_PRODUCT_ID;\n          // Change By Mohit\n          var childgrdname = \'subgrid-\' + w2ui[grdname].get(selection[item]).recid;\n          if (w2ui[childgrdname] != undefined) {\n            if (w2ui[childgrdname].getSelection().length > 0) {\n              var ChildSelection = w2ui[childgrdname].getSelection();\n              for (var rec in ChildSelection) {\n                if (multiValues.length > 0) {\n                  var removeIndex = multiValues.map(function (i) {\n                    return i.M_PRODUCT_ID == prd && i.M_AttributeSetInstance_ID == w2ui[childgrdname].records[ChildSelection[rec] - 1].M_AttributeSetInstance_ID;\n                  }).indexOf(true);\n                  if (removeIndex > -1) {\n                    continue;\n                  } else {\n                    var obj = w2ui[grdname].get(selection[item]);\n                    var ObjClone = JSON.parse(JSON.stringify(obj));\n                    ObjClone.M_AttributeSetInstance_ID = w2ui[childgrdname].records[ChildSelection[rec] - 1].M_AttributeSetInstance_ID;\n                    ObjClone.QTYENTERED = w2ui[childgrdname].records[ChildSelection[rec] - 1].Quantity;\n                    multiValues.push(ObjClone);\n                  }\n                } else {\n                  var obj = w2ui[grdname].get(selection[item]);\n                  var ObjClone = JSON.parse(JSON.stringify(obj));\n                  ObjClone.M_AttributeSetInstance_ID = w2ui[childgrdname].records[ChildSelection[rec] - 1].M_AttributeSetInstance_ID;\n                  ObjClone.QTYENTERED = w2ui[childgrdname].records[ChildSelection[rec] - 1].Quantity;\n                  multiValues.push(ObjClone);\n                }\n              }\n            } else {\n              if (multiValues.length > 0) {\n                var removeIndex = multiValues.map(function (i) {\n                  return i.M_PRODUCT_ID == prd && i.M_AttributeSetInstance_ID == 0;\n                }).indexOf(true);\n                if (removeIndex > -1) {\n                  continue;\n                } else {\n                  multiValues.push(w2ui[grdname].get(selection[item]));\n                }\n              } else {\n                multiValues.push(w2ui[grdname].get(selection[item]));\n              }\n            }\n          } else {\n            if (multiValues.length > 0) {\n              var removeIndex = multiValues.map(function (i) {\n                return i.M_PRODUCT_ID == prd && i.M_AttributeSetInstance_ID == 0;\n              }).indexOf(true);\n              if (removeIndex > -1) {\n                continue;\n              } else {\n                multiValues.push(w2ui[grdname].get(selection[item]));\n              }\n            } else {\n              multiValues.push(w2ui[grdname].get(selection[item]));\n            }\n          }\n        }\n      }\n      if (multiValues.length > 0) {\n        for (var item in multiValues) {\n          var qty = multiValues[item].QTYENTERED;\n          if (qty > 0) {\n            if (infoLines.length > 0) {\n              var removeIndex = infoLines.map(function (i) {\n                return i._prdID == multiValues[item].M_PRODUCT_ID && i._Attribute == multiValues[item].M_AttributeSetInstance_ID;\n              }).indexOf(true);\n              if (removeIndex > -1) {\n                infoLines[removeIndex]._prodQty += qty;\n              } else {\n                infoLines.push({\n                  _prodQty: qty,\n                  _prdID: multiValues[item].M_PRODUCT_ID,\n                  _prdName: multiValues[item].NAME,\n                  _value: multiValues[item].VALUE,\n                  _uom: multiValues[item].C_UOM_ID,\n                  _uomName: multiValues[item].UOM,\n                  _AD_Session_ID: VIS.Env.getCtx().getContext("#AD_Session_ID"),\n                  _windowNo: WindowNo,\n                  _RefNo: "",\n                  _Attribute: multiValues[item].M_AttributeSetInstance_ID,\n                  _AttributeName: "",\n                  _Locator_ID: 0,\n                  _IsLotSerial: "N",\n                  _countID: 0\n                });\n              }\n            } else {\n              infoLines.push({\n                _prodQty: qty,\n                _prdID: multiValues[item].M_PRODUCT_ID,\n                _prdName: multiValues[item].NAME,\n                _value: multiValues[item].VALUE,\n                _uom: multiValues[item].C_UOM_ID,\n                _uomName: multiValues[item].UOM,\n                _AD_Session_ID: VIS.Env.getCtx().getContext("#AD_Session_ID"),\n                _windowNo: WindowNo,\n                _RefNo: "",\n                _Attribute: multiValues[item].M_AttributeSetInstance_ID,\n                _AttributeName: "",\n                _Locator_ID: 0,\n                _IsLotSerial: "N",\n                _countID: 0\n              });\n            }\n          }\n        }\n      }\n    };\n    var disposeComponent = function () {\n      //   btnExpander.off(\'click\');\n      inforoot.off(\'keyup\');\n      btnCancel.off("click");\n      btnOK.off("click");\n      btnRequery.off("click");\n      liFirstPage.off("click");\n      liPrevPage.off("click");\n      liNextPage.off("click");\n      liLastPage.off("click");\n      cmbPage.off("change");\n      liFirstPage = liPrevPage = liNextPage = liLastPage = cmbPage = null;\n      datasec = null;\n      searchSec = null;\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n      isExpanded = null;\n      subroot = null;\n      sSContainer = null;\n      ssHeader = null;\n      btnExpander = null;\n      searchTab = null;\n      searchSec = null;\n      datasec = null;\n      btnsec = null;\n      refreshtxt = null;\n      canceltxt = null;\n      Oktxt = null;\n      divbtnRight = null;\n      btnCancel = null;\n      btnOK = null;\n      divbtnLeft = null;\n      btnRequery = null;\n      btnShowCart = null;\n      bsyDiv = null;\n      schema = null;\n      srchCtrls = null;\n      displayCols = null;\n      dGrid = null;\n      self = null;\n      keyCol = null;\n      multiValues = null;\n      singlevalue = null;\n      infoLines = null;\n      savedProduct = null;\n      refreshUI = false;\n      ismobile = null;\n      chkDelCart = null;\n      if (inforoot != null) {\n        // inforoot.dialog(\'close\');\n        inforoot.dialog(\'destroy\');\n        inforoot.remove();\n      }\n      inforoot = null;\n      this.btnOKClick = null;\n      this.displaySearchCol = null;\n      this.displayData = null;\n      this.loadData = null;\n      this.disposeComponent = null;\n      this.disposeDataSec = null;\n      this.getSelectedValues = null;\n      this.refreshUI = null;\n      if (SubGridArray.length > 0) {\n        for (var i = 0; i < SubGridArray.length; i++) {\n          w2ui["subgrid-" + SubGridArray[i]].destroy();\n        }\n        SubGridArray = [];\n      }\n    };\n\n    //*****************\n    //Load StatusDiv\n    //*****************\n    function createStatusIndicator(recordCount) {\n      $statusDiv = $("<div class=\'filestatus\'> <label class=\'filestatuscounter\'>" + recordCount + " Records Inserted..Please Wait..!!</lable></div>");\n      $statusDiv.css({\n        "position": "absolute",\n        "width": "98%",\n        "height": "97%",\n        \'text-align\': \'center\',\n        \'z-index\': \'999\'\n      });\n      $statusDiv[0].style.visibility = "visible";\n      inforoot.append($statusDiv);\n    }\n    ;\n    //******************\n\n    function createPageSettings() {\n      ulPaging = $(\'<ul class="vis-statusbar-ul">\');\n      liPageNo = $(\'<li class="flex-fill"><section class="vis-ad-w-p-s-result"><span></span></section></li>\');\n      liFirstPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftleft" title="\' + VIS.Msg.getMsg("FirstPage") + \'"  style="opacity: 0.6;"></i></div></li>\');\n      liPrevPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pageup" title="\' + VIS.Msg.getMsg("PageUp") + \'"  style="opacity: 0.6;"></i></div></li>\');\n      cmbPage = $("<select>");\n      liCurrPage = $(\'<li>\').append(cmbPage);\n      liNextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" title="\' + VIS.Msg.getMsg("PageDown") + \'" style="opacity: 0.6;"></i></div></li>\');\n      liLastPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" title="\' + VIS.Msg.getMsg("LastPage") + \'" style="opacity: 0.6;"></i></div></li>\');\n      $spanPageResult = liPageNo.find(".vis-ad-w-p-s-result").find("span");\n      ulPaging.append(liPageNo).append(liFirstPage).append(liPrevPage).append(liCurrPage).append(liNextPage).append(liLastPage);\n      pageEvents();\n    }\n    function pageEvents() {\n      liFirstPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          if (multiSelection && !updating) {\n            btnAddCart.show();\n          }\n          displayData(true, 1);\n          //Mohit Change\n          if (SubGridArray.length > 0) {\n            for (var i = 0; i < SubGridArray.length; i++) {\n              w2ui["subgrid-" + SubGridArray[i]].destroy();\n            }\n            SubGridArray = [];\n          }\n        }\n      });\n      liPrevPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          if (multiSelection && !updating) {\n            btnAddCart.show();\n          }\n          displayData(true, parseInt(cmbPage.val()) - 1);\n          //Mohit Change\n          if (SubGridArray.length > 0) {\n            for (var i = 0; i < SubGridArray.length; i++) {\n              w2ui["subgrid-" + SubGridArray[i]].destroy();\n            }\n            SubGridArray = [];\n          }\n        }\n      });\n      liNextPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          if (multiSelection && !updating) {\n            btnAddCart.show();\n          }\n          displayData(true, parseInt(cmbPage.val()) + 1);\n          //Mohit Change\n          if (SubGridArray.length > 0) {\n            for (var i = 0; i < SubGridArray.length; i++) {\n              w2ui["subgrid-" + SubGridArray[i]].destroy();\n            }\n            SubGridArray = [];\n          }\n        }\n      });\n      liLastPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          if (multiSelection && !updating) {\n            btnAddCart.show();\n          }\n          displayData(true, parseInt(cmbPage.find("Option:last").val()));\n          //Mohit Change\n          if (SubGridArray.length > 0) {\n            for (var i = 0; i < SubGridArray.length; i++) {\n              w2ui["subgrid-" + SubGridArray[i]].destroy();\n            }\n            SubGridArray = [];\n          }\n        }\n      });\n      cmbPage.on("change", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        if (multiSelection && !updating) {\n          btnAddCart.show();\n        }\n        displayData(true, cmbPage.val());\n        //Mohit Change\n        if (SubGridArray.length > 0) {\n          for (var i = 0; i < SubGridArray.length; i++) {\n            w2ui["subgrid-" + SubGridArray[i]].destroy();\n          }\n          SubGridArray = [];\n        }\n      });\n    }\n    function resetPageCtrls(psetting) {\n      //cmbPage.empty();\n      cmbPage = null;\n      liCurrPage.find("select").remove();\n      cmbPage = $("<select>");\n      liCurrPage.append(cmbPage);\n      cmbPage.on("change", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        if (multiSelection && !updating) {\n          btnAddCart.show();\n        }\n        displayData(true, cmbPage.val());\n      });\n      if (psetting.TotalPage > 0) {\n        for (var i = 0; i < psetting.TotalPage; i++) {\n          cmbPage.append($("<option value=" + (i + 1) + ">" + (i + 1) + "</option>"));\n        }\n        cmbPage.val(psetting.CurrentPage);\n        if (psetting.TotalPage > psetting.CurrentPage) {\n          liNextPage.css("opacity", "1");\n          liLastPage.css("opacity", "1");\n        } else {\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n        if (psetting.CurrentPage > 1) {\n          liFirstPage.css("opacity", "1");\n          liPrevPage.css("opacity", "1");\n        } else {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n        }\n        if (psetting.TotalPage == 1) {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n      } else {\n        liFirstPage.css("opacity", "0.6");\n        liPrevPage.css("opacity", "0.6");\n        liNextPage.css("opacity", "0.6");\n        liLastPage.css("opacity", "0.6");\n      }\n\n      // Show pages information\n      var cp = psetting.CurrentPage;\n      var ps = psetting.PageSize;\n      var tr = psetting.TotalRecords;\n      var s = (cp - 1) * ps;\n      var e = s + ps;\n      if (e > tr) e = tr;\n      if (tr == 0) {\n        s -= 1;\n      }\n      var text = showText + " " + (s + 1) + "-" + e + " " + ofText + " " + tr;\n      $spanPageResult.text(text);\n    }\n\n    //change by Mohit\n\n    function getVariantData(event) {\n      if (event != null) {\n        var _M_AttributeSetInstance_ID = 0;\n        var _Product_ID = VIS.Utility.Util.getValueOfInt(w2ui[grdname].records[event.recid - 1].M_PRODUCT_ID);\n        var _Warehouse_ID = VIS.Utility.Util.getValueOfInt(w2ui[grdname].records[event.recid - 1].M_WAREHOUSE_ID);\n        var _AttributeCode = "";\n        for (var i = 0; i < srchCtrls.length; i++) {\n          if (srchCtrls[i].Ctrl.colName == "M_AttributeSetInstance_ID") {\n            _M_AttributeSetInstance_ID = VIS.Utility.Util.getValueOfInt(srchCtrls[i].Ctrl.value);\n          }\n        }\n        for (var i = 0; i < srchCtrls.length; i++) {\n          if (srchCtrls[i].Ctrl.colName == "AttributeCode") {\n            _AttributeCode = srchCtrls[i].Ctrl.getValue();\n          }\n        }\n        if (_Product_ID > 0 && _Warehouse_ID > 0) {\n          $.ajax({\n            url: VIS.Application.contextUrl + "InfoProduct/GetVariants",\n            dataType: "json",\n            type: "POST",\n            async: false,\n            data: {\n              M_Product_ID: _Product_ID,\n              M_Warehouse_ID: _Warehouse_ID,\n              ParentRec_ID: event.recid,\n              M_AttributeSetInstance_ID: _M_AttributeSetInstance_ID,\n              AttributeCode: _AttributeCode\n            },\n            error: function () {\n              alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n              bsyDiv[0].style.visibility = \'hidden\';\n              return;\n            },\n            success: function (dyndata) {\n              var res = JSON.parse(dyndata);\n              LoadVariantData(res);\n            }\n          });\n        }\n      }\n    }\n    ;\n    function LoadVariantData(Res) {\n      if (Res != null) {\n        variantRecords = Res;\n        //bsyDiv[0].style.visibility = \'hidden\';\n      }\n    }\n  }\n  ;\n  VIS.infoProduct = infoProduct;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/infoproduct.js?')},"./Areas/VIS/Scripts/app/Framework/infoscanform.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate Product info Scan Form.\r\n * Author         :     Bharat\r\n * Date           :     27-May-2015\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function InfoScanForm(windowNo, showCart) {\n    this.onClose = null;\n    this.arrListColumns = [];\n    var inforoot = $("<div>");\n    var isExpanded = true;\n    var subroot = $("<div class=\'vis-info-subroot\'>");\n    var searchTab = null;\n    var searchSec = null;\n    var datasec = null;\n    var btnsec = null;\n    var searchtxt = null;\n    var canceltxt = null;\n    var Oktxt = null;\n    var divbtnRight = null;\n    var divbtnsec = null;\n    var btnCancel = null;\n    var btnOK = null;\n    var btnSearch = null;\n    var chkDelCart = null;\n    var divbtnLeft = null;\n    var bsyDiv = null;\n    var dGrid = null;\n    var self = this;\n    var window_ID = 0;\n    var grdname = null;\n    var lblNametxt = null;\n    var lblReftxt = null;\n    var lblFromDate = null;\n    var lblToDate = null;\n    var label = null;\n    var ctrl = null;\n    var tableSArea = $("<table>");\n    var tr = null;\n    var refreshUI = false;\n    var srchCtrls = [];\n\n    //Paging\n    var divPaging, ulPaging, liFirstPage, liPrevPage, liCurrPage, liNextPage, liLastPage, cmbPage;\n    var selectedItems = [];\n    var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n    //var sql = "SELECT AD_Window_ID FROM AD_Tab WHERE AD_Tab_ID = " + VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(windowNo, 0, "AD_Tab_ID"));\n    //window_ID = VIS.Utility.Util.getValueOfInt(VIS.DB.executeScalar(sql, null, null));\n    var AD_tab_ID = VIS.context.getWindowTabContext(windowNo, 0, "AD_Tab_ID");\n    window_ID = VIS.dataContext.getJSONRecord("InfoProduct/GetWindowID", AD_tab_ID.toString());\n    function initializeComponent() {\n      inforoot.css("width", "100%");\n      inforoot.css("height", "100%");\n      inforoot.css("position", "relative");\n      //subroot.css("width", "98%");\n      //subroot.css("height", "97%");\n      //subroot.css("position", "absolute");\n      tableSArea.css("width", "100%");\n      //subroot.css("margin-left", "-10px");\n\n      //sSContainer = $("<div style=\'display: inline-block; float: left;width:23%;height:87.8%;overflow:auto;\'>");\n      //ssHeader = $(\'<div style="padding: 7px; background-color: #F1F1F1;margin-bottom: 2px;height:10.5%;">\');\n      //btnExpander = $(\'<button style="border: 0px;background-color: transparent; padding: 0px;">\').append($(\'<img src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/base/arrow-left.png">\'));\n\n      //ssHeader.append(btnExpander);\n      //sSContainer.append(ssHeader);\n\n      //if (VIS.Application.isRTL) {\n      //    searchTab = $("<div style=\'background-color: rgb(241, 241, 241);height:88.9%;display: inline-block;width:25%;height:87.8%;overflow:auto;padding-right: 10px;margin-left: 10px;\'>");\n      //    searchSec = $("<div style=\'background-color: rgb(241, 241, 241);display: inline-block;height:87.8%;\'>");\n      //    searchTab.append(searchSec);\n      //    datasec = $("<div style=\'display: inline-block;width:73%;height:87.8%;overflow:auto;\'>");\n      //    btnsec = $("<div style=\'display: inline-block;width:99%;height:auto;margin-top: 2px;\'>");\n      //}\n      //else {\n      searchTab = $("<div class=\'vis-info-l-s-wrap vis-pad-0 vis-leftsidebarouterwrap\'>");\n      searchSec = $("<div class=\'vis-info-l-s-content\'>");\n      searchTab.append(searchSec);\n      datasec = $("<div class=\'vis-info-datasec\'>");\n      btnsec = $("<div class=\'vis-info-btnsec vis-just-cont-end\'>");\n      //}\n\n      subroot.append(searchTab);\n      subroot.append(datasec);\n      subroot.append(btnsec);\n      lblNametxt = VIS.Msg.translate(VIS.Env.getCtx(), "Name");\n      if (lblNametxt.indexOf(\'&\') > -1) {\n        lblNametxt = lblNametxt.replace(\'&\', \'\');\n      }\n      lblReftxt = VIS.Msg.translate(VIS.Env.getCtx(), "ReferenceNo");\n      if (lblReftxt.indexOf(\'&\') > -1) {\n        lblReftxt = lblUPCtxt.replace(\'&\', \'\');\n      }\n      lblFromDate = VIS.Msg.translate(VIS.Env.getCtx(), "FromDate");\n      if (lblFromDate.indexOf(\'&\') > -1) {\n        lblFromDate = lblFromDate.replace(\'&\', \'\');\n      }\n      lblToDate = VIS.Msg.translate(VIS.Env.getCtx(), "ToDate");\n      if (lblToDate.indexOf(\'&\') > -1) {\n        lblToDate = lblToDate.replace(\'&\', \'\');\n      }\n      canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      searchtxt = VIS.Msg.getMsg("Search");\n      if (searchtxt.indexOf(\'&\') > -1) {\n        searchtxt = searchtxt.replace(\'&\', \'\');\n      }\n      Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n      divbtnRight = $("<div class=\'vis-info-btnswrap\'>");\n      divbtnsec = $("<div class=\'vis-info-ls-btnswrap\'>");\n      //if (VIS.Application.isRTL) {\n      //    btnCancel = $("<button class=\'VIS_Pref_btn-2\'>").append(canceltxt);\n      //    btnOK = $("<button class=\'VIS_Pref_btn-2\'>").append(Oktxt);\n      //    btnSearch = $("<button class=\'VIS_Pref_btn-2\'>").append(searchtxt);\n      //}\n      //else {\n\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblNametxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("Name", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "Name";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblReftxt);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VTextBox("Reference", false, false, true, 50, 100, null, null, false); // getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "Reference";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblFromDate);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VDate("TrxFromDate", false, false, true, VIS.DisplayType.Date, VIS.Msg.translate("FromDate"));\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "TrxFromDate";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      //tdctrl.append(ctrl.getControl().addClass("vis-allocation-date"));\n      srchCtrls.push(srchCtrl);\n      tr = $("<tr>");\n      tableSArea.append(tr);\n      var td = $("<td>");\n      var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n      var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n      label = $("<label class=\'VIS_Pref_Label_Font\'>").append(lblToDate);\n      tr.append(td);\n      td.append(Leftformfieldwrp);\n      Leftformfieldwrp.append(Leftformfieldctrlwrp);\n\n      //tr = $("<tr>");\n      //tableSArea.append(tr);\n      var srchCtrl = {};\n      ctrl = new VIS.Controls.VDate("TrxToDate", false, false, true, VIS.DisplayType.Date, VIS.Msg.translate("ToDate"));\n      srchCtrl.Ctrl = ctrl;\n      srchCtrl.AD_Reference_ID = 10;\n      srchCtrl.ColumnName = "TrxToDate";\n      var tdctrl = $("<td>");\n      //tr.append(tdctrl);\n      Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n      Leftformfieldctrlwrp.append(label);\n      srchCtrls.push(srchCtrl);\n      searchSec.append(tableSArea);\n      btnCancel = $("<button class=\'VIS_Pref_btn-2\'>").append(canceltxt);\n      btnOK = $("<button class=\'VIS_Pref_btn-2\'>").append(Oktxt);\n      btnSearch = $("<button class=\'VIS_Pref_btn-2\'>").append(searchtxt);\n      //}\n\n      divbtnRight.append(btnCancel);\n      divbtnRight.append(btnOK);\n      divbtnRight.append($(\'<div><input type="checkbox" id="chkDelCart_\' + windowNo + \'" ><span>\' + VIS.Msg.getMsg("DeleteCart") + \'</span>\'));\n      divbtnsec.append(btnSearch);\n      searchTab.append(divbtnsec);\n      btnsec.append(divbtnRight);\n\n      //PagingCtrls\n      divPaging = $(\'<div class="vis-info-pagingwrp">\');\n      createPageSettings();\n      divPaging.append(ulPaging);\n\n      //if (VIS.Application.isRTL) {\n      //    divbtnLeft.append(btnCancel);\n      //    divbtnLeft.append(btnOK);\n      //    divbtnsec.append(btnSearch);\n      //    searchTab.append(divbtnsec);\n      //}\n      //else {\n      divbtnRight.append(btnCancel);\n      divbtnRight.append(btnOK);\n      divbtnsec.append(btnSearch);\n      searchTab.append(divbtnsec);\n      //}\n\n      // divbtnLeft.append(btnRequery);\n      btnsec.append(divbtnLeft);\n      btnsec.append(divPaging);\n      btnsec.append(divbtnRight);\n      //Busy Indicator\n      bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //bsyDiv.css("width", "98%");\n      //bsyDiv.css("height", "97%");\n      //bsyDiv.css(\'text-align\', \'center\');\n      //bsyDiv.css("position", "absolute");\n      bsyDiv[0].style.visibility = "visible";\n      chkDelCart = btnsec.find("#chkDelCart_" + windowNo);\n      inforoot.append(subroot);\n      inforoot.append(bsyDiv);\n    }\n    ;\n    initializeComponent();\n    function bindEvent() {\n      if (!VIS.Application.isMobile) {\n        inforoot.on(\'keyup\', function (e) {\n          if (!(e.keyCode === 13)) {\n            return;\n          }\n          bsyDiv[0].style.visibility = \'visible\';\n          selectedItems = [];\n          dGrid.selectNone();\n          displayData(true, cmbPage.val());\n        });\n      }\n      btnCancel.on("click", function () {\n        self.dispose();\n      });\n      btnOK.on("click", function () {\n        btnOKClick();\n      });\n      btnSearch.on("click", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        selectedItems = [];\n        dGrid.selectNone();\n        displayData(true, 1);\n      });\n    }\n    ;\n    bindEvent();\n    var displayData = function (requery, pNo) {\n      if (dGrid) {\n        var selection = dGrid.getSelection();\n        for (item in selection) {\n          if (selectedItems.indexOf(dGrid.get(selection[item])["count_ID"]) == -1) {\n            selectedItems.push(dGrid.get(selection[item])["count_ID"]);\n          }\n        }\n      }\n      // var query = "";\n      var whereClause = "";\n      var M_Locator_ID = 0;\n      var M_LocatorTo_ID = 0;\n      var M_Warehouse_ID = 0;\n      var M_WarehouseTo_ID = 0;\n      var C_BPartner_ID = 0;\n      if (requery == true) {\n        //var name = "";\n        //var ref = "";\n        //var date = "";\n        var srchValue = null;\n        //var drInv = null;\n        //var data = [];\n\n        for (var i = 0; i < srchCtrls.length; i++) {\n          srchValue = srchCtrls[i].Ctrl.getValue();\n          if (srchValue == null || srchValue.length == 0 || srchValue == 0) {\n            srchCtrls[i]["Value"] = "";\n            continue;\n          }\n          srchCtrls[i]["Value"] = srchValue;\n          srchCtrls[i]["CtrlColumnName"] = srchCtrls[i].Ctrl.colName;\n\n          //if (srchCtrls[i].Ctrl.colName == "Name") {\n          //    query += " AND upper(VAICNT_ScanName) LIKE \'%" + srchValue.toUpperCase() + "%\' ";\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "Reference") {\n          //    query += " AND upper(VAICNT_ReferenceNo) LIKE \'%" + srchValue.toUpperCase() + "%\' ";\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "TrxFromDate") {\n          //    var date = VIS.DB.to_date(srchValue, true);\n          //    query += " AND DateTrx >= " + date;\n          //}\n\n          //else if (srchCtrls[i].Ctrl.colName == "TrxToDate") {\n          //    var date = VIS.DB.to_date(srchValue, true);\n          //    query += " AND DateTrx <= " + date;\n          //}\n        }\n        //if (showCart) {\n        //    query += " AND VAICNT_TransactionType = \'OT\' ";\n        //}\n        /* else {*/\n        if (window_ID == 184) {\n          // JID_1026: System is not checking the document status of Order and requisition while loading cart on M_inout and internal use move line respectively\n          //query += " AND VAICNT_TransactionType = \'MR\' and VAICNT_ReferenceNo in (SELECT DocumentNo from C_Order WHERE C_BPartner_ID = " + VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(windowNo, 0, "C_BPartner_ID")) + " AND DocStatus IN (\'CO\', \'CL\'))";\n          C_BPartner_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(windowNo, 0, "C_BPartner_ID"));\n        } else if (window_ID == 319 || window_ID == 170) {\n          // query += " AND VAICNT_TransactionType = \'IM\' ";\n          // extra parameters only for these windows\n          M_Locator_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "M_Locator_ID", true));\n          M_LocatorTo_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "M_LocatorTo_ID", true));\n          M_Warehouse_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "DTD001_MWarehouseSource_ID", true));\n          M_WarehouseTo_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "M_Warehouse_ID", true));\n        } else if (window_ID == 168) {\n          //query += " AND VAICNT_TransactionType = \'PI\' ";\n          M_Warehouse_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "M_Warehouse_ID", true));\n        } else if (window_ID == 169) {\n          //query += " AND VAICNT_TransactionType = \'SH\' and VAICNT_ReferenceNo in (SELECT DocumentNo from C_Order WHERE  C_BPartner_ID = " + VIS.Utility.Util.getValueOfInt(VIS.context.getWindowTabContext(windowNo, 0, "C_BPartner_ID")) + " AND DocStatus IN (\'CO\'))";\n          C_BPartner_ID = VIS.context.getWindowTabContext(windowNo, 0, "C_BPartner_ID");\n        } else if (window_ID == 341) {\n          //query += " AND VAICNT_TransactionType = \'IU\' AND VAICNT_ReferenceNo IN (SELECT DocumentNo FROM M_Requisition WHERE IsActive = \'Y\' AND M_Warehouse_ID = " + VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "M_Warehouse_ID", true)) + " AND DocStatus IN (\'CO\'))";\n          M_Warehouse_ID = VIS.Utility.Util.getValueOfInt(VIS.context.getWindowContext(windowNo, "M_Warehouse_ID", true));\n        }\n        //else {\n        //   // query += " AND VAICNT_TransactionType = \'OT\' ";\n        //}\n        // }\n      }\n      //else {\n      //    query += " AND VAICNT_InventoryCount_ID = -1";\n      //}\n\n      //sql = "SELECT VAICNT_ScanName,VAICNT_ReferenceNo,DateTrx,VAICNT_InventoryCount_ID FROM VAICNT_InventoryCount WHERE IsActive=\'Y\' AND AD_Client_ID = "\n      //    + VIS.Utility.Util.getValueOfInt(VIS.context.getAD_Client_ID()) + query;\n\n      //var _sql = VIS.secureEngine.encrypt(sql);\n      if (!pNo) {\n        pNo = 1;\n      }\n      var srhCtrls = [];\n      if (srchCtrls && Object.keys(srchCtrls).length > 0) {\n        for (var x = 0; x < Object.keys(srchCtrls).length; x++) {\n          var vals = {};\n          vals.CtrlColumnName = srchCtrls[x].CtrlColumnName;\n          vals.Value = srchCtrls[x].Value;\n          srhCtrls.push(vals);\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoProduct/GetCart",\n        dataType: "json",\n        data: {\n          pageNo: pNo,\n          isCart: showCart,\n          windowID: window_ID,\n          WarehouseID: M_Warehouse_ID,\n          WarehouseToID: M_WarehouseTo_ID,\n          LocatorID: M_Locator_ID,\n          LocatorToID: M_LocatorTo_ID,\n          BPartnerID: C_BPartner_ID,\n          srchCtrl: JSON.stringify(srhCtrls),\n          requery: requery\n        },\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n          bsyDiv[0].style.visibility = \'hidden\';\n          return;\n        },\n        success: function (dyndata) {\n          var res = JSON.parse(dyndata);\n          if (res == null) {\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          if (res.Error) {\n            VIS.ADialog.error(res.Error);\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          resetPageCtrls(res.pSetting);\n          loadGrid(res.data);\n        }\n      });\n    };\n    var loadGrid = function (data) {\n      if (data == null) {\n        bsyDiv[0].style.visibility = "hidden";\n        return;\n      }\n      if (dGrid != null) {\n        dGrid.destroy();\n        dGrid = null;\n      }\n      dGrid = null;\n      self.arrListColumns = [];\n      self.arrListColumns.push({\n        field: "Name",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "Name"),\n        sortable: true,\n        size: \'16%\',\n        min: 150,\n        hidden: false\n      });\n      self.arrListColumns.push({\n        field: "Reference",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "ReferenceNo"),\n        sortable: true,\n        size: \'16%\',\n        min: 150,\n        hidden: false\n      });\n      self.arrListColumns.push({\n        field: "TrxDate",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "DateTrx"),\n        sortable: true,\n        size: \'16%\',\n        min: 150,\n        hidden: false,\n        render: \'date\'\n      });\n      self.arrListColumns.push({\n        field: "count_ID",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "ID"),\n        sortable: true,\n        size: \'16%\',\n        min: 150,\n        hidden: true\n      });\n      var grdname = \'gridPrdInfodata\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(data);\n      dGrid = $(datasec).w2grid({\n        name: grdname,\n        recordHeight: 30,\n        show: {\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: true,\n          // indicates if line numbers column is visible\n          selectColumn: true // indicates if select column is visible\n        },\n        columns: self.arrListColumns,\n        records: data,\n        onClick: function (event) {\n          if (dGrid.records.length > 0) {\n            btnOK.removeAttr("disabled");\n          }\n        }\n      });\n      dGrid.selectNone();\n      for (itm in selectedItems) {\n        for (item in dGrid.records) {\n          if (dGrid.records[item]["count_ID"] == selectedItems[itm]) {\n            dGrid.select(parseInt(item) + 1);\n          }\n        }\n      }\n      dGrid.on(\'unselect\', function (e) {\n        if (e.all) {\n          e.onComplete = function () {\n            for (item in dGrid.records) {\n              var unselectedVal = dGrid.records[item]["count_ID"];\n              if (selectedItems.indexOf(unselectedVal) > -1) {\n                selectedItems.splice(selectedItems.indexOf(unselectedVal), 1);\n              }\n            }\n          };\n        } else {\n          var unselectcart = dGrid.records[e.index]["count_ID"];\n          if (selectedItems.indexOf(unselectcart) > -1) {\n            selectedItems.splice(selectedItems.indexOf(unselectcart), 1);\n          }\n        }\n      });\n      bsyDiv[0].style.visibility = "hidden";\n    };\n    var btnOKClick = function () {\n      var countID = "";\n      var _query = "";\n      if (dGrid != null) {\n        var selection = dGrid.getSelection();\n        if (selection.length > 0) {\n          for (var item in selection) {\n            if (selectedItems.indexOf(dGrid.get(selection[item])["count_ID"]) == -1) {\n              selectedItems.push(dGrid.get(selection[item])["count_ID"]);\n            }\n          }\n        }\n        if (selectedItems.length > 0) {\n          for (var item in selectedItems) {\n            countID += selectedItems[item] + ",";\n          }\n          countID = countID.substr(0, countID.length - 1);\n          //_query = "SELECT cl.M_Product_ID,prd.Name,prd.Value,cl.VAICNT_Quantity,cl.M_AttributeSetInstance_ID,cl.C_UOM_ID,uom.Name as UOM,ic.VAICNT_ReferenceNo,cl.VAICNT_InventoryCountLine_ID,"\n          //    + " ats.Description FROM VAICNT_InventoryCount ic INNER JOIN VAICNT_InventoryCountLine cl ON ic.VAICNT_InventoryCount_ID = cl.VAICNT_InventoryCount_ID"\n          //    + " INNER JOIN M_Product prd ON cl.M_Product_ID = prd.M_Product_ID INNER JOIN C_UOM uom ON cl.C_UOM_ID = uom.C_UOM_ID LEFT JOIN M_AttributeSetInstance ats"\n          //    + " ON cl.M_AttributeSetInstance_ID = ats.M_AttributeSetInstance_ID WHERE ic.VAICNT_InventoryCount_ID IN (" + countID + ") ORDER BY cl.Line";\n\n          //}\n          //else {\n          //_query = "select cnt.M_Product_ID,p.Value,cnt.vaicnt_quantity,cnt.vaicnt_attributeno,ats.Islot,ats.IsSerNo,ats.IsGuaranteeDate,case when (ats.IsGuaranteeDate = \'Y\') then"\n          //+ " sysdate+p.GuaranteeDays end as ExpiryDate,cnt.VAICNT_ReferenceNo,NVL(cnt.M_AttributeSetInstance_ID,0) as M_AttributeSetInstance_ID FROM (SELECT CASE WHEN (cl.upc = mr.upc) THEN mr.M_product_ID"\n          //+ " ELSE CASE WHEN (cl.upc = prd.upc) THEN prd.M_Product_ID ELSE CASE WHEN (cl.upc = patr.upc) THEN patr.M_Product_ID END END END AS M_Product_ID,patr.M_AttributeSetInstance_ID,cl.vaicnt_quantity,"\n          //+ " cl.vaicnt_attributeno,ic.VAICNT_ReferenceNo FROM VAICNT_InventoryCount ic INNER JOIN VAICNT_InventoryCountLine cl ON (ic.VAICNT_InventoryCount_ID = cl.VAICNT_InventoryCount_ID)"\n          //+ " LEFT JOIN M_manufacturer mr ON cl.upc = mr.upc LEFT JOIN M_product prd ON cl.upc = prd.upc LEFT JOIN M_ProductAttributes patr ON cl.upc = patr.upc WHERE ic.IsActive = \'Y\'"\n          //+ " AND cl.IsActive = \'Y\' AND (cl.upc = mr.upc OR cl.upc = prd.upc OR cl.upc = patr.upc) AND ic.ad_client_id = " + VIS.context.getAD_Client_ID() +\n          //" AND ic.VAICNT_InventoryCount_ID = " + countID + " ) cnt INNER JOIN M_Product p on cnt.M_Product_ID=p.M_Product_ID LEFT JOIN M_AttributeSet ats on p.M_attributeset_id=ats.M_attributeset_id"\n          //+ " WHERE p.ad_client_id = " + VIS.context.getAD_Client_ID();\n          //}\n\n          //var drProd = VIS.DB.executeReader(_query, null, null);\n          var drProd = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "InfoProduct/GetCartData", {\n            "invCount_ID": countID,\n            "WindowID": window_ID\n          }, null);\n          if (self.onClose) self.onClose(drProd, chkDelCart.prop("checked"), countID);\n          inforoot.dialog(\'close\');\n        } else {\n          alert("Please Select a Record");\n        }\n      }\n    };\n    function createPageSettings() {\n      ulPaging = $(\'<ul class="vis-statusbar-ul">\');\n      liFirstPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftleft" title="First Page" style="opacity: 0.6;"></i></div></li>\');\n      liPrevPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pageup" title="Page Up" style="opacity: 0.6;"></i></div></li>\');\n      cmbPage = $("<select>");\n      liCurrPage = $(\'<li>\').append(cmbPage);\n      liNextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" title="Page Down" style="opacity: 0.6;"></i></div></li>\');\n      liLastPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" title="Last Page" style="opacity: 0.6;"></i></div></li>\');\n      ulPaging.append(liFirstPage).append(liPrevPage).append(liCurrPage).append(liNextPage).append(liLastPage);\n      pageEvents();\n    }\n    function pageEvents() {\n      liFirstPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          displayData(true, 1);\n        }\n      });\n      liPrevPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          displayData(true, parseInt(cmbPage.val()) - 1);\n        }\n      });\n      liNextPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          displayData(true, parseInt(cmbPage.val()) + 1);\n        }\n      });\n      liLastPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          bsyDiv[0].style.visibility = \'visible\';\n          displayData(true, parseInt(cmbPage.find("Option:last").val()));\n        }\n      });\n      cmbPage.on("change", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        displayData(true, cmbPage.val());\n      });\n    }\n    function resetPageCtrls(psetting) {\n      //cmbPage.empty();\n      cmbPage = null;\n      liCurrPage.find("select").remove();\n      cmbPage = $("<select>");\n      liCurrPage.append(cmbPage);\n      cmbPage.on("change", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        displayData(true, cmbPage.val());\n      });\n      if (psetting.TotalPage > 0) {\n        for (var i = 0; i < psetting.TotalPage; i++) {\n          cmbPage.append($("<option value=" + (i + 1) + ">" + (i + 1) + "</option>"));\n        }\n        cmbPage.val(psetting.CurrentPage);\n        if (psetting.TotalPage > psetting.CurrentPage) {\n          liNextPage.css("opacity", "1");\n          liLastPage.css("opacity", "1");\n        } else {\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n        if (psetting.CurrentPage > 1) {\n          liFirstPage.css("opacity", "1");\n          liPrevPage.css("opacity", "1");\n        } else {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n        }\n        if (psetting.TotalPage == 1) {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n      } else {\n        liFirstPage.css("opacity", "0.6");\n        liPrevPage.css("opacity", "0.6");\n        liNextPage.css("opacity", "0.6");\n        liLastPage.css("opacity", "0.6");\n      }\n    }\n    this.showDialog = function () {\n      inforoot.dialog({\n        modal: true,\n        title: VIS.Msg.translate(VIS.Env.getCtx(), "Info Scan"),\n        width: 800,\n        height: 450,\n        resizable: false,\n        close: function () {\n          self.dispose();\n        }\n      });\n      displayData(false, cmbPage.val());\n    };\n    this.disposeComponent = function () {\n      inforoot.off(\'keyup\');\n      btnCancel.off("click");\n      btnOK.off("click");\n      btnSearch.off("click");\n      datasec = null;\n      searchSec = null;\n      liFirstPage.off("click");\n      liPrevPage.off("click");\n      liNextPage.off("click");\n      liLastPage.off("click");\n      cmbPage.off("change");\n      liFirstPage = liPrevPage = liNextPage = liLastPage = cmbPage = null;\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n      isExpanded = null;\n      subroot = null;\n      searchTab = null;\n      btnsec = null;\n      searchtxt = null;\n      canceltxt = null;\n      Oktxt = null;\n      divbtnRight = null;\n      btnCancel = null;\n      btnOK = null;\n      chkDelCart = null;\n      divbtnLeft = null;\n      bsyDiv = null;\n      srchCtrls = null;\n      self = null;\n      refreshUI = false;\n      if (inforoot != null) {\n        // inforoot.dialog(\'close\');\n        inforoot.dialog(\'destroy\');\n        inforoot.remove();\n      }\n      inforoot = null;\n\n      //this.btnOKClick = null;\n      this.displayData = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n\n  //dispose call\n  InfoScanForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n  };\n  VIS.InfoScanForm = InfoScanForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/infoscanform.js?')},"./Areas/VIS/Scripts/app/Framework/infowindow.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate info dialog\r\n * Author         :     Lakhwinder\r\n * Date           :     2-Aug-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function InfoWindow(_AD_InfoWindow_ID, ctrlValue, windowNo, validationCode, multiSelection, selectedIDs) {\n    this.onClose = null;\n    this.selectedIDs = selectedIDs;\n    var inforoot = $("<div class=\'vis-forms-container\'>");\n    var subroot = $("<div class=\'vis-info-subroot\'>");\n    var isExpanded = true;\n    var sSContainer, ssHeader, btnExpander, searchTab, searchSec, datasec, btnsec; /* decalare Variable */\n    var bsyDiv, divbtnRight, btnCancel, btnOK, btnRequery;\n    var dGrid = null;\n    var info = null;\n    var schema = null;\n    var considerChkBox = false;\n    var srchCtrls = [];\n    this.keyCol = \'\';\n    this.windowNo = windowNo;\n    var self = this;\n    var multiValues = [];\n    var grdname = null;\n    var divPaging, ulPaging, liFirstPage, liPrevPage, liCurrPage, liNextPage, liLastPage, cmbPage, liPageNo;\n    var $spanPageResult = null;\n    var showText = VIS.Msg.getMsg("ShowingResult");\n    var ofText = VIS.Msg.getMsg("of");\n    var selectedItems = [];\n    function initializeComponent() {\n      inforoot.css("width", "100%");\n      inforoot.css("height", "100%");\n      inforoot.css("position", "relative");\n      searchTab = $("<div class=\'vis-info-l-s-wrap vis-leftsidebarouterwrap\'>");\n      searchSec = $("<div>");\n      searchTab.append(searchSec);\n      datasec = $("<div class=\'vis-info-datasec\'>");\n      btnsec = $("<div class=\'vis-info-btnsec\'>");\n      subroot.append(searchTab);\n      subroot.append(datasec);\n      subroot.append(btnsec);\n      var refreshtxt = VIS.Msg.getMsg("Refresh");\n      if (refreshtxt.indexOf(\'&\') > -1) {\n        refreshtxt = refreshtxt.replace(\'&\', \'\');\n      }\n      var canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      var Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n      divbtnRight = $("<div class=\'vis-info-btnswrap\'>");\n      //if (VIS.Application.isRTL) {\n      //    btnCancel = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px\'>").append(canceltxt);\n      //    btnOK = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;\'>").append(Oktxt);\n      //}\n      //else {\n      btnCancel = $("<button class=\'VIS_Pref_btn-2\'>").append(canceltxt);\n      btnOK = $("<button class=\'VIS_Pref_btn-2\'>").append(Oktxt);\n      //}\n\n      var divbtnLeft = $("<div class=\'vis-info-btnleft\'>");\n      btnRequery = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 10px;\'>").append($("<i class=\'vis vis-refresh\'></i>")); //.append(refreshtxt);\n\n      //PagingCtrls\n      divPaging = $(\'<div class="vis-info-pagingwrp">\');\n      createPageSettings();\n      divPaging.append(ulPaging);\n\n      //if (VIS.Application.isRTL) {\n      //    divbtnLeft.append(btnCancel);\n      //    divbtnLeft.append(btnOK);\n      //    divbtnRight.append(btnRequery);\n      //}\n      //else {\n      divbtnRight.append(btnCancel);\n      divbtnRight.append(btnOK);\n      divbtnLeft.append(btnRequery);\n      //}\n\n      btnsec.append(divbtnLeft);\n      btnsec.append(divPaging);\n      btnsec.append(divbtnRight);\n\n      //Busy Indicator\n      bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //bsyDiv.css("width", "98%");\n      //bsyDiv.css("height", "97%");\n      //bsyDiv.css(\'text-align\', \'center\');\n      //bsyDiv.css("position", "absolute");\n\n      inforoot.append(subroot);\n      inforoot.append(bsyDiv);\n      if (multiSelection == true && self.selectedIDs != null && self.selectedIDs.length > 0) {\n        multiValues = self.selectedIDs.split(\',\').map(Number);\n        ctrlValue = null;\n      }\n    }\n    ;\n    initializeComponent();\n    function bindEvents() {\n      btnOK.on("click", function () {\n        btnOKClick();\n      });\n      btnRequery.on("click", function () {\n        bsyDiv[0].style.visibility = \'visible\';\n        //if (ctrl != null) {\n        if (validationCode != null && validationCode != undefined && validationCode.length > 0) {\n          validationCode = VIS.Env.parseContext(VIS.Env.getCtx(), windowNo, validationCode, false, false);\n        }\n        // }\n        displayData(true, cmbPage.val());\n      });\n      btnCancel.on("click", function () {\n        if (self.onClose != null) {\n          self.onClose();\n        }\n        disposeComponent();\n        //if (inforoot != null) {\n        //    inforoot.dialog("close");\n        //    inforoot = null;\n        //}\n\n        //var amtd = new VIS.AmountDivision();\n        //amtd.show();\n      });\n      if (!VIS.Application.isMobile) {\n        inforoot.on(\'keyup\', function (e) {\n          if (!(e.keyCode === 13)) {\n            return;\n          }\n          bsyDiv[0].style.visibility = \'visible\';\n          //if (ctrl != null) {\n          if (validationCode != null && validationCode != undefined && validationCode.length > 0) {\n            validationCode = VIS.Env.parseContext(VIS.Env.getCtx(), windowNo, validationCode, false, false);\n          }\n          // }\n          displayData(true, cmbPage.val());\n        });\n      }\n      ;\n    }\n    bindEvents();\n    function onClosing() {\n      if (self.onClose != null) {\n        self.onClose();\n      }\n      disposeComponent();\n      //if (inforoot != null) {\n      //    //inforoot.dialog("close");\n      //    inforoot = null;\n      //}\n    }\n    ;\n    this.show = function () {\n      var InfoObj = self; // cached self object into variable\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoWindow/GetSearchColumn/?Ad_InfoWindow_ID=" + _AD_InfoWindow_ID,\n        dataType: "json",\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ERRORGettingSchema\'));\n          bsyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          if (data.result == null || data.result.Schema == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingSchema\'));\n            return;\n          }\n          info = data.result;\n          schema = info.Schema;\n          if (schema == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingSchema\'));\n            return;\n          }\n          displaySchema(InfoObj);\n        }\n      });\n    };\n    var displaySchema = function (infoObject) {\n      // debugger;\n      var label = null;\n      var ctrl = null;\n      var tableSArea = $("<table>");\n      tableSArea.css("width", "100%");\n      var tr = null;\n      var rowctrl = 0;\n      var appendTopMargin = false;\n      var displayType = null;\n      var condition = null;\n      var ctxValue = null;\n      var suCondition = null;\n      var key = null;\n      var value = null;\n      var conditionColumn = null;\n      var conditionVal = null;\n      var appVal = null;\n      for (var item in schema) {\n        if (schema[item].IsQueryCriteria) {\n          appendTopMargin = false;\n          //tr = $("<tr>");\n          //tableSArea.append(tr);\n\n          var td = $("<td class=\'vis-gc-vpanel-table-td1\'>");\n          var Leftformfieldwrp = $(\'<div class="input-group vis-input-wrap">\');\n          var Leftformfieldctrlwrp = $(\'<div class="vis-control-wrap">\');\n          var Leftformfieldbtnwrap = $(\'<div class="input-group-append">\');\n          tr = $("<tr>");\n          tableSArea.append(tr);\n          tr.append(td);\n          td.append(Leftformfieldwrp);\n          Leftformfieldwrp.append(Leftformfieldctrlwrp);\n          var srchCtrl = {};\n          displayType = schema[item].AD_Reference_ID;\n          ctrl = getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name, schema[item].AD_Reference_Value_ID, schema[item].lookup);\n          srchCtrl.Ctrl = ctrl;\n          srchCtrl.InfoColumnID = schema[item].InfoColumnID;\n\n          // check if there is some value needed to be set on this control.- Added by Mohit- 13 Feb 2019\n          if (schema[item].SetValue != null) {\n            var retValue = false;\n            // If there is some condition given, then validate the condition                      \n            if (schema[item].Condition != null) {\n              var checkAll = [];\n              var logical = [];\n              var bracket = new VIS.StringTokenizer(schema[item].Condition, "[]");\n              while (bracket.hasMoreTokens()) {\n                var currentToken = bracket.nextToken();\n                if (currentToken.trim() != " & ".trim()) {\n                  retValue = VIS.Evaluator.evaluateLogic(infoObject, currentToken);\n                  checkAll.push(retValue);\n                } else {\n                  logical.push(currentToken);\n                }\n              }\n              if (checkAll.length > 1) {\n                if (logical[0].trim().equals("&")) {\n                  if (checkAll.indexOf(false) > -1)\n                    //conatins\n                    retValue = false;else retValue = true;\n                } else if (logical[0].trim().equals("|")) {\n                  if (checkAll.indexOf(true) > -1)\n                    // contains()\n                    retValue = true;\n                }\n              } else if (checkAll.length == 1) {\n                if (checkAll[0] == true) {\n                  retValue = true;\n                }\n              }\n            }\n            // if no condition, by default true.\n            else {\n              retValue = true;\n            }\n            // if condition validated, then set value.\n            if (retValue) {\n              if (displayType == VIS.DisplayType.YesNo) {\n                if (schema[item].SetValue.toUpperCase() == "Y") {\n                  ctrl.getControl().find("input").prop("checked", true);\n                } else if (schema[item].SetValue.toUpperCase() == "N") {\n                  ctrl.getControl().find("input").prop("checked", false);\n                }\n              } else {\n                if (schema[item].SetValue.contains("@")) {\n                  conditionColumn = schema[item].SetValue.substring(0 + 1, schema[item].SetValue.lastIndexOf("@"));\n                  appVal = VIS.context.getWindowContext(windowNo, conditionColumn, false);\n                  if (!appVal.equals("")) {\n                    ctrl.setValue(appVal);\n                  } else {\n                    ctrl.setValue(null);\n                  }\n                } else {\n                  ctrl.setValue(schema[item].SetValue);\n                }\n              }\n            }\n          }\n          srchCtrl.AD_Reference_ID = schema[item].AD_Reference_ID;\n          srchCtrl.ColumnName = schema[item].SelectClause;\n          if (srchCtrl.ColumnName.toUpperCase().indexOf(" AS ") > -1) {\n            srchCtrl.SearchColumnName = srchCtrl.ColumnName.substring(0, srchCtrl.ColumnName.toUpperCase().indexOf(" AS "));\n          } else {\n            srchCtrl.SearchColumnName = srchCtrl.ColumnName;\n          }\n          if (schema[item].ISIDENTIFIER) {\n            if (ctrlValue != null) {\n              ctrl.setValue(ctrlValue);\n            }\n          }\n          var tdctrl = $("<td>");\n\n          //tr.append(tdctrl);\n          var count = ctrl.getBtnCount();\n          if (count == 2) {\n            //var div = $("<div class=\'d-flex vis-info-ctrlwrap\'>");\n            if (appendTopMargin) {\n              //div.css(\'margin-top\', \'5px\');\n            }\n            Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n            var ctrlBtn = ctrl.getBtn(0);\n            if (ctrlBtn != null) {\n              Leftformfieldbtnwrap.append(ctrlBtn.css("class", "vis-controls-txtbtn-table-td2"));\n              ctrl.getControl().attr(\'data-hasbtn\', \' \');\n            }\n            ctrlBtn = ctrl.getBtn(1);\n            if (ctrlBtn != null) {\n              Leftformfieldbtnwrap.append(ctrlBtn.css("class", "vis-controls-txtbtn-table-td2"));\n              ctrl.getControl().attr(\'data-hasbtn\', \' \');\n            }\n            count = -1;\n            ctrl = null;\n            //}\n            //tdctrl.append(div);\n            //td.append(div);\n            //Leftformfieldwrp.append(Leftformfieldctrlwrp);\n            Leftformfieldwrp.append(Leftformfieldbtnwrap);\n          } else if (count == 1) {\n            //var div = $("<div class=\'d-flex vis-info-ctrlwrap\'>");\n            if (appendTopMargin) {\n              //div.css(\'margin-top\', \'5px\');\n            }\n            Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n            var ctrlBtn = ctrl.getBtn(0);\n            if (ctrlBtn != null) {\n              Leftformfieldbtnwrap.append(ctrlBtn.css("class", "vis-controls-txtbtn-table-td2"));\n              ctrl.getControl().attr(\'data-hasbtn\', \' \');\n            }\n            count = -1;\n            ctrl = null;\n            //}\n            //td.append(div);\n            //Leftformfieldwrp.append(Leftformfieldctrlwrp);\n            Leftformfieldwrp.append(Leftformfieldbtnwrap);\n          } else {\n            if (appendTopMargin) {\n              ctrl.getControl();\n            }\n            if (schema[item].AD_Reference_ID == VIS.DisplayType.YesNo) {\n              ctrl.getControl();\n              //tr.addClass(\'vis-check-mb-dec\');\n            }\n            Leftformfieldctrlwrp.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n          }\n          if (schema[item].IsRange) {\n            srchCtrl.IsRange = true;\n            //tr = $("<tr>");\n            var Leftformfieldwrpto = $(\'<div class="input-group vis-input-wrap">\');\n            var Leftformfieldctrlwrpto = $(\'<div class="vis-control-wrap">\');\n            var Leftformfieldbtnwrapto = $(\'<div class="input-group-append">\');\n            //tableSArea.append(tr);\n\n            tr = $("<tr>");\n            tableSArea.append(tr);\n            ctrl = getControl(schema[item].AD_Reference_ID, schema[item].ColumnName, schema[item].Name);\n            srchCtrl.CtrlTo = ctrl;\n            var tdctrlTo = $("<td>");\n            tr.append(tdctrlTo);\n            tdctrlTo.append(Leftformfieldwrpto);\n            Leftformfieldwrpto.append(Leftformfieldctrlwrpto);\n            var count = ctrl.getBtnCount();\n            if (count == 2) {\n              //var div = $("<div class=\'d-flex vis-info-ctrlwrap\'>");\n              //div.css("width", "97%");\n              if (appendTopMargin) {\n                ctrl.getControl();\n              }\n              Leftformfieldctrlwrpto.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n              var ctrlBtn = ctrl.getBtn(0);\n              if (ctrlBtn != null) {\n                Leftformfieldbtnwrapto.append(ctrlBtn.css("class", "vis-controls-txtbtn-table-td2"));\n                ctrl.getControl().attr(\'data-hasbtn\', \' \');\n              }\n              ctrlBtn = ctrl.getBtn(1);\n              if (ctrlBtn != null) {\n                Leftformfieldbtnwrapto.append(ctrlBtn.css("class", "vis-controls-txtbtn-table-td2"));\n                ctrl.getControl().attr(\'data-hasbtn\', \' \');\n              }\n              count = -1;\n              ctrl = null;\n              //}\n              //td.append(div);\n              //Leftformfieldwrp.append(Leftformfieldctrlwrp);\n              Leftformfieldwrpto.append(Leftformfieldbtnwrapto);\n            } else {\n              if (appendTopMargin) {\n                ctrl.getControl();\n              }\n              if (schema[item].AD_Reference_ID == VIS.DisplayType.YesNo) {\n                ctrl.getControl();\n                //tr.addClass(\'vis-check-mb-dec\');\n              } else {\n                ctrl.getControl();\n              }\n              Leftformfieldctrlwrpto.append(ctrl.getControl().attr(\'data-placeholder\', \'\').attr(\'placeholder\', \' \'));\n            }\n            Leftformfieldctrlwrpto.append(new VIS.Controls.VLabel(VIS.Msg.getMsg("To"), schema[item].ColumnName).getControl());\n\n            //tr.append(tdctrlTo);\n          } else {\n            srchCtrl.IsRange = false;\n          }\n          rowctrl = rowctrl + 1;\n          srchCtrls.push(srchCtrl);\n\n          //\tNo Label for FieldOnly, CheckBox, Button\n          if (!(schema[item].AD_Reference_ID == VIS.DisplayType.YesNo || schema[item].AD_Reference_ID == VIS.DisplayType.Button || schema[item].AD_Reference_ID == VIS.DisplayType.Label)) {\n            //Set label\n            label = new VIS.Controls.VLabel(schema[item].Name, schema[item].ColumnName);\n            var lblctrl = label.getControl();\n            //lblctrl.css("font-weight", "inherit");\n            //td.append(lblctrl);\n            Leftformfieldctrlwrp.append(lblctrl);\n          } else {\n            appendTopMargin = true;\n          }\n        }\n      }\n      //displayData();\n\n      searchSec.append(tableSArea);\n      var refreshtxt = VIS.Msg.getMsg("Refresh");\n      if (refreshtxt.indexOf(\'&\') > -1) {\n        refreshtxt = refreshtxt.replace(\'&\', \'\');\n      }\n      var canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      var Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n      inforoot.dialog({\n        width: 1020,\n        height: 487,\n        resizable: false,\n        title: info.WindowName,\n        modal: true,\n        closeText: VIS.Msg.getMsg("close"),\n        close: onClosing\n      });\n      if (validationCode != null && validationCode != undefined && validationCode.length > 0) {\n        validationCode = VIS.Env.parseContext(VIS.Env.getCtx(), windowNo, validationCode, false, false);\n      }\n      displayData(true, cmbPage.val());\n    };\n    var getControl = function (displayType, columnName, header, refvalueID, lookup) {\n      var ctrl = null;\n      if (displayType == VIS.DisplayType.Button) {\n        var btn = new VIS.Controls.VButton(columnName, false, false, true, header, null, null, 0);\n        ctrl = btn;\n      } else if (displayType == VIS.DisplayType.String) {\n        var txt = new VIS.Controls.VTextBox(columnName, false, false, true, 50, 100, null, null, false);\n        ctrl = txt;\n        txt.click = function () {\n          considerChkBox = true;\n        };\n      } else if (displayType == VIS.DisplayType.YesNo) {\n        var chk = new VIS.Controls.VCheckBox(columnName, false, false, true, header, null);\n        ctrl = chk;\n      } else if (VIS.DisplayType.IsDate(displayType)) {\n        if (displayType == VIS.DisplayType.DateTime) readOnly = true;\n        var vd = new VIS.Controls.VDate(columnName, false, false, true, displayType, header);\n        vd.setName(columnName);\n        ctrl = vd;\n      } else if (VIS.DisplayType.IsLookup(displayType) || VIS.DisplayType.ID == displayType) {\n        var lookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), windowNo, 0, displayType, columnName, refvalueID, false, null);\n        if (displayType != VIS.DisplayType.Search && displayType != VIS.DisplayType.MultiKey) {\n          var cmb = new VIS.Controls.VComboBox(columnName, false, false, true, lookup, 50);\n          ctrl = cmb;\n        } else {\n          displayType = VIS.DisplayType.Search;\n          var txtb = new VIS.Controls.VTextBoxButton(columnName, false, false, true, displayType, lookup);\n          txtb.getBtn();\n          ctrl = txtb;\n        }\n      } else if (displayType == VIS.DisplayType.Location) {\n        var txtLoc = new VIS.Controls.VLocation(columnName, false, false, true, displayType, null);\n        ctrl = txtLoc;\n      } else if (displayType == VIS.DisplayType.Locator) {\n        var txtLocator = new VIS.Controls.VLocator(columnName, false, false, true, displayType, lookup);\n        ctrl = txtLocator;\n      } else if (VIS.DisplayType.Text == displayType || VIS.DisplayType.TextLong == displayType) {\n        var tl = new VIS.Controls.VTextArea(columnName, false, false, true, 50, 100, displayType);\n        ctrl = tl;\n      } else if (VIS.DisplayType.IsNumeric(displayType)) {\n        if (VIS.DisplayType.Amount == displayType) {\n          var amt = new VIS.Controls.VAmountTextBox(columnName, false, false, true, 50, 100, displayType, header);\n          ctrl = amt;\n        } else if (VIS.DisplayType.Integer == displayType) {\n          var int = new VIS.Controls.VNumTextBox(columnName, false, false, true, 50, 100, header);\n          ctrl = int;\n        } else if (VIS.DisplayType.Number == displayType) {\n          var num = new VIS.Controls.VAmountTextBox(columnName, false, false, true, 50, 100, displayType, header);\n          ctrl = num;\n        }\n      } else if (displayType == VIS.DisplayType.PAttribute) {\n        var txtP = new VIS.Controls.VPAttribute(columnName, false, false, true, displayType, lookup, windowNo, false, false, false, true);\n        txtP.getBtn(0);\n        ctrl = txtP;\n      } else if (displayType == VIS.DisplayType.GAttribute) {\n        var txtP = new VIS.Controls.VPAttribute(columnName, false, false, true, displayType, lookup, windowNo, false, false, false, false);\n        txtP.getBtn(0);\n        ctrl = txtP;\n      } else if (displayType == VIS.DisplayType.Account) {\n        var txtA = new VIS.Controls.VAccount(columnName, false, false, true, displayType, lookup, windowNo, header);\n        txtA.getBtn(0);\n        ctrl = txtA;\n      } else if (displayType == VIS.DisplayType.Binary) {\n        var bin = new VIS.Controls.VBinary(columnName, false, false, true, windowNo);\n        ctrl = bin;\n      } else if (displayType == VIS.DisplayType.Image) {\n        var image = new VIS.Controls.VImage(columnName, false, false, windowNo);\n        ctrl = image;\n      } else if (displayType == VIS.DisplayType.URL) {\n        var vs = new VIS.Controls.VURL(columnName, false, false, true, 50, 100);\n        ctrl = vs;\n      } else if (displayType == VIS.DisplayType.FileName || displayType == VIS.DisplayType.FilePath) {\n        var vs = new VIS.Controls.VFile(columnName, false, false, true, windowNo, displayType);\n        ctrl = vs;\n      }\n      return ctrl;\n    };\n    var displayData = function (requery, pNo) {\n      if (multiSelection && w2ui[grdname] && keyCol) {\n        var selection = w2ui[grdname].getSelection();\n        for (item in selection) {\n          if (multiValues.indexOf(w2ui[grdname].get(selection[item])[keyCol]) == -1) {\n            multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n          }\n        }\n      }\n      disposeDataSec();\n      var sql = "SELECT ";\n      var colName = null;\n      var tabname = null;\n      var cName = null;\n      var displayType = 0;\n      var count = $.makeArray(schema).length;\n      ////get Qry from InfoColumns\n      for (var item in schema) {\n        if (schema[item].IsKey) {\n          colName = schema[item].SelectClause;\n          if (String(colName).indexOf(\'.\') > -1) {\n            cName = String(colName).substring(String(colName).lastIndexOf(\'.\') + 1, String(colName).length);\n          } else {\n            cName = colName;\n          }\n          colName = schema[item].SelectClause;\n          keyCol = cName.toUpperCase();\n          break;\n        }\n      }\n      //    colName = schema[item].SelectClause;\n\n      //    if (String(colName).indexOf(\'.\') > -1) {\n      //        cName = (String(colName).substring(String(colName).lastIndexOf(\'.\') + 1, String(colName).length));\n      //    }\n      //    else {\n      //        cName = colName;\n      //    }\n\n      //    if (schema[item].IsKey) {\n      //        keyCol = cName.toUpperCase();\n      //        tabname = keyCol.substring(0, keyCol.indexOf("_ID"));\n      //    }\n      //    displayType = schema[item].AD_Reference_ID;\n      //    if (displayType == VIS.DisplayType.YesNo) {\n      //       // sql += " ( CASE " + colName + " WHEN \'Y\' THEN  \'True\' ELSE \'False\'  END ) AS " + (cName);\n      //    }\n      //    else if (displayType == VIS.DisplayType.List) {\n      //        //    ValueNamePair[] values = MRefList.GetList(Util.GetValueOfInt(ds.Tables[0].Rows[i]["AD_REFERENCE_VALUE_ID"]), false);\n      //        //    sql.Append(" CASE ");\n      //        //    for (int j = 0; j < values.Length; j++)\n      //        //    {\n      //        //        sql.Append(" WHEN " + colName + "=\'" + values[j].Key.ToString() + "\' THEN \'" + values[j].Name.ToString() + "\'");\n      //        //    }\n      //        //    sql.Append(" END AS " + cName);\n      //        var refList = schema[item].RefList;\n      //        sql += (" CASE ");\n      //        for (var refListItem in refList) {\n      //            sql += " WHEN " + colName + "=\'" + refList[refListItem].Key + "\' THEN \'" + refList[refListItem].Value + "\'";\n      //        }\n      //        sql += " END AS " + cName;\n      //        //sql += colName + " ";\n      //    }\n      //    else {\n      //        sql += colName + " ";\n      //    }\n      //    if (!((count - 1) == item)) {\n      //        sql += \', \';\n      //    }\n\n      //}\n\n      //if (selectedIDs != null && selectedIDs.length > 0) {\n      //    sql += ", \'N\' AS ordcol";\n      //}\n\n      //// sql=sql.substring(0,sql.length-2)\n      //sql += " FROM " + info.FromClause;\n\n      if (requery == true) {\n        //Get Where Clause From SearchControls\n        //  debugger;\n        var whereClause = " ";\n        var srchValue = null;\n        var appendAND = false;\n        for (var i = 0; i < srchCtrls.length; i++) {\n          srchValue = srchCtrls[i].Ctrl.getValue();\n          if (srchValue == null || srchValue.length == 0 || srchValue == 0 && srchCtrls[i].AD_Reference_ID != VIS.DisplayType.YesNo || srchValue == -1 || !srchValue) {\n            srchCtrls[i]["Value"] = null;\n            continue;\n          }\n          srchCtrls[i]["Value"] = srchValue;\n          //JID_0905:  In Case of Date Range, if From Date is not selected then check if To Date is selected\n          if (srchCtrls[i].AD_Reference_ID == VIS.DisplayType.Date && srchCtrls[i].IsRange) {\n            if (srchValue == null) {\n              srchValue = srchCtrls[i].CtrlTo.getValue();\n              srchCtrls[i]["Value"] = srchValue;\n            }\n          }\n\n          // Consider checkbox value only in case of true value\n\n          {\n            //if (appendAND == true) {\n            //    whereClause += " AND ";\n            //}\n            if (srchCtrls[i].AD_Reference_ID == VIS.DisplayType.String || srchCtrls[i].AD_Reference_ID == VIS.DisplayType.Text || srchCtrls[i].AD_Reference_ID == VIS.DisplayType.TextLong) {\n              //if (!(String(srchValue).indexOf("%") == 0)) {\n              //    srchValue = "●" + srchValue;\n              //}\n              //else {\n              //    srchValue = String(srchValue).replace("%", "●");\n              //}\n              //if (!((String(srchValue).lastIndexOf("●")) == (String(srchValue).length))) {\n              //    srchValue = srchValue + "●";\n              //}\n              //srchValue = VIS.DB.to_string(srchValue);\n              srchCtrls[i]["Value"] = srchValue;\n              //whereClause += "  UPPER(" + srchCtrls[i].SearchColumnName + ") LIKE " + srchValue.toUpperCase();\n            } else if (srchCtrls[i].AD_Reference_ID == VIS.DisplayType.Date) {\n              var fromValue = null;\n              var toValue = null;\n              var date = new Date(srchCtrls[i].Ctrl.getValue());\n              //fromValue = "TO_DATE( \'" + (Number(date.getMonth()) + 1) + "-" + date.getDate() + "-" + date.getFullYear() + "\', \'MM-DD-YYYY\')";// GlobalVariable.TO_DATE(Util.GetValueOfDateTime(srchCtrls[i].Ctrl.getValue()), true);\n\n              if (srchCtrls[i].IsRange) {\n                // JID_0905: If To Date is empty, then select system date\n                if (srchCtrls[i].CtrlTo.getValue() == null) {\n                  date = new Date();\n                  srchCtrls[i]["ValueTo"] = new Date();\n                } else {\n                  // date \n                  srchCtrls[i]["ValueTo"] = new Date(srchCtrls[i].CtrlTo.getValue());\n                }\n                //toValue = "TO_DATE( \'" + (Number(date.getMonth()) + 1) + "-" + date.getDate() + "-" + date.getFullYear() + "\', \'MM-DD-YYYY\')";// GlobalVariable.TO_DATE(Util.GetValueOfDateTime(srchCtrls[i].Ctrl.getValue()), true);\n                //whereClause += " ( " + srchCtrls[i].SearchColumnName + " BETWEEN " + fromValue + " AND " + toValue + ")";\n              } else {\n                //whereClause += srchCtrls[i].SearchColumnName + " =" + fromValue;\n              }\n            } else if (srchCtrls[i].AD_Reference_ID == VIS.DisplayType.DateTime) {\n              var fromValue = null;\n              var toValue = null;\n              var date = new Date(srchCtrls[i].Ctrl.getValue());\n              srchCtrls[i]["Value"] = date;\n              //fromValue = "TO_DATE( \'" + (Number(date.getMonth()) + 1) + "-" + date.getDate() + "-" + date.getFullYear() + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + "\', \'MM-DD-YYYY HH24:MI:SS\')";// GlobalVariable.TO_DATE(Util.GetValueOfDateTime(srchCtrls[i].Ctrl.getValue()), true);\n\n              if (srchCtrls[i].IsRange) {\n                date = new Date(srchCtrls[i].CtrlTo.getValue());\n                toValue = "TO_DATE( \'" + (Number(date.getMonth()) + 1) + "-" + date.getDate() + "-" + date.getFullYear() + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + "\', \'MM-DD-YYYY HH24:MI:SS\')"; // GlobalVariable.TO_DATE(Util.GetValueOfDateTime(srchCtrls[i].Ctrl.getValue()), true);\n                srchCtrls[i]["ValueTo"] = toValue;\n                //whereClause += " ( " + srchCtrls[i].SearchColumnName + " BETWEEN " + fromValue + " AND " + toValue + ")";\n              } else {\n                whereClause += srchCtrls[i].SearchColumnName + " =" + fromValue;\n              }\n            } else if (srchCtrls[i].AD_Reference_ID == VIS.DisplayType.YesNo) {\n              //srchValue = srchCtrls[i].Ctrl.getValue() == true ? "Y" : "N";\n              srchCtrls[i]["Value"] = srchCtrls[i].Ctrl.getValue();\n              // whereClause += srchCtrls[i].SearchColumnName + " = \'" + srchValue + "\'";\n            } else {\n              var fromValue = null;\n              var toValue = null;\n              fromValue = srchCtrls[i].Ctrl.getValue();\n              srchCtrls[i]["Value"] = fromValue;\n              if (srchCtrls[i].IsRange) {\n                if (srchCtrls[i].Ctrl.getValue()) {\n                  // Consider checkbox value only in case of true value\n                  srchValue = srchCtrls[i].Ctrl.getValue() == true ? "Y" : "";\n                  srchCtrls[i]["ValueTo"] = srchValue;\n                  //whereClause += srchCtrls[i].SearchColumnName + " = \'" + srchValue + "\'";\n                }\n              } else {\n                //whereClause += " " + srchCtrls[i].SearchColumnName + " =\'" + fromValue + "\'";\n              }\n            }\n            appendAND = true;\n          }\n        }\n\n        // VIS0060: Handled case of alise name on Info window.\n        // sql = VIS.MRole.addAccessSQL(sql, info.TableName, true, false);\n\n        //if (whereClause.length > 1) {\n        //    if (info.FromClause.toUpperCase().indexOf("WHERE") > -1 || sql.toUpperCase().indexOf("WHERE") > -1) {\n        //        sql += " AND " + whereClause;\n        //    }\n        //    else {\n        //        sql += " WHERE " + whereClause;\n        //    }\n        //    if (validationCode != null && validationCode.length > 0) {\n        //        sql += " AND " + validationCode;\n        //    }\n        //}\n        //else if (validationCode != null && validationCode.length > 0) {\n        //    if (info.FromClause.toUpperCase().indexOf("WHERE") > -1 || sql.toUpperCase().indexOf("WHERE") > -1) {\n        //        sql += " AND " + validationCode;\n        //    }\n        //    else {\n        //        sql += " WHERE " + validationCode;\n        //    }\n        //}\n\n        var sqlOrderby = "";\n        if (info.OTHERCLAUSE != null) {\n          if (selectedIDs != null && selectedIDs.length > 0) {\n            var otherClause = "";\n            if (info.OTHERCLAUSE.indexOf("ORDER BY") > -1) {\n              otherClause = info.OTHERCLAUSE.substr(0, info.OTHERCLAUSE.indexOf("ORDER BY"));\n              ;\n              sqlOrderby = info.OTHERCLAUSE.substr(info.OTHERCLAUSE.indexOf("ORDER BY"));\n            }\n            if (otherClause) if (String(otherClause).toUpperCase().indexOf("WHERE") > -1) {\n              if (info.FromClause.toUpperCase().indexOf("WHERE") > -1 || whereClause.length > 1 || validationCode != null && validationCode.length > 1) {\n                otherClause = String(otherClause).replace("WHERE", "AND");\n              }\n            }\n            sql += " " + otherClause;\n          } else {\n            if (String(info.OTHERCLAUSE).toUpperCase().indexOf("WHERE") > -1) {\n              if (info.FromClause.toUpperCase().indexOf("WHERE") > -1 || whereClause.length > 1 || validationCode != null && validationCode.length > 1) {\n                info.OTHERCLAUSE = String(info.OTHERCLAUSE).replace("WHERE", "AND");\n              }\n            }\n            sql += " " + info.OTHERCLAUSE;\n          }\n        }\n      } else {\n        //if (info.FromClause.toUpperCase().indexOf("WHERE") > -1) {\n        //    sql += " AND rownum=-1";\n        //}\n        //else {\n        //    sql += " WHERE rownum=-1";\n        //}\n      }\n\n      //if (selectedIDs != null && selectedIDs.length > 0) {\n      //    var sqlUnion = " UNION " + sql;\n      //    sqlUnion = sqlUnion.replace("\'N\' AS ordcol", "\'Y\' AS ordcol");\n\n      //    if (sql.toUpperCase().indexOf("WHERE") > -1) {\n      //        sql += " AND " + tabname + "." + keyCol + " IN(" + selectedIDs + ")";\n      //        sql += sqlUnion;\n      //        sql += " AND " + tabname + "." + keyCol + " NOT IN(" + selectedIDs + ")";\n      //    }\n      //    //else {\n      //    //    sql += " WHERE " + tabname + "." + keyCol + " IN(" + selectedIDs + ")";\n      //    //    sql += sqlUnion;\n      //    //    sql += " AND " + tabname + "." + keyCol + " NOT IN(" + selectedIDs + ")";\n      //    //}\n      //    sql = "SELECT * FROM (" + sql + ") tblquery";\n      //}\n\n      //if (selectedIDs != null && selectedIDs.length > 0) {\n      //    if (sqlOrderby.toUpperCase().indexOf("ORDER BY") > -1) {\n      //        sqlOrderby = sqlOrderby.toUpperCase().replace("ORDER BY", "ORDER BY ordcol ASC,");\n\n      //        //sql = sql.substr(0, sql.indexOf("ORDER BY"));\n      //        sqlOrderby = sqlOrderby.split(\',\');\n      //        var finalorderBy = \' ORDER BY \';\n      //        for (var l = 0; l < sqlOrderby.length; l++) {\n      //            sqlOrderby[l] = sqlOrderby[l].replace(\'ORDER BY \', \'\');\n      //            sqlOrderby[l] = sqlOrderby[l].replace(sqlOrderby[l].substr(0, sqlOrderby[l].indexOf(".") + 1), "tblquery.");\n      //            if (l > 0)\n      //                finalorderBy += ",";\n      //            finalorderBy += sqlOrderby[l];\n      //        }\n      //        sql += finalorderBy;\n      //    }\n      //    else {\n      //        sql += " ORDER BY ordcol ASC";\n      //    }\n      //}\n\n      if (!pNo) {\n        pNo = 1;\n      }\n      var srhCtrls = [];\n      if (srchCtrls && Object.keys(srchCtrls).length > 0) {\n        for (var x = 0; x < Object.keys(srchCtrls).length; x++) {\n          var vals = {};\n          vals.AD_Reference_ID = srchCtrls[x].AD_Reference_ID;\n          vals.IsRange = srchCtrls[x].IsRange;\n          vals.InfoColumnID = srchCtrls[x].InfoColumnID;\n          vals.Value = srchCtrls[x].Value;\n          vals.ValueTo = srchCtrls[x].ValueTo;\n          srhCtrls.push(vals);\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "InfoWindow/GetData",\n        dataType: "json",\n        type: "POST",\n        data: {\n          tableName: info.TableName,\n          pageNo: pNo,\n          SelectedIDs: selectedIDs,\n          Requery: requery,\n          InfoID: _AD_InfoWindow_ID,\n          ValidationCode: VIS.secureEngine.encrypt(validationCode),\n          SrchCtrls: JSON.stringify(srhCtrls)\n        },\n        error: function () {\n          alert(VIS.Msg.getMsg(\'ErrorWhileGettingData\'));\n          bsyDiv[0].style.visibility = "hidden";\n          return;\n        },\n        success: function (dyndata) {\n          var res = JSON.parse(dyndata);\n          if (res == null) {\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          if (res.Error) {\n            VIS.ADialog.error(res.Error);\n            bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          resetPageCtrls(res.pSetting);\n          loadData(res.data);\n        }\n      });\n    };\n    var loadData = function (dynData) {\n      if (dynData == null) {\n        alert(VIS.Msg.getMsg(\'NoDataFound\'));\n        bsyDiv[0].style.visibility = "hidden";\n        return;\n      }\n      var grdCols = [];\n      var grdRows = [];\n      var rander = null;\n      var displayType = null;\n      for (var item in dynData) {\n        var oColumn = {\n          resizable: true\n        };\n        if (!schema[item]) continue;\n        displayType = schema[item].AD_Reference_ID;\n        oColumn.caption = schema[item].Name;\n        oColumn.field = dynData[item].ColumnName.toUpperCase();\n        oColumn.columnName = dynData[item].ColumnName.toUpperCase();\n        oColumn.origColName = dynData[item].ColumnName;\n        oColumn.sortable = true;\n        oColumn.hidden = !schema[item].IsDisplayed;\n        oColumn.size = \'100px\';\n        if (VIS.DisplayType.IsNumeric(displayType)) {\n          if (displayType == VIS.DisplayType.Integer) {\n            oColumn.render = \'int\';\n          }\n          //else if (displayType == VIS.DisplayType.Amount) {\n          //    oColumn.render = \'number:2\';\n          //}\n          // JID_1809  Amount showing as per the browser culture\n          else {\n            //if (displayType == VIS.DisplayType.Amount) {\n            oColumn.render = function (record, index, colIndex) {\n              var val = VIS.Utility.Util.getValueOfDecimal(record[grdCols[colIndex].field]);\n              return val.toLocaleString();\n            };\n          }\n          //else {\n          //    oColumn.render = \'number:1\';\n          //}\n        }\n        //\tYesNo\n        //else if (displayType == VIS.DisplayType.YesNo) {\n\n        //    oColumn.render = function (record, index, colIndex) {\n\n        //        var chk = (record[grdCols[colIndex].field]) == \'True\' ? "checked" : "";\n\n        //        return \'<input type="checkbox" \' + chk + \' disabled="disabled" >\';\n        //    }\n        //}\n\n        //Date /////////\n        // JID_1809 Date is showing as per browser culture\n        else if (VIS.DisplayType.IsDate(displayType)) {\n          if (displayType == VIS.DisplayType.Date) {\n            oColumn.render = function (record, index, colIndex) {\n              var d = record[grdCols[colIndex].field];\n              if (d) {\n                var d = new Date(d);\n                d = d.toLocaleDateString();\n              } else d = "";\n              return d;\n            };\n          } else if (displayType == VIS.DisplayType.DateTime) {\n            oColumn.render = function (record, index, colIndex) {\n              var d = record[grdCols[colIndex].field];\n              if (d) {\n                var d = new Date(d);\n                d = d.toDateString();\n              } else d = "";\n              return d;\n            };\n          } else {\n            oColumn.render = function (record, index, colIndex) {\n              var d = record[grdCols[colIndex].field];\n              if (d) {\n                var d = new Date(d);\n                d = d.toLocaleTimeString();\n              } else d = "";\n              return d;\n            };\n          }\n        } else if (displayType == VIS.DisplayType.Location || displayType == VIS.DisplayType.Locator) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.Account) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.PAttribute) {\n          oColumn.render = \'int\';\n        } else if (displayType == VIS.DisplayType.Button) {\n          oColumn.render = function (record) {\n            return \'<div>button</div>\';\n          };\n        } else if (displayType == VIS.DisplayType.Image) {\n          oColumn.render = function (record) {\n            return \'<div>Image</div>\';\n          };\n        } else if (VIS.DisplayType.IsLOB(displayType)) {\n          oColumn.render = function (record) {\n            return \'<div>[Lob-blob]</div>\';\n          };\n        }\n        grdCols[item] = oColumn;\n\n        //grdCols[item] = { field: dynData[item].ColumnName, caption: schema[item].Name, hidden: !schema[item].IsDisplayed, sortable: true, size: \'100px\' };\n      }\n      for (var j = 0; j < dynData[0].RowCount; j++) {\n        var row = {};\n        for (var item in dynData) {\n          //grdCol[item] = { field: dynData[item].ColumnName, sortable: true, attr: \'align=center\' };\n          row[dynData[item].ColumnName.toUpperCase()] = dynData[item].Values[j];\n        }\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      grdname = \'gridInfodata\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(grdRows);\n      dGrid = $(datasec).w2grid({\n        name: grdname,\n        recordHeight: 40,\n        show: {\n          // do not show toolbar on Info Window.\n          toolbar: false,\n          // indicates if toolbar is v isible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: false,\n          // indicates if line numbers column is visible\n          selectColumn: true,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: grdCols,\n        records: grdRows,\n        multiSelect: multiSelection,\n        onUnselect: onUnSelectRow,\n        onSelect: onSelectRow\n        //resize: function ()\n        //{\n        //    alert("hi");\n        //}\n      });\n      if (multiSelection && multiValues && multiValues.length > 0) {\n        for (itm in multiValues) {\n          for (item in w2ui[grdname].records) {\n            if (w2ui[grdname].records[item][keyCol] == multiValues[itm]) {\n              w2ui[grdname].select(parseInt(item) + 1);\n              toggleOkBtn(false);\n            }\n          }\n        }\n      } else {\n        toggleOkBtn(true);\n      }\n\n      // $("#w2ui-even").css("height", "40px");\n      bsyDiv[0].style.visibility = "hidden";\n    };\n    function toggleOkBtn(disable) {\n      if (disable) {\n        btnOK.prop(\'disabled\', \'true\').css({\n          "cursor": "default",\n          "opacity": ".5"\n        });\n      } else {\n        btnOK.prop(\'disabled\', \'\').css({\n          "cursor": "pointer",\n          "opacity": "1"\n        });\n      }\n    }\n    ;\n    function onSelectRow(e) {\n      toggleOkBtn(false);\n    }\n    ;\n    function onUnSelectRow(e) {\n      if (!multiSelection) {\n        toggleOkBtn(true);\n        return;\n      }\n      if (e.index) {\n        var unselectedVal = w2ui[e.target].records[e.index][keyCol];\n        if (multiValues.indexOf(unselectedVal) > -1) {\n          multiValues.splice(multiValues.indexOf(unselectedVal), 1);\n        }\n      } else {\n        for (var l = 0; l < w2ui[e.target].records.length; l++) {\n          var unselectedVal = w2ui[e.target].records[l][keyCol];\n          if (multiValues.indexOf(unselectedVal) > -1) {\n            multiValues.splice(multiValues.indexOf(unselectedVal), 1);\n          }\n        }\n      }\n      window.setTimeout(function () {\n        if (multiValues.length == 0 && w2ui[e.target].getSelection().length == 0) toggleOkBtn(true);\n      }, 50);\n    }\n    ;\n    var disposeDataSec = function () {\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n    };\n    var btnOKClick = function () {\n      //for (item in selectedItems) {\n      //    multiValues.push(selectedItems[item]);\n      //}\n\n      var selection = w2ui[grdname].getSelection();\n      for (item in selection) {\n        if (multiValues.indexOf(w2ui[grdname].get(selection[item])[keyCol]) == -1) {\n          multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n        }\n        var columns = w2ui[grdname].columns;\n        for (col in columns) {\n          //Set All Col Value in Context \n          VIS.Env.getCtx().setContext(windowNo, VIS.EnvConstants.TAB_INFO, columns[col].columnName, w2ui[grdname].get(selection[item])[columns[col].columnName]);\n        }\n      }\n\n      //var selection = w2ui[grdname].getSelection();\n      //for (item in selection) {\n      //    multiValues.push(w2ui[grdname].get(selection[item])[keyCol]);\n      //}\n\n      if (self.onClose != null && multiValues.length > 0) {\n        self.onClose();\n      }\n      disposeComponent();\n      //if (inforoot != null) {\n      //    inforoot.dialog("close");\n      //    inforoot = null;\n      //}\n\n      //if (ctrl != null) {\n      //    var value = w2ui[\'gridInfodata\'].get(w2ui[\'gridInfodata\'].getSelection())[keyCol];\n\n      //    disposeComponent();\n      //    inforoot.dialog("close");\n      //    inforoot = null;\n\n      //    if (value !== ctrl.oldValue) {\n      //        if (value == -1 || value == "") {\n      //            value = null;\n      //        }\n      //        var evt = { newValue: value, propertyName: ctrl.getName() };\n      //        ctrl.fireValueChanged(evt);\n      //        evt = null;\n      //        ctrl.setValue(value);\n      //    }\n      //}\n      //else {\n      //    disposeComponent();\n      //    inforoot.dialog("close");\n      //    inforoot = null;\n      //}\n    };\n    this.getSelectedValues = function () {\n      return multiValues;\n    };\n    var disposeComponent = function () {\n      btnOK.off("click");\n      btnRequery.off("click");\n      btnCancel.off("click");\n      // btnExpander.off(\'click\');\n      inforoot.off(\'keyup\');\n      liFirstPage.off("click");\n      liPrevPage.off("click");\n      liNextPage.off("click");\n      liLastPage.off("click");\n      cmbPage.off("change");\n      datasec = null;\n      searchSec = null;\n      //inforoot = null;\n      if (dGrid != null) {\n        dGrid.destroy();\n      }\n      dGrid = null;\n      subroot = null;\n      isExpanded = null;\n      sSContainer = ssHeader = btnExpander = searchTab = searchSec = datasec = btnsec = null;\n      bsyDiv = divbtnRight = btnCancel = btnOK = btnRequery = null;\n      liFirstPage = liPrevPage = liNextPage = liLastPage = cmbPage = null;\n      dGrid = null;\n      info = null;\n      schema = null;\n      considerChkBox = null;\n      srchCtrls = null;\n      keyCol = null;\n      self = null;\n      multiValues = null;\n      if (inforoot != null) {\n        inforoot.dialog(\'destroy\');\n        inforoot.remove();\n      }\n      inforoot = null;\n      this.disposeComponent = null;\n      this.displaySchema = null;\n      this.getControl = null;\n      this.displayData = null;\n      this.loadData = null;\n      this.disposeDataSec = null;\n      this.btnOKClick = null;\n      this.getSelectedValues = null;\n      this.disposeComponent = null;\n    };\n    function createPageSettings() {\n      ulPaging = $(\'<ul class="vis-statusbar-ul">\');\n      liPageNo = $(\'<li class="flex-fill"><section class="vis-ad-w-p-s-result"><span></span></section></li>\');\n      liFirstPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftleft" title="\' + VIS.Msg.getMsg("FirstPage") + \'" style="opacity: 0.6;"></i></div></li>\');\n      liPrevPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pageup" title="\' + VIS.Msg.getMsg("PageUp") + \'" style="opacity: 0.6;"></i></div></li>\');\n      cmbPage = $("<select>");\n      liCurrPage = $(\'<li>\').append(cmbPage);\n      liNextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" title="\' + VIS.Msg.getMsg("PageDown") + \'" style="opacity: 0.6;"></i></div></li>\');\n      liLastPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" title="\' + VIS.Msg.getMsg("LastPage") + \'" style="opacity: 0.6;"></i></div></li>\');\n      $spanPageResult = liPageNo.find(".vis-ad-w-p-s-result").find("span");\n      ulPaging.append(liPageNo).append(liFirstPage).append(liPrevPage).append(liCurrPage).append(liNextPage).append(liLastPage);\n      pageEvents();\n    }\n    function pageEvents() {\n      liFirstPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, 1);\n        }\n      });\n      liPrevPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, parseInt(cmbPage.val()) - 1);\n        }\n      });\n      liNextPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, parseInt(cmbPage.val()) + 1);\n        }\n      });\n      liLastPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          displayData(true, parseInt(cmbPage.find("Option:last").val()));\n        }\n      });\n      cmbPage.on("change", function () {\n        displayData(true, cmbPage.val());\n      });\n    }\n    function resetPageCtrls(psetting) {\n      cmbPage.empty();\n      if (psetting.TotalPage > 0) {\n        for (var i = 0; i < psetting.TotalPage; i++) {\n          cmbPage.append($("<option value=" + (i + 1) + ">" + (i + 1) + "</option>"));\n        }\n        cmbPage.val(psetting.CurrentPage);\n        if (psetting.TotalPage > psetting.CurrentPage) {\n          liNextPage.css("opacity", "1");\n          liLastPage.css("opacity", "1");\n        } else {\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n        if (psetting.CurrentPage > 1) {\n          liFirstPage.css("opacity", "1");\n          liPrevPage.css("opacity", "1");\n        } else {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n        }\n        if (psetting.TotalPage == 1) {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n      } else {\n        liFirstPage.css("opacity", "0.6");\n        liPrevPage.css("opacity", "0.6");\n        liNextPage.css("opacity", "0.6");\n        liLastPage.css("opacity", "0.6");\n      }\n\n      // Show pages information\n      var cp = psetting.CurrentPage;\n      var ps = psetting.PageSize;\n      var tr = psetting.TotalRecords;\n      var s = (cp - 1) * ps;\n      var e = s + ps;\n      if (e > tr) e = tr;\n      if (tr == 0) {\n        s -= 1;\n      }\n      var text = showText + " " + (s + 1) + "-" + e + " " + ofText + " " + tr;\n      $spanPageResult.text(text);\n    }\n  }\n  ;\n\n  // Added interface to get value from context for passed variablename.- added by mohit- 13 Feb 2019\n  InfoWindow.prototype.getValueAsString = function (variableName) {\n    return VIS.context.getWindowContext(this.windowNo, variableName, true);\n  };\n  VIS.InfoWindow = InfoWindow;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/infowindow.js?')},"./Areas/VIS/Scripts/app/Framework/ini.js":()=>{eval(';\n(function ($, VIS) {\n  VIS.IniConstants = {\n    log: VIS.Logging.VLogger.getVLogger(" VIS.Ini"),\n    ENV_PREFIX: "env.",\n    VIENNA_HOME: "VIENNA_HOME",\n    VIENNA_PROPERTY_FILE: "vienna.properties",\n    VIENNA_ENV_FILE: "viennaEnv.properties",\n    P_UID: "ApplicationUserID",\n    DEFAULT_UID: "UserPwd",\n    P_PWD: "ApplicationPassword",\n    DEFAULT_PWD: "UserPwd",\n    P_STORE_PWD: "StorePassword",\n    DEFAULT_STORE_PWD: true,\n    P_TRACELEVEL: "TraceLevel",\n    DEFAULT_TRACELEVEL: "WARNING",\n    P_TRACEFILE: "TraceFile",\n    DEFAULT_TRACEFILE: false,\n    //P_LANGUAGE: "Language", DEFAULT_LANGUAGE: VIS.Login.Language.GetName("en-US"),\n    P_INI: "FileNameINI",\n    DEFAULT_INI: "",\n    P_CONNECTION: "Connection",\n    DEFAULT_CONNECTION: "",\n    P_A_LOGIN: "AutoLogin",\n    DEFAULT_A_LOGIN: false,\n    P_A_NEW: "AutoNew",\n    DEFAULT_A_NEW: true,\n    P_VIENNASYS: "ViennaSys",\n    DEFAULT_VIENNASYS: false,\n    P_CACHE_WINDOW: "CacheWindow",\n    DEFAULT_CACHE_WINDOW: false,\n    P_TEMP_DIR: "TempDir",\n    DEFAULT_TEMP_DIR: "",\n    P_ROLE: "Role",\n    DEFAULT_ROLE: "",\n    P_CLIENT: "Client",\n    DEFAULT_CLIENT: "",\n    P_ORG: "Organization",\n    DEFAULT_ORG: "",\n    P_WAREHOUSE: "Warehouse",\n    DEFAULT_WAREHOUSE: "",\n    P_TODAY: "CDate264",\n    DEFAULT_TODAY: Date.now,\n    P_PRINTPREVIEW: "PrintPreview",\n    DEFAULT_PRINTPREVIEW: true,\n    P_WARNING: "Warning",\n    DEFAULT_WARNING: "Do_not_change_any_of_the_data_as_they_will_have_undocumented_side_effects.",\n    P_PRINTER: "Printer",\n    DEFAULT_PRINTER: "",\n    P_DBUSED: "dbused",\n    DEFAULT_DBUSED: "",\n    P_DB_NAME: "dbname",\n    DEFAULT_DB_NAME: "",\n    P_DBUSER_ID: "dbuserid",\n    DEFAULT_DBUSER_ID: "",\n    P_DBPWD: "dbpwd",\n    DEFAULT_DB_PWD: "",\n    P_DB_PORT: "dbport",\n    DEFAULT_DB_PORT: "",\n    P_DB_HOST: "dbhost",\n    DEFAULT_DB_HOST: "",\n    //Show Client-Org level  0 : both  1 : Client    2 : Org    3 : None\n    CO_SHOWLEVEL: "ClientOrgLevel",\n    DEFAULT_CO_SHOWLEVEL: "2",\n    W_PAGESIZE: "WorkSpacePageSize",\n    DEFAULT_W_PAGESIZE: "5",\n    WIN_PAGESIZE: "WindowPageSize",\n    DEFAULT_WIN_PAGESIZE: "50",\n    P_Show_Mini_Grid: "ShowMiniGrid",\n    DEFAULT_MiniGrid_Status: false,\n    P_Print_Native_Digits: "PrintNativeDigits",\n    DEFAULT_Native_Digits_Status: true,\n    P_WELCOME_SCREEN: "HideWelcomeScreen",\n    DEFAULT_SCREEN_STATUS: false,\n    P_APP_TYPE: "AppType",\n    DEFAULT_APP_TYPE: "VServer",\n    P_APP_HOST: "AppHost",\n    DEFAULT_APP_HOST: "localhost",\n    P_APP_PORT: "AppPort",\n    DEFAULT_APP_PORT: "2090",\n    _VIENNASYS: "VFramworkSys",\n    _XML_DOC_PATH: "appconn.xml",\n    _XML_ROOT: "//connectionvar"\n  };\n  VIS.Ini = function () {\n    function setValueToLocalStorage(key, value) {\n      localStorage.setItem(key, value);\n    }\n    ;\n    function getLocalStorage(key) {\n      return localStorage.getItem(key);\n    }\n    ;\n    function clearLocalStorage() {\n      localStorage.clear();\n    }\n    ;\n    function removeLocalStorageItem(key) {\n      localStorage.removeItem(key);\n    }\n    ;\n    function getIsCacheWindow() {\n      return localStorage.getItem(VIS.IniConstants.P_CACHE_WINDOW) == "Y";\n    }\n    ;\n    function getTraceLevel() {\n      if (VIS.Ini.getLocalStorage(VIS.IniConstants.P_TRACELEVEL) != null) {\n        return VIS.Logging.Level.prototype.getLevel(VIS.Ini.getLocalStorage(VIS.IniConstants.P_TRACELEVEL));\n      }\n      return VIS.Logging.Level.INFO;\n    }\n    ;\n    function updateLocalContextFromIni() {\n      var iniarray = [VIS.IniConstants.P_A_NEW, VIS.IniConstants.P_TRACEFILE, VIS.IniConstants.P_TRACELEVEL, VIS.IniConstants.CO_SHOWLEVEL, VIS.IniConstants.W_PAGESIZE, VIS.IniConstants.WIN_PAGESIZE, VIS.IniConstants.P_Show_Mini_Grid, VIS.IniConstants.P_Print_Native_Digits, VIS.IniConstants.P_A_LOGIN, VIS.IniConstants.P_STORE_PWD, VIS.IniConstants.P_CACHE_WINDOW, VIS.IniConstants.P_PRINTPREVIEW, VIS.IniConstants.P_TRACEFILE];\n      var obj = {};\n      for (var i = 0; i < iniarray.length; i++) {\n        if (iniarray[i] == "AutoNew") {\n          VIS.context.setContext(iniarray[i], VIS.Ini.getLocalStorage(iniarray[i]) == null ? "N" : VIS.Ini.getLocalStorage(iniarray[i]));\n        } else {\n          VIS.context.setContext(\'#\' + iniarray[i], VIS.Ini.getLocalStorage(iniarray[i]));\n        }\n        obj[iniarray[i]] = VIS.Ini.getLocalStorage(iniarray[i]);\n      }\n      obj[\'#TimezoneOffset\'] = new Date().getTimezoneOffset().toString();\n\n      // Set Client Culture into the session.\n      obj[\'#ClientLanguage\'] = window.navigator.language;\n      VIS.dataContext.updateClientCtx(obj);\n    }\n    ;\n    return {\n      setValueToLocalStorage: setValueToLocalStorage,\n      getLocalStorage: getLocalStorage,\n      clearLocalStorage: clearLocalStorage,\n      removeLocalStorageItem: removeLocalStorageItem,\n      updateLocalContextFromIni: updateLocalContextFromIni,\n      getIsCacheWindow: getIsCacheWindow,\n      getTraceLevel: getTraceLevel\n    };\n  }();\n})(jQuery, VIS);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/ini.js?')},"./Areas/VIS/Scripts/app/Framework/jquery-touch.js":()=>{eval("/*!\r\n * jQuery UI Touch Punch 0.2.3\r\n *\r\n * Copyright 2011–2014, Dave Furfero\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n *\r\n * Depends:\r\n *  jquery.ui.widget.js\r\n *  jquery.ui.mouse.js\r\n */\n(function ($) {\n  // Detect touch support\n  $.support.touch = 'ontouchend' in document;\n\n  // Ignore browsers without touch support\n  if (!$.support.touch) {\n    return;\n  }\n  var mouseProto = $.ui.mouse.prototype,\n    _mouseInit = mouseProto._mouseInit,\n    _mouseDestroy = mouseProto._mouseDestroy,\n    touchHandled;\n\n  /**\r\n   * Simulate a mouse event based on a corresponding touch event\r\n   * @param {Object} event A touch event\r\n   * @param {String} simulatedType The corresponding mouse event\r\n   */\n  function simulateMouseEvent(event, simulatedType) {\n    // Ignore multi-touch events\n    if (event.originalEvent.touches.length > 1) {\n      return;\n    }\n    event.preventDefault();\n    var touch = event.originalEvent.changedTouches[0],\n      simulatedEvent = document.createEvent('MouseEvents');\n\n    // Initialize the simulated mouse event using the touch event's coordinates\n    simulatedEvent.initMouseEvent(simulatedType,\n    // type\n    true,\n    // bubbles                    \n    true,\n    // cancelable                 \n    window,\n    // view                       \n    1,\n    // detail                     \n    touch.screenX,\n    // screenX                    \n    touch.screenY,\n    // screenY                    \n    touch.clientX,\n    // clientX                    \n    touch.clientY,\n    // clientY                    \n    false,\n    // ctrlKey                    \n    false,\n    // altKey                     \n    false,\n    // shiftKey                   \n    false,\n    // metaKey                    \n    0,\n    // button                     \n    null // relatedTarget              \n    );\n\n    // Dispatch the simulated event to the target element\n    event.target.dispatchEvent(simulatedEvent);\n  }\n\n  /**\r\n   * Handle the jQuery UI widget's touchstart events\r\n   * @param {Object} event The widget element's touchstart event\r\n   */\n  mouseProto._touchStart = function (event) {\n    var self = this;\n\n    // Ignore the event if another widget is already being handled\n    if (touchHandled || !self._mouseCapture(event.originalEvent.changedTouches[0])) {\n      return;\n    }\n\n    // Set the flag to prevent other widgets from inheriting the touch event\n    touchHandled = true;\n\n    // Track movement to determine if interaction was a click\n    self._touchMoved = false;\n\n    // Simulate the mouseover event\n    simulateMouseEvent(event, 'mouseover');\n\n    // Simulate the mousemove event\n    simulateMouseEvent(event, 'mousemove');\n\n    // Simulate the mousedown event\n    simulateMouseEvent(event, 'mousedown');\n  };\n\n  /**\r\n   * Handle the jQuery UI widget's touchmove events\r\n   * @param {Object} event The document's touchmove event\r\n   */\n  mouseProto._touchMove = function (event) {\n    // Ignore event if not handled\n    if (!touchHandled) {\n      return;\n    }\n\n    // Interaction was not a click\n    this._touchMoved = true;\n\n    // Simulate the mousemove event\n    simulateMouseEvent(event, 'mousemove');\n  };\n\n  /**\r\n   * Handle the jQuery UI widget's touchend events\r\n   * @param {Object} event The document's touchend event\r\n   */\n  mouseProto._touchEnd = function (event) {\n    // Ignore event if not handled\n    if (!touchHandled) {\n      return;\n    }\n\n    // Simulate the mouseup event\n    simulateMouseEvent(event, 'mouseup');\n\n    // Simulate the mouseout event\n    simulateMouseEvent(event, 'mouseout');\n\n    // If the touch interaction did not move, it should trigger a click\n    if (!this._touchMoved) {\n      // Simulate the click event\n      simulateMouseEvent(event, 'click');\n    }\n\n    // Unset the flag to allow other widgets to inherit the touch event\n    touchHandled = false;\n  };\n\n  /**\r\n   * A duck punch of the $.ui.mouse _mouseInit method to support touch events.\r\n   * This method extends the widget with bound touch event handlers that\r\n   * translate touch events to mouse events and pass them to the widget's\r\n   * original mouse event handling methods.\r\n   */\n  mouseProto._mouseInit = function () {\n    var self = this;\n\n    // Delegate the touch handlers to the widget's element\n    self.element.bind({\n      touchstart: $.proxy(self, '_touchStart'),\n      touchmove: $.proxy(self, '_touchMove'),\n      touchend: $.proxy(self, '_touchEnd')\n    });\n\n    // Call the original $.ui.mouse init method\n    _mouseInit.call(self);\n  };\n\n  /**\r\n   * Remove the touch event handlers\r\n   */\n  mouseProto._mouseDestroy = function () {\n    var self = this;\n\n    // Delegate the touch handlers to the widget's element\n    self.element.unbind({\n      touchstart: $.proxy(self, '_touchStart'),\n      touchmove: $.proxy(self, '_touchMove'),\n      touchend: $.proxy(self, '_touchEnd')\n    });\n\n    // Call the original $.ui.mouse destroy method\n    _mouseDestroy.call(self);\n  };\n})(jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/jquery-touch.js?")},"./Areas/VIS/Scripts/app/Framework/locationform.js":()=>{eval(';\n(function (VIS, $) {\n  //form declaration\n  // added new parameter for Maintain Versions\n  function LocationForm(locationId, maintainVersinos) {\n    //call parent function on close\n    this.onClose = null;\n    var $C_Location_ID = locationId;\n    var $self = this;\n    var $root = $("<div style=\'position:relative;\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var windowNo = VIS.Env.getWindowNo();\n    var searchlst = null;\n    var country = null;\n    var add1 = null;\n    var add2 = null;\n    var add3 = null;\n    var add4 = null;\n    var city = null;\n    var state = null;\n    var zip = null;\n    var contryId = null;\n    var stateId = null;\n    var cityId = null;\n    var Okbtn = null;\n    var cancelbtn = null;\n    var customAddList = null;\n    var stringAddress = null;\n    var change = false;\n    var maintainVer = maintainVersinos;\n    this.load = function () {\n      // Parameter - AD_Language - Added to get country from location\n      $root.load(VIS.Application.contextUrl + \'Location/Locations/?windowno=\' + windowNo + \'&locationId=\' + $C_Location_ID + \'&AD_Language=\' + VIS.context.getContext("#AD_Language"), function (event) {\n        $root.append($busyDiv);\n        setBusy(true);\n        $self.init();\n        setBusy(false);\n      });\n    };\n    this.init = function () {\n      Okbtn = $root.find("#btnOk_" + windowNo);\n      cancelbtn = $root.find("#btnCancel_" + windowNo);\n      searchlst = $root.find("#lstLocation_" + windowNo);\n      country = $root.find("#txtCountry_" + windowNo);\n      add1 = $root.find("#txtAddress1_" + windowNo);\n      add2 = $root.find("#txtAddress2_" + windowNo);\n      add3 = $root.find("#txtAddress3_" + windowNo);\n      add4 = $root.find("#txtAddress4_" + windowNo);\n\n      //check Arebic Calture\n      if (VIS.Application.isRTL) {\n        Okbtn.removeClass("pull-left");\n        Okbtn.addClass("pull-right");\n        $root.find("Sup").css("float", "right");\n        $($root.find(".cat2 a")[0]).removeClass("pull-right");\n        $($root.find(".cat2 a")[0]).addClass("pull-left");\n        $($root.find(".cat3 a")[0]).removeClass("pull-right");\n        $($root.find(".cat3 a")[0]).addClass("pull-left");\n        //$($root.find(".cat2 a")[0]).css("margin-left", "10px");\n        //$($root.find(".cat3 a")[0]).css("margin-left", "10px");\n      }\n      if (add1.val()) {\n        add1.val(add1.val());\n      }\n      if (add2.val()) {\n        add2.val(add2.val());\n      }\n      if (add3.val()) {\n        var obj = $root.find("#aCollection");\n        var ctrl = $root.find(\'.cat\' + $(obj).attr(\'data-prod-cat\'));\n        if (ctrl) {\n          if (ctrl.length > 0) ctrl.toggle();\n        } else {\n          $root.find(\'.cat\' + $(obj).attr(\'data-prod-close\')).hide();\n        }\n        add3.val(add3.val());\n      }\n      if (add4.val()) {\n        var obj = $root.find(".cat3").find("a")[0];\n        var ctrl = $root.find(\'.cat\' + $(obj).attr(\'data-prod-cat\'));\n        if (ctrl) {\n          if (ctrl.length > 0) ctrl.toggle();\n        } else {\n          $root.find(\'.cat\' + $(obj).attr(\'data-prod-close\')).hide();\n        }\n        add4.val(add4.val());\n      }\n      city = $root.find("#txtCity_" + windowNo);\n      if (city.val()) {\n        city.val(city.val());\n      }\n      state = $root.find("#txtState_" + windowNo);\n      zip = $root.find("#txtZipCode_" + windowNo);\n      if (zip.val()) {\n        zip.val(zip.val());\n      }\n      contryId = $root.find("#countryhdn_" + windowNo).val();\n      stateId = $root.find("#Statehdn_" + windowNo).val();\n\n      /*Country Fill*/\n      country.autocomplete({\n        source: function (request, response) {\n          if (request.term.trim().length == 0) {\n            return;\n          }\n          $.ajax({\n            url: VIS.Application.contextUrl + "Location/GetCountry",\n            dataType: "json",\n            data: {\n              //featureClass: "P",\n              style: "full",\n              //maxRows: 12,\n              name_startsWith: request.term\n            },\n            success: function (data) {\n              if (data.result == \'ok\') response(null);else {\n                response($.map(data.result, function (item) {\n                  return {\n                    label: item.Name,\n                    value: item.Name,\n                    id: item.Key\n                  };\n                }));\n              }\n            }\n          });\n        },\n        minLength: 1,\n        select: function (event, ui) {\n          if (ui.item.id == 0) {\n            country.val(\'\');\n          }\n          contryId = ui.item.id;\n          //var contryId = null;\n          //var stateId = null;\n          //var cityId = null;\n        },\n        open: function () {\n          $root.find(this).removeClass("ui-corner-all").addClass("ui-corner-top");\n        },\n        close: function () {\n          $root.find(this).removeClass("ui-corner-top").addClass("ui-corner-all");\n          //state.val("");\n          //city.val("");\n          //stateId = 0;\n          //cityId = 0;\n          if (Number(contryId) > 0) {\n            change = true;\n          } else {\n            country.val(\'\');\n          }\n        }\n      });\n\n      /*State Fill*/\n      state.autocomplete({\n        source: function (request, response) {\n          if (request.term.trim().length == 0) {\n            return;\n          }\n          $.ajax({\n            url: VIS.Application.contextUrl + "Location/GetStates",\n            dataType: "json",\n            data: {\n              style: "full",\n              name_startsWith: request.term,\n              countryId: contryId\n            },\n            success: function (data) {\n              if (data.result == \'ok\') response(null);else {\n                response($.map(data.result, function (item) {\n                  return {\n                    label: item.Name,\n                    value: item.Name,\n                    id: item.Key\n                  };\n                }));\n              }\n            }\n          });\n        },\n        minLength: 1,\n        select: function (event, ui) {\n          stateId = ui.item.id;\n        },\n        open: function () {\n          $root.find(this).removeClass("ui-corner-all").addClass("ui-corner-top");\n        },\n        close: function () {\n          $root.find(this).removeClass("ui-corner-top").addClass("ui-corner-all");\n        }\n      });\n\n      /*Address Fill*/\n      searchlst.autocomplete({\n        source: function (request, response) {\n          if (request.term.trim().length == 0) {\n            return;\n          }\n          $.ajax({\n            url: VIS.Application.contextUrl + "Location/GetAddresses",\n            dataType: "json",\n            data: {\n              style: "full",\n              name_startsWith: request.term\n            },\n            success: function (data) {\n              if (data.result == \'ok\') response(null);else {\n                response($.map(data.result, function (item) {\n                  return {\n                    label: item.ADDRESS,\n                    value: item.ADDRESS,\n                    C_COUNTRY_ID: item.C_COUNTRY_ID,\n                    C_LOCATION_ID: item.C_LOCATION_ID,\n                    C_REGION_ID: item.C_REGION_ID,\n                    COUNTRYNAME: item.COUNTRYNAME,\n                    ADDRESS1: item.ADDRESS1,\n                    ADDRESS2: item.ADDRESS2,\n                    ADDRESS3: item.ADDRESS3,\n                    ADDRESS4: item.ADDRESS4,\n                    CITYNAME: item.CITYNAME,\n                    STATENAME: item.STATENAME,\n                    ZIPCODE: item.ZIPCODE\n                  };\n                }));\n              }\n            }\n          });\n        },\n        minLength: 1,\n        select: function (event, ui) {\n          country.val(ui.item.COUNTRYNAME);\n          add1.val(ui.item.ADDRESS1);\n          add2.val(ui.item.ADDRESS2);\n          add3.val(ui.item.ADDRESS3);\n          add4.val(ui.item.ADDRESS4);\n          city.val(ui.item.CITYNAME);\n          state.val(ui.item.STATENAME);\n          zip.val(ui.item.ZIPCODE);\n          change = true;\n          stateId = ui.item.C_REGION_ID;\n          $C_Location_ID = 0; //ui.item.C_LOCATION_ID;    \n          cityId = 0;\n          contryId = ui.item.C_COUNTRY_ID;\n        },\n        open: function () {\n          $root.find(this).removeClass("ui-corner-all").addClass("ui-corner-top");\n        },\n        close: function () {\n          $root.find(this).removeClass("ui-corner-top").addClass("ui-corner-all");\n        }\n      });\n      Okbtn.on("click", function () {\n        setBusy(true);\n        if (Number(contryId) <= 0) {\n          VIS.ADialog.warn("SelectCountry", true, null);\n          setBusy(false);\n          return;\n        }\n\n        // Set C_Location_ID as 0, \n        // if maintain Version is marked on column and there is any change in value on Location Control\n        if (maintainVer && change) $C_Location_ID = 0;\n        var objValue = {\n          countryName: country.val(),\n          addvalue1: add1.val(),\n          addvalue2: add2.val(),\n          addvalue3: add3.val(),\n          addvalue4: add4.val(),\n          cityValue: city.val(),\n          stateValue: state.val(),\n          zipValue: zip.val(),\n          clocationId: $C_Location_ID,\n          countryId: contryId,\n          stateId: stateId,\n          cityId: cityId\n        };\n        var callbackValue = saveLocation(objValue);\n      });\n      cancelbtn.on("click", function () {\n        $root.dialog(\'close\');\n      });\n      $root.find(".VIS-Location-toggler").click(function (e) {\n        e.preventDefault();\n        var ctrl = $root.find(\'.cat\' + $root.find(this).attr(\'data-prod-cat\'));\n        if (ctrl && ctrl.length > 0) {\n          ctrl.toggle();\n        } else {\n          $root.find(\'.cat\' + $root.find(this).attr(\'data-prod-close\')).hide();\n        }\n        // $(\'img.expand\').toggleClass(\'collapse\');\n      });\n      country.bind(\'change\', function (e) {\n        change = true;\n      });\n      add1.bind(\'change\', function (e) {\n        change = true;\n      });\n      add2.bind(\'change\', function (e) {\n        change = true;\n      });\n      add3.bind(\'change\', function (e) {\n        change = true;\n      });\n      add4.bind(\'change\', function (e) {\n        change = true;\n      });\n      city.bind(\'change\', function (e) {\n        change = true;\n      });\n      state.bind(\'change\', function (e) {\n        change = true;\n      });\n      zip.bind(\'change\', function (e) {\n        change = true;\n      });\n\n      //Save data in the database\n      function saveLocation(data, callback) {\n        var result = null;\n        $.ajax({\n          url: VIS.Application.contextUrl + "Location/SaveLocation",\n          type: "POST",\n          datatype: "json",\n          contentType: "application/json; charset=utf-8",\n          async: false,\n          data: JSON.stringify({\n            pref: data\n          })\n        }).done(function (json) {\n          result = json;\n          $C_Location_ID = result.locationid;\n          stringAddress = result.locaddress;\n          this.location = $C_Location_ID;\n          setBusy(false);\n          if ($self.onClose) $self.onClose($C_Location_ID, change);\n          $root.dialog(\'close\');\n          change = null;\n        });\n      }\n      ;\n    };\n    function setBusy(isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    }\n    ;\n    this.showDialog = function () {\n      $root.append($busyDiv);\n      $root.dialog({\n        modal: true,\n        resizable: false,\n        title: VIS.Msg.getMsg("Location"),\n        closeText: VIS.Msg.getMsg("close"),\n        // height: 440,\n        width: 620,\n        position: {\n          at: "center top",\n          of: window\n        },\n        close: function () {\n          $self.dispose();\n          $self = null;\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n    };\n    this.disposeComponent = function () {\n      $self = null;\n      if (Okbtn) Okbtn.off("click");\n      if (cancelbtn) cancelbtn.off("click");\n      $C_Location_ID = 0;\n      searchlst = null;\n      country = null;\n      add1 = null;\n      add2 = null;\n      add3 = null;\n      add4 = null;\n      city = null;\n      state = null;\n      zip = null;\n      contryId = null;\n      stateId = null;\n      cityId = null;\n      Okbtn = null;\n      cancelbtn = null;\n      customAddList = null;\n      stringAddress = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n\n  //dispose call\n  LocationForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n  };\n\n  //Load form into VIS\n  VIS.LocationForm = LocationForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/locationform.js?')},"./Areas/VIS/Scripts/app/Framework/locatorform.js":()=>{eval(';\n(function (VIS, $) {\n  //form declaretion\n  function LocatorForm(columnName, lookup, locatorId, mandatory, warehouseId, windowNum) {\n    this.onClose = null;\n    this.change = false;\n    var $root = $("<div style=\'position:relative;\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var Okbtn = null;\n    var cancelbtn = null;\n    var $self = this;\n    var sep = null;\n    var columnName = columnName;\n    var locatorId = locatorId;\n    var mandatory = mandatory;\n    var onlyWarehouseId = warehouseId;\n    var warehouseId = 0;\n    var windowNo = windowNum;\n    var mLocator = lookup;\n\n    //controlls\n\n    //added for locator search control\n    var locators_lst = null;\n    var srchLocator = null;\n    //end\n    var cmbLocator = null;\n    var chkCreateNew = null;\n    var divCreateNew = null;\n    var divWarehouseInfo = null;\n    var divWarehouse = null;\n    var txtWarehouseInfo = null;\n    var cmbWarehouse = null;\n    var txtX = null;\n    var txtY = null;\n    var txtZ = null;\n    var txtValue = null;\n    var lblX = null;\n    var lblY = null;\n    var lblZ = null;\n    var lblValue = null;\n    var lblWarehouse = null;\n    setBusy = function (isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    };\n    this.load = function () {\n      $root.load(VIS.Application.contextUrl + \'Locator/Index/?windowno=\' + windowNo + \'&locatorId=\' + locatorId, function (event) {\n        setBusy(true);\n        init();\n        setBusy(false);\n      });\n    };\n    this.showDialog = function () {\n      $root.append($busyDiv);\n      $root.dialog({\n        modal: true,\n        resizable: false,\n        title: VIS.Msg.translate(VIS.Env.getCtx(), "Locator"),\n        width: 510,\n        position: {\n          at: "center top",\n          of: window\n        },\n        close: function () {\n          $self.dispose();\n          $self = null;\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n    };\n    this.disposeComponent = function () {\n      if (Okbtn) Okbtn.off("click");\n      if (cancelbtn) cancelbtn.off("click");\n      Okbtn = null;\n      cancelbtn = null;\n      $self = null;\n      locators_lst = null; //set null when close the form\n      srchLocator = null; //set null when close the form\n\n      columnName = null;\n      locatorId = null;\n      mandatory = null;\n      onlyWarehouseId = null;\n      warehouseId = null;\n      windowNo = null;\n      mLocator = null;\n      divCreateNew = null;\n      divWarehouseInfo = null;\n      divWarehouse = null;\n\n      //controlls\n      cmbLocator = null;\n      chkCreateNew = null;\n      txtWarehouseInfo = null;\n      cmbWarehouse = null;\n      txtX = null;\n      txtY = null;\n      txtZ = null;\n      txtValue = null;\n      lblX = null;\n      lblY = null;\n      lblZ = null;\n      lblValue = null;\n      lblWarehouse = null;\n      this.disposeComponent = null;\n      this.load = null;\n      sep = null;\n    };\n    function init() {\n      Okbtn = $root.find("#btnOk_" + windowNo);\n      cancelbtn = $root.find("#btnCancel_" + windowNo);\n      cmbLocator = $root.find("#cmbLocator_" + windowNo);\n      //added for locator search control\n      locators_lst = $root.find("#lstLocator_" + windowNo);\n      srchLocator = $root.find("#locatorSearch_" + windowNo);\n      //end\n      chkCreateNew = $root.find("#chkCreateNew_" + windowNo);\n      txtWarehouseInfo = $root.find("#txtWarehouseInfo_" + windowNo);\n      cmbWarehouse = $root.find("#cmbWarehouse_" + windowNo);\n      txtX = $root.find("#txtX_" + windowNo);\n      txtY = $root.find("#txtY_" + windowNo);\n      txtZ = $root.find("#txtZ_" + windowNo);\n      txtValue = $root.find("#txtValue_" + windowNo);\n      divCreateNew = $root.find("#divchkCreateNew_" + windowNo);\n      divWarehouseInfo = $root.find("#divWarehouseInfo_" + windowNo);\n      divWarehouse = $root.find("#divWarehouse_" + windowNo);\n      lblX = $root.find("#lblX_" + windowNo);\n      lblY = $root.find("#lblY_" + windowNo);\n      lblZ = $root.find("#lblZ_" + windowNo);\n      lblValue = $root.find("#lblValue_" + windowNo);\n      lblWarehouse = $root.find("#lblWarehouse_" + windowNo);\n\n      //check Arebic Calture\n      if (VIS.Application.isRTL) {\n        //Okbtn.css("margin-right", "-132px");\n        cancelbtn.css("margin-right", "10px");\n        divCreateNew.children(0).css("float", "left");\n      }\n\n      //fill locator in the control\n      mLocator.refresh();\n      mLocator.fillCombobox(mandatory, true, true, false);\n\n      // commented code because we added autocomplte control\n\n      //var selectedIndex = 0;\n      //commented because of autocomplete control now we added autocomplte control.\n      //load locator and set selected locator into the combo\n      //for (var i = 0; i < mLocator.data.length; i++) {\n      //    cmbLocator.append(" <option value=" + mLocator.data[i].Key + ">" + mLocator.data[i].Name + "</option>");\n      //    if (locatorId == mLocator.data[i].Key) {\n      //        selectedIndex = i;\n      //    }\n      //};\n      //cmbLocator.prop(\'selectedIndex\', selectedIndex);\n\n      //end\n      //load warehouse combo\n\n      var ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Locator/GetWarehouse", {\n        "Warehouse_ID": onlyWarehouseId\n      }, null);\n\n      //for (var i = 0; i < ds.tables[0].rows.length; i++) {\n      //    cmbWarehouse.append(" <option value=" + ds.tables[0].getRow(i).getCell(0) + ">" + ds.tables[0].getRow(i).getCell(1) + "</option>");\n      //}\n      if (ds != null) {\n        for (var i in ds) {\n          cmbWarehouse.append(" <option value=" + ds[i]["M_Warehouse_ID"] + ">" + ds[i]["Name"] + "</option>");\n        }\n      }\n      cmbWarehouse.prop(\'selectedIndex\', 0);\n\n      //When we are opening locator form first time OR locator ID is 0 then we have to set first locator into autocomplete control\n      if (mLocator.data.length > 0 && locatorId == 0) {\n        locatorId = mLocator.data[0].Key;\n      }\n      //fill all textboxes on bases of selected locatorId\n      displayLocator(ds);\n\n      /*Locator Fill*/\n      locators_lst.autocomplete({\n        source: function (request, response) {\n          if (request != null && request.term != null && request.term.trim().length == 0) {\n            return;\n          }\n          //send matched items into reponse\n          if (mLocator.data.length > 0) {\n            response($.map(mLocator.data, function (item) {\n              return {\n                label: item.Name,\n                value: item.Name,\n                locatorID: item.Key\n              };\n            }));\n          }\n        },\n        minLength: 1,\n        select: function (event, ui) {\n          //update locator_ID after selection from autocomplete\n          locatorId = ui.item.locatorID;\n          displayLocator(ds);\n        },\n        open: function () {\n          $(this).removeClass("ui-corner-all").addClass("ui-corner-top");\n        },\n        close: function () {\n          $(this).removeClass("ui-corner-top").addClass("ui-corner-all");\n        }\n      });\n      //end\n\n      //show and hide controls\n      if (mLocator.getIsOnlyOutgoing()) {\n        divCreateNew.hide();\n      }\n\n      //var sel = chkCreateNew.prop("checked");\n      //if (sel) {\n      //    divWarehouseInfo.hide();\n      //}\n      //else {\n      //    divWarehouse.hide();\n      //}\n\n      //txtX.attr("readonly", !sel);\n      //txtY.attr("readonly", !sel);\n      //txtZ.attr("readonly", !sel);\n      //txtValue.attr("readonly", !sel);\n\n      enableNew();\n      function enableNew() {\n        var sel = chkCreateNew.prop("checked");\n        if (sel) {\n          divWarehouseInfo.hide();\n          divWarehouse.show();\n          txtX.removeClass("vis-gc-vpanel-table-readOnly");\n          txtY.removeClass("vis-gc-vpanel-table-readOnly");\n          txtZ.removeClass("vis-gc-vpanel-table-readOnly");\n          txtValue.removeClass("vis-gc-vpanel-table-readOnly");\n          cmbWarehouse.removeClass("vis-gc-vpanel-table-readOnly");\n          cmbWarehouse.removeAttr("disabled");\n        } else {\n          divWarehouse.hide();\n          divWarehouseInfo.show();\n          txtX.addClass("vis-gc-vpanel-table-readOnly");\n          txtY.addClass("vis-gc-vpanel-table-readOnly");\n          txtZ.addClass("vis-gc-vpanel-table-readOnly");\n          txtValue.addClass("vis-gc-vpanel-table-readOnly");\n          cmbWarehouse.addClass("vis-gc-vpanel-table-readOnly");\n          cmbWarehouse.attr("disabled", true);\n        }\n        txtX.attr("readonly", !sel);\n        txtY.attr("readonly", !sel);\n        txtZ.attr("readonly", !sel);\n        txtValue.attr("readonly", !sel);\n      }\n      function valueChange() {\n        var buf = cmbWarehouse.find(\'option:selected\').text() + " " + sep + " " + txtX.val() + " " + sep + " " + txtY.val() + " " + sep + " " + txtZ.val();\n        txtValue.val(buf);\n      }\n      events();\n      function events() {\n        Okbtn.on("click", function () {\n          saveLocator();\n          if ($self.onClose) $self.onClose(locatorId);\n          $root.dialog(\'close\');\n        });\n        cancelbtn.on("click", function () {\n          $root.dialog(\'close\');\n        });\n        chkCreateNew.change(function () {\n          enableNew();\n        });\n        txtWarehouseInfo.change(function () {});\n        txtX.change(function () {\n          valueChange();\n        });\n        txtY.change(function () {\n          valueChange();\n        });\n        txtZ.change(function () {\n          valueChange();\n        });\n        cmbWarehouse.change(function () {\n          valueChange();\n        });\n\n        //Search button of autocomplete it will load all the locators\n        srchLocator.on("click", function () {\n          if (locators_lst.val() == "") {\n            locators_lst.autocomplete({\n              source: $.map(mLocator.data, function (item) {\n                return {\n                  label: item.Name,\n                  value: item.Name,\n                  locatorID: item.Key\n                };\n              }),\n              minLength: 0\n            }).bind(\'focus\', function () {\n              if (locators_lst.val().length == 0) {\n                locators_lst.autocomplete("search", "");\n              }\n            });\n            locators_lst.trigger("focus");\n          } else {\n            locators_lst.autocomplete("search");\n          }\n        });\n\n        // commented code because added autocomplte control.\n        //cmbLocator.change(function () {\n        //    displayLocator(ds);\n        //});\n        //end\n      }\n      ;\n    }\n    ;\n    function saveLocator() {\n      if (chkCreateNew.prop("checked")) {\n        var mandatoryFields = "";\n        if (txtValue.val().trim().length == 0) {\n          mandatoryFields += lblValue.val() + " - ";\n        }\n        if (txtX.val().trim().length == 0) {\n          mandatoryFields += lblX.val() + " - ";\n        }\n        if (txtY.val().trim().length == 0) {\n          mandatoryFields += lblY.val() + " - ";\n        }\n        if (txtZ.val().trim().length == 0) {\n          mandatoryFields += lblZ.val() + " - ";\n        }\n        var lblWText = lblWarehouse.val();\n        var tValue = txtValue.val(),\n          tX = txtX.val(),\n          tY = txtY.val(),\n          tZ = txtZ.val();\n        var warehId = cmbWarehouse.find(\'option:selected\').val();\n        if (warehId != 0) {\n          if (warehouseId != warehId) {\n            warehouseId = warehId;\n            //no need to get info from database\n          }\n        }\n        if (warehouseId == 0) {\n          mandatoryFields += lblWText + " - ";\n        }\n        if (mandatoryFields.length != 0) {\n          VIS.ADialog.error("FillMandatory", true, mandatoryFields.substring(0, mandatoryFields.length - 3));\n        } else {\n          $.ajax({\n            url: VIS.Application.contextUrl + "Locator/Save",\n            dataType: "json",\n            async: false,\n            data: {\n              warehouseId: warehouseId,\n              tValue: tValue,\n              tX: tX,\n              tY: tY,\n              tZ: tZ\n            },\n            success: function (data) {\n              returnValue = data.locatorId;\n              locatorId = returnValue;\n              mLocator.refresh();\n            }\n          });\n        }\n      } else {\n        $self.change = true;\n      }\n    }\n    ;\n    function displayLocator(ds) {\n      //commented because of autocomplete control now we already set value of locator onSelect event of autocomplte control.\n      //locatorId = cmbLocator.find(\'option:selected\').val();\n      var separator = "";\n      var warehouseValue = "";\n      var dsw = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Locator/GetWarehouseData", {\n        "Locator_ID": locatorId\n      }, null);\n      // Done by Bharat on 24 Jan 2019\n      // JID_1084: When there is no locator in warehouse system is not allowing to create the locator from the locator control\n      if (ds != null && dsw != null) {\n        txtWarehouseInfo.val(dsw["Name"]);\n        txtX.val(dsw["x"]);\n        txtY.val(dsw["y"]);\n        txtZ.val(dsw["z"]);\n        txtValue.val(dsw["Value"]);\n        warehouseId = dsw["M_Warehouse_ID"];\n        warehouseValue = dsw["wValue"];\n        separator = dsw["Separator"];\n        //Set text into autocomplete control in specific format.\n        if (locators_lst.length > 0) locators_lst[0].value = dsw["Name"] + "_" + dsw["Value"] + "(" + dsw["x"] + dsw["Separator"] + dsw["y"] + dsw["Separator"] + dsw["z"] + ")";\n      }\n      sep = separator;\n      //show values in the value text box\n      //var buf = dsw["Value"] + " " + separator + " " + txtX.val()\n      //    + " " + separator + " " + txtY.val()\n      //    + " " + separator + " " + txtZ.val();\n\n      var buf = dsw["Value"];\n      txtValue.val(buf);\n\n      //\tSet Warehouse\n      if (ds != null) {\n        for (var i in ds) {\n          if (warehouseId == ds[i]["M_Warehouse_ID"]) {\n            cmbWarehouse.prop(\'selectedIndex\', i);\n            break;\n          }\n        }\n      }\n    }\n  }\n  ;\n  LocatorForm.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.LocatorForm = LocatorForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/locatorform.js?')},"./Areas/VIS/Scripts/app/Framework/markmodule.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate Dialog to mark records with module .\r\n * Author         :     Lakhwinder\r\n * Date           :     29-Jun-2015\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function MarkModule() {\n    this.onClose = null;\n    var selfi = this;\n    var root = null;\n    var bsyDiv = null;\n    var contentDiv = null;\n    var divMlist = null;\n    var btnOk = null;\n    var btnCancel = null;\n    var divButtons = null;\n    var lstModules = null;\n    var _recordID = [];\n    var _strRecordID = null;\n    var _tableID = null;\n    var _tableName = null;\n    var lstExistingRec = [];\n    var lstCtrl = [];\n    var table = null;\n    var initializeComponent = function () {\n      root = $("<div>");\n      bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      bsyDiv[0].style.visibility = "visible";\n      root.append(bsyDiv);\n      contentDiv = $("<div>");\n      divMlist = $("<div class=\'vis-markmodulemainwrap\'>");\n      contentDiv.append(divMlist);\n      divButtons = $(\'<div>\');\n      contentDiv.append(divButtons);\n      var canceltxt = VIS.Msg.getMsg("Cancel");\n      var Oktxt = VIS.Msg.getMsg("Ok");\n      btnCancel = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;\'>").append(canceltxt);\n      btnOk = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px\'>").append(Oktxt);\n      divButtons.append(btnCancel);\n      divButtons.append(btnOk);\n      root.append(contentDiv);\n      table = $(\'<table>\');\n    };\n    initializeComponent();\n    var events = function () {\n      btnCancel.on("click", function () {\n        disposeComponent();\n      });\n      btnOk.on("click", function () {\n        saveData();\n      });\n    };\n    events();\n    var loadModules = function () {\n      lstModules = [];\n      var module = null;\n      var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "MarkModule/LoadModules", null, null);\n      if (dr != null) {\n        for (var i in dr) {\n          module = {};\n          module.AD_ModuleInfo_ID = dr[i]["AD_ModuleInfo_ID"];\n          module.Name = dr[i]["Name"];\n          module.Prefix = dr[i]["Prefix"];\n          //if (module.Name.indexOf("_") > -1) {\n          //    var px = module.Name.split("_");\n          //    module.Prefix = px[1];\n          //    module.Name = px[0];\n          //}\n          lstModules.push(module);\n        }\n      }\n      if (_recordID.length == 1) {\n        var data = {\n          RecordID: _recordID[0],\n          TableID: _tableID\n        };\n        var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "MarkModule/GetExportData", data, null);\n        if (dr != null) {\n          for (var i in dr) {\n            lstExistingRec.push(dr[i]);\n          }\n        }\n      }\n      //dr = null;\n      //var htmlstr = "<Table>";\n      var tr = null;\n      var td = null;\n      var lbl = null;\n      var chkbox = null;\n      if (lstExistingRec.length == 0) {\n        for (var i = 0; i < lstModules.length; i++) {\n          tr = $(\'<tr>\');\n          td = $(\'<td>\');\n          lbl = $(\'<label class="vis-gc-vpanel-table-label-checkbox" style="display: inline-block; opacity: 1;">\');\n          chkbox = $("<input type=\'checkbox\'>");\n          if (lstModules[i].Prefix == "VA093_") {\n            //special check for Auto Makring\n            chkbox.prop(\'disabled\', true);\n          }\n          lbl.append(chkbox);\n          lbl.append(lstModules[i].Name);\n          td.append(lbl);\n          tr.append(td);\n          table.append(tr);\n          var ctrlItem = {};\n          ctrlItem.Ctrl = chkbox;\n          ctrlItem.AD_ModuleInfo_ID = lstModules[i].AD_ModuleInfo_ID;\n          lstCtrl.push(ctrlItem);\n          //htmlstr += "<tr><td><label class=\'vis-gc-vpanel-table-label-checkbox\' style=\'display: inline-block; opacity: 1;\'><input type=\'checkbox\'>" + lstModules[i].Name + "</label></td></tr>";\n        }\n      } else {\n        //for (var i = 0; i < lstExistingRec.length; i++) {\n        for (var j = 0; j < lstModules.length; j++) {\n          tr = $(\'<tr>\');\n          td = $(\'<td>\');\n          lbl = $(\'<label class="vis-gc-vpanel-table-label-checkbox" style="display: inline-block; opacity: 1;">\');\n          if (lstExistingRec.indexOf(lstModules[j].AD_ModuleInfo_ID) > -1) {\n            chkbox = $("<input type=\'checkbox\' checked>");\n            // htmlstr += "<tr><td><label class=\'vis-gc-vpanel-table-label-checkbox\' style=\'display: inline-block; opacity: 1;\'><input type=\'checkbox\' checked>" + lstModules[j].Name + "</label></td></tr>";\n          } else {\n            chkbox = $("<input type=\'checkbox\'>");\n            // htmlstr += "<tr><td><label class=\'vis-gc-vpanel-table-label-checkbox\' style=\'display: inline-block; opacity: 1;\'><input type=\'checkbox\'>" + lstModules[j].Name + "</label></td></tr>";\n          }\n          if (lstModules[j].Prefix == "VA093_") {\n            //special check for marking requestd by auto marking team\n            chkbox.prop(\'disabled\', true);\n          }\n          lbl.append(chkbox);\n          lbl.append(lstModules[j].Name);\n          td.append(lbl);\n          tr.append(td);\n          table.append(tr);\n          var ctrlItem = {};\n          ctrlItem.Ctrl = chkbox;\n          ctrlItem.AD_ModuleInfo_ID = lstModules[j].AD_ModuleInfo_ID;\n          lstCtrl.push(ctrlItem);\n          //}\n        }\n      }\n      //htmlstr += "</Table>";\n      //divMlist.append(htmlstr);\n      divMlist.append(table);\n      bsyDiv[0].style.visibility = "hidden";\n    };\n    var saveData = function () {\n      bsyDiv[0].style.visibility = "visible";\n      var lstselectedID = [];\n      // var selectedID = \'\';\n      for (var i = 0; i < lstCtrl.length; i++) {\n        var chkbox = lstCtrl[i].Ctrl;\n        if (chkbox.prop(\'checked\')) {\n          lstselectedID.push(lstCtrl[i].AD_ModuleInfo_ID);\n          // selectedID += lstCtrl[i].AD_ModuleInfo_ID + \',\';\n        }\n      }\n      var data = {\n        moduleId: lstselectedID,\n        _recordID: _recordID,\n        _tableID: _tableID,\n        _strRecordID: _strRecordID\n      };\n      var res = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "MarkModule/SaveExportData", data);\n      if (res.result != "OK") {\n        alert(res.result);\n      }\n      bsyDiv[0].style.visibility = "hidden";\n      disposeComponent();\n    };\n    this.show = function () {\n      root.dialog({\n        title: VIS.Msg.getMsg(\'VIS_MarkModule\'),\n        width: 400,\n        height: 500,\n        resizable: false,\n        modal: true,\n        close: onClosing\n      });\n      loadModules();\n    };\n    this.init = function (recordID, TableID, tableName) {\n      _recordID = recordID.toString().split(\',\');\n      _strRecordID = recordID;\n      _tableID = TableID;\n      _tableName = tableName;\n    };\n    var onClosing = function () {\n      disposeComponent();\n    };\n    var disposeComponent = function () {\n      if (selfi.onClose) {\n        selfi.onClose();\n      }\n      contentDiv = null;\n      divMlist = null;\n      btnCancel.off("click");\n      btnOk.off("click");\n      btnOk = null;\n      btnCancel = null;\n      divButtons = null;\n      loadModules = null;\n      saveData = null;\n      initializeComponent = null;\n      events = null;\n      onClosing = null;\n      bsyDiv = null;\n      lstModules = null;\n      _recordID = null;\n      _strRecordID = null;\n      _tableID = null;\n      _tableName = null;\n      lstExistingRec = null;\n      lstCtrl = null;\n      table = null;\n      if (root != null) {\n        root.dialog(\'destroy\');\n        root.remove();\n      }\n      root = null;\n    };\n  }\n  VIS.MarkModule = MarkModule;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/markmodule.js?')},"./Areas/VIS/Scripts/app/Framework/newmailformat.js":()=>{eval(';\n(function (VIS, $) {\n  VIS.Newmailformat = function (isEmail) {\n    var $maingrid;\n    var $name;\n    var $showforall;\n    var ch;\n    var onClose = null;\n    var self = this;\n    init();\n    function init() {\n      $maingrid = $(\'<div class="vis-forms-container" ></div>\');\n      var $containerdiv = $(\'<div class="vis-emailsavewrap"></div>\');\n      var $divinputwrap = $(\'<div class="input-group vis-input-wrap"></div>\');\n      var namediv = $(\'<div class="vis-control-wrap"></div>\');\n      var $label = $(\'<label>\' + VIS.Msg.getMsg(\'Name\') + \'</label>\');\n      $name = $(\'<input type="text" data-placeholder="" placeholder=" ">\');\n      namediv.append($name).append($label);\n\n      //\n\n      labelshow = $(\'<label class="vis-ec-col-lblchkbox"><input type="checkbox">\' + VIS.Msg.getMsg(\'ForAllWindows\') + \'</label>\');\n      $showforall = $(labelshow.find(\'input\')[0]);\n      var checkdiv = $(\'<div style="display: flex"></div>\');\n      $showforall;\n      if (VIS.Application.isRTL) {\n        //$label.css({ "float": "right", "margin-right": "0px", "margin-left": "0px" })\n        //$name.css({ "float": "right", "margin-right": "10px", "margin-left": "0px" });\n        //$showforall.css("float", "left");\n        //labelshow.css({ "float": "left", "margin-right": "5px" });\n        //checkdiv.css({ "float": "right", "margin-bottom": "-5px" });\n      }\n      checkdiv.append(labelshow);\n      $containerdiv.append($divinputwrap);\n      $divinputwrap.append(namediv);\n      $containerdiv.append(checkdiv);\n      $maingrid.append($containerdiv);\n    }\n    ;\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      //ch.setHeight(400);\n      //ch.setWidth(800);\n      if (isEmail) {\n        ch.setTitle(VIS.Msg.getMsg("EmailFormats"));\n      } else {\n        ch.setTitle(VIS.Msg.getMsg("LetterFormats"));\n      }\n      ch.setModal(true);\n      ch.setContent($maingrid);\n      ch.show();\n      ch.onOkClick = ok;\n      ch.onClose = dispose;\n    };\n    function ok() {\n      if ($name.val() == null || $name.val() == "") {\n        VIS.ADialog.info("FileNameMendatory");\n        return false;\n      }\n      self.onClose();\n      // dispose();\n      return true;\n    }\n    function dispose() {\n      $maingrid.remove();\n      $maingrid = null;\n      $name.remove();\n      $name = null;\n      $showforall.remove();\n      $showforall = null;\n      ch = null;\n    }\n    ;\n    this.getName = function () {\n      return $name.val();\n    };\n    this.saveForAll = function () {\n      return $showforall.prop("checked");\n    };\n  };\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/newmailformat.js?')},"./Areas/VIS/Scripts/app/Framework/openmailformats.js":()=>{eval(';\n(function (VIS, $) {\n  VIS.Openmailformat = function (window_ID, isEmail) {\n    var sql;\n    var ds = null;\n    var selectedRow = {};\n    var self = this;\n    var attchmentName = [];\n    var $maingrid;\n    var ch;\n    this.onClose = null;\n    loadData();\n    function loadData() {\n      // Added by Bharat on 12 Dec 2017\n      ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Email/GetMailFormat", {\n        "Window_ID": window_ID\n      }, null);\n    }\n    ;\n    function ok() {\n      var index = w2ui[\'openformatgrid\'].getSelection();\n      selectedRow = w2ui[\'openformatgrid\'].get(index);\n      self.onClose();\n      return true;\n    }\n    ;\n    function dispose() {\n      ds = null;\n      sql = null;\n      ch = null;\n      if (w2ui[\'openformatgrid\'] != undefined) {\n        w2ui[\'openformatgrid\'].destroy();\n      }\n      $maingrid.remove();\n    }\n    ;\n    this.show = function () {\n      $maingrid = $(\'<div class="vis-forms-container" style="height:304px"></div>\');\n      ch = new VIS.ChildDialog();\n      if (VIS.Application.isRTL) {\n        ch.setHeight(435);\n      } else {\n        ch.setHeight(430);\n      }\n      ch.setWidth(850);\n      if (isEmail) {\n        ch.setTitle(VIS.Msg.getMsg("EmailFormats"));\n      } else {\n        ch.setTitle(VIS.Msg.getMsg("LetterFormat"));\n      }\n      ch.setModal(true);\n      ch.setContent($maingrid);\n      ch.show();\n      ch.onOkClick = ok;\n      ch.onClose = dispose;\n\n      //Columns size of grid is set to 20% each so that no empty space there in grid\n      //for (var c = 0; c < ds.tables[0].columns.length; c++) {\n\n      //    if (ds.tables[0].columns[c].name == "name") {\n      //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Name"), size: \'20%\', hidden: false });\n      //    }\n      //    else if (ds.tables[0].columns[c].name == "subject") {\n      //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Subject"), size: \'20%\', hidden: false });\n      //    }\n      //    else if (ds.tables[0].columns[c].name == "mailtext") {\n      //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Mailtext"), size: \'20%\', hidden: false });\n      //    }\n      //    else if (ds.tables[0].columns[c].name == "created") {\n      //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("Created"), size: \'20%\', hidden: false });\n      //    }\n      //    else if (ds.tables[0].columns[c].name == "isdynamiccontent") {\n      //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg("IsDynamicContent"), size: \'20%\', hidden: false });\n      //    }\n      //    else {\n      //        columns.push({ field: ds.tables[0].columns[c].name, caption: VIS.Msg.getMsg(ds.tables[0].columns[c].name), size: \'100px\', hidden: true });\n      //    }\n\n      //}\n\n      //var rows = [];\n\n      //var colkeys = [];\n\n      //if (ds.tables[0].rows.length > 0) {\n      //    colkeys = Object.keys(ds.tables[0].rows[0].cells);\n      //}\n\n      //for (var r = 0; r < ds.tables[0].rows.length; r++) {\n      //    var singleRow = {};\n      //    singleRow[\'recid\'] = r;\n      //    for (var c = 0; c < colkeys.length; c++) {\n      //        var colna = colkeys[c];\n      //        if (colna == "mailtext") {\n      //            singleRow[colna] = (ds.tables[0].rows[r].cells[colna]);\n      //        }\n      //        else {\n      //            singleRow[colna] = VIS.Utility.encodeText(ds.tables[0].rows[r].cells[colna]);\n      //        }\n      //    }\n      //    rows.push(singleRow);\n      //}\n\n      var columns = [];\n      var rows = [];\n      if (ds != null) {\n        for (var c in ds) {\n          if (ds[c].name == "NAME") {\n            columns.push({\n              field: ds[c].name,\n              caption: VIS.Msg.getMsg("Name"),\n              size: \'20%\',\n              hidden: false\n            });\n          } else if (ds[c].name == "SUBJECT") {\n            columns.push({\n              field: ds[c].name,\n              caption: VIS.Msg.getMsg("Subject"),\n              size: \'20%\',\n              hidden: false\n            });\n          } else if (ds[c].name == "MAILTEXT") {\n            columns.push({\n              field: ds[c].name,\n              caption: VIS.Msg.getMsg("Mailtext"),\n              size: \'20%\',\n              hidden: false\n            });\n          } else if (ds[c].name == "CREATED") {\n            columns.push({\n              field: ds[c].name,\n              caption: VIS.Msg.getMsg("Created"),\n              size: \'20%\',\n              hidden: false\n            });\n          } else if (ds[c].name == "ISDYNAMICCONTENT") {\n            columns.push({\n              field: ds[c].name,\n              caption: VIS.Msg.getMsg("IsDynamicContent"),\n              size: \'20%\',\n              hidden: false\n            });\n          } else {\n            columns.push({\n              field: ds[c].name,\n              caption: VIS.Msg.getMsg(ds[c].name),\n              size: \'100px\',\n              hidden: true\n            });\n          }\n        }\n        for (var j = 0; j < ds[0].RowCount; j++) {\n          var singleRow = {};\n          singleRow[\'recid\'] = j;\n          for (var r in ds) {\n            if (ds[r].name == "MAILTEXT") {\n              singleRow[ds[r].name] = ds[r].value[j];\n            } else {\n              singleRow[ds[r].name] = VIS.Utility.encodeText(ds[r].value[j]);\n            }\n          }\n          rows.push(singleRow);\n        }\n      }\n      $maingrid.w2grid({\n        name: \'openformatgrid\',\n        recordHeight: 30,\n        show: {\n          selectColumn: true\n        },\n        multiSelect: false,\n        columns: columns,\n        records: rows\n      });\n      ///  $maingrid.append($maingrid);\n    };\n    this.getSelectedRow = function () {\n      return selectedRow;\n    };\n    this.getAttachments = function () {\n      return attchmentName;\n    };\n  };\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/openmailformats.js?')},"./Areas/VIS/Scripts/app/Framework/parameterdialog.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     open dialog to add accounting and process it\r\n * Author         :     Raghu\r\n * Date           :     21-july-2015\r\n  ******************************************************/\n;\nVIS = window.VIS || {};\n;\n(function (VIS, $) {\n  /**\r\n  *\tParameter Dialog.\r\n  *\t- called from ProcessCtl\r\n  *\t- checks, if parameters exist and inquires and saves them\r\n  *  @class ParameterDialog\r\n  */\n\n  function ParameterDialog(windowNop, parent) {\n    var _parent = parent;\n    //Variabls\n    this.windowNo = windowNop;\n    this.processId = null;\n    this.name = null;\n    this.entityType = null;\n    this.pInstanceId = 0;\n    this.className = null;\n    this.fields = null;\n    this.paraList = null;\n    this.asyncProcess = true;\n    this.gridFields = [];\n    this.depOnFieldColumn = [];\n    this.depOnField = [];\n    this.vEditors = [];\n    this.vEditors2 = [];\n    this.mFields = [];\n    this.mFields2 = [];\n    this.isOkClicked = false;\n    this.onClosed;\n    var $root, $table, $tr, $td1, $td2, $td3, $btnOK, $btnClose;\n    var $busyDiv = $("<div class=\'vis-apanel-busy\' style=\'width:95%;height:98%;position:absolute\'>");\n    //Privilized functions\n    var self = this;\n    this.onCloseMain = null;\n    this.isOkProcess = false;\n\n    //call instance genration\n    function setBusy(isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    }\n    ;\n\n    // updated for frpt COA by vinay bhatt\n    this.process = function (id, name, windowNo) {\n      //var data = {\n      //    Process_ID: id, \n      //    Name: name,\n      //    AD_Table_ID: 0,\n      //    Record_ID: 0,\n      //    WindowNo: windowNo,\n      //    csv: false,\n      //    pdf: false\n      //}\n\n      //var processUrl = VIS.Application.contextUrl + "JsonData/Process";\n      //$.ajax({\n      //    url: processUrl,\n      //    type: "GET",\n      //    datatype: "json",\n      //    async: this.asyncProcess,\n      //    data: data\n      //}).done(function (json) {\n      //    if (json) {\n      //        loadfieldspara(json);\n      //    }\n      //})\n\n      var pInfo = new VIS.ProcessInfo(name, id, 0, 0);\n      pInfo.setAD_PInstance_ID(self.pInstanceId);\n      pInfo.setWindowNo(windowNo);\n      var data = {\n        processInfo: pInfo.toJson()\n      };\n      if (this.asyncProcess) {\n        VIS.dataContext.process(data, function (jsonStr) {\n          loadfieldspara(jsonStr);\n        });\n      } else {\n        var jsonStr = VIS.dataContext.process(data);\n        loadfieldspara(jsonStr);\n      }\n    };\n    function loadfieldspara(jsonStr) {\n      if (jsonStr.error != null) {\n        return;\n      }\n      var json = JSON.parse(jsonStr.result);\n      if (json.IsError) {\n        return;\n      }\n      if (json.ShowParameter) {\n        //Open Paramter Dialog\n        self.pInstanceId = json.AD_PInstance_ID;\n        self.fields = json.ProcessFields;\n      } else {\n        if (json.ReportProcessInfo != null) {\n          VIS.ADialog.info(json.ReportProcessInfo.Summary, true, "", "");\n          if (VIS.Msg.getMsg("ImportedSuccessfully") == json.ReportProcessInfo.Summary) {\n            _parent.parentcall(true);\n            if (self) self.isOkProcess = true;\n            return true;\n          }\n        }\n        if (self) self.isOkProcess = false;\n        _parent.parentcall(false);\n        return false;\n      }\n    }\n    function initlizedComponent() {\n      $root = $("<div title=\'ParameterDialog\'>");\n      $table = $("<table class=\'vis-processpara-table\'>");\n      $root.append($table);\n      $btnOK = $(\'<input type="button" style="margin-right:5px" >\').val(VIS.Msg.getMsg("OK"));\n      $btnOK.addClass("VIS_Pref_btn-2");\n      $btnClose = $("<input type=\'button\'>").val(VIS.Msg.getMsg("Close"));\n      $btnClose.addClass("VIS_Pref_btn-2");\n      $btnClose.css({\n        "margin-bottom": "0px",\n        "margin-top": "7px"\n      });\n      $btnOK.css({\n        "margin-bottom": "0px",\n        "margin-top": "7px"\n      });\n    }\n    ;\n    //call\n    initlizedComponent();\n    this.addLine = function () {\n      $tr = $td1 = $td2 = $td3 = null;\n      $td1 = $("<td class=\'\'>");\n      $td2 = $("<td class=\'\'>");\n      $td3 = $("<td class=\'vis-processpara-table-td3\'>");\n      $table.append($("<tr>").append($td1).append($td2).append($td3));\n    };\n    this.addFields = function (c1, c2) {\n      if (c1) $td1.append(c1.getControl());\n      if (c2) {\n        c2.getControl().width("200px");\n        c2.getControl().height("30px");\n        $td3.append(c2.getControl());\n        if (c2.getBtnCount() > 0) {\n          var btn = c2.getBtn(0);\n          $td3.append(btn);\n          if (c2.getDisplayType() == VIS.DisplayType.MultiKey) {\n            $td3.append(c2.getBtn(1));\n          }\n        }\n      }\n    };\n    this.addButtons = function () {\n      this.addLine();\n      $td3.append($btnClose).append($btnOK);\n    };\n    this.showDialog = function () {\n      $root.append($busyDiv);\n      $root.dialog({\n        modal: true,\n        width: "auto",\n        close: function () {\n          onProcessDialogClosed(self.isOkClicked, self.parameterList);\n          if (self.onCloseMain) self.onCloseMain(self.isOkClicked);\n          self.dispose();\n          self = null;\n          setBusy(false);\n        }\n      });\n      window.setTimeout(function () {\n        $btnClose.focus();\n      }, 200);\n      setBusy(false);\n    };\n\n    // updated for frpt COA by vinay bhatt\n    function onProcessDialogClosed(isOK, paraList) {\n      if (isOK) {\n        //Ok clicked\n        self.paraList = paraList;\n        //var data = {\n        //    Process_ID: self.processId,\n        //    AD_PInstance_ID: self.pInstanceId,\n        //    Name: self.name,\n        //    AD_Table_ID: 0,\n        //    Record_ID: 0,\n        //    ParameterList: paraList,\n        //    csv: false,\n        //    pdf: false\n        //}\n\n        //var executeProcessUrl = VIS.Application.contextUrl + "JsonData/ExecuteProcess";\n        //$.ajax({\n        //    url: executeProcessUrl,\n        //    type: "POST",\n        //    datatype: "json",\n        //    contentType: "application/json; charset=utf-8",\n        //    //async: self.asyncProcess,\n        //    async: true,\n        //    data: JSON.stringify(data)\n        //}).done(function (json) {\n        //    if (json) {\n        //        loadfieldspara(json);\n        //    }\n        //})\n\n        var pInfo = new VIS.ProcessInfo(self.name, self.processId, 0, 0);\n        pInfo.setAD_PInstance_ID(self.pInstanceId);\n        VIS.dataContext.executeProcess({\n          processInfo: pInfo.toJson(),\n          parameterList: paraList\n        }, function (jsonStr) {\n          loadfieldspara(jsonStr);\n        });\n      } else {\n        //close form\n      }\n    }\n    ;\n    this.onClose = function (isOkClicked) {\n      self.isOkClicked = isOkClicked;\n      $root.dialog(\'close\');\n    };\n\n    /* Events */\n    $btnClose.on(VIS.Events.onTouchStartOrClick, function () {\n      self.onClose(false);\n    });\n    $btnOK.on(VIS.Events.onTouchStartOrClick, function () {\n      setBusy(true);\n      var list = self.saveParameters();\n      if (!list) {\n        setBusy(false);\n        return;\n      }\n      self.parameterList = list;\n      self.onClose(true, list);\n    });\n    this.disposeComponent = function () {\n      $btnClose.off(VIS.Events.onTouchStartOrClick);\n      $btnOK.off(VIS.Events.onTouchStartOrClick);\n      $root.dialog(\'destroy\');\n      $root.remove();\n      self = null;\n      this.gridFields.length = 0;\n      this.gridFields = null;\n      this.depOnFieldColumn.length = 0;\n      this.depOnFieldColumn - null;\n      this.depOnField.length = 0;\n      this.depOnField = null;\n      this.vEditors.length = 0;\n      this.vEditors2.length = 0;\n      this.mFields.length = 0;\n      this.mFields2.length = 0;\n\n      //this.pi = null;\n      this.parameterList = null;\n      this.addLine = null;\n      this.addFields = null;\n      this.addButtons = null;\n      this.showDialog = null;\n      this.onClose = null;\n      this.isOkClicked = null;\n      $root = $table = $tr = $td1 = $td2 = $td3 = $btnOK = $btnClose = null;\n      ;\n    };\n  }\n  ;\n\n  /**\r\n  *\tRead and Create Fields to display\r\n  *\t- creates Fields and adds it mFields list\r\n  *  - creates Editor and adds it to vEditors list\r\n  *  Handeles Ranges by adding additional mField/vEditor.\r\n  *  <p>\r\n  *  mFields are used for default value and mandatory checking;\r\n  *  vEditors are used to retrieve the value (no data binding)\r\n  *  @param {array object}  fields\r\n  *  @return true if loaded OK\r\n  */\n  ParameterDialog.prototype.initDialog = function (processIDp, namep, typep, classNamep, asyn) {\n    this.processId = processIDp;\n    this.name = namep;\n    this.entityType = typep;\n    this.className = classNamep;\n    if (typeof asyn != \'undefined\') {\n      this.asyncProcess = asyn;\n    }\n    this.process(processIDp, namep, this.windowNo);\n    var fields = this.fields;\n    var mField = null;\n    for (var i = 0, len = fields.length; i < len; i++) {\n      mField = new VIS.GridField(fields[i]);\n      this.addLine(); // add new line\n      this.mFields.push(mField);\n      var list = mField.getDependentOn(false); //dependents file\n\n      for (var j = 0; j < list.length; j++) {\n        this.depOnField.push(mField); // ColumnName, Field\n        this.depOnFieldColumn.push(list[j]);\n      }\n      var label = VIS.VControlFactory.getLabel(mField); //get label\n      //\tThe Editor\n      var vEditor = VIS.VControlFactory.getControl(null, mField, false); //get control\n      if (vEditor) {\n        var defaultValue = mField.getDefault(VIS.context, this.windowNo);\n        vEditor.setValue(defaultValue);\n        vEditor.addVetoableChangeListener(this);\n      }\n      //  GridField => VEditor - New Field value to be updated to editor\n      mField.setPropertyChangeListener(vEditor);\n      //\n\n      this.vEditors.push(vEditor); //  add to Editors\n      this.addFields(label, vEditor);\n      if (mField.getIsRange()) {\n        this.addLine(); // add new line\n        var vof2 = {};\n        $.extend(true, vof2, fields[i]);\n        var mField2 = new VIS.GridField(vof2);\n        this.mFields2.push(mField2);\n        //\tThe Editor\n        var vEditor2 = VIS.VControlFactory.getControl(null, mField2, false);\n        //  New Field value to be updated to editor\n        if (vEditor2) {\n          var defaultValue = mField2.getDefault(VIS.context, this.windowNo);\n          vEditor2.setValue(defaultValue);\n          vEditor2.addVetoableChangeListener(this);\n        }\n        //\n        this.vEditors2.push(vEditor2);\n        this.addFields(null, vEditor2);\n      } else {\n        this.mFields2.push(null);\n        this.vEditors2.push(null);\n      }\n    }\n    this.addButtons();\n    return true;\n  };\n\n  /**\r\n  *\tEditor Listener\r\n  *\t@param {object} evt Event\r\n  */\n  ParameterDialog.prototype.vetoablechange = function (evt) {\n    console.log(evt);\n    var value = evt.newValue == null ? "" : evt.newValue.toString();\n    var columnName = evt.propertyName;\n    VIS.Env.getCtx().setWindowContext(this.windowNo, columnName, value);\n    if (this.depOnFieldColumn.indexOf(columnName) !== -1) {\n      var dependentFields = this.getDependantFields(columnName);\n      for (var i = 0, len = dependentFields.length; i < len; i++) {\n        //var dep = field;\n        //field is not defined\n        var dep = dependentFields[i];\n        if (dep == null) continue;\n        dep.refreshLookup();\n        dep.setValue(dep.getDefault(VIS.Env.getCtx(), this.windowNo), true);\n      }\n    }\n  };\n\n  /**\r\n    get dependent fields against column\r\n    @method getDependantFields\r\n    @param {string} columnName\r\n    @return array of GridFeild objects \r\n  */\n  ParameterDialog.prototype.getDependantFields = function (columnName) {\n    var list = [];\n    if (this.depOnFieldColumn.indexOf(columnName) != -1) {\n      var size = this.depOnFieldColumn.length;\n      for (var i = 0; i < size; i++) {\n        if (this.depOnFieldColumn[i].equals(columnName)) if (list.indexOf(this.depOnField[i]) < 0) list.push(this.depOnField[i]);\n      }\n    }\n    return list;\n  };\n\n  /**\r\n  * Save Parameter values\r\n  * @return true if parameters saved\r\n  */\n  ParameterDialog.prototype.saveParameters = function () {\n    //Mandatory Fields\n    var sb = new StringBuilder();\n    var size = this.mFields.length;\n    var i = 0;\n    for (i = 0; i < size; i++) {\n      var field = this.mFields[i];\n      if (field.getIsMandatory(true)) {\n        //  check context\n        var vEditor = this.vEditors[i];\n        var data = vEditor.getValue();\n        if (data == null || data.toString().length == 0) {\n          field.setInserting(true); //  set editable (i.e. updateable) otherwise deadlock\n          field.setError(true);\n          if (sb.length() > 0) sb.append(", ");\n          sb.append(field.getHeader());\n        } else field.setError(false);\n        //  Check for Range\n        var vEditor2 = this.vEditors2[i];\n        if (vEditor2 != null) {\n          var data2 = vEditor.getValue();\n          var field2 = this.mFields2[i];\n          if (data2 == null || data2.toString().length == 0) {\n            field.setInserting(true); //  set editable (i.e. updateable) otherwise deadlock\n            field2.setError(true);\n            if (sb.length() > 0) sb.append(", ");\n            sb.append(field.getHeader());\n          } else field2.setError(false);\n        } //  range field\n      } //  mandatory\n    } //  field loop\n    if (sb.length() != 0) {\n      VIS.ADialog.error("FillMandatory", true, sb.toString());\n      //alert("FillMandatory", sb.toString());\n      return false;\n    }\n\n    /**********************************************************************\r\n    *\tSave Now\r\n    */\n\n    var parameterList = [];\n    var para = {};\n    for (i = 0; i < size; i++) {\n      //\tGet Values\n      var editor = this.vEditors[i];\n      var editor2 = this.vEditors2[i];\n      var result = editor.getValue();\n      var result2 = null;\n      if (editor2 != null) result2 = editor2.getValue();\n\n      //\tDon\'t save NULL values\n      if (result == null && result2 == null) continue;\n\n      //\tCreate Parameter\n      para = {};\n\n      //MPInstancePara para = new MPInstancePara (Env.getCtx(), m_processInfo.getAD_PInstance_ID(), i);\n      var mField = this.mFields[i];\n      para.Name = mField.getColumnName();\n      para.DisplayType = mField.getDisplayType();\n      para.Result = result;\n      para.Result2 = result2;\n\n      ////\tDate\n      //if ((result instanceof Timestamp) || (result2 instanceof Timestamp))\n      //{\n      //    para.setP_Date((Timestamp)result);\n      //    if ((editor2 != null) && (result2 != null))\n      //        para.setP_Date_To((Timestamp)result2);\n      //}\n      //    //\tInteger\n      //else if ((result instanceof Integer) || (result2 instanceof Integer))\n      //{\n      //    if (result != null)\n      //    {\n      //        Integer ii = (Integer)result;\n      //        para.setP_Number(ii.intValue());\n      //    }\n      //    if ((editor2 != null) && (result2 != null))\n      //    {\n      //        Integer ii = (Integer)result2;\n      //        para.setP_Number_To(ii.intValue());\n      //    }\n      //}\n      //    //\tBigDecimal\n      //else if ((result instanceof BigDecimal) || (result2 instanceof BigDecimal))\n      //{\n      //    para.setP_Number ((BigDecimal)result);\n      //    if ((editor2 != null) && (result2 != null))\n      //        para.setP_Number_To ((BigDecimal)result2);\n      //}\n      //    //\tBoolean\n      //else if (result instanceof Boolean)\n      //{\n      //    Boolean bb = (Boolean)result;\n      //    String value = bb.booleanValue() ? "Y" : "N";\n      //    para.setP_String (value);\n      //    //\tto does not make sense\n      //}\n      //\tString\n      //else\n      //{\n      //    if (result != null)\n      //        para.setP_String (result.toString());\n      //    if ((editor2 != null) && (result2 != null))\n      //        para.setP_String_To (result2.toString());\n      //}\n\n      //  Info\n      para.Info = editor.getDisplay();\n      if (editor2 != null) para.Info_To = editor2.getDisplay();\n      parameterList.push(para);\n    }\n    return parameterList;\n  };\n\n  /**\r\n       clean up\r\n       @method dispose\r\n  */\n  ParameterDialog.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  // Global Assignment\n  VIS.ParameterDialog = ParameterDialog;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/parameterdialog.js?')},"./Areas/VIS/Scripts/app/Framework/pattributeinstance.js":()=>{eval(';\n(function (VIS, $) {\n  //SerNo Parameter Added by Manjot To implement Search Functionality on Grid 10 May 2018 google Sheet ID SI_0607 \n  function PAttributeInstance(title, M_Warehouse_ID, M_Locator_ID, M_Product_ID, C_BPartner_ID, SerNo, lotNo, garunteeDate, isSOTrx) {\n    var $self = this;\n    this.onClose = null;\n    var $root = $("<div>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var mWarehouseID = M_Warehouse_ID;\n    var mLocatorID = M_Locator_ID;\n    var mProductID = M_Product_ID;\n    var mCBPartnerID = C_BPartner_ID;\n    var mtitle = title;\n    var issotrx = isSOTrx;\n    this.arrListColumns = [];\n    this.dGrid = null;\n    var mAttributeSetInstanceID = -1;\n    var mAttributeSetInstanceName = null;\n    var attrCode = "";\n    var msql = "";\n    var msqlNonZero = "";\n    //\tFrom Clause\t\t\t\t\t\t\n    var msqlFrom = "";\n    //"M_ProductAttributes patr LEFT JOIN M_Storage s ON (patr.M_AttributeSetInstance_ID = s.M_AttributeSetInstance_ID AND patr.M_Product_ID = s.M_Product_ID)"\n    //    + " LEFT JOIN M_Locator l ON (s.M_Locator_ID=l.M_Locator_ID)"\n    //    + " LEFT JOIN M_Warehouse w ON (l.M_Warehouse_ID=w.M_Warehouse_ID)"\n    //    + " INNER JOIN M_Product p ON (patr.M_Product_ID=p.M_Product_ID)"\n    //    + " INNER JOIN M_AttributeSetInstance asi ON (patr.M_AttributeSetInstance_ID=asi.M_AttributeSetInstance_ID)";\n\n    var msqlWhere = " patr.M_Product_ID=@M_Product_ID AND patr.M_AttributeSetInstance_ID != 0";\n    msqlNonZero = " AND s.QtyOnHand>0"; // (s.QtyOnHand<>0 OR s.QtyReserved<>0 OR s.QtyOrdered<>0)";\n    var msqlMinLife = "";\n    this.log = VIS.Logging.VLogger.getVLogger("PAttributeInstance");\n    var windowNo = VIS.Env.getWindowNo();\n    var chkShowAll = $("<input id=\'" + "chkShowAll_" + windowNo + "\' type=\'checkbox\' >" + "<span><label id=\'" + "lblShowAll_" + windowNo + "\' class=\'VIS_Pref_Label_Font\'>" + VIS.Msg.getMsg("VIS_ShowAll") + "</label></span>");\n    var btnOk = $("<input id=\'" + "btnOk_" + windowNo + "\' class=\'VIS_Pref_btn-2\' style=\'float: right; margin-right: 10px;\' type=\'button\' value=\'" + VIS.Msg.getMsg("OK") + "\'>");\n    var btnCancel = $("<input id=\'" + "btnCancel_" + windowNo + "\' class=\'VIS_Pref_btn-2\' style=\'float: right;margin-right: 0px;\' type=\'button\' value=\'" + VIS.Msg.getMsg("Cancel") + "\'>");\n    var topdiv = $("<div id=\'" + "topdiv_" + windowNo + "\' style=\'float: left; width: 100%; height: 7%; text-align: right;\'>");\n    var middeldiv = $("<div id=\'" + "middeldiv_" + windowNo + "\' style=\'float: left; width: 100%; height: 79%;\'>");\n    var bottomdiv = $("<div id=\'" + "bottomdiv_" + windowNo + "\' style=\'float: left; width: 100%; height: 14%;\'>");\n    var disableSearch = false;\n    if (VIS.Application.isRTL) {\n      topdiv.css("text-align", "left");\n      btnOk.css("margin-right", "0px");\n      btnOk.css("margin-left", "10px");\n      btnOk.css("float", "left");\n      btnCancel.css("margin-right", "0px");\n      btnCancel.css("float", "left");\n    }\n    function dynInit(C_BPartner_ID) {\n      $self.log.config("C_BPartner_ID=" + C_BPartner_ID);\n      if (C_BPartner_ID != 0) {\n        var shelfLifeMinPct = 0;\n        var shelfLifeMinDays = 0;\n        var dr = null;\n        try {\n          dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "PAttributes/GetBPData", {\n            "Product_ID": mProductID,\n            "BPartner_ID": C_BPartner_ID\n          }, null);\n          if (dr != null) {\n            shelfLifeMinPct = dr["ShelfLifeMinPct"];\n            var pct = dr["PCT"];\n            if (pct > 0) {\n              shelfLifeMinDays = pct;\n            }\n            shelfLifeMinDays = dr["ShelfLifeMinDays"];\n          }\n        } catch (e) {\n          //if (dr != null) {\n          //    dr.close();\n          //}\n          //this.log.Log(Level.SEVERE, sql, e);\n          console.log(e);\n        }\n        if (shelfLifeMinPct > 0) {\n          msqlMinLife = " AND COALESCE(TRUNC((daysBetween(TRUNC(asi.GuaranteeDate,\'DD\'),TRUNC(SysDate,\'DD\'))/p.GuaranteeDays)*100),0)>=" + shelfLifeMinPct;\n          $self.log.config("PAttributeInstance.dynInit - ShelfLifeMinPct=" + shelfLifeMinPct);\n        }\n        if (shelfLifeMinDays > 0) {\n          msqlMinLife += " AND COALESCE(daysBetween(TRUNC(asi.GuaranteeDate,\'DD\'),TRUNC(SysDate,\'DD\')),0)>=" + shelfLifeMinDays;\n          $self.log.config("PAttributeInstance.dynInit - ShelfLifeMinDays=" + shelfLifeMinDays);\n        }\n      } //\tBPartner != 0\n\n      msql = msqlWhere; // prepareTable(msqlFrom, msqlWhere, false, "patr") + " ORDER BY asi.GuaranteeDate, QtyOnHand DESC";\t//\toldest, smallest first\n      if (mWarehouseID != 0) {\n        msql = msql.concat(" AND NVL(l.M_Warehouse_ID,0) IN (0," + mWarehouseID + ")");\n      }\n      msql += " ORDER BY asi.GuaranteeDate, QtyOnHand DESC"; //\toldest, smallest first"\n      //refresh();\n      topdiv.append(chkShowAll);\n      bottomdiv.append(btnCancel).append(btnOk);\n      $root.append($busyDiv).append(topdiv).append(middeldiv).append(bottomdiv);\n      if (issotrx) {\n        chkShowAll.prop("checked", false);\n      } else {\n        chkShowAll.prop("checked", true);\n      }\n      //topdiv.hide();\n      events();\n    }\n    function prepareTable(from, where, multiSelection, tableName) {\n      var sql = "";\n\n      //if (mLocatorID != 0) {\n      //    sql = sql.concat(" AND s.M_Locator_ID = " + mLocatorID);\n      //}\n      //if (mWarehouseID != 0) {\n      //    sql = sql.concat(" AND NVL(l.M_Warehouse_ID,0) IN (0," + mWarehouseID + ")");\n      //}\n\n      //if (from.length == 0) {\n      //    return sql.toString();\n      //}\n      //\n      // $self.log.finest(finalSQL);\n      // var finalSQL = VIS.MRole.getDefault().addAccessSQL(sql, tableName, VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RO);\n      //return finalSQL\n    }\n    function refresh() {\n      if (msql == null) {\n        msql = "";\n      }\n      var data = [];\n      var sql = msql;\n      var pos = msql.lastIndexOf(" ORDER BY ");\n      if (!chkShowAll.prop("checked")) {\n        sql = msql.substring(0, pos) + msqlNonZero;\n        if (msqlMinLife.length > 0) {\n          sql += msqlMinLife;\n        }\n        sql += msql.substring(pos);\n      }\n      //\n      $self.log.finest(sql);\n      try {\n        var _sql = VIS.secureEngine.encrypt(sql);\n        dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "PAttributes/GetAttributeData", {\n          "Sq1Atribute": _sql,\n          "Product_ID": mProductID\n        }, null);\n        if (dr != null && dr.length > 0) {\n          var count = 1;\n          for (var i in dr) {\n            var line = {};\n            line[\'M_AttributeSetInstance_ID\'] = dr[i]["M_AttributeSetInstance_ID"];\n            line[\'Description\'] = dr[i]["Description"];\n            line[\'Lot\'] = dr[i]["Lot"];\n            line[\'SerNo\'] = dr[i]["SerNo"];\n            line[\'GuaranteeDate\'] = dr[i]["GuaranteeDate"];\n            line[\'Value\'] = dr[i]["Value"];\n            line[\'QtyReserved\'] = dr[i]["QtyReserved"];\n            line[\'QtyOrdered\'] = dr[i]["QtyOrdered"];\n            line[\'QtyOnHand\'] = dr[i]["QtyOnHand"];\n            line[\'GoodForDays\'] = dr[i]["GoodForDays"];\n            line[\'ShelfLifeDays\'] = dr[i]["ShelfLifeDays"];\n            line[\'ShelfLifeRemainingPct\'] = dr[i]["ShelfLifeRemainingPct"];\n            line[\'M_Locator_ID\'] = dr[i]["M_Locator_ID"];\n            line[\'AttrCode\'] = dr[i]["AttrCode"];\n            line[\'recid\'] = count;\n            count++;\n            data.push(line);\n          }\n        }\n        enableButtons();\n      } catch (e) {\n        //$self.log.Log(Level.SEVERE, sql, e);\n        console.log(e);\n      }\n      loadGrid(data);\n    }\n    function loadGrid(data) {\n      if ($self.dGrid != null) {\n        $self.dGrid.destroy();\n        $self.dGrid = null;\n      }\n      if ($self.arrListColumns.length == 0) {\n        $self.arrListColumns.push({\n          field: "Description",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "Description"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "Lot",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "Lot"),\n          sortable: true,\n          size: \'10%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "SerNo",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "SerNo"),\n          sortable: true,\n          size: \'10%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "GuaranteeDate",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "GuaranteeDate"),\n          sortable: true,\n          size: \'10%\',\n          min: 100,\n          hidden: false,\n          render: \'date\',\n          options: {\n            format: \'yyyy-mm-dd\'\n          }\n        });\n        $self.arrListColumns.push({\n          field: "Value",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "M_Locator_ID"),\n          sortable: true,\n          size: \'10%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "QtyReserved",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "QtyReserved"),\n          sortable: true,\n          size: \'15%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "QtyOrdered",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "QtyOrdered"),\n          sortable: true,\n          size: \'15%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "QtyOnHand",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "QtyOnHand"),\n          sortable: true,\n          size: \'15%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "GoodForDays",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "GoodForDays"),\n          sortable: true,\n          size: \'15%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "ShelfLifeDays",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "ShelfLifeDays"),\n          sortable: true,\n          size: \'15%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "ShelfLifeRemainingPct",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "ShelfLifeRemainingPct"),\n          sortable: true,\n          size: \'20%\',\n          min: 100,\n          hidden: false\n        });\n        $self.arrListColumns.push({\n          field: "M_Locator_ID",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "M_Locator_ID"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: true\n        });\n        $self.arrListColumns.push({\n          field: "M_AttributeSetInstance_ID",\n          caption: VIS.Msg.translate(VIS.Env.getCtx(), "ID"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: true\n        });\n        $self.arrListColumns.push({\n          field: "AttrCode",\n          caption: VIS.Msg.getElement(VIS.Env.getCtx(), "AttrCode"),\n          sortable: true,\n          size: \'16%\',\n          min: 150,\n          hidden: true\n        });\n      }\n      setTimeout(10);\n      w2utils.encodeTags(data);\n      $self.dGrid = $(middeldiv).w2grid({\n        name: "gridPinstance" + windowNo,\n        show: {\n          toolbar: true,\n          footer: true\n        },\n        recordHeight: 30,\n        columns: $self.arrListColumns,\n        records: data,\n        //Added by Manjot To implement Search Functionality on Grid 10 May 2018 google Sheet ID SI_0607\n        multiSearch: true,\n        searches: [{\n          field: \'Description\',\n          caption: \'Description\',\n          type: \'text\'\n        }, {\n          field: \'Lot\',\n          caption: \'Lot\',\n          type: \'text\'\n        }, {\n          field: \'SerNo\',\n          caption: \'SerNo\',\n          type: \'text\'\n        }, {\n          field: \'GuaranteeDate\',\n          caption: \'GuaranteeDate\',\n          type: \'date\',\n          options: {\n            format: \'yyyy-mm-dd\'\n          }\n        }],\n        //end\n        onClick: function (event) {\n          if ($self.dGrid.records.length > 0) {\n            btnOk.removeAttr("disabled");\n          }\n        }\n      });\n      //Added by Manjot To implement Search Functionality on Grid 10 May 2018 google Sheet ID SI_0607\n      // \n      if (!disableSearch) {\n        if (SerNo) $self.dGrid.search(\'all\', SerNo);else if (lotNo) $self.dGrid.search(\'all\', lotNo);\n      }\n      //$self.dGrid.hideColumn(\'M_Locator_ID\');\n      $busyDiv.css("display", \'none\');\n    }\n    function enableButtons() {\n      var recid = -1;\n      var enabled = recid != -1;\n      if ($self.dGrid != null) {\n        recid = Number($self.dGrid.getSelection().toString());\n        mAttributeSetInstanceID = -1;\n        mAttributeSetInstanceName = null;\n        mLocatorID = 0;\n        enabled = recid != -1;\n        if (enabled && recid > 0) {\n          var id = $self.dGrid.get(recid).M_AttributeSetInstance_ID;\n          if (id > 0) {\n            mAttributeSetInstanceID = id;\n            mAttributeSetInstanceName = $self.dGrid.get(recid).Description;\n            mLocatorID = $self.dGrid.get(recid).M_Locator_ID;\n            attrCode = $self.dGrid.get(recid).AttrCode;\n          }\n        }\n      }\n      btnOk.attr(\'disabled\', true);\n      if (enabled) {\n        btnOk.removeAttr("disabled");\n      }\n      $self.log.fine("M_AttributeSetInstance_ID=" + mAttributeSetInstanceID + " - " + mAttributeSetInstanceName + "; M_Locator_ID=" + mLocatorID);\n    }\n    function events() {\n      if (btnOk != null) btnOk.on(VIS.Events.onTouchStartOrClick, function () {\n        enableButtons();\n        if ($self.onClose) $self.onClose(mAttributeSetInstanceID, mAttributeSetInstanceName, mLocatorID, attrCode);\n        $root.dialog(\'close\');\n      });\n      if (btnCancel != null) btnCancel.on(VIS.Events.onTouchStartOrClick, function () {\n        $root.dialog(\'close\');\n      });\n      if (chkShowAll != null) {\n        chkShowAll.change(function () {\n          disableSearch = true;\n          refresh();\n        });\n      }\n      //10 May 2018\n      //if (btnSearch != null) {\n      //    btnSearch.on(VIS.Events.onTouchStartOrClick, function () {\n      //        alert(txtSearch.val());\n      //    });\n      //}\n    }\n    this.showDialog = function () {\n      $root.dialog({\n        modal: true,\n        title: mtitle,\n        // VIS.Msg.translate(VIS.Env.getCtx(), mtitle),\n        width: 600,\n        height: 450,\n        resizable: false,\n        close: function () {\n          $self.dispose();\n          $self = null;\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n      refresh();\n    };\n    this.disposeComponent = function () {\n      if (btnOk) btnOk.off("click");\n      if (btnCancel) btnCancel.off("click");\n      btnOk = null;\n      btnCancel = null;\n      //10 May 2018\n      //btnSearch = null;\n      //txtSearch = null;\n\n      windowNo = null;\n      this.onClose = null;\n      $busyDiv = null;\n      mWarehouseID = null;\n      mLocatorID = null;\n      mProductID = null;\n      mCBPartnerID = null;\n      mtitle = null;\n      issotrx = null;\n      this.arrListColumns = null;\n      this.dGrid = null;\n      msqlFrom = null;\n      msqlWhere = null;\n      msqlNonZero = null;\n      msqlMinLife = null;\n      this.log = null;\n      chkShowAll = null;\n      topdiv = null;\n      middeldiv = null;\n      bottomdiv = null;\n      mAttributeSetInstanceID = null;\n      mAttributeSetInstanceName = null;\n      msql = null;\n      this.disposeComponent = null;\n    };\n    dynInit(mCBPartnerID);\n  }\n  ;\n\n  //dispose call\n  PAttributeInstance.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n  };\n  VIS.PAttributeInstance = PAttributeInstance;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/pattributeinstance.js?')},"./Areas/VIS/Scripts/app/Framework/pattributesform.js":()=>{eval(';\n(function (VIS, $) {\n  // PAttributesForm form declraion for constructor class\n  function PAttributesForm(M_AttributeSetInstance_ID, M_Product_ID, M_Locator_ID, C_BPartner_ID, proWindow, AD_Column_ID, pwindowNo) {\n    this.onClose = null;\n    var $self = this;\n    var $root = $("<div style=\'position:relative\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var windowNo = VIS.Env.getWindowNo();\n    var mAttributeSetInstanceId = null;\n    var mLocatorId = null;\n    var mAttributeSetInstanceName = null;\n    var mProductId = null;\n    var cBPartnerId = null;\n    var adColumnId = null;\n    var windowNoParent = null;\n    var M_Lot_ID = null;\n    var attrCode = "";\n\n    /**\tEnter Product Attributes\t\t*/\n    var productWindow = false;\n    /**\tChange\t\t\t\t\t\t\t*/\n    var changed = false;\n    var INSTANCE_VALUE_LENGTH = 40;\n    var attributesList = {};\n    var controlList = null;\n    var mAttributeSetID = null;\n    var winQry = "";\n    var window_ID = 0;\n    var windowName = "";\n    var IsSOTrx = false;\n    var IsInternalUse = false;\n    var canCreate = false;\n    var canEdit = false;\n    this.log = VIS.Logging.VLogger.getVLogger("PAttributesForm");\n    this.log.config("M_AttributeSetInstance_ID=" + M_AttributeSetInstance_ID + ", M_Product_ID=" + M_Product_ID + ", C_BPartner_ID=" + C_BPartner_ID + ", ProductW=" + productWindow + ", Column=" + AD_Column_ID);\n\n    //constructor load\n    mAttributeSetInstanceId = M_AttributeSetInstance_ID;\n    mProductId = M_Product_ID;\n    cBPartnerId = C_BPartner_ID;\n    productWindow = proWindow;\n    adColumnId = AD_Column_ID;\n    windowNoParent = pwindowNo;\n    mLocatorId = M_Locator_ID;\n    if (windowNoParent != -1) {\n      // Added by Bharat on 01 May 2017 to remove client side queries\n      var AD_tab_ID = VIS.context.getWindowTabContext(windowNoParent, 0, "AD_Tab_ID");\n      window_ID = VIS.dataContext.getJSONRecord("InfoProduct/GetWindowID", AD_tab_ID.toString());\n      windowName = VIS.context.getContext(windowNoParent, "WindowName");\n      IsSOTrx = VIS.context.isSOTrx(windowNoParent);\n      IsInternalUse = VIS.context.getWindowTabContext(windowNoParent, 0, "IsInternalUse");\n    }\n    //productid is must for this form dependency\n    //call InitAttributes in the load function\n    if (mProductId == 0) {\n      return;\n    }\n    this.hasAttribute = true;\n    init();\n    //initialize control varibales after load from root\n    var Okbtn = $root.find("#btnOk_" + windowNo);\n    var cancelbtn = $root.find("#btnCancel_" + windowNo);\n    var btnSelect = $root.find("#btnSelect_" + windowNo);\n    var btnLot = $root.find("#btnLot_" + windowNo);\n    var btnSerNo = $root.find("#btnSerNo_" + windowNo);\n    var cmbLot = $root.find("#cmbLot_" + windowNo);\n    var cmdNew = $root.find("#cmdNew_" + windowNo);\n    var chkNewEdit = $root.find("#chkNewEdit_" + windowNo);\n    //Edit Record\n    var lblEdit = $root.find("#lblEdit_" + windowNo);\n    var chkEdit = $root.find("#chkEdit_" + windowNo);\n    var txtDescription = $root.find("#txtDescription_" + windowNo);\n    var txtLotString = $root.find("#txtLotString_" + windowNo);\n    var txtSerNo = $root.find("#txtSerNo_" + windowNo);\n    var dtGuaranteeDate = $root.find("#dtpicGuaranteeDate_" + windowNo);\n    var txtAttrCode = $root.find("#txtAttrCode_" + windowNo);\n    btnSelect.children(0).attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/base/Locator10.png");\n    //check Arebic Calture\n    if (VIS.Application.isRTL) {\n      Okbtn.css("margin-right", "0px");\n      Okbtn.css("margin-left", "10px");\n      Okbtn.css("float", "left");\n      cancelbtn.css("margin-right", "0px");\n      cancelbtn.css("float", "left");\n    }\n\n    //var dt = new Date(this.dtGuaranteeDate.attr("value"));\n    //if (dt != null) {\n    //    this.dtGuaranteeDate.val(Globalize.format(dt, "yyyy-MM-dd"));\n    //}\n\n    //\tNew/Edit Window\n    // JID_1070: Enabled Create new checkbox on Attribute set Instance\n    if (!productWindow) {\n      if (canCreate) {\n        chkNewEdit.prop("checked", mAttributeSetInstanceId == 0);\n      } else {\n        cmdNew.hide();\n      }\n      if (mAttributeSetInstanceId > 0 || !canCreate) {\n        if (txtLotString) {\n          txtLotString.attr("readOnly", true);\n          txtLotString.addClass("vis-gc-vpanel-table-readOnly");\n        }\n        if (cmbLot) {\n          cmbLot.attr("disabled", true);\n          cmbLot.addClass("vis-gc-vpanel-table-readOnly");\n        }\n        if (btnLot) {\n          btnLot.attr("disabled", true);\n        }\n        if (txtSerNo) {\n          txtSerNo.attr("readOnly", true);\n          txtSerNo.addClass("vis-gc-vpanel-table-readOnly");\n        }\n        if (btnSerNo) {\n          btnSerNo.attr("disabled", true);\n        }\n        if (dtGuaranteeDate) {\n          dtGuaranteeDate.prop("disable", true);\n          dtGuaranteeDate.addClass("vis-gc-vpanel-table-readOnly");\n          dtGuaranteeDate.attr("disabled", true);\n        }\n        if (controlList) {\n          for (var i = 0; i < controlList.length; i++) {\n            var cntrl = $root.find("#" + controlList[i]);\n            cntrl.attr("readOnly", true);\n            cntrl.addClass("vis-gc-vpanel-table-readOnly");\n            cntrl.attr("disabled", true);\n          }\n        }\n        if (!canEdit) {\n          lblEdit.hide();\n          chkEdit.hide();\n        }\n\n        // If user do not have access to create or edit attribute,\n        // need to hide new lot button\n        if (!canCreate & !canEdit) {\n          btnLot.hide();\n        }\n      } else {\n        //lblEdit.css("display", "none");\n        //chkEdit.css("display", "none");\n        lblEdit.hide();\n        chkEdit.hide();\n      }\n    }\n    //Control that genrate run time get for first attribute\n    function init() {\n      $.ajax({\n        url: VIS.Application.contextUrl + "PAttributes/Load",\n        dataType: "json",\n        async: false,\n        data: {\n          mAttributeSetInstanceId: mAttributeSetInstanceId,\n          mProductId: mProductId,\n          productWindow: productWindow,\n          windowNo: windowNo,\n          AD_Column_ID: AD_Column_ID,\n          window_ID: window_ID,\n          IsSOTrx: IsSOTrx,\n          IsInternalUse: IsInternalUse\n        },\n        success: function (data) {\n          returnValue = data.result;\n          if (returnValue.Error != null) {\n            VIS.ADialog.error(returnValue.Error, null, null, null);\n            $self.hasAttribute = false;\n            return;\n          }\n          //load div\n          $root.html(returnValue.tableStucture);\n          $root.append($busyDiv);\n          if (returnValue.ControlList) {\n            controlList = returnValue.ControlList.split(\',\');\n          }\n          mAttributeSetID = returnValue.MAttributeSetID;\n\n          // Get User Create or Edit Access from Role\n          canCreate = returnValue.IsCanCreate;\n          canEdit = returnValue.IsCanEdit;\n        }\n      });\n    }\n    ;\n    function fillAttribute(attrValue) {\n      txtLotString.val("");\n      txtSerNo.val("");\n      dtGuaranteeDate.val(Globalize.format(new Date(), "yyyy-MM-dd"));\n      attrValue = jQuery.parseJSON(attrValue);\n      if (attrValue.result != null) {\n        for (var item in attrValue.result) {\n          if (controlList) {\n            //var cntrl = $root.find("#" + controlList[item]);\n            //if (controlList[item].toString().contains("cmb")) {\n            var cntrl = $root.find("[attribute_id=" + item + "]");\n            if (cntrl.attr("id").contains("cmb")) {\n              cntrl.val(VIS.Utility.Util.getValueOfInt(attrValue.result[item]));\n            } else {\n              cntrl.val(attrValue.result[item]);\n            }\n            continue;\n          }\n        }\n      }\n      if (txtLotString != null && attrValue.lot != "") {\n        txtLotString.val(attrValue.lot);\n      } else if (txtSerNo != null && attrValue.serial != "") {\n        txtSerNo.val(attrValue.serial);\n      }\n      if (dtGuaranteeDate != null && attrValue.gdate != "") {\n        dtGuaranteeDate.val(Globalize.format(new Date(attrValue.gdate), "yyyy-MM-dd"));\n      }\n    }\n    ;\n    function saveCheckedEdit() {\n      var flag = true;\n      var edited = false;\n      if (chkEdit.prop("checked")) {\n        if (txtDescription.val().length > 0) {\n          edited = true;\n          //alert("Value Found");\n        } else {\n          //alert("Value Not Found");\n          edited = false;\n        }\n      } else if (chkNewEdit.prop("checked")) {\n        var text = txtLotString.val();\n        flag = false;\n        var count = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "PAttributes/CheckUniqueLot", null, null);\n        if (count > 0) {\n          var check = checkAttrib(text);\n          if (check) {\n            flag = true;\n            VIS.ADialog.Info("LotNoExists", null, null, null);\n            return false;\n          }\n        }\n        if (!flag) {\n          saveSelection();\n        }\n      } else {\n        flag = false;\n        VIS.Env.getCtx().setContext(windowNoParent, "AttrCode", attrCode);\n        if ($self.onClose) $self.onClose(mAttributeSetInstanceId, mAttributeSetInstanceName, mLocatorId);\n        setBusy(false);\n        $root.dialog(\'close\');\n      }\n      if (flag) {\n        saveSelection();\n      }\n    }\n    function saveSelection() {\n      //get all controls values into it\n      var result = true;\n      var lst = [];\n      if (controlList) {\n        for (var i = 0; i < controlList.length; i++) {\n          var cntrl = $root.find("#" + controlList[i]);\n          if (controlList[i].toString().contains("cmb")) {\n            if (cntrl.find(\'option:selected\').length > 0) {\n              lst.push({\n                \'Key\': Number(cntrl.find(\'option:selected\').val()),\n                \'Name\': cntrl.find(\'option:selected\').text()\n              });\n            } else {\n              lst.push({\n                \'Key\': 0,\n                \'Name\': cntrl.val()\n              });\n            }\n          } else {\n            if (cntrl.attr("class").contains("vis-gc-vpanel-table-mandatory") && cntrl.val().trim().length == 0) {\n              VIS.ADialog.warn("FillMandatoryFields", true, null);\n              // stop loader\n              setBusy(false);\n              result = false;\n              return result;\n            }\n            if (cntrl.attr("type") == "number") {\n              if (!cntrl.val().contains(".")) {\n                cntrl.val(cntrl.val().concat(".0"));\n              }\n            }\n            lst.push({\n              \'Key\': 0,\n              \'Name\': cntrl.val()\n            });\n          }\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "PAttributes/Save",\n        type: "POST",\n        dataType: "json",\n        contentType: "application/json; charset=utf-8",\n        //async: false,\n        data: JSON.stringify({\n          windowNoParent: windowNoParent,\n          strLotString: txtLotString.val(),\n          strSerNo: txtSerNo.val(),\n          dtGuaranteeDate: new Date(dtGuaranteeDate.val()),\n          strAttrCode: txtAttrCode.val(),\n          productWindow: productWindow,\n          mAttributeSetInstanceId: mAttributeSetInstanceId,\n          mProductId: M_Product_ID,\n          windowNo: windowNo,\n          description: txtDescription.val(),\n          isEdited: chkEdit.prop("checked"),\n          lst: lst\n        }),\n        success: function (data) {\n          returnValue = data.result;\n          debugger;\n          if (returnValue) if (returnValue.Error != null) {\n            VIS.ADialog.info("", null, returnValue.Error, null);\n            setBusy(false);\n          } else {\n            VIS.Env.getCtx().setContext(windowNoParent, "AttrCode", returnValue.attrCode);\n            if ($self.onClose) $self.onClose(returnValue.M_AttributeSetInstance_ID, returnValue.M_AttributeSetInstanceName, mLocatorId);\n            setBusy(false);\n            $root.dialog(\'close\');\n          }\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n          debugger;\n          console.log(textStatus);\n          setBusy(false);\n        }\n      });\n    }\n    function cmdSelect() {\n      debugger;\n      $self.log.config("");\n      var M_Warehouse_ID = 0;\n      if (windowNoParent != -1) {\n        if (window.DTD001 && window_ID == 170) {\n          M_Warehouse_ID = VIS.Env.getCtx().getContextAsInt(windowNoParent, "DTD001_MWarehouseSource_ID");\n        } else if (window_ID == 143 || windowName == "Blanket Sales Order" || window_ID == 169 || window_ID == 168 || window_ID == 341) {\n          M_Warehouse_ID = VIS.Env.getCtx().getContextAsInt(windowNoParent, "M_Warehouse_ID");\n        }\n      }\n      var title = "";\n      try {\n        title = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "PAttributes/GetTitle", {\n          "Warehouse_ID": M_Warehouse_ID,\n          "Product_ID": mProductId\n        }, null);\n      } catch (e) {\n        console.log(e);\n      }\n      var AttributeSetInstance_ID = -1;\n      //open new form\n      // Added by Manjot To implement Search Functionality on Grid 10 May 2018 google Sheet ID SI_0607\n      var obj = new VIS.PAttributeInstance(title, M_Warehouse_ID, mLocatorId, mProductId, cBPartnerId, txtSerNo.val(), txtLotString.val(), dtGuaranteeDate.val(), IsSOTrx);\n      obj.showDialog();\n\n      //JID_1140: On OK of select existing record  pop up system should not close the control Of ASI should only close the Select existing record control.\n      obj.onClose = function (attributeSetInstanceID, name, M_Locator_ID, AttrCode) {\n        if (attributeSetInstanceID != -1) {\n          mAttributeSetInstanceId = attributeSetInstanceID;\n          mAttributeSetInstanceName = name;\n          mLocatorId = M_Locator_ID;\n          attrCode = AttrCode;\n          changed = true;\n          setBusy(true);\n          getAttributeData();\n          if (chkNewEdit.prop("checked")) {\n            chkNewEdit.prop("checked", false);\n            cmdNewEdit();\n          }\n          if (chkEdit.prop("checked")) {\n            chkEdit.prop("checked", false);\n            cmdChkEdit();\n          }\n\n          // Show Edit Check box after selecting existing Attribute Set Instance.\n          if (canEdit) {\n            lblEdit.show();\n            chkEdit.show();\n          }\n          //if ($self.onClose) {\n          //    $self.onClose(mAttributeSetInstanceId, mAttributeSetInstanceName, mLocatorId);\n          //    $root.dialog(\'close\');\n          //}\n        }\n      };\n      obj = null;\n    }\n    function cmdNewEdit() {\n      var rw = chkNewEdit.prop("checked");\n      chkEdit.attr("disabled", rw);\n      if (txtLotString) {\n        txtLotString.attr("readOnly", !rw);\n        if (rw) {\n          txtLotString.removeClass("vis-gc-vpanel-table-readOnly");\n        } else {\n          txtLotString.addClass("vis-gc-vpanel-table-readOnly");\n        }\n      }\n      if (cmbLot) {\n        if (rw) {\n          cmbLot.removeClass("vis-gc-vpanel-table-readOnly");\n          cmbLot.removeAttr("disabled");\n        } else {\n          cmbLot.attr("disabled", true);\n          cmbLot.addClass("vis-gc-vpanel-table-readOnly");\n        }\n      }\n      if (btnLot) {\n        if (rw) {\n          btnLot.removeAttr("disabled");\n        } else {\n          btnLot.attr("disabled", true);\n        }\n      }\n      if (txtSerNo) {\n        txtSerNo.attr("readOnly", !rw);\n        if (rw) {\n          txtSerNo.removeClass("vis-gc-vpanel-table-readOnly");\n        } else {\n          txtSerNo.addClass("vis-gc-vpanel-table-readOnly");\n        }\n      }\n      if (btnSerNo) {\n        if (rw) {\n          btnSerNo.removeAttr("disabled");\n        } else {\n          btnSerNo.attr("disabled", true);\n        }\n      }\n      if (dtGuaranteeDate) {\n        dtGuaranteeDate.prop("disable", rw);\n        if (rw) {\n          dtGuaranteeDate.removeClass("vis-gc-vpanel-table-readOnly");\n          dtGuaranteeDate.removeAttr("disabled");\n        } else {\n          dtGuaranteeDate.addClass("vis-gc-vpanel-table-readOnly");\n          dtGuaranteeDate.attr("disabled", true);\n        }\n      }\n      if (controlList) {\n        for (var i = 0; i < controlList.length; i++) {\n          var cntrl = $root.find("#" + controlList[i]);\n          cntrl.attr("readOnly", !rw);\n          if (rw) {\n            cntrl.removeClass("vis-gc-vpanel-table-readOnly");\n            cntrl.removeAttr("disabled");\n          } else {\n            cntrl.addClass("vis-gc-vpanel-table-readOnly");\n            cntrl.attr("disabled", true);\n          }\n        }\n      }\n    }\n\n    // Event handling for Edit checkbox\n    function cmdChkEdit() {\n      var rw = chkEdit.prop("checked");\n      chkNewEdit.attr("disabled", rw);\n      if (txtLotString) {\n        txtLotString.attr("readOnly", !rw);\n        if (rw) {\n          txtLotString.removeClass("vis-gc-vpanel-table-readOnly");\n        } else {\n          txtLotString.addClass("vis-gc-vpanel-table-readOnly");\n        }\n      }\n      if (cmbLot) {\n        if (rw) {\n          cmbLot.removeClass("vis-gc-vpanel-table-readOnly");\n          cmbLot.removeAttr("disabled");\n        } else {\n          cmbLot.attr("disabled", true);\n          cmbLot.addClass("vis-gc-vpanel-table-readOnly");\n        }\n      }\n      if (btnLot) {\n        if (rw) {\n          btnLot.removeAttr("disabled");\n        } else {\n          btnLot.attr("disabled", true);\n        }\n      }\n      if (txtSerNo) {\n        txtSerNo.attr("readOnly", !rw);\n        if (rw) {\n          txtSerNo.removeClass("vis-gc-vpanel-table-readOnly");\n        } else {\n          txtSerNo.addClass("vis-gc-vpanel-table-readOnly");\n        }\n      }\n      if (btnSerNo) {\n        if (rw) {\n          btnSerNo.removeAttr("disabled");\n        } else {\n          btnSerNo.attr("disabled", true);\n        }\n      }\n      if (dtGuaranteeDate) {\n        dtGuaranteeDate.prop("disable", rw);\n        if (rw) {\n          dtGuaranteeDate.removeClass("vis-gc-vpanel-table-readOnly");\n          dtGuaranteeDate.removeAttr("disabled");\n        } else {\n          dtGuaranteeDate.addClass("vis-gc-vpanel-table-readOnly");\n          dtGuaranteeDate.attr("disabled", true);\n        }\n      }\n      if (controlList) {\n        for (var i = 0; i < controlList.length; i++) {\n          var cntrl = $root.find("#" + controlList[i]);\n          cntrl.attr("readOnly", !rw);\n          if (rw) {\n            cntrl.removeClass("vis-gc-vpanel-table-readOnly");\n            cntrl.removeAttr("disabled");\n          } else {\n            cntrl.addClass("vis-gc-vpanel-table-readOnly");\n            cntrl.attr("disabled", true);\n          }\n        }\n      }\n    }\n    function checkAttrib(lotString) {\n      //var sql = "";\n      var check = false;\n      //var dr = null;\n      try {\n        var checkProd = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "PAttributes/CheckAttribute", {\n          "Window_No": windowNoParent,\n          "Product_ID": mProductId,\n          "LotNumber": lotString\n        }, null);\n        if (checkProd > 0) {\n          check = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n      return check;\n    }\n    function lotChange(returnValue) {\n      cmbLot.append(new Option(returnValue.Name, returnValue.Key, true, true));\n      cmbLot.change();\n    }\n    function getAttributeData() {\n      if (controlList) {\n        for (var i = 0; i < controlList.length; i++) {\n          if (controlList[i].toString().contains("cmb")) {\n            $root.find("#" + controlList[i]).prop(\'selectedIndex\', -1);\n          } else {\n            $root.find("#" + controlList[i]).val("");\n          }\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "PAttributes/GetAttribute",\n        dataType: "json",\n        //async: false,\n        data: {\n          mAttributeSetInstanceId: mAttributeSetInstanceId,\n          mProductId: mProductId,\n          productWindow: productWindow,\n          windowNo: windowNo,\n          AD_Column_ID: AD_Column_ID,\n          attrcode: attrCode\n        },\n        success: function (data) {\n          returnValue = data;\n          if (returnValue != null) {\n            fillAttribute(returnValue);\n          }\n          setBusy(false);\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n          debugger;\n          console.log(textStatus);\n          setBusy(false);\n        }\n      });\n    }\n    ;\n    function events() {\n      if (cmbLot != null) {\n        cmbLot.change(function () {\n          var pp = cmbLot.find(\'option:selected\').val();\n          var name = cmbLot.find(\'option:selected\').text();\n          if (pp != null && pp != -1) {\n            txtLotString.val(name);\n            txtLotString.attr("readOnly", true);\n            txtLotString.addClass("vis-gc-vpanel-table-readOnly");\n            M_Lot_ID = pp;\n          } else {\n            txtLotString.attr("readOnly", false);\n            txtLotString.removeClass("vis-gc-vpanel-table-readOnly");\n          }\n        });\n      }\n      if (chkNewEdit != null) {\n        chkNewEdit.change(function () {\n          cmdNewEdit();\n        });\n      }\n      if (chkEdit != null) {\n        chkEdit.change(function () {\n          cmdChkEdit();\n        });\n      }\n      if (txtAttrCode != null) {\n        txtAttrCode.on("keydown", function (event) {\n          if (event.keyCode == 13 || event.keyCode == 9) {\n            //will work on press of Tab key OR Enter Key\n            setBusy(true);\n            attrCode = txtAttrCode.val();\n            getAttributeData();\n          }\n        });\n      }\n      if (Okbtn != null) {\n        Okbtn.on("click", function () {\n          setBusy(true);\n          saveCheckedEdit();\n        });\n      }\n      if (cancelbtn != null) {\n        cancelbtn.on("click", function () {\n          $root.dialog(\'close\');\n        });\n      }\n      if (btnSelect != null) {\n        setBusy(true);\n        btnSelect.on("click", function () {\n          cmdSelect();\n        });\n        setBusy(false);\n      }\n      if (btnLot != null) {\n        btnLot.on("click", function () {\n          $.ajax({\n            url: VIS.Application.contextUrl + "PAttributes/CreateLot",\n            dataType: "json",\n            async: false,\n            data: {\n              mAttributeSetInstanceId: mAttributeSetInstanceId,\n              mProductId: mProductId\n            },\n            success: function (data) {\n              returnValue = data.result;\n              lotChange(returnValue);\n            }\n          });\n        });\n      }\n      if (btnSerNo != null) {\n        btnSerNo.on("click", function () {\n          $.ajax({\n            url: VIS.Application.contextUrl + "PAttributes/GetSerNo",\n            dataType: "json",\n            async: false,\n            data: {\n              mAttributeSetInstanceId: mAttributeSetInstanceId,\n              mProductId: mProductId\n            },\n            success: function (data) {\n              returnValue = data.result;\n              txtSerNo.val(returnValue);\n            }\n          });\n        });\n      }\n      if (controlList) {\n        // add evnts at run time\n      }\n    }\n    events();\n    function setBusy(isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    }\n    ;\n    this.showDialog = function () {\n      $root.dialog({\n        modal: true,\n        title: VIS.Msg.translate(VIS.Env.getCtx(), "M_AttributeSetInstance_ID"),\n        width: 490,\n        close: function () {\n          $self.dispose();\n          $self = null;\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n      if (controlList && M_AttributeSetInstance_ID == 0) {\n        for (var i = 0; i < controlList.length; i++) {\n          if (controlList[i].toString().contains("cmb")) {\n            $root.find("#" + controlList[i]).prop(\'selectedIndex\', -1);\n          }\n        }\n      }\n      setBusy(false);\n    };\n    this.disposeComponent = function () {\n      if (Okbtn) Okbtn.off("click");\n      if (cancelbtn) cancelbtn.off("click");\n      VIS.Env.clearWinContext(VIS.Env.getCtx(), windowNo);\n      VIS.Env.getCtx().setContext(VIS.Env.WINDOW_INFO, VIS.Env.TAB_INFO, "M_AttributeSetInstance_ID", mAttributeSetInstanceId);\n      VIS.Env.getCtx().setContext(VIS.Env.WINDOW_INFO, VIS.Env.TAB_INFO, "M_Locator_ID", mLocatorId);\n      mLocatorId = null;\n      mAttributeSetInstanceName = null;\n      mProductId = null;\n      cBPartnerId = null;\n      adColumnId = null;\n      windowNoParent = null;\n      productWindow = null;\n      /**\tChange\t\t\t\t\t\t\t*/\n      changed = null;\n      INSTANCE_VALUE_LENGTH = 0;\n      attributesList = null;\n      Okbtn = null;\n      cancelbtn = null;\n      btnSelect = null;\n      btnLot = null;\n      btnSerNo = null;\n      cmbLot = null;\n      chkNewEdit = null;\n      txtDescription = null;\n      txtLotString = null;\n      txtSerNo = null;\n      dtGuaranteeDate = null;\n      $self = null;\n      windowNo = null;\n      mAttributeSetInstanceId = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n\n  //dispose call\n  PAttributesForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n  };\n  VIS.PAttributesForm = PAttributesForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/pattributesform.js?')},"./Areas/VIS/Scripts/app/Framework/recordShared.js":()=>{eval("/********************************************************\r\n * Module Name    : Vienna Advantage Framework\r\n * Purpose        : This class is used for record share with other organization\r\n * Class Used     :\r\n * Created By     : VIS0228\r\n * Date           :  09-Nov-2022\r\n**********************************************************/\n;\n(function (VIS, $) {\n  /**\r\n   * Record Shared\r\n   * @param {any} record_id\r\n   * @param {any} table_id\r\n   * @param {any} windowNo\r\n  *  @param {any} parentID\r\n   */\n  function RecordShared(record_id, table_id, tab_id, window_id, windowNo, parentID, parentTableID, curTab) {\n    this.onClose = null;\n    var ch = null;\n    var self = this;\n    var orginalArr = [];\n    var sharedIDs = [];\n    var mField = [];\n    if (curTab && curTab.getFields()) {\n      mField = curTab.getFields();\n    }\n    if (parentID == '999999') {\n      parentID = 0;\n    }\n    var res = [];\n    var headingText = \"\";\n    if (mField.length > 0) {\n      var isIdentifier = $.grep(mField, function (a) {\n        return a.getIsIdentifier() == true;\n      });\n      if (isIdentifier.length > 0) {\n        for (var a = 0; a < isIdentifier.length; a++) {\n          headingText += curTab.getValue(isIdentifier[a].getColumnName());\n          if (a + 1 != isIdentifier.length) {\n            headingText += \"_\";\n          }\n        }\n      } else if (curTab.getValue('Value') && curTab.getValue('Value').length > 0) {\n        headingText = curTab.getValue('Value');\n      } else if (curTab.getValue('Name') && curTab.getValue('Name').length > 0) {\n        headingText = curTab.getValue('Name');\n      } else {\n        headingText = record_id;\n      }\n    } else {\n      headingText = record_id;\n    }\n    var canEdit = true;\n\n    /**Main Root */\n    var root = $('<div class=\"vis-actionWindowWrapper\">' + '<div class=\"vis-apanel-busy vis-recordSharedbusy\" style=\"display:none\"></div>' + '<div class=\"vis-actionFeilds\" >' + '<div class=\"vis-actionFeild\">' + '<div class=\"input-group vis-input-wrap vis-cusmg\">' + '<div class=\"vis-control-wrap\">' + '<input type=\"text\"  id=\"txtSummaryOrg_' + windowNo + '\" maxlength=\"40\" class=\"\"  placeholder=\"' + VIS.Msg.getMsg('SummaryOrg') + '\" data-placeholder=\"' + VIS.Msg.getMsg('SummaryOrg') + '\">' + '<label>' + VIS.Msg.getMsg('SummaryOrg') + '</label>' + '</div>' + '<div class=\"input-group-append\"><button id=\"btnShowSummaryOrg_' + windowNo + '\" tabindex=\"-1\" class=\"input-group-text\"><i tabindex=\"-1\" class=\"fa fa-search\"></i></button></div>' + '</div>' + '</div>' + '<div class=\"vis-actionFeild\">' + '<div class=\"input-group vis-input-wrap vis-cusmg\">' + '<div class=\"vis-control-wrap\">' + '<select id=\"ddlLegalEntities_' + windowNo + '\" class=\"\" placeholder=\" \" data-placeholder=\"\" data-hasbtn=\" \">' + '<option value=\"A\">' + VIS.Msg.getMsg('All') + '</option>' + '<option value=\"Y\">' + VIS.Msg.getMsg('Yes') + '</option>' + '<option value=\"N\">' + VIS.Msg.getMsg('No') + '</option>' + '</select>' + '<label> ' + VIS.Msg.getMsg('LegalEntities') + '</label>' + '</div>' + '</div>' + '</div>' + '<div class=\"vis-actionFeild\">' + '<div class=\"input-group vis-input-wrap vis-cusmg\">' + '<div class=\"vis-control-wrap\">' + '<input type=\"text\" id=\"txtSearchKey_' + windowNo + '\" maxlength=\"40\" class=\"\" placeholder=\"' + VIS.Msg.getMsg('SearchKeyValue') + '/' + VIS.Msg.getMsg('Name') + '\" data-placeholder=\"' + VIS.Msg.getMsg('SearchKeyValue') + '\">' + '<label>' + VIS.Msg.getMsg('SearchKeyValue') + '/' + VIS.Msg.getMsg('Name') + '</label>' + '</div>' + '</div>' + '</div>' + '</div>' + '<div class=\"vis-tableSection\">' + '<div class=\"vis-actionWishlistTable\">' + '<div class=\"vis-tableHeaderWishlist p-1 pl-2\">' + '<span class=\"vis-tableHeadingTtl\">' + VIS.Msg.getMsg('Org') + '</span>' + '</div>' + '<div class=\"vis-gridtable\">' + '<table class=\"vis-gridSingletable\">' + '<thead class=\"vis-gridTableHeader\">' + '<tr>' + '<th width=\"40px\">' + '<input type=\"checkbox\" name=\"\" id=\"chkAll_' + windowNo + '\" class=\"inputCheckbox \">' + '</th>' + '<th>' + VIS.Msg.getMsg('SearchKeyValue') + '</th>' + '<th>' + VIS.Msg.getMsg('Org') + '</th>' + '<th width=\"120px\" class=\"text-center\">' + VIS.Msg.getMsg('LegalEntities') + '</th>' + '<th width=\"120px\" class=\"text-center\">' + VIS.Msg.getMsg('ReadOnly') + '</th>' + '<th width=\"120px\" class=\"text-center\" style=\"display:none\">' + VIS.Msg.getMsg('ChildShare') + '</th>' + '</tr>' + '</thead>' + '<tbody class=\"vis-gridTableBody tbList\">' + '</tbody>' + '</table>' + '<div class=\"vis-wishlistActionBtn d-flex align-items-center justify-content-between mt-2\">' + '<div>' + '<span id=\"lblMsg_' + windowNo + '\"></span>' + '</div>' + '<div>' + '<button class=\"vis-actionBtn mr-1\" id=\"btnCancel_' + windowNo + '\">' + VIS.Msg.getMsg('Cancel') + '</button>' + '<button class=\"vis-actionBtn mr-2\"  style=\"cursor:default;\" id=\"btnOk_' + windowNo + '\">' + VIS.Msg.getMsg('OK') + '</button>' + '</div>' + '</div>' + '</div>' + '</div>' + '</div>' + '</div>');\n    var txtSummaryOrg = root.find(\"#txtSummaryOrg_\" + windowNo);\n    var btnShowSummaryOrg = root.find(\"#btnShowSummaryOrg_\" + windowNo);\n    var ddlLegalEntities = root.find(\"#ddlLegalEntities_\" + windowNo);\n    var txtSearchKey = root.find(\"#txtSearchKey_\" + windowNo);\n    var btnOk = root.find(\"#btnOk_\" + windowNo);\n    var btnCancel = root.find(\"#btnCancel_\" + windowNo);\n    var msg = root.find(\"#lblMsg_\" + windowNo);\n    var chkAll = root.find(\"#chkAll_\" + windowNo);\n    var isBusyRoot = root.find(\".vis-recordSharedbusy\");\n    $.ajax({\n      type: 'post',\n      url: VIS.Application.contextUrl + \"RecordShared/GetOrgStructure\",\n      data: {},\n      success: function (data) {\n        res = JSON.parse(data);\n        IsBusy(false);\n      },\n      error: function (data) {\n        IsBusy(false);\n      }\n    });\n\n    /**Get All organization */\n    function getOrganization() {\n      IsBusy(true);\n      parentTableID = 0;\n      parentRecord_ID = 0;\n      parentOrg = 0;\n      if (curTab && curTab.getTabLevel() > 0) {\n        parentTableID = curTab.getParentTab().getAD_Table_ID();\n        parentRecord_ID = curTab.getParentTab().getRecord_ID();\n        parentOrg = curTab.getParentTab().getValue('AD_Org_ID');\n      }\n      var obj = {\n        AD_Table_ID: table_id,\n        Record_ID: record_id,\n        parentTableID: parentTableID,\n        parentRecord_ID: parentRecord_ID,\n        parentOrg: parentOrg\n      };\n      var arr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"RecordShared/GetSharedRecord\", obj, null);\n      orginalArr = arr;\n      prepareList(orginalArr);\n      IsBusy(false);\n    }\n\n    /**Filter Data */\n    function filterData() {\n      chkAll.removeAttr(\"checked\");\n      if (txtSummaryOrg.val() == '') {\n        var fData = $.grep(orginalArr, function (element, index) {\n          if (ddlLegalEntities.find('option:selected').val() == 'A') {\n            return element.value.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1 || element.name.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1;\n          } else if (ddlLegalEntities.find('option:selected').val() != 'A' && txtSearchKey.val() != '') {\n            return (element.value.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1 || element.name.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1) && element.isLegalEntity == ddlLegalEntities.find('option:selected').val();\n          } else {\n            return element.isLegalEntity == ddlLegalEntities.find('option:selected').val();\n          }\n        });\n        root.find('.tbList tr').hide();\n        for (var e = 0; e < fData.length; e++) {\n          root.find('.tbList .chkOrgID[value=\"' + fData[e].ID + '\"]').closest('tr').show();\n        }\n        ;\n      } else {\n        var fData = [];\n        for (var i = 0; i < orginalArr.length; i++) {\n          for (var j = 0; j < res.length; j++) {\n            if (orginalArr[i].ID === res[j].ID && (res[j].ParentID == txtSummaryOrg.attr('data-id') || res[j].ParentName.toLowerCase().indexOf(txtSummaryOrg.val().toLowerCase()) != -1)) {\n              fData.push(orginalArr[i]);\n            }\n          }\n        }\n        var filterData = $.grep(fData, function (element, index) {\n          if (ddlLegalEntities.find('option:selected').val() == 'A') {\n            return element.value.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1 || element.name.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1;\n          } else if (ddlLegalEntities.find('option:selected').val() != 'A' && txtSearchKey.val() != '') {\n            return (element.value.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1 || element.name.toLowerCase().indexOf(txtSearchKey.val().toLowerCase()) != -1) && element.isLegalEntity == ddlLegalEntities.find('option:selected').val();\n          } else {\n            return element.isLegalEntity == ddlLegalEntities.find('option:selected').val();\n          }\n        });\n        root.find('.tbList tr').hide();\n        for (var e = 0; e < filterData.length; e++) {\n          root.find('.tbList .chkOrgID[value=\"' + filterData[e].ID + '\"]').closest('tr').show();\n        }\n        ;\n      }\n      ;\n      if (txtSearchKey.val() != '' || txtSummaryOrg.val() != '' || ddlLegalEntities.find('option:selected').val() != 'A') {\n        //chkAll.attr(\"disabled\", \"disabled\");\n        var l = root.find('.tbList tr:visible .chkOrgID').length;\n        var chkln = root.find('.tbList tr:visible .chkOrgID:checked').length;\n        if (l > 0 && l == chkln) {\n          chkAll.attr(\"checked\", \"checked\").prop(\"checked\", \"checked\");\n        } else {\n          chkAll.removeAttr(\"checked\");\n        }\n      } else {\n        // chkAll.removeAttr(\"disabled\");\n        var l = root.find('.tbList tr:visible .chkOrgID').length;\n        var chkln = root.find('.tbList tr .chkOrgID:checked').length;\n        if (l > 0 && l == chkln) {\n          chkAll.attr(\"checked\", \"checked\").prop(\"checked\", \"checked\");\n          ;\n        } else {\n          chkAll.removeAttr(\"checked\");\n        }\n      }\n    }\n\n    /**\r\n     * Prepare UI according to data\r\n     * At Top . SHOW ORGNIZATION with which record is shared\r\n     * @param {any} list\r\n     */\n    function prepareList(list) {\n      root.find('.tbList').html('');\n      if (!list) {\n        return;\n      }\n      var row = '';\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].isSummary == true) {\n          continue;\n        }\n        if (list[i].AD_OrgShared_ID) {\n          row += '<tr class=\"vis-rowSuccess\">';\n        } else {\n          row += '<tr>';\n        }\n        row += '</td>' + '<td width=\"40px\">';\n        if (list[i].AD_OrgShared_ID) {\n          row += '<input type=\"checkbox\" checked class=\"chkOrgID\" parentid=\"' + list[i].parentID + '\" data-shareid=\"' + list[i].AD_OrgShared_ID + '\" value=\"' + list[i].ID + '\">';\n          sharedIDs.push(list[i].AD_OrgShared_ID);\n          if (list[i].CanEdit) {\n            toogleOkBtn(true);\n          }\n          canEdit = list[i].CanEdit;\n        } else {\n          row += '<input type=\"checkbox\" class=\"chkOrgID\" parentid=\"' + list[i].parentID + '\" value=\"' + list[i].ID + '\">';\n        }\n        row += '</td>' + '<td title=\"' + list[i].value + '\">' + list[i].value + '</td>' + '<td title=\"' + list[i].name + '\">' + list[i].name + '</td>' + '<td width=\"120px\" class=\"text-center\">' + list[i].isLegalEntity + '</td>' + '<td width=\"120px\" class=\"text-center\">';\n        if (list[i].isReadonly) {\n          row += '<input type=\"checkbox\" name=\"\" id=\"\" class=\"chkIsReadOnly\" checked/>';\n        } else {\n          row += '<input type=\"checkbox\" name=\"\" id=\"\" class=\"chkIsReadOnly\" />';\n        }\n        row += '</td>';\n        if (list[i].ChildShare) {\n          row += '<td width=\"120px\" class=\"text-center\" style=\"display:none\"><input type=\"checkbox\" name=\"\" id=\"\" checked class=\"chkIsChildShare\" /> </td>';\n        } else {\n          row += '<td width=\"120px\" class=\"text-center\" style=\"display:none\"><input type=\"checkbox\" name=\"\" id=\"\" checked class=\"chkIsChildShare\" /> </td>';\n        }\n        +'</tr>';\n      }\n      root.find('.tbList').append(row);\n      root.find('.tbList .chkOrgID').on(\"click\", function (e) {\n        //if (!canEdit) {\n        //    e.preventDefault();\n        //    return;\n        //}\n\n        var checkedOrgs = root.find('.tbList .chkOrgID:checked');\n        if (checkedOrgs && checkedOrgs.length > 0) {\n          toogleOkBtn(true);\n        } else {\n          if (sharedIDs && sharedIDs.length == 0) toogleOkBtn(true);\n        }\n        var l = root.find('.tbList tr .chkOrgID').length;\n        var chkln = root.find('.tbList tr .chkOrgID:checked').length;\n        if (l == chkln) {\n          chkAll.attr(\"checked\", \"checked\").prop(\"checked\", \"checked\");\n        } else {\n          chkAll.removeAttr(\"checked\");\n        }\n      });\n    }\n    ;\n\n    /**\r\n     * Busy Indigater\r\n     * @param {any} isBusy\r\n     */\n    function IsBusy(isBusy) {\n      if (isBusy && isBusyRoot != null) {\n        isBusyRoot.css({\n          \"display\": \"block\"\n        });\n      }\n      if (!isBusy && isBusyRoot != null) {\n        isBusyRoot.css({\n          \"display\": \"none\"\n        });\n      }\n    }\n    ;\n    function toogleOkBtn(enable) {\n      if (enable) {\n        btnOk.css(\"opacity\", \"1\").prop(\"disabled\", \"\");\n      } else {\n        btnOk.css(\"opacity\", \"0.5\").prop(\"disabled\", \"true\");\n      }\n    }\n    ;\n    function events() {\n      btnShowSummaryOrg.click(function () {\n        self.showOrgStructure();\n      });\n      txtSummaryOrg.keyup(function () {\n        txtSummaryOrg.removeAttr('data-id');\n        filterData();\n      });\n      txtSearchKey.keyup(function () {\n        filterData();\n      });\n      ddlLegalEntities.change(function () {\n        filterData();\n      });\n      chkAll.change(function (e) {\n        //if (!canEdit) {\n        //    e.preventDefault();\n        //    return;\n        //}\n        var isFalse = false;\n        if (this.checked) {\n          isFalse = true;\n          toogleOkBtn(true);\n        } else {\n          toogleOkBtn(true);\n        }\n        root.find('.tbList .chkOrgID').each(function () {\n          if ($(this).is(':visible')) {\n            this.checked = isFalse;\n          }\n        });\n      });\n      btnOk.click(function () {\n        //if (!canEdit) {\n        //    e.preventDefault();\n        //    return;\n        //}\n        msg.text(\"\");\n        IsBusy(true);\n        var saveObj = {\n          AD_Table_ID: table_id,\n          record_ID: record_id,\n          Tab_ID: tab_id,\n          Window_ID: window_id,\n          WindowNo: windowNo,\n          list: [],\n          Parent_ID: parentID,\n          ParentTable_ID: parentTableID\n        };\n        root.find('.tbList .chkOrgID:checked').each(function () {\n          saveObj.list.push({\n            AD_OrgShared_ID: Number(this.value),\n            isReadonly: $(this).closest('tr').find('.chkIsReadOnly').is(':checked'),\n            shareID: $(this).data('shareid'),\n            ChildShare: $(this).closest('tr').find('.chkIsChildShare').is(':checked'),\n            parentID: $(this).attr('parentid')\n          });\n        });\n        $.ajax({\n          type: 'post',\n          url: VIS.Application.contextUrl + \"RecordShared/SaveRecord\",\n          data: saveObj,\n          success: function (data) {\n            if (JSON.parse(data) == \"OK\") {\n              msg.text(VIS.Msg.getMsg('Saved'));\n              getOrganization();\n              root.find('.tbList').scrollTop(0);\n              txtSearchKey.val('');\n              txtSummaryOrg.val('');\n              ddlLegalEntities.val('A');\n              ch.close();\n            } else {\n              msg.text(VIS.Msg.getMsg('RecordsNotSaved'));\n            }\n            IsBusy(false);\n          },\n          error: function (data) {\n            msg.text(VIS.Msg.getMsg('RecordsNotSaved'));\n            IsBusy(false);\n          }\n        });\n      });\n      btnCancel.click(function () {\n        ch.close();\n      });\n    }\n    events();\n    getOrganization();\n    this.dispose = function () {\n      root.remove();\n      root = null;\n      ch = null;\n      self = null;\n      txtSummaryOrg = null;\n      ddlLegalEntities = null;\n      txtSearchKey = null;\n      btnOk = null;\n      btnCancel = null;\n      msg = null;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setContent(root);\n      ch.setWidth(\"75%\");\n      ch.setTitle(VIS.Msg.getMsg(\"RecordShared\") + \" (\" + headingText + \")\");\n      ch.setModal(true);\n      //Ok Button Click\n      //  ch.onOkClick =\n\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        if (self.onClose) {\n          self.onClose();\n          self.dispose();\n        }\n      };\n      ch.show();\n      ch.hidebuttons();\n    };\n    this.showOrgStructure = function () {\n      txtSummaryOrg.val('');\n      txtSummaryOrg.removeAttr('data-id');\n      var cdos = new VIS.ChildDialog();\n      var html = $('<div id=\"left\" >' + '    <ul id=\"menu-group-1\" class=\"nav menu\">' + '        <li class=\"item-1 deeper parent\">' + '            <a class=\"\" href=\"#\">' + '                <span data-toggle=\"collapse\" data-parent=\"#menu-group-1\" href=\"#sub-item-1\" class=\"sign\"><i class=\"fa fa-folder-o\" onclick=\"$(this).toggleClass(\\'fa-folder-o fa-folder-open-o\\')\"></i></span>' + '                <span class=\"vis-orglbl\">' + VIS.Msg.getMsg(\"SummaryOrg\") + '</span>' + '            </a>' + '        </li>' + '    </ul>' + '</div>');\n      function buildHierarchy(data, parentID) {\n        var tree = [];\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].ParentID === parentID && data[i].Issummary == 'Y') {\n            var node = {\n              \"ID\": data[i].ID,\n              \"Name\": data[i].Name,\n              \"Children\": buildHierarchy(data, data[i].ID)\n            };\n            tree.push(node);\n          }\n        }\n        return tree;\n      }\n      var countr = 1;\n      function generateNestedList(data, parentElement) {\n        var ul = $(\"<ul class='small collapse' style='list-style-type: none;' id='sub-item-\" + countr + \"'></ul>\");\n        countr++;\n        for (var i = 0; i < data.length; i++) {\n          var item = data[i];\n          var li = $(\"<li class='deeper parent'></li>\");\n          var plus = '<span data-toggle=\"collapse\" data-parent=\"#menu-group-1\" style=\"margin-left:-14px\" href=\"#sub-item-' + countr + '\" class=\"mr-1 sign\"><i class=\"fa fa-plus\" onclick=\"$(this).toggleClass(\\'fa-plus fa-minus\\')\"></i></span>';\n          var spanName = $(\"<span  class='vis-orglbl' data-id=\" + item.ID + \"></span>\").text(item.Name);\n          var anchr = $('<a class=\"\" href=\"#\"></a>');\n          if (item.Children.length > 0) {\n            anchr.append(plus);\n          }\n          anchr.append(spanName);\n          li.append(anchr);\n          if (item.Children.length > 0) {\n            generateNestedList(item.Children, li);\n          }\n          ul.append(li);\n        }\n        parentElement.append(ul);\n      }\n      ;\n      var result = buildHierarchy(res, 0);\n      generateNestedList(result, html.find('.item-1'));\n      cdos.setContent(html);\n      html.on('click', '.vis-orglbl', function () {\n        if ($(this).attr('data-id')) {\n          var dID = Number($(this).attr('data-id'));\n          txtSummaryOrg.val($(this).text()).attr(\"data-id\", dID);\n          filterData();\n          cdos.close();\n        }\n      });\n      cdos.setHeight(500);\n      cdos.setWidth(450);\n      cdos.setTitle(VIS.Msg.getMsg(\"SummaryOrg\"));\n      cdos.setModal(true);\n      cdos.show();\n      cdos.hidebuttons();\n    };\n\n    //if (curTab && curTab.getTabLevel() > 0) {\n    //    root.find('.vis-tableSection input').prop(\"disabled\", \"true\");\n    //    btnOk.prop(\"disabled\", \"true\");\n    //} else {\n    //    root.find('.vis-tableSection input').prop(\"disabled\", \"\");\n    //    btnOk.prop(\"disabled\", \"\");\n    //}\n  }\n  VIS.RecordShared = RecordShared;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/recordShared.js?")},"./Areas/VIS/Scripts/app/Framework/recordaccessdialog.js":()=>{eval(";\n(function (VIS, $) {\n  function RecordAccessDialog() {\n    var _AD_Table_ID = null;\n    var _Record_ID = null;\n    var root = null;\n    var subroot = null;\n    var drow1 = null;\n    var drow2 = null;\n    var divRecord = null;\n    var divNav = null;\n    var divRole = null;\n    var divRoleInputWrp = null;\n    var divRoleInputCtrlWrp = null;\n    var lblRole = null;\n    var cmbRole = null;\n    var divAccOp = null;\n    var divActive = null;\n    var chkActive = null;\n    var lblActive = null;\n    var divExclude = null;\n    var chkExclude = null;\n    var lblExclude = null;\n    var divReadOnly = null;\n    var chkReadOnly = null;\n    var lblReadOnly = null;\n    var divDepEntry = null;\n    var chkDepEntry = null;\n    var lblDepEntry = null;\n    var divAction = null;\n    var btnNew = null;\n    var btnDelete = null;\n    var spanRec = null;\n    var divWrap = null;\n    var btnOk = null;\n    var btnCancel = null;\n    var btnDown = null;\n    var btnUp = null;\n    var drow3 = null;\n    var drow4 = null;\n    var divIncNull = null;\n    var chkIncNull = null;\n    var lblIncNull = null;\n    var lblRecNo = null;\n    var recordAccessData = null;\n    var curIndex = -1;\n    var cmdnew = false;\n    this.Load = function (AD_Table_ID, Record_ID) {\n      _AD_Table_ID = AD_Table_ID;\n      _Record_ID = Record_ID;\n\n      //if (VIS.Application.isRTL) {\n      //    divRecord = $(\"<div class='vis-rad-recordData' style='float:right'>\");\n      //    btnDown = $(\"<button  class='vis-rad-navBtn' disabled='disabled' style='float:left'>\").append($(\"<i class='fa fa-caret-down'></i>\"));\n      //    btnUp = $(\"<button  class='vis-rad-navBtn' disabled='disabled' style='float:left'>\").append($(\"<i class='fa fa-caret-up' ></i>\"));\n      //    divAction = $(\"<div class='vis-rad-actionIcons' style='float:right'>\");\n      //    btnNew = $(\"<button  class='vis-rad-actionBtn' style='margin-right:0px'>\").append($(\"<i class='vis vis-plus'></i>\"));\n      //    divWrap = $(\"<div class='vis-rad-btnWrap' style='float:left'>\");\n      //    btnCancel = $(\"<a href = 'javascript:void(0)'  class='vis-rad-buttons VIS_Pref_btn-2' style='margin-left:0px'>\").append(VIS.Msg.getMsg('Cancel'));\n      //    spanRec = $(\"<span class='vis-rad-paging' style='float:none' >\").append(lblRecNo);\n      //    chkActive = $(\"<input type='checkbox' checked style='float:right' >\");\n      //    lblActive = $(\"<label style='float:right'>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsActive'));\n\n      //    chkExclude = $(\"<input type='checkbox' checked style='float:right'>\");\n      //    lblExclude = $(\"<label style='float:right'>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsExclude'));\n      //    chkReadOnly = $(\"<input type='checkbox' style='float:right'>\");\n      //    lblReadOnly = $(\"<label style='float:right'>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsReadOnly'));\n      //    chkDepEntry = $(\"<input type='checkbox' style='float:right'>\");\n      //    lblDepEntry = $(\"<label style='float:right'>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsDependentEntities'));\n\n      //}\n      //else {\n      divRecord = $(\"<div class='vis-rad-recordData'>\");\n      btnDown = $(\"<button  class='vis-rad-navBtn' disabled='disabled'>\").append($(\"<i class='fa fa-caret-down'></i>\"));\n      btnUp = $(\"<button  class='vis-rad-navBtn' disabled='disabled'>\").append($(\"<i class='fa fa-caret-up'></i>\"));\n      divAction = $(\"<div class='vis-rad-actionIcons' >\");\n      btnNew = $(\"<button  class='vis-rad-actionBtn'>\").append($(\"<i class='vis vis-plus'></i>\"));\n      divWrap = $(\"<div class='vis-rad-btnWrap' >\");\n      btnCancel = $(\"<a href = 'javascript:void(0)'  class='vis-rad-buttons VIS_Pref_btn-2'>\").append(VIS.Msg.getMsg('Cancel'));\n      spanRec = $(\"<span class='vis-rad-paging'>\").append(lblRecNo);\n      chkActive = $(\"<input type='checkbox' checked >\");\n      lblActive = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsActive'));\n      chkExclude = $(\"<input type='checkbox' checked >\");\n      lblExclude = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsExclude'));\n      chkReadOnly = $(\"<input type='checkbox'>\");\n      lblReadOnly = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsReadOnly'));\n      chkDepEntry = $(\"<input type='checkbox'>\");\n      lblDepEntry = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsDependentEntities'));\n      chkIncNull = $(\"<input type='checkbox'>\");\n      lblIncNull = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IncludeNull'));\n\n      //}\n      root = $(\"<div class='vis-forms-container'>\");\n      subroot = $(\"<div class='vis-forms-container vis-rad-contantWrap'>\");\n      drow1 = $(\"<div class='vis-rad-contantTop'>\");\n      //divRecord = $(\"<div class='vis-rad-recordData' style='float:\" + VIS.Application.isRTL?'right':'left' + \"'>\");\n      divRole = $(\"<div class='vis-rad-roleCombo'>\");\n      divRoleInputWrp = $(\"<div class='input-group vis-input-wrap'>\");\n      divRoleInputCtrlWrp = $(\"<div class='vis-control-wrap'>\");\n      lblRole = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'AD_Role_ID'));\n      cmbRole = $(\"<select class='vis-custom-select'>\");\n      divRole.append(divRoleInputWrp);\n      divRoleInputWrp.append(divRoleInputCtrlWrp);\n      divRoleInputCtrlWrp.append(cmbRole);\n      divRoleInputCtrlWrp.append(lblRole);\n      divAccOp = $(\"<div class='vis-rad-recordOp'>\");\n      divActive = $(\"<div class='vis-rad-check'>\");\n      //chkActive = $(\"<input type='checkbox' checked >\");\n      //lblActive = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsActive'));\n      divActive.append(chkActive);\n      divActive.append(lblActive);\n      divAccOp.append(divActive);\n      divExclude = $(\"<div class='vis-rad-check'>\");\n      //chkExclude = $(\"<input type='checkbox' checked >\");\n      //lblExclude = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsExclude'));\n      divExclude.append(chkExclude);\n      divExclude.append(lblExclude);\n      divAccOp.append(divExclude);\n      divReadOnly = $(\"<div class='vis-rad-check'>\");\n      //chkReadOnly = $(\"<input type='checkbox'>\");\n      //lblReadOnly = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsReadOnly'));\n      divReadOnly.append(chkReadOnly);\n      divReadOnly.append(lblReadOnly);\n      divAccOp.append(divReadOnly);\n      divDepEntry = $(\"<div class='vis-rad-check'>\");\n      //chkDepEntry = $(\"<input type='checkbox'>\");\n      //lblDepEntry = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsDependentEntities'));\n      divDepEntry.append(chkDepEntry);\n      divDepEntry.append(lblDepEntry);\n      divAccOp.append(divDepEntry);\n      divIncNull = $(\"<div class='vis-rad-check'>\");\n      //chkReadOnly = $(\"<input type='checkbox'>\");\n      //lblReadOnly = $(\"<label>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'IsReadOnly'));\n      divIncNull.append(chkIncNull);\n      divIncNull.append(lblIncNull);\n      divAccOp.append(divIncNull);\n      divRecord.append(divRole);\n      divRecord.append(divAccOp);\n      drow1.append(divRecord);\n      divNav = $(\"<div class='vis-rad-navIcons'>\");\n      //btnDown = $(\"<button  class='vis-rad-navBtn' disabled='disabled' style='float:\" + VIS.Application.isRTL ? 'left' : 'right' + \"'>\").append($(\"<img src='\" + VIS.Application.contextUrl + \"Areas/VIS/Images/down-arrow.png'>\"));\n      //btnUp = $(\"<button  class='vis-rad-navBtn' disabled='disabled' style='float:\" + VIS.Application.isRTL ? 'left' : 'right' + \"'>\").append($(\"<img src='\" + VIS.Application.contextUrl + \"Areas/VIS/Images/up-arrow.png'>\"));;\n      divNav.append(btnDown);\n      divNav.append(btnUp);\n      drow1.append(divNav);\n      drow2 = $(\"<div class='vis-rad-contantBottom'>\");\n      //divAction = $(\"<div class='vis-rad-actionIcons' style='float:\" + VIS.Application.isRTL ? 'right' : 'left' + \"'>\");\n      //btnNew = $(\"<button  class='vis-rad-actionBtn' style='margin-right:\" + VIS.Application.isRTL ? '0px' : '5px' + \"'>\").append($(\"<img src='\" + VIS.Application.contextUrl + \"Areas/VIS/Images/add-new.png'>\"));\n      btnDelete = $(\"<button  class='vis-rad-actionBtn'>\").append($(\"<i class='vis vis-delete'></i>\"));\n      divAction.append(btnNew);\n      divAction.append(btnDelete);\n      drow2.append(divAction);\n      lblRecNo = $(\"<lable>\");\n      //spanRec = $(\"<span class='vis-rad-paging'>\").append(lblRecNo);\n      drow2.append(spanRec);\n\n      //divWrap = $(\"<div class='vis-rad-btnWrap' style='float:\" + VIS.Application.isRTL ? 'left' : 'right' + \"'>\");\n      //btnCancel = $(\"<a href = 'javascript:void(0)'  class='vis-rad-buttons' style='margin-left:\" + VIS.Application.isRTL ? '0px' : '5px' + \"'>\").append(VIS.Msg.getMsg('Cancel'));\n      btnOk = $(\"<a href = 'javascript:void(0)'  class='vis-rad-buttons VIS_Pref_btn-2'>\").append(VIS.Msg.getMsg('Ok'));\n      divWrap.append(btnCancel);\n      divWrap.append(btnOk);\n      drow2.append(divWrap);\n      subroot.append(drow1);\n      subroot.append(drow2);\n      root.append(subroot);\n\n      //  ///////////////////\n      //  drow3 = $(\"<div>\");\n      //  drow4 = $(\"<div>\");\n      //  root.append(drow1);\n      //  root.append(drow2);\n      //  root.append(drow3);\n      //  root.append(drow4);\n      //  btnOk = $(\"<button  class='VIS_Pref_pass-btn VIS_Pref_btn-pass-click'>OK</button>\");\n      //  btnCancel = $(\"<button  class='VIS_Pref_pass-btn VIS_Pref_btn-pass-click'>Cancel</button>\");\n      //  lblRole = $(\"<lable>\").append(VIS.Msg.translate(VIS.Env.getCtx(), 'AD_Role_ID'));\n      //  cmbRole = $(\"<select>\");\n\n      // // chkExclude = $(\"<input type='checkbox' checked >\" + VIS.Msg.translate(VIS.Env.getCtx(), 'IsExclude') + \"</input>\");\n      // // chkReadOnly = $(\"<input type='checkbox' >\" + VIS.Msg.translate(VIS.Env.getCtx(), 'IsReadOnly') + \"</input>\");\n      ////  chkDepEntry = $(\"<input type='checkbox' >\" + VIS.Msg.translate(VIS.Env.getCtx(), 'IsDependentEntities') + \"</input>\");\n\n      //  drow1.append(btnDown);\n      //  drow1.append(btnNew);\n      //  drow2.append(lblRole);\n      //  drow2.append(cmbRole);\n      //  drow2.append(chkActive);\n      //  drow2.append(chkExclude);\n      //  drow2.append(chkReadOnly);\n      //  drow2.append(chkDepEntry);\n      //  drow2.append(btnDelete);\n      //  drow3.append(btnUp);\n      //  drow3.append(lblRecNo);\n      //  drow4.append(btnCancel);\n      //  drow4.append(btnOk);\n      bindEvents();\n      loadRoles();\n      loadRecords();\n      root.dialog({\n        width: 600,\n        height: 232,\n        resizable: false,\n        title: 'Record',\n        modal: true\n      });\n    };\n    var loadRoles = function () {\n      var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"RecordAccess/GetRoles\", null, null);\n      var options = '<option Value=\"-1\"></option>';\n      if (dr != null) {\n        for (i in dr) options += '<option value=\"' + dr[i].AD_Role_ID + '\">' + dr[i].Name + '</option>';\n      }\n      cmbRole.append(options);\n      options = null;\n      //sqlRole = null;\n      dr = null;\n    };\n    var loadRecords = function () {\n      if (recordAccessData == null) {\n        recordAccessData = [];\n      }\n      var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"RecordAccess/GetRecordAccess\", {\n        \"Table_ID\": _AD_Table_ID,\n        \"Record_ID\": _Record_ID\n      }, null);\n      var item = null;\n      if (dr != null) {\n        for (var i in dr) {\n          item = {};\n          item.AD_ROLE_ID = dr[i].AD_ROLE_ID;\n          item.ISACTIVE = dr[i].ISACTIVE;\n          item.ISDEPENDENTENTITIES = dr[i].ISDEPENDENTENTITIES;\n          item.ISEXCLUDE = dr[i].ISEXCLUDE;\n          item.ISREADONLY = dr[i].ISREADONLY;\n          item.ISINCLUDENULL = dr[i].ISINCLUDENULL;\n          recordAccessData.push(item);\n        }\n      }\n      item = null;\n      dr = null;\n      //sql = null;\n      if (recordAccessData.length > 0) {\n        curIndex = 0;\n        setLine();\n      } else {\n        cmdnew = true;\n      }\n    };\n    var save = function () {\n      var roleID = cmbRole.val();\n      if (roleID == -1) {\n        return;\n      }\n      var update = false;\n      if (!cmdnew) {\n        update = true;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"RecordAccess/SaveAccess/\",\n        dataType: \"json\",\n        data: {\n          AD_Role_ID: roleID,\n          AD_Table_ID: _AD_Table_ID,\n          Record_ID: _Record_ID,\n          isActive: chkActive.prop('checked'),\n          isExclude: chkExclude.prop('checked'),\n          isReadOnly: chkReadOnly.prop('checked'),\n          isDependentEntities: chkDepEntry.prop('checked'),\n          isIncludeNull: chkIncNull.prop('checked'),\n          isUpdate: update\n        },\n        success: function (data) {\n          var res = data.result;\n          if (res == true) {\n            onclose();\n          }\n        }\n      });\n    };\n    var bindEvents = function () {\n      btnDown.on('click', function () {\n        curIndex += 1;\n        setLine();\n      });\n      btnUp.on('click', function () {\n        if (cmdnew) {\n          cmdnew = false;\n        } else {\n          curIndex -= 1;\n        }\n        setLine();\n      });\n      btnNew.on('click', function () {\n        cmdNew();\n      });\n      btnDelete.on('click', function () {\n        cmdDelete();\n      });\n      btnOk.on('click', function () {\n        save();\n      });\n      btnCancel.on('click', function () {\n        onclose();\n      });\n    };\n    var cmdNew = function () {\n      cmdnew = true;\n      curIndex = recordAccessData.length - 1;\n      setLine();\n      cmbRole.val(-1);\n      chkActive.attr('checked', true);\n      chkExclude.attr('checked', true);\n      chkReadOnly.attr('checked', false);\n      chkIncNull.attr('checked', false);\n      chkDepEntry.attr('checked', false);\n      lblRecNo.empty();\n      lblRecNo.append(\"+\" + (recordAccessData.length + 1) + \"/\" + (recordAccessData.length + 1));\n      if (recordAccessData.length > 0) {\n        btnUp.attr('disabled', false);\n        btnUp.css('opacity', '1');\n      }\n    };\n    var setLine = function () {\n      cmbRole.val(recordAccessData[curIndex].AD_ROLE_ID);\n      chkActive.attr('checked', recordAccessData[curIndex].ISACTIVE == 'Y' ? true : false);\n      chkExclude.attr('checked', recordAccessData[curIndex].ISEXCLUDE == 'Y' ? true : false);\n      chkReadOnly.attr('checked', recordAccessData[curIndex].ISREADONLY == 'Y' ? true : false);\n      chkIncNull.attr('checked', recordAccessData[curIndex].ISINCLUDENULL == 'Y' ? true : false);\n      chkDepEntry.attr('checked', recordAccessData[curIndex].ISDEPENDENTENTITIES == 'Y' ? true : false);\n      lblRecNo.empty();\n      lblRecNo.append(curIndex + 1 + \"/\" + recordAccessData.length);\n      if (recordAccessData.length > curIndex + 1) {\n        btnDown.attr('disabled', false);\n        btnDown.css('opacity', '1');\n      } else {\n        btnDown.attr('disabled', true);\n        btnDown.css('opacity', '.5');\n      }\n      if (curIndex == 0) {\n        btnUp.attr('disabled', true);\n        btnUp.css('opacity', '.5');\n      } else {\n        btnUp.attr('disabled', false);\n        btnUp.css('opacity', '1');\n      }\n    };\n    var cmdDelete = function () {\n      var roleID = cmbRole.val();\n      if (roleID == -1 || cmdnew) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"RecordAccess/DeleteRecord/\",\n        dataType: \"json\",\n        data: {\n          AD_Role_ID: roleID,\n          AD_Table_ID: _AD_Table_ID,\n          Record_ID: _Record_ID,\n          isActive: chkActive.prop('checked'),\n          isExclude: chkExclude.prop('checked'),\n          isReadOnly: chkReadOnly.prop('checked'),\n          isIncludeNull: chkIncNull.prop('checked'),\n          isDependentEntities: chkDepEntry.prop('checked')\n        },\n        success: function (data) {\n          var res = data.result;\n          if (res == true) {\n            onclose();\n          }\n        }\n      });\n    };\n    var onclose = function () {\n      btnDown.off(\"click\");\n      btnUp.off(\"click\");\n      btnNew.off(\"click\");\n      btnDelete.off(\"click\");\n      btnOk.off(\"click\");\n      btnCancel.off(\"click\");\n      loadRoles = null;\n      loadRecords = null;\n      save = null;\n      bindEvents = null;\n      cmdNew = null;\n      setLine = null;\n      cmdDelete = null;\n      _AD_Table_ID = null;\n      _Record_ID = null;\n      drow1 = null;\n      drow2 = null;\n      drow3 = null;\n      drow4 = null;\n      btnDown = null;\n      btnUp = null;\n      btnNew = null;\n      btnDelete = null;\n      btnOk = null;\n      btnCancel = null;\n      lblRole = null;\n      cmbRole = null;\n      chkActive = null;\n      chkExclude = null;\n      chkReadOnly = null;\n      chkIncNull = null;\n      chkDepEntry = null;\n      lblRecNo = null;\n      recordAccessData = null;\n      loadRoles = null;\n      loadRecords = null;\n      save = null;\n      root.dialog('destroy');\n      root.remove();\n      root = null;\n    };\n  }\n  ;\n  VIS.RecordAccessDialog = RecordAccessDialog;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/recordaccessdialog.js?")},"./Areas/VIS/Scripts/app/Framework/sms.js":()=>{eval(';\n(function (VIS, $) {\n  function Sms(_curtab, _curGC, Record_ID, isWindowForm) {\n    //local variables\n    this.frame = null;\n    this.windowNo = VIS.Env.getWindowNo();\n    var ctx = VIS.Env.getCtx();\n    var ch = null;\n    var callingFromOutsideofWindow = false;\n    var bpColumnName = "C_BPARTNER_ID";\n    var rowsSource = null;\n    var rowsSingleView = null;\n    var currentTable_ID = 0;\n    var csvData = [];\n    var self = this;\n    var formHeight = 0;\n    var formWidth = 0;\n\n    // Design variables        //contains Field names of tab on left side\n    var $ulFieldNames = null;\n    var $root = $(\'<div class="vis-sms-rootDiv vis-forms-container"></div>\');\n    var $toolbarDiv = $(\'<div class="vis-awindow-header vis-menuTitle">\');\n    var $leftDiv = null;\n    var $middleDiv = null;\n    var $rightDiv = null;\n    var $imgAction = null;\n    var $txtArea = null;\n    //contain list of bcc Mobile Numbers\n    var $bccChkList = null;\n    var $mobileContainer = null;\n    var $ulFieldNames = null;\n    var $actualtextPara;\n    var $operator;\n    var $maxtextPara;\n    var $btnHdrSend;\n    var $btnHdrPreview;\n    var isViewLoaded = false;\n    var $bsyDiv;\n    var $refresh = null;\n    var $dynamicDisplay = null;\n    initEmail();\n    function initEmail() {\n      callingFromOutsideofWindow = isWindowForm;\n      if (!callingFromOutsideofWindow) {\n        currentTable_ID = _curtab.gridTable.AD_Table_ID;\n        // this is data source for multiView Records\n        rowsSource = _curGC.getSelectedRows();\n\n        // this is data source for single View Records\n        rowsSingleView = _curtab.getRecords()[_curtab.getCurrentRow()];\n      }\n      $bccChkList = $(\'<ul class="vis-sms-ul" ></ul>\');\n      $bsyDiv = $("<div>");\n      $bsyDiv.css("position", "absolute");\n      $bsyDiv.css("bottom", "0");\n      $bsyDiv.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/LoadingCircle.gif\') no-repeat");\n      $bsyDiv.css("background-position", "center center");\n      $bsyDiv.css("width", "100%");\n      $bsyDiv.css("height", "100%");\n      $bsyDiv.css(\'text-align\', \'center\');\n      $bsyDiv.css(\'opacity\', \'.1\');\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    this.initializeComponent = function () {\n      var $btncloseChart = $(\'<a href="javascript:void(0)"  class="vis-icon-menuclose"><i class="vis vis-cross"></i></a>\');\n      var pheader = \'\';\n      if (callingFromOutsideofWindow) {\n        pheader = $(\'<p>\' + VIS.Msg.getMsg("Sms") + \' (\' + VIS.Msg.getMsg("Contacts") + \')\' + \' </p>\');\n      } else {\n        pheader = $(\'<p>\' + VIS.Msg.getMsg("Sms") + \' (\' + _curGC.aPanel.$parentWindow.getName() + \')\' + \' </p>\');\n      }\n      $root.append($toolbarDiv.append($btncloseChart).append(pheader));\n      $root.append($bsyDiv);\n      $btncloseChart.click(function (e) {\n        self.dispose();\n        self = null;\n        e.stopPropagation();\n      });\n      loadDesign();\n      Addbuttons();\n      if (!callingFromOutsideofWindow) {\n        loadFields();\n        loadMobileNumbers(false);\n      }\n      eventhandlers();\n    };\n    function loadDesign() {\n      var html = \'         <div class="contentArea" style="width: 100%; float: left;">\';\n      html += \' <div class="vis-sms-leftDiv"></div>\';\n      html += \'   <div class="vis-sms-ContentWrap"><div class="vis-sms-ContentArea"><div class="vis-sms-leftWrap"><div class="vacom-form-horizontal">\';\n      html += \'   <div class="vis-sms-inputWrap"><div class="vis-sms-form-data-sub">\';\n      html += \'         <input type="text"  id="\' + self.windowNo + \'_emailMoblie"  placeholder="\' + VIS.Msg.getMsg("EnterMobileNumber") + \'">\';\n      html += \'</div>\';\n      html += \'  </div>\';\n      html += \'  </div><div class="vis-sms-textarea-div" style="width: 100%; float: left;">\';\n      html += \' <textarea  ondrop="return false;" id="\' + self.windowNo + \'_vis-sms-textarea" style="width: 100%; height:100%;resize:none" placeholder="\' + VIS.Msg.getMsg("WriteMsgHere") + \'"></textarea></div>\';\n      html += \' <div class="vis-sms-leftFooter">\';\n      html += \'<div ><p class="vis-sms-counter" id=\' + self.windowNo + \'_acCount></p> <p  class="vis-sms-counter"   id=\' + self.windowNo + \'_oper></p> <p  class="vis-sms-counter"   id=\' + self.windowNo + \'_maxCount >160</p> </div>\';\n      html += \' <input id="\' + self.windowNo + \'_dyndis" type="checkbox"><label  id="\' + self.windowNo + \'_dyndislbl"  for="\' + self.windowNo + \'_dyndis" >\' + VIS.Msg.getMsg("DynamicSms") + \'</label></div></div>\';\n      html += \'  <div class="vis-sms-divider"></div>\';\n      html += \' <div class="vis-sms-rytWrap"><div class="vis-sms-rytContent">\';\n      html += \' <div class="vis-sms-rytBcc"><div class="vis-email-rytBcc-header"><h4>\' + VIS.Msg.getMsg("Mobile") + \'</h4>\';\n      html += \' <i id="\' + self.windowNo + \'_SmsRefresh" title="\' + VIS.Msg.getMsg("Refresh") + \'" class="vis vis-refresh"></i>\';\n      html += \'   </div><div class="vis-sms-BccList">\';\n      html += \' </div></div></div></div>  </div></div>\';\n      $root.append($(html));\n      var middleDivWidth = 0;\n      $dynamicDisplay = $root.find(\'#\' + self.windowNo + "_dyndis");\n      $root.find(\'.contentArea\').css(\'height\', $root.height() - 42);\n      $root.find(\'.vis-sms-leftDiv\').height($root.height() - 42);\n      $leftDiv = $root.find(\'.vis-sms-leftDiv\');\n      $rightDiv = $root.find(\'.vis-sms-BccList\');\n      $mobileContainer = $root.find(\'#\' + self.windowNo + "_emailMoblie");\n      $refresh = $root.find(\'#\' + self.windowNo + \'_SmsRefresh\');\n\n      //if (to != undefined && to != null && to.trim().length > 0)\n      //{\n      //    $mobileContainer.val(to);\n      //}\n\n      $mobileContainer.css(\'margin-top\', \'10px\');\n      $txtArea = $root.find(\'#\' + self.windowNo + \'_vis-sms-textarea\');\n      $leftfootArea = $root.find(".vis-sms-leftFooter");\n      $actualtextPara = $root.find(\'#\' + self.windowNo + "_acCount");\n      $operator = $root.find(\'#\' + self.windowNo + "_oper");\n      $maxtextPara = $root.find(\'#\' + self.windowNo + "_maxCount");\n      $root.find(".vis-sms-textarea-div").css(\'margin-top\', \'10px\');\n      $root.find(\'.vis-sms-rytBcc\').height($root.find(\'.vis-sms-rytContent\').height() - 10);\n      if (callingFromOutsideofWindow) {\n        $root.find(\'.vis-sms-leftDiv\').hide();\n        $root.find(\'.vis-sms-rytWrap\').hide();\n        $root.find(".vis-sms-textarea-div").height($root.height() - 150);\n        $root.find(\'.vis-sms-leftWrap\').css("width", \'100%\');\n        $root.find(\'#\' + self.windowNo + \'_dyndislbl\').hide();\n        middleDivWidth = $root.width() - 40;\n        $dynamicDisplay.prop(\'checked\', false);\n        $dynamicDisplay.hide();\n      } else {\n        $root.find(".vis-sms-textarea-div").height($root.height() - 150);\n        middleDivWidth = $root.width() - 240;\n        $root.find(\'.vis-sms-leftWrap\').width(middleDivWidth - 345);\n      }\n      $middleDiv = $root.find(\'.vis-sms-ContentWrap\');\n      $middleDiv.css(\'width\', middleDivWidth);\n      isViewLoaded = true;\n      $root.find(\'.vis-sms-BccList\').height($root.find(\'.vis-sms-rytContent\').height() - 70);\n    }\n    ;\n    function loadFields() {\n      $imgAction = $(\'<i class="fa fa-bars"></i>\');\n      var $toggleAction = $(\'<div class="vis-apanel-lb-toggle" style="overflow-x:hidden;overflow-y:hidden"></div>\');\n      $toggleAction.append($imgAction);\n      $leftDiv.append($toggleAction);\n      $ulFieldNames = $(\'<ul class="vis-apanel-lb-ul"></ul>\');\n      $ulFieldNames.css({\n        "height": "calc(100% - 54px)",\n        "overflow": "auto",\n        "white-space": "nowrap",\n        "width": "100%"\n      });\n      for (var i = 0; i < _curtab.gridTable.getFields().length; i++) {\n        var iskeyColumn = _curtab.gridTable.getFields(0)[i].getColumnName().toUpper() == _curtab.getKeyColumnName().toUpper(); // in case of custmer Master , C_BPartner is not displayed but it is required to show its user\'s mobile which have isSms=Y\n        if (!_curtab.gridTable.getFields(0)[i].getIsDisplayed() && !iskeyColumn) {\n          continue;\n        }\n        if (!iskeyColumn) {\n          $ulFieldNames.append($(\'<li>\' + _curtab.gridTable.getFields(0)[i].getHeader() + \'</li>\'));\n        }\n        var bpList = [];\n        var pkList = [];\n        if (_curtab.gridTable.getFields(0)[i].getColumnName().toUpper().equals(bpColumnName)) {\n          for (var q = 0; q < rowsSource.length; q++) {\n            if (VIS.DisplayType.IsLookup(_curtab.getField(bpColumnName).getDisplayType())) {\n              if (rowsSource[q][bpColumnName.toLower()] != null) {\n                bpList.push(rowsSource[q][bpColumnName.toLower()]);\n                pkList.push(rowsSource[q][_curtab.getKeyColumnName().toLower()]);\n              }\n            } else if (rowsSource[q][bpColumnName.toLower()] != null) {\n              bpList.push(rowsSource[q][bpColumnName.toLower()]);\n              pkList.push(rowsSource[q][_curtab.getKeyColumnName().toLower()]);\n            }\n          }\n        }\n        fillIDsOFUsers(bpList, pkList);\n      }\n      $leftDiv.append($ulFieldNames);\n    }\n    ;\n    function loadMobileNumbers(refrsh) {\n      if (refrsh) {\n        $bccChkList.empty();\n        // this is data source for multiView Records\n        rowsSource = _curGC.getSelectedRows();\n\n        // this is data source for single View Records\n        rowsSingleView = _curtab.getRecords()[_curtab.getCurrentRow()];\n      }\n      if (_curGC.singleRow)\n        //show records for single window\n        {\n          loadMobileNumberForSingleView();\n        } else {\n        if (rowsSource.length > 0) {\n          for (var i = 0; i < rowsSource.length; i++) {\n            //else {\n            if (rowsSource[i]["mobile"] != null) {\n              var ID = rowsSource[i][_curtab.getKeyColumnName().toLower()];\n              $bccChkList.append(\'<li class="vis-sms-list-li-bcc"  data-mobile="\' + rowsSource[i]["mobile"] + \'"><input id="\' + self.windowNo + \'_\' + rowsSource[i]["mobile"] + \'_CheckBoxList1" type="checkbox" value="\' + rowsSource[i]["mobile"] + \'" checked/><label class="vis-sms-chcklist-label"  for="\' + self.windowNo + \'_\' + rowsSource[i]["mobile"] + \'_CheckBoxList1">\' + rowsSource[i]["mobile"] + \'(\' + ID + \')</label></li>\');\n            }\n            //}\n          }\n        } else {\n          loadMobileNumberForSingleView();\n        }\n      }\n      if (!refrsh) {\n        $rightDiv.append($bccChkList);\n      }\n      if ($bccChkList.children().length > 1) {\n        if ($dynamicDisplay.prop("checked") == true) {\n          $mobileContainer.val(\'\');\n          $mobileContainer.prop(\'disabled\', true);\n        }\n      }\n    }\n    ;\n    function loadMobileNumberForSingleView() {\n      if (rowsSingleView["mobile"] != null) {\n        var ID = rowsSingleView[_curtab.getKeyColumnName().toLower()];\n        //  vchkListBoxTop.AddKeyAsItem = new KeyValuePair<string, int>(((VAdvantage.DataUtil.DataObject)rowsSource[i]).GetFieldValue("EMAIL").ToString() + "(" + ID + ")", ID);\n\n        $bccChkList.append(\'<li class="vis-sms-list-li-bcc" data-mobile="\' + rowsSingleView["mobile"] + \'"><input id="\' + self.windowNo + \'_\' + rowsSingleView["mobile"] + \'_CheckBoxList1" type="checkbox" value="\' + rowsSingleView["mobile"] + \'" checked /><label class="vis-sms-chcklist-label"  for="\' + self.windowNo + \'_\' + rowsSingleView["mobile"] + \'_CheckBoxList1">\' + rowsSingleView["mobile"] + \'(\' + ID + \')</label></li>\');\n      }\n    }\n    ;\n    function Addbuttons() {\n      $btnHdrSend = $(\'<i class="vis-email-sendbtn vis vis-paper-plane vis-Sms-sendButton" title="\' + VIS.Msg.getMsg("SendSms").replace(\'&\', \'\') + \'" ></i>\');\n      $toolbarDiv.append($btnHdrSend);\n      if (!callingFromOutsideofWindow) {\n        $btnHdrPreview = $(\'<i class="vis-email-btns vis vis-viewdocument vis-sms-preview-btn" title="\' + VIS.Msg.getMsg("Preview").replace(\'&\', \'\') + \'"></i>\');\n        $toolbarDiv.append($btnHdrPreview);\n      }\n    }\n    function fillIDsOFUsers(bpID, prID) {\n      var pvID = 0;\n      for (var i = 0; i < bpID.length; i++) {\n        var ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Sms/GetUser", {\n          "BPartner_ID": bpID[i]\n        }, null);\n        var isBroken = false;\n        if (ds != null) {\n          for (var j in ds) {\n            if (ds[j]["ISSMS"] != null) {\n              if (ds[j]["ISSMS"].toString().equals("Y")) {\n                if (ds[j]["MOBILE"] == null || ds[j]["MOBILE"] == "") {\n                  continue;\n                }\n                if ($($bccChkList.children(\'li\').data(ds[j]["MOBILE"] + prID[i])).length > 0) {\n                  continue;\n                }\n                $bccChkList.append(\'<li  class="vis-sms-list-li-bcc"><input id="\' + self.windowNo + \'_\' + ds[j]["MOBILE"] + \'_CheckBoxList1" type="checkbox"  value="\' + ds[j]["MOBILE"] + prID[i] + \'" checked/><label class="vis-sms-chcklist-label" for="\' + self.windowNo + \'_\' + ds[j]["MOBILE"] + \'_CheckBoxList1">\' + ds[j]["MOBILE"] + \'(\' + prID[i] + \')</label></li>\');\n              }\n            }\n          }\n        }\n      }\n    }\n    ;\n    function eventhandlers() {\n      $btnHdrSend.on("click", send);\n      $txtArea.on("keyup", countText);\n      if (!callingFromOutsideofWindow) {\n        $imgAction.on("click", imgActionClick);\n        $dynamicDisplay.on("click", dynamicDisplaychange);\n        $ulFieldNames.children(\'li\').on("click", insertSelectedField);\n        $btnHdrPreview.on("click", preview);\n        $imgAction.trigger(\'click\');\n        $refresh.on("click", refresh);\n\n        //}\n        //else {\n        //$root.find(\'.vis-sms-CcBcc\').on("click", showBccpanel);\n      }\n    }\n    ;\n    function imgActionClick(e) {\n      if ($dynamicDisplay.prop("checked") == true) {\n        if ($leftDiv.width() == 40) {\n          $leftDiv.css(\'width\', \'200px\');\n          $leftDiv.find(\'ul\').show();\n          $middleDiv.width($middleDiv.width() - 160);\n          $root.find(\'.vis-sms-leftWrap\').width($root.find(\'.vis-sms-leftWrap\').width() - 160);\n          // $(\'.vis-sms-form-data-sub\').width($(\'.vis-sms-leftWrap\').width());\n        } else {\n          shrinkLeftDiv();\n        }\n      } else {\n        if ($leftDiv.width() != 40) {\n          shrinkLeftDiv();\n        }\n      }\n    }\n    ;\n    function shrinkLeftDiv() {\n      $leftDiv.css({\n        \'width\': \'40px\'\n      });\n      $leftDiv.find(\'ul\').hide();\n      $middleDiv.width($middleDiv.width() + 160);\n      $root.find(\'.vis-sms-leftWrap\').width($root.find(\'.vis-sms-leftWrap\').width() + 160);\n    }\n    ;\n    function dynamicDisplaychange(e) {\n      if (this.checked) {\n        if ($leftDiv.width() != 40) {\n          $leftDiv.find(\'ul\').show();\n        }\n        //in ase of dynmic mail, to, bccc and cc will be enabled only for single record.\n        //otherwise disable them.\n        if (_curGC.singleRow == false && rowsSource.length > 1) {\n          $mobileContainer.val(\'\');\n          $mobileContainer.prop(\'disabled\', true);\n          //$cc.val(\'\');\n          //$cc.prop(\'disabled\', true);\n          //$bcc.val(\'\');\n          //$bcc.prop(\'disabled\', true);\n        }\n      } else {\n        if ($leftDiv.width() != 40) {\n          shrinkLeftDiv();\n        }\n        $mobileContainer.prop(\'disabled\', false);\n        //$cc.prop(\'disabled\', false);\n        //$bcc.prop(\'disabled\', false);\n      }\n    }\n    ;\n    function insertSelectedField(e) {\n      //  $textAreakeno.paste(\'@@\' + $(this).text() + \'@@\');\n      var $textAreaLocal = $txtArea[0];\n      var textToInsert = "@@" + $(this).text() + "@@";\n      var scrollPos = $textAreaLocal.scrollTop;\n      var strPos = 0;\n      var br = $textAreaLocal.selectionStart || $textAreaLocal.selectionStart == \'0\' ? "ff" : document.selection ? "ie" : false;\n      if (br == "ie") {\n        $txtArea.focus();\n        var range = document.selection.createRange();\n        range.moveStart(\'character\', -$txtArea.val().length);\n        strPos = range.text.length;\n      } else if (br == "ff") strPos = $textAreaLocal.selectionStart;\n      var front = $txtArea.val().substring(0, strPos);\n      var back = $txtArea.val().substring(strPos, $txtArea.val().length);\n      $txtArea.val(front + textToInsert + back);\n      strPos = strPos + textToInsert.length;\n      if (br == "ie") {\n        $txtArea.focus();\n        var range = document.selection.createRange();\n        range.moveStart(\'character\', -$txtArea.val().length);\n        range.moveStart(\'character\', strPos);\n        range.moveEnd(\'character\', 0);\n        range.select();\n      } else if (br == "ff") {\n        $textAreaLocal.selectionStart = strPos;\n        $textAreaLocal.selectionEnd = strPos;\n        $txtArea.focus();\n      }\n      $textAreaLocal.scrollTop = scrollPos;\n      $textAreaLocal = null;\n      countText();\n    }\n    ;\n    function preview(e) {\n      var html = $txtArea.val();\n      var finalhtmls = \'\';\n      if (_curGC.singleRow == false && rowsSource.length > 0) {\n        finalhtmls = parseHtml1(html, 0);\n      } else {\n        finalhtmls = parseHtml2(html);\n      }\n      var $preDiv = $(\'<div></div>\');\n      $preDiv.append(VIS.Utility.encodeText(finalhtmls));\n      var chp = new VIS.ChildDialog();\n      chp.setHeight(420);\n      chp.setWidth(850);\n      chp.setTitle(VIS.Msg.getMsg("Preview"));\n      chp.setModal(true);\n      chp.setContent($preDiv);\n      chp.show();\n      chp.hidebuttons();\n    }\n    ;\n    function refresh(e) {\n      loadMobileNumbers(true);\n    }\n    ;\n    function countText(e) {\n      $actualtextPara.text($txtArea.val().length);\n      if (parseInt($actualtextPara.text()) > parseInt($maxtextPara.text())) {\n        $operator.text(">");\n        //if text length grator then the set length turn text into red\n        setColor("#ED0000");\n      } else if (parseInt($actualtextPara.text()) == parseInt($maxtextPara.text())) {\n        $operator.text("=");\n        //else black\n        setColor("#000000");\n      } else {\n        $operator.text("<");\n        //else black\n        setColor("#000000");\n      }\n    }\n    ;\n    function setColor(color) {\n      $operator.css(\'color\', color); //forecolor of text\n      $actualtextPara.css(\'color\', color); //label control color\n      $maxtextPara.css(\'color\', color); //fore color\n    }\n    ;\n    function listofSelectedItems1(html, i) {\n      var finalhtmlperRecord = html;\n      var retValues = {};\n      var copyhtml = html;\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n          if (rowsSource[i][columnName.toLower()] != null && rowsSource[i][columnName.toLower()] != undefined) {\n            //fieldValue = _curtab.getField(columnName.toLower()).lookup.lookup[" " + rowsSource[i][columnName.toLower()]].Name;\n            fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSource[i][columnName.toLower()]);\n          }\n        } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n          fieldValue = _curtab.getField(columnName).value;\n          fieldValue = new Date(fieldValue);\n        } else {\n          fieldValue = rowsSource[i][columnName.toLower()];\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        retValues[\'@@\' + fieldname + \'@@\'] = fieldValue;\n      }\n      return retValues;\n    }\n    ;\n    function listofSelectedItems2(html) {\n      var copyhtml = html;\n      var retValues = {};\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n          if (rowsSingleView[columnName.toLower()] != null && rowsSingleView[columnName.toLower()] != undefined) {\n            //   fieldValue = _curtab.getField(columnName.toLower()).lookup.lookup[" " + rowsSingleView[columnName.toLower()]].Name;\n\n            fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSingleView[columnName.toLower()]);\n          }\n        } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n          fieldValue = _curtab.getField(columnName).value;\n          fieldValue = new Date(fieldValue);\n        } else {\n          fieldValue = rowsSingleView[columnName.toLower()];\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        retValues[\'@@\' + fieldname + \'@@\'] = fieldValue;\n      }\n      return retValues;\n    }\n    ;\n    function parseHtml1(html, i) {\n      var finalhtmlperRecord = html;\n      var copyhtml = html;\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n          if (rowsSource[i][columnName.toLower()] != null && rowsSource[i][columnName.toLower()] != undefined) {\n            //fieldValue = _curtab.getField(columnName.toLower()).lookup.lookup[" " + rowsSource[i][columnName.toLower()]].Name;\n            fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSource[i][columnName.toLower()]);\n          }\n        } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n          fieldValue = _curtab.getField(columnName).value;\n          fieldValue = new Date(fieldValue);\n        } else {\n          fieldValue = rowsSource[i][columnName.toLower()];\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        finalhtmlperRecord = finalhtmlperRecord.replace(\'@@\' + fieldname + \'@@\', fieldValue);\n      }\n      return finalhtmlperRecord;\n    }\n    ;\n    function parseHtml2(html) {\n      var copyhtml = html;\n      while (copyhtml.indexOf("@@") > -1) {\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        var fieldname = copyhtml.substring(0, copyhtml.indexOf("@@"));\n        var fieldValue = null;\n        var columnName = Object.keys(_curGC.getColumnNames()).filter(function (key) {\n          return _curGC.getColumnNames()[key] === fieldname;\n        })[0];\n        if (VIS.DisplayType.IsLookup(_curtab.getField(columnName).getDisplayType()) || VIS.DisplayType.Location == _curtab.getField(columnName).getDisplayType()) {\n          if (rowsSingleView[columnName.toLower()] != null && rowsSingleView[columnName.toLower()] != undefined) {\n            //   fieldValue = _curtab.getField(columnName.toLower()).lookup.lookup[" " + rowsSingleView[columnName.toLower()]].Name;\n\n            fieldValue = _curtab.getField(columnName.toLower()).lookup.getDisplay(rowsSingleView[columnName.toLower()]);\n          }\n        } else if (VIS.DisplayType.IsDate(_curtab.getField(columnName).getDisplayType())) {\n          fieldValue = _curtab.getField(columnName).value;\n          fieldValue = new Date(fieldValue);\n        } else {\n          if (_curGC.singleRow == true) {\n            fieldValue = _curtab.getField(columnName).value;\n          } else {\n            fieldValue = rowsSingleView[columnName.toLower()];\n          }\n        }\n        copyhtml = copyhtml.substring(copyhtml.indexOf("@@") + 2);\n        html = html.replace(\'@@\' + fieldname + \'@@\', fieldValue);\n      }\n      return html;\n    }\n    ;\n    function send(e) {\n      var body = $txtArea.val();\n      var canExecute = true;\n      if (body == null || body == "" || body.trim().length == 0) {\n        canExecute = false;\n        VIS.ADialog.confirm("SendWithoutBody", true, "", "Confirm", function (result) {\n          if (result) {\n            sendCallback(e, body);\n          }\n        });\n      }\n      if (canExecute) {\n        sendCallback(e, body);\n      }\n    }\n    ;\n    function sendCallback(e, body) {\n      csvData = [];\n      var wrongnumbers = \'\';\n\n      //for static mails\n      var sms = [];\n      if ($dynamicDisplay.prop("checked") == false) {\n        var smsInfo = {};\n        smsInfo.MobileNumbers = [];\n        if ($mobileContainer.val().contains(\';\')) {\n          var arraybcc = $mobileContainer.val().split(\';\');\n          for (var i = 0; i < arraybcc.length; i++) {\n            if (arraybcc[i] != null && arraybcc[i] != "") {\n              if (ValidateMobileNumber(arraybcc[i])) {\n                smsInfo.MobileNumbers.push(arraybcc[i]);\n              } else {\n                wrongnumbers += arraybcc[i] + ",";\n              }\n            }\n          }\n        } else {\n          if ($mobileContainer.val() != null && $mobileContainer.val() != "") {\n            if (ValidateMobileNumber($mobileContainer.val())) {\n              smsInfo.MobileNumbers.push($mobileContainer.val());\n            } else {\n              wrongnumbers += $mobileContainer.val() + ",";\n            }\n          }\n        }\n        if ($bccChkList != null && $bccChkList != undefined) {\n          selectedValues = [];\n          $root.find("[id*=CheckBoxList1]:checked").each(function () {\n            selectedValues.push($(this).val());\n          });\n\n          //  var lis = $bccChkList.children(\'li\');\n          if (selectedValues.length > 0) {\n            for (var l = 0; l < selectedValues.length; l++) {\n              if (selectedValues[l]) {\n                smsInfo.MobileNumbers.push(selectedValues[l]);\n              } else {\n                wrongnumbers += selectedValues[l] + ",";\n              }\n            }\n          } else {\n            if ($mobileContainer.val().trim().length == 0) {\n              window.setTimeout(function () {\n                VIS.ADialog.info("NoNumberFound");\n              }, 2);\n              return;\n            }\n          }\n        }\n        if (wrongnumbers != \'\') {\n          window.setTimeout(function () {\n            VIS.ADialog.info("InvalidMobileNumbers", " ", VIS.Msg.getMsg("MobileNo") + wrongnumbers);\n          }, 2);\n          return;\n        }\n        smsInfo.Body = {};\n        if (smsInfo.MobileNumbers.length > 0) {\n          for (var c = 0; c < smsInfo.MobileNumbers.length; c++) {\n            //// var num = smsInfo.MobileNumbers[c];\n            csvData.push({\n              num: smsInfo.MobileNumbers[c],\n              info: \'"\' + smsInfo.MobileNumbers[c] + \'"\' + "," + \'"\' + $txtArea.val() + \'"\' + "," + \'"\' + new Date() + \'"\' + "," + \'"\' + "@@response@@" + \'"\'\n            });\n          }\n        }\n        sms.push(smsInfo);\n      }\n      //for dynamic mails\n      else {\n        selectedValues = [];\n        $("[id*=CheckBoxList1]:checked").each(function () {\n          selectedValues.push($(this).val());\n        });\n        if (_curGC.singleRow == true && rowsSource.length > 0) {\n          sms.push(createDynmicSms(rowsSingleView, 0));\n        } else {\n          for (var r = 0; r < rowsSource.length; r++) {\n            sms.push(createDynmicSms(rowsSource[r], r));\n          }\n        }\n      }\n      var smss = JSON.stringify(sms);\n      $bsyDiv[0].style.visibility = "visible";\n      var datainit = {\n        sms: smss,\n        format: $txtArea.val()\n      };\n      $.ajax({\n        url: VIS.Application.contextUrl + "Sms/SendSms",\n        data: datainit,\n        datatype: "json",\n        type: "post",\n        cache: false,\n        success: function (data) {\n          var result = JSON.parse(data);\n          $bsyDiv[0].style.visibility = "hidden";\n          if (result.ResultMessage == "SmsConfigurationNotFound") {\n            window.setTimeout(function () {\n              VIS.ADialog.info("SmsConfigurationNotFound");\n            }, 2);\n            return;\n          }\n          var $maincheGrid = $(\'<div style="max-height: 300px;overflow:auto"></div>\');\n          var $table = $(\'<table></table>\');\n          for (var c = 0; c < result.Response.length; c++) {\n            var tr = $(\'<tr></tr>\');\n            var td1 = $(\'<td></td>\');\n            td1.append(result.Response[c].mobileNumber + \' - \' + result.Response[c].response);\n            tr.append(td1);\n            $table.append(tr);\n          }\n          $maincheGrid.append($table);\n          var oks = $(\'<a style="float:right" href="javascript:void(0)" ><i title="\' + VIS.Msg.getMsg("SaveSmsLog") + \'" class="vis vis-save"></i></a>\');\n          $maincheGrid.append(oks);\n          var che = new VIS.ChildDialog();\n          che.setTitle(VIS.Msg.getMsg("Information"));\n          che.setContent($maincheGrid);\n          che.show();\n          che.hidebuttons();\n          oks.on("click", function () {\n            var str = \'\';\n            for (var c = 0; c < result.Response.length; c++) {\n              var csvinfo = $.grep(csvData, function (ele, index) {\n                return ele.num == result.Response[c].mobileNumber;\n              });\n              str += csvinfo[0].info.replace(\'@@response@@\', result.Response[c].response) + "\\n";\n            }\n            var d = new Date().toISOString().slice(0, 19).replace(/-/g, "");\n            var fileData = "data:text/csv;base64," + window.btoa(str);\n            $(this).attr("href", fileData).attr("download", "file-" + d + ".csv");\n          });\n        },\n        error: function (ee) {\n          console.log(ee);\n          VIS.ADialog.error("MessageSendingFailed");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    function createDynmicSms(source, i) {\n      var smsInfo = {};\n      smsInfo.MobileNumbers = [];\n      if ($mobileContainer.val().contains(\';\')) {\n        var arraybcc = $mobileContainer.val().split(\';\');\n        for (var i = 0; i < arraybcc.length; i++) {\n          if (arraybcc[i] != null && arraybcc[i] != "") {\n            smsInfo.MobileNumbers.push(arraybcc[i]);\n          }\n        }\n      } else {\n        if ($mobileContainer.val() != null && $mobileContainer.val() != "") {\n          smsInfo.MobileNumbers.push($mobileContainer.val());\n        }\n      }\n      if ($bccChkList != null && $bccChkList != undefined) {\n        if (Object.keys(source).indexOf("mobile") > -1 && selectedValues.indexOf(source[\'mobile\']) > -1) {\n          smsInfo.MobileNumbers.push(source[\'mobile\']);\n        }\n      }\n      var finalFormat = \'\';\n      if (_curGC.singleRow == false) {\n        smsInfo.Body = listofSelectedItems1($txtArea.val(), i);\n        finalFormat = parseHtml1($txtArea.val(), i);\n      } else {\n        smsInfo.Body = listofSelectedItems2($txtArea.val());\n        finalFormat = parseHtml2($txtArea.val());\n      }\n      if (smsInfo.MobileNumbers.length > 0) {\n        for (var c = 0; c < smsInfo.MobileNumbers.length; c++) {\n          csvData.push({\n            num: smsInfo.MobileNumbers[c],\n            info: \'"\' + smsInfo.MobileNumbers[c] + \'"\' + "," + \'"\' + finalFormat + \'"\' + "," + \'"\' + new Date() + \'"\' + "," + \'"\' + "@@response@@" + \'"\'\n          });\n        }\n      }\n      return smsInfo;\n    }\n    ;\n    function ValidateMobileNumber(MobileNum) {\n      var RtnVal = true;\n      if (MobileNum.indexOf("(") > -1) {\n        MobileNum = MobileNum.substring(0, MobileNum.toString().indexOf("("));\n      }\n\n      //Length must be >= 10 but <= 12\n      if (MobileNum.length < 10 || MobileNum.length > 17) {\n        RtnVal = false;\n      } else {\n        var Pos;\n        var NumChars;\n        NumChars = MobileNum.length;\n\n        //Check For Characters \n        for (Pos = 0; Pos < NumChars; Pos++) {\n          if (isNaN(MobileNum[Pos])) {\n            if (!/\\s+$/.test(MobileNum[Pos]))\n              //Space is allowed\n              {\n                if (MobileNum[Pos] != \'(\' && MobileNum[Pos] != \')\')\n                  //( and ) is allowed\n                  {\n                    RtnVal = false;\n                  }\n              }\n          }\n        } //for\n\n        //Check For Opening and Closing bracket\n\n        if (MobileNum.indexOf("(") > -1) {\n          if (!MobileNum.indexOf(")") > -1) {\n            RtnVal = false;\n          }\n        }\n      } //else\n      return RtnVal;\n    }\n    function setDesignOnSizeChange() {\n      $root.height(formHeight);\n      $root.width(formWidth);\n      var middleDivWidth = 0;\n      $root.find(\'.contentArea\').css(\'height\', $root.height() - 42);\n      $root.find(\'.vis-sms-leftDiv\').height($root.height() - 42);\n      $root.find(".vis-sms-textarea-div").css(\'margin-top\', \'10px\');\n      $root.find(\'.vis-sms-rytBcc\').height($root.find(\'.vis-sms-rytContent\').height() - 10);\n      if (callingFromOutsideofWindow) {\n        $root.find(\'.vis-sms-leftDiv\').hide();\n        $root.find(\'.vis-sms-rytWrap\').hide();\n        $root.find(".vis-sms-textarea-div").height($root.height() - 150);\n        $root.find(\'.vis-sms-leftWrap\').css("width", \'100%\');\n        middleDivWidth = $root.width() - 40;\n        $dynamicDisplay.prop(\'checked\', false);\n        $dynamicDisplay.hide();\n      } else {\n        $root.find(".vis-sms-textarea-div").height($root.height() - 150);\n        middleDivWidth = formWidth - ($root.find(\'.vis-sms-leftDiv\').width() + 30);\n        $root.find(\'.vis-sms-leftWrap\').width(middleDivWidth - 345);\n      }\n      $middleDiv = $root.find(\'.vis-sms-ContentWrap\');\n      $middleDiv.css(\'width\', middleDivWidth);\n    }\n    ;\n    this.disposeComponent = function () {\n      //this.frame = null;\n      //this.windowNo = 0;\n\n      $btnHdrSend.off("click");\n      if (!callingFromOutsideofWindow) {\n        $imgAction.off("click");\n        $ulFieldNames.children(\'li\').off("click");\n        $ulFieldNames.remove();\n        $imgAction.remove();\n      }\n      $dynamicDisplay.off("click");\n      if ($btnHdrPreview != undefined) {\n        $btnHdrPreview.off("click");\n        $btnHdrPreview.remove();\n      }\n      $txtArea.off("keyup");\n      $root.find(\'.vis-sms-CcBcc\').off("click");\n      ctx = null;\n      ch = null;\n      callingFromOutsideofWindow = false;\n      bpColumnName = "";\n      rowsSource = null;\n      rowsSingleView = null;\n      currentTable_ID = 0;\n\n      // Design variables        //contains Field names of tab on left side\n\n      $ulFieldNames = null;\n      $root.remove();\n      $root = null;\n      $leftDiv.remove();\n      $leftDiv = null;\n      $middleDiv.remove();\n      $middleDiv = null;\n      $rightDiv.remove();\n      $rightDiv = null;\n      $imgAction = null;\n      //contain list of bcc Mobile Numbers\n      $bccChkList.remove();\n      $bccChkList = null;\n      $mobileContainer.remove();\n      $mobileContainer = null;\n      if ($ulFieldNames != null) {\n        $ulFieldNames.remove();\n      }\n      $ulFieldNames = null;\n      $btnHdrSend.remove();\n      $btnHdrSend = null;\n      $btnHdrPreview = null;\n      self = null;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setHeight(800);\n      ch.setWidth(1600);\n      ch.setTitle(VIS.Msg.getMsg("Sms"));\n      ch.setModal(true);\n      ch.show();\n      $root = $(\'<div class="vis-sms-rootDiv"></div>\');\n      ch.setContent($root);\n      initializeComponent();\n    };\n    this.getRoot = function () {\n      return $root;\n    };\n    this.sizeChanged = function (height, width) {\n      formHeight = height;\n      formWidth = width;\n      if (isViewLoaded == true) {\n        setDesignOnSizeChange();\n      }\n    };\n  }\n  ;\n\n  //Must Implement with same parameter\n  Sms.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.windowNo = windowNo;\n    frame.hideHeader(true);\n    this.initializeComponent();\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n\n  //Must implement dispose\n  Sms.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.Sms = Sms;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/sms.js?')},"./Areas/VIS/Scripts/app/Framework/treemaintenance.js":()=>{eval(';\n(function (VIS, $) {\n  function VTreeMaintenance() {\n    this.frame;\n    this.windowNo;\n    var $self = this;\n    var $root = $(\'<div class="vis-forms-container" style="padding:3px 0 7px;background-color:white;height:100%"/>\');\n    var $leftTreeKeno;\n    //var $isSummary = false;\n    var $isSummary = true;\n    var selectedNode;\n    var $cmbSelectedType;\n    //  var $cmbSelectedID;\n    var $treeID;\n    var $cmbIsallnodes;\n    var TemplateTree = "";\n    var $dragMenuNodeID = 0;\n    var $treeDataObjectForMatch;\n    var pageLength = 50;\n    var pageNo = 1;\n    //var rightMenuSelectedID = 0;\n    var getIDFromContainer;\n    var dragMenuNodeIDArray = [];\n    var ExistItem = [];\n    var $checkMorRdragable = true;\n    var $downImg = null;\n    var $dragTreeDataNodeID;\n    var getParentID = 0;\n    var $bsyDiv = null;\n    var $bsyDivtreechnage = null;\n    var $bsyDivforbottom = null;\n    var $bsyDivMenu = null;\n    var $bsyDivTree = null;\n    var $scrollBottom = true;\n    var $dragtrue = true;\n    var $recodeCount = null;\n    var $getLifromTree;\n    var $getDataForTree;\n    var movingNode = null;\n    var tbname = null;\n    var searchRightext = "";\n    var $deleteResult = null;\n    var $midChildDrag = true;\n    var searchChildNode = null;\n    var pageNoForChild = 1;\n    var pageSizeForChild = 50;\n    var childlevel = 0;\n    var delNodId = 0;\n    var getMovingdiv = null;\n    var $chkValueFromDailog = false;\n    var $dropableItem = null;\n    var $getchildCount = false;\n    var $demandsMenu = "All";\n    var $rightmenuScroll = false;\n    var $setorderflagss = true;\n    var baseUrl = VIS.Application.contextUrl;\n    var dataSetUrl = baseUrl + "JsonData/JDataSet";\n    var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n    var $ldiv = $("<div  class=\'VIS-TM-left-tree\'>");\n    var $mdiv = $("<div  class=\'VIS-TM-middle\'>");\n    var $rdiv = $("<div class=\'VIS-TM-right-slide\'>");\n    var mouseEnter = false;\n    var $lTopLeftDiv = $(\'<div class="VIS-TM-data-head" style="padding-top: 8px;">\');\n    var $lTopRightDiv = $(\'<div class="VIS-TM-data">\');\n    var $chkSummaryLevel = $(\'<input disabled type="checkbox" checked="true" />\');\n    var $lblSummaryLevel = $(\'<span>\' + VIS.Msg.getMsg("OnlySummaryLevel") + \'<span/>\');\n    var $lblSelectTree = $(\'<h4>\' + VIS.Msg.getMsg("SelectTree") + \'</h4>\');\n    var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n    $lTopLeftDiv.append($lblSelectTree).append($lTopRightDiv.append($chkSummaryLevel).append($lblSummaryLevel));\n\n    //$lTopLeftDiv.append($lblSelectTree).append($lTopRightDiv);\n\n    var $lTopMidDiv = $(\'<div class="VIS-TM-treeCombo">\');\n    var $cmbSelectTree = $(\'<select></select>\');\n\n    //var $cmbRefresh = $(\'<input class="ass-btns search-icon" type="button" title=\' + VIS.Msg.getMsg("VIS_RefreshSelectTree") + \' >\');\n    //var $treeRefresh = $(\'<input class="ass-btns search-icon" type="button" style="margin-left: 5px;" title=\' + VIS.Msg.getMsg("VIS_RefreshTree") + \' >\')\n    var $treeRefresh = $(\'<span style="display:none" class="VIS-Tm-btnicon vis vis-refresh"  title=\' + VIS.Msg.getMsg("RefreshSelectTree") + \'></span>\');\n    var $cmbRefresh = $(\'<span class="VIS-Tm-btnicon vis vis-refresh" style="float:left" title="\' + VIS.Msg.getMsg("tmRefresh") + \'"></span>\');\n    //var $cmbRefresh = $(\'<span class="VIS-Tm-search-icontree glyphicon glyphicon-refresh" style="float:left"></span>\');\n\n    var $treeExpandColapse = $(\'<span class="VIS-Tm-btnicon fa fa-minus-square-o"  style="display:none;" title="\' + VIS.Msg.getMsg("TreeCollapse") + \'" ></span>\');\n    var $treeCollapseColapse = $(\'<span class="VIS-Tm-btnicon fa fa-plus-square-o" title="\' + VIS.Msg.getMsg("TreeExpand") + \'" ></span>\');\n\n    ////var ZoomTreeWindow = $(\'<span class="VIS-Tm-search-icontree glyphicon glyphicon-plus" style="float:left" title="\' + VIS.Msg.getMsg("CreateNewTree") + \'"></span>\');\n\n    ////var ZoomTreeWindow = $("<img class=\'VIS-Tm-zoombtn\'  src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/base/Info20.png\'></img>");\n\n    var ZoomTreeWindow = $("<i class=\'vis vis-find VIS-Tm-btnicon\' title=\'" + VIS.Msg.getMsg("CreateNewTree") + "\'></i>");\n    var treeCmbDisable = $(\'<div class="vis-tm-treeCmbDisable "></div>\');\n    $lTopMidDiv.append(treeCmbDisable).append($cmbSelectTree).append(ZoomTreeWindow).append($cmbRefresh).append($treeExpandColapse).append($treeCollapseColapse);\n\n    //$lTopMidDiv.append($cmbSelectTree).append($cmbRefresh);\n\n    var $treeBackDiv = $(\'<div class="VIS-TM-tree-wrap">\');\n    var $leftTreeDiv = $(\'<div class="VIS-TM-root-node" style="overflow:visible">\');\n\n    //        var topTreeDiv = $(\'<div style="width: 100%;height: 262px; overflow: auto;">\');\n\n    var topTreeDiv = $(\'<div class="vis-tm-topTreeDiv">\');\n    //////var topTreeDiv = $(\'<div style="width: 100%; overflow: auto;">\');\n\n    //$treeBackDiv.append($treeRefresh).append($leftTreeDiv);\n\n    $treeBackDiv.resizable({\n      handles: \'n,s,se\'\n    });\n    var $deleteArea = $(\'<div style="z-index:9;width:28px;display:none;text-align:center;float: right; height: 95%; position: absolute; right: 5px;"></div>\');\n    //var $deleteImage = $(\'<span class="glyphicon glyphicon-trash" style="display:none;position: relative;top: 50%;"></span>\');\n\n    var $deleteImage = $(\'<span class="VIS-Tm-deletetreenode" style="margin:auto;display:none;position: relative;top: 50%;"></span>\');\n    $deleteArea.append($deleteImage);\n    topTreeDiv.append($treeRefresh).append($deleteArea).append($leftTreeDiv);\n    $treeBackDiv.append(topTreeDiv);\n\n    //$treeBackDiv.append(topTreeDiv.append($treeRefresh).append($leftTreeDiv));\n\n    var $searchDiv = $("<div class=\'VIS-TM-tree-search\'>");\n    var $cmbSearch = $("<input disabled placeholder=\'" + VIS.Msg.getMsg("Search") + "\' type=\'search\'>");\n    //var $btnSearch = $("<input class=\'ass-btns search-icon\' type=\'button\'>");\n\n    //var $btnSearch = $("<input class=\'ass-btns search-icon glyphicon glyphicon-search\' style=\'top:0px\' type=\'button\'>");\n\n    var $btnSearch = $(\'<span class="VIS-Tm-btnicon vis vis-search"></span>\');\n    var $treeNodeSearch = $(\'<div class="vis-tm-b-s-ryt">\');\n    var $chktreeNode = $(\'<input type="checkbox" disabled>\');\n    //        var $lblNodetext = $(\'<label style="font-weight: normal;margin-bottom:0px">Tree Node</label>\');\n    var $lblNodetext = $(\'<label style="font-weight: normal;margin-bottom:0px">\' + VIS.Msg.getMsg("NodeItem") + \'</label>\');\n    $treeNodeSearch.append($chktreeNode).append($lblNodetext);\n    var crossImages = $(\'<span class="vis-tmlinkdel-icon"></span>\');\n    $searchDiv.append($cmbSearch).append(crossImages).append($treeNodeSearch).append($btnSearch);\n\n    //var $mTopHeader = $("<div class=\'VIS-TM-data-head\'>");\n\n    var $mTopHeader = $("<div class=\'VIS-TM-data-headMID\'>");\n\n    //var $deleteChild = $(\'<div class="glyphicon glyphicon-trash" style="float:right" ></div>\');\n\n    //var $deleteChild = $("<span style=\'cursor:pointer;font-size:18px;float:right;margin:9px 0\'  class=\'glyphicon glyphicon-trash vis-tm-delete\' title=\'" + VIS.Msg.getMsg("VA005_DeleteChild") + "\' ></span>");\n    //var $deleteChild = $("<span style=\'margin-top:10px;margin-bottom:4px\' class=\'VIS-Tm-search-icontree glyphicon glyphicon-trash vis-tm-delete\' title=\'" + VIS.Msg.getMsg("DeleteChild") + "\' ></span>");\n    /////var $deleteChild = $("<span style=\'margin-top:10px;margin-bottom:4px\' class=\'VIS-Tm-search-icontree VIS-Tm-unlinkforbottmo vis vis-link \' title=\'" + VIS.Msg.getMsg("DeleteChild") + "\' ></span>");\n\n    var $deleteChild = $("<span style=\'display:inherit;\' class=\'VIS-Tm-unlinkforbottmo vis vis-link \' title=\'" + VIS.Msg.getMsg("UnlinkNode") + "\' ></span>");\n\n    //"<span style=\'cursor:pointer;font-size:18px;\'  class=\'glyphicon glyphicon-trash\' title=\'" + VIS.Msg.getMsg("VA005_DeleteChild") + "\' ></span>"\n\n    var $lblMh4 = $(\'<h4 style="float:left">\' + VIS.Msg.getMsg("SelectTree") + \'</h4>\');\n    var $mData = $("<div class=\'VIS-TM-dataWrap\' style=\'padding-top:0px\' >");\n    var $recordeNotFound = $(\'<span class="VIS-TM-recordeNotFound">\' + VIS.Msg.getMsg("TMRecordNotFound") + \'</span>\');\n    var $ulMid = $(\'<ul class="vis-tm-sortable" style="list-style: none;padding:0">\');\n    var $chkAllCheckOrNot = $(\'<input type="checkbox" disabled />\');\n    var $checkSearchOrNot = $(\'<span class="vis vis-search" style="display:none;cursor:pointer;float:left;margin: 14px 0 0 6px;font-size: 10px;" ></span>\');\n    $mData.append($ulMid).append($recordeNotFound);\n    //  $mTopHeader.append($chkAllCheckOrNot).append($lblMh4.append($checkSearchOrNot)).append($deleteChild);\n\n    //var $squenceDailog = $("<span style=\'display:inherit;margin-top:10px;margin-bottom:4px\' class=\'VIS-Tm-unlinkforbottmo \' title=\'" + VIS.Msg.getMsg("UnlinkNode") + "\' ></span>");\n\n    /////var $squenceDailog = $("<span style=\'display:inherit;margin-top:10px;margin-bottom:4px\' class=\'vis-tm-childnodeinidailog glyphicon glyphicon-list-alt\' title=\'" + VIS.Msg.getMsg("SetOrder") + "\' ></span>");\n\n    var $squenceDailog = $(\'<span style="display:inherit;" class="vis-tm-childnodeinidailog" title="\' + VIS.Msg.getMsg("SetOrder") + \'">Set Order</span>\');\n    $squenceDailog.addClass("vis-tm-delete");\n    var mMouseRestrict = $(\'<div style="display:none;position:absolute;height: 40.2px;width: 100%; z-index: 5;"></div>\');\n    $mTopHeader.append(mMouseRestrict).append($chkAllCheckOrNot).append($lblMh4).append($checkSearchOrNot).append($squenceDailog).append($deleteChild);\n    ////$mTopHeader.append($chkAllCheckOrNot).append($lblMh4).append($checkSearchOrNot).append($squenceDailog).append($deleteChild);\n\n    //        $mTopHeader.append($lblMh4).append($deleteChild);\n\n    var $rTopHeard = $("<div class=\'VIS-TM-data-head\'>");\n    var $lblRh4 = $(\'<h4>\' + VIS.Msg.getMsg("AllItems") + \'</h4>\');\n    var $rightDataDiv = $("<div class=\'VIS-TM-dataWrap\'>");\n    var $ulBackDiv = $("<div class=\'VIS-TM-treeList\'>");\n    var $ulRight = $("<ul style=\'list-style: none\' class=\'scrolldrag\' >");\n    var $cmbRightSearch = $("<input disabled placeholder=\'" + VIS.Msg.getMsg("Search") + "\' type=\'search\'>");\n    //var $btnRightSearch = $("<input class=\'ass-btns search-icon\' type=\'button\'>");\n\n    var $btnRightSearch = $(\'<span class="VIS-Tm-btnicon vis vis-search" style="top:0px;float:none"></span>\');\n    var $pathRightlist = $("<div class=\'VIS-TM-path\'>");\n    var $pathInfo = $("<i style=\'font-weight:600\'>");\n    var $rightMenuDemand = $(\'<select disabled style="float: right; min-width: 100px"></select>\');\n    var $lblGetMenu = $(\'<span style="margin: 0 7px;">\' + VIS.Msg.getMsg("Show") + \'<span/>\');\n\n    //$rTopHeard.append($lblRh4).append($lblGetMenu).append($rightMenuDemand);\n\n    // var $chkTrace = $(\'<input type="checkbox" disabled style="margin-right:25px;float:left" />\');\n\n    var $chkTrace = $(\'<input type="checkbox"  style="float:left;margin-right:5px" disabled  />\');\n    //        var $lblTrace = $(\'<span style="float:left;margin-right:2px">\' + VIS.Msg.getMsg("TraceItem") + \'<span/>\');\n\n    var $lblTrace = $(\'<span>\' + VIS.Msg.getMsg("TraceItem") + \'<span/>\');\n    var $chkAllRightPannel = $(\'<input type="checkbox" disabled />\');\n    var unlinkeAllNode = $(\'<span class="vis-unlinkallNodes vis-tm-opacity" title="\' + VIS.Msg.getMsg("UnlinkItem") + \'"  ><b></b><b></b><b></b></span>\');\n\n    //$rTopHeard.append($chkAllRightPannel).append($lblRh4).append($(\'<div style="float: right;">\').append($lblTrace).append($chkTrace).append($lblGetMenu).append(unlinkeAllNode).append($rightMenuDemand));\n\n    $rTopHeard.append($chkAllRightPannel).append($lblRh4).append($(\'<div class="vis-tm-r-list-w">\').append($lblGetMenu).append($rightMenuDemand).append(unlinkeAllNode));\n\n    //$rightDataDiv.append($ulBackDiv.append($ulRight)).append($pathRightlist.append($pathInfo));\n    //$rightDataDiv.append($cmbRightSearch).append($btnRightSearch).append($ulBackDiv.append($ulRight)).append($pathRightlist.append($pathInfo));\n    //var $secoundDiv = $(\'<div style="height: 50%;float: left;width: 100%;padding-top: 15px;">\');\n\n    //var $secoundDiv = $(\'<div style="height: 25%;float:left;width:100%;overflow:auto">\');\n    //        var $secoundDiv = $(\'<div style="float:left;width:100%;overflow:auto;">\');\n\n    //var nodeItemDelwithdrag = $(\'<div style="width: 28px; text-align: center; float: right; height: 50%; position: absolute; right: 5px; display: block; background-color: rgb(255, 192, 203);" class=""><span class="VIS-Tm-deletetreenode" style="margin: auto; position: relative; top: 50%; display: block;"></span></div>\');\n\n    var nodeItemDelwithdrag = $(\'<div class="vis-tm-nodeItemDeleteliketopdiv"><span class="VIS-Tm-deletetreenode vis-tm-nodeItemDeletespans" ></span></div>\');\n    var $secoundDiv = $(\'<div style="float:left;width:100%;">\');\n    var bottomdivdisable = $(\'<div style="z-index:999;height:100%;display:none;position:absolute; left:0; right:0; top:0; bottom:0;"></div>\');\n    $secoundDiv.append(bottomdivdisable).append($mTopHeader).append($mData).append(nodeItemDelwithdrag);\n    var leftMianDataDiv = $(\'<div class="VIS-TM-leftMianDataDiv">\');\n    //var leftMianDataDiv = $(\'<div style="height:calc(100% - 118px);height:-moz-calc(100%-118px);height:-webkit-calc(100%- 118px);position:relative;z-index:2;float:left;width:100%;">\');\n\n    leftMianDataDiv.append($treeBackDiv).append($secoundDiv);\n    var leftstopdiv = $(\'<div style="display:none;height: 100%; width: 100%; position: absolute;z-index: 9999;"></div>\');\n    $ldiv.append(leftstopdiv).append($(\'<div style="height:100%;" >\').append($lTopLeftDiv).append($lTopMidDiv).append(leftMianDataDiv).append($searchDiv));\n    //$ldiv.append($(\'<div style="height:100%" >\').append($lTopLeftDiv).append($lTopMidDiv).append($treeBackDiv).append($searchDiv));\n\n    //   $mdiv.append($(\'<div style="height:100%">\').append($mTopHeader).append($mData));\n\n    var $SearchRightTopWrap = $(\'<div class="VIS-TM-Righttree-search" >\');\n\n    //var $SearchRightTopWrap = $(\'<div class="VIS-TM-tree-search" >\');\n\n    var rightCrossImage = $(\'<span class="vis-tmlinkdel-icon"></span>\');\n    $SearchRightTopWrap.append($cmbRightSearch).append(rightCrossImage).append($btnRightSearch);\n\n    //$rightDataDiv.append($(\'<div>\').append($SearchRightTopWrap)).append($ulBackDiv.append($ulRight)).append($pathRightlist.append($pathInfo));\n\n    var $recordeNotFoundRight = $(\'<span class="VIS-TM-recordeNotFound" style="margin-top:50%" >\' + VIS.Msg.getMsg("TMRecordNotFound") + \'</span>\');\n    var onDisableDiv = $(\'<div style="z-index:999;height:100%;display:none;position:absolute; left:0; right:0; top:0; bottom:0;"></div>\');\n    //$rightDataDiv.append($SearchRightTopWrap).append($ulBackDiv.append(onDisableDiv).append($ulRight).append($recordeNotFoundRight)).append($pathRightlist.append($pathInfo));\n    $rightDataDiv.append(onDisableDiv).append($SearchRightTopWrap).append($ulBackDiv.append($ulRight).append($recordeNotFoundRight)).append($pathRightlist.append($pathInfo));\n\n    ///$rightDataDiv.append($SearchRightTopWrap).append($ulBackDiv.append($ulRight).append($recordeNotFoundRight)).append($pathRightlist.append($pathInfo));\n\n    //$rightDataDiv.append($SearchRightTopWrap).append($ulBackDiv.append($ulRight)).append($pathRightlist.append($pathInfo));\n\n    $rdiv.append($(\'<div  style="height:100%">\').append($rTopHeard).append($rightDataDiv));\n\n    //$rdiv.append($(\'<div  style="height:100%">\').append($rTopHeard).append($rightDataDiv));\n    $root.append($ldiv).append($rdiv);\n    //$root.append($ldiv).append($mdiv).append($rdiv);\n\n    function GetTreeNameForCombo() {\n      // $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/TreeDataForCombo",\n        success: function (data) {\n          var res = JSON.parse(data);\n          if (res) {\n            $cmbSelectTree.append($("<Option value=\'\'> </option>"));\n            for (var i = 0; i < res.length; i++) {\n              $cmbSelectTree.append($("<Option value=" + res[i].ID + " data-type=\'" + res[i].TreeType + "\' data-isallnodes=\'" + res[i].IsAllNodes + "\'  >" + VIS.Utility.encodeText(res[i].Name) + "</option>"));\n            }\n          }\n          if (selectedNode != null) {\n            $cmbSelectTree.val(selectedNode.attr("value"));\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "visible";\n        }\n      });\n    }\n    ;\n    function cmbTreeOnRefresh() {\n      treeCmbDisable.css("display", "none");\n      $treeID = 0;\n      $ulRight.empty();\n      $ulMid.empty();\n      //$leftTreeKeno.data("kendoTreeView").destroy();\n      //$leftTreeKeno.empty();\n      $pathInfo.empty();\n      searchRightext = "";\n      $cmbRightSearch.val("");\n      selectedNode = null;\n      $deleteChild.addClass("vis-tm-delete");\n      $cmbSearch.val("");\n      window.setTimeout(function () {\n        $ulRight.empty();\n        $leftTreeKeno.data("kendoTreeView").destroy();\n        $leftTreeKeno.empty();\n      }, 200);\n      $lblRh4.text(VIS.Msg.getMsg("SelectTree"));\n      $lblMh4.text(VIS.Msg.getMsg("SelectTree"));\n      //$recordeNotFoundRight.css("display", "inherit");\n      $recordeNotFound.css("display", "none");\n      $squenceDailog.addClass("vis-tm-delete");\n      $chktreeNode.prop("disabled", true);\n      $chkTrace.prop("disabled", true);\n      $chktreeNode.css("cursor", "not-allowed");\n      $chkTrace.css("cursor", "not-allowed");\n      $cmbSearch.prop("disabled", true);\n      $cmbRightSearch.prop("disabled", true);\n      $rightMenuDemand.prop("disabled", true);\n      $chkAllRightPannel.prop("disabled", true);\n      $chkAllRightPannel.css("cursor", "not-allowed");\n      rightCrossImage.css("display", "none");\n      crossImages.css("display", "none");\n      $chkTrace.prop("checked", false);\n      $chkAllRightPannel.prop("checked", false);\n      $chktreeNode.prop("checked", false);\n      $chkAllCheckOrNot.prop("checked", false);\n    }\n    ;\n    function GetCountOnTreeChanges() {\n      var table_id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableID", {\n        "treeId": $treeID\n      }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n\n      var tablename = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableName", {\n        "table_id": table_id\n      }, null);\n      TreeTableName();\n      var count = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetRecordCount", {\n        "tablename": tablename,\n        "tableTreeName": tableTreeName,\n        "treeId": $treeID\n      }, null);\n      if (count > 0) {\n        chkCountForrestriction = true;\n      } else {\n        chkCountForrestriction = false;\n      }\n      if (bindornot == "false") {\n        if (sqlQry == convertmenuArray.length) {\n          var ids = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetNodeIds", {\n            "tableTreeName": tableTreeName,\n            "treeId": $treeID\n          }, null);\n          if (ids != null) {\n            var node_Idss = null;\n            for (var t = 0; t < ids.length; t++) {\n              node_Idss = ids[t];\n              if ($.inArray(node_Idss, convertmenuArray) < 0) {\n                chkCountForrestriction = true;\n                break;\n              } else {\n                chkCountForrestriction = false;\n              }\n            }\n          }\n        }\n      }\n    }\n    ;\n    var chkCountForrestriction = false;\n    function TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary) {\n      // $bsyDiv[0].style.visibility = "visible";\n      $bsyDivTree[0].style.visibility = "visible";\n      if (!$chkSummaryLevel.is(":checked")) {\n        GetCountForRestriction();\n        if ($chkSummaryLevel.is(":checked")) {\n          $isSummary = true;\n        } else {\n          $isSummary = false;\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/BindTree",\n        type: \'Post\',\n        data: {\n          treeType: $cmbSelectedType,\n          AD_Tree_ID: $treeID,\n          isAllNodes: $cmbIsallnodes,\n          isSummary: $isSummary\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            LoadTreeData(result);\n            window.setTimeout(function () {\n              window.setTimeout(function () {\n                if ($cmbSelectTree.val() == "") {\n                  cmbTreeOnRefresh();\n                } else if ($cmbSelectTree.val() == null) {\n                  cmbTreeOnRefresh();\n                }\n                GetCountOnTreeChanges();\n              }, 400);\n            }, 500);\n            $getDataForTree = result;\n            $treeDataObjectForMatch = result.settree;\n          }\n          // SetTreeHeight();\n          //  $bsyDiv[0].style.visibility = "hidden";\n          $bsyDivTree[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          console.log(e);\n          //   $bsyDiv[0].style.visibility = "hidden";\n          $bsyDivTree[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    function AskForMoreRecorde() {\n      $treeNodeSearch.css("display", "none");\n      //$cmbSearch.css("border-right", "none");\n      $isSummary = false;\n      $secoundDiv.css("display", "none");\n      //$treeBackDiv.css("border-bottom", "0px");\n      $treeBackDiv.css("height", "100%");\n      topTreeDiv.css("height", "100%");\n      $treeBackDiv.resizable(\'destroy\');\n      topTreeDiv.removeClass("VIS-TM-resizediv");\n      if (selectedNode != null) {\n        TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n      }\n    }\n    ;\n    var searchflag = true;\n    var clickontreenode = true;\n    function LoadTreeData(result) {\n      //$bsyDiv[0].style.visibility = "visible";\n      $bsyDivTree[0].style.visibility = "visible";\n      treeCmbDisable.css("display", "inherit");\n      if ($leftTreeKeno && $leftTreeKeno.data("kendoTreeView") != undefined) {\n        $leftTreeKeno.data("kendoTreeView").destroy();\n        $leftTreeKeno.empty();\n      }\n      $leftTreeKeno = $leftTreeDiv.kendoTreeView({\n        autoScroll: true,\n        dragAndDrop: true,\n        drag: onDrag,\n        drop: onDrop,\n        dataSource: result.settree,\n        select: function (e) {\n          $bsyDivforbottom[0].style.visibility = "visible";\n          if ($chkSummaryLevel.is(":checked")) {\n            leftstopdiv.css("display", "inherit");\n          }\n          $setorderflagss == true;\n          $ulMid.empty();\n          $chkAllCheckOrNot.prop("checked", false);\n          $leftTreeDiv.find(".k-state-selected").removeClass("k-state-selected");\n          $(e.node).find(".k-state-hover").addClass("k-state-selected").removeClass("k-state-hover");\n          var selectNodeText = $($($(e.node).find(".treechild")[0]).find("p")).text();\n          $lblMh4.text(selectNodeText);\n          getParentID = $($(e.node).find(".treechild")[0]).attr("data-nodeid");\n          $scrollBottom = true;\n\n          //$squenceDailog.removeClass("vis-tm-delete");\n\n          existItss = -1;\n          $deleteChild.addClass("vis-tm-delete");\n          $recordeNotFound.css("display", "none");\n          searchflag = false;\n          $leftTreeDiv.find(".vis-tm-selectedkendoNode").removeClass("vis-tm-selectedkendoNode");\n          $leftTreeDiv.find(".k-state-selected").find("p").addClass("vis-tm-selectedkendoNode");\n          window.setTimeout(function () {\n            $leftTreeDiv.find(".vis-tm-selectedkendoNode").removeClass("vis-tm-selectedkendoNode");\n            $leftTreeDiv.find(".k-state-selected").find("p").addClass("vis-tm-selectedkendoNode");\n            pageNoForChild = 1;\n            pageSizeForChild = 50;\n            if ($chktreeNode.is(":checked")) {\n              searchChildNode = $cmbSearch.val();\n            } else {\n              searchChildNode = "";\n            }\n\n            //  searchChildNode = $cmbSearch.val();\n            if ($chktreeNode.is(":checked")) {\n              getTreeNodeChkValue = "true";\n            } else {\n              getTreeNodeChkValue = "false";\n            }\n            window.setTimeout(function () {\n              getParentID = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n              if ($chkSummaryLevel.is(":checked")) {\n                $leftTreeDiv.find(".k-state-hover").removeClass("k-state-hover");\n                GetDataTreeNodeSelect(getParentID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n              }\n            }, 300);\n          }, 300);\n        },\n        template: "<div class=\'treechild\'  data-getparentnode=\'#= item.getparentnode #\'       data-IsSummary=\'#= item.IsSummary #\' data-TableName=\'#= item.TableName #\' data-NodeID=\'#= item.NodeID #\'   data-TreeParentID=\'#= item.TreeParentID #\' data-ParentID=\'#= item.ParentID #\'  >" +\n        //"<div class=\'imgdivTree\' style=\'float:left;margin-top:3px\'>" +\n        //"<img src=\'" + VIS.Application.contextUrl + "#= item.ImageSource #\' style=\'height:20px\' >" +\n        //"</div>" +\n\n        "<div class=\'imgdivTree\'>" + "<i class=\'fa fa-folder-o\' data-imgsrc=\'#= item.ImageSource #\'></i>" + "</div>" +\n        //"<div class=\'textdivTree VIS-TM-textdivTreedata\' style=\'float:left;margin:3px 5px 0 10px\'>" +\n\n        "<div class=\'textdivTree\'>" + "<p>" + VIS.Utility.encodeText("#= item.text #") + "</p>" +\n        //"<p>#= item.text #</p>" +\n        "</div>" + "</div>"\n      });\n      DropMenu();\n      $leftTreeKeno.find(".k-plus").on("click", function () {\n        if ($(this).hasClass("k-minus")) {\n          $treeCollapseColapse.css("display", "inherit");\n          $treeExpandColapse.css("display", "none");\n          //                    alert("minus");\n        }\n        if ($(this).hasClass("k-plus")) {\n          $treeExpandColapse.css("display", "inherit");\n          $treeCollapseColapse.css("display", "none");\n          //alert("plus");\n        }\n      });\n      $leftTreeKeno.find(".k-in").on("dblclick", function (event) {\n        if ($($leftTreeDiv.find(".k-state-selected").parent().find("span")[0]).hasClass("k-minus")) {\n          $treeCollapseColapse.css("display", "inherit");\n          $treeExpandColapse.css("display", "none");\n        }\n        if ($($leftTreeDiv.find(".k-state-selected").parent().find("span")[0]).hasClass("k-plus")) {\n          $treeExpandColapse.css("display", "inherit");\n          $treeCollapseColapse.css("display", "none");\n        }\n      });\n      window.setTimeout(function () {\n        treeCmbDisable.css("display", "none");\n      }, 200);\n      if (changeSeqFlag == true) {\n        $leftTreeKeno.data("kendoTreeView").expand(".k-item");\n        //$leftTreeDiv.find("div").find("div[data-nodeid=\'" + onseqSelectID + "\']").parent().addClass("k-state-selected")[0].scrollIntoView();\n\n        $leftTreeDiv.find("div").find("div[data-nodeid=\'" + onseqSelectID + "\']").parent().addClass("k-state-selected");\n        if ($leftTreeDiv.find("span").hasClass("k-state-selected")) {\n          $leftTreeDiv.find("div").find("div[data-nodeid=\'" + onseqSelectID + "\']").parent().addClass("k-state-selected")[0].scrollIntoView();\n        }\n      }\n      if ($cmbSearch.val() != "") {\n        SearchNodeInTree(chksearchvalues);\n      }\n      SelectedNodeColor();\n      window.setTimeout(function () {\n        if ($cmbSearch.val() != "") {\n          SearchNodeInTree(getEvalueforsearch);\n        }\n      }, 200);\n      CreateRestrictionforDelete();\n    }\n    ;\n    var gatDenideImg = null;\n    var draggingItemsss = null;\n    var appenddivforImg = $(\'<div class="vis-tm-unlinkimgss">\');\n    var treeTop = 0;\n    function onDrag(e) {\n      chksearchvalues = e;\n      $secoundDiv.addClass("vis-tm-bottomdivdisable");\n      bottomdivdisable.css("display", "inherit");\n      onDisableDiv.css("display", "inherit");\n      $dragTreeDataNodeID = $(e.sourceNode).find(".treechild").attr("data-nodeid");\n      movingNode = $(e.sourceNode).find(".treechild").parent().parent().parent();\n      draggingItemsss = $(e.sourceNode);\n      gatDenideImg = this.dragging._draggable.hint.find(".k-denied");\n\n      // $treeRefresh.css("display", "none");\n\n      $($leftTreeDiv.find("ul")[0]).css("width", "95%");\n      $deleteArea.addClass("VIS-TM-ondragdrop");\n      if ($dragTreeDataNodeID != 0) {\n        $deleteImage.css("display", "inherit");\n        $deleteArea.css("display", "inherit");\n      }\n      if ($(e.sourceNode).find(".treechild").attr("data-nodeid") == 0) {\n        e.setStatusClass("k-denied");\n      }\n      if ($(e.dropTarget).parent().parent().attr("data-issummary") == "false") {\n        e.setStatusClass("k-denied");\n      }\n      if ($(e.dropTarget).parent().parent().parent().parent().parent().find(".treechild").attr("data-issummary") == "false") {\n        e.setStatusClass("k-denied");\n      }\n      if ($(e.dropTarget).hasClass("k-top")) {\n        if ($(e.dropTarget).find(".treechild").attr("data-issummary") == "false") {\n          e.setStatusClass("k-denied");\n        }\n      }\n      if ($(e.dropTarget).hasClass("k-item")) {\n        e.setStatusClass("k-denied");\n      }\n      if (this.dragging._draggable.hint.find(".k-add").length == 1) {\n        if ($(e.dropTarget).parent().attr("data-issummary") == "false") {\n          e.setStatusClass("k-denied");\n        }\n      }\n      if ($(e.dropTarget).parent().find(".textdivTree").length == 1 && this.dragging._draggable.hint.find(".k-add").length == 1) {\n        e.setStatusClass("k-denied");\n      }\n      if ($(e.dropTarget).attr("aria-expanded") == "true" || $(e.dropTarget).attr("aria-expanded") == "false") {\n        e.setStatusClass("k-denied");\n      }\n      if ($(e.dropTarget).hasClass("selectchangecolor")) {\n        gatDenideImg.css("display", "none");\n        //                gatDenideImg.parent().addClass("glyphicon glyphicon-trash");\n\n        gatDenideImg.parent().prepend(appenddivforImg);\n        gatDenideImg.parent().find(".vis-tm-unlinkimgss").css("display", "inherit");\n      } else {\n        gatDenideImg.css("display", "inherit");\n        //gatDenideImg.parent().removeClass("glyphicon glyphicon-trash");\n\n        gatDenideImg.parent().find(".vis-tm-unlinkimgss").css("display", "none");\n      }\n      if ($(e.dropTarget).hasClass("glyphicon glyphicon-trash")) {\n        gatDenideImg.css("display", "none");\n        gatDenideImg.parent().prepend(appenddivforImg);\n      }\n      $downImg = this.dragging._draggable.hint.find("span").hasClass("k-insert-bottom");\n      if ($downImg) {\n        e.setStatusClass("k-denied");\n      }\n      if ($(e.dropTarget).hasClass("k-state-hover")) {\n        if ($(e.dropTarget).find(".treechild").attr("data-issummary") == "false") {\n          e.setStatusClass("k-denied");\n        }\n      }\n      if ($(e.dropTarget).hasClass("VIS-TM-root-node")) {\n        e.setStatusClass("k-denied");\n      }\n    }\n    ;\n    var trenodeselectedId = 0;\n    function onDrop(e) {\n      trenodeselectedId = 0;\n      trenodeselectedId = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n      chksearchvalues = e;\n      $mData.css("overflow", "auto");\n      $rightDataDiv.css("overflow", "auto");\n      $ulBackDiv.css("overflow", "auto");\n      $secoundDiv.removeClass("vis-tm-bottomdivdisable");\n      bottomdivdisable.css("display", "none");\n      onDisableDiv.css("display", "none");\n      if (e.sourceNode.previousSibling == e.destinationNode && e.dropPosition == "after") {\n        e.preventDefault();\n        $deleteArea.removeClass("VIS-TM-ondragdrop");\n        $deleteArea.css("display", "none");\n        $deleteImage.css("display", "none");\n        return;\n      }\n      if (e.sourceNode.nextSibling == e.destinationNode && e.dropPosition == "before") {\n        e.preventDefault();\n        $deleteArea.removeClass("VIS-TM-ondragdrop");\n        $deleteArea.css("display", "none");\n        $deleteImage.css("display", "none");\n        return;\n      }\n      if (e.dropPosition == "after") {\n        if ($(e.dropTarget).parent().attr("data-nodeid") == 0) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          // $treeRefresh.css("display", "inherit");\n          return;\n        }\n        if ($(e.dropTarget).find(".treechild").attr("data-nodeid") == 0) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          // $treeRefresh.css("display", "inherit");\n          return;\n        }\n        if ($(e.dropTarget).hasClass("k-minus")) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          //$treeRefresh.css("display", "inherit");\n          return;\n        }\n        //if ($(e.dropTarget).hasClass("textdivTree")) {\n        //    e.preventDefault();\n        //    $deleteArea.removeClass("VIS-TM-ondragdrop");\n        //    $deleteArea.css("display", "none");\n        //    $deleteImage.css("display", "none");\n        //    // $treeRefresh.css("display", "inherit");\n        //    return;\n        //}\n      }\n      if (e.dropPosition == "before") {\n        if ($(e.dropTarget).find(".treechild").attr("data-nodeid") == 0) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          //$treeRefresh.css("display", "inherit");\n          return;\n        }\n        if ($(e.dropTarget).hasClass("k-minus")) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          //  $treeRefresh.css("display", "inherit");\n          return;\n        }\n        if ($(e.dropTarget).parent().hasClass("imgdivTree")) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          //  $treeRefresh.css("display", "inherit");\n          return;\n        }\n        if ($(e.dropTarget).hasClass("VIS-TM-tree-wrap")) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          // $treeRefresh.css("display", "inherit");\n          return;\n        } //\\\\\\\\\\\\\\\\\\\\\\\\\\\n        if ($(e.dropTarget).parent().hasClass("k-bot")) {\n          if ($($($(e.dropTarget).parent()).parent()).parent().attr(\'role\') != \'group\') {\n            e.preventDefault();\n            $deleteArea.removeClass("VIS-TM-ondragdrop");\n            $deleteArea.css("display", "none");\n            $deleteImage.css("display", "none");\n            //$treeRefresh.css("display", "inherit");\n            return;\n          }\n        }\n        if ($(e.dropTarget).parent().hasClass("textdivTree")) {\n          if ($(e.dropTarget).parent().parent().attr("data-nodeid") == 0) {\n            e.preventDefault();\n            $deleteArea.removeClass("VIS-TM-ondragdrop");\n            $deleteArea.css("display", "none");\n            $deleteImage.css("display", "none");\n            //  $treeRefresh.css("display", "inherit");\n            return;\n          }\n        }\n      }\n      if (e.dropPosition == "over") {\n        if ($(e.dropTarget).parent().attr("data-issummary") == "false") {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          // $treeRefresh.css("display", "inherit");\n          return;\n        }\n        if ($(e.dropTarget).find(".treechild").attr("data-nodeid") == 0) {\n          e.preventDefault();\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n          // $treeRefresh.css("display", "inherit");\n          return;\n        }\n      }\n\n      //  $bsyDiv[0].style.visibility = "visible";\n\n      if ($deleteArea.hasClass("selectchangecolor")) {\n        $($(this.dragging._draggable.hint)).animate({\n          left: \'250px\',\n          opacity: \'0.5\',\n          height: \'2px\',\n          width: \'2px\'\n        }, 1000);\n      }\n      $deleteArea.removeClass("VIS-TM-ondragdrop");\n      $deleteArea.css("display", "none");\n      $deleteImage.css("display", "none");\n      // $treeRefresh.css("display", "inherit");\n\n      if (gatDenideImg.hasClass("k-denied")) {\n        if (!$deleteArea.hasClass("selectchangecolor")) {\n          return;\n        }\n      }\n      treeType = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTreeType", {\n        "treeId": $treeID\n      }, null);\n      if (treeType == "PR") {\n        tbname = "AD_TreeNodePR";\n      } else if (treeType == "BP") {\n        tbname = "AD_TreeNodeBP";\n      } else if (treeType == "MM") {\n        tbname = "AD_TreeNodeMM";\n      } else {\n        tbname = "AD_TreeNode";\n      }\n      var $dropTreeDataNodeIDasParentID = $leftTreeKeno.find(".k-state-hover").find(".treechild").attr("data-nodeid");\n      var isSummary = $leftTreeKeno.find(".k-state-hover").find(".treechild").attr("data-issummary");\n      if (isSummary == "true") {\n        SaveTreeDragDrop($treeID, $dragTreeDataNodeID, $dropTreeDataNodeIDasParentID);\n        var cNode = $(e.destinationNode);\n        $bsyDiv[0].style.visibility = "visible";\n\n        //---------------------------------\n\n        window.setTimeout(function () {\n          $bsyDiv[0].style.visibility = "visible";\n          moveDraggedItemToFirstPalce(cNode);\n          if ($cmbSearch.val() != "") {\n            SearchNodeInTree(e);\n          }\n          SelectedNodeColor();\n          dblSelectedNod();\n          $bsyDiv[0].style.visibility = "hidden";\n        }, 100);\n\n        //--------------------\n\n        return;\n      } else {\n        var isSummary = $(e.destinationNode).parent().parent().find(".treechild").attr("data-issummary");\n        if (e.sourceNode === e.destinationNode) {\n          e.setValid(false);\n          $bsyDiv[0].style.visibility = "hidden";\n          return;\n        }\n        ;\n        dblSelectedNod();\n      }\n      if (trenodeselectedId > 0) {\n        window.setTimeout(function () {\n          $leftTreeDiv.find(".k-state-selected").removeClass("k-state-selected");\n          $($leftTreeDiv.find("div").find("div[data-nodeid=\'" + trenodeselectedId + "\']").parent()).addClass("k-state-selected");\n          SelectedNodeColor();\n        }, 200);\n      }\n      if ($(e.destinationNode).parent().parent().parent().attr("role") == "tree") {\n        var cNode = $(e.destinationNode);\n        $bsyDiv[0].style.visibility = "visible";\n        var droppossitions = e.dropPosition;\n        var soursenodes = e.sourceNode;\n        var getparentornot = $($(e.sourceNode.parentElement).parent().find(".k-in")[0]).find(".treechild").attr("data-nodeid");\n        window.setTimeout(function () {\n          $bsyDiv[0].style.visibility = "visible";\n          var ulss = cNode.parent().children();\n          if (ulss.length > 0) {\n            var sequence = 0;\n            sequence = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetSeqNo", {\n              "treeId": $treeID,\n              "tblName": tbname,\n              "nodeId": cNode.find(".treechild").attr("data-nodeid")\n            }, null);\n            if (droppossitions == "after") {\n              sequence = sequence + 1;\n            }\n            VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/UpdateSeqNo", {\n              "treeId": $treeID,\n              "tblName": tbname,\n              "seqNo": sequence,\n              "bySeqNo": true,\n              "isParent": false\n            }, null);\n            var setmoveSeq = $(soursenodes).find(".treechild").attr("data-nodeid");\n            if (getparentornot > 0) {\n              VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/UpdateSeqNo", {\n                "treeId": $treeID,\n                "tblName": tbname,\n                "seqNo": sequence,\n                "nodeId": setmoveSeq,\n                "bySeqNo": false,\n                "isParent": true\n              }, null);\n            } else {\n              VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/UpdateSeqNo", {\n                "treeId": $treeID,\n                "tblName": tbname,\n                "seqNo": sequence,\n                "nodeId": setmoveSeq,\n                "bySeqNo": false,\n                "isParent": false\n              }, null);\n            }\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        }, 600);\n      } else {\n        // var childs = $($(e.sourceNode).find(".treechild").parent().parent().parent().parent().parent()).find("li");\n\n        var $destibation = $(e.destinationNode);\n        if ($destibation.length == 0) {\n          delNodId = $(e.sourceNode).find(".treechild").attr("data-nodeid");\n          getMovingdiv = $(e.sourceNode).find(".treechild").parent().parent().parent();\n          if ($deleteArea.hasClass("selectchangecolor")) {\n            DailogForDelete();\n          } else {\n            $deleteArea.removeClass("VIS-TM-ondragdrop");\n            $deleteArea.css("display", "none");\n            $deleteImage.css("display", "none");\n            $bsyDiv[0].style.visibility = "hidden";\n            return;\n          }\n\n          //var delNodId     = $(e.sourceNode).find(".treechild").attr("data-nodeid");\n          //var getMovingdiv = $(e.sourceNode).find(".treechild").parent().parent().parent();\n          // DeleteNodeFromTree($treeID, delNodId, getMovingdiv);\n          //window.setTimeout(function ()\n          //{\n          //    //if (flagDelete == false)\n          //    //{\n          //    //    if ($deleteResult == "") {\n          //    //        getMovingdiv.remove();\n          //    //        pageNo = 1;\n          //    //        $ulRight.empty();\n          //    //        LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n          //    //    }\n          //    //}\n          //}, 200);\n          return;\n        }\n\n        //var pid = $(movingNode.parent().parent().find(".treechild")[0]).attr("data-nodeid");\n\n        var destElement = e.destinationNode.parentElement;\n        var sourceElement = e.sourceNode.parentElement;\n        var destinationNode = e.destinationNode;\n        var SourceNode = e.sourceNode;\n        $bsyDiv[0].style.visibility = "visible";\n        window.setTimeout(function () {\n          $bsyDiv[0].style.visibility = "visible";\n          var onDropID = $($(SourceNode).find(".treechild").parent().parent().parent().parent().parent()).find("li").find(".k-state-hover").find("div").attr("data-nodeid");\n          var childs = $destibation.parent().children();\n          if (destElement == sourceElement) {\n            //var pid = $(movingNode.parent().parent().find(".treechild")[0]).attr("data-nodeid");\n            var pid = $(sourceElement.parentElement).find(".treechild").attr("data-nodeid");\n            if (pid != 0) {\n              for (var i = 0; i < childs.length; i++) {\n                // var nd = $leftTreeKeno.find("div").find("div[data-nodeid=\'" + pid + "\']").parent().parent().parent().find("li")[i];\n\n                var nd = $(childs[i]).find(".treechild").attr("data-nodeid");\n                VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/UpdateSeqNoParentId", {\n                  "treeId": $treeID,\n                  "tblName": tbname,\n                  "seqNo": i,\n                  "nodeId": nd,\n                  "pid": pid\n                }, null);\n              }\n            }\n          } else {\n            var pid = $(destinationNode.parentElement).parent().find(".treechild").attr("data-nodeid");\n            if (pid != 0) {\n              for (var i = 0; i < childs.length; i++) {\n                // var nd = $leftTreeKeno.find("div").find("div[data-nodeid=\'" + pid + "\']").parent().parent().parent().find("li")[i];\n\n                var nd = $(childs[i]).find(".treechild").attr("data-nodeid");\n                VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/UpdateSeqNoParentId", {\n                  "treeId": $treeID,\n                  "tblName": tbname,\n                  "seqNo": i,\n                  "nodeId": nd,\n                  "pid": pid\n                }, null);\n              }\n            }\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        }, 600);\n      }\n      window.setTimeout(function () {\n        if ($cmbSearch.val() != "") {\n          SearchNodeInTree(e);\n        }\n      }, 300);\n    }\n    ;\n    function dblSelectedNod() {\n      if ($leftTreeDiv.find(".k-state-selected").length > 1) {\n        $leftTreeDiv.find(".k-state-selected").removeClass("k-state-selected");\n        $ulMid.empty();\n      }\n    }\n    ;\n    function moveDraggedItemToFirstPalce(cNode) {\n      var currentparent = cNode.parent();\n      if (currentparent.attr("role") == "tree") {\n        var ulss = cNode.parent().children().children(\'ul\').children()[cNode.parent().children().children(\'ul\').children().length - 1];\n        if (ulss && currentparent) {\n          ulss.remove();\n          $($(currentparent.children()[0]).children(\'ul\')).prepend(ulss);\n        }\n      } else {\n        var ulss;\n        if (cNode.children(\'ul\')) {\n          ulss = cNode.children(\'ul\').children();\n        }\n        if (ulss) {\n          ulss = $(ulss[ulss.length - 1]);\n        }\n        if (ulss && ulss.siblings().length > 0) {\n          var firstSibling = $(ulss.siblings()[0]).parent();\n          $leftTreeDiv.data("kendoTreeView").detach(ulss[0]);\n          firstSibling.prepend(ulss[0]);\n        }\n      }\n    }\n    ;\n    function SaveTreeDragDrop($treeID, $dragTreeDataNodeID, $dropTreeDataNodeIDasParentID) {\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/SaveTreeDragDrop",\n        type: \'Post\',\n        data: {\n          treeID: $treeID,\n          NodeID: $dragTreeDataNodeID,\n          ParentID: $dropTreeDataNodeIDasParentID\n        },\n        success: function (data) {\n          var res = JSON.parse(data);\n          if (res == VIS.Msg.getMsg("VIS_DataSave")) {} else {\n            // VIS.ADialog.info("VIS_DataNotSaved");\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var isulMidData = false;\n    function GetDataTreeNodeSelect(getParentID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e) {\n      $bsyDivforbottom[0].style.visibility = "visible";\n      if (searchChildNode == null) {\n        searchChildNode = "";\n      }\n\n      //if ($cmbSearch.val() != "") {\n      //    $checkSearchOrNot.css("display", "inline-block");\n      //} else {\n      //    $checkSearchOrNot.css("display", "none");\n      //}\n\n      DropMenu();\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/GetDataTreeNodeSelect",\n        type: \'Post\',\n        async: false,\n        data: {\n          nodeID: getParentID,\n          treeID: $treeID,\n          pageNo: pageNoForChild,\n          pageLength: pageSizeForChild,\n          searchChildNode: searchChildNode,\n          getTreeNodeChkValue: getTreeNodeChkValue\n        },\n        success: function (data) {\n          // $ulMid.sortable();\n          //  sorttableLi();\n          if ($setorderflagss == false) {\n            return;\n          }\n          var res = JSON.parse(data);\n          var summImage = null;\n          var nonSummImage = null;\n          if (res.length > 0) {\n            $bsyDivforbottom[0].style.visibility = "visible";\n            if ($scrollBottom == true) {\n              $ulMid.empty();\n            }\n            isulMidData = true;\n            for (var i = 0; i < res.length; i++) {\n              if ($scrollBottom == false) {\n                if ($ulMid.find("li li").length > 0) {\n                  // var lisItem = $ulMid.find(\'[id="\' + res[i]["parentID"] + \'"]\');\n\n                  var lisItem = $ulMid.find(\'[data-id="\' + res[i]["parentID"] + \'"]\');\n                  if (lisItem && lisItem.length > 0) {\n                    continue;\n                  }\n                }\n              }\n              if (res[i]["parentID"] == 0) {\n                continue;\n              }\n              var checkBox = $(\'<input class="VIS-tm-checkbox" type="checkbox" />\');\n              if (res[i]["issummary"] == "Y") {\n                continue;\n                summImage = "<i class=\'fa fa-folder-o summNonsumImage\' data=\'Images/folder.png\'></i>";\n                //$ulMid.append($(\'<li class="VIS-tm-topMLi" style="cursor:default;padding:5px 0px">\').append(checkBox).append(summImage).append($("<li class=\'VIS-tm-MLi\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n                //$ulMid.append($(\'<li class="VIS-tm-topMLi" style="cursor:default;padding:5px 0px">\').append(checkBox).append(summImage).append($("<li class=\'VIS-tm-MLi\' data-NodePID=\'" + res[i]["NodeParentID"] + "\' data-id=\'" + res[i]["parentID"] + "\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n\n                $ulMid.append($(\'<li class="VIS-tm-topMLi">\').append(checkBox).append(summImage).append($("<li class=\'VIS-tm-MLi\' data-id=\'" + res[i]["parentID"] + "\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n              } else {\n                nonSummImage = "<i class=\'vis vis-m-window summNonsumImage\' data=\'Images/mWindow.png\'></i>";\n                //$ulMid.append($(\'<li class="VIS-tm-topMLi" style="cursor:default;padding:5px 0px">\').append(checkBox).append(nonSummImage).append($("<li class=\'VIS-tm-MLi\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n                //$ulMid.append($(\'<li class="VIS-tm-topMLi" style="cursor:default;padding:5px 0px">\').append(checkBox).append(nonSummImage).append($("<li class=\'VIS-tm-MLi\'  data-NodePID=\'" + res[i]["NodeParentID"] + "\'  data-id=\'" + res[i]["parentID"] + "\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n\n                $ulMid.append($(\'<li class="VIS-tm-topMLi">\').append(checkBox).append(nonSummImage).append($("<li class=\'VIS-tm-MLi\'    data-id=\'" + res[i]["parentID"] + "\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n              }\n\n              //var checkBox = $(\'<input class="VIS-tm-checkbox" style="float:left; margin-right: 10px;margin-left:0" type="checkbox" />\');\n              //$ulMid.append($(\'<li class="VIS-tm-topMLi" style="padding:5px 0px">\').append(checkBox).append($("<li class=\'VIS-tm-MLi\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\' style=\'cursor:pointer\'  >" + res[i]["name"] + "</li>")));\n            }\n            $recordeNotFound.css("display", "none");\n            //$deleteChild.addClass("vis-tm-delete");\n            mListDrag();\n            DropInMidDiv();\n            DropMenu();\n          } else {\n            if ($ulMid.find("li").length > 0) {\n              isulMidData = true;\n              $recordeNotFound.css("display", "none");\n            } else {\n              isulMidData = false;\n              $recordeNotFound.css("display", "inherit");\n            }\n          }\n          SearchNodeInTree(e);\n\n          // $ulMid.sortable().bind(\'sortupdate\', function () {\n          //UpdateBottomItemSeqe(getParentID, $treeID);\n          // });\n          window.setTimeout(function () {\n            if ($ulMid.find("input:checked").length > 0) {\n              $deleteChild.removeClass("vis-tm-delete");\n            } else {\n              $deleteChild.addClass("vis-tm-delete");\n            }\n          }, 200);\n          AllSelectChkValue();\n          if ($chkAllCheckOrNot.is(":checked")) {\n            $ulMid.find("input").prop("checked", true);\n            $ulMid.find("input").parent().addClass("vis-tm-menuselectedcolor");\n          }\n          if ($ulMid.find("li").length > 0) {\n            isulMidData = true;\n            $recordeNotFound.css("display", "none");\n          } else {\n            isulMidData = false;\n            $recordeNotFound.css("display", "inherit");\n          }\n          $cmbSearch.prop("disabled", false);\n          $btnSearch.prop("disabled", false);\n          $cmbSearch.focus();\n          animateSearchFlag = true;\n          clickontreenode = true;\n          leftstopdiv.css("display", "none");\n          $bsyDiv[0].style.visibility = "hidden";\n          GetCountOnTreeChanges();\n          $bsyDivforbottom[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          leftstopdiv.css("display", "none");\n          isulMidData = false;\n          console.log(e);\n          $ulMid.empty();\n          $cmbSearch.prop("disabled", false);\n          $btnSearch.prop("disabled", false);\n          $cmbSearch.focus();\n          clickontreenode = true;\n          $bsyDiv[0].style.visibility = "hidden";\n          $bsyDivforbottom[0].style.visibility = "hidden";\n        }\n      });\n      window.setTimeout(function () {\n        if ($ulMid.find("li").length > 0) {\n          isulMidData = true;\n          $recordeNotFound.css("display", "none");\n          $squenceDailog.removeClass("vis-tm-delete");\n          $bsyDivforbottom[0].style.visibility = "hidden";\n        } else {\n          isulMidData = false;\n          // $recordeNotFound.css("display", "inherit");\n          $squenceDailog.addClass("vis-tm-delete");\n        }\n      }, 500);\n      $mData.height(leftMianDataDiv.height() - ($treeBackDiv.height() + 20 + $mTopHeader.height()));\n    }\n    ;\n    function GetIsLIOrNot() {\n      if ($ulMid.find("li").length > 0) {\n        isulMidData = true;\n        //$recordeNotFound.css("display", "none");\n      } else {\n        isulMidData = false;\n        //$recordeNotFound.css("display", "inherit");\n      }\n    }\n    ;\n    var GetPIDforItems = null;\n    var sorttingItemsArr = [];\n    var inputhelper = null;\n    function sorttableLi(e) {\n      var helper = null;\n      $ulMid.sortable({\n        cursorAt: {\n          left: -10,\n          top: -10\n        },\n        helper: function (e, item) {\n          helper = $(\'<li />\');\n          if (!item.hasClass("vis-tm-menuselectedcolor")) {\n            item.addClass(\'vis-tm-menuselectedcolor\').siblings().removeClass(\'vis-tm-menuselectedcolor\');\n          }\n          var elements = item.parent().children(\'.vis-tm-menuselectedcolor\').clone();\n          item.data(\'multidrag\', elements).siblings(\'.vis-tm-menuselectedcolor\').remove();\n          return helper.append(elements);\n        },\n        start: function (event, ui) {\n          $dragtrue = false;\n          onDisableDiv.css("display", "inherit");\n          $deleteChild.css("display", "none");\n          $ulMid.find("input").prop("checked", false);\n          nodeItemDelwithdrag.height($secoundDiv.height());\n          nodeItemDelwithdrag.css("margin-top", "5px");\n          GetPIDforItems = ui.item.find("li").attr("id");\n\n          //nodeItemDelwithdrag.addClass("VIS-TM-ondragdrop");                  \n          nodeItemDelwithdrag.css("background-color", "#FFC0CB");\n          nodeItemDelwithdrag.css("display", "inherit");\n          nodeItemDelwithdrag.mouseover(function (e) {\n            nodeItemDelwithdrag.addClass("selectchangecolor");\n            nodeItemDelwithdrag.css("background-color", "#ff0000");\n            //nodeItemDelwithdrag.animate({\n            //    backgroundColor: "#ff0000",\n            //}, 200);\n          });\n          nodeItemDelwithdrag.mouseleave(function () {\n            nodeItemDelwithdrag.removeClass("selectchangecolor");\n            nodeItemDelwithdrag.css("background-color", "#FFC0CB");\n          });\n        },\n        change: function (event, ui) {},\n        update: function (event, ui) {\n          nodeItemDelwithdrag.height($secoundDiv.height());\n          //UpdateBottomItemSeqe(getParentID, $treeID);\n        },\n        stop: function (event, ui) {\n          //$bsyDiv[0].style.visibility = "visible";\n          ui.item.after(ui.item.data(\'multidrag\')).remove();\n          $deleteChild.css("display", "inherit");\n          onDisableDiv.css("display", "none");\n          if ($ulMid.find("li").hasClass("vis-tm-menuselectedcolor")) {\n            $ulMid.find("input").prop("checked", false);\n            $ulMid.find(".vis-tm-menuselectedcolor").find("input").prop("checked", true);\n            $deleteChild.removeClass("vis-tm-delete");\n          }\n          if (nodeItemDelwithdrag.hasClass("selectchangecolor")) {\n            $bsyDiv[0].style.visibility = "visible";\n            TreeTableName();\n            var child = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetNodeIdsOfParent", {\n              "tbname": tableTreeName,\n              "parent_id": GetPIDforItems,\n              "treeId": $treeID\n            }, null);\n            if (child != null && child.length == 0) {\n              var selectedItemArray = [];\n              if ($ulMid.find("input:checked").length == 0) {\n                selectedItemArray.push(GetPIDforItems);\n              }\n              for (var i = 0; i < $ulMid.find("input:checked").length; i++) {\n                //var getID = $($ulMid.find("input:checked")[i]).parent().find("li").attr("id");\n                var getID = $($ulMid.find("input:checked")[i]).parent().find("li").attr("data-id");\n                selectedItemArray.push(getID);\n              }\n              bottomchildselectedID = selectedItemArray;\n              selectedItemArray = selectedItemArray.toString();\n              DeleteNodeFromBottom($treeID, selectedItemArray);\n              nodeItemDelwithdrag.removeClass("VIS-TM-ondragdrop");\n              nodeItemDelwithdrag.css("display", "none");\n            } else {\n              DailogForItemDelete();\n            }\n            //  $bsyDiv[0].style.visibility = "hidden";\n          } else {\n            UpdateBottomItemSeqe(getParentID, $treeID);\n            nodeItemDelwithdrag.removeClass("VIS-TM-ondragdrop");\n            nodeItemDelwithdrag.css("display", "none");\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        }\n      });\n    }\n    ;\n    function DailogForItemDelete() {\n      $bsyDiv[0].style.visibility = "hidden";\n      DailogDeleteDesign();\n      var createTab = new VIS.ChildDialog();\n      //  createTab.setHeight(150);\n      // createTab.setWidth(350);\n      createTab.setEnableResize(false);\n      createTab.setTitle(VIS.Msg.getMsg(\'UnlinkRecord\'));\n      createTab.setModal(true);\n      createTab.setContent(dailogContainer);\n      createTab.show();\n      createTab.onClose = function () {};\n      createTab.onOkClick = function (e) {\n        var selectedItemArray = [];\n        for (var i = 0; i < $ulMid.find("input:checked").length; i++) {\n          // var getID = $($ulMid.find("input:checked")[i]).parent().find("li").attr("id");\n          var getID = $($ulMid.find("input:checked")[i]).parent().find("li").attr("data-id");\n          selectedItemArray.push(getID);\n        }\n        if ($ulMid.find("input:checked").length == 0) {\n          selectedItemArray.push(GetPIDforItems);\n        }\n        bottomchildselectedID = selectedItemArray;\n        selectedItemArray = selectedItemArray.toString();\n        DeleteNodeFromBottom($treeID, selectedItemArray);\n        nodeItemDelwithdrag.removeClass("VIS-TM-ondragdrop");\n        nodeItemDelwithdrag.css("display", "none");\n      };\n      createTab.onCancelClick = function () {\n        nodeItemDelwithdrag.removeClass("VIS-TM-ondragdrop");\n        nodeItemDelwithdrag.css("display", "none");\n      };\n    }\n    ;\n    function UpdateBottomItemSeqe(getParentID, $treeID) {\n      $bsyDivforbottom[0].style.visibility = "visible";\n      // getTreeTableName();\n\n      var ItemsID = [];\n      var ItemsIDTostring = "";\n      for (var l = 0; l < $ulMid.find("li li").length; l++) {\n        //                var id = $($ulMid.find("li li")[l]).attr("id");\n        var id = $($ulMid.find("li li")[l]).attr("data-id");\n        ItemsID.push(id);\n      }\n      ItemsIDTostring = ItemsID.toString();\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/UpdateItemSeqNo",\n        type: \'Post\',\n        data: {\n          treeID: $treeID,\n          itemsid: ItemsIDTostring,\n          ParentID: getParentID\n        },\n        success: function (data) {\n          var res = JSON.parse(data);\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "visible";\n        }\n      });\n      $bsyDivforbottom[0].style.visibility = "hidden";\n    }\n    ;\n    var tbnameofTree = null;\n    function getTreeTableName() {\n      var table_id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableID", {\n        "treeId": $treeID\n      }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n\n      var tree = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTreeType", {\n        "treeId": $treeID\n      }, null);\n      if (treeType == "PR") {\n        tbnameofTree = "AD_TreeNodePR";\n      } else if (treeType == "BP") {\n        tbnameofTree = "AD_TreeNodeBP";\n      } else if (treeType == "MM") {\n        tbnameofTree = "AD_TreeNodeMM";\n      } else {\n        tbnameofTree = "AD_TreeNode";\n      }\n    }\n    ;\n    var tableTreeName = null;\n    function TreeTableName() {\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/TreeTableName",\n        async: false,\n        data: {\n          treeID: $treeID\n        },\n        success: function (data) {\n          var res = JSON.parse(data);\n          tableTreeName = res;\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var mliDragArray = [];\n    function mListDrag() {\n      $($ulMid.find("li")).draggable({\n        //connectToSortable: \'.vis-tm-sortable\',\n        cursorAt: {\n          left: -10,\n          top: -10\n        },\n        helper: function () {\n          var selected = $($ulMid.find("li")).find("input:checked").parent();\n          if (selected.length === 0) {\n            selected = $(this);\n          }\n          var container = $(\'<div/>\').attr(\'id\', \'draggingContainer\');\n          if ($($ulMid.find("li")).find("input:checked").length == 0) {\n            if ($(this).hasClass("VIS-tm-topMLi")) {\n              return;\n            }\n            selected = $(this).parent();\n            container = $(\'<div style="background-color:lightblue;"/>\').attr(\'id\', \'draggingContainer\');\n          }\n          container.append(selected.clone());\n          getIDFromContainer = container;\n          getIDFromContainer.css("width", "250px");\n          getIDFromContainer.css({\n            "z-index": 2\n          });\n          getIDFromContainer.css({\n            "max-height": "250px",\n            "overflow": "auto"\n          });\n          getIDFromContainer.css({\n            "overflow": "hidden"\n          });\n          return container;\n        },\n        start: function (event, ui) {\n          $dragMenuNodeID = $(this).attr("id");\n          $checkMorRdragable = true;\n          dragMenuNodeIDArray = [];\n          mliDragArray = [];\n          for (var j = 0; j < $($(getIDFromContainer.find("li li"))).length; j++) {\n            var IDPush = $($(getIDFromContainer.find("li li"))[j]).attr("id");\n            //if (bindornot == "false") {\n            //    if ($.inArray(parseInt(IDPush), convertmenuArray) >= 0) {\n            //        continue;\n            //    }\n            //}\n            mliDragArray.push(parseInt(IDPush));\n            dragMenuNodeIDArray.push(IDPush);\n          }\n          DropMenu();\n          $midChildDrag = false;\n          isdrag = true;\n          middivDragFlag = false;\n          OnHoverTree();\n          onDisableDiv.css("display", "inherit");\n          $deleteChild.css("display", "none");\n          nodeItemDelwithdrag.height($secoundDiv.height());\n          nodeItemDelwithdrag.css("margin-top", "5px");\n          nodeItemDelwithdrag.css("background-color", "#FFC0CB");\n          nodeItemDelwithdrag.css("display", "inherit");\n          nodeItemDelwithdrag.mouseover(function (e) {\n            nodeItemDelwithdrag.addClass("selectchangecolor");\n            nodeItemDelwithdrag.css("background-color", "#ff0000");\n          });\n          nodeItemDelwithdrag.mouseleave(function () {\n            nodeItemDelwithdrag.removeClass("selectchangecolor");\n            nodeItemDelwithdrag.css("background-color", "#FFC0CB");\n          });\n\n          //$secoundDiv.css("width", "94%");\n\n          var setwidth = leftMianDataDiv.width() - 35;\n          $secoundDiv.width(setwidth);\n          $squenceDailog.css("display", "none");\n          //$rightDataDiv.css("overflow", "hidden");\n          $mData.css("overflow", "hidden");\n        },\n        drag: function (event, ui) {},\n        stop: function () {\n          isdrag = false;\n          //$secoundDiv.css("width", "100%");\n          //$mData.css("overflow", "auto");\n          ////$rightDataDiv.css("overflow", "auto");\n\n          //onDisableDiv.css("display", "none");\n          //$squenceDailog.css("display", "inherit");\n\n          if (nodeItemDelwithdrag.hasClass("selectchangecolor")) {\n            $bsyDiv[0].style.visibility = "visible";\n            TreeTableName();\n            var child = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetNodeIdsOfParent", {\n              "tbname": tbname,\n              "parent_id": GetPIDforItems,\n              "treeId": $treeID\n            }, null);\n            if (child != null && child.length == 0) {\n              var selectedItemArray = [];\n              if (dragMenuNodeIDArray.length > 0) {\n                if (bindornot == "false") {\n                  var ides = [];\n                  for (var q = 0; q < mliDragArray.length; q++) {\n                    if ($.inArray(mliDragArray[q], convertmenuArray) >= 0) {\n                      continue;\n                    }\n                    ides.push(mliDragArray[q]);\n                  }\n                  if (ides.length > 0) {\n                    DeleteNodeFromBottom($treeID, ides.toString());\n                  } else {\n                    // VIS.ADialog.info("NeverDelete");\n                    VIS.ADialog.info("NeverDelete", true, msgShowforbindingWindow);\n                    $bsyDiv[0].style.visibility = "hidden";\n                  }\n                } else {\n                  DeleteNodeFromBottom($treeID, dragMenuNodeIDArray.toString());\n                }\n              } else {\n                //VIS.ADialog.info("NeverDelete");\n                VIS.ADialog.info("NeverDelete", true, msgShowforbindingWindow);\n                $bsyDiv[0].style.visibility = "hidden";\n              }\n\n              //DeleteNodeFromBottom($treeID, selectedItemArray);\n              nodeItemDelwithdrag.removeClass("VIS-TM-ondragdrop");\n              nodeItemDelwithdrag.css("display", "none");\n              $deleteChild.css("display", "inherit");\n            } else {\n              DailogForItemDelete();\n            }\n            //  $bsyDiv[0].style.visibility = "hidden";\n          }\n          nodeItemDelwithdrag.removeClass("VIS-TM-ondragdrop");\n          nodeItemDelwithdrag.css("display", "none");\n          $deleteChild.css("display", "inherit");\n          $secoundDiv.css("width", "100%");\n          $mData.css("overflow", "auto");\n          //$rightDataDiv.css("overflow", "auto");\n\n          onDisableDiv.css("display", "none");\n          $squenceDailog.css("display", "inherit");\n        }\n      });\n    }\n    ;\n    function CreateTemplateTree() {\n      TemplateTree = "<div>" + "<div style=\'float:left;margin-top:3px\'>" + "<img src=\'" + VIS.Application.contextUrl + "#= item.ImageSource #\' style=\'height:20px\' >" + "</div>" + "<div style=\'float:left;margin:3px 10px 0 10px\'>" + "<p>#= item.text #</p>" + "</div>" + "</div>";\n    }\n    ;\n    function LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu) {\n      //$bsyDiv[0].style.visibility = "visible";\n\n      if ($ulRight.find("li").length == 0) {\n        $pathInfo.empty();\n      }\n      if (onscrollCheck != false) {\n        $ulRight.empty();\n      }\n      $bsyDivMenu[0].style.visibility = "visible";\n      searchRightext = VIS.Utility.encodeText(searchRightext);\n      if (searchRightext == null) {\n        searchRightext = "";\n      }\n      leftstopdiv.css("display", "inherit");\n      onDisableDiv.css("display", "inherit");\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/LoadMenuData",\n        type: \'Post\',\n        data: {\n          pageLength: pageLength,\n          pageNo: pageNo,\n          treeID: $treeID,\n          searchtext: searchRightext,\n          demandsMenu: $demandsMenu\n        },\n        success: function (data) {\n          var res = JSON.parse(data);\n          var summImage;\n          var nonSummImage;\n          var checkBox;\n          var unlink = $("<span></span>");\n          if (res) {\n            for (var i = 0; i < res.length; i++) {\n              if ($ulRight.find("li li").length > 0) {\n                var lisItem = $ulRight.find(\'[data-id="\' + res[i]["ID"] + \'"]\');\n                if (lisItem && lisItem.length > 0) {\n                  continue;\n                }\n              }\n              if (res[i]["ID"] == 0) {\n                continue;\n              }\n              if (res[i]["issummary"] == \'Y\') {\n                if (res[i]["disabled"] == true) {\n                  checkBox = $(\'<input class="vis-tm-chkbox" disabled type="checkbox" />\');\n                  summImage = "<i class=\'" + res[i]["classopacity"] + " fa fa-folder-o summNonsumImage\' data-imgsrc=\'Images/summary.png\'></i>";\n                } else {\n                  checkBox = $(\'<input  class="vis-tm-chkbox" type="checkbox" />\');\n                  summImage = "<i class=\'vis vis-m-window summNonsumImage\' data-imgsrc=\'Images/folder.png\'></i>";\n                }\n                $ulRight.append($(\'<li class="vis-tm-upperLi">\').append($("<div class=\'vis-tm-upperdivchkandimg\'>").append(checkBox).append(summImage)).append($("<div class=\'vis-tm-upperdivli\'>").append($("<li class=\'" + res[i]["classopacity"] + " vis-tm-textli \' checkSummary=\'checkSummary\'  style=\'cursor:default;\' id=\'" + res[i]["ID"] + "\' data-id=\'" + res[i]["ID"] + "\'  style=\'cursor:pointer\'  >" + VIS.Utility.encodeText(res[i].Name) + " (" + VIS.Utility.encodeText(res[i].description) + ")" + "</li>").append($("<span title=\'" + VIS.Msg.getMsg("UnlinkNode") + "\' class=\'" + res[i]["unlinkClass"] + "\'></span>")))));\n              } else {\n                if (res[i]["disabled"] == true) {\n                  checkBox = $(\'<input  class="vis-tm-chkbox"  disabled type="checkbox" />\');\n                  nonSummImage = "<i class=\'" + res[i]["classopacity"] + " vis vis-m-window summNonsumImage\' data-imgsrc=\'Images/nonSummary.png\'></i>";\n                } else {\n                  checkBox = $(\'<input  class="vis-tm-chkbox" type="checkbox" />\');\n                  nonSummImage = "<i class=\'vis vis-m-window summNonsumImage\' data-imgsrc=\'Images/mWindow.png\'></i>";\n                }\n                $ulRight.append($(\'<li class="vis-tm-upperLi">\').append($("<div class=\'vis-tm-upperdivchkandimg\'>").append(checkBox).append(nonSummImage)).append($("<div class=\'vis-tm-upperdivli\'>").append($("<li class=\'" + res[i]["classopacity"] + " vis-tm-textli \' style=\'cursor:default;\' id=\'" + res[i]["ID"] + "\' data-id=\'" + res[i]["ID"] + "\'   style=\'cursor:pointer\'  >" + VIS.Utility.encodeText(res[i].Name) + " (" + VIS.Utility.encodeText(res[i].description) + ")" + "</li>").append($("<span title=\'" + VIS.Msg.getMsg("UnlinkNode") + "\' class=\'" + res[i]["unlinkClass"] + "\'></span>")))));\n              }\n            }\n            if ($ulRight.find("li").length > 0) {\n              $recordeNotFoundRight.css("display", "none");\n            } else {\n              $recordeNotFoundRight.css("display", "inherit");\n            }\n          } else {\n            if ($ulRight.find("li").length > 0) {\n              $recordeNotFoundRight.css("display", "none");\n            } else {\n              $recordeNotFoundRight.css("display", "inherit");\n            }\n          }\n          DragMenu();\n          SelectAllRightPanel();\n          $rightMenuDemand.prop("disabled", false);\n          leftstopdiv.css("display", "none");\n          onDisableDiv.css("display", "none");\n          treeCmbDisable.css("display", "none");\n          $bsyDivMenu[0].style.visibility = "hidden";\n\n          //$(\'a.taphover\').on(\'touchstart\', function (e) {\n          //    \'use strict\'; //satisfy the code inspectors\n          //    var link = $(this); //preselect the link\n          //    if (link.hasClass(\'hover\')) {\n          //        return true;\n          //    } else {\n          //        link.addClass(\'hover\');\n          //        $(\'a.taphover\').not(this).removeClass(\'hover\');\n          //        e.preventDefault();\n          //        return false; //extra, and to make sure the function has consistent return points\n          //    }\n          //});\n\n          var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n          if (ismobile) {\n            //$ulRight.bind(\'touchstart\', function () {                            \n            $($ulRight.find("li")).draggable("destroy");\n            //});\n            //$ulRight.bind(\'touchend\', function () {                            \n            //    DragMenu();                            \n            //});\n          }\n\n          //var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n\n          //if (onscrollCheck != false) {\n          //    GetCountForRestriction();\n          //}\n        },\n        error: function (e) {\n          console.log(e);\n          leftstopdiv.css("display", "none");\n          onDisableDiv.css("display", "none");\n          $rightMenuDemand.prop("disabled", false);\n          treeCmbDisable.css("display", "none");\n          $bsyDiv[0].style.visibility = "hidden";\n          $bsyDivMenu[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var isdrag = false;\n    var containerdataflag = null;\n    function DragMenu(e) {\n      chksearchvalues = e;\n      // initTouchHandler(e);\n\n      //var dragitemprovide = null;\n\n      //if (ismobile)\n      //{\n      //    dragitemprovide = $($ulRight.find("input:checked")).parent().parent();\n      //}\n      //else\n      //{\n      //    dragitemprovide = $($ulRight.find("li"));\n      //}\n\n      //dragitemprovide.draggable({\n      $($ulRight.find("li")).draggable({\n        //$($ulRight.find(".divfordrags")).draggable({\n        // stack: ".vis-tm-upperLi",\n        //z-index:100,\n        cursorAt: {\n          left: -10,\n          top: -10\n        },\n        helper: function () {\n          getIDFromContainer = [];\n          var selected = $($ulRight.find("input:checked")).parent().parent();\n          if (selected.length === 0) {\n            selected = $(this);\n          }\n          var container = $(\'<div/>\');\n          if ($($ulRight.find("input:checked")).parent().parent().length == 0) {\n            if ($(this).hasClass("vis-tm-textli")) {\n              if ($(this).parent().parent().find("input").attr("disabled") == "disabled") {\n                window.setTimeout(function () {\n                  //  return false;\n                }, 200);\n              } else {\n                selected = $(this).parent().parent();\n                container = $(\'<div style="background-color:lightblue;"/>\').attr(\'id\', \'draggingContainer\');\n              }\n            } else if ($(this).hasClass("vis-tm-upperLi")) {\n              if ($(this).find("input").attr("disabled") == "disabled") {\n                // return false;\n              }\n              container = $(\'<div style="background-color:lightblue;"/>\').attr(\'id\', \'draggingContainer\');\n            }\n          } else {\n            if ($(this).hasClass("vis-tm-textli")) {\n              if ($(this).parent().parent().find("input").attr("disabled") == "disabled") {\n                //return false;\n              }\n              container = $(\'<div style="background-color:lightblue;"/>\').attr(\'id\', \'draggingContainer\');\n            } else if ($(this).hasClass("vis-tm-upperLi")) {\n              if ($(this).find("input").attr("disabled") == "disabled") {\n                // return false;\n              }\n              container = $(\'<div/>\').attr(\'id\', \'draggingContainer\');\n            }\n          }\n          if ($(this).parent().parent().find("input").attr("disabled") != "disabled" && $(this).parent().parent().find("input").attr("disabled") != undefined) {\n            container.append(selected.clone());\n          }\n          if (($($ulRight.find("input:checked")).length > 0 || selected.find("input").attr("disabled") == undefined) && !selected.hasClass("vis-tm-opacity")) {\n            container.append(selected.clone());\n          }\n          getIDFromContainer = container;\n          getIDFromContainer.css({\n            "width": "350px"\n          });\n          getIDFromContainer.css({\n            "z-index": 2\n          });\n          if (getIDFromContainer.find(".vis-tm-upperLi").length > 5) {\n            getIDFromContainer.css({\n              "max-height": "250px",\n              "overflow": "auto"\n            });\n            getIDFromContainer.css({\n              "overflow": "hidden"\n            });\n          }\n          containerdataflag = container;\n          return container;\n        },\n        //scroll: \'true\',\n        // revert: false,\n        start: function (event, ui) {\n          onDisableDiv.css("display", "inherit");\n          if (containerdataflag.find("li").length > 0) {\n            mMouseRestrict.css("display", "inherit");\n          }\n          $midChildDrag = true;\n          if (containerdataflag.find(".vis-tm-textli").hasClass("vis-tm-textli")) {\n            isdrag = true;\n          }\n\n          //isdrag = true;\n          $dragMenuNodeID = $(this).attr("id");\n          $checkMorRdragable = false;\n          $dragtrue = true;\n          dragMenuNodeIDArray = [];\n          ExistItem = [];\n          middivDragFlag = true;\n\n          //getIDFromContainer.find(".vis-tm-upperLi").length\n          //for (var j = 0; j < $($(getIDFromContainer.find("li li"))).length; j++) {\n          if (getIDFromContainer.find(".vis-tm-upperLi").length == 0) {\n            var IDPush = getIDFromContainer.find("li").attr("id");\n            dragMenuNodeIDArray.push(IDPush);\n          } else {\n            var upperLi = getIDFromContainer.find(".vis-tm-upperLi");\n            for (var j = 0; j < upperLi.length; j++) {\n              var IDPush = $(upperLi.find("li")[j]).attr("id");\n              dragMenuNodeIDArray.push(IDPush);\n              var imgSrc = $(upperLi[j]).find("i").data("imgsrc");\n              var finalImg = imgSrc.substr(imgSrc.lastIndexOf("/") + 1);\n              if (finalImg == "mWindow.png" || finalImg == "folder.png") {\n                ExistItem.push("new");\n              } else {\n                ExistItem.push("update");\n              }\n\n              //if ($(upperLi[j]).find(".vis-tm-opacity").length == 0) {\n              //    ExistItem.push("new");\n              //}\n              //else {\n              //    ExistItem.push("update");\n              //}\n            }\n          }\n          DropMenu();\n          DropInMidDiv(e);\n          OnHoverTree();\n        },\n        //containment: $root,\n        drag: function (event, ui) {},\n        stop: function () {\n          dragMenuNodeIDArray = [];\n          isdrag = false;\n          onDisableDiv.css("display", "none");\n          mMouseRestrict.css("display", "none");\n\n          //var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n          //if (ismobile)\n          //{\n\n          //        containerdataflag.empty();\n\n          //    $($ulRight.find("li")).draggable("destroy");\n          //}\n        }\n      });\n\n      //$ulRight.on("drop", function (e) {\n      //    alert(\'s\');\n      //});\n\n      //$($ulRight.find("li")).draggable({\n      //    //zIndex: 2,\n      //    revert: "invalid",\n      //    helper: "clone",\n      //    //containment: $root.parent,\n      //    start: function (event, ui) {\n      //        $dragMenuNodeID = $(this).attr("id");\n      //    },\n      //    drag: function (event, ui) {\n      //    },\n      //    stop: function () {\n      //    }\n      //});\n    }\n    ;\n    var validationValue = null;\n    function DropMenu(e) {\n      leftMianDataDiv.droppable({\n        drop: function (event, ui) {\n          var checkValidation = true;\n          if (mouseEnter == false) {\n            checkValidation = false;\n            //return;\n          }\n          //                    $bsyDiv[0].style.visibility = "visible";\n          // if ($checkMorRdragable != true)\n          // {\n          //$bsyDiv[0].style.visibility = "visible";\n          if ($(ui.draggable).hasClass("ui-dialog")) {\n            $bsyDiv[0].style.visibility = "hidden";\n            checkValidation = false;\n            //return;\n          }\n          if (!$leftTreeDiv.find("span").hasClass("k-state-hover") && !$leftTreeDiv.find("span").hasClass("k-state-selected")) {\n            $bsyDiv[0].style.visibility = "hidden";\n            checkValidation = false;\n            // return;\n          }\n          $dragtrue = false;\n          var issummary, SummaryID, nodid;\n          if ($leftTreeDiv.find("span").hasClass("k-state-hover")) {\n            $getLifromTree = $($leftTreeDiv.find("li").find("span")).parent().find(".k-state-hover").parent().parent();\n          } else if ($leftTreeDiv.find("span").hasClass("k-state-selected")) {\n            $getLifromTree = $($leftTreeDiv.find("li").find("span")).parent().find(".k-state-selected").parent().parent();\n          }\n          if ($leftTreeDiv.find("span").hasClass("k-state-hover")) {\n            var hover = $leftTreeKeno.find(".k-state-hover").find(".treechild");\n            $dropableItem = hover;\n            issummary = hover.attr("data-issummary");\n            SummaryID = hover.attr("data-nodeid");\n            nodid = hover.attr("data-parentid");\n          } else if ($leftTreeDiv.find("span").hasClass("k-state-selected")) {\n            //if ($midChildDrag == false) {\n            //    $bsyDiv[0].style.visibility = "hidden";\n            //    return;\n            //}\n            var selected = $leftTreeDiv.find(".k-state-selected").find(".treechild");\n            selected.parent().css("border", "none");\n            $dropableItem = selected;\n            SummaryID = selected.attr("data-nodeid");\n            issummary = selected.attr("data-issummary");\n            nodid = selected.attr("data-parentid");\n          }\n          var getAllChildNodeID = [];\n          if (issummary == "true") {\n            if (middivDragFlag == false && $dropableItem.parent().hasClass("k-state-selected")) {\n              checkValidation = false;\n              //   return;\n            }\n            validationValue = checkValidation;\n            if (checkValidation == true) {\n              validationValue = checkValidation;\n              SaveDataOnDrop(SummaryID, nodid, dragMenuNodeIDArray, $checkMorRdragable, ExistItem);\n            } else if (checkValidation == false) {\n              $dragtrue = true;\n              $bsyDiv[0].style.visibility = "hidden";\n            }\n          } else {\n            if (issummary == "false" && !$chkSummaryLevel.is(":checked")) {\n              SummaryIDs = $($getLifromTree.parent().parent().find(".treechild")[0]).attr("data-nodeid");\n              $dropableItem = $($getLifromTree.parent().parent().find(".treechild")[0]);\n              SaveDataOnDrop(SummaryIDs, nodid, dragMenuNodeIDArray, $checkMorRdragable, ExistItem);\n            }\n          }\n\n          // }\n          //  $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var selectClass = true;\n    function OnHoverTree(e) {\n      $leftTreeDiv.data("kendoTreeView").wrapper.find(".k-in").on({\n        mouseenter: function () {\n          if (isdrag == true) {\n            mouseEnter = true;\n            if ($(this).hasClass("k-state-selected")) {\n              //$(this).css("border", "2px solid #1aa0ed");\n\n              //if ($(this).find(".treechild").attr("data-issummary") == "true") {\n              $(this).css("border", "2px solid #bac0cc");\n              // }\n\n              //selectClass = false;\n              //$(this).removeClass("k-state-selected");\n              //$(this).removeClass("k-state-hover");\n              //$(this).addClass("vis-tm-onhoverselected");                           \n            } else {\n              //  selectClass = true;\n            }\n          }\n        },\n        mouseleave: function () {\n          if (isdrag == true) {\n            if ($(this).hasClass("k-state-selected")) {\n              $(this).css("border", "none");\n            }\n\n            //if ($(this).hasClass("vis-tm-onhoverselected")) {\n            //    var sel = $(this);\n            //    sel.addClass("k-state-selected");\n            //    sel.removeClass("k-state-hover");\n            //    //    sel.removeClass("k-state-hover");\n            //}\n          }\n\n          ////Importanat...\n          mouseEnter = false;\n        }\n      });\n\n      //$leftTreeDiv.data("kendoTreeView").wrapper.find(".treechild").parent().on({\n      //    mouseenter: function () {\n      //        if ($(this).find(".treechild").attr("data-nodeid") == dragMenuNodeIDArray[0]) {\n      //          //  $(this).css({ \'cursor\': \'not-allowed\' });\n      //        }\n      //    },\n      //    mouseleave: function () {\n      //       // $(this).css({ \'cursor\': \'auto\' });\n      //    }\n      //});\n    }\n    ;\n    var middivDragFlag = true;\n    function DropInMidDiv(e) {\n      //$ulMid.find("li").droppable({\n      //chksearchvalues = e;\n      $ulMid.parent().droppable({\n        drop: function (event, ui) {\n          var midlistdrag = true;\n          if ($dragtrue == false) {\n            midlistdrag = false;\n            //return;\n          }\n          if ($(ui.draggable).hasClass("ui-dialog")) {\n            $bsyDiv[0].style.visibility = "hidden";\n            midlistdrag = false;\n          }\n          if (midlistdrag == true) {\n            if (!$checkMorRdragable) {\n              if ($leftTreeDiv.find(".k-state-selected").length == 1) {\n                //var upperLi = $(getIDFromContainer.find(".vis-tm-upperLi").find("li"));\n                //for (var j = 0; j < upperLi.length; j++)\n                //{\n                //    var checkSummary= $(getIDFromContainer.find(".vis-tm-upperLi").find("li")[j]).attr("checkSummary");\n                //    if (checkSummary == "checkSummary")\n                //    {\n                //        VIS.ADialog.info("VIS_SummaryCanNotDropOverHere");\n                //        return;\n                //    }\n                //}\n\n                var selected = $leftTreeDiv.find(".k-state-selected").find(".treechild");\n                $dropableItem = selected;\n                var SummaryID = selected.attr("data-nodeid");\n                var issummary = selected.attr("data-issummary");\n                var nodid = selected.attr("data-parentid");\n                if (issummary == "true") {\n                  if (containerdataflag.find(".vis-tm-textli").hasClass("vis-tm-textli")) {\n                    $bsyDiv[0].style.visibility = "visible";\n                    SaveDataOnDrop(SummaryID, nodid, dragMenuNodeIDArray, $checkMorRdragable, ExistItem);\n                  }\n                }\n                ;\n              } else {\n                if (containerdataflag.find(".vis-tm-textli").hasClass("vis-tm-textli")) {\n                  VIS.ADialog.info("SelectAnySummaryTreeNode");\n                }\n              }\n            }\n          }\n          if ($leftTreeDiv.find(".k-state-selected").length == 0) {\n            if (containerdataflag.find(".vis-tm-textli").hasClass("vis-tm-textli")) {\n              VIS.ADialog.info("SelectAnySummaryTreeNode");\n            }\n          }\n        },\n        tolerance: \'pointer\'\n      });\n    }\n    ;\n    var removefromtree = null;\n    function SaveDataOnDrop(SummaryID, nodid, dragMenuNodeIDArray, $checkMorRdragable, ExistItem) {\n      var dragNodeIDArray = dragMenuNodeIDArray.toString();\n      if (dragNodeIDArray == "") {\n        return;\n      }\n      $bsyDiv[0].style.visibility = "visible";\n      $pathInfo.empty();\n      ExistItem = ExistItem.toString();\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/SaveDataOnDrop",\n        type: \'Post\',\n        data: {\n          summaryid: SummaryID,\n          nodid: nodid,\n          treeID: $treeID,\n          dragMenuNodeID: dragNodeIDArray,\n          checkMorRdragable: $checkMorRdragable,\n          IsExistItem: ExistItem\n        },\n        success: function (data) {\n          var getRunFunction = true;\n          var res = JSON.parse(data);\n          if ($checkMorRdragable) {\n            for (var j = 0; j < getIDFromContainer.find("li").find(".VIS-tm-MLi").length; j++) {\n              if ($leftTreeDiv.find("div").find("div[data-nodeid=\'" + SummaryID + "\']").parent().hasClass("k-state-selected")) {\n                if (middivDragFlag == false) {\n                  continue;\n                }\n              }\n              var getmidDragID = $(getIDFromContainer.find("li").find(".VIS-tm-MLi")[j]).attr("id");\n              //$($ulMid.find("li").find("li[id=\'" + getmidDragID + "\']").parent()).remove();\n              $($ulMid.find("li").find("li[data-id=\'" + getmidDragID + "\']").parent()).remove();\n              // TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n            }\n          }\n          if (res == VIS.Msg.getMsg("VIS_DataSave")) {\n            var menuselectedcolor = $ulRight.find(".vis-tm-menuselectedcolor");\n            //menuselectedcolor.removeClass("vis-tm-menuselectedcolor");\n            var getIDfromContainer = getIDFromContainer.find("li .vis-tm-textli").attr("id");\n            if ($leftTreeDiv.find("div").find("div[data-nodeid=\'" + SummaryID + "\']").parent().hasClass("k-state-selected")) {\n              //for (var y = 0; y < getIDFromContainer.find("li li").length ; y++) {\n\n              for (var y = getIDFromContainer.find("li li").length - 1; y >= 0; y--) {\n                var getmidDragID = getIDFromContainer.find("li li").attr("id");\n                if (middivDragFlag == false) {\n                  continue;\n                }\n\n                //if (getmidDragID == $dropableItem.attr("data-nodeid")) {\n                //    continue;\n                //}\n\n                //var childOfParentofDroppable = $dropableItem.parent().parent().parent().children().find("div[data-nodeid=\'" + getmidDragID + "\']");\n                //if (childOfParentofDroppable && childOfParentofDroppable.length > 0) {\n                //    continue;\n                //}\n\n                //if ($dropableItem.data("nodeid") == getIDFromContainer.find("li li").data(\'nodepid\')) {\n                //    continue;\n                //}\n\n                var inputchklen = $ulMid.find("input:checked").length;\n                ;\n                var checkinput = $ulMid.find("input").length;\n                if (inputchklen == checkinput) {\n                  if (inputchklen != 0 && checkinput != 0) {\n                    $chkAllCheckOrNot.prop("checked", false);\n                  } else {\n                    $chkAllCheckOrNot.prop("checked", false);\n                  }\n                } else {\n                  $chkAllCheckOrNot.prop("checked", false);\n                }\n                var Id = $(getIDFromContainer.find("li li")[y]).attr("id");\n                var text = $(getIDFromContainer.find("li li")[y]).text();\n                text = text.substring(0, text.lastIndexOf("("));\n\n                //if ($leftTreeDiv.find("div").find("div[data-nodeid=\'" + SummaryID + "\']").parent().hasClass("k-state-selected"))\n                //{\n\n                var src = $(getIDFromContainer.find("li li")[y]).parent().parent().find("i").data("imgsrc");\n                src = src.substring(src.lastIndexOf("/") + 1);\n                var summImage = null;\n                if (src == "nonSummary.png") {\n                  summImage = "<i class=\'summNonsumImage vis vis-m-window\'  data-imgsrc=\'Images/mWindow.png\'></i>";\n                } else if (src == "summary.png") {\n                  summImage = "<i class=\'fa fa-folder-o summNonsumImage\' data-imgsrc=\'Images/folder.png\'></i>";\n                } else if (src == "folder.png") {\n                  summImage = "<i class=\'fa fa-folder-o summNonsumImage\' data-imgsrc=\'Images/folder.png\'></i>";\n                  continue;\n                }\n                if (src == "mWindow.png") {\n                  summImage = "<i class=\'summNonsumImage vis vis-m-window\' data-imgsrc=\'Images/mWindow.png\'></i>";\n                }\n                if ($cmbSearch.val() != "" && $chktreeNode.is(":checked")) {\n                  if (!text.contains($cmbSearch.val())) {\n                    continue;\n                  }\n                }\n                var checkBox = $(\'<input class="VIS-tm-checkbox" type="checkbox" />\');\n                $ulMid.prepend($(\'<li class="VIS-tm-topMLi">\').append(checkBox).append(summImage).append($("<li class=\'VIS-tm-MLi\' data-id=\'" + Id + "\'  id=\'" + Id + "\' style=\'cursor:default\'  >" + VIS.Utility.encodeText(text) + "</li>")));\n                //  }\n                //$squenceDailog.removeClass("vis-tm-delete");\n                //isulMidData = true;\n              }\n            }\n            for (var k = 0; k < getIDFromContainer.find("li .vis-tm-textli").length; k++) {\n              //var getNodeIDForIcon = $($($ulRight.find("li"))).find("li[id=\'" + $(getIDFromContainer.find(".vis-tm-textli")[k]).attr("id") + "\']").parent().parent();\n              var getNodeIDForIcon = $($($ulRight.find("li"))).find("li[data-id=\'" + $(getIDFromContainer.find(".vis-tm-textli")[k]).attr("data-id") + "\']").parent().parent();\n              getNodeIDForIcon.find("input").prop("disabled", "true");\n              getNodeIDForIcon.find("input").prop("checked", false);\n              getNodeIDForIcon.find("i").addClass("vis-tm-opacity");\n              getNodeIDForIcon.find(".vis-tm-textli").addClass("vis-tm-opacity");\n              getNodeIDForIcon.find("input").css("cursor", "not-allowed");\n              if (!getNodeIDForIcon.find("span").hasClass("VIS-Tm-glyphiconglyphicon-link")) {\n                getNodeIDForIcon.find("span").addClass("VIS-Tm-glyphiconglyphicon-link");\n              }\n              if ($rightMenuDemand.val() == "Unlinked") {\n                getNodeIDForIcon.remove();\n              }\n              var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + $(getIDFromContainer.find(".vis-tm-textli")[k]).attr("data-id") + "\']").parent().parent().find("img").attr("src");\n              var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + $(getIDFromContainer.find(".vis-tm-textli")[k]).attr("data-id") + "\']").parent().parent().find("img");\n              var setLinkedImage;\n              var src = imgSource;\n              if (src != null) {\n                //folder.png\n                src = src.substring(src.lastIndexOf("/") + 1);\n                if (src == "mWindow.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/nonSummary.png";\n                } else if (src == "folder.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/summary.png";\n                }\n                changeImgSource.attr("src", setLinkedImage);\n              }\n              getRunFunction = false;\n            }\n\n            //                        var getRunFunction = true;\n            for (var i = 0; i < $ulRight.find(".vis-tm-menuselectedcolor").length; i++) {\n              //var Id = $($ulRight.find(".vis-tm-menuselectedcolor").find(".vis-tm-textli")[i]).attr("id");\n              //var text = $($ulRight.find(".vis-tm-menuselectedcolor").find(".vis-tm-textli")[i]).text();\n              //text = text.substring(0, text.lastIndexOf("("));\n\n              // //$($($ulRight.find("li"))).find("li[id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("id") + "\']");\n              //if ($leftTreeDiv.find("div").find("div[data-nodeid=\'" + SummaryID + "\']").parent().hasClass("k-state-selected")) {\n\n              //    var src = $($ulRight.find(".vis-tm-menuselectedcolor").find(".vis-tm-textli")[i]).parent().parent().find("img").attr("src");\n              //    src = src.substring(src.lastIndexOf("/") + 1);\n              //    var summImage = null;\n              //    if (src == "nonSummary.png") {\n              //        summImage = "<img class=\'summNonsumImage\' style=\'float:left;margin-right:10px;margin-top:3px\'  src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png\'></img>";\n              //    }\n              //    else if (src == "summary.png") {\n              //        summImage = "<img class=\' summNonsumImage \' style=\'float:left;margin-right:10px;margin-top:3px\' src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/folder.png\'></img>";\n              //    }\n\n              //    var checkBox = $(\'<input class="VIS-tm-checkbox" style="float:left; margin-right: 10px;margin-left:0" type="checkbox" />\');\n              //    $ulMid.append($(\'<li class="VIS-tm-topMLi" style="padding:5px 0px">\').append(checkBox).append(summImage).append($("<li class=\'VIS-tm-MLi\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + Id + "\' style=\'cursor:pointer\'  >" + VIS.Utility.encodeText(text) + "</li>")));\n              //}\n\n              //var checkBox = $(\'<input class="VIS-tm-checkbox" style="float:left; margin-right: 10px;margin-left:0" type="checkbox" />\');\n              //$ulMid.append($(\'<li class="VIS-tm-topMLi" style="padding:5px 0px">\').append(checkBox).append($("<li class=\'VIS-tm-MLi\' id=\'" + Id + "\' style=\'cursor:pointer\'  >" + text + "</li>")));\n              getRunFunction = false;\n            }\n            if (getRunFunction != false) {\n              if (getIDFromContainer.find(".vis-tm-textli").length == 1) {\n                //var getLiByID = $($($ulRight.find("li"))).find("li[id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("id") + "\']");\n                //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("id") + "\']").parent().parent().find("img").attr("src");\n                //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("id") + "\']").parent().parent().find("img");\n\n                var getLiByID = $($($ulRight.find("li"))).find("li[data-id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("data-id") + "\']");\n                var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("data-id") + "\']").parent().parent().find("img").attr("src");\n                var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + getIDFromContainer.find(".vis-tm-textli").attr("data-id") + "\']").parent().parent().find("img");\n                var setLinkedImage;\n                var src = imgSource;\n                if (src != null) {\n                  src = src.substring(src.lastIndexOf("/") + 1);\n                  if (src == "mWindow.png") {\n                    setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/nonSummary.png";\n                  } else if (src == "folder.png") {\n                    setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/summary.png";\n                  }\n                  changeImgSource.attr("src", setLinkedImage);\n                }\n                //var Id = getLiByID.attr("id");\n                //var text = getLiByID.text();\n                //text = text.substring(0, text.lastIndexOf("("));\n\n                // var checkBox = $(\'<input class="VIS-tm-checkbox" style="float:left; margin-right: 10px;margin-left:0" type="checkbox" />\');\n                //   $ulMid.append($(\'<li class="VIS-tm-topMLi" style="padding:5px 0px">\').append(checkBox).append($("<li class=\'VIS-tm-MLi\' id=\'" + Id + "\' style=\'cursor:pointer\'  >" + text + "</li>")));\n              }\n            }\n            // data-getparentnode=\'#= item.getparentnode #\'       data-IsSummary=\'#= item.IsSummary #\' data-TableName=\'#= item.TableName #\'\n            //data-NodeID=\'#= item.NodeID #\'   data-TreeParentID=\'#= item.TreeParentID #\' data-ParentID=\'#= item.ParentID #\'  \n\n            //var imgsrc = getIDFromContainer.find("img").attr("src").substring(getIDFromContainer.find("img").attr("src").lastIndexOf("/") + 1);\n            //if (imgsrc)\n            //{\n\n            //}\n\n            var lstNewChildren = [];\n            for (var t = 0; t < getIDFromContainer.find(".vis-tm-textli").length; t++) {\n              var IsSummaryOrNot = null;\n              var ImageSource = null;\n              if ($(getIDFromContainer.find(".vis-tm-textli")[t]).attr("checkSummary") == "checkSummary") {\n                IsSummaryOrNot = "true";\n                ImageSource = "Areas/VIS/Images/folder.png";\n              } else {\n                IsSummaryOrNot = "false";\n                ImageSource = "Areas/VIS/Images/mWindow.png";\n              }\n              if ($chkSummaryLevel.is(":checked")) {\n                if (IsSummaryOrNot == "false") {\n                  continue;\n                }\n              }\n              if ($chkSummaryLevel.is(":checked")) {\n                if (IsSummaryOrNot == "true") {\n                  $treeExpandColapse.css("display", "inherit");\n                  $treeCollapseColapse.css("display", "none");\n                }\n              }\n              if (!$chkSummaryLevel.is(":checked")) {\n                $treeExpandColapse.css("display", "inherit");\n                $treeCollapseColapse.css("display", "none");\n              }\n              var textForTree = $(getIDFromContainer.find(".vis-tm-textli")[t]).text();\n              textForTree = textForTree.substring(0, textForTree.lastIndexOf("("));\n              var newChild = $leftTreeDiv.data("kendoTreeView").append({\n                //text: VIS.Utility.encodeText($(getIDFromContainer.find(".vis-tm-textli")[t]).text()),\n                text: VIS.Utility.encodeText(textForTree),\n                \'IsSummary\': IsSummaryOrNot,\n                \'getparentnode\': $dropableItem.attr("data-nodeid"),\n                \'TableName\': $dropableItem.attr("data-tablename"),\n                \'NodeID\': $(getIDFromContainer.find(".vis-tm-textli")[t]).attr("id"),\n                \'TreeParentID\': $dropableItem.attr("data-nodeid"),\n                \'ParentID\': $dropableItem.attr("data-nodeid"),\n                //,\n                \'ImageSource\': ImageSource\n              }, $dropableItem);\n              lstNewChildren.push(newChild);\n            }\n            var $drpableItemLis = $dropableItem.parent().parent().parent();\n            if (lstNewChildren && lstNewChildren.length > 0) {\n              for (var h = lstNewChildren.length - 1; h >= 0; h--) {\n                moveDraggedItemToFirstPalce($drpableItemLis);\n              }\n            }\n            menuselectedcolor.removeClass("vis-tm-menuselectedcolor");\n            if ($ulMid.find("li").length > 0) {\n              $recordeNotFound.css("display", "none");\n              $bsyDivforbottom[0].style.visibility = "hidden";\n            }\n          } else {\n            // VIS.ADialog.info("VIS_DataNotSaved");\n          }\n\n          //if ($checkMorRdragable) {\n          //    for (var j = 0; j < getIDFromContainer.find("li").find(".VIS-tm-MLi").length; j++) {\n          //        var getmidDragID = $(getIDFromContainer.find("li").find(".VIS-tm-MLi")[j]).attr("id");\n\n          //        if (getmidDragID == $dropableItem.attr("data-nodeid")) {\n          //            continue;\n          //        }\n\n          //        // var childOfParentofDroppable = $dropableItem.parent().parent().parent().children().find("div[data-nodeid=\'" + getmidDragID + "\']");\n          //        //if (childOfParentofDroppable && childOfParentofDroppable.length > 0) {\n          //        //    continue;\n          //        //}\n\n          //        if ($dropableItem.data("nodeid") == getIDFromContainer.find("li li").data(\'nodepid\')) {\n          //            continue;\n          //        }\n\n          //        //$($ulMid.find("li").find("li[id=\'" + getmidDragID + "\']").parent()).remove();\n          //        // TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n          //        $($ulMid.find("li").find("li[data-id=\'" + getmidDragID + "\']").parent()).remove();\n          //        removefromtree = $leftTreeKeno.find("div").find("div[data-nodeid=\'" + getmidDragID + "\']").parent().parent().parent();\n          //        //$leftTreeDiv.data("kendoTreeView").remove(removefromtree);\n          //        //  moveDraggedItemToFirstPalce(removefromtree);\n\n          //        $leftTreeDiv.data("kendoTreeView").detach(removefromtree);\n\n          //        var par = $dropableItem.parent().parent().parent();\n          //        if (par) {\n          //            par = $(par).children(\'ul\');\n          //            if (par && par.length > 0) {\n          //                par = par.children();\n          //                if (par && par.length > 0) {\n          //                    $(par).prepend(removefromtree);\n          //                }\n          //                else {\n          //                    $(par).prepend(removefromtree);\n          //                }\n          //            }\n          //            else {\n          //                $dropableItem.parent().parent().parent().append(removefromtree);\n          //            }\n          //        }\n\n          //        //$dropableItem.parent().parent().parent().children(\'ul\').children().prepend(removefromtree);\n          //    }\n\n          //    //var lstNewChildren = [];\n\n          //    //for (var t = 0; t < getIDFromContainer.find("li").find(".VIS-tm-MLi").length ; t++) {\n          //    //    var getmidDragID = $(getIDFromContainer.find("li").find(".VIS-tm-MLi")[t]).attr("id");\n          //    //    if (getmidDragID == $dropableItem.attr("data-nodeid")) {\n          //    //        continue;\n          //    //    }\n          //    //    //var childOfParentofDroppable = $dropableItem.parent().parent().parent().children().find("div[data-nodeid=\'" + getmidDragID + "\']");\n          //    //    //if (childOfParentofDroppable && childOfParentofDroppable.length > 0) {\n          //    //    //    continue;\n          //    //    //}\n\n          //    //    if ($dropableItem.data("nodeid") == getIDFromContainer.find("li li").data(\'nodepid\')) {\n          //    //        continue;\n          //    //    }\n\n          //    //    var imgSource = $(getIDFromContainer.find(".VIS-tm-topMLi")[t]).find("img").attr("src");\n          //    //    var changeImgSource = $(getIDFromContainer.find(".VIS-tm-topMLi")[t]).find("img");\n          //    //    var setLinkedImage;\n          //    //    var src = imgSource;\n          //    //    if (src != null) {\n          //    //        src = src.substring(src.lastIndexOf("/") + 1);\n          //    //    }\n\n          //    //    var IsSummaryOrNot = null;\n          //    //    var ImageSource = null;\n          //    //    if (src == "folder.png") {\n          //    //        IsSummaryOrNot = "true";\n          //    //        ImageSource = "Areas/VIS/Images/folder.png";\n\n          //    //    }\n          //    //    else {\n          //    //        IsSummaryOrNot = "false";\n          //    //        ImageSource = "Areas/VIS/Images/mWindow.png";\n          //    //    }\n\n          //    //    // if ($chkSummaryLevel.is(":checked")) {\n          //    //    if (IsSummaryOrNot == "false") {\n          //    //        continue;\n          //    //    }\n          //    //    // }\n\n          //    //    var textForTree = $(getIDFromContainer.find("li").find(".VIS-tm-MLi")[t]).text();\n          //    //    //var newChild = $leftTreeDiv.data("kendoTreeView").append({\n          //    //    //    text: VIS.Utility.encodeText(textForTree),\n          //    //    //    \'IsSummary\': IsSummaryOrNot,\n          //    //    //    \'getparentnode\': SummaryID,\n          //    //    //    \'TableName\': $dropableItem.attr("data-tablename"),\n          //    //    //    \'NodeID\': $(getIDFromContainer.find("li").find(".VIS-tm-MLi")[t]).attr("id"),\n          //    //    //    \'TreeParentID\': $dropableItem.attr("data-nodeid"),\n          //    //    //    \'ParentID\': SummaryID,\n          //    //    //    \'ImageSource\': ImageSource,\n          //    //    //}, $dropableItem);\n          //    //    //lstNewChildren.push(newChild);\n\n          //    // //   $dropableItem= removefromtree\n\n          //    //}\n\n          //    //   moveDraggedItemToFirstPalce(removefromtree);\n\n          //    //var $drpableItemLis = $dropableItem.parent().parent().parent();\n\n          //    //if (lstNewChildren && lstNewChildren.length > 0) {\n          //    //    for (var h = lstNewChildren.length - 1; h >= 0; h--) {\n          //    //        moveDraggedItemToFirstPalce($drpableItemLis);\n          //    //    }\n          //    //}\n          //}\n          mListDrag();\n          AllSelectChkValue();\n          window.setTimeout(function () {\n            if ($cmbSearch.val() != "") {\n              //getEvalueforsearch\n\n              SearchNodeInTree(getEvalueforsearch);\n\n              //SearchNodeInTree(chksearchvalues);\n            }\n          }, 200);\n          HasScrollarOrNot();\n          chkCountForrestriction = true;\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var currentHeight;\n    var pressTimer = null;\n    var topObj;\n    var bottomObj;\n    var getTreeNodeChkValue = false;\n    var expandCollapse = false;\n    var animateSearchFlag = false;\n    function EventHandling() {\n      $cmbSelectTree.on("change", OnTreeChange);\n      $chkSummaryLevel.on("click", IsSummaryLevelCheck);\n      $ulBackDiv.on("scroll", GetAllMenuData);\n      $ulRight.on("click", GetNodePath);\n      $ulMid.on("click", MidSelectDesign);\n      $cmbSearch.on("keyup", SearchNodeInTree);\n      $cmbSearch.on("keypress", AnimateSearchNode);\n      $btnSearch.on("click", AnimateNodeWithButton);\n      $cmbSearch.on(\'input\', function (e) {\n        if (\'\' == this.value) {\n          //$checkSearchOrNot.css("display", "none");\n          $leftTreeDiv.find("span").removeClass("VIS-TM-highlight");\n          pageNoForChild = 1;\n          pageSizeForChild = 50;\n          searchChildNode = $cmbSearch.val();\n          if ($chktreeNode.is(":checked")) {\n            getTreeNodeChkValue = "true";\n          } else {\n            getTreeNodeChkValue = "false";\n          }\n          var selectedNodeID = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n          GetDataTreeNodeSelect(selectedNodeID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n        }\n      });\n      $cmbRightSearch.on(\'input\', function (e) {\n        if (\'\' == this.value) {\n          if ($cmbSelectTree.val() != "") {\n            $ulRight.empty();\n            window.setTimeout(function () {\n              $ulRight.empty();\n              searchRightext = "";\n              $demandsMenu = $rightMenuDemand.val();\n              pageNo = 1;\n              LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n            }, 200);\n          }\n        }\n      });\n      $cmbRefresh.on("click", CmbRefresh);\n      $treeRefresh.on("click", TreeRefresh);\n      $btnRightSearch.on("click", RightPanelSearch);\n      // $cmbRightSearch.on("keypress", RighPanelSearchOnEnter);\n\n      $cmbRightSearch.on("keyup", RighPanelSearchOnEnter);\n      $treeBackDiv.on("resize", ResizeBottomDiv);\n      $treeBackDiv.find(".ui-resizable-e").css("right", "0px");\n      $treeBackDiv.find(".ui-resizable-s").css("bottom", "0px");\n      FillValueInCombo();\n      $deleteChild.on("click", DeleteBottomDivData);\n      $rightMenuDemand.on("change", MenuWithDemands);\n      $deleteArea.mouseover(function (e) {\n        $deleteArea.addClass("selectchangecolor");\n        $deleteArea.css("background-color", "#ff0000");\n        //$deleteArea.animate({\n        //    backgroundColor: "#ff0000",\n        //}, 10);\n      });\n      $deleteArea.mouseleave(function () {\n        $deleteArea.removeClass("selectchangecolor");\n        $deleteArea.css("background-color", "#FFC0CB");\n        //gatDenideImg.css("display", "inherit");\n        //gatDenideImg.parent().removeClass("glyphicon glyphicon-trash");\n        //$deleteArea.animate({\n        //    backgroundColor: "#FFC0CB",\n        //});\n      });\n      $mData.on("scroll", GetChildDataOfTreeNode);\n      window.setTimeout(function () {\n        // $cmbSearch.width($searchDiv.width() - ($treeNodeSearch.width() + 40 + $btnSearch.width()));\n      }, 200);\n      if ($chktreeNode.is(":checked")) {\n        lastSeletedIndex = -1;\n      }\n      $chktreeNode.on("click", function (e) {\n        if ($chktreeNode.is(":checked")) {\n          getTreeNodeChkValue = "true";\n        } else {\n          getTreeNodeChkValue = "false";\n        }\n        SearchNodeInTree(e);\n      });\n      $chkAllCheckOrNot.on("click", NodeItemSecOrDesec);\n      $treeExpandColapse.on("click", TreeExpandCollapse);\n      $treeCollapseColapse.on("click", TreeCollapse);\n      $squenceDailog.on("click", OpenSquenceDailog);\n\n      //$ulSeqParentDiv.on("scroll", GetSequenceData);    \n\n      $chkAllRightPannel.on("click", SelectAllRightPanel);\n      crossImages.on("click", EmptySearchText);\n      rightCrossImage.on("click", EmptyRightSearchText);\n      ZoomTreeWindow.on("click", CreateNewTree);\n      mMouseRestrict.mouseover(function (e) {\n        mMouseRestrict.css({\n          \'cursor\': \'not-allowed\'\n        });\n      });\n      mMouseRestrict.mouseleave(function () {\n        mMouseRestrict.css({\n          \'cursor\': \'default\'\n        });\n      });\n      unlinkeAllNode.on("click", OpenW2overlay);\n      $chkTrace.on("click", StopDefaultW2overlay);\n    }\n    ;\n    var menuArray = [];\n    var bindornot = "true";\n    var convertmenuArray = null;\n    var msgShowforbindingWindow = null;\n    function CreateRestrictionforDelete() {\n      menuArray = [];\n      var table_id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableID", {\n        "treeId": $treeID\n      }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n      var tablename = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableName", {\n        "table_id": table_id\n      }, null);\n      bindornot = "true";\n      if (tablename == "AD_Menu") {\n        bindornot = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/IsRecordExists", {\n          "treeId": $treeID\n        }, null);\n      }\n      var getIdes = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetWindowMenuIds", {}, null);\n      var formID = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetFormMenuIds", {}, null);\n      if (formID != null && formID.length > 0) {\n        for (var i = 0; i < formID.length; i++) {\n          menuArray.push(formID[i]);\n        }\n      }\n      convertmenuArray = menuArray;\n      menuArray = menuArray.toString();\n      var getnamebyID = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetNameByIds", {\n        "ids": menuArray\n      }, null);\n      var messagess = "";\n      if (getnamebyID != null && getnamebyID.length > 0) {\n        for (var m = 0; m < getnamebyID.length; m++) {\n          messagess += getnamebyID[m];\n          messagess += ",";\n        }\n      }\n      msgShowforbindingWindow = messagess + " " + VIS.Msg.getMsg("MenuBinded");\n      $bsyDivforbottom[0].style.visibility = "hidden";\n    }\n    ;\n    function UpdateRollCheckSeq(idforupdate) {\n      TreeTableName();\n      var seq = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetSeqNo", {\n        "treeId": $treeID,\n        "tblName": tableTreeName,\n        "nodeId": "-1"\n      }, null);\n      seq += 1;\n      VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/UpdateSeqNo", {\n        "treeId": $treeID,\n        "tblName": tableTreeName,\n        "seqNo": seq,\n        "nodeId": idforupdate,\n        "bySeqNo": false,\n        "isParant": true\n      }, null);\n    }\n    ;\n    function StopDefaultW2overlay(e) {\n      //  e.stopPropagation();\n    }\n    ;\n    function RemoeveLinkedNode(e) {\n      if ($cmbSelectTree.val() != "") {\n        if ($(this).find("span").hasClass("vis-tm-delete")) {\n          return;\n        }\n        VIS.ADialog.confirm("RemoveUnlinkedItem", true, "", "Confirm", function (result) {\n          if (!result) {\n            return;\n          } else {\n            RemoveLinkedItemFromTree();\n            $treeExpandColapse.css("display", "none");\n            $treeCollapseColapse.css("display", "inherit");\n            var selText = $cmbSelectTree.find("option:selected").text();\n            $lblMh4.text(selText);\n            chkCountForrestriction = false;\n          }\n        });\n      }\n    }\n    ;\n    function RemoveLinkedItemFromTree() {\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/RemoveLinkedItemFromTree",\n        type: \'Post\',\n        data: {\n          treeID: $treeID,\n          menuId: menuArray\n        },\n        success: function (data) {\n          var res = JSON.parse(data);\n          if (res == "count") {\n            $ulRight.empty();\n            searchRightext = $cmbRightSearch.val();\n            $demandsMenu = $rightMenuDemand.val();\n            pageNo = 1;\n            LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n            window.setTimeout(function () {\n              //   changeSeqFlag = false;\n              TreeRefresh();\n              window.setTimeout(function () {\n                chkCountForrestriction = false;\n                $bsyDiv[0].style.visibility = "hidden";\n              }, 200);\n            }, 200);\n          } else if (res == "menubind") {\n            //VIS.ADialog.info("NeverDelete");\n            $bsyDiv[0].style.visibility = "hidden";\n            VIS.ADialog.info("NeverDelete", true, msgShowforbindingWindow);\n          }\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var $outerP = null;\n    function OpenW2overlay() {\n      if ($cmbSelectTree.val() != "") {\n        var $pintohomeOverlay = $(\'<ul class="vis-apanel-tm-ul"></ul>\');\n        var $outerDiv = $(\'<div>\');\n        var $traceDiv = $(\'<div style="padding:0 10px;min-width:150px">\');\n        var imgSpan = $(\'<span class="VIS-Tm-glyphiconglyphicon-link VIS-Tm-unlinkforbottmo vis vis-link"></span>\');\n        $outerP = $(\'<p style="line-height:19px;cursor:pointer;">\' + VIS.Msg.getMsg("RemoveLinkedItem") + \'</p>\').append(imgSpan);\n        $outerDiv.append($traceDiv);\n        $traceDiv.append($(\'<div style="margin-top: 10px;" ></div>\').append($chkTrace).append($lblTrace));\n        $traceDiv.append($(\'<div style="float: left;margin-bottom: 6px;margin-top: 5px;width:100%" ></div>\').append($outerP));\n        $(this).w2overlay($outerDiv);\n        if (chkCountForrestriction == true) {\n          imgSpan.removeClass("vis-tm-delete");\n        } else {\n          imgSpan.addClass("vis-tm-delete");\n        }\n        $outerP.on("click", RemoeveLinkedNode);\n      }\n    }\n    ;\n    function HasScrollarOrNot(e) {\n      if ($leftTreeDiv.find("span").hasClass("k-state-selected")) {\n        if ($mData.find("ul").height() < $mData.height()) {\n          pageNoForChild = 1;\n          pageSizeForChild = 50;\n          if ($chktreeNode.is(":checked")) {\n            searchChildNode = $cmbSearch.val();\n          } else {\n            searchChildNode = "";\n          }\n          if ($chktreeNode.is(":checked")) {\n            getTreeNodeChkValue = "true";\n          } else {\n            getTreeNodeChkValue = "false";\n          }\n          $scrollBottom = false;\n          var selectedNodeID = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n          GetDataTreeNodeSelect(selectedNodeID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n        }\n      }\n    }\n    ;\n    function AllSelectChkRightSide() {\n      $chkAllRightPannel.prop("checked", false);\n    }\n    ;\n    function CreateNewTree() {\n      var n_win = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetWindowtId", {}, null); // spelling corrected by vinay bhatt on 18 oct 2018\n      var zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction("AD_Tree_ID", VIS.Query.prototype.EQUAL, $treeID);\n      VIS.viewManager.startWindow(n_win, zoomQuery);\n    }\n    ;\n    function EmptyRightSearchText() {\n      rightCrossImage.css("display", "none");\n      $cmbRightSearch.val("");\n      if ($cmbSelectTree.val() != "") {\n        $ulRight.empty();\n        window.setTimeout(function () {\n          $ulRight.empty();\n          searchRightext = "";\n          $demandsMenu = $rightMenuDemand.val();\n          pageNo = 1;\n          LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n        }, 200);\n      }\n    }\n    ;\n    function EmptySearchText(e) {\n      $cmbSearch.val("");\n      $cmbSearch.focus();\n      crossImages.css("display", "none");\n      $leftTreeDiv.find("span").removeClass("VIS-TM-highlight");\n      pageNoForChild = 1;\n      pageSizeForChild = 50;\n      searchChildNode = $cmbSearch.val();\n      if ($chktreeNode.is(":checked")) {\n        getTreeNodeChkValue = "true";\n      } else {\n        getTreeNodeChkValue = "false";\n      }\n      $scrollBottom = true;\n      var selectedNodeID = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n      if ($cmbSelectTree.val() != "") {\n        GetDataTreeNodeSelect(selectedNodeID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n      }\n    }\n    ;\n    function SelectAllRightPanel(e) {\n      chksearchvalues = e;\n      if ($chkAllRightPannel.is(":checked")) {\n        $bsyDivMenu[0].style.visibility = "visible";\n        $rightmenuScroll = false;\n        for (var i = 0; i < $ulRight.find("input").length; i++) {\n          if ($($ulRight.find("input")[i]).attr("disabled") == "disabled") {\n            $($ulRight.find("input")[i]).parent().parent().removeClass("vis-tm-menuselectedcolor");\n          }\n          if ($($ulRight.find("input")[i]).attr("disabled") != "disabled") {\n            $($ulRight.find("input")[i]).prop("checked", true);\n            $($ulRight.find("input")[i]).parent().parent().addClass("vis-tm-menuselectedcolor");\n          }\n        }\n        $bsyDivMenu[0].style.visibility = "hidden";\n      } else {\n        if ($rightmenuScroll == false) {\n          $bsyDivMenu[0].style.visibility = "visible";\n          $ulRight.find("input").prop("checked", false);\n          $ulRight.find(".vis-tm-menuselectedcolor").removeClass("vis-tm-menuselectedcolor");\n          $bsyDivMenu[0].style.visibility = "hidden";\n        }\n      }\n    }\n    ;\n    function SequenceLiDesign(e) {\n      if ($(e.target).hasClass("VIS-tm-MLi")) {\n        $(this).find("li").removeClass("vis-tm-menuselectedcolor");\n        $(this).find("li").find("input").prop("checked", false);\n        $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().find("input").prop("checked", true);\n        $chkAllCheckOrNot.prop("checked", false);\n      }\n      if ($(e.target).hasClass(" summNonsumImage ")) {\n        $(this).find("li").removeClass("vis-tm-menuselectedcolor");\n        $(this).find("li").find("input").prop("checked", false);\n        $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().find("input").prop("checked", true);\n        $chkAllCheckOrNot.prop("checked", false);\n      }\n      if ($(e.target).hasClass("VIS-tm-checkbox")) {\n        if ($(e.target).parent().find("input").prop("checked")) {\n          $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        } else {\n          $(e.target).parent().removeClass("vis-tm-menuselectedcolor");\n          $(e.target).parent().find("li").removeClass("vis-tm-menuselectedcolor");\n          $chkAllCheckOrNot.prop("checked", false);\n        }\n      }\n    }\n    ;\n    var scrolFlagforDailog = true;\n    function GetSequenceData(e) {\n      // if ($chktreeNode.is(":checked")) {\n      //    searchChildNode = $cmbSearch.val();\n      //}\n      // else {\n      searchChildNode = "";\n      //}\n      var elem = $(e.currentTarget);\n      if (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()) {\n        scrolFlagforDailog = false;\n        dailogpageNoForChild += 1;\n        $bsyDiv[0].style.visibility = "visible";\n        FillSequenceDailog(getParentID, $treeID, dailogpageNoForChild, dailogpageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n      }\n    }\n    ;\n    var dailogpageNoForChild = 1;\n    var dailogpageSizeForChild = 50;\n    var changeSeqFlag = false;\n    var onseqSelectID = 0;\n    function OpenSquenceDailog(e, ui) {\n      $bsyDiv[0].style.visibility = "visible";\n      if ($cmbSelectTree.val() != "") {\n        $cmbSearch.prop("disabled", false);\n        $btnSearch.prop("disabled", false);\n      }\n      $setorderflagss = false;\n      if (isulMidData == false) {\n        $setorderflagss = true;\n        $squenceDailog.addClass("vis-tm-delete");\n        $bsyDiv[0].style.visibility = "hidden";\n        return;\n      }\n      if ($leftTreeDiv.find(".k-state-selected").length == 0) {\n        $bsyDiv[0].style.visibility = "hidden";\n        $setorderflagss = true;\n        return;\n      }\n      if ($cmbSelectTree.val() == "") {\n        $bsyDiv[0].style.visibility = "hidden";\n        $setorderflagss = true;\n        return;\n      }\n      SquenceDailogDesign();\n      scrolFlagforDailog = true;\n\n      //pageNoForChild = 1;\n      //pageSizeForChild = 50;\n\n      dailogpageNoForChild = 1;\n      dailogpageSizeForChild = 50;\n\n      // if ($chktreeNode.is(":checked")) {\n      //searchChildNode = $cmbSearch.val();\n      //  }\n      // else {\n      searchChildNode = "";\n      // }\n      // if ($chktreeNode.is(":checked")) {\n      // getTreeNodeChkValue = "true";\n      // }\n      // else {\n      getTreeNodeChkValue = "false";\n      // }\n      var selectedNodeID = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n      $bsyDiv[0].style.visibility = "visible";\n      window.setTimeout(function () {\n        FillSequenceDailog(selectedNodeID, $treeID, dailogpageNoForChild, dailogpageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n      }, 200);\n      $ulSeq.on("click", SequenceLiDesign);\n      $ulSeqParentDiv.on("scroll", GetSequenceData);\n      var createTab = new VIS.ChildDialog();\n      createTab.setHeight(550);\n      createTab.setWidth(450);\n      createTab.setEnableResize(false);\n      createTab.setTitle(VIS.Msg.getMsg(\'SetOrder\'));\n      createTab.setModal(true);\n      createTab.setContent($seqContainer);\n      $ulSeq.empty();\n      createTab.show();\n      createTab.onClose = function () {\n        changeSeqFlag = true;\n      };\n      createTab.onOkClick = function (e) {\n        if (isSorttingflag == false) {\n          isSorttingflag = true;\n          changeSeqFlag = true;\n          $bsyDivforbottom[0].style.visibility = "visible";\n          var selectedNodeIDss = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n          onseqSelectID = selectedNodeIDss;\n          var selectedNodeID = $leftTreeDiv.find(".k-state-selected").find(".treechild").attr("data-nodeid");\n          var ItemsID = [];\n          var ItemsIDTostring = "";\n          for (var l = 0; l < $ulSeq.find("li li").length; l++) {\n            var id = $($ulSeq.find("li li")[l]).attr("data-id");\n            ItemsID.push(id);\n          }\n          ItemsIDTostring = ItemsID.toString();\n          $.ajax({\n            url: VIS.Application.contextUrl + "TreeMaintenance/UpdateItemSeqNo",\n            type: \'Post\',\n            //   async: false,\n            data: {\n              treeID: $treeID,\n              itemsid: ItemsIDTostring,\n              ParentID: selectedNodeID\n            },\n            success: function (data) {\n              var res = JSON.parse(data);\n              TreeRefresh();\n              $ulMid.empty();\n              pageNoForChild = 1;\n              pageSizeForChild = 50;\n              if ($chktreeNode.is(":checked")) {\n                searchChildNode = $cmbSearch.val();\n              } else {\n                searchChildNode = "";\n              }\n              if ($chktreeNode.is(":checked")) {\n                getTreeNodeChkValue = "true";\n              } else {\n                getTreeNodeChkValue = "false";\n              }\n              $scrollBottom = true;\n              // searchflag = false;\n\n              GetDataTreeNodeSelect(selectedNodeID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n              $treeExpandColapse.css("display", "inherit");\n              $treeCollapseColapse.css("display", "none");\n\n              //$bsyDivforbottom[0].style.visibility = "hidden";\n            },\n            error: function (e) {\n              console.log(e);\n              $bsyDivforbottom[0].style.visibility = "hidden";\n            }\n          });\n        } else {\n          //elem[0].scrollHeight - elem.scrollTop() - 10 == elem.outerHeight() - 10\n          //$mData[0].scrollHeight = eleScrollHeight;\n          //$mData.scrollTop(eleScrollTop);\n\n          //if (eleScrollHeight - eleScrollTop > eleOutterHeight)\n          //{\n          //    eleOutterHeight = eleOutterHeight + (eleScrollHeight - eleScrollTop);\n          //}\n\n          //$mData.outerHeight(eleOutterHeight);\n        }\n        // $mData.off("scroll");\n        //$mData.on("scroll", GetChildDataOfTreeNode);\n\n        //$mData.height(leftMianDataDiv.height() - ($treeBackDiv.height() + $mTopHeader.height() + 60));\n        //$mData.trigger("scroll");\n\n        if ($chktreeNode.is(":checked")) {\n          searchChildNode = $cmbSearch.val();\n        } else {\n          searchChildNode = "";\n        }\n        if ($chktreeNode.is(":checked")) {\n          getTreeNodeChkValue = "true";\n        } else {\n          getTreeNodeChkValue = "false";\n        }\n        $setorderflagss = true;\n      };\n      createTab.onCancelClick = function () {\n        $bsyDiv[0].style.visibility = "hidden";\n        //$mData[0].scrollHeight = eleScrollHeight;\n        //$mData.scrollTop(eleScrollTop);\n        //$mData.outerHeight(eleOutterHeight);\n\n        if ($chktreeNode.is(":checked")) {\n          searchChildNode = $cmbSearch.val();\n        } else {\n          searchChildNode = "";\n        }\n        if ($chktreeNode.is(":checked")) {\n          getTreeNodeChkValue = "true";\n        } else {\n          getTreeNodeChkValue = "false";\n        }\n        isSorttingflag = true;\n        $setorderflagss = true;\n        changeSeqFlag = false;\n      };\n    }\n    ;\n    var $ulSeq = $("<ul style=\'padding:0;list-style: none\'>");\n    ;\n    var $seqContainer = $(\'<div>\');\n    var $ulSeqParentDiv = $(\'<div style="padding: 10px;height:425px;overflow:auto">\');\n    function SquenceDailogDesign() {\n      $seqContainer.append($ulSeqParentDiv.append($ulSeq));\n    }\n    ;\n    function FillSequenceDailog(selectedNodeID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e) {\n      //$bsyDivforbottom[0].style.visibility = "visible";\n      if (searchChildNode == null) {\n        searchChildNode = "";\n      }\n      if (scrolFlagforDailog == true) {\n        $ulSeq.empty();\n      }\n      DropMenu();\n      $.ajax({\n        //                 url: VIS.Application.contextUrl + "TreeMaintenance/GetDataTreeNodeSelect",\n        url: VIS.Application.contextUrl + "TreeMaintenance/FillSequenceDailog",\n        type: \'Post\',\n        //async:false,\n        data: {\n          nodeID: selectedNodeID,\n          treeID: $treeID,\n          pageNo: pageNoForChild,\n          pageLength: pageSizeForChild,\n          searchChildNode: searchChildNode,\n          getTreeNodeChkValue: getTreeNodeChkValue\n        },\n        success: function (data) {\n          $bsyDiv[0].style.visibility = "visible";\n          //sorttableLi();                    \n          var res = JSON.parse(data);\n          var summImage = null;\n          var nonSummImage = null;\n          if (res.length > 0) {\n            //$bsyDivforbottom[0].style.visibility = "visible";\n            //if ($scrollBottom == true) {\n            //    $ulMid.empty();\n            //}\n            for (var i = 0; i < res.length; i++) {\n              if ($scrollBottom == false) {\n                if ($ulSeq.find("li li").length > 0) {\n                  var lisItem = $ulSeq.find(\'[data-id="\' + res[i]["parentID"] + \'"]\');\n                  if (lisItem && lisItem.length > 0) {\n                    continue;\n                  }\n                }\n              }\n              if (res[i]["parentID"] == 0) {\n                continue;\n              }\n              var checkBox = $(\'<input class="VIS-tm-checkbox" type="checkbox" />\');\n              if (res[i]["issummary"] == "Y") {\n                // continue;\n                summImage = "<i class=\'fa fa-folder-o summNonsumImage\' data-imgsrc=\'Images/folder.png\'></i>";\n                $ulSeq.append($(\'<li class="VIS-tm-topMLi">\').append(checkBox).append(summImage).append($("<li class=\'VIS-tm-MLi\' data-NodePID=\'" + res[i]["NodeParentID"] + "\' data-id=\'" + res[i]["parentID"] + "\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>")));\n              } else {\n                nonSummImage = "<i class=\'vis vis-m-window summNonsumImage\' data-imgsrc=\'Images/mWindow.png\'></i>";\n                var li = $(\'<li class="VIS-tm-topMLi" >\');\n                li.append(checkBox);\n                li.append(nonSummImage);\n                li.append($("<li class=\'VIS-tm-MLi\'  data-NodePID=\'" + res[i]["NodeParentID"] + "\'  data-id=\'" + res[i]["parentID"] + "\' data-issummary=\'" + res[i]["issummary"] + "\' id=\'" + res[i]["parentID"] + "\'   >" + VIS.Utility.encodeText(res[i]["name"]) + "</li>"));\n                $ulSeq.append(li);\n                //LiSorttable(li);\n              }\n            }\n          } else {}\n          //window.setTimeout(function () {\n          dailogLiSorttable();\n          $ulSeq.sortable("refresh");\n          //}, 200);\n          window.setTimeout(function () {\n            $bsyDiv[0].style.visibility = "hidden";\n          }, 500);\n        },\n        error: function (e) {\n          console.log(e);\n          $ulSeq.empty();\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    //var overflowHidden = null;\n    var elementsort = null;\n    var siblingdata = null;\n    var isSorttingflag = true;\n    function dailogLiSorttable(e) {\n      var helper = null;\n      $ulSeq.sortable({\n        cursorAt: {\n          left: -10,\n          top: -10\n        },\n        helper: function (e, item) {\n          helper = $(\'<li />\');\n          if (!item.hasClass("vis-tm-menuselectedcolor")) {\n            item.addClass(\'vis-tm-menuselectedcolor\').siblings().removeClass(\'vis-tm-menuselectedcolor\');\n          }\n          var elements = item.parent().children(\'.vis-tm-menuselectedcolor\').clone();\n          elementsort = item.data(\'multidrag\', elements).siblings(\'.vis-tm-menuselectedcolor\');\n          item.data(\'multidrag\', elements).siblings(\'.vis-tm-menuselectedcolor\').hide();\n          //item.data(\'multidrag\', elements).siblings(\'.vis-tm-menuselectedcolor\').remove();\n\n          // helper.css({ "max-height": "250px", "overflow": "auto" });\n          siblingdata = helper.append(elements);\n          return helper.append(elements);\n        },\n        start: function (event, ui) {\n          //$(event.target).find(".ui-sortable-placeholder").css("height", "5px");\n\n          isSorttingflag = false;\n          $ulSeq.find("input").prop("checked", false);\n          GetPIDforItems = ui.item.find("li").attr("id");\n          $(this).parent().parent().parent().css("overflow", "hidden");\n        },\n        change: function (event, ui) {},\n        update: function (event, ui) {},\n        stop: function (event, ui) {\n          ui.item.after(ui.item.data(\'multidrag\')).remove();\n          window.setTimeout(function () {\n            elementsort.remove();\n          }, 100);\n\n          // elementsort.remove();\n          $ulSeq.find("input").prop("checked", false);\n          $ulSeq.find(".vis-tm-menuselectedcolor").find("input").prop("checked", true);\n        }\n      });\n    }\n    ;\n    function TreeCollapse() {\n      if ($cmbSelectTree.val() != "") {\n        // $leftTreeKeno.toggle(".k-item");\n\n        // window.setTimeout(function ()\n        //{\n        if ($leftTreeDiv.find("li").length > 1) {\n          $bsyDivTree[0].style.visibility = "visible";\n          window.setTimeout(function () {\n            $treeCollapseColapse.css("display", "none");\n            $treeExpandColapse.css("display", "inherit");\n            $treeExpandColapse.css("float", "right");\n            $leftTreeKeno.data("kendoTreeView").expand(".k-item");\n            $bsyDivTree[0].style.visibility = "hidden";\n          }, 150);\n        }\n\n        //}, 150);\n      }\n    }\n    ;\n    function TreeExpandCollapse() {\n      if ($cmbSelectTree.val() != "") {\n        $bsyDivTree[0].style.visibility = "visible";\n        window.setTimeout(function () {\n          $treeCollapseColapse.css("display", "inherit");\n          $treeExpandColapse.css("display", "none");\n          $treeCollapseColapse.css("float", "right");\n          $leftTreeKeno.data("kendoTreeView").collapse(".k-item");\n          $bsyDivTree[0].style.visibility = "hidden";\n        }, 150);\n      }\n    }\n    ;\n    function NodeItemSecOrDesec() {\n      if ($chkAllCheckOrNot.is(":checked")) {\n        $ulMid.find("input").prop("checked", true);\n        $ulMid.find("li").addClass("vis-tm-menuselectedcolor");\n        $deleteChild.removeClass("vis-tm-delete");\n        if ($ulMid.find("input:checked").length == 0) {\n          $deleteChild.addClass("vis-tm-delete");\n        }\n      } else {\n        $ulMid.find("input").prop("checked", false);\n        $ulMid.find("li").removeClass("vis-tm-menuselectedcolor");\n        $deleteChild.addClass("vis-tm-delete");\n      }\n    }\n    ;\n    function IsSearchOrNot() {\n      if ($cmbSearch.val() !== "") {\n        $cmbSearch.focus();\n        $cmbSearch.select();\n      }\n    }\n    ;\n    var pagenumafteronCancel = 0;\n    var eleScrollHeight = 0;\n    var eleScrollTop = 0;\n    var eleOutterHeight = 0;\n    function GetChildDataOfTreeNode(e) {\n      searchChildNode = $cmbSearch.val();\n      var elem = $(e.currentTarget);\n\n      // if (elem.scrollTop() + elem.innerHeight() >= e.currentTarget.scrollHeight)\n      // {\n\n      eleScrollHeight = elem[0].scrollHeight;\n      eleScrollTop = elem.scrollTop();\n      eleOutterHeight = elem.outerHeight();\n      if (elem[0].scrollHeight - elem.scrollTop() - 10 == elem.outerHeight() - 10) {\n        if ($ulMid.find("li").length > 0) {\n          pageNoForChild += 1;\n          $scrollBottom = false;\n          $bsyDivforbottom[0].style.visibility = "visible";\n          GetDataTreeNodeSelect(getParentID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n          $bsyDivforbottom[0].style.visibility = "hidden";\n          if ($ulMid.find("li").length > 0) {\n            $recordeNotFound.css("display", "none");\n            $bsyDivforbottom[0].style.visibility = "hidden";\n          }\n        }\n      }\n    }\n    ;\n    var selectedItemArray = [];\n    function DeleteBottomDivData() {\n      selectedItemArray = [];\n      if ($ulMid.find("input:checked").length > 0) {\n        VIS.ADialog.confirm("DoYouWantToUnlink", true, "", "Confirm", function (result) {\n          if (!result) {\n            $bsyDiv[0].style.visibility = "hidden";\n            return;\n            //cancel\n          } else {\n            $bsyDiv[0].style.visibility = "visible";\n            // var selectedItem = $ulMid.find("input:selected");\n            window.setTimeout(function () {\n              var selectedItemss = [];\n              for (var i = 0; i < $ulMid.find("input:checked").length; i++) {\n                //var getID = $($ulMid.find("input:checked")[i]).parent().find("li").attr("id");\n                var getID = $($ulMid.find("input:checked")[i]).parent().find("li").attr("data-id");\n                if (bindornot == "false") {\n                  if ($.inArray(parseInt(getID), convertmenuArray) >= 0) {\n                    continue;\n                  }\n                }\n                selectedItemArray.push(getID);\n                selectedItemss.push(parseInt(getID));\n              }\n              bottomchildselectedID = selectedItemArray;\n              selectedItemArray = selectedItemArray.toString();\n              if (selectedItemArray.length > 0) {\n                DeleteNodeFromBottom($treeID, selectedItemArray);\n              } else {\n                //VIS.ADialog.info("NeverDelete");\n                VIS.ADialog.info("NeverDelete", true, msgShowforbindingWindow);\n                $bsyDiv[0].style.visibility = "hidden";\n              }\n              ///}\n            }, 200);\n          }\n        });\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    function DeleteNodeFromBottom($treeID, selectedItemArray) {\n      $bsyDiv[0].style.visibility = "visible";\n      var table_id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableID", {\n        "treeId": $treeID\n      }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n\n      treeType = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTreeType", {\n        "treeId": $treeID\n      }, null);\n      var tbname = "";\n      if (treeType == "PR") {\n        tbname = "AD_TreeNodePR";\n      } else if (treeType == "BP") {\n        tbname = "AD_TreeNodeBP";\n      } else if (treeType == "MM") {\n        tbname = "AD_TreeNodeMM";\n      } else {\n        tbname = "AD_TreeNode";\n      }\n      getIDFromChildLevel = [];\n\n      //GetChildCount();\n      var strGetIDs = "";\n      //for (var j = 0; j < $ulMid.find("input:checked").length ; j++) {                \n\n      //    //FindChildsID(tbname, bottomchildselectedID[j], $treeID);\n      //   // getIDFromChildLevel.push(bottomchildselectedID[j]);\n      //}\n\n      if ($ulMid.find("input:checked").length > 0) {\n        selectedItemArray = selectedItemArray.toString();\n        GetAllChildesIDs(tbname, selectedItemArray, $treeID);\n      }\n      if ($ulMid.find("input:checked").length == 0) {\n        ////selectedItemArray.push(GetPIDforItems);\n\n        //FindChildsID(tbname, GetPIDforItems, $treeID);\n        // getIDFromChildLevel.push(GetPIDforItems);\n\n        //selectedItemArray = GetPIDforItems.toString();\n        GetAllChildesIDs(tbname, selectedItemArray, $treeID);\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/DeleteNodeFromBottom",\n        type: \'Post\',\n        data: {\n          nodeid: selectedItemArray,\n          treeID: $treeID,\n          menuArray: menuArray\n        },\n        success: function (data) {\n          var res = JSON.parse(data);\n          if (res == "") {\n            $chkAllCheckOrNot.prop("checked", false);\n            var getMidCheckBoxValue = true;\n\n            //if ($ulMid.find("input:checked").length == 0) {\n            //    $ulMid.find("li").find("li[id=\'" + GetPIDforItems + "\']").parent().remove();\n            //    $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + GetPIDforItems + "\']").parent().parent().parent());\n            //}\n\n            for (var i = 0; i < $ulMid.find("input:checked").length; i++) {\n              getMidCheckBoxValue = false;\n              if (bindornot == "false") {\n                var id = $($ulMid.find("input:checked").parent().find("li")[i]).attr("data-id");\n                if ($.inArray(parseInt(id), convertmenuArray) >= 0) {\n                  continue;\n                }\n              }\n\n              //var dragMenunodearr = dragMenuNodeIDArray.toString();\n              //dragMenunodearr = dragMenunodearr.split(\',\');selectedItemArray\n\n              var dragMenunodearr = selectedItemArray.toString();\n              dragMenunodearr = dragMenunodearr.split(\',\');\n\n              //$leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + bottomchildselectedID[i] + "\']").parent().parent().parent());\n              //var getLi = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent();\n\n              //var getLi = $ulRight.find("li").find("li[id=\'" + bottomchildselectedID[i] + "\']").parent().parent();\n              //var getLi = $ulRight.find("li").find("li[data-id=\'" + bottomchildselectedID[i] + "\']").parent().parent();\n\n              var getLi = $ulRight.find("li").find("li[data-id=\'" + dragMenunodearr[i] + "\']").parent().parent();\n              getLi.find("input").prop("disabled", false);\n              getLi.find("i").removeClass("vis-tm-opacity");\n              getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n              getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n              getLi.find("input").css("cursor", "pointer");\n              if (getLi.hasClass("vis-tm-menuselectedcolor")) {\n                $pathInfo.empty();\n                getLi.find("input").prop("checked", true);\n              }\n              if ($rightMenuDemand.val() == "Linked") {\n                getLi.remove();\n              }\n\n              //var selectedID = $($ulMid.find("input:checked").parent().find(".VIS-tm-MLi")[i]).attr("id");\n              var selectedID = $($ulMid.find("input:checked").parent().find(".VIS-tm-MLi")[i]).attr("data-id");\n\n              //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + selectedID + "\']").parent().parent().find("img").attr("src");\n              //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + selectedID + "\']").parent().parent().find("img");\n\n              var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedID + "\']").parent().parent().find("img").attr("src");\n              var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedID + "\']").parent().parent().find("img");\n              var setLinkedImage;\n              var src = imgSource;\n              if (src != null) {\n                src = src.substring(src.lastIndexOf("/") + 1);\n                if (src == "nonSummary.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                  changeImgSource.attr("src", setLinkedImage);\n                } else if (src == "summary.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                  changeImgSource.attr("src", setLinkedImage);\n                  GetChildCounts(selectedID);\n                  $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + bottomchildselectedID[i] + "\']").parent().parent().parent());\n\n                  //if ($getchildCount == true) {\n                  //    pageNo = 1;\n                  //    $ulRight.empty();\n                  //    searchRightext = $cmbRightSearch.val();\n                  //    $demandsMenu = $rightMenuDemand.val();\n                  //    LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n                  //    $ulMid.find("input:checked").parent().remove();\n                  //    $bsyDiv[0].style.visibility = "hidden";\n                  //    return;\n                  //}\n\n                  //if ($ulMid.find("input:checked").length > 15) {\n                  //    pageNo = 1;\n                  //    $ulRight.empty();\n                  //    searchRightext = $cmbRightSearch.val();\n                  //    $demandsMenu = $rightMenuDemand.val();\n                  //    LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n                  //    $ulMid.find("input:checked").parent().remove();\n                  //    $bsyDiv[0].style.visibility = "hidden";\n                  //    return;\n                  //}\n\n                  //FindChildsID(tbname, selectedItemArray[i], $treeID);\n                  //getIDFromChildLevel;\n                  for (var i = 0; i < getIDFromChildLevel.length; i++) {\n                    var selectedItem = getIDFromChildLevel[i];\n                    $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItem + "\']").parent().parent().parent());\n                    $($ulMid.find("input:checked")[i]).parent().remove();\n\n                    //var getLiFromRight = $($($ulRight.find("li"))).find("li[id=\'" + selectedItem + "\']").parent().parent();\n\n                    var getLiFromRight = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedItem + "\']").parent().parent();\n                    getLiFromRight.find("input").prop("disabled", false);\n                    getLiFromRight.removeClass("vis-tm-menuselectedcolor");\n                    getLiFromRight.find("i").removeClass("vis-tm-opacity");\n                    getLiFromRight.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                    getLiFromRight.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n                    getLiFromRight.find("input").css("cursor", "pointer");\n\n                    //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                    //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + selectedItem + "\']").parent().parent().find("img");\n\n                    var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                    var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img");\n                    var setLinkedImage;\n                    var src = imgSource;\n                    if (src != null) {\n                      src = src.substring(src.lastIndexOf("/") + 1);\n                      if (src == "nonSummary.png") {\n                        setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                      } else if (src == "summary.png") {\n                        setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                      } else if (src == "mWindow.png") {\n                        setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                      } else if (src == "folder.png") {\n                        setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                      }\n                    }\n                    changeImgSource.attr("src", setLinkedImage);\n                  }\n                }\n\n                //changeImgSource.attr("src", setLinkedImage);\n              }\n            }\n            if (getMidCheckBoxValue == true) {\n              //===================================================================================\n              if ($ulMid.find("input:checked").length == 0) {\n                //var getLi = $ulRight.find("li").find("li[id=\'" + GetPIDforItems + "\']").parent().parent();\n\n                //var getLi = $ulRight.find("li").find("li[data-id=\'" + GetPIDforItems + "\']").parent().parent();\n                var getLi = $ulRight.find("li").find("li[data-id=\'" + getIDFromChildLevel + "\']").parent().parent();\n                getLi.find("input").prop("disabled", false);\n                getLi.find("i").removeClass("vis-tm-opacity");\n                getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n                getLi.find("input").css("cursor", "pointer");\n                if (getLi.hasClass("vis-tm-menuselectedcolor")) {\n                  $pathInfo.empty();\n                  getLi.find("input").prop("checked", true);\n                }\n                if ($rightMenuDemand.val() == "Linked") {\n                  getLi.remove();\n                }\n\n                //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + GetPIDforItems + "\']").parent().parent().find("img").attr("src");\n                //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + GetPIDforItems + "\']").parent().parent().find("img");\n\n                // var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + GetPIDforItems + "\']").parent().parent().find("img").attr("src");\n                //var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + GetPIDforItems + "\']").parent().parent().find("img");\n\n                var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + getIDFromChildLevel + "\']").parent().parent().find("img").attr("src");\n                var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + getIDFromChildLevel + "\']").parent().parent().find("img");\n                var setLinkedImage;\n                var src = imgSource;\n                if (src != null) {\n                  src = src.substring(src.lastIndexOf("/") + 1);\n                  if (src == "nonSummary.png") {\n                    setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                    changeImgSource.attr("src", setLinkedImage);\n                  } else if (src == "summary.png") {\n                    setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                    changeImgSource.attr("src", setLinkedImage);\n                    //GetChildCounts(GetPIDforItems);\n\n                    GetChildCounts(getIDFromChildLevel);\n                    $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + getIDFromChildLevel + "\']").parent().parent().parent());\n                    //$leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + GetPIDforItems + "\']").parent().parent().parent());\n\n                    //if ($getchildCount == true) {\n                    //    pageNo = 1;\n                    //    $ulRight.empty();\n                    //    searchRightext = $cmbRightSearch.val();\n                    //    $demandsMenu = $rightMenuDemand.val();\n                    //    LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n                    //    $ulMid.find("input:checked").parent().remove();\n                    //    $bsyDiv[0].style.visibility = "hidden";\n                    //    return;\n                    //}\n\n                    for (var i = 0; i < getIDFromChildLevel.length; i++) {\n                      var selectedItem = getIDFromChildLevel[i];\n                      $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItem + "\']").parent().parent().parent());\n                      $($ulMid.find("input:checked")[i]).parent().remove();\n\n                      //var getLiFromRight = $($($ulRight.find("li"))).find("li[id=\'" + selectedItem + "\']").parent().parent();\n\n                      var getLiFromRight = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedItem + "\']").parent().parent();\n                      getLiFromRight.find("input").prop("disabled", false);\n                      getLiFromRight.removeClass("vis-tm-menuselectedcolor");\n                      getLiFromRight.find("i").removeClass("vis-tm-opacity");\n                      getLiFromRight.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                      getLiFromRight.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n                      getLiFromRight.find("input").css("cursor", "pointer");\n\n                      //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                      //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + selectedItem + "\']").parent().parent().find("img");\n\n                      var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                      var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img");\n                      var setLinkedImage;\n                      var src = imgSource;\n                      if (src != null) {\n                        src = src.substring(src.lastIndexOf("/") + 1);\n                        if (src == "nonSummary.png") {\n                          setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                        } else if (src == "summary.png") {\n                          setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                        } else if (src == "mWindow.png") {\n                          setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                        } else if (src == "folder.png") {\n                          setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                        }\n                      }\n                      changeImgSource.attr("src", setLinkedImage);\n                    }\n                  }\n                }\n                //$ulMid.find("li").find("li[id=\'" + GetPIDforItems + "\']").parent().remove();\n\n                //$ulMid.find("li").find("li[data-id=\'" + GetPIDforItems + "\']").parent().remove();\n                //$leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + GetPIDforItems + "\']").parent().parent().parent());\n\n                $ulMid.find("li").find("li[data-id=\'" + getIDFromChildLevel + "\']").parent().remove();\n                $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + getIDFromChildLevel + "\']").parent().parent().parent());\n              }\n            }\n\n            //---------------------------------------------\n\n            $deleteChild.addClass("vis-tm-delete");\n            var selectedArrayOndel = [];\n            for (var t = 0; t < $ulMid.find("input:checked").length; t++) {\n              var id = $($ulMid.find("input:checked").parent().find("li")[t]).attr("data-id");\n              if (bindornot == "false") {\n                if ($.inArray(parseInt(id), convertmenuArray) >= 0) {\n                  continue;\n                }\n              }\n              selectedArrayOndel.push(id);\n              //$ulMid.find("li").find("li[data-id=\'" + id + "\']").parent().remove();\n            }\n            for (var a = 0; a < selectedArrayOndel.length; a++) {\n              $ulMid.find("li").find("li[data-id=\'" + selectedArrayOndel[a] + "\']").parent().remove();\n            }\n            if ($ulMid.find("input:checked").length > 0) {\n              VIS.ADialog.info("NeverDelete");\n            }\n\n            //    $ulMid.find("input:checked").parent().remove();\n\n            HasScrollarOrNot();\n          }\n          AllSelectChkValue();\n          AllSelectChkRightSide();\n          GetCountOnTreeChanges();\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n      AllSelectChkValue();\n    }\n    ;\n    function AllSelectChkValue() {\n      if ($ulMid.find("input").length == 0) {\n        $chkAllCheckOrNot.prop("disabled", true);\n        $chkAllCheckOrNot.css("cursor", "not-allowed");\n        $chkAllCheckOrNot.prop("checked", false);\n        $deleteChild.addClass("vis-tm-delete");\n        $squenceDailog.addClass("vis-tm-delete");\n        isulMidData = false;\n      } else {\n        $squenceDailog.removeClass("vis-tm-delete");\n        isulMidData = true;\n        $chkAllCheckOrNot.prop("disabled", false);\n        $chkAllCheckOrNot.css("cursor", "pointer");\n      }\n    }\n    ;\n    function FillValueInCombo() {\n      var all = "" + VIS.Msg.getMsg("All") + "";\n      var linked = "" + VIS.Msg.getMsg("Linked") + "";\n      var unLinked = "" + VIS.Msg.getMsg("UnLinked") + "";\n      $rightMenuDemand.append($("<Option value=\'All\'>" + all + "</option>"));\n      $rightMenuDemand.append($("<Option value=\'Linked\'>" + linked + "</option>"));\n      $rightMenuDemand.append($("<Option value=\'Unlinked\'>" + unLinked + "</option>"));\n    }\n    ;\n    function MenuWithDemands() {\n      if ($cmbSelectTree.val() != "") {\n        $pathInfo.empty();\n        $ulRight.empty();\n        $demandsMenu = $rightMenuDemand.val();\n        window.setTimeout(function () {\n          $rightMenuDemand.prop("disabled", true);\n          treeCmbDisable.css("display", "inherit");\n          onscrollCheck = false;\n          $demandsMenu = $rightMenuDemand.val();\n          searchRightext = $cmbRightSearch.val();\n          // $ulRight.empty();\n          pageNo = 1;\n          LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n        }, 200);\n      }\n    }\n    ;\n    function ResizeBottomDiv(evt, ui) {\n      //if ($(ui.originalElement[0].firstChild).hasClass("ui-resizable-n"))\n      //{\n      //    return;\n      //}\n\n      var currentheight = ui.size.height;\n      $treeBackDiv.css("height", currentheight);\n      $treeBackDiv.css("overflow-x", "none");\n      // $treeBackDiv.css("overflow-y", "auto");\n      $treeBackDiv.css("width", "100%");\n      window.setTimeout(function () {\n        $mData.height(leftMianDataDiv.height() - ($treeBackDiv.height() + $mTopHeader.height() + 45));\n      }, 200);\n      $secoundDiv.css("overflow", "hidden");\n      $secoundDiv.height(leftMianDataDiv.height() - $treeBackDiv.height());\n      nodeItemDelwithdrag.height($secoundDiv.height() - 10);\n      topTreeDiv.height(currentheight - 10);\n      $treeBackDiv.addClass("VIS-TM-resizediv");\n      topTreeDiv.addClass("VIS-TM-resizediv");\n    }\n    ;\n    var dailogContainer = null;\n    var $chkLinkOrNot = null;\n    function DailogDeleteDesign() {\n      dailogContainer = $(\'<div>\');\n      $chkLinkOrNot = $(\'<input style="margin-right: 10px;" type="checkbox"/>\');\n      var $topMsg = $(\'<span>\' + VIS.Msg.getMsg("WantToUnlinked") + \'<span/>\');\n      var $askMsg = $(\'<span style="font-size: 16px;">\' + VIS.Msg.getMsg("UnlinkedWithChild") + \'<span/>\');\n\n      //  dailogContainer.append($(\'<div>\').append($topMsg));\n      //dailogContainer.append($(\'<div style="padding: 10px;">\').append($chkLinkOrNot).append($askMsg));\n      dailogContainer.append($(\'<div style="padding: 10px;">\').append($askMsg));\n    }\n    ;\n    function DailogForDelete(e) {\n      chksearchvalues = e;\n      TreeTableName();\n      var child = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetNodeIdsOfParent", {\n        "tbname": tableTreeName,\n        "parent_id": $dragTreeDataNodeID,\n        "treeId": $treeID\n      }, null);\n      if (child != null && child.length == 0) {\n        $chkValueFromDailog = true;\n        $deleteArea.removeClass("VIS-TM-ondragdrop");\n        $deleteArea.css("display", "none");\n        $deleteImage.css("display", "none");\n        if (bindornot == "false") {\n          if ($.inArray(parseInt(delNodId), convertmenuArray) >= 0) {\n            //VIS.ADialog.info("NeverDelete");\n            VIS.ADialog.info("NeverDelete", true, msgShowforbindingWindow);\n            return;\n          } else {\n            DeleteNodeFromTree($treeID, delNodId, getMovingdiv, $chkValueFromDailog);\n          }\n        } else {\n          DeleteNodeFromTree($treeID, delNodId, getMovingdiv, $chkValueFromDailog);\n        }\n        return;\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n      DailogDeleteDesign();\n      VIS.ADialog.confirm("ChildAlsoWillbeRemove", true, "", "Confirm", function (result) {\n        if (!result) {\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n        } else {\n          $chkValueFromDailog = true;\n          DeleteNodeFromTree($treeID, delNodId, getMovingdiv, $chkValueFromDailog);\n          $deleteArea.removeClass("VIS-TM-ondragdrop");\n          $deleteArea.css("display", "none");\n          $deleteImage.css("display", "none");\n        }\n      });\n\n      //var createTab = new VIS.ChildDialog();\n      ////  createTab.setHeight(150);\n      //// createTab.setWidth(350);\n      //createTab.setEnableResize(false);\n      //createTab.setTitle(VIS.Msg.getMsg(\'UnlinkRecord\'));\n      //createTab.setModal(true);\n      //createTab.setContent(dailogContainer);\n      //createTab.show();\n      //createTab.onClose = function () {\n\n      //};\n      //createTab.onOkClick = function (e) {\n      //    //  if ($chkLinkOrNot.is(":checked")) {\n      //    $chkValueFromDailog = true;\n      //    //}\n      //    //else {\n      //    //    $chkValueFromDailog = false;\n      //    //}\n      //    DeleteNodeFromTree($treeID, delNodId, getMovingdiv, $chkValueFromDailog);\n      //    //$ulMid.empty();\n      //    $deleteArea.removeClass("VIS-TM-ondragdrop");\n      //    $deleteArea.css("display", "none");\n      //    $deleteImage.css("display", "none");\n      //    // $treeRefresh.css("display", "inherit");\n      //};\n      //createTab.onCancelClick = function () {\n      //    $deleteArea.removeClass("VIS-TM-ondragdrop");\n      //    $deleteArea.css("display", "none");\n      //    $deleteImage.css("display", "none");\n      //    // $treeRefresh.css("display", "inherit");\n      //};\n    }\n    ;\n    var flagDelete = true;\n    var gettbnameForAppentintree = null;\n    function DeleteNodeFromTree($treeID, delNodId, getMovingdiv, $chkValueFromDailog) {\n      if (delNodId != 0) {\n        //var msg = "" + VIS.Msg.getMsg("VIS_TM_DeleteIt") + "";\n        //var r = VIS.ADialog.ask(msg);\n        //if (r == true)\n        //{\n\n        flagDelete = false;\n        $bsyDiv[0].style.visibility = "visible";\n        var table_id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTableID", {\n          "treeId": $treeID\n        }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n\n        treeType = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTreeType", {\n          "treeId": $treeID\n        }, null);\n        var tbname = "";\n        // var tablename = "";\n        if (treeType == "PR") {\n          tbname = "AD_TreeNodePR";\n        } else if (treeType == "BP") {\n          tbname = "AD_TreeNodeBP";\n        } else if (treeType == "MM") {\n          tbname = "AD_TreeNodeMM";\n        } else {\n          tbname = "AD_TreeNode";\n        }\n        selectedItemArray = delNodId.toString();\n        GetAllChildesIDs(tbname, selectedItemArray, $treeID);\n        var getfirstParent = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetParentId", {\n          "treeId": $treeID,\n          "nodeId": delNodeId,\n          "tblName": tbname\n        }, null);\n        $.ajax({\n          url: VIS.Application.contextUrl + "TreeMaintenance/DeleteNodeFromTree",\n          type: \'Post\',\n          data: {\n            nodeid: delNodId,\n            treeID: $treeID,\n            unlinkchild: $chkValueFromDailog,\n            menuArray: menuArray\n          },\n          success: function (data) {\n            var res = JSON.parse(data);\n            if (res == "") {\n              if ($ulMid.find("input:checked").length == 0) {\n                $chkAllCheckOrNot.prop("checked", false);\n              }\n              $deleteResult = res;\n              //$leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().remove();\n\n              //                            $ulMid.find("li").find("li[id=\'" + delNodId + "\']").parent().remove();\n              $ulMid.find("li").find("li[data-id=\'" + delNodId + "\']").parent().remove();\n\n              // var getLi = $ulRight.find("li").find("li[id=\'" + delNodId + "\']").parent().parent();\n\n              var getLi = $ulRight.find("li").find("li[data-id=\'" + delNodId + "\']").parent().parent();\n              getLi.find("input").prop("disabled", false);\n              getLi.find("i").removeClass("vis-tm-opacity");\n              getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n              getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n              getLi.find("input").css("cursor", "pointer");\n              if (getLi.hasClass("vis-tm-menuselectedcolor")) {\n                $pathInfo.empty();\n                getLi.find("input").prop("checked", true);\n              }\n\n              //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + delNodId + "\']").parent().parent().find("img").attr("src");\n              //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + delNodId + "\']").parent().parent().find("img");\n\n              var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + delNodId + "\']").parent().parent().find("img").attr("src");\n              var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + delNodId + "\']").parent().parent().find("img");\n              var setLinkedImage;\n              var src = imgSource;\n              if (src != null) {\n                src = src.substring(src.lastIndexOf("/") + 1);\n                if (src == "nonSummary.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                } else if (src == "summary.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                }\n                changeImgSource.attr("src", setLinkedImage);\n              }\n              gettbnameForAppentintree = tbname;\n              if ($chkValueFromDailog == true) {\n                // FindChildsID(tbname, delNodId, $treeID);\n\n                //$leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().remove();\n                if (bindornot == "false") {\n                  GetIDsOnRolBindTree();\n                }\n                $leftTreeDiv.data("kendoTreeView").remove(draggingItemsss);\n                for (var i = 0; i < getIDFromChildLevel.length; i++) {\n                  var sqlqryNodeID = getIDFromChildLevel[i];\n                  $ulMid.find("li").find("li[data-id=\'" + sqlqryNodeID + "\']").parent().remove();\n                  if (bindornot == "false") {\n                    if ($.inArray(parseInt(sqlqryNodeID), convertmenuArray) >= 0) {\n                      continue;\n                    }\n                  }\n\n                  //$ulMid.find("li").find("li[id=\'" + sqlqryNodeID + "\']").parent().remove();\n\n                  // var getLi = $ulRight.find("li").find("li[id=\'" + sqlqryNodeID + "\']").parent().parent();\n                  var getLi = $ulRight.find("li").find("li[data-id=\'" + sqlqryNodeID + "\']").parent().parent();\n                  getLi.find("input").prop("disabled", false);\n                  getLi.find("i").removeClass("vis-tm-opacity");\n                  getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                  getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n                  getLi.find("input").css("cursor", "pointer");\n                  if (getLi.hasClass("vis-tm-menuselectedcolor")) {\n                    getLi.find("input").prop("checked", true);\n                    $pathInfo.empty();\n                  }\n                  if ($rightMenuDemand.val() == "Linked") {\n                    getLi.remove();\n                  }\n\n                  //var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + sqlqryNodeID + "\']").parent().parent().find("img").attr("src");\n                  //var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + sqlqryNodeID + "\']").parent().parent().find("img");\n\n                  var imgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + sqlqryNodeID + "\']").parent().parent().find("img").attr("src");\n                  var changeImgSource = $($($ulRight.find("li"))).find("li[data-id=\'" + sqlqryNodeID + "\']").parent().parent().find("img");\n                  var setLinkedImage;\n                  var src = imgSource;\n                  if (src != null) {\n                    src = src.substring(src.lastIndexOf("/") + 1);\n                    if (src == "nonSummary.png") {\n                      setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                    } else if (src == "summary.png") {\n                      setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                    }\n                    changeImgSource.attr("src", setLinkedImage);\n                  }\n                }\n\n                //for (var i = 0; i < sqlqry.tables[0].rows.length; i++) {\n\n                //    sqlqryNodeID = sqlqry.tables[0].rows[i].cells["node_id"];\n\n                //    var getLi = $ulRight.find("li").find("li[id=\'" + sqlqryNodeID + "\']").parent().parent();\n                //    getLi.find("input").prop("disabled", false);\n                //    getLi.find("img").removeClass("vis-tm-opacity");\n                //    getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                //    getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n\n                //    var imgSource = $($($ulRight.find("li"))).find("li[id=\'" + sqlqryNodeID + "\']").parent().parent().find("img").attr("src");\n                //    var changeImgSource = $($($ulRight.find("li"))).find("li[id=\'" + sqlqryNodeID + "\']").parent().parent().find("img");\n                //    var setLinkedImage;\n                //    var src = imgSource;\n                //    if (src != null)\n                //    {\n                //        src = src.substring(src.lastIndexOf("/") + 1);\n\n                //        if (src == "nonSummary.png") {\n                //            setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                //        }\n                //        else if (src == "summary.png") {\n                //            setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                //        }\n\n                //        changeImgSource.attr("src", setLinkedImage);\n                //    }\n                //}\n              }\n              if ($chkValueFromDailog == false) {\n                var ImageSource = null;\n\n                //$leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().remove();\n                //   $leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent();\n\n                var id = getfirstParent;\n                $dropableItem = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + id + "\']");\n\n                //    var x = $($leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().find("ul")[0]);\n                //    $dropableItem.parent().parent().parent().parent().append(x);\n\n                // $leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().empty();\n                // $leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().remove();\n                //$leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().remove());\n\n                // $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + delNodId + "\']").parent().parent().parent().parent().remove());\n\n                //$leftTreeDiv.data(\'kendoTreeView\').dataSource.read();\n                //$dropableItem.parent().parent().parent().parent().css("padding-left", "16px");\n                // x.css("padding-left", "16px");\n\n                //for (var t = 0; t < sqlqry.tables[0].rows.length; t++)\n                //{\n                //    var action = sqlqry.tables[0].rows[t].cells["action"]\n                //    if (action == "R") {\n                //        ImageSource = "Areas/VIS/Images/mReport.png";\n                //    }\n                //    else if (action == "P") {\n                //        ImageSource = "Areas/VIS/Images/mProcess.png";\n                //    }\n                //    else if (action == "F") {\n                //        ImageSource = "Areas/VIS/Images/login/mWorkFlow.png";\n                //    }\n                //    else if (action == "B") {\n                //        ImageSource = "Areas/VIS/Images/login/mWorkbench.png";\n                //    }\n                //    else if (action == null) {\n                //        ImageSource = "Areas/VIS/Images/login/folder.png";\n                //    }\n                //    else {\n                //        ImageSource = "Areas/VIS/Images/mWindow.png";\n                //    }\n\n                //    var newChild = $leftTreeDiv.data("kendoTreeView").append({\n                //        text: VIS.Utility.encodeText(sqlqry.tables[0].rows[t].cells["name"]),\n                //        \'IsSummary\': sqlqry.tables[0].rows[t].cells["summary"],\n                //        \'getparentnode\': 0,\n                //        \'TableName\': gettbnameForAppentintree,\n                //        \'NodeID\':  sqlqry.tables[0].rows[t].cells["node_id"],\n                //        \'TreeParentID\': 0,\n                //        \'ParentID\': 0,\n                //        \'ImageSource\': ImageSource,\n                //    }, $dropableItem);\n                //}\n              }\n              HasScrollarOrNot();\n            }\n            if (movingNode.find("span").hasClass("k-state-selected")) {\n              $lblMh4.text(VIS.Msg.getMsg("SelectTree"));\n            }\n            AllSelectChkValue();\n            AllSelectChkRightSide();\n            GetCountOnTreeChanges();\n            $bsyDiv[0].style.visibility = "hidden";\n          },\n          error: function (e) {\n            console.log(e);\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        });\n        //}\n        //else {\n        //    $bsyDiv[0].style.visibility = "hidden";\n        //    return;\n        //}\n      } else {\n        VIS.ADialog.info("VIS_SelectTreeNode");\n      }\n    }\n    ;\n    function GetIDsOnRolBindTree() {\n      var draggingArrayss = [];\n      for (var w = 0; w < getIDforwithlongQuery.length; w++) {\n        var idss = getIDforwithlongQuery[w];\n        draggingArrayss.push(parseInt(idss));\n      }\n      for (var s = 0; s < draggingArrayss.length; s++) {\n        if ($.inArray(draggingArrayss[s], convertmenuArray) >= 0) {\n          UpdateRollCheckSeq(draggingArrayss[s]);\n          // var getrestrictIDss = $($($leftTreeDiv.find(".treechild")[0]).parent().parent().parent().find("ul")[0]);\n          var matchResult = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + draggingArrayss[s] + "\']").parent().parent().parent();\n          $leftTreeDiv.find("div").find("div[data-nodeid=\'" + draggingArrayss[s] + "\']").parent().parent().parent().remove();\n          //getrestrictIDss.append(matchResult);\n\n          if (!$chkSummaryLevel.is(":checked")) {\n            var newChild = $leftTreeDiv.data("kendoTreeView").append({\n              text: VIS.Utility.encodeText(matchResult.text()),\n              \'IsSummary\': matchResult.find(".treechild").attr("data-issummary"),\n              \'getparentnode\': 0,\n              \'TableName\': matchResult.find(".treechild").attr("data-tablename"),\n              \'NodeID\': matchResult.find(".treechild").attr("data-nodeid"),\n              \'TreeParentID\': matchResult.find(".treechild").attr("data-nodeid"),\n              \'ParentID\': 0,\n              //,\n              \'ImageSource\': "Areas/VIS/Images/mWindow.png"\n            }, $($($leftTreeDiv.find(".treechild")[0])));\n          }\n        }\n      }\n      if ($cmbSearch.val() != "") {\n        window.setTimeout(function () {\n          SearchNodeInTree(getEvalueforsearch);\n        }, 200);\n      }\n    }\n    ;\n\n    //and tnp.isactive=\'Y\' and tnp.ad_tree_id=0\n    //long query\n    var getIDforwithlongQuery = "";\n    function GetAllChildesIDs(tbname, delNodId, $treeID) {\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "TreeMaintenance/SelectAllChildNodes",\n        type: \'Post\',\n        async: false,\n        data: {\n          TableName: tbname,\n          treeID: $treeID,\n          nodeID: delNodId\n        },\n        success: function (data) {\n          $bsyDiv[0].style.visibility = "visible";\n          var result = JSON.parse(data);\n          getIDFromChildLevel = [];\n          if (result != null) {\n            getIDFromChildLevel = result.split(\',\');\n            getIDforwithlongQuery = getIDFromChildLevel;\n          }\n          //  $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function (e) {\n          console.log(e);\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    var getIDFromChildLevel = [];\n    function FindChildsID(tbname, delNodId, $treeID) {\n      //$.ajax({\n      //    url: VIS.Application.contextUrl + "TreeMaintenance/SelectAllChildNodes",\n      //    type: \'Post\',\n      //    data: { TableName: tbname, treeID: $treeID, nodeID: delNodId },\n      //    success: function (data) {\n      //        var result = JSON.parse(data);                    \n      //    },\n      //    error: function (e) {\n      //        console.log(e);               \n      //    },\n      //});\n\n      childlevel = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetChildIDs", {\n        "treeId": $treeID,\n        "tbname": tbname,\n        "delNodId": delNodId\n      }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n\n      for (var i = 0; i < childlevel.length; i++) {\n        var selectedItem = childlevel[i];\n        getIDFromChildLevel.push(selectedItem);\n      }\n    }\n    ;\n    function RightPanelSearch() {\n      if ($cmbSelectTree.val() != "") {\n        $ulRight.empty();\n        searchRightext = $cmbRightSearch.val();\n        $demandsMenu = $rightMenuDemand.val();\n        pageNo = 1;\n        LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n      }\n    }\n    ;\n    function RighPanelSearchOnEnter(e) {\n      if (e.which != 13 && e.which != 8 && e.which != 46) {\n        rightCrossImage.css("display", "inherit");\n      }\n      if (e.which == 8 || e.which == 46) {\n        if ($cmbRightSearch.val() == "") {\n          rightCrossImage.css("display", "none");\n        }\n      }\n      if (e.which == 13) {\n        if ($cmbSelectTree.val() != "") {\n          $ulRight.empty();\n          searchRightext = $cmbRightSearch.val();\n          $demandsMenu = $rightMenuDemand.val();\n          pageNo = 1;\n          LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n        }\n      }\n    }\n    ;\n    function CmbRefresh(e) {\n      if ($cmbSelectTree.val() != "") {\n        treeCmbDisable.css("display", "inherit");\n      }\n      chksearchvalues = e;\n      $cmbSelectTree.empty();\n      GetTreeNameForCombo();\n      changeSeqFlag = false;\n      TreeRefresh();\n      $squenceDailog.addClass("vis-tm-delete");\n      $treeExpandColapse.css("display", "none");\n      $treeCollapseColapse.css("display", "inherit");\n      $treeCollapseColapse.css("float", "right");\n      $lblMh4.text(VIS.Msg.getMsg("SelectTree"));\n      AllSelectChkValue();\n\n      // }\n    }\n    ;\n    function TreeRefresh() {\n      $ulMid.empty();\n      expandCollapse = false;\n      if ($cmbSelectTree.val() != "") {\n        if ($chkSummaryLevel.is(":checked")) {\n          $isSummary = true;\n          if (selectedNode != null) {\n            TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n          }\n        } else {\n          $isSummary = false;\n          if (selectedNode != null) {\n            TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n          }\n        }\n      }\n      $secoundDiv.css("overflow", "hidden");\n    }\n    ;\n    var getIvalueonEnter = 0;\n    var nextIndex;\n    function AnimateSearchNode(e) {\n      animateSearchFlag = true;\n      if (e.which == 13) {\n        if ($cmbSearch.val() != "") {\n          if ($chkSummaryLevel.is(":checked")) {\n            $cmbSearch.prop("disabled", true);\n            $btnSearch.prop("disabled", true);\n          }\n        }\n        if (getTreeNodeChkValue == "true") {\n          if ($leftTreeDiv.find(".k-state-selected").length == 1) {\n            pageNoForChild = 1;\n            pageSizeForChild = 50;\n            if ($chktreeNode.is(":checked")) {\n              getTreeNodeChkValue = "true";\n            } else {\n              getTreeNodeChkValue = "false";\n            }\n            var selectNodeText = $leftTreeDiv.find(".k-state-selected").find("div").attr("data-nodeid");\n            // $lblMh4.text($leftTreeDiv.find(".k-state-selected").find("div").text());\n\n            searchChildNode = $cmbSearch.val();\n            $ulMid.empty();\n            GetDataTreeNodeSelect(selectNodeText, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n          }\n        }\n        if ($cmbSearch.val() != "") {\n          if ($cmbSelectTree.val() != "") {\n            $deleteChild.removeClass("vis-tm-delete");\n            $bsyDiv[0].style.visibility = "visible";\n            $leftTreeKeno.find("span.k-in").find(".treechild").find("p").each(function (index) {\n              var text = $(this).text().toUpperCase();\n\n              //  treeValues.push($(this).parent().parent().attr("data-nodeid"));\n              //  searchedItem.push(text);\n\n              if (text == $cmbSearch.val().toUpperCase()) {\n                e.preventDefault();\n                var classname = $(this).parent().parent().parent().parent().parent().attr("class");\n                $leftTreeKeno.data("kendoTreeView").expand("." + classname);\n                $leftTreeKeno.find("span").removeClass("k-state-selected");\n                $(this).parent().parent().parent().addClass("k-state-selected");\n                this.parentNode.parentNode.parentNode.scrollIntoView();\n                $bsyDiv[0].style.visibility = "hidden";\n                return;\n              }\n            });\n            SearchNext(e);\n            $deleteChild.addClass("vis-tm-delete");\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        }\n      } else {\n        lastSeletedIndex = -1;\n      }\n    }\n    ;\n    var lastSeletedIndex = -1;\n    var treeText;\n    var textSearch;\n    var calculateIndex;\n    var calculateIndex;\n    var searchNode = true;\n    function SearchNext(e) {\n      if ($chkSummaryLevel.is(":checked")) {\n        $cmbSearch.prop("disabled", true);\n        $btnSearch.prop("disabled", true);\n      }\n      treeText = searchedItem;\n      textSearch = $cmbSearch.val();\n      calculateIndex = containsTextInArray(treeText, textSearch, lastSeletedIndex);\n      if (calculateIndex > -1) {\n        var val = treeValues[calculateIndex];\n        currentNode = val;\n        lastSeletedIndex = calculateIndex;\n        setSelectedNode(val, e);\n      } else {\n        searchNode = false;\n        if ($cmbSearch.val() != "") {\n          $cmbSearch.prop("disabled", false);\n          $btnSearch.prop("disabled", false);\n        }\n      }\n    }\n    function containsTextInArray(arry, text, lastSelIndex) {\n      for (var i = lastSelIndex + 1; i < arry.length; i++) {\n        if (i == -1) continue;\n        if (arry[i].trim().toLowerCase().contains(text.trim().toLowerCase())) return i;\n      }\n      ;\n      if (lastSelIndex > -1) {\n        lastSelIndex = -1;\n        return containsTextInArray(arry, text, lastSelIndex);\n      }\n      return -1;\n    }\n    ;\n    function setSelectedNode(nodeID, e) {\n      if (nodeID != -1) {\n        //\tnew is -1\n        currentNode = nodeID;\n        return selectID(nodeID, true, e); //  show selection\n      }\n      currentNode = 0;\n      return false;\n    }\n    ;\n    function selectID(nodeID, show, e) {\n      if ($chktreeNode.is(":checked")) {\n        $ulMid.find(".vis-tm-menuselectedcolor").removeClass("vis-tm-menuselectedcolor");\n        $mData.find("li").find("li[id=\'" + nodeID + "\']").parent().find("input").prop("checked", true);\n        $mData.find("li").find("li[id=\'" + nodeID + "\']").parent().addClass("vis-tm-menuselectedcolor");\n        if ($mData.find("li").find("li[id=\'" + nodeID + "\']").parent().hasClass("vis-tm-menuselectedcolor")) {\n          $mData.find("li").find("li[id=\'" + nodeID + "\']").parent()[0].scrollIntoView();\n          $mData.height($secoundDiv.height() - ($mTopHeader.height() + 50));\n        }\n      } else {\n        if (animateSearchFlag == true) {\n          $leftTreeDiv.find(".k-state-selected").removeClass("k-state-selected");\n          $($leftTreeDiv.find("div").find("div[data-nodeid=\'" + nodeID + "\']").parent()).addClass("k-state-selected");\n          if ($($leftTreeDiv.find("div").find("div[data-nodeid=\'" + nodeID + "\']").parent()).hasClass("k-state-selected")) {\n            $($leftTreeDiv.find("div").find("div[data-nodeid=\'" + nodeID + "\']").parent()).addClass("k-state-selected")[0].scrollIntoView();\n            SelectedNodeColor();\n          }\n          window.setTimeout(function () {\n            pageNoForChild = 1;\n            pageSizeForChild = 50;\n            if ($chktreeNode.is(":checked")) {\n              searchChildNode = $cmbSearch.val();\n            } else {\n              searchChildNode = "";\n            }\n            if ($chktreeNode.is(":checked")) {\n              getTreeNodeChkValue = "true";\n            } else {\n              getTreeNodeChkValue = "false";\n            }\n            var selectNodeText = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + nodeID + "\']").parent().text();\n            $lblMh4.text(selectNodeText);\n            $ulMid.empty();\n            GetDataTreeNodeSelect(nodeID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n          }, 400);\n        }\n      }\n      //var classname = $(this).parent().parent().parent().parent().parent().attr("class");\n      //$leftTreeKeno.data("kendoTreeView").expand("." + classname);\n      //$leftTreeKeno.find("span").removeClass("k-state-selected");\n      //$(this).parent().parent().parent().addClass("k-state-selected");\n      //this.parentNode.parentNode.parentNode.scrollIntoView();\n    }\n    ;\n    function AnimateNodeWithButton(e) {\n      if ($cmbSearch.val() != "") {\n        $cmbSearch.prop("disabled", true);\n        $btnSearch.prop("disabled", true);\n      }\n      if (getTreeNodeChkValue == "true") {\n        if ($leftTreeDiv.find(".k-state-selected").length == 1) {\n          pageNoForChild = 1;\n          pageSizeForChild = 50;\n          if ($chktreeNode.is(":checked")) {\n            getTreeNodeChkValue = "true";\n          } else {\n            getTreeNodeChkValue = "false";\n          }\n          var selectNodeText = $leftTreeDiv.find(".k-state-selected").find("div").attr("data-nodeid");\n          // $lblMh4.text($leftTreeDiv.find(".k-state-selected").find("div").text());\n\n          searchChildNode = $cmbSearch.val();\n          $ulMid.empty();\n          GetDataTreeNodeSelect(selectNodeText, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n\n          //searchChildNode = $cmbSearch.val();\n          //$ulMid.empty();\n          //GetDataTreeNodeSelect(getParentID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n        }\n      }\n      if ($cmbSearch.val() != "") {\n        $bsyDiv[0].style.visibility = "visible";\n        $leftTreeKeno.find("span.k-in").find(".treechild").find("p").each(function (index) {\n          var text = $(this).text().toUpperCase();\n          if (text == $cmbSearch.val().toUpperCase()) {\n            e.preventDefault();\n            var classname = $(this).parent().parent().parent().parent().parent().attr("class");\n            $leftTreeKeno.data("kendoTreeView").expand("." + classname);\n            $leftTreeKeno.find("span").removeClass("k-state-selected");\n            $(this).parent().parent().parent().addClass("k-state-selected");\n            this.parentNode.parentNode.parentNode.scrollIntoView();\n          }\n        });\n        SearchNext(e);\n        $bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    ;\n    var searchedItem = [];\n    var treeValues = [];\n    var chksearchvalues = null;\n    var chksearchvalueflag = true;\n    var getEvalueforsearch = null;\n    function SearchNodeInTree(e) {\n      // $leftTreeKeno.data("kendoTreeView").expand(".k-item")\n      //   searchedItem = [];\n      //var treeValues = [];\n\n      //if ($cmbSearch.val() != "") {\n      //    $checkSearchOrNot.css("display", "inline-block");\n      //} else {\n      //    $checkSearchOrNot.css("display", "none");\n      //}\n      if ($cmbSelectTree.val() != "") {\n        crossImages.css("display", "inherit");\n        if (chksearchvalueflag == true) {\n          chksearchvalueflag = false;\n          getEvalueforsearch = e;\n        }\n      }\n      if ($cmbSelectTree.val() == "") {\n        return false;\n      }\n      if ($($cmbSearch).val() == "" || !searchflag) {\n        if ($($cmbSearch).val() == "") {\n          $ulMid.find("span").removeClass("VIS-TM-highlight");\n          $leftTreeDiv.find("span").removeClass("VIS-TM-highlight");\n          crossImages.css("display", "none");\n          animateSearchFlag = true;\n          chksearchvalueflag = true;\n        }\n        searchflag = true;\n        return;\n      }\n      if (e != undefined) {\n        if (e.which != 13) {\n          var term = $cmbSearch.val().toUpperCase();\n          var tlen = term.length;\n          if ($chktreeNode.is(":checked")) {\n            lastSeletedIndex = -1;\n            treeValues = [];\n            searchedItem = [];\n            $leftTreeDiv.find("span").removeClass("VIS-TM-highlight");\n            $ulMid.find("li li").each(function (index, val) {\n              var s = $(val);\n              var text = VIS.Utility.decodeText($(this).text());\n              treeValues.push(s.attr("id"));\n              searchedItem.push(text);\n              var html = \'\';\n              var q = 0;\n              if (term == "") {\n                if (text.toUpperCase().indexOf(term, q) == 0) {\n                  $(this).find("span").removeClass("VIS-TM-highlight");\n                  $ulMid.find(".vis-tm-menuselectedcolor").removeClass("vis-tm-menuselectedcolor");\n                  $deleteChild.addClass("vis-tm-delete");\n                  $ulMid.find("input").prop("checked", false);\n                }\n              } else {\n                while ((p = text.toUpperCase().indexOf(term, q)) >= 0) {\n                  html += text.substring(q, p) + \'<span class="VIS-TM-highlight">\' + text.substr(p, tlen) + \'</span>\';\n                  q = p + tlen;\n                }\n                if (text.toUpperCase().indexOf(term, q) == -1) {\n                  $(this).find("span").removeClass("VIS-TM-highlight");\n                }\n                if (q > 0) {\n                  html += text.substring(q);\n                  //$(this).html(html);\n                }\n              }\n            });\n          } else {\n            treeValues = [];\n            searchedItem = [];\n            $ulMid.find("li").find("span").removeClass("VIS-TM-highlight");\n\n            // for (var p = 0; p < 15; p++) {\n            $leftTreeKeno.data("kendoTreeView").expand(".k-item");\n            // }\n\n            $treeCollapseColapse.css("display", "none");\n            $treeExpandColapse.css("display", "inherit");\n            if ($($cmbSearch).val() == "") {\n              $leftTreeKeno.find("span").removeClass("VIS-TM-highlight");\n            }\n            $(\'span.k-in > span.highlight\').each(function () {\n              $(this).parent().text($(this).parent().text());\n            });\n            if ($.trim($cmbSearch.val()) == \'\') {\n              return;\n            }\n            var term = $cmbSearch.val().toUpperCase();\n            var tlen = term.length;\n            $leftTreeKeno.find("span.k-in").each(function (index, val) {\n              var s = $(val);\n              var text = VIS.Utility.decodeText($(this).text());\n              treeValues.push(s.find(".treechild").attr("data-nodeid"));\n              searchedItem.push(text);\n              var html = \'\';\n              var q = 0;\n              while ((p = text.toUpperCase().indexOf(term, q)) >= 0) {\n                html += text.substring(q, p) + \'<span class="VIS-TM-highlight">\' + text.substr(p, tlen) + \'</span>\';\n                q = p + tlen;\n              }\n              if (text.toUpperCase().indexOf(term, q) == -1) {\n                $(this).find("span").removeClass("VIS-TM-highlight");\n                //$leftTreeDiv.find(".k-state-selected").removeClass("k-state-selected");\n              }\n              if (q > 0) {\n                html += text.substring(q);\n                $(this).find("p").html(html);\n              }\n            });\n          }\n        }\n      }\n    }\n    ;\n    function SelectedNodeColor() {\n      $leftTreeDiv.find(".k-state-hover").removeClass("k-state-hover");\n      $leftTreeDiv.find(".vis-tm-selectedkendoNode").removeClass("vis-tm-selectedkendoNode");\n      $leftTreeDiv.find(".k-state-selected").find("p").addClass("vis-tm-selectedkendoNode");\n    }\n    ;\n    function MidSelectDesign(e) {\n      if ($(e.target).hasClass("summNonsumImage")) {\n        $(e.target).parent().parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().parent().find("input").prop("checked", false);\n        $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().find("input").prop("checked", true);\n        $deleteChild.removeClass("vis-tm-delete");\n        var getlen = $ulMid.find("input").length;\n        var chklen = $ulMid.find("input:checked").length;\n        if (getlen == chklen) {\n          $chkAllCheckOrNot.prop("checked", true);\n        }\n      }\n      if ($(e.target).hasClass("VIS-tm-MLi")) {\n        $(this).find("li").removeClass("vis-tm-menuselectedcolor");\n        $(this).find("li").find("input").prop("checked", false);\n        $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().find("input").prop("checked", true);\n        $deleteChild.removeClass("vis-tm-delete");\n        $chkAllCheckOrNot.prop("checked", false);\n        var getlen = $ulMid.find("input").length;\n        var chklen = $ulMid.find("input:checked").length;\n        if (getlen == chklen) {\n          $chkAllCheckOrNot.prop("checked", true);\n        }\n      }\n      if ($(e.target).hasClass("VIS-tm-checkbox")) {\n        if ($(e.target).parent().find("input").prop("checked")) {\n          $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n          $deleteChild.removeClass("vis-tm-delete");\n          var getlen = $ulMid.find("input").length;\n          var chklen = $ulMid.find("input:checked").length;\n          if (getlen == chklen) {\n            $chkAllCheckOrNot.prop("checked", true);\n          }\n        } else {\n          $(e.target).parent().removeClass("vis-tm-menuselectedcolor");\n          $(e.target).parent().find("li").removeClass("vis-tm-menuselectedcolor");\n          $chkAllCheckOrNot.prop("checked", false);\n          if ($ulMid.find("input:checked").length > 0) {\n            $deleteChild.removeClass("vis-tm-delete");\n          } else {\n            $deleteChild.addClass("vis-tm-delete");\n          }\n        }\n      }\n    }\n    ;\n    var getSelectedLiImg = null;\n    var existItss = -1;\n    //var bottomchildselectedID = 0;\n    var sellenContain = null;\n    var traceNameFlag = true;\n    function AllItemsSelectOrNots(e) {\n      chksearchvalues = e;\n      var sellenght = $ulRight.find("input:checked").length;\n      var disabledlen = $ulRight.find("[disabled]").length;\n      var totalinput = $ulRight.find("input").length;\n      var enableInput = totalinput - disabledlen;\n      if (sellenght == enableInput) {\n        if (e != "disabled") {\n          $chkAllRightPannel.prop("checked", true);\n        }\n      } else {\n        $chkAllRightPannel.prop("checked", false);\n      }\n    }\n    ;\n    function TouchStartStop(events) {\n      //events.bind(\'touchstart\', function (event) {                \n      //    events.preventDefault();\n      //    alert("touchStart");\n      //    //DragMenu();\n\n      //});\n      //events.bind(\'touchend\', function (event) {      \n      // $($ulRight.find("li")).draggable("destroy");\n      //alert("touchend");\n      //});\n\n      //events.bind(\'taphold\', function (event) {\n      //    events.preventDefault();\n      //    alert("taphold");               \n      //    //DragMenu();\n      //});\n    }\n    ;\n    function GetNodePath(e) {\n      chksearchvalues = e;\n      var timeoutLongTouch;\n      var $mydiv = $ulRight;\n      $bsyDiv[0].style.visibility = "visible";\n      // $($leftTreeDiv.find(".k-state-selected")).removeClass("k-state-selected");\n\n      if ($ulRight.find("input:checked").length > 1) {\n        $pathInfo.empty();\n      }\n      if ($(e.target).hasClass("VIS-Tm-glyphiconglyphicon-link")) {\n        //var msg = "" + VIS.Msg.getMsg("VIS_TM_DeleteIt") + "";\n        //var r = VIS.ADialog.ask(msg);\n        //  if (r == true)\n        // {\n        selectedItemArray = [];\n        var parent = $(e.target).parent();\n        var getID = $(e.target).parent().attr("id");\n        selectedItemArray.push(getID);\n        selectedItemArray = selectedItemArray.toString();\n        window.setTimeout(function () {\n          chksearchvalues = e;\n        }, 200);\n        if (bindornot == "false") {\n          if ($.inArray(parseInt(getID), convertmenuArray) < 0) {\n            DeleteNodeWithIcon($treeID, selectedItemArray, parent); //not found\n          } else {\n            //VIS.ADialog.info("NeverDelete");\n\n            VIS.ADialog.info("NeverDelete", true, msgShowforbindingWindow);\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        } else {\n          DeleteNodeWithIcon($treeID, selectedItemArray, parent);\n        }\n\n        // }\n        //  else\n        //   {\n\n        return;\n        //      $bsyDiv[0].style.visibility = "hidden";\n        // }\n      }\n      if ($(e.target).hasClass("vis-tm-textli")) {\n        $(this).find("input").prop("checked", false);\n        $(this).find("li").removeClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().parent().addClass("vis-tm-menuselectedcolor");\n        $($(e.target).parent().parent()).find("input").prop("checked", true);\n        getSelectedLiImg = $($(e.target).parent().parent()).find("img").attr("src");\n        e.target.id = $(e.target).attr("id");\n        if ($(e.target).parent().parent().find("input").attr("disabled") == "disabled") {\n          $($(e.target).parent().parent()).find("input").prop("checked", false);\n        }\n        $chkAllRightPannel.prop("checked", false);\n        AllItemsSelectOrNots($(e.target).parent().parent().find("input").attr("disabled"));\n        if (ismobile) {\n          TouchStartStop($(e.target).parent().parent());\n        }\n\n        //else {\n        //    $(this).find("input").prop("checked", false);\n        //    $(this).find("li").removeClass("vis-tm-menuselectedcolor");\n        //    $(e.target).parent().parent().addClass("vis-tm-menuselectedcolor");\n        //    $($(e.target).parent().parent()).find("input").prop("checked", true);\n        //}\n      }\n      if ($(e.target).hasClass("vis-tm-upperLi")) {\n        $(e.target).parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        $(e.target).addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().find("input").prop("checked", false);\n        $(e.target).find("input").prop("checked", true);\n        getSelectedLiImg = $(e.target).find("img").attr("src");\n        e.target.id = $(e.target).find(".vis-tm-textli").attr("id");\n        if ($(e.target).find("input").attr("disabled") == "disabled") {\n          $(e.target).find("input").prop("checked", false);\n        }\n        $chkAllRightPannel.prop("checked", false);\n        AllItemsSelectOrNots($(e.target).find("input").attr("disabled"));\n        if (ismobile) {\n          TouchStartStop($(e.target));\n        }\n\n        //else {\n        //    $(e.target).parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        //    $(e.target).addClass("vis-tm-menuselectedcolor");\n        //    $(e.target).parent().find("input").prop("checked", false);\n        //    $(e.target).find("input").prop("checked", true);\n        //}\n      }\n      if ($(e.target).hasClass("vis-tm-upperdivchkandimg")) {\n        $(e.target).parent().parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().parent().find("input").prop("checked", false);\n        $(e.target).find("input").prop("checked", true);\n        getSelectedLiImg = $(e.target).find("img").attr("src");\n        e.target.id = $(e.target).parent().find(".vis-tm-textli").attr("id");\n        if ($(e.target).find("input").attr("disabled") == "disabled") {\n          $(e.target).find("input").prop("checked", false);\n        }\n        //else {\n        //    $(e.target).parent().parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        //    $(e.target).parent().parent().find("input").prop("checked", false);\n        //    $(e.target).parent().addClass("vis-tm-menuselectedcolor");\n        //    $(e.target).find("input").prop("checked", true);\n        //}\n        $chkAllRightPannel.prop("checked", false);\n        AllItemsSelectOrNots($(e.target).find("input").attr("disabled"));\n        if (ismobile) {\n          TouchStartStop($(e.target).parent().parent());\n        }\n      }\n      if ($(e.target).hasClass("vis-tm-chkbox")) {\n        $bsyDiv[0].style.visibility = "visible";\n        if ($(e.target).attr("disabled") != "disabled") {\n          if ($(e.target).prop("checked")) {\n            $(e.target).parent().parent().addClass("vis-tm-menuselectedcolor");\n            e.target.id = e.target.id = $(e.target).parent().parent().find(".vis-tm-textli").attr("id");\n            getSelectedLiImg = $(e.target).parent().parent().find("img").attr("src");\n            for (var i = 0; i < $ulRight.find(".vis-tm-menuselectedcolor").length; i++) {\n              if ($($ulRight.find(".vis-tm-menuselectedcolor").find("input")[i]).attr("disabled") == "disabled") {\n                $($ulRight.find(".vis-tm-menuselectedcolor").find("input")[i]).parent().parent().removeClass("vis-tm-menuselectedcolor");\n              }\n            }\n            var sellenght = $ulRight.find("input:checked").length;\n            var disabledlen = $ulRight.find("[disabled]").length;\n            var totalinput = $ulRight.find("input").length;\n            var enableInput = totalinput - disabledlen;\n            if (sellenght == enableInput) {\n              $chkAllRightPannel.prop("checked", true);\n            } else {\n              $chkAllRightPannel.prop("checked", false);\n            }\n\n            //var ismobile = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n            //if (ismobile) {\n            //    $ulRight.find(".vis-tm-menuselectedcolor").find("li").draggable({});\n            //    $ulRight.find(".vis-tm-menuselectedcolor").draggable({});\n            //}\n\n            //DragMenu();\n          } else {\n            $(e.target).parent().parent().removeClass("vis-tm-menuselectedcolor");\n            getSelectedLiImg = $(e.target).parent().parent().find("img").attr("src");\n            e.target.id = 0;\n            $chkAllRightPannel.prop("checked", false);\n          }\n        }\n        $bsyDiv[0].style.visibility = "hidden";\n        if (ismobile) {\n          TouchStartStop($(e.target).parent().parent());\n        }\n      }\n      if ($(e.target).hasClass("summNonsumImage")) {\n        $(e.target).parent().parent().parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().parent().addClass("vis-tm-menuselectedcolor");\n        $(e.target).parent().parent().parent().find("input").prop("checked", false);\n        $(e.target).parent().find("input").prop("checked", true);\n        getSelectedLiImg = $(e.target).parent().find("img").attr("src");\n        e.target.id = $(e.target).parent().parent().find(".vis-tm-textli").attr("id");\n        if ($(e.target).parent().find("input").attr("disabled") == "disabled") {\n          $(e.target).parent().find("input").prop("checked", false);\n        }\n        $chkAllRightPannel.prop("checked", false);\n        //else {\n        //    $(e.target).parent().parent().parent().find("li").removeClass("vis-tm-menuselectedcolor");\n        //    $(e.target).parent().parent().addClass("vis-tm-menuselectedcolor");\n        //    $(e.target).parent().parent().parent().find("input").prop("checked", false)\n        //    $(e.target).parent().find("input").prop("checked", true);\n        //}\n        AllItemsSelectOrNots($(e.target).parent().find("input").attr("disabled"));\n        if (ismobile) {\n          TouchStartStop($(e.target).parent());\n        }\n      }\n      if (e.target.id == "" || e.target.id == "undefined") {\n        e.target.id = $(e.target).find(".vis-tm-menuselectedcolor").find("li").attr("id");\n      }\n\n      //  if ($(e.target).hasClass("vis-tm-textli")) {\n      //$ulRight.find("input:checked").length\n      if ($ulRight.find(".vis-tm-menuselectedcolor").length == 1 && $ulRight.find(".vis-tm-menuselectedcolor").find("li").hasClass("vis-tm-opacity") && e.target.id != "") {\n        $.ajax({\n          url: VIS.Application.contextUrl + "TreeMaintenance/GetNodePath",\n          type: \'Post\',\n          data: {\n            node_ID: e.target.id,\n            treeID: $treeID\n          },\n          success: function (data) {\n            $chkAllRightPannel.prop("checked", false);\n            var res = JSON.parse(data);\n            res = res.replaceAll("\\\\\\\\", " \\\\\\ ");\n            $pathInfo.empty();\n            $pathInfo.append(VIS.Utility.encodeText(res));\n            if ($chkTrace.is(":checked")) {\n              $chkAllCheckOrNot.prop("checked", false);\n              var selectedListId = $(e.target).parent().parent().find("li").attr("id");\n              var srcForSetLable = $(e.target).parent().parent().find("img").attr("src");\n              srcForSetLable = srcForSetLable.substring(srcForSetLable.lastIndexOf("/") + 1);\n              if (srcForSetLable == "summary.png") {\n                var textforlable = $(e.target).text();\n                textforlable = textforlable.substring(0, textforlable.lastIndexOf("("));\n                $lblMh4.text(textforlable);\n                existItss = -1;\n              }\n              getSelectedLiImg.lastIndexOf("/");\n              getSelectedLiImg = getSelectedLiImg.substring(getSelectedLiImg.lastIndexOf("/") + 1);\n              if (getSelectedLiImg != "mWindow.png" && getSelectedLiImg != "folder.png") {\n                if ($chkSummaryLevel.is(":checked")) {\n                  if ($chkTrace.is(":checked")) {\n                    $bsyDiv[0].style.visibility = "visible";\n                    if (getSelectedLiImg != "nonSummary.png") {\n                      // for (var p = 0; p < 15; p++) {\n                      $leftTreeKeno.data("kendoTreeView").expand(".k-item");\n                      // }\n                    } else {\n                      TreeTableName();\n                      var parent = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetParentId", {\n                        "treeId": $treeID,\n                        "nodeId": e.target.id,\n                        "tblName": tableTreeName\n                      }, null);\n                      if (parent != null && parent > 0) {\n                        var parent_id = parent;\n                        if (parent_id == null) {\n                          parent_id = 0;\n                        }\n                        if (existItss != parent_id) {\n                          $leftTreeKeno.data("kendoTreeView").expand(".k-item");\n                          window.setTimeout(function () {\n                            $($leftTreeDiv.find(".k-state-selected")).removeClass("k-state-selected");\n                            $($leftTreeDiv.find("div").find("div[data-nodeid=\'" + parent_id + "\']").parent()).addClass("k-state-selected")[0].scrollIntoView();\n                            var textforlable = $($leftTreeDiv.find(".k-state-selected")).text();\n                            $lblMh4.text(textforlable);\n                            existItss = parent_id;\n                            SelectedNodeColor();\n                            //var textforlable = $($leftTreeDiv.find(".k-state-selected")).text();\n                            ////textforlable = textforlable.substring(0, textforlable.lastIndexOf("("));\n                            //$lblMh4.text(textforlable);\n                          }, 200);\n                          $ulMid.empty();\n                          pageNoForChild = 1;\n                          pageSizeForChild = 50;\n                          searchChildNode = $cmbSearch.val();\n                          if ($chktreeNode.is(":checked")) {\n                            getTreeNodeChkValue = "true";\n                          } else {\n                            getTreeNodeChkValue = "false";\n                          }\n                          GetDataTreeNodeSelect(parent_id, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n                          existItss = parent_id;\n                        }\n                      }\n                    }\n                    $bsyDiv[0].style.visibility = "hidden";\n                  }\n                } else {\n                  // for (var p = 0; p < 15; p++) {\n                  $leftTreeKeno.data("kendoTreeView").expand(".k-item");\n                  // }\n                }\n              }\n              if ($($leftTreeDiv.find("div").find("div[data-nodeid=\'" + e.target.id + "\']").parent()).addClass("k-state-selected").length != 0) {\n                $($leftTreeDiv.find(".k-state-selected")).removeClass("k-state-selected");\n                $($leftTreeDiv.find(".k-state-focused")).removeClass("k-state-focused");\n                window.setTimeout(function () {\n                  $($leftTreeDiv.find("div").find("div[data-nodeid=\'" + e.target.id + "\']").parent()).addClass("k-state-selected")[0].scrollIntoView();\n                  SelectedNodeColor();\n                }, 200);\n                $ulMid.empty();\n                pageNoForChild = 1;\n                pageSizeForChild = 50;\n                searchChildNode = $cmbSearch.val();\n                if ($chktreeNode.is(":checked")) {\n                  getTreeNodeChkValue = "true";\n                } else {\n                  getTreeNodeChkValue = "false";\n                }\n                GetDataTreeNodeSelect(e.target.id, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n\n                //GetDataTreeNodeSelect(getParentID, $treeID, pageNoForChild, pageSizeForChild, searchChildNode, getTreeNodeChkValue, e);\n              } else {\n                if ($ulRight.find(".vis-tm-menuselectedcolor").length == 1) {\n                  var src = $ulRight.find(".vis-tm-menuselectedcolor").find("img").attr("src");\n                  src = src.substring(src.lastIndexOf("/") + 1);\n                  if (src != "nonSummary.png" && src != "summary.png") {\n                    $pathInfo.empty();\n                  } else {}\n                  //else if (src != "summary.png") {\n                  //    $pathInfo.empty();\n                  //}\n                }\n              }\n            }\n            $bsyDiv[0].style.visibility = "hidden";\n          },\n          error: function (e) {\n            console.log(e);\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        });\n      } else {\n        $pathInfo.empty();\n      }\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n    function GetChildCounts(selectedItemArray) {\n      var getfullIL = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent();\n      if (getfullIL.children("ul").length > 0) {\n        if ($($(getfullIL.children("ul")[0]).find("ul")[0]).length > 0) {\n          if ($($($(getfullIL.children("ul")[0]).find("ul")[0]).find("ul")[0]).length > 0) {\n            if ($($($($(getfullIL.children("ul")[0]).find("ul")[0]).find("ul")[0]).find("ul")[0]).length > 0) {\n              if ($($($($($(getfullIL.children("ul")[0]).find("ul")[0]).find("ul")[0]).find("ul")[0]).find("ul")[0]).length > 0) {\n                $getchildCount = true;\n              } else {\n                $getchildCount = false;\n              }\n            } else {\n              $getchildCount = false;\n            }\n          } else {\n            $getchildCount = false;\n          }\n        } else {\n          $getchildCount = false;\n        }\n      }\n    }\n    ;\n    var delNodWithIcon = true;\n    function DeleteNodeWithIcon($treeID, selectedItemArray, parent) {\n      $bsyDiv[0].style.visibility = "visible";\n      treeType = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetTreeType", {\n        "treeId": $treeID\n      }, null);\n      var tbname = "";\n      if (treeType == "PR") {\n        tbname = "AD_TreeNodePR";\n      } else if (treeType == "BP") {\n        tbname = "AD_TreeNodeBP";\n      } else if (treeType == "MM") {\n        tbname = "AD_TreeNodeMM";\n      } else {\n        tbname = "AD_TreeNode";\n      }\n      var child = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetNodeIdsOfParent", {\n        "tbname": tbname,\n        "parent_id": selectedItemArray,\n        "treeId": $treeID\n      }, null);\n      if (child != null && child.length > 0) {\n        VIS.ADialog.confirm("ChildAlsoWillbeRemove", true, "", "Confirm", function (result) {\n          if (!result) {\n            $bsyDiv[0].style.visibility = "hidden";\n            return;\n            //cancel\n          } else {\n            //GetChildCounts(selectedItemArray);\n            // if ($getchildCount == false)\n            // {\n            selectedItemArray = selectedItemArray.toString();\n            GetAllChildesIDs(tbname, selectedItemArray, $treeID);\n\n            // FindChildsID(tbname, selectedItemArray, $treeID);\n            // }\n\n            $.ajax({\n              url: VIS.Application.contextUrl + "TreeMaintenance/DeleteNodeFromBottom",\n              type: \'Post\',\n              data: {\n                nodeid: selectedItemArray,\n                treeID: $treeID,\n                menuArray: menuArray\n              },\n              success: function (data) {\n                var res = JSON.parse(data);\n                if (res == "") {\n                  if ($ulMid.find("input:checked").length == 0) {\n                    $chkAllCheckOrNot.prop("checked", false);\n                  }\n                  $pathInfo.empty();\n                  //var getLi = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent();\n\n                  var getLi = $ulRight.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().parent();\n                  getLi.find("input").prop("disabled", false);\n                  getLi.find("i").removeClass("vis-tm-opacity");\n                  getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                  getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n                  getLi.find("input").css("cursor", "pointer");\n                  if (getLi.hasClass("vis-tm-menuselectedcolor")) {\n                    $pathInfo.empty();\n                    getLi.find("input").prop("checked", true);\n                  }\n                  if (bindornot == "false") {\n                    GetIDsOnRolBindTree();\n                    //for (var f = 0; f < getIDforwithlongQuery.length; f++)\n                    //{\n                    //    if ($.inArray(parseInt(getIDforwithlongQuery[f]), convertmenuArray) >= 0)\n                    //    {\n                    //        UpdateRollCheckSeq(getIDforwithlongQuery[f]);\n                    //        var getrestrictIDss = $($($leftTreeDiv.find(".treechild")[0]).parent().parent().parent().find("ul")[0]);\n                    //        var matchResult = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + getIDforwithlongQuery[f] + "\']").parent().parent().parent();\n                    //        $leftTreeDiv.find("div").find("div[data-nodeid=\'" + getIDforwithlongQuery[f] + "\']").parent().parent().parent().remove();\n                    //        getrestrictIDss.append(matchResult);\n                    //    }\n                    //}\n                  }\n\n                  //var getchildss = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent().find(".treechild");\n\n                  //for (var f = 0; f < getchildss.length; f++)\n                  //{\n                  //    var idss = $(getchildss[f]).attr("data-nodeid");\n\n                  //    if (bindornot == "false")\n                  //    {\n                  //        if ($.inArray(parseInt(idss), convertmenuArray) >= 0)\n                  //        {\n                  //            UpdateRollCheckSeq(idss);\n                  //            var getrestrictIDss = $($($leftTreeDiv.find(".treechild")[0]).parent().parent().parent().find("ul")[0]);\n                  //            var matchResult = $leftTreeDiv.find("div").find("div[data-nodeid=\'" + idss + "\']").parent().parent().parent();\n                  //            $leftTreeDiv.find("div").find("div[data-nodeid=\'" + idss + "\']").parent().parent().parent().remove();\n                  //            getrestrictIDss.append(matchResult);\n                  //        }\n                  //    }\n\n                  //}\n\n                  $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent());\n\n                  //  $leftTreeDiv.data("kendoTreeView").element.find("li:has(li a.sfSel)");\n\n                  //$leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent().remove());\n\n                  // $leftTreeDiv.data(\'kendoTreeView\').dataSource.read();\n\n                  // $leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent().remove();\n\n                  ////////$ulMid.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().remove();\n                  $ulMid.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().remove();\n                  for (var i = 0; i < getIDFromChildLevel.length; i++) {\n                    var selectedItem = getIDFromChildLevel[i];\n                    $ulMid.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().remove();\n                    if (bindornot == "false") {\n                      if ($.inArray(parseInt(selectedItem), convertmenuArray) >= 0) {\n                        continue;\n                      }\n                    }\n\n                    //var chkenable = $ulRight.find("li").find("li[id=\'" + selectedItem + "\']").parent().parent();\n\n                    var chkenable = $ulRight.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().parent();\n                    chkenable.find("input").prop("disabled", false);\n                    chkenable.find("i").removeClass("vis-tm-opacity");\n                    chkenable.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                    chkenable.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n                    chkenable.find("input").css("cursor", "pointer");\n                    if (chkenable.hasClass("vis-tm-menuselectedcolor")) {\n                      $pathInfo.empty();\n                      chkenable.find("input").prop("checked", true);\n                    }\n                    if ($rightMenuDemand.val() == "Linked") {\n                      chkenable.remove();\n                    }\n\n                    //chkenable.removeClass("vis-tm-menuselectedcolor");\n\n                    // $ulRight.find(".vis-tm-menuselectedcolor").removeClass("vis-tm-menuselectedcolor");\n\n                    ////$ulMid.find("li").find("li[id=\'" + selectedItem + "\']").parent().remove();\n\n                    //var imgSource = $ulRight.find("li").find("li[id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                    //var changeImgSource = $ulRight.find("li").find("li[id=\'" + selectedItem + "\']").parent().parent().find("img");\n\n                    var imgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                    var changeImgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img");\n                    var setLinkedImage;\n                    var src = imgSource;\n                    if (src != null) {\n                      src = src.substring(src.lastIndexOf("/") + 1);\n                      if (src == "nonSummary.png") {\n                        setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                      } else if (src == "summary.png") {\n                        setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                      }\n                      changeImgSource.attr("src", setLinkedImage);\n                    }\n                  }\n                  //var imgSource = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent().find("img").attr("src");\n                  //var changeImgSource = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent().find("img");\n\n                  var imgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().parent().find("img").attr("src");\n                  var changeImgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().parent().find("img");\n                  var setLinkedImage;\n                  var src = imgSource;\n                  if (src != null) {\n                    src = src.substring(src.lastIndexOf("/") + 1);\n                    if (src == "nonSummary.png") {\n                      setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                    } else if (src == "summary.png") {\n                      setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                    } else if (src == "folder.png") {\n                      setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                    } //mWindow.png\n                    else if (src == "mWindow.png") {\n                      setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                    }\n                    changeImgSource.attr("src", setLinkedImage);\n                  }\n                  if ($ulMid.find("li").length == 0 && !$leftTreeDiv.find("span").hasClass("k-state-selected")) {\n                    $lblMh4.text(VIS.Msg.getMsg("SelectTree"));\n                  }\n                  HasScrollarOrNot();\n                }\n                AllSelectChkValue();\n                AllSelectChkRightSide();\n                GetCountOnTreeChanges();\n                $bsyDiv[0].style.visibility = "hidden";\n              },\n              error: function (e) {\n                console.log(e);\n                $bsyDiv[0].style.visibility = "hidden";\n              }\n            });\n          }\n        });\n      } else {\n        //GetChildCounts(selectedItemArray);\n        //if ($getchildCount == false) {\n        //    FindChildsID(tbname, selectedItemArray, $treeID);\n        //}\n\n        selectedItemArray = selectedItemArray.toString();\n        GetAllChildesIDs(tbname, selectedItemArray, $treeID);\n\n        //FindChildsID(tbname, selectedItemArray, $treeID);\n\n        $.ajax({\n          url: VIS.Application.contextUrl + "TreeMaintenance/DeleteNodeFromBottom",\n          type: \'Post\',\n          data: {\n            nodeid: selectedItemArray,\n            treeID: $treeID,\n            menuArray: menuArray\n          },\n          success: function (data) {\n            var res = JSON.parse(data);\n            if (res == "") {\n              $pathInfo.empty();\n              //var getLi = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent();\n\n              var getLi = $ulRight.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().parent();\n              getLi.find("input").prop("disabled", false);\n              getLi.find("i").removeClass("vis-tm-opacity");\n\n              //if (getLi.hasClass("vis-tm-menuselectedcolor")) {\n              //    getLi.find("input").prop("checked", true);\n              //}\n              //else {\n              //    getLi.removeClass("vis-tm-menuselectedcolor");\n              //}\n\n              getLi.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n              getLi.find("span").removeClass("VIS-Tm-glyphiconglyphicon-link");\n              getLi.find("input").css("cursor", "pointer");\n              $leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent());\n\n              //  $leftTreeDiv.data("kendoTreeView").element.find("li:has(li a.sfSel)");\n\n              //$leftTreeDiv.data("kendoTreeView").remove($leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent().remove());\n\n              // $leftTreeDiv.data(\'kendoTreeView\').dataSource.read();\n\n              // $leftTreeDiv.find("div").find("div[data-nodeid=\'" + selectedItemArray + "\']").parent().parent().parent().remove();\n\n              /////$ulMid.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().remove();\n              $ulMid.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().remove();\n              for (var i = 0; i < getIDFromChildLevel.length; i++) {\n                var selectedItem = getIDFromChildLevel[i];\n                if (bindornot == "false") {\n                  if ($.inArray(parseInt(selectedItem), convertmenuArray) >= 0) {\n                    continue;\n                  }\n                }\n\n                //var chkenable = $ulRight.find("li").find("li[id=\'" + selectedItem + "\']").parent().parent();\n\n                var chkenable = $ulRight.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().parent();\n                chkenable.find("input").prop("disabled", false);\n                chkenable.find("i").removeClass("vis-tm-opacity");\n                chkenable.find(".vis-tm-textli").removeClass("vis-tm-opacity");\n                chkenable.removeClass("vis-tm-menuselectedcolor");\n                //$rightMenuDemand.val();\n                if ($rightMenuDemand.val() == "Linked") {\n                  chkenable.remove();\n                }\n\n                //var imgSource = $ulRight.find("li").find("li[id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                //var changeImgSource = $ulRight.find("li").find("li[id=\'" + selectedItem + "\']").parent().parent().find("img");\n\n                var imgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img").attr("src");\n                var changeImgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItem + "\']").parent().parent().find("img");\n                var setLinkedImage;\n                var src = imgSource;\n                if (src != null) {\n                  src = src.substring(src.lastIndexOf("/") + 1);\n                  if (src == "nonSummary.png") {\n                    setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                  } else if (src == "summary.png") {\n                    setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                  }\n                  changeImgSource.attr("src", setLinkedImage);\n                }\n              }\n              //var imgSource = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent().find("img").attr("src");\n              //var changeImgSource = $ulRight.find("li").find("li[id=\'" + selectedItemArray + "\']").parent().parent().find("img");\n\n              var imgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().parent().find("img").attr("src");\n              var changeImgSource = $ulRight.find("li").find("li[data-id=\'" + selectedItemArray + "\']").parent().parent().find("img");\n              var setLinkedImage;\n              var src = imgSource;\n              if (src != null) {\n                src = src.substring(src.lastIndexOf("/") + 1);\n                if (src == "nonSummary.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/mWindow.png";\n                } else if (src == "summary.png") {\n                  setLinkedImage = VIS.Application.contextUrl + "Areas/VIS/Images/folder.png";\n                }\n                changeImgSource.attr("src", setLinkedImage);\n              }\n              HasScrollarOrNot();\n            }\n            if ($ulMid.find("li").length == 0 && !$leftTreeDiv.find("span").hasClass("k-state-selected")) {\n              $lblMh4.text(VIS.Msg.getMsg("SelectTree"));\n            }\n            AllSelectChkValue();\n            AllSelectChkRightSide();\n            GetCountOnTreeChanges();\n            $bsyDiv[0].style.visibility = "hidden";\n          },\n          error: function (e) {\n            console.log(e);\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        });\n      }\n    }\n    ;\n    var ChkSummayOnTreeChange = null;\n    function GetCountForRestriction() {\n      TreeTableName();\n      var sqlQry = "";\n      sqlQry = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "TreeMaintenance/GetRestrictionCount", {\n        "treeId": $treeID,\n        "tableTreeName": tableTreeName\n      }, null);\n      if (sqlQry > 5000) {\n        $chkSummaryLevel.prop("checked", true);\n        $chkSummaryLevel.prop("disabled", true);\n        $bsyDivforbottom[0].style.visibility = "hidden";\n        $isSummary = true;\n        ChkSummayOnTreeChange = true;\n        $treeNodeSearch.css("display", "inherit");\n        //$cmbSearch.css("border-right", "1px solid #ccc");\n        $secoundDiv.css("display", "inherit");\n        //$treeBackDiv.css("border-bottom", "1px solid #1aa0ed");\n        $treeBackDiv.css("height", "70%");\n        topTreeDiv.css("height", "100%");\n        $treeBackDiv.resizable({\n          handles: \'n,s,se\'\n        });\n        $treeBackDiv.find(".ui-resizable-e").css("right", "0px");\n        $treeBackDiv.find(".ui-resizable-s").css("bottom", "0px");\n        topTreeDiv.addClass("VIS-TM-resizediv");\n        $secoundDiv.height(leftMianDataDiv.height() - $treeBackDiv.height() - 20);\n        //$cmbSearch.width($searchDiv.width() - ($treeNodeSearch.width() + 40 + $btnSearch.width()));\n        crossImages.css("right", "145px");\n      } else {\n        $chkSummaryLevel.prop("disabled", false);\n        ChkSummayOnTreeChange = false;\n      }\n    }\n    ;\n    function OnTreeChange() {\n      expandCollapse = false;\n      clickontreenode = true;\n      changeSeqFlag = false;\n      validationValue = false;\n      if ($cmbSelectTree.val() != "") {\n        //$bsyDiv[0].style.visibility = "visible";\n        //$cmbSearch.prop("disabled", true);\n        //$cmbRightSearch.prop("disabled", true);\n        //$chkAllCheckOrNot.prop("disabled", true);\n        //$chkTrace.prop("disabled", true);\n        //$rightMenuDemand.prop("disabled", true);\n\n        //treeCmbDisable.css("display", "inherit");\n        $bsyDivTree[0].style.visibility = "visible";\n        unlinkeAllNode.removeClass("vis-tm-opacity");\n        $chkSummaryLevel.prop("disabled", false);\n        treeCmbDisable.css("display", "inherit");\n        $rightMenuDemand.prop("disabled", true);\n        $chkTrace.prop("disabled", false);\n        $chkTrace.css("cursor", "pointer");\n        // $chkTrace.prop("checked", false);\n\n        $chktreeNode.prop("disabled", false);\n        $chktreeNode.css("cursor", "pointer");\n        // $chktreeNode.prop("checked", false);\n\n        $cmbSearch.prop("disabled", false);\n        $cmbRightSearch.prop("disabled", false);\n        // $rightMenuDemand.prop("disabled", false);\n\n        $chkAllRightPannel.prop("disabled", false);\n        $chkAllRightPannel.css("cursor", "pointer");\n        //   $chkAllRightPannel.prop("checked", false);\n\n        $squenceDailog.addClass("vis-tm-delete");\n        $treeExpandColapse.css("display", "none");\n        $treeCollapseColapse.css("display", "inherit");\n        // $treeCollapseColapse.css("float", "right");\n\n        $deleteChild.addClass("vis-tm-delete");\n        //$leftTreeDiv.height($treeBackDiv.height()-10);\n        $scrollBottom = true;\n        onscrollCheck = true;\n        $ulRight.empty();\n        $ulMid.empty();\n        searchRightext = "";\n        $cmbRightSearch.val("");\n        $cmbSearch.val("");\n        $recordeNotFound.css("display", "inherit");\n        pageLength = 50;\n        pageNo = 1;\n        $rightMenuDemand.val($($rightMenuDemand.find("option")[0]).attr("value"));\n        //var selText = VIS.Utility.encodeText($cmbSelectTree.find("option:selected").text());\n\n        var selText = $cmbSelectTree.find("option:selected").text();\n        $lblRh4.text(VIS.Msg.getMsg("AllItems"));\n        //                $lblRh4.text(selText);\n        $lblMh4.text(selText);\n        selectedNode = $cmbSelectTree.find("option:selected");\n        $cmbSelectedType = selectedNode.attr("data-type");\n        $treeID = selectedNode.val(); //AD_Tree_id\n        $cmbIsallnodes = selectedNode.attr("data-isallnodes");\n        window.setTimeout(function () {\n          TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n        }, 100);\n        //$demandsMenu = "All";\n        //pageNo = 1;\n        //LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n        window.setTimeout(function () {\n          $ulRight.empty();\n          $demandsMenu = "All";\n          pageNo = 1;\n          LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n          DropMenu();\n          DropInMidDiv();\n        }, 200);\n        SetTreeHeight();\n        if ($chkSummaryLevel.is(":checked")) {\n          $isSummary = true;\n          $secoundDiv.css("display", "inherit");\n          //$treeBackDiv.css("border-bottom", "1px solid #1aa0ed");\n          $treeBackDiv.css("height", "70%");\n          topTreeDiv.css("height", "100%");\n          $treeBackDiv.resizable({});\n          $treeBackDiv.find(".ui-resizable-e").css("right", "0px");\n          $treeBackDiv.find(".ui-resizable-s").css("bottom", "0px");\n          topTreeDiv.addClass("VIS-TM-resizediv");\n          $secoundDiv.height(leftMianDataDiv.height() - $treeBackDiv.height() - 20);\n          $mData.height(leftMianDataDiv.height() - ($treeBackDiv.height() + $mTopHeader.height() + 40));\n          $treeNodeSearch.css("display", "inherit");\n          //$cmbSearch.css("border-right", "1px solid #ccc");\n        } else {\n          //$cmbSearch.css("border-right", "none");\n          $treeNodeSearch.css("display", "none");\n          $isSummary = false;\n          $secoundDiv.css("display", "none");\n          //$treeBackDiv.css("border-bottom", "0px");\n          $treeBackDiv.css("height", "100%");\n          topTreeDiv.css("height", "100%");\n          $treeBackDiv.resizable(\'destroy\');\n          topTreeDiv.removeClass("VIS-TM-resizediv");\n          $secoundDiv.height(leftMianDataDiv.height() - $treeBackDiv.height());\n        }\n\n        //window.setTimeout(function () {\n        //    GetCountForRestriction();\n        //}, 300);\n\n        // getTreeTableName();\n        // $bsyDiv[0].style.visibility = "hidden";\n      } else {\n        unlinkeAllNode.addClass("vis-tm-opacity");\n        $chkSummaryLevel.prop("disabled", true);\n        $chkSummaryLevel.prop("checked", true);\n        treeCmbDisable.css("display", "none");\n        $treeID = 0;\n        $ulRight.empty();\n        $ulMid.empty();\n        $leftTreeKeno.data("kendoTreeView").destroy();\n        $leftTreeKeno.empty();\n        $pathInfo.empty();\n        searchRightext = "";\n        $cmbRightSearch.val("");\n        selectedNode = null;\n        $deleteChild.addClass("vis-tm-delete");\n        $cmbSearch.val("");\n        window.setTimeout(function () {\n          $ulRight.empty();\n        }, 200);\n        $lblRh4.text(VIS.Msg.getMsg("SelectTree"));\n        $lblMh4.text(VIS.Msg.getMsg("SelectTree"));\n        //$recordeNotFoundRight.css("display", "inherit");\n        $recordeNotFound.css("display", "none");\n        $squenceDailog.addClass("vis-tm-delete");\n        $chktreeNode.prop("disabled", true);\n        $chkTrace.prop("disabled", true);\n        $chktreeNode.css("cursor", "not-allowed");\n        $chkTrace.css("cursor", "not-allowed");\n        $cmbSearch.prop("disabled", true);\n        $cmbRightSearch.prop("disabled", true);\n        $rightMenuDemand.prop("disabled", true);\n        $chkAllRightPannel.prop("disabled", true);\n        $chkAllRightPannel.css("cursor", "not-allowed");\n        rightCrossImage.css("display", "none");\n        crossImages.css("display", "none");\n\n        //$cmbSearch.prop("disabled", false);\n        //$cmbRightSearch.prop("disabled", false);\n        //$chkAllCheckOrNot.prop("disabled", false);\n        //$chkTrace.prop("disabled", false);\n        //$rightMenuDemand.prop("disabled", false);\n      }\n      $chkTrace.prop("checked", false);\n      $chkAllRightPannel.prop("checked", false);\n      $chktreeNode.prop("checked", false);\n      $ulRight.empty();\n      $chkAllCheckOrNot.prop("checked", false);\n      AllSelectChkValue();\n    }\n    ;\n    function SetTreeHeight() {\n      topTreeDiv.height($treeBackDiv.height() - 10);\n\n      //window.setTimeout(function () {\n      //    $($leftTreeKeno.find("ul")[0]).css({ "overflow": "auto", "height": "265px" });\n      //}, 200);\n    }\n    ;\n    var onscrollCheck = true;\n    function GetAllMenuData(e) {\n      var elem = $(e.currentTarget);\n      if (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()) {\n        if ($ulRight.find("li").length > 0) {\n          $demandsMenu = $rightMenuDemand.val();\n          onscrollCheck = false;\n          $rightmenuScroll = true;\n          pageNo += 1;\n          LoadMenuData($treeID, $cmbSelectedType, searchRightext, $demandsMenu);\n        }\n      }\n\n      //var lastScrollTop = 0;\n      //var st = $(this).scrollTop();\n      //if (st > lastScrollTop)\n      //{\n      //    // downscroll code\n      //    var s = "";\n      //}\n      //else\n      //{\n      //    var s = ""; // upscroll code\n      //}\n      //lastScrollTop = st;\n\n      //if ($ulBackDiv[0].scrollHeight - $ulBackDiv.scrollTop() == $ulBackDiv.outerHeight()) {\n      //    pageNo += 1;\n      //    LoadMenuData($treeID, $cmbSelectedType);\n      //}\n    }\n    ;\n    function IsSummaryLevelCheck(e) {\n      if ($cmbSelectTree.val() != "") {\n        $ulMid.empty();\n        if ($chkSummaryLevel.is(":checked")) {\n          $bsyDivforbottom[0].style.visibility = "hidden";\n          $isSummary = true;\n          $treeNodeSearch.css("display", "inherit");\n          //$cmbSearch.css("border-right", "1px solid #ccc");\n          $secoundDiv.css("display", "inherit");\n          //$treeBackDiv.css("border-bottom", "1px solid #1aa0ed");\n          $treeBackDiv.css("height", "70%");\n          topTreeDiv.css("height", "100%");\n          $treeBackDiv.resizable({\n            handles: \'n,s,se\'\n          });\n          $treeBackDiv.find(".ui-resizable-e").css("right", "0px");\n          $treeBackDiv.find(".ui-resizable-s").css("bottom", "0px");\n          topTreeDiv.addClass("VIS-TM-resizediv");\n          if (selectedNode != null) {\n            TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n          }\n          $secoundDiv.height(leftMianDataDiv.height() - $treeBackDiv.height() - 20);\n\n          //$cmbSearch.width($searchDiv.width() - ($treeNodeSearch.width() + 40 + $btnSearch.width()));\n          crossImages.css("right", "145px");\n        } else {\n          AskForMoreRecorde();\n          if ($cmbSearch.val() != "") {\n            $chktreeNode.prop("checked", false);\n          }\n\n          //$cmbSearch.width($searchDiv.width() - ($btnSearch.width() + 30));\n          crossImages.css("right", "35px");\n\n          //$treeNodeSearch.css("display", "none");\n          //$cmbSearch.css("border-right", "none");\n          //$isSummary = false;\n          //$secoundDiv.css("display", "none");\n          //$treeBackDiv.css("border-bottom", "0px");\n          //$treeBackDiv.css("height", "100%");\n          //topTreeDiv.css("height", "100%");\n          //$treeBackDiv.resizable(\'destroy\')\n          //topTreeDiv.removeClass("VIS-TM-resizediv");\n          //if (selectedNode != null)\n          //{\n          //    TreeDataOnCmbChange($cmbSelectedType, $treeID, $cmbIsallnodes, $isSummary);\n          //}\n        }\n        $treeExpandColapse.css("display", "none");\n        $treeCollapseColapse.css("display", "inherit");\n        AllSelectChkValue();\n        window.setTimeout(function () {\n          if ($cmbSearch.val() != "") {\n            window.setTimeout(function () {\n              SearchNodeInTree(e);\n            }, 200);\n          }\n        }, 200);\n        lastSeletedIndex = -1;\n        changeSeqFlag = false;\n      }\n    }\n    ;\n    function createBusyIndicator() {\n      //$bsyDiv = $("<div class=\'BusyDiv\'>");\n      $bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //$bsyDiv.css("position", "absolute");\n      //$bsyDiv.css("bottom", "0");\n      //$bsyDiv.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/busy.gif\') no-repeat");\n      //$bsyDiv.css("background-position", "center center");\n      //$bsyDiv.css("width", "98%");\n      //$bsyDiv.css("height", "98%");\n      //$bsyDiv.css(\'text-align\', \'center\');\n      //$bsyDiv.css(\'z-index\', \'1000\');\n      $bsyDiv[0].style.visibility = "visible";\n      $root.append($bsyDiv);\n    }\n    ;\n\n    //function createBusywithoutimage() {\n    //    $bsyDivtreechnage = $("<div class=\'BusyDiv\'>");\n    //    $bsyDivtreechnage.css("position", "absolute");\n    //    $bsyDivtreechnage.css("bottom", "0");\n    //    $bsyDivtreechnage.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/busy.gif\') no-repeat");\n    //    $bsyDivtreechnage.css("background-position", "center center");\n    //    $bsyDivtreechnage.css("width", "98%");\n    //    $bsyDivtreechnage.css("height", "98%");\n    //    $bsyDivtreechnage.css(\'text-align\', \'center\');\n    //    $bsyDivtreechnage.css(\'z-index\', \'1000\');\n    //    $bsyDivtreechnage[0].style.visibility = "visible";\n    //    //$root.append($bsyDivtreechnage);\n    //};\n\n    function createBusyIndicatorFroBottomDiv() {\n      var $topdiv = null;\n      $topdiv = $(\'<div style="position: relative; width: 100%; height: 100%; z-index: -1;">\');\n      $bsyDivforbottom = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //$bsyDivforbottom.css("position", "absolute");\n      //$bsyDivforbottom.css("bottom", "0");\n      //$bsyDivforbottom.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/busy.gif\') no-repeat");\n      //$bsyDivforbottom.css("background-position", "center center");\n      //$bsyDivforbottom.css("width", "98%");\n      //$bsyDivforbottom.css("height", "98%");\n      //$bsyDivforbottom.css(\'text-align\', \'center\');\n      //$bsyDivforbottom.css(\'z-index\', \'1000\');\n      //$bsyDivforbottom[0].style.visibility = "visible";\n      $topdiv[0].style.visibility = "visible";\n      $topdiv.append($bsyDivforbottom);\n      $secoundDiv.append($topdiv);\n    }\n    ;\n    function createBusyIndicatorForMenu() {\n      $bsyDivMenu = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //$bsyDivMenu.css("position", "absolute");\n      //$bsyDivMenu.css("bottom", "0");\n      //$bsyDivMenu.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/busy.gif\') no-repeat");\n      //$bsyDivMenu.css("background-position", "center center");\n      //$bsyDivMenu.css("width", "98%");\n      //$bsyDivMenu.css("height", "98%");\n      //$bsyDivMenu.css(\'text-align\', \'center\');\n      //$bsyDivMenu.css(\'z-index\', \'1000\');\n      $bsyDivMenu[0].style.visibility = "visible";\n      $rightDataDiv.append($bsyDivMenu);\n    }\n    ;\n    function createBusyIndicatorForTree() {\n      // $recodeCount = $(\'<span style="display:none;position: relative;top: 60%;">\' + VIS.Msg.getMsg("ItWillTakeTime") + \'<span/>\');\n      $bsyDivTree = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      //$bsyDivTree.css("position", "absolute");\n      //$bsyDivTree.css("bottom", "0");\n      //$bsyDivTree.css("background", "url(\'" + VIS.Application.contextUrl + "Areas/VIS/Images/busy.gif\') no-repeat");\n      //$bsyDivTree.css("background-position", "center center");\n      //$bsyDivTree.css("width", "98%");\n      //$bsyDivTree.css("height", "98%");\n      //$bsyDivTree.css(\'text-align\', \'center\');\n      //$bsyDivTree.css(\'z-index\', \'1000\');\n      $bsyDivTree[0].style.visibility = "visible";\n      // $bsyDivTree.append($recodeCount);\n      $treeBackDiv.append($bsyDivTree);\n    }\n    ;\n    this.Initialize = function () {\n      createBusyIndicator();\n      createBusyIndicatorForMenu();\n      createBusyIndicatorForTree();\n      createBusyIndicatorFroBottomDiv();\n      GetTreeNameForCombo();\n      EventHandling();\n      window.setTimeout(function () {\n        $bsyDiv[0].style.visibility = "hidden";\n      }, 200);\n      $bsyDiv[0].style.visibility = "visible";\n      $bsyDivMenu[0].style.visibility = "hidden";\n      $bsyDivTree[0].style.visibility = "hidden";\n      $bsyDivforbottom[0].style.visibility = "hidden";\n    };\n    this.disposeComponent = function () {\n      $leftTreeKeno = null;\n      $isSummary = null;\n      selectedNode = null;\n      $cmbSelectedType = null;\n      // $cmbSelectedID = null;\n      $treeID = null;\n      $cmbIsallnodes = null;\n      TemplateTree = null;\n      $dragMenuNodeID = null;\n      $treeDataObjectForMatch = null;\n      pageLength = null;\n      pageNo = null;\n      // rightMenuSelectedID = null;\n      getIDFromContainer = null;\n      dragMenuNodeIDArray = null;\n      $checkMorRdragable = null;\n      $dragTreeDataNodeID = null;\n      getParentID = null;\n      $bsyDiv = null;\n      $getLifromTree = null;\n      $getDataForTree = null;\n      $ldiv = null;\n      $mdiv = null;\n      $rdiv = null;\n      $lTopLeftDiv = null;\n      $lTopRightDiv = null;\n      $chkSummaryLevel = null;\n      $lblSummaryLevel = null;\n      $lblSelectTree = null;\n      $lTopMidDiv = null;\n      $cmbSelectTree = null;\n      $treeRefresh = null;\n      $cmbRefresh = null;\n      $treeBackDiv = null;\n      $leftTreeDiv = null;\n      $searchDiv = null;\n      $cmbSearch = null;\n      $btnSearch = null;\n      $mTopHeader = null;\n      $lblMh4 = null;\n      $mData = null;\n      $recordeNotFound = null;\n      $ulMid = null;\n      $rTopHeard = null;\n      $lblRh4 = null;\n      $rightDataDiv = null;\n      $ulBackDiv = null;\n      $ulRight = null;\n      $pathRightlist = null;\n      $pathInfo = null;\n    };\n    this.getRoot = function () {\n      if (window.kendo == undefined || window.kendo == null) {\n        //VIS.ADialog.info("PleaseInstallKendoUIModule");\n\n        var divNoModule = $(\'<div><p style="text-align: center;line-height: 600px;">\' + VIS.Msg.getMsg("PleaseInstallKendoUIModule") + \'</p></div>\');\n        return divNoModule;\n      }\n      window.setTimeout(function () {\n        $deleteChild.addClass("vis-tm-delete");\n        $treeBackDiv.find(".ui-resizable-n").css("display", "none");\n      }, 200);\n      $bsyDiv[0].style.visibility = "visible";\n      return $root;\n    };\n    this.formSizeChanged = function (height, width) {\n      $secoundDiv.height(leftMianDataDiv.height() - $treeBackDiv.height() - 20);\n      //$cmbSearch.width($searchDiv.width() - ($treeNodeSearch.width() + 40 + $btnSearch.width()));\n      $mData.height($secoundDiv.height());\n      $secoundDiv.css("overflow", "hidden");\n\n      //$leftTreeDiv.height($treeBackDiv.height());\n    };\n    this.sizeChanged = function (height, width) {\n      this.formSizeChanged(height, width);\n    };\n  }\n  ;\n  VTreeMaintenance.prototype.init = function (windowNo, frame) {\n    this.frame = frame;\n    this.windowNo = windowNo;\n    this.Initialize();\n    this.frame.getContentGrid().append(this.getRoot());\n    //this.formSizeChanged();\n  };\n  VTreeMaintenance.prototype.sizeChanged = function (height, width) {\n    this.formSizeChanged(height, width);\n  };\n  VTreeMaintenance.prototype.refresh = function (height, width) {\n    this.formSizeChanged();\n  };\n  VTreeMaintenance.prototype.dispose = function () {\n    this.disposeComponent();\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.Apps.AForms.VTreeMaintenance = VTreeMaintenance;\n  //VAdvantage.Apps.AForms.VTreeMaintenance\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/treemaintenance.js?')},"./Areas/VIS/Scripts/app/Framework/userpreference.js":()=>{eval(';\n(function (VIS, $) {\n  VIS.Framework = VIS.Framework || {};\n  //form declaretion\n  function UserPreference(isGmailSettings) {\n    this.frame;\n    this.windowNo;\n    var $autocommit = null;\n    var $storepws = null;\n    var $autologin = null;\n    var $transtab = null;\n    var $acctab = null;\n    var $autonewrecord = null;\n    var $advanstab = null;\n    var $cachewindows = null;\n    var $tracecmb = null;\n    var $tracefile = null;\n    // var $printer = null;\n    //var $printpreview = null;\n    var $prefdate = null;\n    var $dictionary = null;\n    var $show = null;\n    var $showmingrid = null;\n    var $pagesize = null;\n    var $printnative = null;\n    var $windowpagesize = null;\n    var $variablename = null;\n    var $variablevalue = null;\n    var $erroronly = null;\n    var $reset = null;\n    // var $sentmail = null;\n    var $savetofile = null;\n    var $btnlogDate = null;\n    var $btnDownLog = null;\n    var $error = null;\n    var $Okbtn = null;\n    var $cancelbtn = null;\n    var $role = null;\n    var $contextlist = null;\n    //var $connDetail = null;\n    //current object of the class\n    var $self = this;\n    var $tab = null;\n    var $btnChangePws = null;\n    var $currentPws = null;\n    var $newPws = null;\n    var $conformPws = null;\n    var $chkEmail = null;\n    var $chkNotice = null;\n    var $chkSMS = null;\n    var $chkFax = null;\n    var $txtUserName = null;\n    var $txtPws = null;\n    var $btnEmailConfig = null;\n    var $btnSubstitute = null;\n    var $btnSaveChanges = null;\n    var $btnSaveChangePassword = null;\n    var lblRecordSave = null;\n    var lblChangePasswordMessage = null;\n    var btnSave = null;\n    var lblPrefSave = null;\n    var _arrOfarr = null;\n\n    //*******Gmail Task Settings********\n    var $btnGetGmailAuthCode = null;\n    var $btnSyncGmailTasks = null;\n    var $txtGmailAuthCode = null;\n    var $chkIsSyncBackground = null;\n    var $lblTaskSettingMessage = null;\n    var chkIsSyncBackground = null;\n    var isRemoveTaskLink = false;\n    //***********************************\n\n    //*******Gmail Calendar Settings********\n    var $btnGetGmailCalAuthCode = null;\n    var $btnSyncGmailCalendar = null;\n    var $txtGmailCalAuthCode = null;\n    var $chkCalIsSyncBackground = null;\n    var $lblCalendarSettingMessage = null;\n    var chkCalIsSyncBackground = null;\n    var isRemoveCalendarLink = false;\n    //***********************************\n\n    //*******Gmail Contact Settings********\n\n    var $btnGetGmailContactAuthCode = null;\n    var $btnSyncGmailContact = null;\n    var $txtGmailContactAuthCode = null;\n    var $chkContactIsSyncBackground = null;\n    var $lblContactSettingMessage = null;\n    var chkContactIsSyncBackground = null;\n    var isRemoveContactLink = false;\n    var $txtGmailUsername = null;\n    var $txtGmailPassword = null;\n    var $cmbGmailRole = null;\n    var $chkIsUpdateExisting = null;\n    var chkIsUpdateExisting = null;\n    var $lblContactSettingMessage = null;\n    var $btnSyncGmailContacts = null;\n    //***********************************\n\n    //********Login Settings***********\n    var $cmdRole = null;\n    var $cmdClient = null;\n    var $cmdOrg = null;\n    var $cmdWareHouse = null;\n    var defaultLogin = null;\n    //*********************************\n    var drpTheme = null;\n    var ulTheme = null;\n    var btnTheme = null;\n    var themeId = null;\n    var changeThemeColor = null;\n    var $root = $("<div class=\'vis-forms-container\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var windowNo = VIS.Env.getWindowNo();\n    this.log = VIS.Logging.VLogger.getVLogger("UserPreference");\n    this.load = function () {\n      //this.log.log(VIS.Logging.Level.SEVERE, "cretical error");\n      //this.log.log(VIS.Logging.Level.INFO, "INFO");\n      //this.log.log(VIS.Logging.Level.WARNING, "WARNING");\n      //this.log.log(VIS.Logging.Level.OFF, "OFF");\n      $busyDiv[0].style.visibility = \'visible\';\n      $root.load(VIS.Application.contextUrl + \'UserPreference/Index/?windowno=\' + windowNo + \'&adUserId=\' + VIS.context.getAD_User_ID(), function (event) {\n        $self.init($root);\n        var divget = $root.find("#content_" + windowNo);\n        if (divget != null) {\n          // divget.tabs();\n          //divget.tabs().addClass("ui-tabs-vertical ui-helper-clearfix");\n          //divget.find("li").removeClass("ui-corner-top").addClass("ui-corner-left");\n        }\n        //remove image\n        $busyDiv[0].style.visibility = \'hidden\';\n      });\n    };\n    this.init = function (root) {\n      //Initialize or get controls\n      // $connDetail = root.find("#txtConnectionDetail_" + windowNo);\n\n      $autocommit = root.find("#chkAutoCommit_" + windowNo);\n      $storepws = root.find("#chkStorePassword_" + windowNo);\n      $autologin = root.find("#chkAutoLogin_" + windowNo); //NotFound\n      $transtab = root.find("#chkShowTranslationTab_" + windowNo);\n      $acctab = root.find("#chkShowAccountingTab_" + windowNo);\n      $autonewrecord = root.find("#chkAutoNewRecord_" + windowNo);\n      $advanstab = root.find("#chkShowAdvancedTab_" + windowNo);\n      $cachewindows = root.find("#chkCacheWindows_" + windowNo);\n      $tracecmb = root.find("#cmbTraceLevel_" + windowNo);\n      $tracefile = root.find("#chkTraceFile_" + windowNo);\n      // $printer = root.find("#cmbPrinter_" + windowNo);\n      //$printpreview = root.find("#chkPreviewPrint_" + windowNo);\n\n      $prefdate = root.find("#dt_Date_" + windowNo);\n      $dictionary = root.find("#chkDictionaryMaintain_" + windowNo); //NotFound\n      $show = root.find("#cmbClientOrg_" + windowNo);\n      $showmingrid = root.find("#chkShowMiniGrid_" + windowNo); //NotFound\n      $pagesize = root.find("#cmbPageSize_" + windowNo);\n      $printnative = root.find("#chkNativeDigit_" + windowNo);\n      $windowpagesize = root.find("#cmbWindowPageSize_" + windowNo);\n      $variablename = root.find("#lblVariableName_" + windowNo);\n      $variablevalue = root.find("#lblVariableValue_" + windowNo);\n      $Okbtn = root.find("#btnOk_" + windowNo);\n      $cancelbtn = root.find("#btnCancel_" + windowNo);\n      $role = root.find("#btnRole_" + windowNo); //NotFound\n      $contextlist = root.find("#contextlst_" + windowNo);\n      $error = root.find("#prefErrortbl_" + windowNo);\n      $Okbtn.hide();\n      $cancelbtn.hide();\n      //User Setting control find\n      $btnChangePws = root.find("#btnChangePws_" + windowNo);\n      $currentPws = root.find("#txtCurrentPws_" + windowNo);\n      $newPws = root.find("#txtNewPws_" + windowNo);\n      $conformPws = root.find("#txtConformPws_" + windowNo);\n      $chkEmail = root.find("#chkIsEmail_" + windowNo);\n      $chkNotice = root.find("#chkIsNotice_" + windowNo);\n      $chkSMS = root.find("#chkIsSMS_" + windowNo);\n      $chkFax = root.find("#chkIsFax_" + windowNo);\n      $txtUserName = root.find("#txtUserName_" + windowNo);\n      $txtPws = root.find("#txtPws_" + windowNo);\n      $btnEmailConfig = root.find("#btnEmailConfig_" + windowNo);\n      $btnSubstitute = root.find("#btnSubstitute_" + windowNo);\n      $btnSaveChanges = root.find("#btnSaveChanges_" + windowNo);\n      $btnSaveChangePassword = root.find("#btnSaveChangePassword_" + windowNo);\n      lblPrefSave = root.find("#lblPrefSave_" + windowNo);\n      btnSave = root.find("#btnSave_" + windowNo);\n\n      //*******Gmail Task Settings********\n      $btnGetGmailAuthCode = root.find("#vbtnGmailAuth_" + windowNo);\n      $btnSyncGmailTasks = root.find("#vbtnSyncGmailTask_" + windowNo);\n      $txtGmailAuthCode = root.find("#txtAuthCode_" + windowNo);\n      $chkIsSyncBackground = root.find("#chkIsSyncBackground_" + windowNo);\n      $lblTaskSettingMessage = root.find("#lblTaskSettingMessage_" + windowNo);\n      $lblTaskSettingMessage.hide();\n      //getSavedTaskDetail();\n      //**********************************\n\n      //*******Gmail Calendar Settings********\n      $btnGetGmailCalAuthCode = root.find("#vbtnGmailCalAuth_" + windowNo);\n      $btnSyncGmailCalendar = root.find("#vbtnSyncGmailCalendar_" + windowNo);\n      $txtGmailCalAuthCode = root.find("#txtCalAuthCode_" + windowNo);\n      $chkCalIsSyncBackground = root.find("#chkCalIsSyncBackground_" + windowNo);\n      $lblCalendarSettingMessage = root.find("#lblCalendarSettingMessage_" + windowNo);\n      $lblCalendarSettingMessage.hide();\n      //getSavedTaskDetail();\n      // getSavedCalendarDetail();\n      //**********************************\n\n      //*******Gmail Contact Settings********\n      $btnGetGmailContactAuthCode = root.find("#vbtnGmailContactAuth_" + windowNo);\n      $btnSyncGmailContact = root.find("#vbtnSyncGmailContact_" + windowNo);\n      $txtGmailContactAuthCode = root.find("#txtContactAuthCode_" + windowNo);\n      // $chkContactIsSyncBackground = root.find("#chkContactIsSyncBackground_" + windowNo);\n      $lblContactSettingMessage = root.find("#lblContactSettingMessage_" + windowNo);\n      $lblContactSettingMessage.hide();\n      getSavedTaskDetail();\n\n      //*******Gmail Contact Settings********\n      $txtGmailUsername = root.find("#txtGmailUserName_" + windowNo);\n      $txtGmailPassword = root.find("#txtGmailPassword_" + windowNo);\n      $cmbGmailRole = root.find("#cmbSettingRole_" + windowNo);\n      $chkIsUpdateExisting = root.find("#chkbxUpdateExisting_" + windowNo);\n      $btnSyncGmailContacts = root.find("#vbtnSyncGmailContact_" + windowNo);\n      $lblContactSettingMessage = root.find("#lblContactSettingMessage_" + windowNo);\n      $lblContactSettingMessage.hide();\n      loadGmailContactSettings();\n      //**********************************\n\n      //********Login Settings***********\n      $cmdRole = root.find("#cmbRole_" + windowNo);\n      $cmdRole.on("change", function () {\n        loadClient();\n      });\n      $cmdClient = root.find("#cmbClient_" + windowNo);\n      $cmdClient.on("change", function () {\n        loadOrg();\n      });\n      $cmdOrg = root.find("#cmbOrg_" + windowNo);\n      $cmdOrg.on("change", function () {\n        loadWH();\n      });\n      $cmdWareHouse = root.find("#cmbWareHouse_" + windowNo);\n      $btnTheme = root.find("#btnTheme_" + windowNo);\n      defaultLogin = {};\n      loadDefault();\n      //loadRoles();\n      getThemes();\n      //*********************************\n\n      //Display message from MSG class on Menu\n      var lblUserSetMenu = root.find("#lblUserSetMenu_" + windowNo);\n      var lblPreferenceMenu = root.find("#lblPreferenceMenu_" + windowNo);\n      var lblContextMenu = root.find("#lblContextMenu_" + windowNo);\n      var lblErrorMenu = root.find("#lblErrorMenu_" + windowNo);\n      lblUserSetMenu.text(VIS.Msg.getMsg("UserSetting"));\n      lblPreferenceMenu.text(VIS.Msg.getMsg("Preference"));\n      lblContextMenu.text(VIS.Msg.getMsg("Context"));\n      lblErrorMenu.text(VIS.Msg.getMsg("PreferenceError"));\n      var lblchangePwsHeader = root.find("#lblchangePwsHeader_" + windowNo);\n      lblchangePwsHeader.text(VIS.Msg.getMsg("ChangePassword"));\n      var lblAutoMatic = root.find("#lblAutoMatic_" + windowNo);\n      lblAutoMatic.text(VIS.Msg.getMsg("AutoCommit"));\n      var imgAutoMatic = root.find("#imgAutoMatic_" + windowNo);\n      imgAutoMatic.text(VIS.Msg.getMsg("AutoCommit", true));\n      var lblTranslation = root.find("#lblTranslation_" + windowNo);\n      lblTranslation.text(VIS.Msg.getMsg("ShowTranslationTab"));\n      var imgTranslation = root.find("#imgTranslation_" + windowNo);\n      imgTranslation.text(VIS.Msg.getMsg("ShowTranslationTab"));\n      var lblShowAccounting = root.find("#lblShowAccounting_" + windowNo);\n      lblShowAccounting.text(VIS.Msg.getMsg("ShowAcctTab"));\n      var imgShowAccounting = root.find("#imgShowAccounting_" + windowNo);\n      imgShowAccounting.text(VIS.Msg.getMsg("ShowAcctTab"));\n      var lblAutoNewRecord = root.find("#lblAutoNewRecord_" + windowNo);\n      lblAutoNewRecord.text(VIS.Msg.getMsg("AutoNew"));\n      var imgAutoNewRecord = root.find("#imgAutoNewRecord_" + windowNo);\n      imgAutoNewRecord.text(VIS.Msg.getMsg("AutoNew"));\n      var lblShowAdvanced = root.find("#lblShowAdvanced_" + windowNo);\n      lblShowAdvanced.text(VIS.Msg.getMsg("ShowAdvancedTab"));\n      var imgShowAdvanced = root.find("#imgShowAdvanced_" + windowNo);\n      imgShowAdvanced.text(VIS.Msg.getMsg("ShowAdvancedTab"));\n      var lblCacheWindows = root.find("#lblCacheWindows_" + windowNo);\n      lblCacheWindows.text(VIS.Msg.getMsg("CacheWindow"));\n      var imgCacheWindows = root.find("#imgCacheWindows_" + windowNo);\n      imgCacheWindows.text(VIS.Msg.getMsg("CacheWindow"));\n      var vlblClientOrg = root.find("#vlblClientOrg_" + windowNo);\n      vlblClientOrg.text(VIS.Msg.getMsg("Show"));\n      var imgClientOrg = root.find("#imgClientOrg_" + windowNo);\n      imgClientOrg.text(VIS.Msg.getMsg("ClientOrg"));\n      var lblWindowPageSize = root.find("#lblWindowPageSize_" + windowNo);\n      lblWindowPageSize.text(VIS.Msg.getMsg("WindowPageSize"));\n      var imgWindowPageSize = root.find("#imgWindowPageSize_" + windowNo);\n      imgWindowPageSize.text(VIS.Msg.getMsg("WindowPageSize"));\n      var lblAutoLogin = root.find("#lblAutoLogin_" + windowNo);\n      lblAutoLogin.text(VIS.Msg.getMsg("AutoLogin"));\n      var imgAutoLogin = root.find("#imgAutoLogin_" + windowNo);\n      imgAutoLogin.text(VIS.Msg.getMsg("AutoLogin"));\n      var lblStorePassword = root.find("#lblStorePassword_" + windowNo);\n      lblStorePassword.text(VIS.Msg.getMsg("StorePassword"));\n      var imgStorePassword = root.find("#imgStorePassword_" + windowNo);\n      imgStorePassword.text(VIS.Msg.getMsg("StorePassword"));\n      var lblTraceLevel = root.find("#lblTraceLevel_" + windowNo);\n      lblTraceLevel.text(VIS.Msg.getMsg("TraceLevel"));\n      var imgTraceLevel = root.find("#imgTraceLevel_" + windowNo);\n      imgTraceLevel.text(VIS.Msg.getMsg("TraceLevel"));\n      var lblTraceFile = root.find("#lblTraceFile_" + windowNo);\n      lblTraceFile.text(VIS.Msg.getMsg("TraceFile"));\n      var imgTraceFile = root.find("#imgTraceFile_" + windowNo);\n      imgTraceFile.text(VIS.Msg.getMsg("TraceFile"));\n      var lblNativeDigit = root.find("#lblNativeDigit_" + windowNo);\n      lblNativeDigit.text(VIS.Msg.getMsg("PrintNativeDigits"));\n      var imgNativeDigit = root.find("#imgNativeDigit_" + windowNo);\n      imgNativeDigit.text(VIS.Msg.getMsg("PrintNativeDigits"));\n      var vlblDateText = root.find("#vlblDateText_" + windowNo);\n      vlblDateText.text(VIS.Msg.getMsg("Date"));\n      var imgDateText = root.find("#imgDateText_" + windowNo);\n      imgDateText.text(VIS.Msg.getMsg("Date"));\n      var vlblTheme = root.find("#vlblthemeText_" + windowNo);\n      vlblTheme.text(VIS.Msg.getMsg("SelectTheme"));\n      var imgThemetext = root.find("#imgThemetext" + windowNo);\n      imgThemetext.text(VIS.Msg.getMsg("SelectTheme"));\n      drpTheme = root.find("#vis_pref_theme" + windowNo);\n      ulTheme = drpTheme.find(\'ul\');\n      var vlblPageSize = root.find("#vlblPageSize_" + windowNo);\n      vlblPageSize.text(VIS.Msg.getMsg("Pagesize"));\n      var imgPageSize = root.find("#imgPageSize_" + windowNo);\n      imgPageSize.text(VIS.Msg.getMsg("Pagesize"));\n      var vlblPageSize = root.find("#vlblPageSize_" + windowNo);\n      vlblPageSize.text(VIS.Msg.getMsg("Pagesize"));\n      var lblContext = root.find("#lblContext_" + windowNo);\n      lblContext.text(VIS.Msg.getMsg("Context"));\n\n      //records Save\n      lblRecordSave = root.find("#lblRecordSave_" + windowNo);\n      lblChangePasswordMessage = root.find("#lblChangePasswordMessage_" + windowNo);\n      lblRecordSave.hide();\n      lblPrefSave.hide();\n      lblChangePasswordMessage.hide();\n      //paragraph\n      var pchangePws = root.find("#pchangePws_" + windowNo);\n      pchangePws.text(VIS.Msg.getMsg("PPasswordInfo"));\n      var pNotification = root.find("#pNotification_" + windowNo);\n      pNotification.text(VIS.Msg.getMsg("PNotificationInfo"));\n      var pEmailConfig = root.find("#pEmailConfig_" + windowNo);\n      pEmailConfig.text(VIS.Msg.getMsg("PEmailConfigInfo"));\n      var pSubstitute = root.find("#pSubstitute_" + windowNo);\n      pSubstitute.text(VIS.Msg.getMsg("PSubstituteInfo"));\n      var pContext = root.find("#pContext_" + windowNo);\n      pContext.text(VIS.Msg.getMsg("PContextInfo"));\n      var pError = root.find("#pError_" + windowNo);\n      pError.text(VIS.Msg.getMsg("PErrorInfo"));\n\n      /* This is the function that will get executed after the DOM is fully loaded */\n      //$prefdate.datepicker({\n      //    changeMonth: true,//this option for allowing user to select month\n      //    changeYear: true //this option for allowing user to select from year range\n      //});\n\n      //Load Trace level.\n      if ($tracecmb != null) {\n        var levelsValue = [VIS.Logging.Level.OFF.getIntValue(), VIS.Logging.Level.SEVERE.getIntValue(), VIS.Logging.Level.WARNING.getIntValue(), VIS.Logging.Level.INFO.getIntValue(), VIS.Logging.Level.CONFIG.getIntValue(), VIS.Logging.Level.FINE.getIntValue(), VIS.Logging.Level.FINER.getIntValue(), VIS.Logging.Level.FINEST.getIntValue(), VIS.Logging.Level.ALL.getIntValue()];\n        var levelsName = [VIS.Logging.Level.OFF.getName(), VIS.Logging.Level.SEVERE.getName(), VIS.Logging.Level.WARNING.getName(), VIS.Logging.Level.INFO.getName(), VIS.Logging.Level.CONFIG.getName(), VIS.Logging.Level.FINE.getName(), VIS.Logging.Level.FINER.getName(), VIS.Logging.Level.FINEST.getName(), VIS.Logging.Level.ALL.getName()];\n        var selectedIndex = 0;\n        for (var i = 0; i < levelsValue.length; i++) {\n          $tracecmb.append(" <option value=" + levelsValue[i] + ">" + levelsName[i] + "</option>");\n          if (VIS.Ini.getLocalStorage(VIS.IniConstants.P_TRACELEVEL) == levelsValue[i]) {\n            selectedIndex = i;\n          }\n        }\n        ;\n        $tracecmb.prop(\'selectedIndex\', selectedIndex);\n      }\n      ;\n\n      //show org.\n      if ($show != null) {\n        var msgvalues = [VIS.Msg.getMsg("Client+Org"), VIS.Msg.getMsg("Client"), VIS.Msg.getMsg("Org"), VIS.Msg.getMsg("None")];\n        var selectedIndex = 0;\n        for (var i = 0; i < msgvalues.length; i++) {\n          $show.append("<option>" + msgvalues[i] + "</option>");\n          if (VIS.Ini.getLocalStorage(VIS.IniConstants.CO_SHOWLEVEL) == i) {\n            selectedIndex = i;\n          }\n        }\n        $show.prop(\'selectedIndex\', selectedIndex);\n      }\n      ;\n\n      //load Page Size\n      if ($pagesize != null) {\n        var pagesizeArr = [5, 6, 7, 8, 9, 10];\n        var selectedIndex = 0;\n        for (var i = 0; i < pagesizeArr.length; i++) {\n          $pagesize.append("<option>" + pagesizeArr[i] + "</option>");\n          if (VIS.Ini.getLocalStorage(VIS.IniConstants.W_PAGESIZE) == pagesizeArr[i]) {\n            selectedIndex = i;\n          }\n        }\n        $pagesize.prop(\'selectedIndex\', selectedIndex);\n      }\n\n      //load Window Page Size\n      if ($windowpagesize != null) {\n        var pagesizeArr = [50, 100, 500];\n        var selectedIndex = 0;\n        for (var i = 0; i < pagesizeArr.length; i++) {\n          $windowpagesize.append("<option>" + pagesizeArr[i] + "</option>");\n          if (VIS.Ini.getLocalStorage(VIS.IniConstants.WIN_PAGESIZE) == pagesizeArr[i]) {\n            selectedIndex = i;\n          }\n        }\n        $windowpagesize.prop(\'selectedIndex\', selectedIndex);\n      }\n\n      //load context settting\n      if ($contextlist != null) {\n        var arr = VIS.context.getEntireCtx(); //VIS.context.ctx;\n        var textToInsert = [];\n        var i = 0;\n        var length = Object.keys(arr).length;\n        for (var a = 0; a < length; a += 1) {\n          textToInsert[i++] = \' <li class="VIS_Pref_li-err" ><span >\';\n          textToInsert[i++] = Object.keys(arr)[a] + " == " + arr[Object.keys(arr)[a]];\n          textToInsert[i++] = \'</span></li>\';\n        }\n        $contextlist.append(textToInsert.join(\'\'));\n        arr = null;\n        textToInsert = null;\n      }\n      ;\n      $erroronly = root.find("#vchkErrorOnly_" + windowNo);\n      $reset = root.find("#vbtnReset_" + windowNo);\n      // $sentmail = root.find("#vbtnSentMail_" + windowNo);\n      $savetofile = root.find("#vbtnSaveToFile_" + windowNo);\n\n      // check if did not logged in as System Administrator Role, \n      // then hide download server log and Date section from user preference\n      if (VIS.context && !VIS.context.getAD_Role_ID() == 0) root.find(".VIS_Pref_err_btnLeft").hide();\n      $btnlogDate = root.find("#vbtnLogDate_" + windowNo);\n      $btnDownLog = root.find("#vbtnDownLog_" + windowNo);\n      setTodaysDate($btnlogDate);\n      $btnDownLog.on(\'click\', function (e) {\n        var dateLog = $btnlogDate.val();\n        if (dateLog) dateLog = new Date(dateLog).toISOString();else dateLog = new Date().toISOString();\n        setBusy(true);\n        $.ajax({\n          type: "POST",\n          url: VIS.Application.contextUrl + "UserPreference/DownloadServerLog",\n          dataType: "json",\n          data: {\n            logDate: dateLog\n          },\n          success: function (zipName) {\n            if (zipName) {\n              var url = "TempDownload/" + zipName;\n              window.open(VIS.Application.contextUrl + url);\n              setTodaysDate($btnlogDate);\n            } else {\n              VIS.ADialog.info("VIS_NoLogFound", null, null);\n            }\n            setBusy(false);\n          },\n          error: function (data) {\n            setBusy(false);\n          }\n        });\n      });\n\n      // var hgt = $(".VIS_Pref_content-right-4").height() - 90;\n\n      // $("#divError_" + windowNo).css("height", hgt + "px");\n\n      //check error check box\n      $erroronly.prop("checked", true);\n\n      //Load error log settings\n      if ($error != null) {\n        var arrOfarr = VIS.Logging.VLogErrorBuffer.get(true).getLogData($erroronly.prop("checked"));\n        _arrOfarr = arrOfarr;\n        //var arrOfarr = VIS.Logging.VLogErrorBuffer.get(true).getLogData(true);\n        displayErrors(arrOfarr);\n      }\n\n      //load errors into anchar tag\n      //var test = \'data:csv;base64,\' + window.btoa(arrOfarr);\n      ////  var csvData = \'data:application/txt;charset=utf-8,\' + encodeURIComponent(arrOfarr);\n      //$savetofile.attr({\n      //    \'href\': test,\n      //    \'target\': \'_blank\'b,sdf\n      //});\n\n      //Theme changed Event\n\n      // drpTheme.on()\n      drpTheme.on("click", "div.vis-theme-rec", function (e) {\n        var $tgt = $(e.currentTarget);\n        changeThemeColor = $tgt.data("color");\n        themeId = Number($tgt.data("id"));\n        if (VIS.themeMgr) VIS.themeMgr.applyTheme(changeThemeColor);\n        //save theme \n        //VIS.dataContext.postJSONData(VIS.Application.contextUrl + \'Theme/SaveForUser\', { id: id, uid: VIS.context.getAD_User_ID() }, function (e) {\n\n        //});\n      });\n      $btnTheme.on("click", function () {\n        var thme = new VIS.ThemeCnfgtor();\n        thme.show();\n      });\n\n      //Error get error list on click\n      $savetofile.on(\'click\', function () {\n        arrOfarr = _arrOfarr; //VIS.Logging.VLogErrorBuffer.get(true).getLogData($erroronly.prop("checked"));\n        if (arrOfarr.length > 0) {\n          var str = "";\n          for (var i = 0; i < arrOfarr.length; i++) {\n            str += arrOfarr[i] + "\\n";\n          }\n          var d = new Date().toISOString().slice(0, 19).replace(/-/g, "");\n          var fileData = "data:text/csv;base64," + window.btoa(str);\n          $(this).attr("href", fileData).attr("download", "file-" + d + ".csv");\n        }\n      });\n\n      //Load values from database(context)\n      setValuePref();\n      $autocommit.prop("checked", VIS.Env.getCtx().isAutoCommit());\n      $autonewrecord.prop("checked", VIS.Env.getCtx().isAutoNew());\n      $autologin.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_A_LOGIN) == "N" ? false : true);\n      $storepws.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_STORE_PWD) == "N" ? false : true);\n      $showmingrid.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_Show_Mini_Grid) == "N" ? false : true);\n      $printnative.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_Print_Native_Digits) == "Y" ? true : false);\n      $cachewindows.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_CACHE_WINDOW) == "Y" ? true : false);\n      // $printpreview.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_PRINTPREVIEW) == null ? false : VIS.Ini.getLocalStorage(VIS.IniConstants.P_PRINTPREVIEW));\n      $tracefile.prop("checked", VIS.Ini.getLocalStorage(VIS.IniConstants.P_TRACEFILE) == "Y" ? true : false);\n\n      //$prefdate.SetValue(null);\n      var dt = new Date(Number(VIS.Env.getCtx().ctx["#Date"]));\n      if (dt != null) {\n        $prefdate.val(Globalize.format(dt, "yyyy-MM-dd"));\n      }\n\n      //Events\n      //Context list click\n      $contextlist.on("click", "li", function () {\n        var ctxText = $(this).text().split("==")[0];\n        var ctxValue = $(this).text().split("==")[1];\n        $variablename.text(ctxText.toString());\n        $variablevalue.text(ctxValue.toString());\n      });\n\n      //Menu click element\n      $(\'.VIS_Pref_meni li\').on(\'click\', function () {\n        $(\'.VIS_Pref_menu li\').removeClass(\'active\');\n        $(this).addClass(\'active\');\n      });\n\n      /**********************click events***************************************/\n      $reset.on("click", function () {\n        var arrOfarr = VIS.Logging.VLogErrorBuffer.get(true).resetBuffer($erroronly.prop("checked"));\n        _arrOfarr = arrOfarr;\n        if (arrOfarr != null) {\n          displayErrors(arrOfarr);\n        } else {\n          $error.find("tr:gt(0)").remove();\n        }\n      });\n\n      //Tab 1\n      //Show Password\n      $(".VIS_Pref_btn-pass-click").on("click", function () {\n        $(".VIS_Pref_new-password").css("display", "block");\n        $(".VIS_Pref_Save").css("display", "block");\n      });\n      $(".VIS_Pref_close-btn").click(function () {\n        $(".VIS_Pref_new-password").css("display", "none");\n        $(".VIS_Pref_Save").css("display", "none");\n      });\n\n      // menu Link click\n      $(".VIS_Pref_link-1").click(function () {\n        $(".VIS_Pref_content-right").css("display", "block");\n        $(".VIS_Pref_content-right-2").css("display", "none");\n        $(".VIS_Pref_content-right-3").css("display", "none");\n        $(".VIS_Pref_content-right-4").css("display", "none");\n        $(".VIS_Pref_content-right-5").css("display", "none");\n      });\n      $(".VIS_Pref_link-2").click(function () {\n        $(".VIS_Pref_content-right").css("display", "none");\n        $(".VIS_Pref_content-right-2").css("display", "block");\n        $(".VIS_Pref_content-right-3").css("display", "none");\n        $(".VIS_Pref_content-right-4").css("display", "none");\n        $(".VIS_Pref_content-right-5").css("display", "none");\n      });\n      $(".VIS_Pref_link-3").click(function () {\n        $(".VIS_Pref_content-right").css("display", "none");\n        $(".VIS_Pref_content-right-2").css("display", "none");\n        $(".VIS_Pref_content-right-3").css("display", "block");\n        $(".VIS_Pref_content-right-4").css("display", "none");\n        $(".VIS_Pref_content-right-5").css("display", "none");\n      });\n      $(".VIS_Pref_link-4").click(function () {\n        $(".VIS_Pref_content-right").css("display", "none");\n        $(".VIS_Pref_content-right-2").css("display", "none");\n        $(".VIS_Pref_content-right-3").css("display", "none");\n        $(".VIS_Pref_content-right-4").css("display", "flex");\n        $(".VIS_Pref_content-right-5").css("display", "none");\n      });\n      //**************************************\n      //Added By Sarab for the purpose of Gmail Settings to Import Gmail Tasks\n      $(".VIS_Pref_link-5").click(function () {\n        if (window.WSP) {\n          $(".VIS_Pref_content-right").css("display", "none");\n          $(".VIS_Pref_content-right-2").css("display", "none");\n          $(".VIS_Pref_content-right-3").css("display", "none");\n          $(".VIS_Pref_content-right-4").css("display", "none");\n          $(".VIS_Pref_content-right-5").css("display", "block");\n        } else {\n          alert("please download WSP !!!");\n        }\n      });\n      if (isGmailSettings) {\n        $(".VIS_Pref_link-5").trigger("click");\n      }\n      //************************************\n      btnSave.on("click", function () {\n        save_Preference();\n      });\n      $Okbtn.on("click", function () {\n        save_Preference();\n      });\n      $cancelbtn.on("click", function () {\n        // $self.disposeComponent();\n        $root.dialog(\'close\');\n      });\n      $erroronly.on("click", function () {\n        var arrOfarr = null;\n        $error.find(\'tr\').slice(1, -1).remove();\n        arrOfarr = VIS.Logging.VLogErrorBuffer.get(true).getLogData($erroronly.prop("checked"));\n        _arrOfarr = arrOfarr;\n        if (arrOfarr != null) {\n          displayErrors(arrOfarr);\n        }\n      });\n      $role.on("click", function () {\n        var text = VIS.MRole.toStringX(VIS.Env.getCtx());\n      });\n      $btnSaveChangePassword.on("click", function () {\n        var currentPws = $currentPws.val();\n        var newPws = $newPws.val();\n        var conformPws = $conformPws.val();\n        var emailUserName = $txtUserName.val();\n        var emailPws = $txtPws.val();\n\n        //if (currentPws.length <= 0 || newPws.length <= 0 || conformPws.length <= 0 || emailUserName.length <= 0 || emailPws.length <= 0) {\n        //    VIS.ADialog.warn("Please fill all mandatory Fields!", null, null);\n        //    return;\n        //}\n\n        // Updated by vinay bhatt to solve password notchanging fro user preferences 18 oct 2018\n        //if ((currentPws.length <= 0 && newPws.length <= 0 && conformPws.length <= 0) || (currentPws.length > 0 && newPws.length > 0 && conformPws.length > 0)) {\n        //    //then  countinue with changes\n        //}\n        if (currentPws.length <= 0 || newPws.length <= 0 || conformPws.length <= 0) {\n          lblChangePasswordMessage.css(\'color\', \'red\');\n          lblChangePasswordMessage.text(VIS.Msg.getMsg("FillMandatory"));\n          lblChangePasswordMessage.show();\n          return;\n        }\n        //match confirm password\n        else if (newPws != conformPws) {\n          lblChangePasswordMessage.css(\'color\', \'red\');\n          lblChangePasswordMessage.text(VIS.Msg.getMsg("samePassword"));\n          lblChangePasswordMessage.show();\n          return;\n        }\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: VIS.Application.contextUrl + "UserPreference/SaveChangePassword",\n          dataType: "json",\n          data: {\n            AD_User_ID: VIS.context.getAD_User_ID(),\n            currentPws: currentPws,\n            newPws: newPws\n          },\n          success: function (data) {\n            returnValue = data.result;\n            lblChangePasswordMessage.show();\n            if (returnValue == "OK") {\n              lblChangePasswordMessage.css(\'color\', \'green\');\n              lblChangePasswordMessage.text(VIS.Msg.getMsg("Passwordchanged"));\n            } else {\n              lblChangePasswordMessage.css(\'color\', \'red\');\n              lblChangePasswordMessage.text(returnValue);\n            }\n\n            //lblChangePasswordMessage.text(returnValue);\n            //if (!returnvalue.issaved) {\n            //    lblchangepasswordmessage.css(\'color\', \'red\');\n            //VIS.ADialog.warn(returnValue.Msg, null, null);\n            //}\n          }\n        });\n      });\n      $btnSaveChanges.on("click", function () {\n        var currentPws = $currentPws.val();\n        var newPws = $newPws.val();\n        var conformPws = $conformPws.val();\n        var emailUserName = $txtUserName.val();\n        var emailPws = $txtPws.val();\n\n        //if (currentPws.length <= 0 || newPws.length <= 0 || conformPws.length <= 0 || emailUserName.length <= 0 || emailPws.length <= 0) {\n        //    VIS.ADialog.warn("Please fill all mandatory Fields!", null, null);\n        //    return;\n        //}\n\n        if (currentPws.length <= 0 && newPws.length <= 0 && conformPws.length <= 0 || currentPws.length > 0 && newPws.length > 0 && conformPws.length > 0) {\n          //then  countinue with changes\n        } else {\n          lblRecordSave.text(VIS.Msg.getMsg("mandatoryFields"));\n          return;\n        }\n\n        //match confirm password\n        if ($newPws.text().localeCompare($conformPws.text()) == -1) {\n          lblRecordSave.text(VIS.Msg.getMsg("samePassword"));\n          return;\n        }\n        var AD_Role_ID = $cmdRole.val();\n        var AD_Client_ID = $cmdClient.val();\n        var AD_Org_ID = $cmdOrg.val();\n        var AD_WH_ID = $cmdWareHouse.val();\n        if (AD_Role_ID == undefined || AD_Client_ID == undefined || AD_Org_ID == undefined) {\n          lblRecordSave.text(VIS.Msg.getMsg("VIS_FillLogin"));\n          return;\n        }\n        if (AD_WH_ID == undefined) {\n          AD_WH_ID = 0;\n        }\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: VIS.Application.contextUrl + "UserPreference/SaveUserSettings",\n          dataType: "json",\n          data: {\n            AD_User_ID: VIS.context.getAD_User_ID(),\n            currentPws: currentPws,\n            newPws: newPws,\n            conformPws: conformPws,\n            chkEmail: $chkEmail.prop("checked"),\n            chkNotice: $chkNotice.prop("checked"),\n            chkSMS: $chkSMS.prop("checked"),\n            chkFax: $chkFax.prop("checked"),\n            emailUserName: emailUserName,\n            emailPws: emailPws,\n            AD_Role_ID: AD_Role_ID,\n            AD_Client_ID: AD_Client_ID,\n            AD_Org_ID: AD_Org_ID,\n            M_Warehouse_ID: AD_WH_ID\n          },\n          success: function (data) {\n            returnValue = data.result;\n            lblRecordSave.show();\n            lblRecordSave.css(\'color\', \'green\');\n            lblRecordSave.text(returnValue.Msg);\n            if (!returnValue.IsSaved) {\n              lblRecordSave.css(\'color\', \'red\');\n              //VIS.ADialog.warn(returnValue.Msg, null, null);\n            }\n          }\n        });\n      });\n      $btnEmailConfig.on("click", function () {\n        //get windowId for User Window\n\n        var ad_window_Id = 0;\n        try {\n          // Added by Bharat on 12 June 2017 to remove client side queries\n          ad_window_Id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "UserPreference/GetWindowID", {\n            "WindowName": "Mail Configuration"\n          }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n          if (ad_window_Id > 0) {\n            var zoomQuery = new VIS.Query();\n            zoomQuery.addRestriction("AD_User_ID", VIS.Query.prototype.EQUAL, VIS.context.getAD_User_ID());\n            VIS.viewManager.startWindow(ad_window_Id, zoomQuery);\n          }\n        } catch (e) {\n          this.log.log(VIS.Logging.Level.SEVERE, sql, e);\n        }\n        $root.dialog(\'close\');\n      });\n      $btnSubstitute.on("click", function () {\n        //get windowId for User Window\n\n        var ad_window_Id = 0;\n        try {\n          // Added by Bharat on 12 June 2017 to remove client side queries\n          ad_window_Id = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "UserPreference/GetWindowID", {\n            "WindowName": "User Substitute"\n          }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n          if (ad_window_Id > 0) {\n            var zoomQuery = new VIS.Query();\n            zoomQuery.addRestriction("AD_User_ID", VIS.Query.prototype.EQUAL, VIS.context.getAD_User_ID());\n            VIS.viewManager.startWindow(ad_window_Id, zoomQuery);\n          }\n        } catch (e) {\n          this.log.log(VIS.Logging.Level.SEVERE, sql, e);\n        }\n        $root.dialog(\'close\');\n      });\n\n      //over riding the local object event\n      //$root.dialog({\n      //    beforeClose: function (event, ui) {\n      //        $self.disposeComponent();\n      //     }\n      //});\n\n      //$sentmail.on("click", function () {\n      //    alert("$vbtnSentMail click");\n      //});\n\n      //*****************Added By Sarab*************\n\n      $btnGetGmailAuthCode.on("click", function () {\n        getGmailAuthorizationCode(true, false);\n      });\n      $btnSyncGmailTasks.on("click", function () {\n        $lblTaskSettingMessage.css("color", "gray");\n        $lblTaskSettingMessage.text(VIS.Msg.getMsg("PleaseWait"));\n        $lblTaskSettingMessage.show();\n        window.setTimeout(function () {\n          saveGmailAuthSettings(true, chkIsSyncBackground, $txtGmailAuthCode.val(), isRemoveTaskLink, false);\n        }, 500);\n      });\n      $chkIsSyncBackground.on("click", function (event) {\n        chkIsSyncBackground = event.originalEvent.target.checked;\n        ;\n      });\n      $btnGetGmailContactAuthCode.on("click", function () {\n        getGmailAuthorizationCode(false, true);\n      });\n      $btnSyncGmailContact.on("click", function () {\n        $lblContactSettingMessage.css("color", "gray");\n        $lblContactSettingMessage.text(VIS.Msg.getMsg("PleaseWait"));\n        $lblContactSettingMessage.show();\n        window.setTimeout(function () {\n          saveGmailAuthSettings(false, false, $txtGmailContactAuthCode.val(), isRemoveContactLink, true);\n        }, 500);\n      });\n      $btnGetGmailCalAuthCode.on("click", function () {\n        getGmailAuthorizationCode(false, false);\n      });\n      $btnSyncGmailCalendar.on("click", function () {\n        $lblCalendarSettingMessage.css("color", "gray");\n        $lblCalendarSettingMessage.text(VIS.Msg.getMsg("PleaseWait"));\n        $lblCalendarSettingMessage.show();\n        window.setTimeout(function () {\n          saveGmailAuthSettings(false, chkCalIsSyncBackground, $txtGmailCalAuthCode.val(), isRemoveCalendarLink, false);\n        }, 500);\n      });\n      $chkCalIsSyncBackground.on("click", function (event) {\n        chkCalIsSyncBackground = event.originalEvent.target.checked;\n        ;\n      });\n      $chkIsUpdateExisting.on("click", function (event) {\n        chkIsUpdateExisting = event.originalEvent.target.checked;\n        ;\n      });\n      $btnSyncGmailContacts.on("click", function () {\n        if (!$txtGmailUsername.val() || $txtGmailUsername.val() == "" || $txtGmailUsername.val().length == 0 || !$txtGmailPassword.val() || $txtGmailPassword.val() == "" || $txtGmailPassword.val().length == 0) {\n          return;\n        }\n        $lblContactSettingMessage.css("color", "gray");\n        $lblContactSettingMessage.text(VIS.Msg.getMsg("PleaseWait"));\n        $lblContactSettingMessage.show();\n        window.setTimeout(function () {\n          SaveGmailContactSettings($txtGmailUsername.val(), $txtGmailPassword.val(), $cmbGmailRole.val(), chkIsUpdateExisting);\n        }, 500);\n      });\n      function setBusy(isBusy) {\n        if (isBusy) $busyDiv[0].style.visibility = \'visible\';else $busyDiv[0].style.visibility = \'hidden\';\n      }\n      ;\n      function setTodaysDate(ctrl) {\n        var now = new Date();\n        var day = ("0" + now.getDate()).slice(-2);\n        var month = ("0" + (now.getMonth() + 1)).slice(-2);\n        var today = now.getFullYear() + "-" + month + "-" + day;\n        ctrl.val(today);\n      }\n      ;\n      function getSavedTaskDetail() {\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: VIS.Application.contextUrl + "UserPreference/GetSavedDetail",\n          dataType: "json",\n          data: {\n            isTask: true\n          },\n          success: function (data) {\n            isRemoveCalendarLink = false;\n            isRemoveTaskLink = false;\n            isRemoveContactLink = false;\n            var dic = JSON.parse(data);\n            if (dic["IsSyncInBackground"] == "false") {\n              $chkIsSyncBackground.prop("checked", false);\n              chkIsSyncBackground = false;\n            } else {\n              $chkIsSyncBackground.prop("checked", true);\n              chkIsSyncBackground = true;\n            }\n            if (dic["IsCalSyncInBackground"] == "false") {\n              $chkCalIsSyncBackground.prop("checked", false);\n              chkCalIsSyncBackground = false;\n            } else {\n              $chkCalIsSyncBackground.prop("checked", true);\n              chkCalIsSyncBackground = true;\n            }\n            $txtGmailAuthCode.val(dic["TaskAuthCode"]);\n            if ($txtGmailAuthCode.val().length > 0) {\n              $btnSyncGmailTasks.html(VIS.Msg.getMsg(\'RemoveLink\'));\n              isRemoveTaskLink = true;\n            }\n            $txtGmailCalAuthCode.val(dic["CalendarAuthCode"]);\n            if ($txtGmailCalAuthCode.val().length > 0) {\n              $btnSyncGmailCalendar.html(VIS.Msg.getMsg(\'RemoveLink\'));\n              isRemoveCalendarLink = true;\n            }\n            $txtGmailContactAuthCode.val(dic["ContactAuthCode"]);\n            if ($txtGmailContactAuthCode.val().length > 0) {\n              $btnSyncGmailContact.html(VIS.Msg.getMsg(\'RemoveLink\'));\n              isRemoveContactLink = true;\n            }\n          }\n        });\n      }\n      ;\n      function getThemes() {\n        var url = VIS.Application.contextUrl + "JsonData/GetThemes";\n        VIS.dataContext.getJSONData(url, null, getThemeCompleted);\n      }\n      ;\n      function getThemeCompleted(lst) {\n        var html = [];\n        if (lst) {\n          for (var i = 0, j = lst.length; i < j; i++) {\n            var data = lst[i];\n            html.push(\'<li>\');\n            html.push(\'<div class="vis-theme-rec" data-color="\');\n            html.push(data.PColor);\n            html.push(\'|\');\n            html.push(data.OnPColor);\n            html.push(\'|\');\n            html.push(data.SColor);\n            html.push(\'|\');\n            html.push(data.OnSColor);\n            html.push(\'" data-id="\' + data.Id + \'" >\');\n            html.push(\'<span class="vis-theme-color" style="background-color:rgba(\' + data.PColor + \',1)"></span>\');\n            html.push(\'<span class="vis-theme-color" style="background-color:rgba(\' + data.OnPColor + \',1)"></span>\');\n            html.push(\'<span class="vis-theme-color" style="background-color:rgba(\' + data.SColor + \',1)"></span>\');\n            html.push(\'<span class="vis-theme-color" style="background-color:rgba(\' + data.OnSColor + \',1)"></span>\');\n            html.push(\'</div>\');\n            html.push(\'</li>\');\n          }\n          ulTheme.append(html.join(\'\'));\n        }\n      }\n      ;\n      function getSavedCalendarDetail() {\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: VIS.Application.contextUrl + "UserPreference/GetSavedDetail",\n          dataType: "json",\n          data: {\n            isTask: false\n          },\n          success: function (data) {\n            var dic = JSON.parse(data);\n            if (dic["IsSyncInBackground"] == "false") {\n              $chkCalIsSyncBackground.prop("checked", false);\n              chkCalIsSyncBackground = false;\n            } else {\n              $chkCalIsSyncBackground.prop("checked", true);\n              chkCalIsSyncBackground = true;\n            }\n            $txtGmailCalAuthCode.val(dic["CalendarAuthCode"]);\n          }\n        });\n      }\n      ;\n      function getGmailAuthorizationCode(istask, isContact) {\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: VIS.Application.contextUrl + "UserPreference/GetGmailAuthorizationCode",\n          dataType: "json",\n          data: {\n            isTask: istask,\n            isContact: isContact\n          },\n          success: function (data) {\n            var url = JSON.parse(data);\n            if (url != null && url.length > 0) {\n              window.open(url);\n            }\n          }\n        });\n      }\n      ;\n      function saveGmailAuthSettings(isTask, chkSyncBackground, authCode, isRLink, isContact) {\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: VIS.Application.contextUrl + "UserPreference/SaveGmailAccountSettings",\n          dataType: "json",\n          data: {\n            authCodes: authCode,\n            isTask: isTask,\n            isSyncInBackground: chkSyncBackground,\n            isRemoveLink: isRLink,\n            isContact: isContact\n          },\n          success: function (data) {\n            var msg = JSON.parse(data);\n            if (isTask) {\n              if (msg.toString() == "false") {\n                $lblTaskSettingMessage.css("color", "red");\n                $lblTaskSettingMessage.text(VIS.Msg.getMsg("RecordNotSaved"));\n                $lblTaskSettingMessage.show();\n              } else if (msg.toString() == "true") {\n                $lblTaskSettingMessage.css("color", "green");\n                $lblTaskSettingMessage.text(VIS.Msg.getMsg("RecordSaved"));\n                if (isRLink) {\n                  $txtGmailAuthCode.val("");\n                  $btnSyncGmailTasks.html(VIS.Msg.getMsg(\'Save\'));\n                  $chkIsSyncBackground.prop("checked", false);\n                  isRemoveTaskLink = false;\n                  $txtGmailAuthCode.removeAttr("disabled");\n                  $lblTaskSettingMessage.text(VIS.Msg.getMsg("LinkRemoved"));\n                } else {\n                  $btnSyncGmailTasks.html(VIS.Msg.getMsg(\'RemoveLink\'));\n                  $txtGmailAuthCode.attr("disabled", true);\n                  isRemoveTaskLink = true;\n                }\n                $lblTaskSettingMessage.show();\n              } else {\n                window.open(msg);\n              }\n            } else if (isContact) {\n              if (msg.toString() == "false") {\n                $lblContactSettingMessage.css("color", "red");\n                $lblContactSettingMessage.text(VIS.Msg.getMsg("RecordNotSaved"));\n                $lblContactSettingMessage.show();\n              } else if (msg.toString() == "true") {\n                $lblContactSettingMessage.css("color", "green");\n                $lblContactSettingMessage.text(VIS.Msg.getMsg("RecordSaved"));\n                if (isRLink) {\n                  $txtGmailContactAuthCode.val("");\n                  $btnSyncGmailContact.html(VIS.Msg.getMsg(\'Save\'));\n                  //$chkIsSyncBackground.prop("checked", false);\n                  isRemoveContactLink = false;\n                  $txtGmailContactAuthCode.removeAttr("disabled");\n                  $lblContactSettingMessage.text(VIS.Msg.getMsg("LinkRemoved"));\n                } else {\n                  $btnSyncGmailContact.html(VIS.Msg.getMsg(\'RemoveLink\'));\n                  $txtGmailContactAuthCode.attr("disabled", true);\n                  isRemoveContactLink = true;\n                }\n                $lblContactSettingMessage.show();\n              } else {\n                window.open(msg);\n              }\n            } else {\n              if (msg.toString() == "false") {\n                $lblCalendarSettingMessage.css("color", "red");\n                $lblCalendarSettingMessage.text(VIS.Msg.getMsg("RecordNotSaved"));\n                $lblCalendarSettingMessage.show();\n              } else if (msg.toString() == "true") {\n                $lblCalendarSettingMessage.css("color", "green");\n                $lblCalendarSettingMessage.text(VIS.Msg.getMsg("RecordSaved"));\n                if (isRLink) {\n                  $txtGmailCalAuthCode.val("");\n                  $btnSyncGmailCalendar.html(VIS.Msg.getMsg(\'Save\'));\n                  $chkCalIsSyncBackground.prop("checked", false);\n                  isRemoveCalendarLink = false;\n                  $txtGmailCalAuthCode.removeAttr("disabled");\n                  $lblCalendarSettingMessage.text(VIS.Msg.getMsg("LinkRemoved"));\n                } else {\n                  $btnSyncGmailCalendar.html(VIS.Msg.getMsg(\'RemoveLink\'));\n                  $txtGmailCalAuthCode.attr("disabled", true);\n                  isRemoveCalendarLink = true;\n                }\n                $lblCalendarSettingMessage.show();\n              } else {\n                window.open(msg);\n              }\n            }\n            //if (msg != null) {\n            //    window.open(msg);\n            //}\n            //else {                            \n            //    $txtGmailAuthCode.val(" ");\n            //}\n          }\n        });\n      }\n      ;\n      function loadGmailContactSettings() {\n        getrole();\n        if ($cmbGmailRole != null) {\n          $cmbGmailRole.append(role);\n        }\n        ;\n        getsaveddetail();\n      }\n      ;\n\n      //************************************\n      // This function is used to get saved credientials \n      //************************************\n      function getsaveddetail() {\n        if (!window.WSP) return;\n        var url = VIS.Application.contextUrl + "WSP/ContactSettings/GetSavedDetail";\n        $.ajax({\n          type: "GET",\n          async: true,\n          url: url,\n          dataType: "json",\n          success: function (data) {\n            var dd = JSON.parse(data);\n            //if settings are saved in database(WSP_GmalConfigration)then set those values in setting dialog Box controls\n            $txtGmailUsername.val(dd["Username"]);\n            $txtGmailPassword.val(dd["Password"]);\n            if (dd["Role"] != "") {\n              $cmbGmailRole.val(dd["Role"]);\n            }\n            var update = dd["IsUpdate"];\n            if (update.toString().toLowerCase() == "false") {\n              $chkIsUpdateExisting.prop("checked", false);\n              chkIsUpdateExisting = false;\n            } else {\n              $chkIsUpdateExisting.prop("checked", true);\n              chkIsUpdateExisting = true;\n            }\n          }\n        });\n      }\n      ;\n\n      //**********************\n      //Get Roles in combobox\n      //*********************\n      var role = null;\n      function getrole() {\n        if (!window.WSP) return;\n        var url = VIS.Application.contextUrl + "WSP/ContactSettings/GetRole";\n        $.ajax({\n          type: "GET",\n          async: true,\n          url: url,\n          dataType: "json",\n          success: function (data) {\n            var dd = JSON.parse(data);\n            role += "<option value=\'-1\'  selected=\'selected\'>" + VIS.Msg.getMsg("SelectRole") + "</option>";\n            for (var i = 0; i < dd.length; i++) {\n              role += "<option value=\'" + dd[i]["RoleID"] + "\'>" + dd[i]["RoleName"] + "</option>";\n            }\n          }\n        });\n      }\n      ;\n      function SaveGmailContactSettings(uName, pWord, roleID, updateExisting) {\n        var url = VIS.Application.contextUrl + "WSP/ContactSettings/SaveGmailContactSettings";\n        $.ajax({\n          type: "POST",\n          async: false,\n          url: url,\n          dataType: "json",\n          data: {\n            username: uName,\n            password: pWord,\n            role_ID: roleID,\n            isUpdateExisting: updateExisting\n          },\n          success: function (dynData) {\n            var msg = JSON.parse(dynData);\n            if (msg.toString() == "false") {\n              $lblContactSettingMessage.css("color", "red");\n              $lblContactSettingMessage.text(VIS.Msg.getMsg("RecordNotSaved"));\n              $lblContactSettingMessage.show();\n            } else {\n              $lblContactSettingMessage.css("color", "green");\n              $lblContactSettingMessage.text(VIS.Msg.getMsg("RecordSaved"));\n              $lblContactSettingMessage.show();\n            }\n          }\n        });\n      }\n      //********************************************\n\n      function save_Preference() {\n        VIS.Env.getCtx().setContext("AutoCommit", $autocommit.prop("checked") ? "Y" : "N");\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_A_NEW, $autonewrecord.prop("checked") ? "Y" : "N");\n        VIS.Env.getCtx().setContext("AutoNew", $autonewrecord.prop("checked") ? "Y" : "N");\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_TRACEFILE, $tracefile.prop("checked") ? "Y" : "N");\n        // set cmbTraceLevel.SelectedItem;\n\n        var levelInt = $tracecmb.find(\'option:selected\').val();\n\n        //\tTraceLevel/File\n        //var level = log.Level.getLevel(levelInt);\n        var level = VIS.Logging.Level.prototype.getLevel(levelInt);\n        //VIS.VLogMgt.setLevel(level);\n        VIS.Logging.VLogMgt.setLevel(level);\n\n        //VIS.Ini.setProperty(Ini.P_TRACELEVEL, level.getName());\n\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_TRACELEVEL, $tracecmb.find(\'option:selected\').val());\n        var index = $show[0].selectedIndex;\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.CO_SHOWLEVEL, index < 0 ? 0 : index);\n        VIS.Env.getCtx().setContext("#ClientOrgLevel", index < 0 ? 0 : index);\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.W_PAGESIZE, $pagesize.find(\'option:selected\').val());\n        VIS.Env.getCtx().setContext("#ShowWorkSpacePageSize", $pagesize.find(\'option:selected\').val());\n        var winPageSize = $windowpagesize.find(\'option:selected\').val();\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.WIN_PAGESIZE, winPageSize);\n        VIS.Env.setWINDOW_PAGE_SIZE(winPageSize);\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_Show_Mini_Grid, $showmingrid.prop("checked") ? "Y" : "N");\n        VIS.Env.getCtx().setContext("#ShowMiniGrid", $showmingrid.prop("checked") ? "Y" : "N");\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_Print_Native_Digits, $printnative.prop("checked") ? "Y" : "N");\n        VIS.Env.getCtx().setContext("#PrintNativeDigits", $printnative.prop("checked") ? "Y" : "N");\n\n        //\tAutoLogin\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_A_LOGIN, $autologin.prop("checked") ? "Y" : "N");\n        //\tSave Password\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_STORE_PWD, $storepws.prop("checked") ? "Y" : "N");\n        //\tShow Acct Tab\n        VIS.Env.getCtx().setContext("#ShowAcct", $acctab.prop("checked") ? "Y" : "N");\n        //\tShow Trl Tab\n        VIS.Env.getCtx().setContext("#ShowTrl", $transtab.prop("checked") ? "Y" : "N");\n\n        //\tShow Advanced Tab\n        VIS.Env.getCtx().setContext("#ShowAdvanced", $advanstab.prop("checked") ? "Y" : "N");\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_CACHE_WINDOW, $cachewindows.prop("checked") ? "Y" : "N");\n\n        //  Print Preview\n        // VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_PRINTPREVIEW, $printpreview.prop("checked") ? "Y" : "N");\n\n        VIS.Ini.setValueToLocalStorage(VIS.IniConstants.P_TRACEFILE, $tracefile.prop("checked") ? "Y" : "N");\n\n        //save context value on server side\n        //m_preference.Save();\n\n        var callbackValue = savePreference({\n          IsAutoCommit: $autocommit.prop("checked") ? "Y" : "N",\n          IsShowAcct: $acctab.prop("checked") ? "Y" : "N",\n          IsShowTrl: $transtab.prop("checked") ? "Y" : "N",\n          IsShowAdvanced: $advanstab.prop("checked") ? "Y" : "N"\n        });\n      }\n      ;\n      function displayErrors(arrOfarr) {\n        var length = arrOfarr.length;\n        var textToInsert = "";\n        for (var a = 0; a < length; a += 1) {\n          textToInsert += "<tr class=\'VIS_Pref-tbl-Row\'>";\n          for (var i = 0; i < arrOfarr[a].length; i += 1) {\n            var obj = arrOfarr[a][i];\n            if (i == 0) {\n              if (a % 2) {\n                textToInsert += "<td class=\'VIS_Pref_table-row2\'>" + obj + "</td>";\n              } else {\n                textToInsert += "<td class=\'VIS_Pref_table-row1\'>" + obj + "</td>";\n              }\n            } else if (i == arrOfarr[a].length - 1) {\n              if (a % 2) {\n                textToInsert += "<td class=\'VIS_Pref_table-row2\'>" + obj + "</td>";\n              } else {\n                textToInsert += "<td class=\'VIS_Pref_table-row1\'>" + obj + "</td>";\n              }\n            } else {\n              if (a % 2) {\n                textToInsert += "<td class=\'VIS_Pref_table-row2\'>" + obj + "</td>";\n              } else {\n                textToInsert += "<td class=\'VIS_Pref_table-row1\'>" + obj + "</td>";\n              }\n            }\n          }\n          textToInsert += " </tr>";\n        }\n\n        //Append last row in the table\n        //var error = "vchkErrorOnly_" + windowNo;\n        //var reset = "vbtnReset_" + windowNo;\n        //var errSave = "vbtnSaveToFile_" + windowNo;\n        //textToInsert += \'<tr>\' +\n        //    \'<td style="border-left: 1px solid #ECECEC; border-bottom: 1px solid #ECECEC; border-bottom-left-radius: 5px;"></td>\' +\n        //    \'<td style="border-bottom: 1px solid #ECECEC;"></td>\' +\n        //    \'<td style="border-bottom: 1px solid #ECECEC;">\' +\n        //        \'<input id=\' + error + \' type="checkbox" class="VIS_Pref_check"><span>Errors only </span>\' +\n        //        \'<button id=\' + reset + \' class="VIS_Pref_pass-btn" style="margin-left: 30px;">Reset</button>\' +\n        //    \'</td>\' +\n        //    \'<td style="border-left: 0px; border-bottom: 1px solid #ECECEC; border-bottom-right-radius: 5px;" class="VIS_Pref_table-row1">\' +\n        //        \'<button id=\' + errSave + \' class="VIS_Pref_pass-btn">Export data into Excel</button>\' +\n        //    \'</td>\' +\n        //\'</tr>\';\n\n        $error.find(\'tbody > tr\').eq(0).after($.parseHTML(textToInsert));\n        arr = null;\n        textToInsert = null;\n      }\n      ;\n      function setValuePref() {\n        //if (VIS.MRole.IsShowAcct())\n        //{\n        $acctab.prop("checked", VIS.Env.getCtx().ctx["#ShowAcct"] == "Y" ? true : false);\n        //}\n        //else {\n        //    $acctab.prop("checked", false);\n        //    $acctab.prop("enabled", false);\n        //}\n\n        //\tShow Trl/Advanced Tab\n        $transtab.prop("checked", VIS.Env.getCtx().ctx["#ShowTrl"] == "Y" ? true : false);\n        $advanstab.prop("checked", VIS.Env.getCtx().ctx["#ShowAdvanced"] == "Y" ? true : false);\n      }\n      function savePreference(data, callback) {\n        var result = null;\n        if (themeId != null) {\n          VIS.dataContext.postJSONData(VIS.Application.contextUrl + \'Theme/SaveForUser\', {\n            id: themeId,\n            uid: VIS.context.getAD_User_ID()\n          }, function (e) {});\n          VIS.Application.theme = changeThemeColor;\n        }\n        $.ajax({\n          url: VIS.Application.contextUrl + "UserPreference/SavePrefrence",\n          type: "POST",\n          datatype: "json",\n          contentType: "application/json; charset=utf-8",\n          async: false,\n          data: JSON.stringify({\n            pref: data\n          })\n        }).done(function (json) {\n          result = json;\n          $root.dialog(\'close\');\n        });\n      }\n    };\n    var loadDefault = function () {\n      $.ajax({\n        url: VIS.Application.contextUrl + "UserPreference/GetDefaultLogin",\n        dataType: "json",\n        //async: false,\n        data: {\n          AD_User_ID: VIS.context.getAD_User_ID()\n        },\n        success: function (data) {\n          var di = JSON.parse(data);\n          defaultLogin.AD_Role_ID = di.AD_Role_ID;\n          defaultLogin.AD_Client_ID = di.AD_Client_ID;\n          defaultLogin.AD_Org_ID = di.AD_Org_ID;\n          defaultLogin.M_Warehouse_ID = di.M_Warehouse_ID;\n          loadRoles();\n        }\n      });\n    };\n    var loadRoles = function () {\n      var sql = "";\n      $.ajax({\n        url: VIS.Application.contextUrl + "UserPreference/GetUserRoles",\n        dataType: "json",\n        data: {\n          sql: sql\n        },\n        success: function (data) {\n          var dic = JSON.parse(data);\n          var cmbRoleContent = "";\n          for (var itm in dic) {\n            cmbRoleContent += "<option value=" + dic[itm].RecKey + ">" + dic[itm].Name + "</option>";\n          }\n          $cmdRole.append(cmbRoleContent);\n          $cmdRole.val(defaultLogin.AD_Role_ID);\n          cmbRoleContent = null;\n          dic = null;\n          loadClient();\n        }\n      });\n    };\n    var loadClient = function () {\n      var roleID = $cmdRole.val();\n      $cmdClient.empty();\n      $cmdOrg.empty();\n      $cmdWareHouse.empty();\n      if (roleID == undefined) {\n        return;\n      }\n      var sql = roleID;\n      roleID = null;\n      $.ajax({\n        url: VIS.Application.contextUrl + "UserPreference/GetLoginData",\n        dataType: "json",\n        data: {\n          sql: sql\n        },\n        success: function (data) {\n          var dic = JSON.parse(data);\n          var cmbClientContent = "";\n          for (var itm in dic) {\n            cmbClientContent += "<option value=" + dic[itm].RecKey + ">" + dic[itm].Name + "</option>";\n          }\n          $cmdClient.append(cmbClientContent);\n          $cmdClient.val(defaultLogin.AD_Client_ID);\n          cmbClientContent = null;\n          dic = null;\n          sql = null;\n          loadOrg();\n        }\n      });\n    };\n    var loadOrg = function () {\n      var AD_Role_ID = $cmdRole.val();\n      var AD_Client_ID = $cmdClient.val();\n      $cmdOrg.empty();\n      $cmdWareHouse.empty();\n      if (AD_Role_ID == undefined || AD_Client_ID == undefined) {\n        return;\n      }\n      var sql = "";\n      $.ajax({\n        url: VIS.Application.contextUrl + "UserPreference/GetOrgData",\n        dataType: "json",\n        data: {\n          "roleId": AD_Role_ID,\n          "clientId": AD_Client_ID\n        },\n        success: function (data) {\n          var dic = JSON.parse(data);\n          var cmbOrgContent = "";\n          for (var itm in dic) {\n            cmbOrgContent += "<option value=" + dic[itm].RecKey + ">" + dic[itm].Name + "</option>";\n          }\n          $cmdOrg.append(cmbOrgContent);\n          $cmdOrg.val(defaultLogin.AD_Org_ID);\n          cmbOrgContent = null;\n          dic = null;\n          sql = null;\n          AD_Role_ID = null;\n          AD_Client_ID = null;\n          loadWH();\n        }\n      });\n    };\n    var loadWH = function () {\n      var AD_Org_ID = $cmdOrg.val();\n      $cmdWareHouse.empty();\n      if (AD_Org_ID == undefined) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + "UserPreference/GetWarehouseData",\n        dataType: "json",\n        data: {\n          "orgId": AD_Org_ID\n        },\n        success: function (data) {\n          var dic = JSON.parse(data);\n          var cmbWHContent = "";\n          for (var itm in dic) {\n            cmbWHContent += "<option value=" + dic[itm].RecKey + ">" + dic[itm].Name + "</option>";\n          }\n          $cmdWareHouse.append(cmbWHContent);\n          $cmdWareHouse.val(defaultLogin.M_Warehouse_ID);\n          cmbWHContent = null;\n          dic = null;\n          sql = null;\n          AD_Org_ID = null;\n        }\n      });\n    };\n    this.showDialog = function () {\n      var w = $(window).width() - 150;\n      var h = $(window).height() - 40;\n      $busyDiv.height(h);\n      $busyDiv.width(w);\n      $root.append($busyDiv);\n      $root.dialog({\n        modal: false,\n        title: VIS.Msg.getMsg("Preference"),\n        width: w,\n        height: h,\n        position: {\n          at: "center top",\n          of: window\n        },\n        close: function () {\n          if (VIS.Application.theme && VIS.Application.theme != "") {\n            VIS.themeMgr.applyTheme(VIS.Application.theme);\n          }\n          $self.dispose();\n          $root.dialog("destroy");\n          $("#ui-datepicker-div").remove();\n          $root = null;\n          $self = null;\n        }\n      });\n    };\n    this.show = function () {\n      this.load();\n      this.showDialog();\n    };\n    this.disposeComponent = function () {\n      $self = null;\n      if (drpTheme) {\n        drpTheme.off(\'click\');\n      }\n      if ($Okbtn) $Okbtn.off("click");\n      if ($cancelbtn) $cancelbtn.off("click");\n      if ($reset) $reset.off("click");\n      //if ($sentmail)\n      //    $sentmail.off("click");\n      if ($savetofile) $savetofile.off("click");\n      if ($btnDownLog) $btnDownLog.off("click");\n      $autologin = null;\n      $transtab = null;\n      $acctab = null;\n      $autonewrecord = null;\n      $advanstab = null;\n      $tracefile = null;\n      $tracecmb = null;\n      // $printer = null;\n      // $printpreview = null\n      _arrOfarr = null;\n      $dictionary = null;\n      $show = null;\n      $showmingrid = null;\n      $pagesize = null;\n      $printnative = null;\n      $windowpagesize = null;\n      $variablename = null;\n      $variablevalue = null;\n      $transtab = null;\n      $erroronly = null;\n      $reset = null;\n      // $sentmail = null;\n      $savetofile = null;\n      $error = null;\n      $role = null;\n      $Okbtn = null;\n      $cancelbtn = null;\n      $btnChangePws = null;\n      $currentPws = null;\n      $newPws = null;\n      $conformPws = null;\n      $chkEmail = null;\n      $chkNotice = null;\n      $chkSMS = null;\n      $chkFax = null;\n      $txtUserName = null;\n      $txtPws = null;\n      $btnEmailConfig = null;\n      $btnSubstitute = null;\n      $btnSaveChanges = null;\n      lblUserSetMenu = null;\n      lblPreferenceMenu = null;\n      lblContextMenu = null;\n      lblErrorMenu = null;\n      lblchangePwsHeader = null;\n      lblAutoMatic = null;\n      imgAutoMatic = null;\n      lblTranslation = null;\n      imgTranslation = null;\n      lblShowAccounting = null;\n      imgShowAccounting = null;\n      lblAutoNewRecord = null;\n      imgAutoNewRecord = null;\n      lblShowAdvanced = null;\n      imgShowAdvanced = null;\n      lblCacheWindows = null;\n      imgCacheWindows = null;\n      vlblClientOrg = null;\n      imgClientOrg = null;\n      lblWindowPageSize = null;\n      imgWindowPageSize = null;\n      lblAutoLogin = null;\n      imgAutoLogin = null;\n      lblStorePassword = null;\n      imgStorePassword = null;\n      lblTraceLevel = null;\n      imgTraceLevel = null;\n      lblTraceFile = null;\n      imgTraceFile = null;\n      lblNativeDigit = null;\n      imgNativeDigit = null;\n      vlblDateText = null;\n      imgDateText = null;\n      vlblPageSize = null;\n      imgPageSize = null;\n      vlblPageSize = null;\n      lblContext = null;\n      $prefdate.datepicker("destroy");\n      $prefdate = null;\n      $cmdRole.off("change");\n      $cmdClient.off("change");\n      $cmdOrg.off("change");\n      $cmdRole = null;\n      $cmdClient = null;\n      $cmdOrg = null;\n      $cmdWareHouse = null;\n      loadRoles = null;\n      loadOrg = null;\n      loadClient = null;\n      loadWH = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n\n  //dispose call\n  UserPreference.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.Framework.UserPreference = UserPreference;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/userpreference.js?')},"./Areas/VIS/Scripts/app/Framework/valuepreference.js":()=>{eval(';\n(function (VIS, $) {\n  //form declaretion\n  function ValuePreference(mField, val, dispValue) {\n    if (mField == null) {\n      return null;\n    }\n    var $self = this;\n    var $root = $("<div class=\'vis-forms-container\' style=\'position:relative;\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    this.Okbtn = null;\n    this.cancelbtn = null;\n    this.deletebtn = null;\n    this.txtAttribute = null;\n    this.lblAttribute = null;\n    this.txtSearchKey = null;\n    this.lblValue = null;\n    this.lblAttribute = null;\n    this.lblValueText = null;\n    this.lblLevelText = null;\n    this.chkTenant = null;\n    this.chkOrg = null;\n    this.chkUser = null;\n    this.chkWindow = null;\n    this.lblMsg = null;\n    this.userchk = null;\n    this.tenantchk = null;\n    this.windowchk = null;\n    this.orgchk = null;\n    this.aValue = null;\n    this.aDisplayValue = null;\n    // if value exists\n    if (val != null) {\n      this.aValue = val;\n      if (typeof val == Boolean) {\n        this.aValue = val ? "Y" : "N";\n      }\n      // set display value\n      this.aDisplayValue = dispValue == null ? this.aValue : dispValue;\n    }\n    this.AD_Window_ID = mField.getAD_Window_ID();\n    this.aAttribute = mField.getColumnName();\n    this.aDisplayAttribute = mField.getHeader();\n    this.aDisplayType = mField.getDisplayType();\n    this.AD_Reference_ID = 0;\n    this.windowNum = mField.getWindowNo();\n    if ("Value".equals(this.aAttribute) || "DocumentNo".equals(this.aAttribute)) {\n      // No Preference for "Value" or "DocumentNo" attributes\n      return null;\n    }\n    this.AD_Client_ID = VIS.context.getAD_Client_ID();\n    this.AD_Org_ID = VIS.context.getWindowContext(this.windowNum, "AD_Org_ID", true);\n    this.AD_User_ID = VIS.context.getAD_User_ID();\n    this.role = VIS.MRole.getDefault();\n    function setBusy(isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    }\n    ;\n    /*  \r\n    Design Removed from server side and created on client Side.\r\n    */\n    function createDesign($self) {\n      var html = \'<div class="vis-valpreferencedatawrp" id="fisrt_\' + $self.windowNum + \'">\' + \'<div class="input-group vis-input-wrap" style="flex: 1;">\' + \'<div class="vis-control-wrap">\' + \'<input class="VIS_Pref_pass vis-gc-vpanel-table-readOnly" data-placeholder="" placeholder=" " style="margin-bottom: 0;" type="text" readonly="true" id="vtxtAttribute_\' + $self.windowNum + \'" />\' + \'<label class=" VIS_Pref_Label_Font" id="vlblAttributeText_\' + $self.windowNum + \'">test</label>\' + \'</div>\' + \'</div>\' + \'<label class="VIS_Pref_Label_Font" id="vlblAttribute_\' + $self.windowNum + \'">test</label>\' + \'</div><div class="vis-valpreferencedatawrp" id="second_\' + $self.windowNum + \'">\' + \'<div class="input-group vis-input-wrap" style="flex: 1;">\' + \'<div class="vis-control-wrap">\' + \'<input class="VIS_Pref_pass vis-gc-vpanel-table-readOnly" data-placeholder="" placeholder=" " style="margin-bottom: 0;" type="text" readonly="true" id="vtxtSearchKey_\' + $self.windowNum + \'" />\' + \'<label class="VIS_Pref_Label_Font" id="vlblValueText_\' + $self.windowNum + \'">test</label>\' + \'</div>\' + \'</div>\' + \'<label class="VIS_Pref_Label_Font" id="vlblValue_\' + $self.windowNum + \'">test</label>\' + \'</div>\' + \'</div>\' + \'</div><div style="width: 100%; float: left">    \' +\n      //\'<label style="float: left; width:15%;text-align:left" class=" VIS_Pref_Label_Font" id="vlblLevelText_\' + $self.windowNum + \'">test</label>\' +\n      \'<div> <div class="VIS_Pref_col-50"><input  type="checkbox" id="vchkTenant_\' + $self.windowNum + \'" ><label class="VIS_Pref_Label_Font">test</label>\' + \'</div>   <div class="VIS_Pref_col-50"> <input  type="checkbox" id="vchkOrg_\' + $self.windowNum + \'" /><label class="VIS_Pref_Label_Font">test</label>\' + \'</div> <div class="VIS_Pref_col-50">\' + \'<input  type="checkbox" id="vchkUser_\' + $self.windowNum + \'" /><label class="VIS_Pref_Label_Font">test</label>\' + \'</div>  <div class="VIS_Pref_col-50"> <input  type="checkbox" id="vchkWindow_\' + $self.windowNum + \'" /><label class="VIS_Pref_Label_Font">test</label>\' + \'</div> </div><div id="divMsg_\' + $self.windowNum + \'" style="width: 100%; float: left; margin-bottom: 5px; margin-top: 5px; text-align: left">\' + \'<label class="VIS_Pref_Label_Font" id="vlblMsg_\' + $self.windowNum + \'">test</label>\' + \'</div><div style="height: 10%; width: 100%; float: left"> <button type="button" id="btnDelete_\' + $self.windowNum + \'"  class="VIS_Pref_btn-2"  style="float: left" value="Ok" role="button" aria-disabled="false">\' + \'<i class="vis vis-delete"></i>\' + \'</button> <input id= "btnCancel_\' + $self.windowNum + \'" class="VIS_Pref_btn-2" style="float:right" type="button" value="Cancel" />\' + \'<input id="btnOK_\' + $self.windowNum + \'"  class="VIS_Pref_btn-2" style="float:right; margin-right:10px" type="button" value="Ok" />\' + \'</div>\';\n      $root.append(html);\n    }\n    ;\n    this.load = function () {\n      //$root.load(VIS.Application.contextUrl + \'ValuePreference/Index/?windowno=\' + this.windowNum, function (event) {\n\n      createDesign($self);\n      $root.append($busyDiv);\n      setBusy(true);\n      $self.init($root);\n      setBusy(false);\n      //});\n    };\n    this.init = function (root) {\n      this.lblAttributeText = $root.find("#vlblAttributeText_" + this.windowNum);\n      this.lblValueText = $root.find("#vlblValueText_" + this.windowNum);\n      this.lblLevelText = $root.find("#vlblLevelText_" + this.windowNum);\n      this.deletebtn = $root.find("#btnDelete_" + this.windowNum);\n      this.txtAttribute = $root.find("#vtxtAttribute_" + this.windowNum);\n      this.txtSearchKey = $root.find("#vtxtSearchKey_" + this.windowNum);\n      this.chkTenant = $root.find("#vchkTenant_" + this.windowNum);\n      this.chkOrg = $root.find("#vchkOrg_" + this.windowNum);\n      this.chkUser = $root.find("#vchkUser_" + this.windowNum);\n      this.chkWindow = $root.find("#vchkWindow_" + this.windowNum);\n      this.lblMsg = $root.find("#vlblMsg_" + this.windowNum);\n      this.lblAttribute = $root.find("#vlblAttribute_" + this.windowNum);\n      this.lblValue = $root.find("#vlblValue_" + this.windowNum);\n      this.Okbtn = $root.find("#btnOK_" + this.windowNum);\n      this.cancelbtn = $root.find("#btnCancel_" + this.windowNum);\n      if (VIS.Application.isRTL) {\n        this.Okbtn.css("margin-right", "-128px");\n        this.cancelbtn.css("margin-right", "55px");\n        this.lblAttributeText.css("text-align", "right");\n        this.lblValueText.css("text-align", "right");\n        this.lblLevelText.css("text-align", "right");\n        this.chkOrg.css("margin-right", "0px");\n        this.chkTenant.css("margin-right", "37px");\n        //this.chkUser.css("margin-right", "72px");\n        //this.chkWindow.css("margin-right", "72px");\n        $root.find("#divMsg_" + this.windowNum).css("text-align", "right");\n      } else {\n        //this.chkUser.css("margin-left", "83px");\n        //this.chkWindow.css("margin-left", "45px");\n      }\n\n      // display values in label and textbox\n      this.txtAttribute.val(this.aDisplayAttribute == null ? "" : this.aDisplayAttribute);\n      this.lblAttribute.text(this.aAttribute == null ? "" : this.aAttribute);\n      this.txtSearchKey.val(this.aDisplayValue == null ? "" : VIS.Utility.decodeText(this.aDisplayValue));\n      this.lblValue.text(this.aValue);\n      this.lblAttributeText.text(VIS.Msg.getMsg("Attribute"));\n      this.lblValueText.text(VIS.Msg.getMsg("SearchKey"));\n      this.lblLevelText.text(VIS.Msg.getMsg("ValuePreferenceSetFor"));\n      this.chkTenant.next("label").text(VIS.Msg.getMsg("Tenant"));\n      this.chkOrg.next("label").text(VIS.Msg.getMsg("Org"));\n      this.chkUser.next("label").text(VIS.Msg.getMsg("UserContact"));\n      this.chkWindow.next("label").text(VIS.Msg.getMsg("Window"));\n      this.chkTenant.prop("disabled", true);\n      this.chkTenant.prop("checked", true);\n      this.chkUser.prop("checked", true);\n      this.chkWindow.prop("checked", true);\n\n      //\tCan Change Org\n      if (!VIS.MRole.PREFERENCETYPE_Client.equals(VIS.MRole.getPreferenceType())) {\n        this.chkOrg.prop("disabled", true);\n        this.chkOrg.prop("checked", true);\n      }\n\n      //\tCan Change User\n      if (!(VIS.MRole.PREFERENCETYPE_Client.equals(VIS.MRole.getPreferenceType()) || VIS.MRole.PREFERENCETYPE_Organization.equals(VIS.MRole.getPreferenceType()))) {\n        this.chkUser.prop("disabled", true);\n        this.chkUser.prop("checked", true);\n      }\n      this.setExplanation();\n      this.Okbtn.on("click", function () {\n        setBusy(true);\n        $self.save();\n        setBusy(false);\n        $root.dialog(\'close\');\n      });\n      this.cancelbtn.on("click", function () {\n        $root.dialog(\'close\');\n      });\n      this.deletebtn.on("click", function () {\n        $self.delete();\n        $root.dialog(\'close\');\n      });\n      $(\'[id^=vch]\').click(function () {\n        $self.setExplanation();\n      });\n    };\n    this.showDialog = function () {\n      $root.append($busyDiv);\n      setBusy(true);\n      setTimeout(this.load(), 5);\n      $root.dialog({\n        modal: true,\n        title: VIS.Msg.getMsg("ValuePreference"),\n        //height: 280,\n        width: 530,\n        position: {\n          at: "center top",\n          of: window\n        },\n        close: function () {\n          $self.dispose();\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n    };\n    this.disposeComponent = function () {\n      if (this.Okbtn) this.Okbtn.off("click");\n      if (this.cancelbtn) this.cancelbtn.off("click");\n      if (this.deletebtn) this.deletebtn.off("click");\n      if ($(\'[id^=vch]\')) $(\'[id^=vch]\').off("click");\n      this.Okbtn = null;\n      this.cancelbtn = null;\n      this.deletebtn = null;\n      $busyDiv = null;\n      $self = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n  ValuePreference.prototype.setExplanation = function () {\n    var expl = "For ";\n    if (this.chkTenant.prop("checked") && this.chkOrg.prop("checked")) {\n      expl += "this Client and Organization";\n    } else if (this.chkTenant.prop("checked") && !this.chkOrg.prop("checked")) {\n      expl += "all Organizations of this Client";\n    } else if (!this.chkTenant.prop("checked") && this.chkOrg.prop("checked")) {\n      this.chkOrg.prop("checked", false);\n      expl += "entire System";\n    } else {\n      expl += "entire System";\n    }\n\n    // set text according to user\n    if (this.chkUser.prop("checked")) {\n      expl += ", this User";\n    } else {\n      expl += ", all Users";\n    }\n\n    // set text according to window\n    if (this.chkWindow.prop("checked")) {\n      expl += " and this Window";\n    } else {\n      expl += " and all Windows";\n    }\n    if (VIS.Env.isBaseLanguage()) {\n      this.lblMsg.text(expl.toString());\n    }\n    this.orgchk = this.chkOrg.prop("checked");\n    this.userchk = this.chkUser.prop("checked");\n    this.windowchk = this.chkWindow.prop("checked");\n    this.tenantchk = this.chkTenant.prop("checked");\n  };\n  ValuePreference.prototype.getADPreferenceID = function () {\n    // make sql query to get preference id\n    var sql = ""; // \n    var valuetem = this.tenantchk ? this.AD_Client_ID : 0;\n    //\tClient\n    sql += "AD_Client_ID=" + valuetem;\n    //\tOrg\n    valuetem = this.orgchk ? this.AD_Org_ID : 0;\n    sql += " AND AD_Org_ID=" + valuetem;\n    //\tOptional User\n    if (this.userchk) {\n      sql += " AND AD_User_ID=" + this.AD_User_ID;\n    } else {\n      sql += " AND AD_User_ID IS NULL";\n    }\n    //\tOptional Window\n    if (this.windowchk) {\n      sql += " AND AD_Window_ID=" + this.AD_Window_ID;\n    } else {\n      sql += " AND AD_Window_ID IS NULL";\n    }\n    //\tAttribute (Key)\n    sql += " AND Attribute=\'" + this.aAttribute + "\'";\n    var preferenceId = 0;\n    sql = VIS.secureEngine.encrypt(sql);\n    var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ValuePreference/GetPrefrenceID", {\n      "sql": sql\n    }, null); // spelling corrected by vinay bhatt on 18 oct 2018\n\n    /* var ds = new VIS.DB.DataSet().toJson(JSON.stringify(data));\r\n       if (ds != null && ds.tables[0].rows.length > 0) {\r\n         // get id\r\n         preferenceId = ds.tables[0].rows[0].getCell("ad_preference_id");\r\n     }\r\n     if (preferenceId < 0) {\r\n         preferenceId = 0;\r\n     }*/\n\n    if (data > 0) {\n      preferenceId = VIS.Utility.Util.getValueOfInt(data);\n    }\n    return preferenceId;\n  };\n  ValuePreference.prototype.delete = function () {\n    var returnValue = false;\n    // get preference id\n    var AD_Preference_ID = this.getADPreferenceID();\n    var localObj = this;\n    if (AD_Preference_ID > 0) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "ValuePreference/Delete",\n        dataType: "json",\n        data: {\n          preferenceId: AD_Preference_ID\n        },\n        success: function (data) {\n          returnValue = data.result;\n          if (returnValue) {\n            VIS.Env.getCtx().setContext(localObj.getContextKey(), null);\n            VIS.ADialog.info("ValuePreferenceDeleted", true, "", null);\n          }\n        }\n      });\n    } else {\n      VIS.ADialog.warn("ValuePreferenceNotFound", true, "", null);\n    }\n    return returnValue;\n  };\n  ValuePreference.prototype.save = function () {\n    //\tHandle NULL\n    if (this.aValue == null) {\n      if (VIS.DisplayType.IsLookup(this.displayType)) {\n        this.aValue = "-1"; //\t -1 may cause problems (BPartner - M_DiscountSchema\n      } else if (VIS.DisplayType.IsDate(this.displayType)) {\n        this.aValue = " ";\n      } else {\n        VIS.ADialog.warn("ValuePreferenceNotInserted", true, "", null);\n        return false;\n      }\n    }\n    //\tNo Variables (SQL)\n    else if (this.aValue.toString().indexOf("@") != -1) {\n      ////ShowMessage.Warn("ValuePreferenceNotInserted", true, "", null);\n      return false;\n    }\n    var returnValue = false;\n    this.orgchk = this.chkOrg.prop("checked");\n    this.userchk = this.chkUser.prop("checked");\n    this.windowchk = this.chkWindow.prop("checked");\n    this.tenantchk = this.chkTenant.prop("checked");\n    var localObj = this;\n    var AD_Preference_ID = this.getADPreferenceID();\n    $.ajax({\n      url: VIS.Application.contextUrl + "ValuePreference/Save",\n      dataType: "json",\n      data: {\n        preferenceId: AD_Preference_ID,\n        clientId: this.tenantchk ? this.AD_Client_ID : 0,\n        orgId: this.orgchk ? this.AD_Org_ID : 0,\n        chkWindow: this.windowchk,\n        AD_Window_ID: this.AD_Window_ID,\n        chkUser: this.userchk,\n        attribute: this.aAttribute,\n        userId: this.AD_User_ID,\n        value: this.aValue\n      },\n      success: function (data) {\n        returnValue = data.result;\n        if (returnValue) {\n          VIS.Env.getCtx().setContext(localObj.getContextKey(), localObj.aValue);\n          VIS.ADialog.info("ValuePreferenceInserted", true, "", null);\n        } else {\n          VIS.ADialog.warn("ValuePreferenceNotInserted", true, "", null);\n        }\n      }\n    });\n    return returnValue;\n  };\n  ValuePreference.prototype.getContextKey = function () {\n    if (this.windowchk) {\n      return "P" + this.AD_Window_ID + "|" + this.aAttribute;\n    } else {\n      return "P|" + this.aAttribute;\n    }\n  };\n  ValuePreference.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  //Load form into VIS\n  VIS.ValuePreference = ValuePreference;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/valuepreference.js?')},"./Areas/VIS/Scripts/app/Framework/vdocaction.js":()=>{eval(';\n(function (VIS, $) {\n  function VDocAction(windowNo, tabObj, recordId) {\n    var ctx = VIS.Env.getCtx();\n\n    // Change By Lokesh Chauhan 2-Sep\n    // To Handle Doc Action\'s at child Tab\n    //var AD_Table_ID = ctx.getContextAsInt(windowNo, "BaseTable_ID");\n    var AD_Table_ID = tabObj.getAD_Table_ID();\n    var _values = [];\n    var _names = [];\n    var _descriptions = [];\n    var docStatus = null;\n    var index = 0;\n    var defaultV = "";\n    this.log = VIS.Logging.VLogger.getVLogger("VDocAction");\n    var options;\n    var $cmbAction = $(\'<select class="vis-select-docAction"></select>\');\n    var $message = $(\'<p style="font-size:12px;margin-bottom:-5px"></p>\');\n    // var $btnbackground = $(\'<button>\');\n    //  var $btnok = $(\'<button>\');\n    //  var $btncancel = $(\'<button>\');\n    var $maindiv = $(\'<div style="margin-bottom:-5px"></div>\');\n    var self = this;\n    this.batch = false;\n    this.isOKPressed = false;\n    var $table = $(\'<table style="width:360px;margin-bottom:9px">\');\n    var ch = null;\n    this.onClose = null;\n    var tabmenubusy = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var loadLabel = $(\'<label>\' + VIS.Msg.getMsg("Loading") + \'</label>\');\n    if (VIS.Application.isRTL) {\n      //$cmbAction.css({ "margin-left": "0px", "margin-right": "10px" });\n      //$message.css({ "margin-right": "3px" });\n    }\n    function init() {\n      createDesign();\n      events();\n      readReference();\n      dynInit(recordId);\n    }\n    ;\n    init();\n    function readReference() {\n      var sql = "VIS";\n      var valueLst = [];\n      var nameLst = [];\n      var descriptionLst = [];\n      try {\n        var dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "DocAction/GetReference", {\n          "RefQry": sql\n        }, null);\n        if (dr != null) {\n          for (var i in dr) {\n            var value = dr[i]["Value"];\n            var name = dr[i]["Name"];\n            var description = dr[i]["Description"];\n            if (description == null || description == \'undefined\') {\n              description = "";\n            }\n            //\n            valueLst.push(value);\n            nameLst.push(name);\n            descriptionLst.push(description);\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {}\n\n      //\tconvert to arrays\n      var size = valueLst.length;\n      _values = [];\n      _names = [];\n      _descriptions = [];\n      for (var i = 0; i < size; i++) {\n        _values.push(valueLst[i]);\n        _names.push(nameLst[i]);\n        _descriptions.push(descriptionLst[i]);\n      }\n    }\n    ;\n    function dynInit(Record_ID) {\n      docStatus = tabObj.getValue("DocStatus");\n      var docAction = tabObj.getValue("DocAction");\n      var processing = tabObj.getValue("Processing");\n\n      //Rakesh(VA228):Check processing return value Y/N in case when reference is button and true/false when reference is Checkbox\n      if (processing == "N" || !processing) {\n        processing = false;\n      } else {\n        processing = true;\n      }\n      var orderType = ctx.getWindowContext(windowNo, "OrderType");\n      var isSOTrx = ctx.isSOTrx(windowNo);\n\n      //   log.Fine("DocStatus=" + docStatus\n      //       + ", DocAction=" + docAction + ", OrderType=" + orderType\n      //       + ", IsSOTrx=" + isSOTrx + ", Processing=" + processing\n      //       + ", AD_Table_ID=" + AD_Table_ID + ", Record_ID=" + Record_ID);\n      //\n      //options = new Array(_values.Length);\n      //  VIS.dataContext.getDocActions(AD_Table_ID, Record_ID, docStatus, processing, orderType, isSOTrx, docAction, tabObj.getTableName(), _values, _names, generateActions);\n\n      $.ajax({\n        url: VIS.Application.contextUrl + \'DocAction/GetDocActions\',\n        type: \'POST\',\n        dataType: \'Json\',\n        data: {\n          AD_Table_ID: AD_Table_ID,\n          Record_ID: Record_ID,\n          docStatus: docStatus,\n          processing: processing,\n          orderType: orderType,\n          isSOTrx: isSOTrx,\n          docAction: docAction,\n          tableName: tabObj.getTableName(),\n          values: JSON.stringify(_values),\n          names: JSON.stringify(_names),\n          C_DocType_ID: tabObj.getValue("C_DocType_ID"),\n          C_DocTypeTarget_ID: tabObj.getValue("C_DocTypeTarget_ID")\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          generateActions(result);\n          fillCombo(result);\n        }\n      });\n    }\n    ;\n    function generateActions(result) {\n      setVisibility(false);\n      docStatus = result.DocStatus;\n      if (result.Error != null && result.Error != "" && result.Error != \'undefined\') {\n        VIS.ADialog.error(result.Error);\n        return;\n      }\n      if (result.DocStatus == null) {\n        $message.text("*** ERROR ***");\n        //SetBusy(false);\n        return;\n      }\n      //createDesign();\n    }\n    ;\n    function fillCombo(result) {\n      /**\r\n       *\tFill actionCombo\r\n       */\n\n      for (var i = 0; i < result.Index; i++) {\n        //\tSerach for option and add it\n        var added = false;\n        for (var j = 0; j < _values.length && !added; j++) if (result.Options[i] && result.Options[i].equals(_values[j])) {\n          //actionCombo.addItem(_names[j]);\n          $cmbAction.append(\'<option >\' + _names[j] + \'</option>\');\n          added = true;\n        }\n      }\n      if (result.DefaultV != null && result.DefaultV != "" && result.DefaultV != \'undefined\') {\n        $cmbAction.val(result.DefaultV).change();\n      }\n      $maindiv.prop("disable", false);\n      if (self.getNumberOfOptions() == 0) {\n        VIS.ADialog.info("InfoDocActionNoOptions", "");\n        self.log.info("DocAction - No Options");\n        ch.close();\n        return;\n      }\n    }\n    ;\n\n    /// <summary>\n    /// Number of options available (to decide to display it)\n    /// </summary>\n    /// <returns>item count</returns>\n    this.getNumberOfOptions = function () {\n      return $cmbAction.children(\'option\').length;\n    };\n\n    /// <summary>\n    /// Should the process be started?\n    /// </summary>\n    /// <returns>OK pressed</returns>\n    this.isStartProcess = function () {\n      return this.isOKPressed;\n    };\n\n    /// <summary>\n    /// Should the process be started in batch?\n    /// </summary>\n    /// <returns>batch</returns>\n    this.isBatch = function () {\n      return this.batch;\n    };\n    function createDesign() {\n      var $tr1 = $(\'<tr>\');\n      var $tr2 = $(\'<tr>\');\n      var $tr3 = $(\'<tr>\');\n      var $td11 = $(\'<td>\');\n      var $td12 = $(\'<td>\');\n      var $DivInputWrap1 = $("<div class=\'input-group vis-input-wrap\'></div>");\n      var $DivInputCtrlWrap1 = $("<div class=\'vis-control-wrap\'></div>");\n      //if (VIS.Application.isRTL) {\n      //    $td11.append(\'<span style="margin-right:3px">\' + VIS.Msg.getMsg(\'DocAction\') + \'</span>\');\n      //}\n      //else {\n      $td11.append($DivInputWrap1);\n      $DivInputWrap1.append($DivInputCtrlWrap1);\n      //}\n      $DivInputCtrlWrap1.append($cmbAction);\n      $DivInputCtrlWrap1.append(\'<label >\' + VIS.Msg.getMsg(\'DocAction\') + \'</label>\');\n      //$tr1.append($td11).append($td12);\n      $tr1.append($td11);\n      var $td22 = $(\'<td>\');\n      $td22.append($message);\n      $tr2.append($td22);\n      $td31 = $(\'<td>\');\n      $td32 = $(\'<td style="text-align:right">\');\n\n      ////Background button\n      //$btnbackground.addClass("VIS_Pref_btn-2");\n      //$btnbackground.text(VIS.Msg.getMsg("BackgroundProcess"));\n      //$btnbackground.css({ "margin-top": "5px", "margin-bottom": "0px" });\n      //$btnbackground.hide();\n      //$td31.append($btnbackground);\n\n      ////Cancel Button\n      //$btncancel.addClass("VIS_Pref_btn-2");\n      //$btncancel.text(VIS.Msg.getMsg("Cancel"));\n      //$btncancel.css({ "margin-top": "5px", "margin-bottom": "0px", "margin-left": "5px" });\n      //$td32.append($btncancel);\n\n      ////OK Button\n      //$btnok.addClass("VIS_Pref_btn-2");\n      //$btnok.text(VIS.Msg.getMsg("OK"));\n      //$btnok.css({ "margin-top": "5px", "margin-bottom": "0px" });\n      //$td32.append($btnok);\n\n      $tr3.append($td31).append($td32);\n      $table.append($tr1).append($tr2).append($tr3);\n      $maindiv.append($table);\n      setVisibility(true);\n      $maindiv.append(tabmenubusy).append(loadLabel);\n      //  $maindiv.prop("disable", true);\n      ch = new VIS.ChildDialog();\n    }\n    ;\n    function events() {\n      //Seleced Item Change\n      $cmbAction.on("change", function () {\n        var index = getSelectedIndex();\n        //\tDisplay descriprion\n        if (index != -1 && _descriptions.length > 0) {\n          $message.text(_descriptions[index]);\n        }\n      });\n\n      //Background button clcik \n      //$btnbackground.on("click", function () {\n      //    if ($btnbackground.prop("disabled") == true) {\n      //        return;\n      //    }\n      //    if (save()) {\n      //        self.batch = true;\n      //        self.isOKPressed = true;\n      //        ch.close();\n      //    }\n      //});\n\n      //Ok button click\n      ch.onOkClick = function () {\n        //if ($btnok.prop("disabled") == true) {\n        //    return;\n        //}\n        if (save()) {\n          self.isOKPressed = true;\n          if (self.onClose) {\n            self.onClose();\n          }\n          //ch.close();\n        }\n      };\n\n      //Cancel button click\n      ch.onCancelClick = function () {\n        //if ($btncancel.prop("disabled") == true) {\n        //    return;\n        //}\n        //ch.close();\n        if (self.onClose) {\n          self.onClose();\n        }\n      };\n    }\n    ;\n    this.show = function () {\n      ch.setContent($maindiv);\n      ch.setTitle(VIS.Msg.getMsg("DocAction"));\n      ch.setModal(true);\n      ch.show();\n      //  ch.hidebuttons();\n    };\n    ch.onClose = function () {\n      self.dispose();\n    };\n    function setVisibility(tvisible) {\n      if (tvisible) {\n        tabmenubusy.show();\n        loadLabel.show();\n        $maindiv.find("button").prop("disabled", true);\n      } else {\n        tabmenubusy.hide();\n        loadLabel.hide();\n        $maindiv.find("button").prop("disabled", false);\n      }\n    }\n\n    /// <summary>\n    /// Get index of selected choice\n    /// </summary>\n    /// <returns>index or -1</returns>\n    function getSelectedIndex() {\n      var index = -1;\n      if ($cmbAction.val() == null) return index;\n      //\tget Selection\n      var sel = $cmbAction.val();\n\n      //\tfind it in vector\n      for (var i = 0; i < _names.length && index == -1; i++) if (sel.equals(_names[i])) {\n        index = i;\n        break;\n      }\n      //\n      return index;\n    }\n    function save() {\n      setVisibility(true);\n      var selectedindex = getSelectedIndex();\n      if (selectedindex == -1) {\n        setVisibility(false);\n        return false;\n      }\n\n      //\tSave Selection\n      // thi.log.Config("DocAction=" + _values[selectedindex]);\n      var windowID = tabObj.getAD_Window_ID();\n      var tabID = tabObj.getAD_Tab_ID();\n      var docAction = _values[selectedindex];\n\n      //Check any tab panel exist\n      if (tabObj.getHasPanel()) {\n        var panels = tabObj.getTabPanels();\n        var isSurveyPanel = false;\n        for (var i = 0; i < panels.length; i++) {\n          if (panels[i].getClassName() == \'VIS.SurveyPanel\') {\n            isSurveyPanel = true;\n            i = panels.length;\n          }\n        }\n        if (isSurveyPanel) {\n          var result = false;\n          $.ajax({\n            type: "POST",\n            url: VIS.Application.contextUrl + "VIS/SurveyPanel/CheckDocActionCheckListResponse",\n            dataType: "json",\n            async: false,\n            contentType: \'application/json; charset=utf-8\',\n            data: JSON.stringify({\n              "AD_Window_ID": windowID,\n              "AD_Tab_ID": tabID,\n              "Record_ID": recordId,\n              "DocAction": docAction,\n              "AD_Table_ID": tabObj.getAD_Table_ID()\n            }),\n            success: function (data) {\n              if (data == \'false\') {\n                VIS.ADialog.error("CheckListRequired");\n                result = false;\n              } else {\n                tabObj.setValue("DocAction", docAction);\n                result = true;\n              }\n            },\n            error: function (e) {}\n          });\n          return result;\n        } else {\n          tabObj.setValue("DocAction", docAction);\n          return true;\n        }\n      } else {\n        tabObj.setValue("DocAction", docAction);\n        return true;\n      }\n    }\n    ;\n    this.dispose = function () {\n      ch.close();\n      ch = null;\n      AD_Table_ID = null;\n      _values = null;\n      _names = null;\n      _descriptions = null;\n      docStatus = null;\n      index = 0;\n      defaultV = null;\n      options = null;\n      // $cmbAction.empty();\n      $cmbAction = null;\n      $message = null;\n      // // $btnbackground = null;\n      // $btnok = null;\n      // $btncancel = null;\n      // $maindiv.empty();\n      $maindiv = null;\n      self = null;\n      if ($table) $table.empty();\n      $table = null;\n    };\n  }\n  ;\n  function documentEngine() {\n    //Complete = CO\n    this.ACTION_COMPLETE = "CO";\n    //Wait Complete = WC \n    this.ACTION_WAITCOMPLETE = "WC";\n    // Approve = AP \n    this.ACTION_APPROVE = "AP";\n    // Reject = RJ \n    this.ACTION_REJECT = "RJ";\n    // Post = PO \n    this.ACTION_POST = "PO";\n    // Void = VO \n    this.ACTION_VOID = "VO";\n    // Close = CL\n    this.ACTION_CLOSE = "CL";\n    // Reverse - Correct = RC \n    this.ACTION_REVERSE_CORRECT = "RC";\n    // Reverse - Accrual = RA \n    this.ACTION_REVERSE_ACCRUAL = "RA";\n    // ReActivate = RE \n    this.ACTION_REACTIVATE = "RE";\n    // <None> = -- \n    this.ACTION_NONE = "--";\n    // Prepare = PR\n    this.ACTION_PREPARE = "PR";\n    // Unlock = XL \n    this.ACTION_UNLOCK = "XL";\n    // Invalidate = IN \n    this.ACTION_INVALIDATE = "IN";\n    // ReOpen = OP \n    this.ACTION_REOPEN = "OP";\n\n    // Drafted = DR\n    this.STATUS_DRAFTED = "DR";\n    // Completed = CO \n    this.STATUS_COMPLETED = "CO";\n    // Approved = AP \n    this.STATUS_APPROVED = "AP";\n    // Invalid = IN \n    this.STATUS_INVALID = "IN";\n    //Not Approved = NA \n    this.STATUS_NOTAPPROVED = "NA";\n    //Voided = VO \n    this.STATUS_VOIDED = "VO";\n    // Reversed = RE \n    this.STATUS_REVERSED = "RE";\n    // Closed = CL \n    this.STATUS_CLOSED = "CL";\n    // Unknown = ??\n    this.STATUS_UNKNOWN = "??";\n    //In Progress = IP \n    this.STATUS_INPROGRESS = "IP";\n    // Waiting Payment = WP \n    this.STATUS_WAITINGPAYMENT = "WP";\n    //Waiting Confirmation = WC \n    this.STATUS_WAITINGCONFIRMATION = "WC";\n  }\n  ;\n  VIS.VDocAction = VDocAction;\n  VIS.DocumentEngine = documentEngine;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/vdocaction.js?')},"./Areas/VIS/Scripts/app/Framework/vimageform.js":()=>{eval(';\n(function (VIS, $) {\n  function VImageForm(ad_image_id, textLength) {\n    var $self = this;\n    var $root = $("<div>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var windowNo = VIS.Env.getWindowNo();\n    var Okbtn = null;\n    var cancelbtn = null;\n    var delbtn = null;\n    this.onClose = null;\n    var lblImageSelect = null;\n    var fileUpload = null;\n    var holderDiv = null;\n    var imgUsrImage = null;\n    var lblfileUpload = null;\n    var chkDataBaseSave = null;\n    var change = false;\n    var w = null;\n    var h = null;\n    if (ad_image_id == null || ad_image_id == \'null\') {\n      ad_image_id = 0;\n    }\n    var load = function () {\n      $root.load(VIS.Application.contextUrl + \'VImageForm/Index/?windowno=\' + windowNo + \'&ad_image_id=\' + ad_image_id, function (event) {\n        $busyDiv[0].style.visibility = \'visible\';\n        init($root);\n        //remove image\n        $busyDiv[0].style.visibility = \'hidden\';\n      });\n    };\n    var init = function (root) {\n      Okbtn = $root.find("#btnOk_" + windowNo);\n      cancelbtn = $root.find("#btnCancel_" + windowNo);\n      delbtn = $root.find("#btnImgDelete_" + windowNo);\n\n      //if (VIS.Application.isRTL) {\n      //    Okbtn.css("margin-right", "-128px");\n      //    cancelbtn.css("margin-right", "110px");\n      //    delbtn.css("margin-right", "55px");\n      //}\n      // if ad_image_id > 0, it is for update or delete\n      if (ad_image_id > 0) {\n        delbtn.css("display", "inline-block");\n      } else {\n        delbtn.css("display", "none");\n      }\n\n      //lblImageSelect = root.find("#lblImageSelect_" + windowNo);\n      fileUpload = root.find("#fileUpload_" + windowNo);\n      holderDiv = root.find("#holderDiv_" + windowNo);\n      imgUsrImage = root.find("#imgUsrImage_" + windowNo);\n      holderDiv.css("width", w - 48);\n      if (h > 180) holderDiv.css("height", h - 180);\n      if (textLength > 0) {\n        imgUsrImage.hide();\n      } else {\n        if (imgUsrImage[0].width > 300) {\n          // holder width\n          holderDiv.css("overflow", "auto");\n        }\n      }\n      lblfileUpload = root.find("#lblfileUpload_" + windowNo);\n      chkDataBaseSave = root.find("#chkDataBaseSave_" + windowNo);\n      fileUpload.on("change", function () {\n        var file = fileUpload[0].files[0],\n          reader = new FileReader();\n\n        // Validate file extension\n        var allowedExtensions = /(\\.jpg|\\.png|\\.ico|\\.webp|\\.svg|\\.jpeg|\\.jfif)$/i;\n        if (!allowedExtensions.exec(file.name)) {\n          VIS.ADialog.warn("SelectImageOnly");\n          fileUpload.val(\'\'); // Clear the file input to prevent upload\n          imgUsrImage.hide(); // Hide the image element\n          return false;\n        }\n        imgUsrImage.show();\n        reader.onload = function (event) {\n          imgUsrImage.removeAttr("src").attr("src", event.target.result);\n          // if (imgUsrImage[0].width > 300) { // holder width\n          //     holderDiv.css("overflow", "auto");\n          // }\n        };\n        reader.readAsDataURL(file);\n        change = true;\n        reader = null;\n        file = null;\n        return false;\n      });\n\n      // set change to true if isdatabase checkbox is changed true/false\n      chkDataBaseSave.on("change", function () {\n        change = true;\n        return false;\n      });\n      Okbtn.on("click", function () {\n        if (change) {\n          var xhr = new XMLHttpRequest();\n          var fd = new FormData();\n          fd.append("file", fileUpload[0].files[0]);\n          fd.append("isDatabaseSave", chkDataBaseSave.prop("checked"));\n          fd.append("ad_image_id", 0);\n          xhr.open("POST", VIS.Application.contextUrl + "VImageForm/SaveImage", true);\n          xhr.send(fd);\n          xhr.addEventListener("load", function (event) {\n            var dd = event.target.response;\n            dd = JSON.parse(dd);\n            var id = dd.result;\n            if ($self.onClose) $self.onClose(id, change);\n            xhr = null;\n            fd = null;\n            $root.dialog(\'close\');\n          }, false);\n        } else {\n          if ($self.onClose) $self.onClose(ad_image_id, change);\n          $root.dialog(\'close\');\n        }\n      });\n      cancelbtn.on("click", function () {\n        $root.dialog(\'close\');\n      });\n      // delete image function\n      delbtn.on("click", function () {\n        change = true;\n        var xhr = new XMLHttpRequest();\n        var fd = new FormData();\n        fd.append("ad_image_id", ad_image_id);\n        xhr.open("POST", VIS.Application.contextUrl + "VImageForm/DeleteImage", true);\n        xhr.send(fd);\n        xhr.addEventListener("load", function (event) {\n          var dd = event.target.response;\n          dd = JSON.parse(dd);\n          var id = dd.result;\n          if ($self.onClose) $self.onClose(id, change);\n          xhr = null;\n          fd = null;\n          $root.dialog(\'close\');\n        }, false);\n      });\n    };\n    this.showDialog = function () {\n      load();\n      w = $(window).width() - 150;\n      h = $(window).height() - 40;\n      $busyDiv.height(h);\n      $busyDiv.width(w);\n      $root.append($busyDiv);\n      $root.dialog({\n        modal: true,\n        title: VIS.Msg.getMsg("ImageDialog"),\n        width: w,\n        height: h,\n        position: {\n          at: "center top",\n          of: window\n        },\n        close: function () {\n          $self.dispose();\n          $self = null;\n          $root.dialog("destroy");\n          $root = null;\n        }\n      });\n      // $root.siblings(\'div.ui-dialog-titlebar\').remove();\n    };\n    this.disposeComponent = function () {\n      $self = null;\n      if (Okbtn) Okbtn.off("click");\n      if (cancelbtn) cancelbtn.off("click");\n      if (delbtn) delbtn.off("click");\n      $busyDiv = null;\n      windowNo = null;\n      Okbtn = null;\n      cancelbtn = null;\n      delbtn = null;\n      lblImageSelect = null;\n      fileUpload = null;\n      holderDiv = null;\n      imgUsrImage = null;\n      lblfileUpload = null;\n      chkDataBaseSave = null;\n      change = false;\n      w = null;\n      h = null;\n      this.disposeComponent = null;\n    };\n  }\n\n  //dispose call\n  VImageForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n  };\n\n  //Load form into VIS\n  VIS.VImageForm = VImageForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/vimageform.js?')},"./Areas/VIS/Scripts/app/Framework/visimportfiles.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     open dialog to add files\r\n * Author         :     Raghu\r\n * Date           :     23-july-2015\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function VisImportFiles(allowMutifiles) {\n    this.onClose = null;\n    var inforoot, $bsyDiv, $divContent, $divTopCon, $divBottomCon, $divBottonRight, btnCancel, btnOK;\n    var lstLatestFiles, $fileBrowser, $btnSelectFile, $divFileArea, $divBottomLeft;\n    //var $btnUpload;\n    var $self = this;\n    var isOk = false;\n    //file transfer supportive variables\n    var currentchunk = 0,\n      currentFile = 0,\n      folder = Date.now().toString() + "_FileCtrl",\n      chunkSize = 1 * 1024 * 1024,\n      totalChunks = 0,\n      currentFileChunkNo = 0,\n      filesInfo = [];\n    function initializeComponent(allowMutifiles) {\n      inforoot = $("<div style=\'overflow: hidden;\'>");\n      $bsyDiv = $(\'<div class="vis-apanel-busy" style="width: 96%; height: 97%; text-align: center; position: absolute; visibility: hidden;"></div>\');\n      $divContent = $(\'<div style="display: inline-block; float: left;width:99%;height:auto;margin-top: 2px;">\');\n      $divTopCon = $(\'<div style="padding-left: 7px;height:88.9%;display: inline-block; float: left;width:100%;height:87.8%;">\');\n      $btnSelectFile = $("<button class=\'vis-initial-btn vis-initial-btn-blue\' style=\'border: none;\'>" + VIS.Msg.getMsg("SelectFile") + "</button>");\n      $divFileArea = $("<div class=\'VIS-form-data\' style=\'width: 100%;height:200px;border: 1px solid #ccc;margin-top: 11px;padding: 10px;overflow:auto;\'>");\n      $divBottomCon = $(\'<div style="display: inline-block; float: left;width:100%;height:auto;margin-top: 2px;">\');\n      $divBottomLeft = $("<div style=\'float: left;\'>");\n      // $btnUpload = $("<button class=\'vis-initial-btn vis-initial-btn-blue\' style=\'margin-top: 5px;margin-left: 7px;border: none; display:none\'>" + VIS.Msg.getMsg("Upload") + "</button>");\n      $divBottonRight = $(\'<div style="float:right;">\');\n      var canceltxt = VIS.Msg.getMsg("Cancel");\n      if (canceltxt.indexOf(\'&\') > -1) {\n        canceltxt = canceltxt.replace(\'&\', \'\');\n      }\n      var Oktxt = VIS.Msg.getMsg("Ok");\n      if (Oktxt.indexOf(\'&\') > -1) {\n        Oktxt = Oktxt.replace(\'&\', \'\');\n      }\n      btnCancel = $("<button class=\'VIS_Pref_btn-2\' style=\'margin-top: 5px;margin-bottom: -10px;\'>").append(canceltxt);\n      btnOK = $("<button class=\'VIS_Pref_btn-2\' disabled=\'true\' style=\'margin-top: 5px;margin-bottom: -10px;margin-right:5px\'>").append(Oktxt);\n      if (allowMutifiles) {\n        $fileBrowser = $("<input type=\'file\' multiple=\'true\'>");\n      } else {\n        $fileBrowser = $("<input type=\'file\'>");\n      }\n      $divTopCon.append($btnSelectFile);\n      $divTopCon.append($divFileArea);\n      $divContent.append($divTopCon);\n      //$divBottomLeft.append($btnUpload);\n      $divBottomCon.append($divBottomLeft);\n      $divBottonRight.append(btnCancel);\n      $divBottonRight.append(btnOK);\n      $divBottomCon.append($divBottonRight);\n      $divContent.append($divBottomCon);\n      inforoot.append($divContent);\n      inforoot.append($bsyDiv);\n      lstLatestFiles = [];\n    }\n    ;\n    initializeComponent(allowMutifiles);\n    function bindEvent() {\n      btnCancel.on(\'click\', function () {\n        isOk = false;\n        disposeComponent();\n      });\n      btnOK.on(\'click\', function () {\n        UploadFiles();\n      });\n      $btnSelectFile.on("click", function () {\n        //control retain the last uploaded file path if file path \n        //same then no selection if diffrent only then fire \n        //if (lstLatestFiles.length == 0) {\n        //    $fileBrowser.val("");\n        //}\n        $fileBrowser.val("");\n        $fileBrowser.trigger(\'click\');\n      });\n      $fileBrowser.on("change", function () {\n        AppendFile(this);\n      });\n\n      //$btnUpload.on(\'click\', function () {\n      //    UploadFiles();\n      //});\n    }\n    ;\n    bindEvent();\n    this.show = function () {\n      inforoot.dialog({\n        width: 500,\n        height: 377,\n        resizable: false,\n        modal: true,\n        title: VIS.Msg.getMsg("Upload"),\n        close: onClosing\n      });\n    };\n    function onClosing() {\n      if (!isOk) {\n        folder = "";\n      }\n      $self.onClose(folder);\n      disposeComponent();\n    }\n    ;\n    var AppendFile = function (sender) {\n      var invalidFiles = [];\n      for (var i = 0; i < sender.files.length; i++) {\n        file = sender.files[i];\n        if (file == undefined) {\n          return;\n        }\n        if (file.name.indexOf(\'&\') > -1 || file.name.indexOf(\'?\') > -1 || file.name.indexOf(\'#\') > -1 || file.name.indexOf(\'/\') > -1 || file.name.indexOf(\'\\\\\') > -1) {\n          invalidFiles.push(file.name);\n          continue;\n        }\n        for (var itm in lstLatestFiles) {\n          if (file.name == lstLatestFiles[itm].name) {\n            window.setTimeout(function () {\n              VIS.ADialog.info("fileAlreadyAttached");\n            }, 20);\n            return;\n          }\n        }\n        var fileInfo = {};\n        fileInfo.Name = file.name;\n        fileInfo.Size = file.size;\n        if (fileInfo.Size > 17000000) {\n          //VIS.ADialog.info(fileInfo.Name + " Sizegreaterthan17MB");\n          continue;\n        }\n        lstLatestFiles.push(file);\n        var divFlewrap = $("<div class=\'VIS-file-wrap\'>");\n        var p = $("<p>" + fileInfo.Name + "</p>");\n        var index = lstLatestFiles.length - 1;\n        var closeico = $("<span class=\'vis vis-mark VIS-close-ico mychoice_" + index + "\'  data-index=\'" + index + "\'>");\n        closeico.on(\'click\', function () {\n          var parentValue = $(this).parent();\n          if (parentValue) {\n            var para = parentValue.children()[0];\n            if (para) {\n              var index = lstLatestFiles.map(function (item) {\n                return item.name == $(para).text();\n              }).indexOf(true);\n              lstLatestFiles.splice(index, 1);\n              parentValue.remove();\n            }\n          }\n\n          //var index = $(this).data("index");\n          //var name = ".mychoice_" + index;\n          //var indexlocal = $divFileArea.find(".VIS-close-ico").index($(name));\n          // lstLatestFiles.splice(indexlocal, 1);\n          //var div = $(this).parent();\n          //$(this).off(\'click\');\n          // div.css("display", "none");\n          // div.empty();\n          // div = null;\n\n          if (lstLatestFiles.length == 0) {\n            //$btnUpload.css("display", "none");\n            btnOK.attr("disabled", "true");\n          } else {\n            //$btnUpload.css("display", "block");\n            btnOK.removeAttr("disabled");\n          }\n        });\n        divFlewrap.append(p);\n        divFlewrap.append(closeico);\n        $divFileArea.append(divFlewrap);\n        if (lstLatestFiles.length == 0) {\n          //$btnUpload.css("display", "none");\n          btnOK.attr("disabled", "true");\n        } else {\n          //$btnUpload.css("display", "block");\n          btnOK.removeAttr("disabled");\n        }\n      }\n      if (invalidFiles.length > 0) {\n        var resString = \'\';\n        for (var item in invalidFiles) {\n          resString += invalidFiles[item].toString() + \'\\n\';\n        }\n        if (invalidFiles.length == 1) {\n          resString += \'File has\';\n        } else {\n          resString += \'Files have\';\n        }\n        resString += \' \' + VIS.Msg.getMsg("VIS_InvalidName") + \' \' + VIS.Msg.getMsg("VIS_ChangeFileName");\n        VIS.ADialog.info(resString);\n      }\n    };\n    var UploadFiles = function () {\n      $bsyDiv[0].style.visibility = "visible";\n      var fileInfo = null;\n      var tcSingleFile = 0;\n      var currentChunk = 0;\n      for (var itm in lstLatestFiles) {\n        tcSingleFile = parseInt(lstLatestFiles[itm].size / chunkSize);\n        if (file.size % chunkSize > 0) {\n          tcSingleFile++;\n        }\n        totalChunks += tcSingleFile;\n        fileInfo = {};\n        fileInfo.Name = lstLatestFiles[itm].name;\n        fileInfo.Size = lstLatestFiles[itm].size;\n        filesInfo.push(fileInfo);\n      }\n      var isupload = TransferFile();\n\n      //if (isupload == undefined) {\n      //    btnOK.removeAttr("disabled");\n      //}\n      //else {\n      //    VIS.ADialog.info("NotUploadedTryAgain");\n      //}\n    };\n    var TransferFile = function () {\n      if (lstLatestFiles == null || lstLatestFiles.length == 0) {\n        VIS.ADialog.info("NothingToUpload");\n        $bsyDiv[0].style.visibility = "hidden";\n        return false;\n      }\n      //start import from server\n      if (currentFile >= lstLatestFiles.length) {\n        //VIS.ADialog.info("Upload Done");\n        $bsyDiv[0].style.visibility = "hidden";\n        isOk = true;\n        inforoot.dialog(\'close\');\n        return true;\n      }\n      var xhr = new XMLHttpRequest();\n      var fd = new FormData();\n      fd.append("file", lstLatestFiles[currentFile].slice(currentFileChunkNo * chunkSize, currentFileChunkNo * chunkSize + Number(chunkSize)));\n      xhr.open("POST", VIS.Application.contextUrl + "Attachment/SaveFileinTemp/?filename=" + lstLatestFiles[currentFile].name + "&folderKey=" + folder, false);\n      xhr.send(fd);\n      currentchunk++;\n      currentFileChunkNo++;\n      var totalFileChunk = parseInt(lstLatestFiles[currentFile].size / chunkSize);\n      if (lstLatestFiles[currentFile].size % chunkSize > 0) {\n        totalFileChunk++;\n      }\n      if (currentFileChunkNo == totalFileChunk) {\n        currentFile++;\n        currentFileChunkNo = 0;\n      }\n      //if (currentchunk <= totalChunks) {\n      //    setProgressValue(parseInt((currentchunk / totalChunks) * 80));\n      //}\n      window.setTimeout(function () {\n        TransferFile();\n      }, 2);\n    };\n    var disposeComponent = function () {\n      btnCancel.off(\'click\');\n      btnOK.off(\'click\');\n      $bsyDiv = $divContent = $divTopCon = $divBottomCon = $divBottonRight = btnCancel = btnOK = null;\n      lstLatestFiles = $fileBrowser = $btnSelectFile = $divFileArea = $divBottomLeft = null;\n      currentchunk = currentFile = folder = chunkSize = totalChunks = currentFileChunkNo = filesInfo = null;\n      AppendFile = UploadFiles = TransferFile = loadTables = loadLanguage = loadEDL = loadExportScope = null;\n      //$btnUpload = null;\n      if (inforoot != null) {\n        inforoot.dialog(\'destroy\');\n        inforoot.remove();\n      }\n      inforoot = null;\n    };\n  }\n  ;\n  VIS.VisImportFiles = VisImportFiles;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/visimportfiles.js?')},"./Areas/VIS/Scripts/app/Framework/vpayment.js":()=>{eval(';\n(function (VIS, $) {\n  function VPayment(windowNo, mTab, button) {\n    //Private Variables       \n    var self = this;\n    var ctx = VIS.Env.getCtx();\n    var _initOK = false;\n    //this.Title =VIS.Msg.getMsg("Payment");\n    var _isSOTrx = VIS.context.isSOTrx(windowNo);\n    //\tData from Order/Invoice\n    var _DocStatus = null;\n    // Start Payment Rule       \n    var _PaymentRule = "";\n    // Invoice Currency              \n    var _C_Currency_ID = 0;\n    // Start Acct Date          \n    var _DateAcct = null;\n    // Start Payment Term       \n    var _C_PaymentTerm_ID = 0;\n    // Start Payment            \n    var _C_Payment_ID = 0;\n    var _C_CashLine_ID = 0;\n    // Start CashBook           \n    var _C_CashBook_ID = 0;\n    // Start CreditCard         \n    var _CCType = "";\n    //log\n    this.log = VIS.Logging.VLogger.getVLogger("vPayment");\n    var _AD_Client_ID = 0;\n    var _AD_Org_ID = 0;\n    var _C_BPartner_ID = 0;\n    var inputProperties = {};\n\n    /** Cash = B */\n    var PAYMENTRULE_Cash = "B";\n    /** Direct Debit = D */\n    var PAYMENTRULE_DirectDebit = "D";\n    /** Credit Card = K */\n    var PAYMENTRULE_CreditCard = "K";\n    /** On Credit = P */\n    var PAYMENTRULE_OnCredit = "P";\n    /** Check = S */\n    var PAYMENTRULE_Check = "S";\n    /** Direct Deposit = T */\n    var PAYMENTRULE_DirectDeposit = "T";\n\n    /** Direct Deposit = A */\n    var TENDERTYPE_DirectDeposit = "A";\n    /** Credit Card = C */\n    var TENDERTYPE_CreditCard = "C";\n    /** Direct Debit = D */\n    var TENDERTYPE_DirectDebit = "D";\n    /** Check = K */\n    var TENDERTYPE_Check = "K";\n\n    // Only allow changing Rule        \n    var _onlyRule = false;\n    // this.onClose = null;\n\n    //Variables for From Design             \n    var $maindiv;\n    var ch = null;\n    var bPanel;\n    var kPanel;\n    var tPanel;\n    var sPanel;\n    var pPanel;\n    this.onClose = null;\n    var lblKStatus;\n    var lblTStatus;\n    var lblSStatus;\n    var lblBAmountLabel;\n    var lblBAmountField;\n    var lblSAmountLabel;\n    var lblSAmountField;\n    var lblPaymentLabel;\n    var lblKTypeLabel;\n    var lblKNumnerLabel;\n    var lblKExpLabel;\n    var lblTAccountLabel;\n    var lblKApprovalLabel;\n    var lblSNumberLabel;\n    var lblSRoutingLabel;\n    var lblSCurrencyLabel;\n    var lblBCurrencyLabel;\n    var lblPTermLabel;\n    var lblBDateLabel;\n    var lblSCheckLabel;\n    var lblSBankAccountLabel;\n    var lblBCashBookLabel;\n    var cmbPayment;\n    var cmbKType;\n    var cmbTAccount;\n    var cmbSCurrency;\n    var cmbBCurrency;\n    var cmbPTerm;\n    var cmbSBankAccount;\n    var cmbBCashBook;\n    var btnKOnline;\n    var btnSOnline;\n    var txtKNumber;\n    var txtKExp;\n    var txtKApproval;\n    var txtSNumber;\n    var txtSRouting; //"",true,false,false,70, \n    var txtSCheck;\n\n    //private VDate bDateField;\n    var bDateField;\n    var centerPanel;\n    var bPanelLayout; // TableLayoutPanel();\n    var pPanelLayout;\n    var centerLayout;\n    var kLayout;\n    var tPanelLayout;\n    var sPanelLayout;\n    var tabmenubusy = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i><label>\' + VIS.Msg.getMsg("Loading") + \'</label></div></div>\');\n    //var loadLabel = $(\'<label>\' + VIS.Msg.getMsg("Loading") + \'</label>\');\n\n    this.init = function () {\n      initDesign();\n      _initOK = dynInit(button.values);\n      invokeDynInit(_initOK);\n    };\n    //init();\n    function initDesign() {\n      var mainUpperDiv = $(\'<div class="input-group vis-input-wrap"></div>\');\n      var mainInnerCtrlDiv = $(\'<div class="vis-control-wrap"></div>\');\n      var $mainSpan = null;\n\n      //if (VIS.Application.isRTL) {\n      //    $mainSpan = $(\'<p class="vis-payment-spanPayment-RTL"> \' + VIS.Msg.translate(ctx, \'PaymentMethod\') + \' </p>\');\n      //}\n      //else {\n      $mainSpan = $(\'<label class="vis-payment-spanPayment"> \' + VIS.Msg.translate(ctx, \'PaymentMethod\') + \' </label>\');\n      //}\n      mainUpperDiv.append(mainInnerCtrlDiv);\n      cmbPayment = $(\'<select class="vis-payment-cmbPayment"></select>\');\n      cmbPayment.appendTo(mainInnerCtrlDiv);\n      $mainSpan.appendTo(mainInnerCtrlDiv);\n      mainUpperDiv.appendTo($maindiv);\n      centerPanel = $(\'<table class="vis-payment-table"></table>\');\n      var centerPanelTR = $(\'<tr></tr>\');\n      centerPanel.append(centerPanelTR);\n      /**************CreditCard************************/\n      // CreditCard               \n\n      lblKTypeLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'CreditCardType\') + \'</label>\');\n      lblKNumnerLabel = $(\'<label class="vis-payment-span">\' + VIS.Msg.translate(ctx, \'CreditCardNumber\') + \'</label>\');\n      lblKExpLabel = $(\'<label class="vis-payment-span">\' + VIS.Msg.translate(ctx, \'Expires\') + \'</label>\');\n      lblKApprovalLabel = $(\'<label class="vis-payment-span">\' + VIS.Msg.translate(ctx, \'VoiceAuthCode\') + \'</label>\');\n      btnKOnline = $(\'<label class="vis-payment-span">\' + VIS.Msg.translate(ctx, \'Online\') + \'</label>\');\n      lblKStatus = $(\'<label class="vis-payment-span"></label>\');\n      kPanel = $(\'<table class="vis-payment-table"></table>\');\n      var trkpanel = $(\'<tr></tr>\');\n      kPanel.append(trkpanel);\n      kLayout = $(\'<table class="vis-payment-table"></table>\');\n      trkpanel.append(kLayout);\n      centerPanelTR.append(kPanel);\n      cmbKType = $(\'<select  class="vis-payment-cmb"></select>\');\n      var kltr1 = $(\'<tr></tr>\');\n      //var kltr1td1 = $(\'<td ></td>\');\n      var kltr1td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbKType);\n      $DivControlWrap.append(lblKTypeLabel);\n      kltr1.append(kltr1td2);\n      kltr1td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      //kltr1.append(kltr1td1).append(kltr1td2);\n      kLayout.append(kltr1);\n      txtKNumber = $(\'<input class="vis-payment-inputs" type="text" placeholder=" " data-placeholder="" >\');\n      var kltr2 = $(\'<tr></tr>\');\n      //var kltr2td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var kltr2td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(txtKNumber);\n      $DivControlWrap.append(lblKNumnerLabel);\n      //kltr2.append(kltr2td1).append(kltr2td2);\n      kltr2.append(kltr2td2);\n      kltr2td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      kLayout.append(kltr2);\n      txtKExp = $(\'<input class="vis-payment-inputs"  type="text" placeholder=" " data-placeholder="" >\');\n      var kltr3 = $(\'<tr></tr>\');\n      //var kltr3td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var kltr3td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(txtKExp);\n      $DivControlWrap.append(lblKExpLabel);\n      //kltr3.append(kltr3td1).append(kltr3td2);\n      kltr3.append(kltr3td2);\n      kltr3td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      kLayout.append(kltr3);\n      txtKApproval = $(\'<input class="vis-payment-inputs"  type="text" placeholder=" " data-placeholder="" >\');\n      var kltr4 = $(\'<tr></tr>\');\n      //var kltr4td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var kltr4td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(txtKApproval);\n      $DivControlWrap.append(lblKApprovalLabel);\n      //kltr4.append(kltr4td1).append(kltr4td2);\n      kltr4.append(kltr4td2);\n      kltr4td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      kLayout.append(kltr4);\n      btnKOnline = $(\'<button class="vis-payment-inputs-buttons"  type="button">\' + VIS.Msg.translate(ctx, \'Online\') + \'</button>\');\n      var kltr5 = $(\'<tr></tr>\');\n      var kltr5td1 = $(\'<td></td>\');\n      kltr5td1.append(btnKOnline);\n      kltr5.append(kltr5td1);\n      kLayout.append(kltr5);\n\n      //**************DircetDebit/Credit************************/\n      // DirectDebit/Credit           \n      lblTAccountLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'C_BP_BankAccount_ID\') + \'</label>\');\n      lblTStatus = $(\'<p class="vis-payment-span"> </p>\');\n      tPanel = $(\'<table class="vis-payment-table"></table>\');\n      var tptr = $(\'<tr></tr>\');\n      tPanelLayout = $(\'<table class="vis-payment-table"></table>\');\n      tPanel.append(tptr);\n      tptr.append(tPanelLayout);\n      centerPanelTR.append(tPanel);\n      cmbTAccount = $(\'<select class="vis-payment-cmb"></select>\');\n      var tptr1 = $(\'<tr></tr>\');\n      //var tptr1td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var tptr1td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbTAccount);\n      $DivControlWrap.append(lblTAccountLabel);\n      //tptr1.append(tptr1td1).append(tptr1td2);\n      tptr1.append(tptr1td2);\n      tptr1td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      tPanelLayout.append(tptr1);\n\n      //**************Check************************/\n      /// Check     \n      lblSBankAccountLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'C_BankAccount_ID\') + \'</label>\');\n      lblSAmountLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'Amount\') + \'</label>\');\n      lblSAmountField = $(\'<label class="vis-payment-span vis-payment-AmountField"> </label>\');\n      lblSRoutingLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'RoutingNo\') + \'</label>\');\n      lblSNumberLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'AccountNo\') + \'</label>\');\n      lblSCheckLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'CheckNo\') + \'</label>\');\n      lblSCurrencyLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'C_Currency_ID\') + \'</label>\');\n      //txtSNumber.Width = 180;\n      lblSStatus = $(\'<p class="vis-payment-span"> </p>\');\n      btnSOnline = $(\'<button class="vis-payment-inputs-buttons"  type="button">\' + VIS.Msg.translate(ctx, \'Online\') + \'</button>\');\n      sPanel = $(\'<table class="vis-payment-table"></table>\');\n      var sPanelTr = $(\'<tr></tr>\');\n      sPanelLayout = $(\'<table class="vis-payment-table"></table>\');\n      sPanelTr.append(sPanelLayout);\n      sPanel.append(sPanelTr);\n      centerPanelTR.append(sPanel);\n      cmbSBankAccount = $(\'<select class="vis-payment-cmb"></select>\');\n      var spstr1 = $(\'<tr></tr>\');\n      //var spstr1td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var spstr1td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbSBankAccount);\n      $DivControlWrap.append(lblSBankAccountLabel);\n      //spstr1.append(spstr1td1).append(spstr1td2);\n      spstr1.append(spstr1td2);\n      spstr1td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      sPanelLayout.append(spstr1);\n      lblSAmountField = $(\'<input type="text" readonly class="vis-payment-span vis-payment-AmountField">\');\n      var spstr2 = $(\'<tr></tr>\');\n      //var spstr2td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var spstr2td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(lblSAmountField);\n      $DivControlWrap.append(lblSAmountLabel);\n      //spstr2.append(spstr2td1).append(spstr2td2);\n      spstr2.append(spstr2td2);\n      spstr2td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      sPanelLayout.append(spstr2);\n      txtSRouting = $(\'<input class="vis-payment-inputs" type="text" placeholder=" " data-placeholder="" >\');\n      var spstr3 = $(\'<tr></tr>\');\n      //var spstr3td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var spstr3td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(txtSRouting);\n      $DivControlWrap.append(lblSRoutingLabel);\n      //spstr3.append(spstr3td1).append(spstr3td2);\n      spstr3.append(spstr3td2);\n      spstr3td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      sPanelLayout.append(spstr3);\n      txtSNumber = $(\'<input class="vis-payment-inputs" type="text" placeholder=" " data-placeholder="" >\');\n      var spstr4 = $(\'<tr></tr>\');\n      //var spstr4td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var spstr4td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(txtSNumber);\n      $DivControlWrap.append(lblSNumberLabel);\n      //spstr4.append(spstr4td1).append(spstr4td2);\n      spstr4.append(spstr4td2);\n      spstr4td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      sPanelLayout.append(spstr4);\n      txtSCheck = $(\'<input class="vis-payment-inputs"  type="text" placeholder=" " data-placeholder="" >\');\n      var spstr5 = $(\'<tr></tr>\');\n      //var spstr5td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var spstr5td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(txtSCheck);\n      $DivControlWrap.append(lblSCheckLabel);\n      //spstr5.append(spstr5td1).append(spstr5td2);\n      spstr5.append(spstr5td2);\n      spstr5td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      sPanelLayout.append(spstr5);\n\n      //not know where it will appear in the form\n      cmbSCurrency = $(\'<select class="vis-payment-cmb"></select>\');\n      var spstr6 = $(\'<tr></tr>\');\n      //var spstr6td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var spstr6td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbSCurrency);\n      $DivControlWrap.append(lblSCurrencyLabel);\n      //spstr6.append(spstr6td1).append(spstr6td2);\n      spstr6.append(spstr6td2);\n      spstr6td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      sPanelLayout.append(spstr6);\n      btnSOnline = $(\'<button class="vis-payment-inputs-buttons"  type="button">\' + VIS.Msg.translate(ctx, \'Online\') + \'</button>\');\n      var spstr7 = $(\'<tr></tr>\');\n      var spstr7td1 = $(\'<td colspan="2"></td>\');\n      spstr7td1.append(btnSOnline);\n      spstr7.append(spstr7td1);\n      sPanelLayout.append(spstr7);\n\n      //**************On Credit************************/\n      // On Credit     \n      lblPTermLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'C_PaymentTerm_ID\') + \'</label>\');\n      pPanel = $(\'<table  class="vis-payment-table"></table>\');\n      var pPanelTr = $(\'<tr></tr>\');\n      pPanelLayout = $(\'<table  class="vis-payment-table"></table>\');\n      pPanelTr.append(pPanelLayout);\n      pPanel.append(pPanelTr);\n      centerPanelTR.append(pPanel);\n      cmbPTerm = $(\'<select class="vis-payment-cmb"></select>\');\n      var ppltr1 = $(\'<tr></tr>\');\n      //var ppltr1td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var ppltr1td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbPTerm);\n      $DivControlWrap.append(lblPTermLabel);\n      //ppltr1.append(ppltr1td1).append(ppltr1td2);\n      ppltr1.append(ppltr1td2);\n      ppltr1td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      pPanelLayout.append(ppltr1);\n\n      //**************Cash************************/\n      // Cash            \n      lblBCashBookLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'C_CashBook_ID\') + \'</label>\');\n      lblBCurrencyLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'C_Currency_ID\') + \'</label>\');\n      lblBAmountLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'Amount\') + \'</label>\');\n      lblBAmountField = $(\'<label class="vis-payment-span vis-payment-AmountField"> </label>\');\n      lblBDateLabel = $(\'<label class="vis-payment-span"> \' + VIS.Msg.translate(ctx, \'DateAcct\') + \'</label>\');\n      bPanel = $(\'<table class="vis-payment-table"></table>\');\n      var bPanelTr = $(\'<tr></tr>\');\n      bPanelLayout = $(\'<table class="vis-payment-table"></table>\');\n      bPanelTr.append(bPanelLayout);\n      bPanel.append(bPanelTr);\n      centerPanelTR.append(bPanel);\n      cmbBCurrency = $(\'<select class="vis-payment-cmb"></select>\');\n      var bPltr1 = $(\'<tr></tr>\');\n      //var bPltr1td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var bPltr1td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbBCurrency);\n      $DivControlWrap.append(lblBCurrencyLabel);\n      //bPltr1.append(bPltr1td1).append(bPltr1td2);\n      bPltr1.append(bPltr1td2);\n      bPltr1td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      bPanelLayout.append(bPltr1);\n      cmbBCashBook = $(\'<select class="vis-payment-cmb"></select>\');\n      var bPltr2 = $(\'<tr></tr>\');\n      //var bPltr2td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var bPltr2td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(cmbBCashBook);\n      $DivControlWrap.append(lblBCashBookLabel);\n      //bPltr2.append(bPltr2td1).append(bPltr2td2);\n      bPltr2.append(bPltr2td2);\n      bPltr2td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      bPanelLayout.append(bPltr2);\n      bDateField = $(\'<input class="vis-payment-inputs vis-payment-date" type="date" placeholder=" " data-placeholder="" >\');\n      var bPltr3 = $(\'<tr></tr>\');\n      //var bPltr3td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var bPltr3td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(bDateField);\n      $DivControlWrap.append(lblBDateLabel);\n      //bPltr3.append(bPltr3td1).append(bPltr3td2);\n      bPltr3.append(bPltr3td2);\n      bPltr3td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      bPanelLayout.append(bPltr3);\n\n      //lblBAmountField = $(\'<p class="vis-payment-span vis-payment-AmountField"> </p> \');\n      lblBAmountField = $(\'<input type="text" readonly class="vis-payment-span vis-payment-AmountField"> \');\n      var bPltr4 = $(\'<tr></tr>\');\n      //var bPltr4td1 = $(\'<td class="vis-payment-td1"></td>\');\n      var bPltr4td2 = $(\'<td class="vis-payment-td2"></td>\');\n      var $DivInputWrap = $(\'<div class="input-group vis-input-wrap">\');\n      var $DivControlWrap = $(\'<div class="vis-control-wrap">\');\n      $DivControlWrap.append(lblBAmountField);\n      $DivControlWrap.append(lblBAmountLabel);\n      //bPltr4.append(bPltr4td1).append(bPltr4td2);\n      bPltr4.append(bPltr4td2);\n      bPltr4td2.append($DivInputWrap);\n      $DivInputWrap.append($DivControlWrap);\n      bPanelLayout.append(bPltr4);\n      $maindiv.append(centerPanel);\n    }\n    ;\n    function dynInit(values) {\n      var retval = false;\n      _DocStatus = mTab.getValue("DocStatus");\n      //   this.log.config(_DocStatus);\n\n      if (mTab.getValue("C_BPartner_ID") == null) {\n        VIS.ADialog.error("0", true, VIS.Msg.getMsg("SaveErrorRowNotFound"));\n        retval = false;\n        return retval;\n      }\n\n      //  DocStatus\n      _DocStatus = mTab.getValue("DocStatus");\n      if (_DocStatus == null) {\n        _DocStatus = "";\n      }\n      //\tIs the Trx closed?\t\tReversed / Voided / Cloased\n      if (_DocStatus.equals("RE") || _DocStatus.equals("VO") || _DocStatus.equals("CL")) {\n        retval = false;\n        return retval;\n      }\n      //  Document is not complete - allow to change the Payment Rule only\n      if (_DocStatus.equals("CO") || _DocStatus.equals("WP")) {\n        _onlyRule = false;\n      } else {\n        _onlyRule = true;\n      }\n      //\tPO only  Rule\n      if (!_onlyRule //\tOnly order has Warehouse\n      && !_isSOTrx && mTab.getValue("M_Warehouse_ID") != null) {\n        _onlyRule = true;\n      }\n      if (_onlyRule) {\n        centerPanel.hide();\n      } else {\n        centerPanel.show();\n      }\n\n      //  Amount\n      _Amount = mTab.getValue("GrandTotal");\n      if (!_onlyRule && _Amount == 0) {\n        //ADialog.error(m_WindowNo, this, "PaymentZero");\n        VIS.ADialog.error("", true, VIS.Msg.getMsg("PaymentZero"));\n        retval = false;\n        return retval;\n      }\n\n      //Get Data from Grid\n      _AD_Client_ID = parseInt(mTab.getValue("AD_Client_ID"));\n      _AD_Org_ID = parseInt(mTab.getValue("AD_Org_ID")); //.intValue();\n      _C_BPartner_ID = parseInt(mTab.getValue("C_BPartner_ID")); //.intValue();\n      _PaymentRule = mTab.getValue("PaymentRule");\n      _C_Currency_ID = parseInt(mTab.getValue("C_Currency_ID")); //.intValue();\n      _DateAcct = mTab.getValue("DateAcct");\n      if (mTab.getValue("C_PaymentTerm_ID") != null || mTab.getValue("C_PaymentTerm_ID") != {}) {\n        _C_PaymentTerm_ID = parseInt(mTab.getValue("C_PaymentTerm_ID")); //.intValue();\n      }\n      if (mTab.getValue("C_Payment_ID") != null && mTab.getValue("C_Payment_ID") != {}) {\n        _C_Payment_ID = parseInt(mTab.getValue("C_Payment_ID")); //.intValue();\n      }\n      if (mTab.getValue("C_CashLine_ID") != null && mTab.getValue("C_CashLine_ID") != {}) {\n        _C_CashLine_ID = parseInt(mTab.getValue("C_CashLine_ID")); //.intValue();\n      }\n      inputProperties = {\n        _DocStatus: _DocStatus,\n        _isSOTrx: _isSOTrx,\n        _AD_Client_ID: _AD_Client_ID,\n        _AD_Org_ID: _AD_Org_ID,\n        _C_BPartner_ID: _C_BPartner_ID,\n        _PaymentRule: _PaymentRule,\n        _C_Currency_ID: _C_Currency_ID,\n        _DateAcct: _DateAcct,\n        _C_PaymentTerm_ID: _C_PaymentTerm_ID,\n        _C_Payment_ID: _C_Payment_ID,\n        _C_CashLine_ID: _C_CashLine_ID,\n        values: JSON.stringify(values),\n        _Amount: _Amount\n      };\n      $.ajax({\n        url: VIS.Application.contextUrl + \'PaymentRule/LoadPaymentMethodDetails\',\n        type: \'POST\',\n        async: false,\n        dataType: \'Json\',\n        data: inputProperties,\n        success: function (data) {\n          setVisibility(false);\n          var result = JSON.parse(data);\n          _CCType = result.CCType;\n\n          //centerPanel.Visibility = !_onlyRule;\n          if (_onlyRule) {\n            centerPanel.hide();\n          } else {\n            centerPanel.show();\n          }\n          lblBAmountField.val(_Amount);\n          lblSAmountField.val(_Amount);\n          txtKNumber.val(result.strKNumber);\n          txtKExp.val(result.strKExp);\n          txtKApproval.val(result.strKApproval);\n          lblKStatus.val(result.strKStatus);\n          if (result.canChange) {\n            cmbKType.attr(\'disable\', false);\n            txtKNumber.attr(\'disable\', false);\n            txtKExp.attr(\'disable\', false);\n            txtKApproval.attr(\'disable\', false);\n            btnKOnline.attr(\'disable\', false);\n          }\n          txtSRouting.val(result.StrSRouting);\n          txtSNumber.val(result.StrSNumber);\n          txtSCheck.val(result.StrSCheck);\n          lblSStatus.text(result.StrSStatus);\n          //  Transfer\n          lblTStatus.text(result.StrTStatus);\n\n          //\tAccounting Date\n\n          if (_DateAcct != null) {\n            bDateField.Value = _DateAcct;\n          }\n          //\tIs the currency an EMU currency?\n          var C_Currency_ID = _C_Currency_ID;\n          if (result._Currencies != null && result._Currencies != undefined && result._Currencies[_C_Currency_ID]) {\n            //IEnumerator en = (IEnumerator)_Currencies.Keys.GetEnumerator();\n            //while (en.MoveNext())\n            //{\n            //    Object key = en.Current;\n            //    cmbBCurrency.Items.Add(_Currencies[(int)key]);\n            //    cmbSCurrency.Items.Add(_Currencies[(int)key]);\n            //}\n\n            $.each(result._Currencies, function (key, name) {\n              cmbSCurrency.append($("<option></option>").attr("value", name.Key).text(name.Name));\n            });\n            $.each(result._Currencies, function (key, name) {\n              cmbBCurrency.append($("<option></option>").attr("value", name.Key).text(name.Name));\n            });\n\n            //cmbSCurrency.SelectedItem = _Currencies[C_Currency_ID];\n            //cmbBCurrency.SelectedItem = _Currencies[C_Currency_ID];\n          } else\n            //\tNo EMU Currency\n            {\n              lblBCurrencyLabel.hide(); //\tCash\n              cmbBCurrency.hide();\n              lblSCurrencyLabel.hide(); //\tCheck\n              cmbSCurrency.hide();\n            }\n\n          //Payment Combo\n          if (_PaymentRule == null) {\n            _PaymentRule = "";\n          }\n          for (var a in button.values) {\n            var PaymentRule = a;\n            if (PAYMENTRULE_DirectDebit.equals(PaymentRule) //\tSO\n            && !_isSOTrx) {\n              continue;\n            } else if (PAYMENTRULE_DirectDeposit.equals(PaymentRule) //\tPO \n            && _isSOTrx) {\n              continue;\n            }\n            cmbPayment.append($(\'<option value="\' + PaymentRule + \'">\' + button.values[a] + \'</option>\'));\n            if (PaymentRule.equals(_PaymentRule))\n              //\tto select\n              {\n                cmbPayment.val(PaymentRule); //  = pp;\n              }\n          }\n          if (result.loadPaymentTerms != null && result.loadPaymentTerms != undefined) {\n            //Load Payment Terms\n            $.each(result.loadPaymentTerms, function (key, name) {\n              cmbPTerm.append($("<option></option>").attr("value", name.Key).text(name.Name));\n            });\n\n            //\tSet Selection\n            if (_C_PaymentTerm_ID != null && _C_PaymentTerm_ID != undefined) {\n              cmbPTerm.val(_C_PaymentTerm_ID);\n            }\n          }\n          if (result.loadAccounts != null && result.loadAccounts != undefined) {\n            //Load Accounts\n            $.each(result.loadAccounts, function (key, name) {\n              cmbTAccount.append($(\'<option></option>\').attr("value", name.Key).text(name.Name));\n            });\n            if (result.kp != null) {\n              cmbTAccount.val(result.kp);\n            }\n          }\n          if (result.ccs != null && result.ccs != undefined) {\n            //Load Credit Cards\n            $.each(result.ccs, function (key, name) {\n              cmbKType.append($(\'<option></option>\').attr("value", name.Key).text(name.Name));\n            });\n            //\tSet Selection\n            if (result.CCType != null) {\n              cmbKType.val(result.CCType);\n            }\n          }\n          if (result.loadBankAccounts != null && result.loadBankAccounts != undefined) {\n            //Load Bank Accounts\n            $.each(result.loadBankAccounts, function (key, name) {\n              cmbSBankAccount.append($(\'<option></option>\').attr("value", name.Key).text(name.Name));\n            });\n            if (result.kp != null) {\n              cmbSBankAccount.val(result.kp);\n            }\n          }\n          if (result.Checkbook_ID != null) {\n            cmbSBankAccount.val(result.Checkbook_ID);\n          }\n          if (result.loadCashBooks != null && result.loadCashBooks != undefined) {\n            //Load Cash Books\n            $.each(result.loadCashBooks, function (key, name) {\n              cmbBCashBook.append($(\'<option></option>\').attr("value", name.Key).text(name.Name));\n            });\n          }\n\n          //\tSet Selection\n          if (result.Checkbook_ID != null) {\n            cmbBCashBook.val(result.Checkbook_ID);\n            if (_C_CashBook_ID == 0) {\n              _C_CashBook_ID = result.Checkbook_ID; //  set to default to avoid \'cashbook changed\' message\n            }\n          }\n          if (_PaymentRule == "B") {\n            kPanel.hide();\n            pPanel.hide();\n            bPanel.show();\n            tPanel.hide();\n            sPanel.hide();\n          } else if (_PaymentRule == "K") {\n            kPanel.show();\n            pPanel.hide();\n            bPanel.hide();\n            tPanel.hide();\n            sPanel.hide();\n          } else if (_PaymentRule == "D") {\n            kPanel.hide();\n            pPanel.hide();\n            bPanel.hide();\n            tPanel.show();\n            sPanel.hide();\n          } else if (_PaymentRule == "P") {\n            kPanel.hide();\n            pPanel.show();\n            bPanel.hide();\n            tPanel.hide();\n            sPanel.hide();\n          } else if (_PaymentRule == "S") {\n            kPanel.hide();\n            pPanel.hide();\n            bPanel.hide();\n            tPanel.hide();\n            sPanel.show();\n          }\n          retval = true;\n          return retval;\n        }\n      });\n      return retval;\n    }\n    ;\n    function invokeDynInit(_initOK) {\n      if (_initOK != undefined && !_initOK) {\n        ch.close();\n        return;\n      }\n      //else {\n      //    SetBusy(false);\n      //}\n      cmbPayment.on("change", cmbpaymentChanged);\n      cmbSCurrency.on("change", cmbSCurrencyChanged);\n      cmbBCurrency.on("change", cmbBCurrencyChanged);\n      btnKOnline.on("click", btnKOnlineClick);\n\n      //Ok button click\n      ch.onOkClick = function () {\n        setVisibility(true);\n        var savea = save();\n        if (savea) {\n          self.isOKPressed = true;\n          if (self.onClose) {\n            self.onClose();\n          }\n        } else {\n\n          //setVisibility(false);\n          //return false;\n        }\n      };\n\n      //Cancel button click\n      ch.onCancelClick = function () {\n        if (self.onClose) {\n          self.onClose();\n        }\n      };\n      ch.onClose = function () {\n        self.dispose();\n      };\n    }\n    ;\n    function cmbpaymentChanged(cmb) {\n      //\tget selection\n      var pp = cmbPayment.val();\n      if (pp != null) {\n        var s = pp.toLower();\n        //if (X_C_Order.PAYMENTRULE_DirectDebit.equalsIgnoreCase(s))\n        if (PAYMENTRULE_DirectDebit == s.toLower() || PAYMENTRULE_DirectDebit == s.toUpper()) {\n          s = PAYMENTRULE_DirectDeposit.toLower();\n        }\n        s += "Panel";\n        //centerLayout.Show(centerPanel, s);\t//\tswitch to panel\n        // centerPanel.Show();\n\n        if (pp.equals("K")) {\n          kPanel.show();\n          pPanel.hide();\n          bPanel.hide();\n          tPanel.hide();\n          sPanel.hide();\n        } else if (pp.equals("B")) {\n          kPanel.hide();\n          pPanel.hide();\n          bPanel.show();\n          tPanel.hide();\n          sPanel.hide();\n        } else if (pp.equals("D")) {\n          kPanel.hide();\n          pPanel.hide();\n          bPanel.hide();\n          tPanel.show();\n          sPanel.hide();\n        } else if (pp.equals("P")) {\n          kPanel.hide();\n          pPanel.show();\n          bPanel.hide();\n          tPanel.hide();\n          sPanel.hide();\n        } else if (pp.equals("S")) {\n          kPanel.hide();\n          pPanel.hide();\n          bPanel.hide();\n          tPanel.hide();\n          sPanel.show();\n        } else if (pp.equals("T")) {\n          kPanel.hide();\n          pPanel.hide();\n          bPanel.hide();\n          tPanel.hide();\n          sPanel.hide();\n        }\n      }\n    }\n    ;\n    function cmbSCurrencyChanged(cmb) {}\n    ;\n    function cmbBCurrencyChanged(cmb) {}\n    ;\n    function btnKOnlineClick(btn) {}\n    ;\n    function save() {\n      var returnval = true;\n      var dataOK = checkMandatory();\n      if (!dataOK) {\n        returnval = false;\n        return returnval;\n      }\n      var newPaymentRule = cmbPayment.val();\n      if (newPaymentRule == null) return;\n      if (_onlyRule) {\n        if (newPaymentRule) {\n          if (!newPaymentRule.equals(_PaymentRule)) {\n            mTab.setValue("PaymentRule", newPaymentRule);\n          }\n          returnval = true;\n          return returnval;\n        }\n      }\n      inputProperties[\'cmbPayment\'] = cmbPayment.val();\n      if (newPaymentRule.equals(PAYMENTRULE_Cash)) {\n        inputProperties[\'cmbBCurrency\'] = cmbBCurrency.val();\n        inputProperties[\'cmbBCashBook\'] = cmbBCashBook.val();\n        inputProperties[\'bDateField\'] = bDateField.val();\n        ///saveValues = { cmbBCurrency: cmbBCurrency.val(), cmbBCashBook: cmbBCashBook.val(), bDateField: bDateField.val() };\n      }\n\n      //\tK (CreditCard)  Type, Number, Exp, Approval\n      else if (newPaymentRule.equals(PAYMENTRULE_CreditCard)) {\n        inputProperties[\'cmbKType\'] = cmbKType.val();\n        inputProperties[\'txtKNumber\'] = txtKNumber.val();\n        inputProperties[\'txtKExp\'] = txtKExp.val();\n        inputProperties[\'txtKApproval\'] = txtKApproval.val();\n        //saveValues = {cmbKType:cmbKType.val(), txtKNumber: txtKNumber.val(), txtKExp: txtKExp.val(), txtKApproval: txtKApproval.val() };\n      } else if (newPaymentRule.equals(PAYMENTRULE_DirectDeposit)) {\n        inputProperties[\'cmbTAccount\'] = cmbTAccount.val();\n        //saveValues = { cmbTAccount: cmbTAccount.val() };\n      } else if (newPaymentRule.equals(PAYMENTRULE_OnCredit)) {\n        inputProperties[\'cmbPTerm\'] = cmbPTerm.val();\n\n        //  saveValues = { cmbPTerm: cmbPTerm.val() };\n      } else if (newPaymentRule.equals(PAYMENTRULE_Check)) {\n        inputProperties[\'cmbSBankAccount\'] = cmbSBankAccount.val();\n        inputProperties[\'txtSRouting\'] = txtSRouting.val();\n        inputProperties[\'txtSNumber\'] = txtSNumber.val();\n        inputProperties[\'txtSCheck\'] = txtSCheck.val();\n        inputProperties[\'cmbSCurrency\'] = cmbSCurrency.val();\n        //  saveValues = { cmbSBankAccount: cmbSBankAccount.val(), txtSRouting: txtSRouting.val(), txtSNumber: txtSNumber.val(), txtSCheck: txtSCheck.val(), cmbSCurrency: cmbSCurrency.val() };\n      }\n      inputProperties[\'C_Order_ID\'] = ctx.getContextAsInt(windowNo, "C_Order_ID");\n      inputProperties[\'C_Invoice_ID\'] = ctx.getContextAsInt(windowNo, "C_Invoice_ID");\n      $.ajax({\n        url: VIS.Application.contextUrl + \'PaymentRule/SaveChanges\',\n        type: \'POST\',\n        async: false,\n        dataType: \'Json\',\n        data: inputProperties,\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result.ErrorMsg != null && result.ErrorMsg != "" && result.ErrorMsg != undefined) {\n            alert(result.ErrorMsg);\n          }\n          if (result.SucessMsg != null && result.SucessMsg != "" && result.SucessMsg != undefined) {\n            alert(result.SucessMsg);\n          }\n          /**********************\r\n          *\tSave Values to mTab\r\n          */\n          //log.config("Saving changes");\n\n          //\n          if (result.newPaymentRule != null && result.newPaymentRule != undefined && !result.newPaymentRule.equals(_PaymentRule)) {\n            mTab.setValue("PaymentRule", result.newPaymentRule);\n          }\n          //\n\n          if (result.newDateAcct != null && result.newDateAcct != undefined && !result.newDateAcct.equals(_DateAcct)) {\n            mTab.setValue("DateAcct", result.newDateAcct);\n          }\n          //\n          if (result.newC_PaymentTerm_ID != _C_PaymentTerm_ID && result.newC_PaymentTerm_ID > 0) {\n            mTab.setValue("C_PaymentTerm_ID", result.newC_PaymentTerm_ID);\n          }\n          //\tSet Payment\n          if (result._C_Payment_ID != _C_Payment_ID) {\n            if (result._C_Payment_ID == 0) {\n              mTab.setValue("C_Payment_ID", null);\n            } else {\n              mTab.setValue("C_Payment_ID", result._C_Payment_ID);\n            }\n          }\n          //\tSet Cash\n          if (result._C_CashLine_ID != _C_CashLine_ID) {\n            if (result._C_CashLine_ID == 0) {\n              mTab.setValue("C_CashLine_ID", null);\n            } else {\n              mTab.setValue("C_CashLine_ID", result._C_CashLine_ID);\n            }\n          }\n          returnval = true;\n          return returnval;\n        },\n        error: function () {\n          returnval = false;\n          return returnval;\n        }\n      });\n      return returnval;\n    }\n    ;\n\n    /// <summary>\n    /// Check Mandatory\n    /// </summary>\n    /// <returns>true if all mandatory items are OK</returns>\n    function checkMandatory() {\n      var dataOK = true;\n      try {\n        //\tlog.config( "VPayment.checkMandatory");\n\n        var vp = cmbPayment.val();\n        if (vp == null || vp == undefined) {\n          return false;\n        }\n        var PaymentRule = vp;\n        //  only Payment Rule\n        if (_onlyRule) {\n          return true;\n        }\n        var DateAcct = _DateAcct;\n        var C_PaymentTerm_ID = _C_PaymentTerm_ID;\n        var C_CashBook_ID = _C_CashBook_ID;\n        var CCType = _CCType;\n        //\n        var C_BankAccount_ID = 0;\n\n        /***********************\r\n         *\tMandatory Data Check\r\n         */\n\n        //\tB (Cash)\t\t(Currency)\n        if (PaymentRule.equals(PAYMENTRULE_Cash)) {\n          C_CashBook_ID = cmbBCashBook.val();\n          DateAcct = bDateField.val();\n        }\n\n        //\tK (CreditCard)  Type, Number, Exp, Approval\n        else if (PaymentRule.equals(PAYMENTRULE_CreditCard)) {\n          CCType = cmbKType.val();\n          if (txtKNumber.val() == null || txtKNumber.val() == "" || txtKNumber.val() == undefined) {\n            VIS.ADialog.error("", true, VIS.Msg.getMsg("CreditCardNumberError"));\n            dataOK = false;\n          }\n          //if (vp != null)\n          //{\n          //    CCType = vp.GetValue();\n          //}\n          ////\n          //String error = MPaymentValidate.ValidateCreditCardNumber(txtKNumber.Text, CCType);\n          //if (error.Length != 0)\n          //{\n          //    txtKNumber.BackColor = GlobalVariable.MANDATORY_TEXT_BACK_COLOR;\n          //    //MessageBox.Show("getFieldBackground_Error()");\n          //    if (error.IndexOf("?") == -1)\n          //    {\n          //        //ADialog.error(_WindowNo, this, error);\n          //        ShowMessage.Error("", true, Msg.GetMsg(GetCtx(),error, true).ToString());\n          //        dataOK = false;\n          //    }\n          //    else    //  warning\n          //    {\n          //        //if (!ADialog.ask(_WindowNo, this, error))\n          //        if (!ShowMessage.Ask("", true, error))\n          //        {\n          //            dataOK = false;\n          //        }\n          //    }\n          //}\n          //error = MPaymentValidate.ValidateCreditCardExp(txtKExp.Text);\n          //if (error.Length != 0)\n          //{\n          //    txtKExp.BackColor = GlobalVariable.MANDATORY_TEXT_BACK_COLOR;\n          //    //ADialog.error(_WindowNo, this, error);\n          //    ShowMessage.Error("", true, Msg.GetMsg(GetCtx(),error, true).ToString());\n          //    //Msg.GetMsg(GetCtx(),error, true);\n          //    dataOK = false;\n          //}\n        }\n\n        //\tT (Transfer)\tBPartner_Bank\n        else if (PaymentRule.equals(PAYMENTRULE_DirectDeposit) || PaymentRule.equals(PAYMENTRULE_DirectDebit)) {\n          var bpba = cmbTAccount.val();\n          if (bpba == null) {\n            //ADialog.error(_WindowNo, this, "PaymentBPBankNotFound");\n            // cmbTAccount.ccs(\'background-color\', \'Red\');\n            VIS.ADialog.error("", true, VIS.Msg.getMsg("PaymentBPBankNotFound"));\n            dataOK = false;\n          }\n        } //\tDirect\n\n        //\tP (PaymentTerm)\tPaymentTerm\n        else if (PaymentRule.equals(PAYMENTRULE_OnCredit)) {\n          C_PaymentTerm_ID = cmbPTerm.val();\n          if (kp != null) {\n            C_PaymentTerm_ID = kp;\n          }\n        }\n\n        //\tS (Check)\t\t(Currency) CheckNo, Routing\n        else if (PaymentRule.equals(PAYMENTRULE_Check)) {\n          //\tcmbSCurrency.SelectedItem;\n          var kp = cmbSBankAccount.val();\n          if (kp != null) {\n            C_BankAccount_ID = kp;\n          }\n          //String error = MPaymentValidate.ValidateRoutingNo(txtSRouting.Text);\n          if (txtSRouting.val() == null || txtSRouting.val() == "" || txtSRouting.val() == undefined) {\n            //txtSRouting.BackColor = GlobalVariable.MANDATORY_TEXT_BACK_COLOR;\n            //ADialog.error(_WindowNo, this, error);\n            VIS.ADialog.error("", true, VIS.Msg.getMsg("PaymentBankRoutingNotValid"));\n            //ShowMessage.Error(error, true, error);\n            dataOK = false;\n          }\n          //error = MPaymentValidate.ValidateAccountNo(txtSNumber.Text);\n          if (txtSNumber.val() == null || txtSNumber.val() == "" || txtSNumber.val() == undefined) {\n            // txtSNumber.BackColor = GlobalVariable.MANDATORY_TEXT_BACK_COLOR;\n            //ADialog.error(_WindowNo, this, error);\n            VIS.ADialog.error("", true, VIS.Msg.getMsg("PaymentBankAccountNotValid"));\n            //ShowMessage.Error("", true, error);\n            dataOK = false;\n          }\n          //error = MPaymentValidate.ValidateCheckNo(txtSCheck.Text);\n          if (txtSCheck.val() == null || txtSCheck.val() == "" || txtSCheck.val() == undefined) {\n            //txtSCheck.BackColor = GlobalVariable.MANDATORY_TEXT_BACK_COLOR;\n            //ADialog.error(_WindowNo, this, error);\n            VIS.ADialog.error("", true, VIS.Msg.getMsg("PaymentBankCheckNotValid"));\n            //ShowMessage.Error("", true, error);\n            dataOK = false;\n          }\n        } else {\n          //log.log(Level.SEVERE, "Unknown PaymentRule " + PaymentRule);\n          return false;\n        }\n\n        //  find Bank Account if not qualified yet\n        if ("KTSD".indexOf(PaymentRule) != -1 && C_BankAccount_ID == 0) {\n          var tender = TENDERTYPE_CreditCard;\n          if (PaymentRule.equals(PAYMENTRULE_DirectDeposit)) {\n            tender = TENDERTYPE_DirectDeposit;\n          } else if (PaymentRule.equals(PAYMENTRULE_DirectDebit)) {\n            tender = TENDERTYPE_DirectDebit;\n          } else if (PaymentRule.equals(PAYMENTRULE_Check)) {\n            tender = TENDERTYPE_Check;\n          }\n          //\tCheck must have a bank account\n          if (C_BankAccount_ID == 0 && "S".equals(PaymentRule)) {\n            //ADialog.error(_WindowNo, this, "PaymentNoProcessor");\n            VIS.ADialog.error("", true, VIS.Msg.getMsg("PaymentNoProcessor"));\n            dataOK = false;\n          }\n        }\n      } catch (ex) {\n        log.Severe(ex.ToString());\n        //MessageBox.Show("VPayment--CheckMandatory");\n      }\n      //log.config("OK=" + dataOK);\n      return dataOK;\n    }\n    function setVisibility(tvisible) {\n      if (tvisible) {\n        tabmenubusy.show(); /*loadLabel.show();*/\n        $maindiv.find("button").prop("disabled", true);\n      } else {\n        tabmenubusy.hide();\n        //loadLabel.hide();\n        $maindiv.find("button").prop("disabled", false);\n      }\n    }\n\n    /// <summary>\n    /// Init OK to be able to make changes?\n    /// </summary>\n    /// <returns>true if init OK</returns>\n    this.isInitOK = function () {\n      return _initOK;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      $maindiv = $(\'<div class="vis-formouterwrpdiv"></div>\');\n      $maindiv.append(tabmenubusy) /*.append(loadLabel)*/;\n      setVisibility(true);\n      ch.setContent($maindiv);\n      ch.setWidth(360);\n      ch.setTitle(VIS.Msg.getMsg("Payment"));\n      ch.setModal(true);\n      ch.show();\n    };\n    this.onClose = null;\n    this.dispose = function () {\n      if ($maindiv != null) {\n        $maindiv = null;\n      }\n      ch = null;\n      bPanel = null;\n      kPanel = null;\n      tPanel = null;\n      sPanel = null;\n      pPanel = null;\n      this.onClose = null;\n      lblKStatus = null;\n      lblTStatus = null;\n      lblSStatus = null;\n      lblBAmountLabel = null;\n      lblBAmountField = null;\n      lblSAmountLabel = null;\n      lblSAmountField = null;\n      lblPaymentLabel = null;\n      lblKTypeLabel = null;\n      lblKNumnerLabel = null;\n      lblKExpLabel = null;\n      lblTAccountLabel = null;\n      lblKApprovalLabel = null;\n      lblSNumberLabel = null;\n      lblSRoutingLabel = null;\n      lblSCurrencyLabel = null;\n      lblBCurrencyLabel = null;\n      lblPTermLabel = null;\n      lblBDateLabel = null;\n      lblSCheckLabel = null;\n      lblSBankAccountLabel = null;\n      lblBCashBookLabel = null;\n      cmbPayment = null;\n      cmbKType = null;\n      cmbTAccount = null;\n      cmbSCurrency = null;\n      cmbBCurrency = null;\n      cmbPTerm = null;\n      cmbSBankAccount = null;\n      cmbBCashBook = null;\n      btnKOnline = null;\n      btnSOnline = null;\n      txtKNumber = null;\n      txtKExp = null;\n      txtKApproval = null;\n      txtSNumber = null;\n      txtSRouting = null; //"",true,false,false,70, \n      txtSCheck = null;\n\n      //private VDate bDateField;\n      bDateField = null;\n      bPanelLayout = null; // TableLayoutPanel();\n      pPanelLayout = null;\n      centerLayout = null;\n      kLayout = null;\n      tPanelLayout = null;\n      sPanelLayout = null;\n    };\n  }\n  ;\n  VIS.VPayment = VPayment;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/vpayment.js?')},"./Areas/VIS/Scripts/app/Framework/vsetup.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Create New Tenant\r\n * Author         :     Lakhwinder\r\n * Date           :     10-Oct-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  VIS.Apps = VIS.Apps || {};\n  VIS.Apps.AForms = VIS.Apps.AForms || {};\n  function VSetup() {\n    var url = VIS.Application.contextFullUrl;\n    if (!url) url = VIS.Application.contextUrl;\n    if (url) {\n      if (url.toString().toLowerCase().indexOf("softwareonthecloud.com") > -1) {\n        VIS.ADialog.info("VIS_GotoControlPanel", true, "", "");\n        return;\n      }\n    }\n    var $root = $("<div class=\'vis-forms-container\' style=\'height:100%\'>");\n    // $root.height($(window).height() - 70);\n    var container = $("<div class=\'vis-its-main-wrap vis-pull-left\'>");\n    var subRoot = $("<div style=\'height:100%\'>");\n    $root.append(subRoot);\n    subRoot.append(container);\n    var divRight = $("<div class=\'vis-its-ryt-panel vis-pull-right\' >");\n    var divRightInner = $("<div class=\'vis-its-ryt-panel-inner vis-pull-left\' >");\n    var btnSave = $(\'<a href="javascript:void(o)"  style="display:none;" class="vis-initial-btn vis-initial-btn-blue">\').append($("<i class=\'vis vis-save\'></i>"));\n    subRoot.append(divRight);\n    divRight.append(divRightInner).append(btnSave);\n    divRightInner.append($(\'<h3>\').append(VIS.Msg.getMsg(\'Result\')));\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var windowNo = VIS.Env.getWindowNo();\n    var txtTenant = null;\n    var txtOrg = null;\n    var txtUTenant = null;\n    var txtUOrg = null;\n    var cmbCurr = null;\n    var cmbCou = null;\n    var txtCity = null;\n    var cmbReg = null;\n    var chkOpprotunity = null;\n    var chkSR = null;\n    var chkProduct = null;\n    var chkCam = null;\n    var chkBP = null;\n    var btnLoadFile = null;\n    var btnCancel = null;\n    var btnOK = null;\n    var fileBrowser = null;\n    var folderKey = null;\n    var fileName = null;\n    var chkDA = null;\n    var lblDA = null;\n    this.load = function () {\n      var dContent = $("<div class=\'vis-graywrap\'>");\n      container.append(dContent);\n      var dTForm = $("<div class=\'initial-client-form\'>");\n      dContent.append(dTForm);\n\n      //dTForm.append($("<div Style=\'margin-left:15px;margin-top:15px\'>").append($("<label>").append(VIS.Msg.getMsg(\'TenantHeaderComment\'))));\n      dTForm.append($("<h3 class=\'VIS_Pref_change-pass\'>").append($("<label class=\'VIS_Pref_Label_Font\'>").append(VIS.Msg.getMsg("TenantHeaderComment"))));\n      var dTenant = $("<div class=\'input-group vis-input-wrap vis-intial-form-data\'>");\n      var dTenantInner = $("<div class=\'vis-control-wrap\'></div>");\n      txtTenant = $(\'<input type="text" name="tenant" placeholder="\' + VIS.Msg.getMsg(\'Tenant\') + \'">\');\n      dTenant.append(dTenantInner);\n      dTenantInner.append(txtTenant);\n      dTenantInner.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "AD_Client_ID")));\n      dTForm.append(dTenant);\n      var dOrg = $("<div class=\'input-group vis-input-wrap vis-intial-form-data\'>");\n      var dOrgInner = $("<div class=\'vis-control-wrap\'></div>");\n      txtOrg = $(\'<input type="text" name="tenant" placeholder="\' + VIS.Msg.getMsg(\'Org\') + \'">\');\n      dOrg.append(dOrgInner);\n      dOrgInner.append(txtOrg);\n      dOrgInner.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "AD_Org_ID")));\n      dTForm.append(dOrg);\n      var dUTenant = $("<div class=\'input-group vis-input-wrap vis-intial-form-data\'>");\n      var dUTenantInner = $("<div class=\'vis-control-wrap\'></div>");\n      txtUTenant = $(\'<input type="text" name="tenant" placeholder="\' + VIS.Msg.getMsg(\'TenantAdmin\') + \'">\');\n      dUTenant.append(dUTenantInner);\n      dUTenantInner.append(txtUTenant);\n      dUTenantInner.append($(\'<label>\').append(VIS.Msg.parseTranslation(VIS.context, "@AD_User_ID@ @AD_Client_ID@")));\n      dTForm.append(dUTenant);\n      var dUOrg = $("<div class=\'input-group vis-input-wrap vis-intial-form-data\'>");\n      var dUOrgInner = $("<div class=\'vis-control-wrap\'></div>");\n      txtUOrg = $(\'<input type="text" name="tenant" placeholder="\' + VIS.Msg.getMsg(\'TenantUser\') + \'">\');\n      dUOrg.append(dUOrgInner);\n      dUOrgInner.append(txtUOrg);\n      dUOrgInner.append($(\'<label>\').append(VIS.Msg.parseTranslation(VIS.context, "@AD_User_ID@ @AD_Org_ID@")));\n      dTForm.append(dUOrg);\n      var dCurr = $("<div class=\'input-group vis-input-wrap vis-intial-form-dataCombo\'>");\n      var dCurrInner = $("<div class=\'vis-control-wrap\'></div>");\n      cmbCurr = $(\'<select placeholder="Currency">\');\n      dCurr.append(dCurrInner);\n      dCurrInner.append(cmbCurr);\n      dCurrInner.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "C_Currency_ID")));\n      dTForm.append(dCurr);\n      var dCou = $("<div class=\'input-group vis-input-wrap vis-intial-form-dataCombo\'>");\n      var dCouInner = $("<div class=\'vis-control-wrap\'></div>");\n      cmbCou = $(\'<select placeholder="Country">\');\n      dCou.append(dCouInner);\n      dCouInner.append(cmbCou);\n      dCouInner.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "C_Country_ID")));\n      dTForm.append(dCou);\n      var dCity = $("<div class=\'input-group vis-input-wrap vis-intial-form-dataCombo\'>");\n      var dCityInner = $("<div class=\'vis-control-wrap\'></div>");\n      txtCity = $(\'<input type="text" placeholder="\' + VIS.Msg.getMsg(\'City\') + \'" style="width:100%;">\');\n      dCity.append(dCityInner);\n      dCityInner.append(txtCity);\n      dCityInner.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "City")));\n      dTForm.append(dCity);\n      var dReg = $("<div class=\'input-group vis-input-wrap vis-intial-form-dataCombo\' >");\n      var dRegInner = $("<div class=\'vis-control-wrap\'></div>");\n      cmbReg = $(\'<select placeholder="Region">\');\n      dRegInner.append(cmbReg);\n      dRegInner.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "C_Region_ID")));\n      dReg.append(dRegInner);\n      dTForm.append(dReg);\n\n      //var ulCase = $(\'<ul  class="initial-client-form-list">\');\n      //dTForm.append(ulCase);\n\n      //var liCurr = $(\'<li>\');\n      //ulCase.append(liCurr);\n      //var dCurr = $(\'<div class="intial-form-dataCombo">\');\n      //liCurr.append(dCurr);\n      //dCurr.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "C_Currency_ID")));\n      //cmbCurr = $(\'<select placeholder="Currency">\');\n      //dCurr.append(cmbCurr);\n\n      //var liCou = $(\'<li>\');\n      //ulCase.append(liCou);\n      //var dCou = $(\'<div class="intial-form-dataCombo">\');\n      //liCou.append(dCou);\n      //dCou.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "C_Country_ID")));\n      //cmbCou = $(\'<select placeholder="Country">\');\n      //dCou.append(cmbCou);\n\n      //var liCity = $(\'<li>\');\n      //ulCase.append(liCity);\n      //var dCity = $(\'<div class="intial-form-dataCombo">\');\n      //liCity.append(dCity);\n      //dCity.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "City")));\n      //txtCity = $(\'<input type="text" placeholder="City" style="width:100%;">\');\n      //dCity.append(txtCity);\n\n      //var liReg = $(\'<li>\');\n      //ulCase.append(liReg);\n      //var dReg = $(\'<div class="intial-form-dataCombo">\');\n      //liReg.append(dReg);\n      //dReg.append($(\'<label>\').append(VIS.Msg.translate(VIS.context, "C_Region_ID")));\n      //cmbReg = $(\'<select placeholder="Region">\');\n      //dReg.append(cmbReg);\n\n      //var liChks = $("<li>");\n      //ulCase.append(liChks);\n\n      dTForm.append($(\'<div style="width:100%;float:left;">\').append($("<label  class=\'vis-cs-op-lbl\' class=\'vis-pull-left\'>").append(VIS.Msg.getMsg("Optional"))));\n      var dChkContainer = $(\'<div class="vis-fieldset-wrap">\');\n      var dChkBox = $("<div class=\'vis-intial-form-data vis-fieldset-inn\'>");\n      dChkContainer.append(dChkBox);\n      dTForm.append(dChkContainer);\n      //liChks.append(dChkBox);\n\n      var dOpprotunity = $(\'<div class="vis-initial-form-checkbox" >\');\n      chkOpprotunity = $(\'<input type="checkbox">\');\n      dOpprotunity.append(chkOpprotunity);\n      dOpprotunity.append($("<label>").append(VIS.Msg.translate(VIS.context, "C_Project_ID")));\n      dChkBox.append(dOpprotunity);\n      var dSR = $(\'<div class="vis-initial-form-checkbox">\');\n      chkSR = $(\'<input type="checkbox">\');\n      dSR.append(chkSR);\n      dSR.append($("<label>").append(VIS.Msg.translate(VIS.context, "C_SalesRegion_ID")));\n      dChkBox.append(dSR);\n      var dProduct = $(\'<div class="vis-initial-form-checkbox">\');\n      chkProduct = $(\'<input type="checkbox" checked disabled>\');\n      dProduct.append(chkProduct);\n      dProduct.append($("<label>").append(VIS.Msg.translate(VIS.context, "M_Product_ID")));\n      dChkBox.append(dProduct);\n      var dCam = $(\'<div class="vis-initial-form-checkbox">\');\n      chkCam = $(\'<input type="checkbox">\');\n      dCam.append(chkCam);\n      dCam.append($("<label>").append(VIS.Msg.translate(VIS.context, "C_Campaign_ID")));\n      dChkBox.append(dCam);\n      var dBP = $(\'<div class="vis-initial-form-checkbox">\');\n      chkBP = $(\'<input type="checkbox" checked disabled>\');\n      dBP.append(chkBP);\n      dBP.append($("<label>").append(VIS.Msg.translate(VIS.context, "C_BPartner_ID")));\n      dChkBox.append(dBP);\n\n      //var liBtns= $("<li>");\n      //ulCase.append(liBtns);\n      //var dBtns = $("<div class=\'initial-form-buttons\' >");\n      //dTForm.append(dBtns);\n      //liBtns.append(dBtns);\n\n      // var dRbtns = $("<div class=\'initial-btn-right\'>");\n      var dLbtns = $("<div class=\'vis-initial-btn-left vis-pull-right\'>");\n      dContent.append(dLbtns);\n      var dDefaulAcct = $(\'<div style="display: inline;">\');\n      dLbtns.append(dDefaulAcct);\n      chkDA = $(\'<input type="checkbox" style="margin-right: 5px;margin-left: 10px;margin-top: 5px;display:none">\');\n      chkDA.prop(\'checked\', true);\n      chkDA.on(\'click\', function () {\n        if (chkDA.prop(\'checked\')) {\n          btnLoadFile.css(\'display\', \'none\');\n        } else {\n          btnLoadFile.css(\'display\', \'initial\');\n        }\n      });\n      dDefaulAcct.append(chkDA);\n      lblDA = $("<label style=\'margin-right: 10px;font-size: 14px;color: #666;font-weight: normal;display:none\'>").append(VIS.Msg.getMsg("UseDefault"));\n      dDefaulAcct.append(lblDA);\n      btnLoadFile = $("<a class=\'vis-initial-btn vis-initial-btn-blue\' style=\'margin-right:10px;display:none;\'>").append(VIS.Msg.getMsg("LoadAccountingValues"));\n      btnLoadFile.on(\'click\', function () {\n        fileBrowser.trigger(\'click\');\n      });\n      // dRbtns.append(btnLoadFile);\n      // dBtns.append(dRbtns);\n      dLbtns.append(btnLoadFile);\n      fileBrowser = $("<input type=\'file\' style=\'display:none;\' accept=\'.csv*\'>");\n      fileBrowser.change(function () {\n        uploadFile(this);\n      });\n      //dRbtns.append(fileBrowser);\n      dLbtns.append(fileBrowser);\n      btnOK = $("<a href=\'javascript:;\' class=\'vis-initial-btn\' style=\'margin-right: 15px;\'>").append(VIS.Msg.getMsg("Done"));\n      btnOK.on(\'click\', function () {\n        createTenant();\n      });\n      dLbtns.append(btnOK);\n      //btnCancel = $("<a class=\'initial-btn\'>").append(VIS.Msg.getMsg("Cancel"));\n      //dLbtns.append(btnCancel);\n      //dBtns.append(dLbtns);\n\n      $root.append($busyDiv);\n      cmbCou.change(function () {\n        if (cmbCou.val() > 0) {\n          $.ajax({\n            url: VIS.Application.contextUrl + "VSetup/GetRegion",\n            dataType: "json",\n            data: {\n              countryID: cmbCou.val()\n            },\n            error: function () {\n              VIS.ADialog.error(VIS.Msg.getMsg(\'ERRORGettingInitialData\'));\n              $busyDiv[0].style.visibility = "hidden";\n            },\n            success: function (data) {\n              var result = data.result;\n              if (result == null) {\n                VIS.ADialog.error(VIS.Msg.getMsg(\'ERRORGettingInitialData\'));\n                $busyDiv[0].style.visibility = "hidden";\n                return;\n              }\n              cmbReg.empty();\n              loadRegion(result);\n              $busyDiv[0].style.visibility = "hidden";\n            }\n          });\n        }\n      });\n      $busyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "VSetup/GetInitialData",\n        dataType: "json",\n        error: function () {\n          VIS.ADialog.error(VIS.Msg.getMsg(\'ERRORGettingInitialData\'));\n          $busyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          var result = data.result;\n          if (result == null) {\n            VIS.ADialog.error(VIS.Msg.getMsg(\'ERRORGettingInitialData\'));\n            $busyDiv[0].style.visibility = "hidden";\n            return;\n          }\n          loadCurrency(result.currency);\n          loadCountry(result.country);\n          loadRegion(result.region);\n          $busyDiv[0].style.visibility = "hidden";\n        }\n      });\n    };\n    var loadCurrency = function (currency) {\n      if (currency == null) {\n        return;\n      }\n      for (var itm in currency) {\n        cmbCurr.append($(\'<option value="\' + currency[itm].ID + \'">\').append(currency[itm].Name + " (" + currency[itm].ISO_Code + ")"));\n      }\n    };\n    var loadCountry = function (country) {\n      if (country == null) {\n        return;\n      }\n      for (var itm in country) {\n        cmbCou.append($(\'<option value="\' + country[itm].ID + \'">\').append(country[itm].Name));\n      }\n    };\n    var loadRegion = function (region) {\n      if (region == null) {\n        return;\n      }\n      for (var itm in region) {\n        cmbReg.append($(\'<option value="\' + region[itm].ID + \'">\').append(region[itm].Name));\n      }\n    };\n    var uploadFile = function (file) {\n      fileName = file.files[0].name;\n      $busyDiv[0].style.visibility = "visible";\n      window.setTimeout(function () {\n        folderKey = Date.now().toString();\n        var xhr = new XMLHttpRequest();\n        var fd = new FormData();\n        fd.append("file", file.files[0]);\n        xhr.open("POST", VIS.Application.contextUrl + "Attachment/SaveFileinTemp/?filename=" + fileName + "&folderKey=" + folderKey, false);\n        xhr.send(fd);\n        $busyDiv[0].style.visibility = "hidden";\n      }, 2);\n    };\n    var createTenant = function () {\n      //showLog(null);\n      //return;\n      divRightInner.empty();\n      btnSave.hide();\n      var clientName = txtTenant.val();\n      if (clientName == null || clientName.length == 0 || clientName.trim().length == 0) {\n        VIS.ADialog.error(\'FillTenantName\');\n        return;\n      }\n      var orgName = txtOrg.val();\n      if (orgName == null || orgName.length == 0 || orgName.trim().length == 0) {\n        VIS.ADialog.error(\'FillOrgName\');\n        return;\n      }\n      var userClient = txtUTenant.val();\n      if (userClient == null || userClient.length == 0 || userClient.trim().length == 0) {\n        VIS.ADialog.error(\'FillUserClient\');\n        return;\n      }\n      var userOrg = txtUOrg.val();\n      if (userOrg == null || userOrg.length == 0 || userOrg.trim().length == 0) {\n        VIS.ADialog.error(\'FillUserOrg\');\n        return;\n      }\n      var city = txtCity.val();\n      if (city == null || city.length == 0 || city.trim().length == 0) {\n        VIS.ADialog.error(\'FillCity\');\n        return;\n      }\n      var currencyID = cmbCurr.val();\n      var currencyName = cmbCurr.find(\'option:selected\').text();\n      if (currencyName == null || currencyName.length == 0 || currencyName.trim().length == 0) {\n        VIS.ADialog.error(\'FillCurrency\');\n        return;\n      }\n      //  var countryID = cmbCurr.val();\n      var countryID = cmbCou.val();\n      var countryName = cmbCou.find(\'option:selected\').text();\n      if (countryName == null || countryName.length == 0 || countryName.trim().length == 0) {\n        VIS.ADialog.error(\'FillCountry\');\n        return;\n      }\n      var regionID = cmbReg.val();\n      var regionName = cmbReg.find(\'option:selected\').text();\n      if (regionName == null || regionName.length == 0 || regionName.trim().length == 0) {\n        VIS.ADialog.error(\'FillRegion\');\n        return;\n      }\n      if (chkDA.prop(\'checked\')) {\n        fileName = null;\n      } else {\n        if (fileName == null || fileName.length == 0 || fileName.trim().length == 0) {\n          VIS.ADialog.error(\'SelectFile\');\n          return;\n        }\n      }\n      if (userClient == userOrg) {\n        VIS.ADialog.error("UsernameMustBeDifferent");\n        return;\n      }\n      var cfProduct = chkProduct.prop(\'checked\');\n      var cfBPartner = chkBP.prop(\'checked\');\n      var cfProject = chkOpprotunity.prop(\'checked\');\n      var cfMCampaign = chkCam.prop(\'checked\');\n      var cfSRegion = chkSR.prop(\'checked\');\n      $busyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "VSetup/InitailizeClientSetup",\n        type: "POST",\n        dataType: "json",\n        data: {\n          clientName: clientName,\n          orgName: orgName,\n          userClient: userClient,\n          userOrg: userOrg,\n          city: city,\n          currencyID: currencyID,\n          currencyName: currencyName,\n          countryID: countryID,\n          countryName: countryName,\n          regionID: regionID,\n          regionName: regionName,\n          cfProduct: cfProduct,\n          cfBPartner: cfBPartner,\n          cfProject: cfProject,\n          cfMCampaign: cfMCampaign,\n          cfSRegion: cfSRegion,\n          fileName: fileName,\n          folderKey: folderKey\n        },\n        error: function () {\n          VIS.ADialog.error("ErrorCreatingTenant");\n          $busyDiv[0].style.visibility = "hidden";\n        },\n        success: function (data) {\n          var tInfo = data.result;\n          //if (tInfo.Log != null && tInfo.Log.trim().length > 0) {\n          //    $busyDiv[0].style.visibility = "hidden";\n          //    VIS.ADialog.error(tInfo.Log);\n          //    return;\n          //}\n          $busyDiv[0].style.visibility = "hidden";\n          showLog(tInfo);\n        }\n      });\n    };\n    var showLog = function (tInfo) {\n      //var divLog=$(\'<div>\');\n\n      if (tInfo.Log != null && tInfo.Log.trim().length > 0) {\n        divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Error - " + tInfo.Log));\n        divRightInner.append($(\'<div style="margin-bottom:10px">\').append(VIS.Msg.getMsg(\'VIS_TenantErrorMsg\')));\n      }\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Tenant Name - " + tInfo.TenantName));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Organization Name - " + tInfo.OrgName));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Admin Role - " + tInfo.AdminRole));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" User Role - " + tInfo.UserRole));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Admin Username - " + tInfo.AdminUser));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Admin User Password - " + tInfo.AdminUserPwd));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Org Username - " + tInfo.OrgUser));\n      divRightInner.append($(\'<div style="margin-bottom:10px">\').append(" Org User Password - " + tInfo.OrgUserPwd));\n\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Tenant Name - A"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Organization Name - A"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Admin Role - AAdmin"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" User Role - AUser"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Admin Username - AA"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Admin User Password - AA"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Org Username - BB"));\n      //divRight.append($(\'<div style="margin-bottom:10px">\').append(" Org User Password - BB"));\n\n      //btnSave = null;\n      //if (VIS.Application.isRTL) {\n      //    btnSave = $(\'<a href="javascript:void(o)" style="float:left;" class="vis-initial-btn vis-initial-btn-blue">\').append($("<i class=\'vis vis-save\'></i>"));\n      //}\n      //else {\n      // btnSave = $(\'<a href="javascript:void(o)" class="vis-initial-btn vis-initial-btn-blue">\').append($("<i class=\'vis vis-save\'></i>"));\n      //}\n      btnSave.on(\'click\', function () {\n        var text = \'\';\n        text += " Tenant Name - " + tInfo.TenantName + "\\t\\n";\n        text += " Organization Name - " + tInfo.OrgName + "\\t\\n";\n        text += " Admin Role - " + tInfo.AdminRole + "\\t\\n";\n        text += " User Role - " + tInfo.UserRole + "\\t\\n";\n        text += " Admin Username - " + tInfo.AdminUser + "\\t\\n";\n        text += " Admin User Password - " + tInfo.AdminUserPwd + "\\t\\n";\n        text += " Org Username - " + tInfo.OrgUser + "\\t\\n";\n        text += " Org User Password - " + tInfo.OrgUserPwd + "\\t\\n";\n\n        //text += " Tenant Name - AA" +"\\t\\n";\n        //text += " Organization Name - AA" +"\\t\\n";\n        //text += " Admin Role - AA" + "\\t\\n";\n        //text += " User Role - AA" + "\\t\\n";\n        //text += " Admin Username - AA" + "\\t\\n";\n        //text += " Admin User Password - AA" + "\\t\\n";\n        //text += " Org Username - AA"+ "\\t\\n";\n        //text += " Org User Password - AA" +"\\t\\n";\n\n        var d = new Date().toISOString().slice(0, 19).replace(/-/g, "");\n        var fileData = "data:text/csv;base64," + window.btoa(text);\n        $(this).attr("href", fileData).attr("download", "file-" + d + ".txt");\n\n        //divLog.dialog(\'close\');\n        // divLog = null;\n      });\n      btnSave.show();\n      // divRight.append(btnSave);\n\n      //divLog.dialog({\n      //    width: 520,\n      //    height: 284,\n      //    resizable: false,\n      //    modal: true\n      //    //close: function () { };\n      //});\n    };\n    this.disposeComponent = function () {\n      txtTenant = null;\n      txtOrg = null;\n      txtUTenant = null;\n      txtUOrg = null;\n      cmbCurr = null;\n      cmbCou = null;\n      txtCity = null;\n      cmbReg = null;\n      chkOpprotunity = null;\n      chkSR = null;\n      chkProduct = null;\n      chkCam = null;\n      chkBP = null;\n      btnLoadFile = null;\n      btnCancel = null;\n      btnOK = null;\n      $busyDiv = null;\n      //$root.dialog("close");\n      $root = null;\n    };\n    this.getRoot = function () {\n      return $root;\n    };\n  }\n  ;\n\n  //Must Implement with same parameter\n  VSetup.prototype.sizeChanged = function (height, width) {\n    //this.sizeChanged(height, width);\n  };\n\n  //Must Implement with same parameter\n  VSetup.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.windowNo = windowNo;\n    //frame.hideHeader(true);\n    this.load();\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n\n  //Must implement dispose\n  VSetup.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.Apps.AForms.VSetup = VSetup;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/vsetup.js?')},"./Areas/VIS/Scripts/app/Framework/wfactivity.js":()=>{eval("/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Show Suspended Workflow And Process further\r\n * Author         :     Lakhwinder\r\n * Date           :     20-Oct-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function wfActivity(container, divDetail, workflowActivityData, welcomeScreenFeedsListScroll, $wfSearchShow) {\n    var data = null;\n    var fulldata = [];\n    var dataItemDivs = [];\n    var self = this;\n    var divSearch = null;\n    var divSelectAll = null;\n    var $txtSearch = null;\n    var $btnSearch = null;\n    var $dateFrom = null;\n    var $dateTo = null;\n    var divScroll = null;\n    var $cmbWindows = null;\n    var chkSelectAll = null;\n    var pageNo = 1,\n      PageSize = 10;\n    var p_size = 10,\n      p_no = 1;\n    var tabdataLastPage = 0;\n    var tabdatacntpage = 0;\n    var windowID = 0;\n    var winNideID = \"0_0\";\n    var nodeID = 0;\n    var search = true;\n\n    //will be true when user click on Select all checkbox. If user uncheck any checkbox then its value become false.\n    var selectedAll = false;\n    var uncheckall = false;\n    // To Add selected workflows in array\n    var selectedItems = [];\n    var $busyIndicator = $(\"#divTabMenuDataLoder\");\n    var $alertTxtTypeCount = $(\"#hAlrtTxtTypeCount\");\n    var $divActivity = $(\"#divfActivity\");\n    // Right Panel\n    var workflowActivity = $('#workflowActivity');\n    var btnCheckList = null;\n    var divWorkflowActivity = null;\n    var divWorkflowChecklist = null;\n    var bsyDiv = $('<div class=\"vis-busyindicatorouterwrap\"><div class=\"vis-busyindicatorinnerwrap\"><i class=\"vis-busyindicatordiv\"></i></div></div>');\n    var setBusy = function (isBusy) {\n      bsyDiv.css(\"display\", isBusy ? 'block' : 'none');\n    };\n    setBusy(false);\n\n    /**\r\n     *  Create Search design\r\n     */\n    function createlayout(refresh) {\n      if (!refresh) {\n        divSearch = $('<div class=\"wfactivity-homepage-parentdiv\"></div>');\n        var divSearchText = $(' <div class=\"frm-data-col-wrap frm-data-col-2\" style=\"padding-right: 10px;\"> <div class=\"frm-data-search-wrap\"><input class=\"frm-data-col-searchinput\" id=\"homeSearchWorkflow\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg(\"Search\") + '\">' + '<button id=\"btnWorkflowSearch\" class=\"vis-wfSearch-btn\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></button></div></div>');\n        $txtSearch = divSearchText.find('#homeSearchWorkflow');\n        $btnSearch = divSearchText.find('#btnWorkflowSearch');\n        var divWindow = $(' <div class=\"frm-data-col-wrap frm-data-col-2\" style=\"padding-left: 7px\"> <div class=\"frm-data-search-wrap\"><select class=\"vis-custom-select\"></select></div></div>');\n        $cmbWindows = divWindow.find('select');\n        var divDateFrom = $('<div style=\"display:none;padding-left: 7px\" class=\"frm-data-col-wrap frm-data-col-2\"> <label>' + VIS.Msg.getMsg(\"FromDate\") + '</label><input type=\"date\" placeholder=\"date\"></div>');\n        $dateFrom = divDateFrom.find('input');\n        var divDateTo = $('<div  style=\"display:none;padding-right:10px\" class=\"frm-data-col-wrap frm-data-col-2\"><label>' + VIS.Msg.getMsg(\"ToDate\") + '</label><input type=\"date\" placeholder=\"date\"></div>');\n        $dateTo = divDateTo.find('input');\n        divSearch.append(divWindow).append(divSearchText).append(divDateFrom).append(divDateTo);\n        divSelectAll = $('<div class=\"frm-select-all-check\"  style=\"display:none\"></div>');\n        chkSelectAll = $('<input type=\"checkbox\">');\n        divSelectAll.append('<label>' + VIS.Msg.getMsg('SelectAll') + '</label>');\n        divSelectAll.append(chkSelectAll);\n        $wfSearchShow.addClass('vis-eye-plus');\n        $wfSearchShow.removeClass('vis-eye-minus');\n        $wfSearchShow.attr('title', VIS.Msg.getMsg(\"ShowSearch\"));\n\n        //loadWindows();\n      }\n\n      //load windows everytime , beacuse if user completes all the activites of window, then that window should not be displayed in drop down.\n      loadWindows();\n      divScroll = $('<div class=\"wfactivity-homepage-activites\" style=\"padding-right:0px\"></div>');\n    }\n    ;\n\n    /**\r\n    *  Load windows to be displayed in dropdown. Shows only that windows for \r\n    *  which workflow is unprocessed and is in susspeneded state\r\n    */\n    function loadWindows(loadData) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"WFActivity/GetWorkflowWindows\",\n        dataType: \"json\",\n        type: \"POST\",\n        error: function () {\n          return;\n        },\n        success: function (result) {\n          if (result) {\n            result = JSON.parse(result);\n            $cmbWindows.empty();\n            $cmbWindows.append('<option value=\"0_0\">' + VIS.Msg.getMsg(\"SelectWindow\") + '</option>');\n            if (result && result.length > 0) {\n              var windowExist = false;\n              for (var i = 0; i < result.length; i++) {\n                $cmbWindows.append('<option value=\"' + result[i].AD_Window_ID + '_' + result[i].AD_Node_ID + '\">' + result[i].WindowName + '</option>');\n                if (result[i].AD_Window_ID + '_' + result[i].AD_Node_ID == winNideID) {\n                  windowExist = true;\n                }\n              }\n              //if user complete some activites of window and then on refresh show that window as selected window.\n              if (winNideID && windowExist) {\n                $cmbWindows.val(winNideID);\n              } else {\n                winNideID = \"0_0\";\n                $cmbWindows.val(\"0_0\");\n              }\n            } else {\n              winNideID = \"0_0\";\n              $cmbWindows.val(\"0_0\");\n            }\n          }\n          if (loadData) {\n            searchRecord();\n          }\n        }\n      });\n    }\n\n    /**\r\n         *  Add events to controls\r\n         *\r\n         */\n    function eventHandling(refresh) {\n      $cmbWindows.off(\"change\");\n      $cmbWindows.on(\"change\", windowSelection);\n      divScroll.on(\"scroll\", loadOnScroll);\n      if (!refresh) {\n        $btnSearch.on('click', function () {\n          if (search) {\n            search = false;\n            searchRecord();\n          }\n        });\n        $txtSearch.on(\"keydown\", function (e) {\n          if (e.keyCode == 13) {\n            if (search) {\n              search = false;\n              searchRecord();\n            }\n          }\n        });\n\n        // Validate From date and To Date\n        $dateFrom.on('focusout', function () {\n          if ($dateFrom.val() != \"\" && $dateTo.val() != \"\" && $dateFrom.val() > $dateTo.val()) {\n            $dateTo.val('');\n          }\n        });\n        $dateTo.on('focusout', function () {\n          if ($dateFrom.val() != \"\" && $dateTo.val() != \"\" && $dateFrom.val() > $dateTo.val()) {\n            $dateTo.val('');\n            VIS.ADialog.info(\"ToDateMustGreater\");\n          }\n        });\n\n        /**\r\n        *  Show and hide search and set height activites area .\r\n        *\r\n        */\n        $wfSearchShow.on(\"click\", function () {\n          if ($dateTo.is(':visible')) {\n            //divSearch.hide();\n            $($dateFrom.parent()).css('display', 'none');\n            $($dateTo.parent()).css('display', 'none');\n            $dateFrom.val('');\n            $dateTo.val('');\n            $wfSearchShow.attr('title', VIS.Msg.getMsg(\"ShowSearch\"));\n            $wfSearchShow.addClass('vis-eye-plus');\n            $wfSearchShow.removeClass('vis-eye-minus');\n            if (chkSelectAll.is(':visible')) {\n              divScroll.css('top', '65px');\n            } else {\n              divScroll.css('top', '47px');\n            }\n          } else {\n            //divSearch.show();\n            $($dateFrom.parent()).css('display', 'block');\n            $($dateTo.parent()).css('display', 'block');\n            $wfSearchShow.attr('title', VIS.Msg.getMsg(\"HideSearch\"));\n            $wfSearchShow.removeClass('vis-eye-plus');\n            $wfSearchShow.addClass('vis-eye-minus');\n            if (chkSelectAll.is(':visible')) {\n              divScroll.css('top', '118px');\n            } else {\n              divScroll.css('top', '98px');\n            }\n          }\n        });\n        chkSelectAll.on(\"click\", selectAllActivities);\n      }\n    }\n    ;\n\n    /**\r\n    *  Select OR deselect all activites\r\n    *\r\n    */\n    function selectAllActivities(e) {\n      var selectedChk = divScroll.find('.wfActivity-selectchk');\n\n      //else {\n      //    selectedChk.prop('checked', false);\n      //}\n      if (chkSelectAll.prop('checked') == false) {\n        uncheckall = true;\n      }\n      if (chkSelectAll.prop(\"checked\") == true) {\n        selectedAll = true;\n      }\n      for (var j = 0; j < selectedChk.length; j++) {\n        if (chkSelectAll.prop(\"checked\") == true) {\n          if ($(selectedChk[j]).prop('checked') == false) {\n            $(selectedChk[j]).trigger('click');\n          }\n        } else {\n          if ($(selectedChk[j]).prop('checked') == true) {\n            $(selectedChk[j]).trigger('click');\n          }\n        }\n      }\n      uncheckall = false;\n      if (chkSelectAll.prop(\"checked\") == false) {\n        $(divScroll.find('.vis-activityContainer')[0]).trigger('click');\n      }\n    }\n\n    /**\r\n    * on select window, show activies of that window, show select all checkbox\r\n    *\r\n    */\n    function windowSelection(e) {\n      //chkSelectAll.prop('checked', false);\n      workflowActivity.hide();\n      divDetail.empty();\n      if ($cmbWindows.val() == \"0_0\") {\n        divSelectAll.hide();\n        if (chkSelectAll.prop('checked') == true) {\n          chkSelectAll.trigger('click');\n        }\n        if ($dateTo.is(':visible')) {\n          divScroll.css('top', '98px');\n        } else {\n          divScroll.css('top', '47px');\n        }\n      } else {\n        divSelectAll.hide();\n        if ($dateTo.is(':visible')) {\n          divScroll.css('top', '118px');\n        } else {\n          divScroll.css('top', '67px');\n        }\n      }\n      winNideID = $cmbWindows.val();\n      searchRecord();\n    }\n    ;\n    function searchRecord() {\n      pageNo = 1;\n      PageSize = 10;\n      workflowActivity.hide();\n      divDetail.empty();\n      divScroll.empty();\n      selectedItems = [];\n      selectedItems.length = 0;\n      self.AppendRecord(pageNo, PageSize, true);\n    }\n    ;\n    this.Load = function (refresh) {\n      //  $(\"#divfeedbsy\")[0].style.visibility = \"visible\";\n      if (chkSelectAll && chkSelectAll.prop('checked') == false) {\n        workflowActivity.hide();\n      }\n      container.children().last().remove();\n      $busyIndicator.show();\n      pageNo = 1;\n      PageSize = 10;\n      tabdataLastPage = 0;\n      tabdatacntpage = 0;\n      // selectedAll = false;\n      createlayout(refresh);\n      selectedItems = [];\n      if (refresh) {\n        container.find('.wfactivity-homepage-activites').remove();\n        container.append(divScroll);\n        //selectedItems = [];\n        //if (chkSelectAll.prop('checked') == true)\n        //    chkSelectAll.trigger('click');\n      } else {\n        container.append(divSearch).append(divSelectAll).append(divScroll);\n      }\n      eventHandling(refresh);\n      windowID = $cmbWindows.val();\n      if (windowID && windowID != \"0_0\") {\n        nodeID = windowID.split('_')[1];\n        windowID = windowID.split('_')[0];\n        if ($dateTo.is(':visible')) {\n          container.find('.wfactivity-homepage-activites').css('top', '118px');\n        } else {\n          container.find('.wfactivity-homepage-activites').css('top', '68px');\n        }\n      } else {\n        nodeID = 0;\n        windowID = 0;\n        if ($dateTo.is(':visible')) {\n          container.find('.wfactivity-homepage-activites').css('top', '98px');\n        } else {\n          container.find('.wfactivity-homepage-activites').css('top', '47px');\n        }\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"WFActivity/GetActivities\",\n        data: {\n          pageNo: 1,\n          pageSize: 10,\n          refresh: true,\n          searchText: $txtSearch.val(),\n          \"AD_Window_ID\": windowID,\n          \"dateFrom\": $dateFrom.val(),\n          \"dateTo\": $dateTo.val(),\n          \"AD_Node_ID\": nodeID\n        },\n        dataType: \"json\",\n        type: \"POST\",\n        error: function () {\n          //alert(VIS.Msg.getMsg('ErrorWhileGettingData'));\n          //bsyDiv[0].style.visibility = \"hidden\";\n          //   $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n          $busyIndicator.hide();\n          VIS.HomeMgr.BindMenuClick();\n          return;\n        },\n        success: function (dyndata) {\n          var reslt = JSON.parse(dyndata.result);\n          $txtSearch.val('');\n          window.setTimeout(function () {\n            VIS.HomeMgr.BindMenuClick();\n            var active = VIS.HomeMgr.getActiveTab();\n            if (active.activeTabType == 3) {\n              if (reslt == null || reslt.LstInfo == null) {\n                $busyIndicator.hide();\n                $divActivity.empty();\n                $divActivity.append(0);\n                $divActivity.show();\n\n                //$(\"#sAlrtTxtType\").empty();\n                //$(\"#sAlrtTxtType\").append(VIS.Msg.getMsg('WorkflowActivities'));\n                $alertTxtTypeCount.empty();\n                $alertTxtTypeCount.append(0);\n                str = \"<p  id='pnorecFound' style=' margin-top:200px;text-align: center'>\" + VIS.Msg.getMsg('NoRecordFound') + \"</p>\";\n                container.find('#pnorecFound').remove();\n                divScroll.empty();\n                container.append(str);\n                return;\n              }\n              data = reslt.LstInfo;\n              divScroll.empty();\n              // container.children('.vis-activityContainer').not(':first').remove();\n\n              if (refresh == true) {\n                //Reset Count Header\n                dataItemDivs = [];\n                fulldata = [];\n              }\n              $divActivity.empty();\n              $divActivity.append(reslt.count);\n              $divActivity.show();\n              $alertTxtTypeCount.empty();\n              $alertTxtTypeCount.append(reslt.count);\n              LoadRecords(0);\n              VIS.HomeMgr.adjustDivSize();\n            } else {\n              return;\n            }\n            // workflowActivityData.refresh();\n          }, 100);\n        }\n      });\n      // LoadRecords();\n    };\n    var scrollWF = true;\n    function loadOnScroll(e) {\n      // do something\n      if ($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight * 0.75 && scrollWF) {\n        //Condition true when 75 scroll is done\n        scrollWF = false;\n        tabdataLastPage = parseInt($divActivity.html());\n        tabdatacntpage = pageNo * PageSize;\n        if (tabdatacntpage <= tabdataLastPage) {\n          pageNo += 1;\n          self.AppendRecord(pageNo, PageSize);\n        } else {\n          scrollWF = true;\n        }\n      }\n    }\n    ;\n    this.AppendRecord = function (pageNo, paeSize, refresh) {\n      if (!refresh) {\n        refresh = false;\n      }\n      $busyIndicator.show();\n      windowID = $cmbWindows.val();\n      nodeID = windowID.split('_')[1];\n      windowID = windowID.split('_')[0];\n      $.ajax({\n        url: VIS.Application.contextUrl + \"WFActivity/GetActivities\",\n        data: {\n          pageNo: pageNo,\n          pageSize: paeSize,\n          refresh: refresh,\n          searchText: $txtSearch.val(),\n          \"AD_Window_ID\": windowID,\n          \"dateFrom\": $dateFrom.val(),\n          \"dateTo\": $dateTo.val(),\n          \"AD_Node_ID\": nodeID\n        },\n        dataType: \"json\",\n        type: \"POST\",\n        error: function () {\n          //alert(VIS.Msg.getMsg('ErrorWhileGettingData'));\n          //bsyDiv[0].style.visibility = \"hidden\";\n          $busyIndicator.hide();\n          VIS.HomeMgr.BindMenuClick();\n          search = true;\n          scrollWF = true;\n        },\n        success: function (dyndata) {\n          var reslt = JSON.parse(dyndata.result);\n          $txtSearch.val('');\n          VIS.HomeMgr.BindMenuClick();\n          var active = VIS.HomeMgr.getActiveTab();\n          if (active.activeTabType == 3) {\n            if (reslt) {\n              data = reslt.LstInfo;\n            } else {\n              data = null;\n            }\n            if (refresh == true) {\n              //Reset Count Header\n              dataItemDivs = [];\n              fulldata = [];\n              $divActivity.empty();\n              divScroll.empty();\n              if (reslt) {\n                container.find('#pnorecFound').remove();\n                $divActivity.append(reslt.count);\n              } else {\n                $alertTxtTypeCount.empty();\n                $alertTxtTypeCount.append(0);\n                var str = \"<p id='pnorecFound' style=' margin-top:200px;text-align: center'>\" + VIS.Msg.getMsg('NoRecordFound') + \"</p>\";\n                container.find('#pnorecFound').remove();\n                container.append(str);\n                $divActivity.append(0);\n              }\n              //$(\"#hAlrtTxtTypeCount\").empty();\n              //$(\"#hAlrtTxtTypeCount\").append(dyndata.result.count);\n            }\n            LoadRecords(pageNo - 1);\n            VIS.HomeMgr.adjustDivSize();\n          } else {\n            search = true;\n          }\n          scrollWF = true;\n\n          //workflowActivityData.refresh();\n        }\n      });\n    };\n    var LoadRecords = function (pageNumber) {\n      var divOuter = null;\n      //data = (VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"WFActivity/GetActivities\", {})).result;\n      if (data == null || data.length == 0) {\n        //bsyDiv[0].style.visibility = \"hidden\";\n\n        $busyIndicator.hide();\n        //if ($cmbWindows.val() == \"0_0\") {\n\n        divSelectAll.hide();\n        chkSelectAll.prop('checked', false);\n\n        //}\n\n        search = true;\n        return;\n      }\n      if ($cmbWindows.val() != \"0_0\") {\n        if ($dateTo.is(':visible')) {\n          divScroll.css('top', '118px');\n        } else {\n          divScroll.css('top', '67px');\n        }\n        divSelectAll.show();\n      } else {\n        if ($dateTo.is(':visible')) {\n          divScroll.css('top', '98px');\n        } else {\n          divScroll.css('top', '47px');\n        }\n        divSelectAll.hide();\n        chkSelectAll.prop('checked', false);\n      }\n      for (var item in data) {\n        fulldata.push(data[item]);\n        var dataIem = {};\n        divOuter = $(\"<div class='vis-activityContainer' data-id='\" + (Number(10 * pageNumber) + Number(item)) + \"'>\");\n        divOuter.on('click', function (e) {\n          $('.vis-activityContainer').removeClass('vis-activeFeed');\n          $(this).addClass('vis-activeFeed');\n          var datatab = $(e.target).data(\"viswfazoom\");\n          if (datatab == 'wfZoom') {\n            $(this).addClass('vis-activeFeed');\n            var id = $(e.target).data(\"index\");\n            zoom(id);\n            search = true;\n            return;\n          }\n          var id = $(this).data(\"id\");\n          var async = true;\n          if (selectedItems.length <= 1 && chkSelectAll.prop('checked') == true) {\n            async = false;\n          }\n          var ids = $(this).find('.wfActivity-selectchk').data('ids');\n          if (selectedItems.length == 1 && ids != selectedItems[0]) {\n            return;\n          }\n          getDetail(dataItemDivs[id].wfActivityID, id, this, async);\n          search = true;\n        });\n        var divActions = $(\"<div class='vis-feedTitleBar'>\");\n\n        // create checkbox to be added in header on workflow activities\n        var chkSelect = $('<input class=\"wfActivity-selectchk\" type=\"checkbox\" style=\"float:left;margin-right:5px\" data-ids=\"' + data[item].AD_Window_ID + \"_\" + data[item].AD_Node_ID + \"_\" + data[item].AD_WF_Activity_ID + '\" ></input>');\n        var header = $(\"<h3>\");\n        header.css('font-weight', 'normal');\n        //header.css('color', '#1b95d7');\n        header.append(VIS.Utility.encodeText(data[item].NodeName));\n        // Add Only if any window is selected in search criteria\n        if ($cmbWindows && $cmbWindows.val() != \"0_0\") {\n          divActions.append(chkSelect);\n        }\n        divActions.append(header);\n        var divBtns = $(\"<div class='vis-feedTitleBar-buttons'>\");\n        var ul = $(\"<ul>\");\n        var liZoom = $(\"<li>\");\n        var aZoom = $(\"<a href='javascript:void(0)'  data-index='\" + (Number(10 * pageNumber) + Number(item)) + \"' data-viswfazoom='wfZoom' >\").append('<i class=\"vis vis-find\" data-index=\"' + (Number(10 * pageNumber) + Number(item)) + '\" data-viswfazoom=\"wfZoom\"></i>');\n        //aZoom.append(\"View Feed\");\n\n        liZoom.append(aZoom);\n        ul.append(liZoom);\n        divBtns.append(ul);\n        divActions.append(divBtns);\n        divOuter.append(divActions);\n        var divContent = $(\"<div class='vis-feedDetails'>\");\n        var para = $(\"<pre>\");\n        if (data[item].DocumentNameValue == undefined || data[item].DocumentNameValue == '') {\n          para.append(VIS.Utility.encodeText(data[item].Summary));\n        } else {\n          para.append(VIS.Utility.encodeText(data[item].DocumentNameValue + \" - \" + data[item].Summary));\n        }\n        var br = $(\"<br>\");\n        para.append(br);\n        para.append(VIS.Utility.encodeText(VIS.Msg.getMsg('Priority') + \" \" + data[item].Priority));\n        divContent.append(para);\n\n        //Checkbox Click Event\n        chkSelect.on(\"click\", function (e) {\n          var target = $(e.target);\n          onCheckSelectClick(target, e);\n        });\n        var pdate = $(\"<div class='vis-feedDateTime'>\");\n        pdate.append($(\"<br>\")).append(Globalize.format(new Date(data[item].Created), \"F\", Globalize.cultureSelector));\n        divContent.append(pdate);\n        divOuter.append(divContent);\n        divScroll.append(divOuter);\n        dataIem.ctrl = divOuter;\n        dataIem.index = item;\n        dataIem.recordID = data[item].Record_ID;\n        dataIem.wfActivityID = data[item].AD_WF_Activity_ID;\n        dataItemDivs.push(dataIem);\n        if (chkSelectAll.prop('checked') == true) {\n          chkSelect.trigger('click');\n          if (fulldata.length == 1) {\n            //   divOuter.trigger('click');\n          }\n        }\n      }\n      search = true;\n      $busyIndicator.hide();\n    };\n    var onCheckSelectClick = function (target, e) {\n      var ite = target.data('ids');\n      if (target.prop(\"checked\") == false) {\n        chkSelectAll.prop('checked', false);\n        selectedAll = false;\n      }\n      if (target.prop(\"checked\") == true) {\n        if (selectedItems.length == 0) {\n          selectedItems.push(target.data('ids'));\n          selectedAll = false;\n          checkSelectAll();\n        } else {\n          var its = selectedItems[0].split('_');\n          var ids = ite.split('_');\n\n          //Match if selected item is have same node ID and window ID, only then add this\n          //item to array, otherwise no action.\n          if (its[0] + \"-\" + its[1] == ids[0] + \"-\" + ids[1]) {\n            selectedItems.push(ite);\n            if (chkSelectAll.prop('checked') == true && !selectedAll) {\n              e.stopPropagation();\n            }\n            selectedAll = false;\n            checkSelectAll();\n          } else {\n            checkSelectAll();\n            e.preventDefault();\n            return false;\n          }\n        }\n      } else {\n        selectedItems = jQuery.grep(selectedItems, function (value) {\n          return value != ite;\n        });\n        if (selectedItems.length == 1 && !uncheckall) {\n          var chks = divScroll.find('.wfActivity-selectchk');\n          for (var h = 0; h < chks.length; h++) {\n            if ($(chks[h]).prop('checked') == true) {\n              $(chks[h]).parent().trigger('click');\n              e.stopPropagation();\n              return;\n            }\n          }\n        }\n        if (selectedItems.length >= 0 || chkSelectAll.prop('checked') == true) {\n          e.stopPropagation();\n          return false;\n        }\n      }\n      if (target.prop(\"checked\") == true) {\n        //wfActivity-selectchk\n      }\n    };\n    function checkSelectAll() {\n      var selectedchecks = divScroll.find('input[class=\"wfActivity-selectchk\"]:checked').length;\n      var totalchecks = divScroll.find('.wfActivity-selectchk').length;\n      if (totalchecks == selectedchecks) {\n        chkSelectAll.prop('checked', true);\n      }\n    }\n    ;\n    var adjust_size = function () {\n      //alert( \"adjust_size called.\" );\n      var windowWidth = $(window).width();\n      var divCount = $(\".row.scrollerHorizontal > div\").length;\n      divCount = divCount - 1;\n      $('.scrollerHorizontal').width(windowWidth);\n      var sectionsWidth = windowWidth / divCount - 20;\n      var sectionsWidthFinal = parseInt(sectionsWidth);\n\n      /* latop and large display screen size */\n      if (windowWidth >= 1366) {\n        if (workflowActivity.css('display') == 'none') {\n          //alert(divCount);\n          $(\"#fllupsScreen\").css(\"left\", sectionsWidthFinal + 20);\n          $(\"#favLinks\").css(\"left\", sectionsWidthFinal * 2 + 40);\n          $('#welcomeScreen,#fllupsScreen,#favLinks').width(sectionsWidthFinal);\n        } else if (workflowActivity.css('display') == 'block') {\n          var newWidth = windowWidth + sectionsWidthFinal + 20;\n          $('.scrollerHorizontal').width(newWidth);\n          // horizontalScroll.refresh();\n          //alert(newWidth);\n          $(\"#workflowActivity\").css(\"left\", sectionsWidthFinal + 20);\n          $(\"#fllupsScreen\").css(\"left\", sectionsWidthFinal * 2 + 40);\n          $(\"#favLinks\").css(\"left\", sectionsWidthFinal * 3 + 60);\n          $('#welcomeScreen,#fllupsScreen,#favLinks,#workflowActivity').width(sectionsWidthFinal);\n        }\n      }\n    };\n    var lstDetailCtrls = [];\n    var getDetail = function (wfActivityID, index, ctrl, async) {\n      //$(\"#divfeedbsy\")[0].style.visibility = \"visible\";\n      $busyIndicator.show();\n      $.ajax({\n        url: VIS.Application.contextUrl + \"WFActivity/GetActivityInfo\",\n        dataType: \"json\",\n        type: \"POST\",\n        async: async,\n        data: {\n          activityID: wfActivityID,\n          nodeID: fulldata[index].AD_Node_ID,\n          wfProcessID: fulldata[index].AD_WF_Process_ID\n        },\n        error: function () {\n          //alert(VIS.Msg.getMsg('ErrorWhileGettingData'));\n          //bsyDiv[0].style.visibility = \"hidden\";\n          // $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n          $busyIndicator.hide();\n          return;\n        },\n        success: function (res) {\n          //Load Activity info, only if one workflow is selected. \n          //otherwise don't show workflow related information\n          if (selectedItems.length <= 1 || chkSelectAll.prop('checked') == true) {\n            workflowActivity.show();\n            VIS.HomeMgr.adjustDivSize();\n            var selectedEffect = \"transfer\";\n            var options = {};\n            options = {\n              to: divDetail,\n              className: \"wsp-ui-effects-transfer\"\n            };\n            window.setTimeout(function () {\n              loadDetail(wfActivityID, index, res.result);\n              $(ctrl).effect(selectedEffect, options, 500, function () {});\n            }, 400);\n          } else {\n            if (selectedItems.length <= 2) {\n              loadDetail(wfActivityID, index, res.result);\n            }\n            $busyIndicator.hide();\n          }\n        }\n      });\n    };\n    var loadDetail = function (wfActivityID, index, info) {\n      var detailCtrl = {};\n      lstDetailCtrls = [];\n      detailCtrl.Index = index;\n      var docnameval;\n      // var info = (VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"WFActivity/GetActivityInfo\", { \"activityID\": wfActivityID, \"nodeID\": data[index].AD_Node_ID, \"wfProcessID\": data[index].AD_WF_Process_ID })).result;\n\n      divDetail.empty();\n      var divHeader = $(\"<div class='vis-workflowActivityDetails-Heading'>\");\n      divDetail.append(divHeader);\n      var hHeader = $(\"<h3>\");\n      hHeader.append(VIS.Msg.getMsg('Detail'));\n      divHeader.append(hHeader);\n\n      // if  any checkbox is checked, then don't show History in middle panel.\n      if (selectedItems.length <= 1) {\n        btnCheckList = $(\"<a href='javascript:void(0)' class='vis-btn-zoom mr-1' style='padding-left: 10px;padding-right: 10px;padding-top: 2px;padding-bottom: 2px;' data-id='\" + index + \"'>\" + VIS.Msg.getMsg('CheckList') + \"</a>\");\n        if (info.IsSurveyResponseRequired) {\n          divHeader.append(btnCheckList);\n        }\n        //info.ColName == 'VADMS_IsSigned'\n        if (info.ColName == 'VADMS_SignStatus') {\n          docnameval = fulldata[index].DocumentNameValue.split('_');\n          var docno = {\n            DocumentNo: parseInt(docnameval[docnameval.length - 1])\n          };\n          var folderofDoc = '';\n          // Get certificate status\n          $.post(VIS.Application.contextUrl + 'VADMS/Document/GetFolderID', docno, function (res) {\n            if (res && res.result != '' && !res.result.contains('ERR-') && !res.result.contains('F')) {\n              folderofDoc = parseInt(res.result);\n            } else {\n              VIS.ADialog.error(VIS.Msg.getMsg(\"VA055_FolderNotFound\"));\n            }\n          }, 'json').fail(function (jqXHR, exception) {\n            VIS.ADialog.error(exception);\n          });\n          var formName = {\n            FromName: 'VADMS_DMSWeb'\n          };\n          var formID = '';\n          // Get certificate status\n          $.post(VIS.Application.contextUrl + 'VADMS/Document/GetFormID', formName, function (res) {\n            if (res && res.result != '') {\n              formID = res.result;\n            } else {\n              VIS.ADialog.error(VIS.Msg.getMsg(\"VA055_FormNotFound\"));\n            }\n          }, 'json').fail(function (jqXHR, exception) {\n            VIS.ADialog.error(exception);\n          });\n\n          // Dms Zoom\n          var aZoomDMS = $(\"<a href='javascript:void(0)' class='vis-btn-zoom' style='margin-left:10px;' data-id='\" + docnameval[docnameval.length - 1] + \"'>\");\n          aZoomDMS.append($(\"<span class='vis-btn-ico vis-btn-zoom-bg vis-btn-zoom-border'>\"));\n          aZoomDMS.append(VIS.Msg.getMsg('Zoom'));\n          divHeader.append(aZoomDMS);\n          aZoomDMS.on(VIS.Events.onTouchStartOrClick, function (e) {\n            var id = $(this).data(\"id\");\n            var $additionalInfo = {\n              DocNo: id,\n              DocFolderID: folderofDoc\n            };\n            if (formID > 0) {\n              VIS.viewManager.startForm(formID, $additionalInfo);\n            } else {}\n          });\n        } else {\n          var aZoom = $(\"<a href='javascript:void(0)' class='vis-btn-zoom' data-id='\" + index + \"'>\");\n          //aZoom.css(\"data-id\", index);\n          aZoom.append($(\"<span class='vis-btn-ico vis vis-find vis-btn-zoom-border'>\"));\n          aZoom.append(VIS.Msg.getMsg('Zoom'));\n          divHeader.append(aZoom);\n          aZoom.on(VIS.Events.onTouchStartOrClick, function (e) {\n            var id = $(this).data(\"id\");\n            zoom(id);\n          });\n        }\n      }\n      divHeader.append($(\"<div class='clearfix'>\"));\n      var height = $('#workflowActivityData').height() - 50 + 'px';\n      divWorkflowActivity = $(\"<div class='divWorkflowActivity' style='height:\" + height + \"'>\");\n      divWorkflowChecklist = $(\"<div class='divWorkflowChecklist' style='display:none'></div>\");\n      divDetail.append(divWorkflowActivity);\n      divDetail.append(divWorkflowChecklist);\n\n      //divDetail = divDetail.find('.divWorkflowActivity');\n      divWorkflowActivity.append(bsyDiv);\n      var ul = $(\"<ul class='vis-IIColumnContent'>\");\n      divWorkflowActivity.append(ul);\n      var li1 = $(\"<li>\");\n      li1.css('width', '100%');\n      var p1 = $(\"<p>\");\n      p1.append(VIS.Msg.getMsg('Node'));\n      p1.append($(\"<br>\"));\n      p1.append(VIS.Utility.encodeText(fulldata[index].NodeName));\n      li1.append(p1);\n      ul.append(li1);\n      if (info.AttachmentCount > 0) {\n        li1.append(\"<pre style='margin-top: 10px; margin-bottom: 0px; font-size: 14px; font-family: NoirPro-Regular; color: inherit;'>\" + VIS.Msg.getMsg('Attachment') + \" : \" + VIS.Msg.getMsg('Yes') + \"</pre>\");\n      }\n\n      // var li2 = $(\"<li>\");\n      // if  any checkbox is checked, then don't show summary in middle panel.\n      if (selectedItems.length <= 1) {\n        var p2 = $(\"<pre class='mb-2'>\");\n        p2.css('margin-top', '10px');\n        p2.css('margin-bottom', '0px');\n        p2.css('font-size', '14px');\n        p2.css('font-family', 'NoirPro-Regular');\n        p2.css('color', 'inherit');\n        p2.append(VIS.Msg.getMsg('Summary'));\n        p2.append($(\"<br>\"));\n        p2.append(VIS.Utility.encodeText(fulldata[index].Summary));\n        li1.append(p2);\n      }\n\n      //ul.append(li2);\n\n      divWorkflowActivity.append($(\"<div class='clearfix'>\"));\n      var hDesc = $(\"<p class='mb-0'>\");\n      hDesc.append(VIS.Msg.getMsg('Description'));\n      divWorkflowActivity.append(hDesc);\n      var pDesc = $(\"<p>\");\n      pDesc.append(VIS.Utility.encodeText(fulldata[index].Description));\n      divWorkflowActivity.append(pDesc);\n      divWorkflowActivity.append($(\"<div class='clearfix'>\"));\n      var hHelp = $(\"<p class='mb-0'>\");\n      //hHelp.append($(\"<span class='vis-workflowActivityIcons vis-icon-help'>\"))\n      hHelp.append(VIS.Msg.getMsg('Help'));\n      divWorkflowActivity.append(hHelp);\n      var pHelp = $(\"<p>\");\n      pHelp.append(VIS.Utility.encodeText(fulldata[index].Help));\n      divWorkflowActivity.append(pHelp);\n      divWorkflowActivity.append($(\"<h3>\").append(VIS.Msg.getMsg('Action')));\n      divWorkflowActivity.append($(\"<div class='clearfix'>\"));\n      var ulA = $(\"<ul class='vis-IIColumnContent vis-home-wf-ul'>\");\n      var liAInput = $(\"<li>\");\n      ulA.append(liAInput);\n      var divAInpt = $('<div class=\"vis-home-wf-answerWrap\">');\n      liAInput.append(divAInpt);\n      var divAP = $('<div class=\"input-group vis-home-wf-answerInput vis-input-wrap\">');\n      divAInpt.append(divAP);\n      // divAP.append($(\"<label style='margin-bottom: 0'>\").append(VIS.Msg.getMsg('Answer')));\n      //Get Answer Control\n\n      if (info.NodeAction == 'C') {\n        var ctrl = getControl(info, wfActivityID);\n        detailCtrl.AnswerCtrl = ctrl;\n        if (ctrl != null) {\n          if (ctrl.getBtnCount() > 0) {\n            var divFwd = $(\"<div class='vis-wforwardwrap vis-control-wrap'>\");\n            divFwd.append(ctrl.getControl());\n            var divFwdBtn = $(\"<div class='input-group-append'>\");\n            divFwdBtn.append(ctrl.getBtn(0));\n            divFwd.append($(\"<label style='margin-bottom: 0'>\").append(VIS.Msg.getMsg('Answer')));\n            divAP.append(divFwd).append(divFwdBtn);\n          } else {\n            divAP.append(ctrl.getControl());\n          }\n          detailCtrl.AnswerCtrl = ctrl;\n        }\n        detailCtrl.Action = 'C';\n      } else if (info.NodeAction == 'W') {\n        var ansBtn = $('<button style=\"margin-bottom:10px;margin-top: 0px;width: 100%;\" class=\"VIS_Pref_pass-btn\" data-id=\"' + index + '\" data-window=\"' + info.AD_Window_ID + '\" data-col=\"' + info.KeyCol + '\">').append(info.NodeName);\n        detailCtrl.AnswerCtrl = ansBtn;\n        divAP.append(ansBtn);\n        ansBtn.on('click', function () {\n          ansBtnClick($(this).data(\"id\"), $(this).data(\"window\"), $(this).data(\"col\"));\n        });\n        detailCtrl.Action = 'W';\n      } else if (info.NodeAction == 'X') {\n        var ansBtn = $('<button style=\"margin-bottom:10px;margin-top: 0px;width: 100%;\" class=\"VIS_Pref_pass-btn\" data-id=\"' + index + '\" data-form=\"' + info.AD_Form_ID + '\" data-col=\"' + info.KeyCol + '\">').append(info.NodeName);\n        detailCtrl.AnswerCtrl = ansBtn;\n        divAP.append(ansBtn);\n        ansBtn.on('click', function () {\n          VIS.viewManager.startForm($(this).data(\"form\"));\n        });\n        detailCtrl.Action = 'X';\n      }\n      var aOkA = $(\"<a href='javascript:void(0)'  style='display:none' id='vis-home-wf-ansOK' class='vis-btn vis-btn-done vis-icon-doneButton vis-workflowActivityIcons' data-clicked='N' data-id='\" + index + \"'>\");\n      //aOk.css(\"data-id\",index);\n      aOkA.append($(\"<span class='vis-btn-ico vis-btn-done-bg vis-btn-done-border'>\"));\n      aOkA.append(VIS.Msg.getMsg('Done'));\n      divAInpt.append($('<div class=\"vis-home-wf-answerBtn\">').append(aOkA));\n      var liFInput = $(\"<li>\");\n      ulA.append(liFInput);\n      var divFInpt = $('<div class=\"vis-home-wf-forwardWrap\">');\n      liFInput.append(divFInpt);\n      var divF = $('<div class=\"input-group mb-0 vis-home-wf-forwardInput vis-input-wrap\">');\n      divFInpt.append(divF);\n      var divF1 = $('<div class=\"d-flex\">');\n      divFInpt.append(divF1);\n\n      //Get User Lookup\n      var lookup = VIS.MLookupFactory.get(VIS.context, 0, 0, VIS.DisplayType.Search, \"AD_User_ID\", 0, false, null);\n      var txtb = new VIS.Controls.VTextBoxButton(\"AD_User_ID\", false, false, true, VIS.DisplayType.Search, lookup);\n      detailCtrl.FwdCtrl = txtb;\n      txtb.getBtn();\n      if (txtb.getBtnCount() == 2) {\n        var divFwd = $(\"<div class='vis-wforwardwrap vis-control-wrap'>\");\n        divFwd.append(txtb.getControl());\n        var divFwdBtn = $(\"<div class='input-group-append'>\");\n        divFwdBtn.append(txtb.getBtn(0));\n        divFwdBtn.append(txtb.getBtn(1));\n        divFwd.append($(\"<label style='margin-bottom: 0'>\").append(VIS.Msg.getMsg('Forward')));\n        divF.append(divFwd).append(divFwdBtn);\n      }\n      ;\n      var divM = $('<div class=\"input-group vis-home-wf-forwardInput vis-input-wrap\">');\n      divF1.append(divM);\n      var aOkF = $(\"<a href='javascript:void(0)' style='display:none' id='vis-home-wf-forOK' class='vis-btn vis-btn-done vis-icon-doneButton vis-workflowActivityIcons' data-clicked='N' data-id='\" + index + \"'>\");\n      //aOk.css(\"data-id\",index);\n      aOkF.append($(\"<span class='vis-btn-ico vis-btn-done-bg vis-btn-done-border'>\"));\n      aOkF.append(VIS.Msg.getMsg('Done'));\n      divF1.append($('<div class=\"vis-home-wf-forwardBtn\">').append(aOkF));\n      divWorkflowActivity.append(ulA);\n      divWorkflowActivity.append($(\"<div class='clearfix'>\"));\n      divWorkflowActivity.append($(\"<p style='margin-bottom: 0'>\").append(VIS.Msg.getMsg('Message')));\n      divWorkflowActivity.append($(\"<div class='clearfix'>\"));\n      var divMsg = $(\"<div class='vis-control-wrap'>\");\n      var msg = $(\"<textarea style='width:100%;resize:none;' placeholder='\" + VIS.Msg.getMsg('TypeMessage') + \"....'>\");\n      detailCtrl.MsgCtrl = msg;\n      divMsg.append(msg);\n      // divMsg.append($(\"<button class='vis vis-sms'></button>\"));\n      divMsg.append($(\"<div class='clearfix'>\"));\n      divM.append(divMsg);\n      aOkF.on(VIS.Events.onTouchStartOrClick, function () {\n        okClick(aOkF);\n      });\n      aOkA.on(VIS.Events.onTouchStartOrClick, function () {\n        okClick(aOkA);\n      });\n      function okClick(aOk) {\n        if (aOk.data('clicked') == 'Y') {\n          return;\n        }\n        aOk.data('clicked', 'Y');\n        // Digital signature work - Apply default sign at default location with selected status\n        if (window.VA055 && window.VADMS && info.ColName == 'VADMS_SignStatus') {\n          var signData = {\n            documentNo: docnameval[docnameval.length - 1],\n            defaultReasonKey: $('[name=\"VADMS_SignStatus\"]').children(\"option:selected\").val(),\n            defaultReason: $('[name=\"VADMS_SignStatus\"]').children(\"option:selected\").text()\n            //defaultDigitalSignatureID: $('#pdfsignreason').children(\"option:selected\").data('digitalsignatureid')\n          };\n          if (signData.defaultReasonKey == undefined || signData.defaultReasonKey == '' || signData.defaultReason == undefined || signData.defaultReason == '') {\n            aOk.data('clicked', 'N');\n            VIS.ADialog.info('VA055_ChooseStatus');\n            return;\n          }\n          setBusy(true);\n          $.post(VIS.Application.contextUrl + 'VADMS/Document/SignatureUsingWorkflow', signData, function (res) {\n            setBusy(false);\n            if (res && res != 'null' && res.result == 'success') {\n              $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n              divScroll.empty();\n              adjust_size();\n              lstDetailCtrls = [];\n              selectedItems = [];\n              $busyIndicator.show();\n              window.setTimeout(function () {\n                loadWindows(true);\n              }, 5000);\n            } else {\n              aOk.data('clicked', 'N');\n              VIS.ADialog.error(res.result);\n            }\n          }, 'json').fail(function (jqXHR, exception) {\n            setBusy(false);\n            aOk.data('clicked', 'N');\n            VIS.ADialog.error(exception);\n          });\n        } else {\n          var id = $(aOk).data(\"id\");\n          approveIt(id, aOk);\n        }\n      }\n      ;\n      detailCtrl.FwdCtrl.fireValueChanged = function () {\n        if (detailCtrl.FwdCtrl.getValue() > 0) {\n          detailCtrl.AnswerCtrl.getControl().prop('disabled', true);\n          detailCtrl.AnswerCtrl.getBtn(0).prop('disabled', true);\n          aOkF.css('display', '');\n          aOkA.css('display', 'none');\n        } else {\n          detailCtrl.AnswerCtrl.getControl().prop('disabled', '');\n          detailCtrl.AnswerCtrl.getBtn(0).prop('disabled', '');\n          aOkF.css('display', 'none');\n          aOkA.css('display', 'none');\n        }\n      };\n      detailCtrl.AnswerCtrl.fireValueChanged = function () {\n        if (detailCtrl.AnswerCtrl.getValue() == '' || detailCtrl.AnswerCtrl.getValue() == null) {\n          detailCtrl.FwdCtrl.getControl().prop('disabled', '');\n          detailCtrl.FwdCtrl.getBtn(0).prop('disabled', '');\n          detailCtrl.FwdCtrl.getBtn(1).prop('disabled', '');\n          aOkF.css('display', 'none');\n          aOkA.css('display', 'none');\n          // msg.prop('disabled', '');\n        } else {\n          detailCtrl.FwdCtrl.getControl().prop('disabled', true);\n          detailCtrl.FwdCtrl.getBtn(0).prop('disabled', true);\n          detailCtrl.FwdCtrl.getBtn(1).prop('disabled', true);\n          aOkF.css('display', 'none');\n          aOkA.css('display', '');\n          // msg.prop('disabled', true);\n        }\n      };\n      lstDetailCtrls.push(detailCtrl);\n\n      // if  any checkbox is checked, then don't show History in middle panel.\n      if (selectedItems.length <= 1) {\n        divWorkflowActivity.append($(\"<h3>\").append(VIS.Msg.getMsg('History')));\n        divWorkflowActivity.append($(\"<div class='clearfix'>\"));\n        var divHistory = $(\"<div class='vis-history-wrap'>\");\n        divWorkflowActivity.append(divHistory);\n        if (info.Node != null) {\n          var divHistoryNode = $(\"<div style='margin-top:15px;margin-bottom:15px'>\");\n          for (node in info.Node) {\n            if (info.Node[node].History != null) {\n              for (hNode in info.Node[node].History) {\n                if (info.Node[node].History[hNode].State == 'CC' && node < info.Node.length - 1) {\n                  divHistoryNode.append($(\"<div class='vis-vertical-img'>\").append($(\"<img src='\" + VIS.Application.contextUrl + \"Areas/VIS/Images/home/4.jpg'>\")));\n                  var divAppBy = $(\"<div class='vis-approved_wrap'>\");\n                  var nodename = '';\n                  nodename = info.Node[node].Name;\n                  var divLeft = $(\"<div class='vis-left-part'>\");\n                  if (info.Node[node].History[hNode].TextMsg.length > 0) {\n                    var btnDetail = $(\"<a href='javascript:void(0)' class='VIS_Pref_tooltip' style='margin-right:5px'>\").append($(\"<img class='VIS_Pref_img-i'>\").attr('src', VIS.Application.contextUrl + \"Areas/VIS/Images/i.png\"));\n                    var span = $(\"<span>\");\n                    span.append($(\"<img class='VIS_Pref_callout'>\").attr('src', VIS.Application.contextUrl + \"Areas/VIS/Images/ccc.png\").append(\"ToolTip Text\"));\n                    span.append($(\"<label class='VIS_Pref_Label_Font'>\").append(VIS.Utility.encodeText(info.Node[node].History[hNode].TextMsg)));\n                    btnDetail.append(span);\n                    divLeft.append(btnDetail);\n                  }\n                  divLeft.append(nodename);\n                  divAppBy.append(divLeft);\n                  var divRight = $(\"<div class='vis-right-part'>\");\n                  divRight.append(VIS.Msg.getMsg('CompletedBy')).append($(\"<span class='vis-app_by'>\").append(info.Node[node].History[hNode].ApprovedBy));\n                  //divRight.append(btnDetail);\n                  divAppBy.append(divRight);\n                  divHistoryNode.append(divAppBy);\n                } else if (node < info.Node.length - 1 || info.Node.length == 1) {\n                  var divAppBy = $(\"<div class='vis-pending_wrap' style='margin-top:-2px'>\");\n                  divAppBy.append($(\"<div class='vis-left-part'>\").append(info.Node[node].Name));\n                  divAppBy.append($(\"<div class='vis-right-part'>\").append(VIS.Msg.getMsg('Pending')));\n                  divHistoryNode.append(divAppBy);\n                  //divHistoryNode.append($(\"<div class='vis-vertical-img'>\").append($(\"<img src='/ViennaAdvantageWeb/Areas/VIS/Images/home/4.jpg'>\")));\n                } else {\n                  divHistoryNode.append($(\"<div class='vis-vertical-img'>\").append($(\"<img src='\" + VIS.Application.contextUrl + \"Areas/VIS/Images/home/4.jpg'>\")));\n                  var divStart = $(\"<div class='vis-start_wrap' style='margin-bottom:-8px'>\");\n                  var divLeft = $(\"<div class='vis-left-part'>\");\n                  if (info.Node[node].History[hNode].TextMsg.length > 0) {\n                    var btnDetail = $(\"<a href='javascript:void(0)' class='VIS_Pref_tooltip' style='margin-right:5px'>\").append($(\"<img class='VIS_Pref_img-i'>\").attr(\"src\", VIS.Application.contextUrl + \"Areas/VIS/Images/i.png\"));\n                    var span = $(\"<span >\");\n                    span.append($(\"<img class='VIS_Pref_callout'>\").attr('src', VIS.Application.contextUrl + \"Areas/VIS/Images/ccc.png\").append(\"ToolTip Text\"));\n                    span.append($(\"<label class='VIS_Pref_Label_Font'>\").append(VIS.Utility.encodeText(info.Node[node].History[hNode].TextMsg)));\n                    btnDetail.append(span);\n                    divLeft.append(btnDetail);\n                  }\n                  divLeft.append(info.Node[node].Name);\n                  divStart.append(divLeft);\n                  var divRight = $(\"<div class='vis-right-part'>\");\n                  divRight.append(VIS.Msg.getMsg('CompletedBy')).append($(\"<span class='vis-app_by'>\").append(info.Node[node].History[hNode].ApprovedBy));\n                  //divRight.append(btnDetail);\n                  divStart.append(divRight);\n                  // divStart.append($(\"<div class='vis-right-part'>\").append(VIS.Msg.getMsg('CompletedBy')).append($(\"<span class='vis-app_by'>\").append(info.Node[node].History[hNode].ApprovedBy)));\n                  divHistoryNode.append(divStart);\n                }\n              }\n              divHistory.append(divHistoryNode);\n            }\n          }\n        }\n      }\n      //  $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n      $busyIndicator.hide();\n      btnCheckList.off().click(function () {\n        divWorkflowChecklist.html('');\n        if ($(this).text() != \"Back\") {\n          $(this).text(VIS.Msg.getMsg('Back'));\n          divDetail.find(\".vis-workflowActivityDetails-Heading h3\").text(VIS.Msg.getMsg('CheckList'));\n          var sPanel = new VIS.SurveyPanel();\n          sPanel.init();\n          var rt = sPanel.getRoot();\n          divWorkflowChecklist.html('');\n          sPanel.panelDetails(fulldata[index].AD_Window_ID, 0, fulldata[index].AD_Table_ID, fulldata[index].Record_ID, rt, fulldata[index].AD_WF_Activity_ID);\n          divWorkflowChecklist.append(rt);\n        } else {\n          divDetail.find(\".vis-workflowActivityDetails-Heading h3\").text(VIS.Msg.getMsg('Detail'));\n          $(this).text(VIS.Msg.getMsg('CheckList'));\n        }\n        divWorkflowActivity.toggle(700);\n        if (divWorkflowChecklist.is(\":hidden\")) {\n          divWorkflowChecklist.show();\n        } else {\n          divWorkflowChecklist.hide();\n        }\n      });\n    };\n    var zoom = function (index) {\n      // vinay bhatt window id\n      VIS.AEnv.wfzoom(fulldata[index].AD_Table_ID, fulldata[index].Record_ID, fulldata[index].AD_WF_Activity_ID);\n      //\n    };\n    var approveIt = function (index, aOK) {\n      var aOK = aOK;\n      $(\"#divfeedbsy\")[0].style.visibility = \"visible\";\n      window.setTimeout(function () {\n        for (var item in lstDetailCtrls) {\n          try {\n            if (index === lstDetailCtrls[item].Index) {\n              var fwdTo = lstDetailCtrls[item].FwdCtrl.getValue();\n              var msg = VIS.Utility.encodeText(lstDetailCtrls[item].MsgCtrl.val());\n              var answer = null;\n              if (lstDetailCtrls[item].Action == 'C') {\n                var answer = lstDetailCtrls[item].AnswerCtrl.getValue();\n              }\n\n              //var info = (VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"WFActivity/ApproveIt\",\n              //    { \"activityID\": fulldata[index].AD_WF_Activity_ID, \"nodeID\": fulldata[index].AD_Node_ID, \"txtMsg\": msg, \"fwd\": fwdTo, \"answer\": answer })).result;\n\n              var activitIDs = \"\";\n              // if checkbox is selected, then join activity ID using comma splitter.\n              if (selectedItems && selectedItems.length > 0) {\n                for (var k = 0; k < selectedItems.length; k++) {\n                  if (activitIDs.length > 0) {\n                    activitIDs += \",\";\n                  }\n                  activitIDs += selectedItems[k].split(\"_\")[2];\n                }\n              } else {\n                activitIDs = fulldata[index].AD_WF_Activity_ID;\n              }\n\n              // set window ID of activity\n              windowID = fulldata[index].AD_Window_ID;\n              setBusy(true);\n              VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"WFActivity/ApproveIt\", {\n                \"activityID\": activitIDs,\n                \"nodeID\": fulldata[index].AD_Node_ID,\n                \"txtMsg\": msg,\n                \"fwd\": fwdTo,\n                \"answer\": answer,\n                \"AD_Window_ID\": windowID\n              }, function apprvoIt(info) {\n                setBusy(false);\n                if (info.result == '') {\n                  //refresh\n                  //alert(\"Done\");\n                  $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n                  aOK.data('clicked', 'N');\n                  //window.setTimeout(function () {\n                  //    $('#workflowActivity').hide();\n                  //}, 200);\n                  divScroll.empty();\n                  adjust_size();\n                  lstDetailCtrls = [];\n                  selectedItems = [];\n                  // $(\"#divfeedbsy\")[0].style.visibility = \"visible\";\n                  $busyIndicator.show();\n                  loadWindows(true);\n                } else {\n                  VIS.ADialog.error(info.result);\n                  //alert(VIS.Msg.getMsg(info.result));\n                  aOK.data('clicked', 'N');\n                  $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n                }\n              });\n              break;\n            }\n          } catch (e) {\n            setBusy(false);\n            VIS.ADialog.error(\"FillMandatory\", true, \"\");\n            //alert('FillManadatory');\n            aOK.data('clicked', 'N');\n            $(\"#divfeedbsy\")[0].style.visibility = \"hidden\";\n          }\n        }\n        aOK.data('clicked', 'N');\n      }, 2);\n    };\n    var getControl = function (info, wfActivityID) {\n      var ctrl = null;\n      if (info.ColID == 0) {\n        return ctrl;\n      }\n      if (info.ColReference == VIS.DisplayType.YesNo) {\n        var lookup = VIS.MLookupFactory.get(VIS.context, 0, 0, VIS.DisplayType.List, info.ColName, 319, false, null);\n        ctrl = new VIS.Controls.VComboBox(info.ColName, false, false, true, lookup, 50);\n        return ctrl;\n      } else if (info.ColReference == VIS.DisplayType.List) {\n        var lookup = VIS.MLookupFactory.get(VIS.context, 0, 0, VIS.DisplayType.List, info.ColName, info.ColReferenceValue, false, null);\n        ctrl = new VIS.Controls.VComboBox(info.ColName, false, false, true, lookup, 50);\n        return ctrl;\n      } else if (info.ColName.toUpperCase() == \"C_GENATTRIBUTESETINSTANCE_ID\") {\n        // alert('Gen Attribute Not Implement Yet');\n        var vAttSetInstance = null;\n        var lookupCur = new VIS.MGAttributeLookup(VIS.context, 0);\n        $.ajax({\n          url: VIS.Application.contextUrl + \"WFActivity/GetRelativeData\",\n          async: false,\n          data: {\n            activityID: wfActivityID\n          },\n          dataType: \"json\",\n          success: function (dyndata) {\n            if (dyndata.result) {\n              vAttSetInstance = new VIS.Controls.VPAttribute('C_GenAttributeSetInstance', true, false, true, VIS.DisplayType.PAttribute, lookupCur, 0, true, false, false, false);\n              vAttSetInstance.SetC_GenAttributeSet_ID(dyndata.result.GenAttributeSetID);\n            }\n          }\n        });\n        return vAttSetInstance;\n      } else if (info.ColReference == VIS.DisplayType.TableDir) {\n        var lookup = VIS.MLookupFactory.get(VIS.context, 0, 0, VIS.DisplayType.TableDir, info.ColName, info.ColReferenceValue, false, null);\n        ctrl = new VIS.Controls.VComboBox(info.ColName, false, false, true, lookup, 50);\n        return ctrl;\n      } else if (info.ColReference == VIS.DisplayType.Search) {\n        var lookup = VIS.MLookupFactory.get(VIS.context, 0, 0, VIS.DisplayType.Search, info.ColName, info.ColReferenceValue, false, null);\n        ctrl = new VIS.Controls.VTextBoxButton(info.ColName, false, false, true, VIS.DisplayType.Search, lookup);\n        return ctrl;\n      } else {\n        ctrl = new VIS.Controls.VTextBox(info.ColName, false, false, true, 50, 100, null, null, false);\n        return ctrl;\n      }\n    };\n    var ansBtnClick = function (index, AD_Window_ID, columnName) {\n      var zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction(columnName, VIS.Query.prototype.EQUAL, fulldata[index].Record_ID);\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n    };\n    this.clear = function () {\n      for (var itm in dataItemDivs) {\n        dataItemDivs[itm] = null;\n      }\n    };\n  }\n  ;\n  VIS.wfActivity = wfActivity;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/Framework/wfactivity.js?")},"./Areas/VIS/Scripts/app/adialog.js":()=>{eval(';\n(function (VIS, $) {\n  /**\r\n   *  Info Dialog Management\r\n   *  \r\n   */\n  var $body = $(\'body\');\n  var $prodBuzzer = $(\'#vis_buzzer\');\n  function AD() {\n    var _overLay = $(\'<div id="overlayMsgDialog" class="web_dialog_overlay"></div>\');\n    var $mainDivParent = $(\'<div class="vis-PopupWrap-alertmain" tabIndex=1>\');\n    //<div class="vis-confirm-popup-check"><input type="checkbox"><label>Background</label></div>\n    var $mainDiv = $(\'<div id="VAPOS_ErrorInfo" class="vis-PopupWrap-alert">\' + \'<input class="vis-Dialog-buttons-text" type="number"  tabindex="-30" style="z-index:-44;position:absolute"  autofocus="autofocus"  > \' + \'       <div class="vis-popup-headerContainer">                                           \' + \'       <div class="vis-PopupHeader-alert">\' + \'           <h4 id="VAPOS_CLInformation">Information</h4>\' + \'           <span id="btnCloseInfo" class="fa fa-times"></span>                     \' + \'       </div>  </div>                                                                                   \' + \'       <div class="vis-PopupContent-alert">                                                     \' + \'               <div class="form-group vis-PopupInput-alert" style="width: 100%">                 \' + \'               <img class="vis-alert-img" style="float:left"  />                                                   \' + \'                   <label style="width: 90%;padding-left: 10px;word-break: break-word" id="VAPOS_lblErrorInfo"></label>                  \' + \'                 <div class="vis-confirm-customUI" style="display:none"> </div>         \' + \'               </div>                                                                           \' + \'                     <div class="vis-Dialog-buttons" style="display:none">                                           \' + \'<input class="vis-Dialog-buttons-OK " type="button" value="\' + VIS.Msg.getMsg("OK") + \'" > <input  class="vis-Dialog-buttons-Cancel"  type="button" value="\' + VIS.Msg.getMsg("Cancel") + \'" >\' + \'                                               </div>                                           \' + \'                                                                                                \' + \'       </div>                                                                                   \' + \'   </div>\');\n    $mainDivParent.append($mainDiv);\n    $body.append(_overLay).append($mainDivParent);\n    var _hideOverlay = true;\n    var _header = $mainDiv.find(".vis-PopupHeader-alert");\n    var _headerContainer = $mainDiv.find(\'.vis-popup-headerContainer\');\n    var _btnCloseInfo = $mainDiv.find("#btnCloseInfo"); //btn close\n\n    var _headerText = $mainDiv.find("#VAPOS_CLInformation"); //headertext\n    var _headerImg = $mainDiv.find(".vis-alert-img"); //header img\n\n    var _content = $mainDiv.find(".vis-PopupContent-alert");\n    var _contentMsg = $mainDiv.find("#VAPOS_lblErrorInfo"); //label\n\n    var _customUI = $mainDiv.find(\'.vis-confirm-customUI\');\n\n    //  var _overLay = _main.find("#overlayMsgDialog");\n    var _busyInd = $mainDiv.find("#VAPOS_busyInd");\n    var _btnOK = null;\n    var _btnCancel = null;\n    //var _txtBx = $mainDiv.find(".vis-Dialog-buttons-text");;\n\n    var _callback = null;\n    _btnCloseInfo.on("click", function (e) {\n      closeIt(e);\n    });\n    function handleKeys(askUser) {\n      if (askUser) {\n        window.setTimeout(function () {\n          _btnCancel.focus();\n          $mainDivParent.on("keydown", function (e) {\n            if (e.keyCode == 9) {\n              if (_btnOK.is(\':focus\')) {\n                _btnCancel.focus();\n              } else if (_btnCancel.is(\':focus\')) {\n                _btnOK.focus();\n              } else {\n                _btnCancel.focus();\n              }\n              e.preventDefault();\n              e.stopPropagation();\n              //return false;\n            } else if (e.keyCode == 27) {\n              e.preventDefault();\n              e.stopPropagation();\n              closeIt(e);\n              //  _txtBx.off("keydown");\n              return false;\n            }\n          });\n        }, 100);\n      } else {\n        $mainDivParent.focus();\n        $mainDivParent.on("keydown", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          closeIt(e);\n          //  _txtBx.off("keydown");\n          return false;\n        });\n      }\n    }\n    ;\n    function closeIt(e) {\n      e.stopPropagation();\n      if (_callback) _callback();\n      _callback = null;\n      disposeEvents();\n    }\n    ;\n    function disposeEvents() {\n      _overLay.hide();\n      $mainDivParent.css({\n        "position": "inherit",\n        "display": "none"\n      });\n      $mainDiv.find(\'.vis-Dialog-buttons\').css("display", "none");\n      //$mainDiv.fadeOut(300);\n\n      if (_btnOK) {\n        _btnOK.off("click");\n      }\n      if (_btnCancel) {\n        _btnCancel.off("click");\n      }\n      $mainDivParent.off("keydown");\n\n      //$mainDivParent.remove();\n      //$mainDiv.remove();\n      //$mainDivParent = null;\n      //$mainDiv = null;\n      //_btnOK.remove();\n      //_btnCancel.remove();\n      //_btnCancel = null;\n      //_btnOK = null;\n    }\n    ;\n    function info(msg, header, callback) {\n      _callback = callback;\n      try {\n        // $(\'#prodError\')[0].play();\n      } catch (ex) {}\n      //$mainDiv.find(\'.vis-Dialog-buttons\').css("display", "none");\n      $mainDivParent.css({\n        "position": "absolute",\n        "display": "flex"\n      });\n      $mainDiv.show();\n      //_btnCloseInfo.removeClass();\n      //_btnCloseInfo.addClass("vis-alert-close vis-alert-close-info");\n      _header.removeClass();\n      _header.addClass("vis-PopupHeader-alert vis-PopupHeader-alert-info");\n      _content.removeClass();\n      _content.addClass("vis-PopupContent-alert vis-PopupContent-alert-info");\n      _headerContainer.removeClass();\n      _headerContainer.addClass("vis-popup-headerContainer vis-popup-headerContainer-info");\n      _headerImg.attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/base/info-icon.png");\n      _prodFound = true;\n      _contentMsg.text(msg);\n      if (!header) {\n        _headerText.text(VIS.Msg.getMsg("Info"));\n      } else {\n        _headerText.text(VIS.Msg.getMsg(header));\n      }\n      //_hideOverlay = hideOverlay;\n      _overLay.show();\n      $mainDiv.fadeIn(300);\n      handleKeys(false);\n      //_txtBx.on("keydown", function (e) {\n      //    clss(e);\n      //});\n\n      //_txtBx.on("focusin", function (e) {\n      //    e.stopPropagation();\n      //});\n\n      //    _txtBx.focus();\n    }\n    ;\n    function clss(e) {\n      if (e.keyCode == 27) {\n        e.preventDefault();\n        e.stopPropagation();\n        closeIt(e);\n        //  _txtBx.off("keydown");\n        return false;\n      }\n    }\n    ;\n    function ask(msg, header, callback) {\n      _callback = callback;\n      try {\n        // $(\'#prodError\')[0].play();\n      } catch (ex) {}\n      $mainDivParent.css({\n        "position": "absolute",\n        "display": "flex"\n      });\n      $mainDiv.show();\n      //_btnCloseInfo.removeClass();\n      //_btnCloseInfo.addClass("vis-alert-close vis-alert-close-info");\n      _header.removeClass();\n      _header.addClass("vis-PopupHeader-alert vis-PopupHeader-alert-info");\n      _content.removeClass();\n      _content.addClass("vis-PopupContent-alert vis-PopupContent-alert-info vis-PopupContent-alert-Confirm");\n      _headerContainer.removeClass();\n      _headerContainer.addClass("vis-popup-headerContainer vis-popup-headerContainer-info");\n      _headerImg.attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/base/confirm-icon.png");\n      var $btnsDiv = $mainDiv.find(\'.vis-Dialog-buttons\');\n      $btnsDiv.css("display", "inherit");\n      _btnOK = $btnsDiv.find(".vis-Dialog-buttons-OK");\n      _btnCancel = $btnsDiv.find(".vis-Dialog-buttons-Cancel");\n      _prodFound = true;\n      _contentMsg.text(msg);\n      if (!header) {\n        _headerText.text(VIS.Msg.getMsg("Confirm"));\n      } else {\n        _headerText.text(VIS.Msg.getMsg(header));\n      }\n      //_hideOverlay = hideOverlay;\n      _overLay.show();\n      $mainDiv.fadeIn(300);\n      _btnOK.one("click", function () {\n        disposeEvents();\n        $btnsDiv.css("display", "none");\n        _callback(true);\n        // _btnCloseInfo.trigger("click");\n      });\n      _btnCancel.one("click", function () {\n        disposeEvents();\n        $btnsDiv.css("display", "none");\n        _callback(false);\n        // _btnCloseInfo.trigger("click");\n      });\n      handleKeys(true);\n      //_txtBx.on("keydown", function (e) {\n      //    clss(e);\n      //});\n\n      //_txtBx.on("focusin", function (e) {\n      //    e.stopPropagation();\n      //});\n\n      //_txtBx.focus();\n    }\n    ;\n    function askCustomUI(msg, header, $rootDiv, callback) {\n      _callback = callback;\n      try {\n        // $(\'#prodError\')[0].play();\n      } catch (ex) {}\n      $mainDivParent.css({\n        "position": "absolute",\n        "display": "flex"\n      });\n      $mainDiv.show();\n      //_btnCloseInfo.removeClass();\n      //_btnCloseInfo.addClass("vis-alert-close vis-alert-close-info");\n      _header.removeClass();\n      _header.addClass("vis-PopupHeader-alert vis-PopupHeader-alert-info");\n      _content.removeClass();\n      _content.addClass("vis-PopupContent-alert vis-PopupContent-alert-info vis-PopupContent-alert-Confirm");\n      _headerContainer.removeClass();\n      _headerContainer.addClass("vis-popup-headerContainer vis-popup-headerContainer-info");\n      _headerImg.attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/base/confirm-icon.png");\n      var $btnsDiv = $mainDiv.find(\'.vis-Dialog-buttons\');\n      $btnsDiv.css("display", "inherit");\n      _btnOK = $btnsDiv.find(".vis-Dialog-buttons-OK");\n      _btnCancel = $btnsDiv.find(".vis-Dialog-buttons-Cancel");\n      _prodFound = true;\n      _contentMsg.text(msg);\n      _customUI.empty();\n      _customUI.css(\'display\', \'block\');\n      _customUI.append($rootDiv);\n      if (!header) {\n        _headerText.text(VIS.Msg.getMsg("Confirm"));\n      } else {\n        _headerText.text(VIS.Msg.getMsg(header));\n      }\n      //_hideOverlay = hideOverlay;\n      _overLay.show();\n      $mainDiv.fadeIn(300);\n      _btnOK.one("click", function () {\n        disposeEvents();\n        $btnsDiv.css("display", "none");\n        _customUI.css(\'display\', \'none\');\n        _customUI.empty();\n        _callback(true);\n        // _btnCloseInfo.trigger("click");\n      });\n      _btnCancel.one("click", function () {\n        disposeEvents();\n        $btnsDiv.css("display", "none");\n        _customUI.css(\'display\', \'none\');\n        _customUI.empty();\n        _callback(false);\n        // _btnCloseInfo.trigger("click");\n      });\n      handleKeys(true);\n      //_txtBx.on("keydown", function (e) {\n      //    clss(e);\n      //});\n\n      //_txtBx.on("focusin", function (e) {\n      //    e.stopPropagation();\n      //});\n\n      //_txtBx.focus();\n    }\n    ;\n    function warn(msg, header, callback) {\n      _callback = callback;\n      try {\n        //$prodBuzzer[0].play();\n      } catch (ex) {}\n      //$mainDiv.find(\'.vis-Dialog-buttons\').css("display", "none");\n      _prodFound = true;\n      $mainDivParent.css({\n        "position": "absolute",\n        "display": "flex"\n      });\n      $mainDiv.show();\n      //_btnCloseInfo.removeClass();\n      //_btnCloseInfo.addClass("vis-alert-close vis-alert-close-warn");\n      _header.removeClass();\n      _header.addClass("vis-PopupHeader-alert vis-PopupHeader-alert-warn");\n      _content.removeClass();\n      _content.addClass("vis-PopupContent-alert vis-PopupContent-alert-warn");\n      _headerContainer.removeClass();\n      _headerContainer.addClass("vis-popup-headerContainer vis-popup-headerContainer-warn");\n      _headerImg.attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/base/warning-icon.png");\n      _contentMsg.text(msg);\n      // _hideOverlay = hideOverlay;\n      if (!header) {\n        _headerText.text(VIS.Msg.getMsg("Warning"));\n      } else {\n        _headerText.text(VIS.Msg.getMsg(header));\n      }\n      _overLay.show();\n      handleKeys(false);\n      //_txtBx.on("keydown", function (e) {\n      //    clss(e);\n      //});\n\n      //_txtBx.on("focusin", function (e) {\n      //    e.stopPropagation();\n      //});\n\n      //_txtBx.focus();\n\n      // _busyInd.hide();\n    }\n    ;\n    function error(msg, header, callback) {\n      _callback = callback;\n      try {\n        //$prodBuzzer[0].play();\n      } catch (ex) {}\n      //$btnsDiv.css("display", "none");\n      _prodFound = true;\n      $mainDivParent.css({\n        "position": "absolute",\n        "display": "flex"\n      });\n      $mainDiv.show();\n      //_btnCloseInfo.removeClass();\n      //_btnCloseInfo.addClass("vis-alert-close vis-alert-close-error");\n      _header.removeClass();\n      _header.addClass("vis-PopupHeader-alert vis-PopupHeader-alert-error");\n      _content.removeClass();\n      _content.addClass("vis-PopupContent-alert vis-PopupContent-alert-error");\n      _headerContainer.removeClass();\n      _headerContainer.addClass("vis-popup-headerContainer vis-popup-headerContainer-error");\n      _headerImg.attr("src", VIS.Application.contextUrl + "Areas/VIS/Images/base/error-icon.png");\n      _contentMsg.text(msg);\n      // _hideOverlay = hideOverlay;\n      if (!header) {\n        _headerText.text(VIS.Msg.getMsg("Error"));\n      } else {\n        _headerText.text(VIS.Msg.getMsg(header));\n      }\n      _overLay.show();\n      $mainDiv.fadeIn(300);\n      handleKeys(false);\n      //_txtBx.on("keydown", function (e) {\n      //    clss(e);\n      //});\n\n      //_txtBx.on("focusin", function (e) {\n      //    e.stopPropagation();\n      //});\n\n      //_txtBx.focus();\n\n      //_busyInd.hide();\n    }\n    ;\n    return {\n      info: info,\n      ask: ask,\n      error: error,\n      warn: warn,\n      askCustomUI: askCustomUI\n    };\n  }\n  ;\n  VIS.ADialog = {\n    /**\r\n     *  Show Plain message with info \r\n     *  @method info\r\n     *  @param keyName Keyword Name\r\n     *  @param isTextMsg if true returns Message Text, if false returns Message Tip\r\n     *     and if null then returns both message text and tip.\r\n     *  @param extraMsg extra message to be displayed\r\n     */\n    info: function (keyName, isMsgText, extraMsg, header) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n      VIS.ADialogUI.info(content, header);\n\n      //var $p = $(\'<p>\');\n      //$p.text(content);\n      //div.append($p);\n\n      //div.dialog();\n\n      //alert(content);\n      content = null;\n    },\n    /**\r\n    *\tAsk Question with question icon and (OK) (Cancel) buttons\r\n    *    @method ask\r\n    *\t@param\tkeyName\tMessage to be translated\r\n    *\t@param\tmsg\t\t\tAdditional clear text message\r\n    *\t@return true, if OK\r\n    */\n\n    ask: function (keyName, isMsgText, extraMsg, header) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n      var retValue = false;\n      // opens message window\n      //Message d = new Message(header, content.ToString(), Message.MessageType.QUESTION);\n      if (confirm(content))\n        // d.ShowDialog() == System.Windows.Forms.DialogResult.OK)\n        {\n          // if user clicks on OK button change the value\n          retValue = true;\n        }\n      return retValue;\n    },\n    /**\r\n    *\tDisplay error with error icon\r\n     *  @method error\r\n    *\t@param\tkeyName\tMessage to be translated\r\n     *  @param  isMsgText \r\n    *\t@param\textraMsg\t\t\tAdditional message\r\n    */\n    error: function (keyName, isMsgText, extraMsg, header) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n\n      // if user has given statusbar label, then show the messsage on status bar also\n\n      VIS.ADialogUI.error(content, header);\n      content = null;\n    },\n    /**\r\n    *\tDisplay warning with warning icon\r\n     *  @method warn\r\n    *\t@param\tkeyName\tMessage to be translated\r\n     *  @param  isMsgText \r\n    *\t@param\textraMsg\t\t\tAdditional message\r\n    */\n    warn: function (keyName, isMsgText, extraMsg, header) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n\n      //  alert(content);\n\n      VIS.ADialogUI.warn(content, header);\n      content = null;\n    },\n    confirm: function (keyName, isMsgText, extraMsg, header, callback) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n      var retValue = false;\n      // opens message window\n      //Message d = new Message(header, content.ToString(), Message.MessageType.QUESTION);\n      //if (confirm(content))// d.ShowDialog() == System.Windows.Forms.DialogResult.OK)\n      //{\n      //    // if user clicks on OK button change the value\n      //    retValue = true;\n      //}\n\n      VIS.ADialogUI.ask(content, header, callback);\n      return retValue;\n    },\n    confirmCustomUI: function (keyName, isMsgText, extraMsg, header, $rootDiv, callback) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n      var retValue = false;\n      // opens message window\n      //Message d = new Message(header, content.ToString(), Message.MessageType.QUESTION);\n      //if (confirm(content))// d.ShowDialog() == System.Windows.Forms.DialogResult.OK)\n      //{\n      //    // if user clicks on OK button change the value\n      //    retValue = true;\n      //}\n\n      VIS.ADialogUI.askCustomUI(content, header, $rootDiv, callback);\n      return retValue;\n    }\n  };\n\n  /**\r\n   * Handle Callback on close -- VIS0228 29-Jan-2024\r\n   * */\n\n  VIS.ADialogCallback = {\n    /**\r\n     *  Show Plain message with info \r\n     *  @method info\r\n     *  @param keyName Keyword Name\r\n     *  @param isTextMsg if true returns Message Text, if false returns Message Tip\r\n     *     and if null then returns both message text and tip.\r\n     *  @param extraMsg extra message to be displayed\r\n     */\n    info: function (keyName, extraMsg, header, callback) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n      VIS.ADialogUI.info(content, header, callback);\n\n      //var $p = $(\'<p>\');\n      //$p.text(content);\n      //div.append($p);\n\n      //div.dialog();\n\n      //alert(content);\n      content = null;\n    },\n    /**\r\n    *\tDisplay error with error icon\r\n     *  @method error\r\n    *\t@param\tkeyName\tMessage to be translated\r\n     *  @param  isMsgText \r\n    *\t@param\textraMsg\t\t\tAdditional message\r\n    */\n    error: function (keyName, extraMsg, header, callback) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n\n      // if user has given statusbar label, then show the messsage on status bar also\n\n      VIS.ADialogUI.error(content, header, callback);\n      content = null;\n    },\n    /**\r\n    *\tDisplay warning with warning icon\r\n     *  @method warn\r\n    *\t@param\tkeyName\tMessage to be translated\r\n     *  @param  isMsgText \r\n    *\t@param\textraMsg\t\t\tAdditional message\r\n    */\n    warn: function (keyName, extraMsg, header, callback) {\n      var content = "";\n      // if user has given a key\n      if (keyName != null && !keyName.equals("")) {\n        // get key\'s value\n        content += VIS.Msg.getMsg(keyName);\n      }\n      // if user has given any extra content\n      if (extraMsg != null && extraMsg.length > 0) {\n        // add the content\n        content += "\\n" + extraMsg;\n      }\n\n      //  alert(content);\n\n      VIS.ADialogUI.warn(content, header, callback);\n      content = null;\n    }\n  };\n  VIS.ADialogUI = AD();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/adialog.js?')},"./Areas/VIS/Scripts/app/areport.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate Report\r\n * Author         :     Lakhwinder\r\n * Date           :     2-Nov-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  var $root = $(\'<div class="vis-reportrootdiv">\'); //, {\n\n  var $menu = $("<ul class=\'vis-apanel-rb-ul\'  style=\'width:100%;height:100%\'>");\n  $root.append($menu);\n  //var liCSV = $("<li>").append(VIS.Msg.getMsg(\'OpenCSV\'));\n  //$menu.append(liCSV);\n  //var liPDF = $("<li>").append(VIS.Msg.getMsg(\'OpenPDF\'));\n  //$menu.append(liPDF);\n  //var liRTF = $("<li>").append(VIS.Msg.getMsg(\'OpenRTF\'));\n  //$menu.append(liRTF);\n\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n  var executeQuery = function (sqls, params, callback) {\n    var async = callback ? true : false;\n    var ret = null;\n    var dataIn = {\n      sql: sqls,\n      param: params\n    };\n    $.ajax({\n      url: nonQueryUrl + \'yWithCode\',\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(dataIn)\n    }).done(function (json) {\n      ret = json;\n      if (callback) {\n        callback(json);\n      }\n    });\n    return ret;\n  };\n  var executeScalar = function (sql, params, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (params) {\n      dataIn.param = params;\n    }\n    var value = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      var dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (dataSet.getTable(0).getRows().length > 0) {\n        value = dataSet.getTable(0).getRow(0).getCell(0);\n      } else {\n        value = null;\n      }\n      dataSet.dispose();\n      dataSet = null;\n      if (async) {\n        callback(value);\n      }\n    });\n    return value;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    // data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  function AReport(AD_Table_ID, query, AD_Tab_ID, windowNo, curTab, treeID, treeNodeID, IsSummary) {\n    var AD_Client_ID = null;\n    var sql = null;\n    var dr = null;\n    var list = null;\n    var tree_ID = treeID;\n    var treeNode_ID = treeNodeID;\n    var windowID = curTab.getAD_Window_ID();\n    var AD_Table_ID = AD_Table_ID;\n    var rv = new VIS.ReportViewer(windowNo, curTab);\n    if (treeNodeID > 0) {\n      rv.setNodeID(treeNodeID);\n    }\n    if (treeID > 0) {\n      rv.setTreeID(treeID);\n    }\n    if (!IsSummary) {\n      rv.showSummary(IsSummary);\n    }\n    if (AD_Table_ID) {\n      rv.setAD_Table_ID(AD_Table_ID);\n    }\n    var getPrintFormats = function (AD_Table_ID) {\n      AD_Client_ID = VIS.context.getAD_Client_ID();\n      //sql = "SELECT AD_PrintFormat_ID, Name, AD_Client_ID "\n      //       + "FROM AD_PrintFormat "\n      //       + "WHERE AD_Table_ID=\'" + AD_Table_ID + "\' AND IsTableBased=\'Y\' ";\n      //if (AD_Tab_ID > 0) {\n      //    sql = sql + " AND AD_Tab_ID=\'" + AD_Tab_ID + "\' ";\n      //}\n      //sql = sql + "ORDER BY AD_Client_ID DESC, IsDefault DESC, Name";\t//\tOwn First\n      //sql = VIS.MRole.getDefault().addAccessSQL(sql,\t\t//\tOwn First\n      //       "AD_PrintFormat", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO);\n\n      dr = null;\n      var pp = null;\n      var list = [];\n      try {\n        var dr = null;\n        $.ajax({\n          type: \'Get\',\n          async: false,\n          url: VIS.Application.contextUrl + "Form/GetPrintFormats",\n          data: {\n            AD_Table_ID: AD_Table_ID,\n            AD_Tab_ID: AD_Tab_ID\n          },\n          success: function (data) {\n            dr = new VIS.DB.DataReader().toJson(data);\n          }\n        });\n\n        //dr = executeReader(sql, null, null);\n        while (dr.read()) {\n          if (VIS.Utility.Util.getValueOfInt(dr.get(2).toString()) == AD_Client_ID) {\n            pp = {};\n            pp.Key = VIS.Utility.Util.getValueOfInt(dr.get(0));\n            pp.Name = dr.getString(1);\n            list.push(pp);\n          }\n        }\n        dr.close();\n        if (list.length == 0) {\n          if (pp == null) launchReport(null, AD_Table_ID, AD_Table_ID); //\tcalls launch\n          else launchReport(pp, 0, AD_Table_ID);\n        } else launchReport(list[0], 0, AD_Table_ID);\n      } catch (e) {\n        dr.close();\n      }\n    };\n    var launchReport = function (pp, Ad_Table_ID, TableID) {\n      var queryInfo = [];\n      queryInfo.push(query.getTableName());\n      if (query.reportWhere && query.reportWhere != "") {\n        queryInfo.push(query.reportWhere);\n      } else {\n        queryInfo.push(query.getWhereClause(true));\n      }\n      if (AD_Tab_ID) {\n        queryInfo.push(AD_Tab_ID.toString());\n      }\n      var id = null;\n      if (pp != null) id = pp.Key;else id = Ad_Table_ID;\n      var data = rv.getGenerateReportPara(queryInfo, query.getCode(0), Ad_Table_ID > 0 && AD_Tab_ID > 0, treeNode_ID, tree_ID, IsSummary, 0, 1, "", id, windowID);\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/GenerateReport/",\n        dataType: "json",\n        data: data,\n        type: \'POST\',\n        //data: {\n        //    id: id,\n        //    queryInfo: JSON.stringify(queryInfo),\n        //    code: query.getCode(0),\n        //    isCreateNew: (Ad_Table_ID > 0 && AD_Tab_ID > 0),\n        //    nProcessInfo: JSON.stringify(""),\n        //    pdf: false,\n        //    csv: false,\n        //    nodeID: treeNode_ID,\n        //    treeID: tree_ID,\n        //    pageNo: 1,\n        //    showSummary: IsSummary,\n        //    AD_PInstance_ID: 0\n        //},\n        success: function (data) {\n          if (data == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n          }\n          var dres = jQuery.parseJSON(data);\n          var d = dres.repInfo;\n          if (d.IsError) {\n            VIS.ADialog.error(d.ErrorText);\n            rv.close();\n            return;\n          }\n          if (d.HTML && d.HTML.length > 0) {\n            //report\n\n            //rv.show(d.HTML, id, pp, TableID, queryInfo, query.getCode(0));\n            rv.show(d.HTML, d.AD_PrintFormat_ID, pp, TableID, queryInfo, query.getCode(0), dres.pSetting);\n            rv.setReportBytes(d.Report);\n            rv.setIteration(dres.pSetting.TotalPage);\n\n            // Archive Document automatically, if selected on Tenant\n            if (VIS.context.ctx["$AutoArchive"] == \'1\' || VIS.context.ctx["$AutoArchive"] == \'2\') {\n              rv.archiveDocument(queryInfo, TableID, d.Report);\n            }\n          }\n        }\n      });\n    };\n    getPrintFormats(AD_Table_ID);\n  }\n  ;\n\n  // isPrint,showPaging,totalRecords , PAGE_SIZE\n  //these variable will contains value only if grid report bound with printformat insteasd of a reasonable print format\n  function ReportViewer(windowNo, curTab, isPrint, showPaging, totalRecords, PAGE_SIZE) {\n    var $root = $("<div class=\'vis-reportrootdiv\'>");\n    var toolbar = null;\n    var btnClose = null;\n    var actionContainer = null;\n    var ulAction = null;\n    var btnArchive = null;\n    var btnRequery = null;\n    var btnSearch = null;\n    var btnCustomize = null;\n    var btnPrint = null;\n    var btnSavePdf = null;\n    var btnSaveCsv = null;\n    var btnSaveAllPdf = null;\n    var btnSaveAllCsv = null;\n    var btnSaveCsvAll = null;\n    var btnSavePdfAll = null;\n    var $cmbPages = null;\n    var cFrame = null;\n    var html = null;\n    var AD_PrintFormat_ID = null;\n    var processInfo = null;\n    var Ad_Table_ID = null;\n    var queryInfo = null;\n    var code = null;\n    var height = VIS.Env.getScreenHeight() - 50;\n    var width = $(window).width();\n    var self = this;\n    cFrame = new VIS.CFrame();\n    cFrame.setName(VIS.Msg.getMsg("Report"));\n    cFrame.setTitle(VIS.Msg.getMsg("Report"));\n    var btnRF = null;\n    var overlay = $(\'<div>\');\n    var $menu = $("<ul class=\'vis-apanel-rb-ul\'>");\n    overlay.append($menu);\n    var canExport = false;\n    var otherPf = [];\n    var reportBytes = null;\n    var node_ID = 0;\n    var tree_ID = 0;\n    var divPaging, ulPaging, liFirstPage, liPrevPage, liCurrPage, liNextPage, liLastPage, cmbPage;\n    var IsSummary = true;\n    var pi = null;\n    var windowID = curTab.getAD_Window_ID();\n    this.getGenerateReportPara = function (queryInfo, code, isCreateNew, nodeID, treeID, showSummary, ad_PInstance_ID, pageNO, fileType, ad_PrintFormat_ID, AD_Window_ID) {\n      if (!pi) {\n        pi = new VIS.ProcessInfo("", 0, Ad_Table_ID, 0);\n        pi.setAD_User_ID(VIS.context.getAD_User_ID());\n        pi.setAD_Client_ID(VIS.context.getAD_Client_ID());\n      }\n      pi.setTable_ID(Ad_Table_ID);\n      pi.setAD_PInstance_ID(ad_PInstance_ID);\n      pi.setPageNo(pageNO);\n      pi.setFileType(fileType);\n      pi.set_AD_PrintFormat_ID(ad_PrintFormat_ID);\n      pi.setAD_Window_ID(AD_Window_ID);\n      if (AD_Window_ID > 0) {\n        pi.setActionOrigin(VIS.ProcessCtl.prototype.ORIGIN_WINDOW);\n      } else {\n        pi.setActionOrigin(VIS.ProcessCtl.prototype.ORIGIN_FORM);\n      }\n      pi.setOriginName(VIS.context.getWindowContext(windowNo, "WindowName"));\n      var data = {\n        processInfo: pi.toJson(),\n        queryInfo: JSON.stringify(queryInfo),\n        code: code,\n        isCreateNew: isCreateNew,\n        treeID: treeID,\n        node_ID: nodeID,\n        IsSummary: showSummary\n      };\n      return data;\n    };\n    this.setNodeID = function (nodeID) {\n      node_ID = nodeID;\n    };\n    this.setTreeID = function (treeID) {\n      tree_ID = treeID;\n    };\n    this.setAD_Table_ID = function (AD_Table_ID) {\n      Ad_Table_ID = AD_Table_ID;\n    };\n    this.showSummary = function (isSummary) {\n      IsSummary = isSummary;\n    };\n    this.setAD_Window_ID = function (windowID) {\n      windowID = windowID;\n    };\n    this.setReportBytes = function (bytes) {\n      reportBytes = bytes;\n    };\n    var Iteration = 0;\n    this.setIteration = function (iteration) {\n      Iteration = iteration;\n    };\n\n    // to Archive Document\n    this.archiveDocument = function (queryInfo, Ad_Table_ID, reportBytes) {\n      setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/ArchiveDoc/",\n        dataType: "json",\n        type: "post",\n        data: {\n          AD_Process_ID: 0,\n          Name: queryInfo[0],\n          AD_Table_ID: Ad_Table_ID,\n          Record_ID: 0,\n          C_BPartner_ID: 0,\n          isReport: true,\n          binaryData: reportBytes\n        },\n        success: function (data) {\n          VIS.ADialog.info(\'Archived\', true, "", "");\n          setBusy(false);\n        }\n      });\n    };\n    var download = function () {\n      for (var i = 0; i < arguments.length; i++) {\n        var iframe = $(\'<iframe style="visibility: collapse;"></iframe>\');\n        $(\'body\').append(iframe);\n        var content = iframe[0].contentDocument;\n        var form = \'<form action="\' + arguments[i] + \'" method="GET"></form>\';\n        content.write(form);\n        $(\'form\', content).submit();\n        setTimeout(function (iframe) {\n          return function () {\n            iframe.remove();\n          };\n        }(iframe), 2000);\n      }\n    };\n\n    // bulk download upate progress bar percentage wise\n    var formlinks = \'\';\n    function updateCreateBar(percent) {\n      var currpercent = $(\'#reportcreate\').find(".progress-bar").width() * 100 / $(\'#reportcreate\').width();\n      if (isNaN(currpercent)) currpercent = 0;\n      if (currpercent <= percent) {\n        $("#reportcreate").removeClass("hide").find(".progress-bar").attr("aria-valuenow", percent).css({\n          width: percent + "%"\n        }).text(percent.toFixed(0) + "%");\n      }\n    }\n    function resetCreateMessage() {\n      $("#reportcreateresult").removeClass().text("");\n    }\n    function showCreateMessage(text) {\n      resetCreateMessage();\n      $("#reportcreateresult").addClass("alert alert-success").text(text);\n      $("#forreportdownload").removeClass(\'hide\');\n    }\n    function showCreateError(text) {\n      resetCreateMessage();\n      $("#reportcreateresult").addClass("alert alert-danger").text(text);\n    }\n\n    // bulk download page no variable\n    var pNoI = 0;\n    this.getRoot = function () {\n      return $root;\n    };\n    this.dispose = function () {};\n    this.show = function (content, _AD_PrintFormat_ID, _processInfo, _Ad_Table_ID, _queryInfo, _code, pagesetting) {\n      processInfo = _processInfo;\n      Ad_Table_ID = _Ad_Table_ID;\n      queryInfo = _queryInfo;\n      AD_PrintFormat_ID = _AD_PrintFormat_ID;\n      code = _code;\n      canExport = VIS.MRole.getDefault().getIsCanExport(Ad_Table_ID);\n      if (isPrint != true) {\n        if (canExport) {\n          btnSaveCsv.css(\'display\', \'inline-flex\');\n          btnSavePdf.css(\'display\', \'inline-flex\');\n          if (VIS.context.ctx["#BULK_REPORT_DOWNLOAD"] == \'Y\') {\n            btnSaveAllCsv.css(\'display\', \'inline-flex\');\n            btnSaveAllPdf.css(\'display\', \'inline-flex\');\n          } else {\n            btnSaveAllCsv.css(\'display\', \'none\');\n            btnSaveAllPdf.css(\'display\', \'none\');\n          }\n        } else {\n          btnSaveCsv.css(\'display\', \'none\');\n          btnSavePdf.css(\'display\', \'none\');\n          btnSaveAllCsv.css(\'display\', \'none\');\n          btnSaveAllPdf.css(\'display\', \'none\');\n        }\n      }\n      showReport(content);\n      if (pagesetting) {\n        resetPageCtrls(pagesetting);\n      }\n    };\n    var disposeComponant = function () {\n      if (isPrint) {\n        var iFrame = $root.children()[1];\n        //iFrame.empty();\n        iFrame = null;\n      }\n      liFirstPage.off("click");\n      liPrevPage.off("click");\n      liNextPage.off("click");\n      liLastPage.off("click");\n      cmbPage.off("change");\n      $root.empty();\n      $root.remove();\n      if (ulAction) {\n        ulAction.empty();\n      }\n      toolbar.empty();\n      toolbar.remove();\n      if (cFrame) {\n        cFrame.dispose();\n        cFrame = null;\n      }\n      liFirstPage = liPrevPage = liNextPage = liLastPage = cmbPage = null;\n      $root = null;\n      toolbar = null;\n      btnClose = null;\n      actionContainer = null;\n      ulAction = null;\n      btnArchive = null;\n      btnRequery = null;\n      btnSearch = null;\n      btnCustomize = null;\n      btnPrint = null;\n    };\n    this.close = function () {\n      disposeComponant();\n    };\n    var createHeader = function () {\n      //if (VIS.Application.isRTL) {\n      //    toolbar = $("<div class=\'vis-report-header\'>").append($(\'<h3 class="vis-report-tittle">\').append(VIS.Msg.getMsg("Report")));\n      //    btnClose = $(\'<a href="javascript:void(0)" class="vis-icon-menuclose vis vis-cross">\');\n      //    actionContainer = $(\'<div class="vis-report-top-icons">\');\n      //    ulAction = $(\'<ul class="vis-reporticonsul">\');\n      //    actionContainer.append(ulAction);\n      //if (showPaging == true) {\n\n      //    $cmbPages = $(\'<select class="vis-selectcsview-page">\');\n      //    var totalPages = parseInt(totalRecords / PAGE_SIZE) + parseFloat((totalRecords % PAGE_SIZE) > 0 ? 1 : 0);\n\n      //    for (var d = 1; d < totalPages + 1; d++) {\n      //        $cmbPages.append($(\'<option value=\' + d + \'>\' + d + \'</option>\'));\n      //    }\n      //    ulAction.append($(\'<li>\').append($cmbPages));\n      //    btnsavepdfall = $("<li><a  title=\'" + VIS.Msg.getMsg("SaveAllPagePdf") + "\' style=\'cursor:pointer;\' class=\'vis-report-icon vis-savepdf-ico\'></a></li>");\n      //    ulAction.append(btnsavepdfall);\n      //    btnSaveCsvAll = $("<li><a  title=\'" + VIS.Msg.getMsg("SaveAllRecordCsv") + "\'  style=\'cursor:pointer;\'class=\'vis-report-icon vis-savecsvAll-ico\'></a></li>");\n      //    ulAction.append(btnSaveCsvAll);\n\n      //}\n      //if (isPrint != true) {\n\n      //    btnPrint = $(\'<li><a title="\' + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Print")) + \'" class="vis vis-print"></a></li>\');\n      //    ulAction.append(btnPrint);\n      //    btnCustomize = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("PrintCustomize")) + "\' class=\'vis vis-customize\'></a></li>");\n      //    ulAction.append(btnCustomize);\n      //    btnSearch = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Search")) + "\' class=\'vis vis-find\'></a></li>");\n      //    ulAction.append(btnSearch);\n      //    btnRequery = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Requery")) + "\' class=\'vis vis-refresh\'></a></li>");\n      //    ulAction.append(btnRequery);\n      //    btnArchive = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Archive")) + "\' class=\'vis vis-archive\'></a></li>");\n      //    ulAction.append(btnArchive);\n      //    // bulk download icon pdf\n      //    btnSaveAllPdf = $("<li style=\'display:none\'><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SaveAllPagePdf")) + "\' class=\'vis vis-pdf-all\'></a></li>");\n      //    ulAction.append(btnSaveAllPdf);\n\n      //    btnSavePdf = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SavePdf")) + "\' class=\'vis vis-save-pdf\'></a></li>");\n      //    ulAction.append(btnSavePdf);\n      //    // bulk download icon csv\n      //    btnSaveAllCsv = $("<li style=\'display:none\'><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SaveAllRecordCsv")) + "\' class=\'vis vis-csv-all\'></a></li>");\n      //    ulAction.append(btnSaveAllCsv);\n\n      //    btnSaveCsv = $("<li><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SaveCSV")) + "\' class=\'vis vis-save-csv\'></a></li>");\n      //    ulAction.append(btnSaveCsv);\n      //    btnRF = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("ReportFormat")) + "\' class=\'vis vis-format\'></a></li>");\n      //    ulAction.append(btnRF);\n\n      //    // }\n\n      //    divPaging = $("<div class=\'vis-report-top-icons\'>");\n      //    createPageSettings();\n      //    divPaging.append(ulPaging);\n\n      //    toolbar.append(divPaging);\n      //    toolbar.append(actionContainer);\n      //    toolbar.append(btnClose);\n      //    $root.append(toolbar);\n      //}\n      //else {\n      toolbar = $("<div class=\'vis-report-header\' style=\'padding: 0;\'>").append($(\'<h3 class="vis-report-tittle">\').append(VIS.Msg.getMsg("Report")));\n      btnClose = $(\'<a href="javascript:void(0)" class="vis-icon-menuclose vis vis-cross">\');\n      actionContainer = $(\'<div class="vis-report-top-icons">\');\n      ulAction = $(\'<ul class="vis-reporticonsul">\');\n      actionContainer.append(ulAction);\n      btnRF = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("ReportFormat")) + "\'  class=\'vis vis-format\'></a></li>");\n      ulAction.append(btnRF);\n      btnSaveCsv = $("<li><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SaveCSV")) + "\' class=\'vis vis-save-csv\'></a></li>");\n      ulAction.append(btnSaveCsv);\n\n      // bulk download icon csv\n      btnSaveAllCsv = $("<li style=\'display:none\'><a  title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SaveAllRecordCsv")) + "\' class=\'vis vis-csv-all\'></a></li>");\n      ulAction.append(btnSaveAllCsv);\n      btnSavePdf = $("<li><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SavePdf")) + "\' class=\'vis vis-save-pdf\'></a></li>");\n      ulAction.append(btnSavePdf);\n\n      // bulk download icon pdf\n      btnSaveAllPdf = $("<li style=\'display:none\'><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("SaveAllPagePdf")) + "\' class=\'vis vis-pdf-all\'></a></li>");\n      ulAction.append(btnSaveAllPdf);\n      btnArchive = $("<li><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Archive")) + "\' class=\'vis vis-archive\'></a></li>");\n      ulAction.append(btnArchive);\n      btnRequery = $("<li><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Requery")) + "\' class=\'vis vis-refresh\'></a></li>");\n      ulAction.append(btnRequery);\n      btnSearch = $("<li><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Search")) + "\' class=\'vis vis-find\'></a></li>");\n      ulAction.append(btnSearch);\n      btnCustomize = $("<li><a title=\'" + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("PrintCustomize")) + "\' class=\'vis vis-customize\'></a></li>");\n      ulAction.append(btnCustomize);\n      btnPrint = $(\'<li><a title="\' + VIS.Utility.Util.cleanMnemonic(VIS.Msg.getMsg("Print")) + \'" class="vis vis-print"></a></li>\');\n      ulAction.append(btnPrint);\n      //}\n      //if (showPaging == true) {\n      //    btnSaveCsvAll = $("<li><a  title=\'" + VIS.Msg.getMsg("SaveAllRecordCsv") + "\'  style=\'cursor:pointer;\'class=\'vis-report-icon vis-savecsvAll-ico\'></a></li>");\n      //    ulAction.append(btnSaveCsvAll);\n\n      //    btnsavepdfall = $("<li><a  title=\'" + VIS.Msg.getMsg("SaveAllPagePdf") + "\' style=\'cursor:pointer;\' class=\'vis-report-icon vis-savepdf-ico\'></a></li>");\n      //    ulAction.append(btnsavepdfall);\n\n      //    $cmbPages = $(\'<select class="vis-selectcsview-page">\');\n      //    var totalPages = parseInt(totalRecords / PAGE_SIZE) + parseFloat((totalRecords % PAGE_SIZE) > 0 ? 1 : 0);\n\n      //    for (var d = 1; d < totalPages + 1; d++) {\n      //        $cmbPages.append($(\'<option value=\' + d + \'>\' + d + \'</option>\'));\n      //    }\n      //    ulAction.append($(\'<li>\').append($cmbPages))\n      //}\n\n      divPaging = $("<div class=\'vis-report-top-icons\'>");\n      createPageSettings();\n      divPaging.append(ulPaging);\n      toolbar.append(divPaging);\n      toolbar.append(actionContainer);\n      toolbar.append(btnClose);\n      $root.append(toolbar);\n      //}\n      bindEvents();\n    };\n    var bindEvents = function () {\n      btnClose.on(\'click\', function () {\n        disposeComponant();\n      });\n      //if (isPrint != true) {\n      btnPrint.on(\'click\', function () {\n        printReport();\n      });\n      btnCustomize.on(\'click\', function () {\n        //var AD_Window_ID = 240;\t\t// hardcoded               \n        var zoomQuery = new VIS.Query();\n        zoomQuery.addRestriction("AD_PrintFormat_ID", VIS.Query.prototype.EQUAL, AD_PrintFormat_ID);\n        VIS.viewManager.startWindow(240, zoomQuery);\n      });\n      btnRequery.on(\'click\', function () {\n        subContentPane.empty();\n        subContentPane.css(\'width\', \'0px\');\n        launchReport(cmbPage.val());\n      });\n      btnSavePdf.on(\'click\', function () {\n        getPdf(cmbPage.val(), 0), null;\n      });\n      btnSaveCsv.on(\'click\', function () {\n        getCsv(cmbPage.val(), 0, null);\n      });\n\n      // for bulk download pdf\n      btnSaveAllPdf.on(\'click\', function () {\n        pNoI = 0;\n        formlinks = \'\';\n        var bulkdownload = new VIS.BulkDownload(windowNo, \'PDF\');\n        //bulkdownload.onClose = function () { };\n        bulkdownload.show();\n        for (var i = 1; i <= Iteration; i++) {\n          getPdf(i, Iteration, bulkdownload);\n        }\n      });\n\n      // for bulk download csv\n      btnSaveAllCsv.on(\'click\', function () {\n        pNoI = 0;\n        formlinks = \'\';\n        var bulkdownload = new VIS.BulkDownload(windowNo, \'CSV\');\n        //bulkdownload.onClose = function () { };\n        bulkdownload.show();\n        for (var i = 1; i <= Iteration; i++) {\n          getCsv(i, Iteration, bulkdownload);\n        }\n      });\n      btnRF.on(\'click\', function () {\n        $menu.empty();\n        for (var i = 0; i < otherPf.length; i++) {\n          if (otherPf[i].ID) {\n            var className = otherPf[i].IsDefault == "Y" ? "vis-favitmchecked" : "vis-favitmunchecked";\n            var ulItem = $(\'<li data-isdefbtn="no" data-id="\' + otherPf[i].ID + \'"><a data-isdefbtn="no" data-id="\' + otherPf[i].ID + \'">\' + otherPf[i].Name + \'</a><a data-isdefbtn="yes" data-id="\' + otherPf[i].ID + \'" style="min-height: 16px;display: inline-block;margin-left: 5px;min-width: 16px;margin-top: 0px" class="vis-menufavitm \' + className + \'" > </a></li>\');\n            $menu.append(ulItem);\n          }\n        }\n        $menu.append($(\'<li data-isdefbtn="no" data-id="-1"><a data-id="-1">\' + VIS.Msg.getMsg(\'NewReport\') + \'</a>\'));\n        $(this).w2overlay(overlay.clone(true), {\n          css: {\n            height: \'300px\'\n          }\n        });\n      });\n      $menu.on(\'click\', "LI", function (e) {\n        var btn = $(e.target);\n        var id = btn.data("id");\n        if (!id) {\n          return;\n        }\n        if (btn.data("isdefbtn") == "yes") {\n          var sql = "VIS_102";\n          var param = [];\n          param[0] = new VIS.DB.SqlParam("@Ad_Table_ID", Ad_Table_ID);\n          param[1] = new VIS.DB.SqlParam("@AD_Tab_ID", curTab.getAD_Tab_ID());\n          executeQuery(sql, param);\n          var sql = "VIS_103";\n          var param = [];\n          param[0] = new VIS.DB.SqlParam("@id", id);\n          executeQuery(sql, param);\n          for (var i = 0; i < otherPf.length; i++) {\n            if (otherPf[i].ID == id) {\n              otherPf[i].IsDefault = "Y";\n            } else {\n              otherPf[i].IsDefault = "N";\n            }\n          }\n          return;\n        }\n        AD_PrintFormat_ID = id;\n        subContentPane.empty();\n        subContentPane.css(\'width\', \'0px\');\n        setBusy(true);\n        var isCreateNew = false;\n        if (id == -1) {\n          id = Ad_Table_ID;\n          isCreateNew = true;\n        }\n        var data = self.getGenerateReportPara(queryInfo, code, isCreateNew, node_ID, tree_ID, IsSummary, 0, cmbPage.val(), "", id, windowID);\n        $.ajax({\n          url: VIS.Application.contextUrl + "JsonData/GenerateReport/",\n          dataType: "json",\n          data: data,\n          type: \'POST\',\n          //data: {\n          //    id: id,\n          //    queryInfo: JSON.stringify(queryInfo),\n          //    code: code,\n          //    isCreateNew: isCreateNew,\n          //    nProcessInfo: JSON.stringify(""),\n          //    pdf: false,\n          //    csv: false,\n          //    nodeID: node_ID,\n          //    treeID: tree_ID,\n          //    pageNo: cmbPage.val(),\n          //    showSummary: IsSummary,\n          //    AD_PInstance_ID: 0\n          //},\n          success: function (data) {\n            if (data == null) {\n              alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n            }\n            var dres = jQuery.parseJSON(data);\n            var d = dres.repInfo;\n            if (d.ErrorText) {\n              VIS.ADialog.error(d.ErrorText);\n              setBusy(false);\n              return;\n            }\n            showReport(d.HTML);\n            reportBytes = d.Report;\n            resetPageCtrls(dres.pSetting);\n            AD_PrintFormat_ID = d.AD_PrintFormat_ID;\n            setBusy(false);\n          }\n        });\n      });\n      btnSearch.on(\'click\', function () {\n        var find = new VIS.Find(windowNo, curTab, 0);\n        find.onClose = function () {\n          if (find.getIsOKPressed()) {\n            var query = find.getQuery();\n            //\tHistory\n            var onlyCurrentDays = find.getCurrentDays();\n            var created = find.getIsCreated();\n            find.dispose();\n            find = null;\n            queryInfo[1] = query.getWhereClause(true);\n            launchReport(1);\n          }\n        };\n        find.show();\n      });\n      btnArchive.on(\'click\', function () {\n        self.archiveDocument(queryInfo, Ad_Table_ID, reportBytes);\n        //setBusy(true);\n        //$.ajax({\n        //    url: VIS.Application.contextUrl + "JsonData/ArchiveDoc/",\n        //    dataType: "json",\n        //    type: "post",\n        //    data: {\n        //        AD_Process_ID: 0,\n        //        Name: queryInfo[0],\n        //        AD_Table_ID: Ad_Table_ID,\n        //        Record_ID: 0,\n        //        C_BPartner_ID: 0,\n        //        isReport: true,\n        //        binaryData: reportBytes\n        //    },\n        //    success: function (data) {\n        //        VIS.ADialog.info(\'Archived\', true, "", "");\n        //        setBusy(false);\n        //    }\n        //});\n      });\n\n      //}\n      //if (showPaging == true) {\n      //    btnSaveCsvAll.on("click", function () {\n      //        panel.setBusy(true);\n\n      //        pageNo = $cmbPages.val();\n      //        var data = {\n      //            AD_Process_ID: pCtl.pi.getAD_Process_ID(),\n      //            Name: pCtl.pi.getTitle(),\n      //            AD_PInstance_ID: pCtl.pi.getAD_PInstance_ID(),\n      //            AD_Table_ID: pCtl.pi.getTable_ID(),\n      //            Record_ID: pCtl.pi.getRecord_ID(),\n      //            pageNumber: pageNo,\n      //            page_Size: PAGE_SIZE,\n      //            saveAll: true\n      //            //ParameterList: paraList,\n      //            //csv: false,\n      //            //pdf: true,\n      //        }\n\n      //        $.ajax({\n      //            url: VIS.Application.contextUrl + "ReportCom/ExecuteReportforCsv",\n      //            type: "Post",\n      //            data: data,\n      //            success: function (result) {\n      //                var data = JSON.parse(result);\n      //                window.open(VIS.Application.contextUrl + "TempDownload/" + data);\n      //                panel.setBusy(false);\n      //            }\n      //        });\n      //    });\n\n      //    btnsavepdfall.on("click", function () {\n      //        panel.setBusy(true);\n\n      //        pageNo = $cmbPages.val();\n\n      //        var data = {\n      //            AD_Process_ID: pCtl.pi.getAD_Process_ID(),\n      //            Name: pCtl.pi.getTitle(),\n      //            AD_PInstance_ID: pCtl.pi.getAD_PInstance_ID(),\n      //            AD_Table_ID: pCtl.pi.getTable_ID(),\n      //            Record_ID: pCtl.pi.getRecord_ID(),\n      //            pageNumber: pageNo,\n      //            page_Size: PAGE_SIZE,\n      //            printAllPages: true\n      //        }\n\n      //        $.ajax({\n      //            url: VIS.Application.contextUrl + "ReportCom/ExecuteReport",\n      //            type: "Post",\n      //            data: data,\n      //            success: function (result) {\n      //                //var data = JSON.parse(result);\n      //                //window.open(VIS.Application.contextUrl + data);\n      //                //panel.setBusy(false);\n\n      //                var data = JSON.parse(result);\n      //                if (ismobile) {\n      //                    window.open(VIS.Application.contextUrl + data);\n      //                }\n      //                else {\n      //                    var $object = $("<iframe style = \'width:100%;height:99.4%;\' pluginspage=\'http://www.adobe.com/products/acrobat/readstep2.html\'>");\n      //                    $object.attr("src", VIS.Application.contextUrl + data);\n      //                    cPanel.getRightDiv().empty().append($object);\n      //                }\n\n      //                //  window.open(VIS.Application.contextUrl + data);\n      //                panel.setBusy(false);\n      //            }\n      //        });\n      //    });\n      //}\n    };\n    function printReport() {\n      var mywindow = window.open();\n      mywindow.document.write(\'<html ><head>\');\n      mywindow.document.write(\'</head><body >\');\n      var $htm = $(html);\n      $($htm.children()).css({\n        "overflow": "hidden"\n      });\n      mywindow.document.write($htm.html());\n      mywindow.document.write(\'</body></html>\');\n      mywindow.print();\n      mywindow.close();\n    }\n    ;\n    var launchReport = function (pNo) {\n      //var id = null;\n      //if (AD_PrintFormat_ID > 0) {\n      //    id = AD_PrintFormat_ID;\n      //}\n      //else if (processInfo != null) {\n      //    id = processInfo.Key;\n      //}\n      //else {\n      //    id = Ad_Table_ID;\n      //}\n      setBusy(true);\n      var data = self.getGenerateReportPara(queryInfo, code, false, node_ID, tree_ID, IsSummary, 0, pNo, "", AD_PrintFormat_ID, windowID);\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/GenerateReport/",\n        dataType: "json",\n        data: data,\n        type: \'POST\',\n        //data: {\n        //    id: AD_PrintFormat_ID,\n        //    queryInfo: JSON.stringify(queryInfo),\n        //    code: code,\n        //    isCreateNew: false,\n        //    nProcessInfo: JSON.stringify(""),\n        //    pdf: false,\n        //    csv: false,\n        //    nodeID: node_ID,\n        //    treeID: tree_ID,\n        //    pageNo: pNo,\n        //    showSummary: IsSummary,\n        //    AD_PInstance_ID: 0\n        //},\n        success: function (data) {\n          if (data == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n          }\n          var dres = jQuery.parseJSON(data);\n          var d = dres.repInfo;\n          if (d.ErrorText) {\n            VIS.ADialog.error(d.ErrorText);\n            setBusy(false);\n            return;\n          }\n          showReport(d.HTML);\n          reportBytes = d.Report;\n          resetPageCtrls(dres.pSetting);\n          setBusy(false);\n        }\n      });\n    };\n\n    // This function works for both simple download and bulk download\n    var getPdf = function (pNo, tP, bulkdownload) {\n      setBusy(true);\n      //var id = null;\n      //if (processInfo != null) id = processInfo.Key;\n      //else id = Ad_Table_ID;\n      var data = self.getGenerateReportPara(queryInfo, code, false, node_ID, tree_ID, IsSummary, 0, pNo, VIS.ProcessCtl.prototype.REPORT_TYPE_PDF, AD_PrintFormat_ID, windowID);\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/GenerateReport/",\n        dataType: "json",\n        data: data,\n        type: \'POST\',\n        //data: {\n        //    id: AD_PrintFormat_ID,\n        //    queryInfo: JSON.stringify(queryInfo),\n        //    code: code,\n        //    isCreateNew: false,\n        //    nProcessInfo: JSON.stringify(""),\n        //    pdf: true,\n        //    csv: false,\n        //    nodeID: node_ID,\n        //    treeID: tree_ID,\n        //    pageNo: pNo,\n        //    showSummary: IsSummary,\n        //    AD_PInstance_ID: 0\n        //},\n        success: function (data) {\n          if (data == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n          }\n          var dres = jQuery.parseJSON(data);\n          var d = dres.repInfo;\n          if (d.ErrorText) {\n            VIS.ADialog.error(d.ErrorText);\n            setBusy(false);\n            return;\n          }\n          if (d.HTML && d.HTML.length > 0) {\n            //report\n            showReport(d.HTML);\n          } else {\n            //download(d.ReportFilePath);\n            if (tP == 0) window.open(VIS.Application.contextUrl + d.ReportFilePath);else {\n              // downlaod and set its successfull percentage and create rar file on 100% complete\n              bulkdownload.setBulkBusy(false);\n              $("#forreportdownload").addClass(\'hide\');\n              formlinks += \'<input type="checkbox" data-num="\' + pNo + \'"  data-url="\' + VIS.Application.contextUrl + d.ReportFilePath + \'" checked />\';\n              pNoI += 1;\n              updateCreateBar(pNoI / tP * 100);\n              if (pNoI == tP) {\n                setTimeout(function () {\n                  updateCreateBar(100);\n                  showCreateMessage(VIS.Msg.getMsg("Generated"));\n                  $(\'<form>\', {\n                    \'id\': \'download_form\',\n                    \'html\': formlinks,\n                    \'action\': \'#\',\n                    \'Class\': \'hide\'\n                  }).appendTo(document.body).submit();\n\n                  //setTimeout(function () {\n                  //    bulkdownload.onClose();\n                  //}, 1000);\n                }, 1000);\n              }\n            }\n          }\n          setBusy(false);\n        }\n      });\n    };\n\n    // This function works for both simple download and bulk download\n    var getCsv = function (pNo, tP, bulkdownload) {\n      setBusy(true);\n      //var id = null;\n      //if (processInfo != null) id = processInfo.Key;\n      //else id = Ad_Table_ID;\n      var data = self.getGenerateReportPara(queryInfo, code, false, node_ID, tree_ID, IsSummary, 0, pNo, VIS.ProcessCtl.prototype.REPORT_TYPE_CSV, AD_PrintFormat_ID, windowID);\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/GenerateReport/",\n        dataType: "json",\n        data: data,\n        type: \'POST\',\n        //data: {\n        //    id: AD_PrintFormat_ID,\n        //    queryInfo: JSON.stringify(queryInfo),\n        //    code: code,\n        //    isCreateNew: false,\n        //    nProcessInfo: JSON.stringify(""),\n        //    pdf: false,\n        //    csv: true,\n        //    nodeID: node_ID,\n        //    treeID: tree_ID,\n        //    pageNo: pNo,\n        //    showSummary: IsSummary,\n        //    AD_PInstance_ID: 0\n        //},\n        success: function (data) {\n          if (data == null) {\n            alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n          }\n          var dres = jQuery.parseJSON(data);\n          var d = dres.repInfo;\n          if (d.ErrorText) {\n            VIS.ADialog.error(d.ErrorText);\n            setBusy(false);\n            return;\n          }\n          if (d.HTML && d.HTML.length > 0) {\n            //report\n            showReport(d.HTML);\n          } else {\n            //download(d.ReportFilePath);\n            if (tP == 0) window.open(VIS.Application.contextUrl + d.ReportFilePath);else {\n              // downlaod and set its successfull percentage and create rar file on 100% complete\n              bulkdownload.setBulkBusy(false);\n              $("#forreportdownload").addClass(\'hide\');\n              formlinks += \'<input type="checkbox" data-num="\' + pNo + \'" data-url="\' + VIS.Application.contextUrl + d.ReportFilePath + \'" checked />\';\n              pNoI += 1;\n              updateCreateBar(pNoI / tP * 100);\n              if (pNoI == tP) {\n                setTimeout(function () {\n                  updateCreateBar(100);\n                  showCreateMessage(VIS.Msg.getMsg("Generated"));\n                  $(\'<form>\', {\n                    \'id\': \'download_form\',\n                    \'html\': formlinks,\n                    \'action\': \'#\',\n                    \'Class\': \'hide\'\n                  }).appendTo(document.body).submit();\n\n                  //setTimeout(function () {\n                  //    bulkdownload.onClose();\n                  //}, 1000);\n                }, 1000);\n              }\n            }\n          }\n          setBusy(false);\n        }\n      });\n    };\n    var showReport = function (content) {\n      if (isPrint != true) {\n        $menu.empty();\n\n        //var sql = "SELECT AD_PrintFormat_ID, Name, Description,IsDefault "\n        //            + "FROM AD_PrintFormat "\n        //            + "WHERE AD_Table_ID=" + Ad_Table_ID;\n        //if (curTab.getAD_Tab_ID() > 0) {\n        //    sql = sql + " AND AD_Tab_ID=" + curTab.getAD_Tab_ID();\n        //}\n        //sql = sql + " ORDER BY Name";\n        //sql = VIS.MRole.getDefault().addAccessSQL(sql, "AD_PrintFormat", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO);\n\n        var dr = null;\n        var checkName = [];\n        var count = -1;\n        try {\n          // dr = executeReader(sql, null, null);\n\n          $.ajax({\n            type: \'Get\',\n            async: false,\n            url: VIS.Application.contextUrl + "Form/GetShowReportDetails",\n            data: {\n              AD_Table_ID: Ad_Table_ID,\n              AD_Tab_ID: curTab.getAD_Tab_ID()\n            },\n            success: function (data) {\n              dr = new VIS.DB.DataReader().toJson(data);\n            }\n          });\n          otherPf = [];\n          while (dr.read()) {\n            count = parseInt(count) + 1;\n            var name = dr.getString(1);\n            if (checkName.indexOf(name) > -1) {\n              name = name + "_" + (parseInt(count) + 1);\n            }\n            var item = {};\n            item.ID = VIS.Utility.Util.getValueOfInt(dr.get(0));\n            item.Name = name;\n            item.IsDefault = dr.getString(3);\n            //var ulItem = $(\'<li><a data-isdefbtn="no" data-id="\' + VIS.Utility.Util.getValueOfInt(dr.get(0)) + \'">\' + name + \'</a><a data-isdefbtn="yes" data-id="\' + VIS.Utility.Util.getValueOfInt(dr.get(0)) + \'" style="min-height: 16px;display: inline-block;margin-left: 5px;min-width: 16px;" class="vis-mainnonfavitem" > </a></li>\');\n            //// $menu.append($(\'<li data-id="\' + VIS.Utility.Util.getValueOfInt(dr.get(0)) + \'">\').append(name));\n            //$menu.append(ulItem);\n            checkName.push(dr.getString(1));\n            otherPf.push(item);\n            //pp = {};\n            //pp.Key = VIS.Utility.Util.getValueOfInt(dr.get(0));\n            //pp.Name = dr.getString(1);\n            //list.push(pp);                    \n          }\n          dr.close();\n        } catch (e) {\n          console.log(e);\n        }\n        dr = null;\n        subContentPane.html(content);\n        subContentPane.css(\'min-width\', width + \'px\');\n        html = content;\n        var tables = document.getElementsByClassName(\'vis-reptabledetect\');\n        var tableWidth = 0;\n        var tmp = 0;\n        for (var i = 0, j = tables.length; i < j; i++) {\n          tmp = $(tables[i]).width();\n          if (tmp > tableWidth) tableWidth = tmp;\n        }\n        subContentPane.css(\'width\', tableWidth + 50);\n      }\n      setBusy(false);\n    };\n    var setBusy = function (isBusy) {\n      bsyDiv.css("display", isBusy ? \'block\' : \'none\');\n    };\n    createHeader();\n    function createPageSettings() {\n      ulPaging = $(\'<ul class="vis-statusbar-ul vis-toppaging">\');\n      liFirstPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftleft" aria-hidden="true" title="\' + VIS.Msg.getMsg("FirstPage") + \'"></i ></div ></li > \');\n      liPrevPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-arrow-left" aria-hidden="true" title="\' + VIS.Msg.getMsg("PageUp") + \'"></i></div></li>\');\n      cmbPage = $("<select>");\n      liCurrPage = $(\'<li>\').append(cmbPage);\n      liNextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-arrow-right" aria-hidden="true" title="\' + VIS.Msg.getMsg("PageDown") + \'"></i></div></li>\');\n      liLastPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-shiftright" aria-hidden="true" title="\' + VIS.Msg.getMsg("LastPage") + \'"></i></div></li>\');\n      ulPaging.append(liFirstPage).append(liPrevPage).append(liCurrPage).append(liNextPage).append(liLastPage);\n      pageEvents();\n    }\n    function pageEvents() {\n      liFirstPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          launchReport(1);\n        }\n      });\n      liPrevPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          launchReport(parseInt(cmbPage.val()) - 1);\n        }\n      });\n      liNextPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          launchReport(parseInt(cmbPage.val()) + 1);\n        }\n      });\n      liLastPage.on("click", function () {\n        if ($(this).css("opacity") == "1") {\n          launchReport(parseInt(cmbPage.find("Option:last").val()));\n        }\n      });\n      cmbPage.on("change", function () {\n        launchReport(cmbPage.val());\n      });\n    }\n    function resetPageCtrls(psetting) {\n      cmbPage.empty();\n      if (psetting.TotalPage > 0) {\n        for (var i = 0; i < psetting.TotalPage; i++) {\n          cmbPage.append($("<option value=" + (i + 1) + ">" + (i + 1) + "</option>"));\n        }\n        cmbPage.val(psetting.CurrentPage);\n        self.setIteration(psetting.TotalPage);\n        if (psetting.TotalPage > psetting.CurrentPage) {\n          liNextPage.css("opacity", "1");\n          liLastPage.css("opacity", "1");\n        } else {\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n        if (psetting.CurrentPage > 1) {\n          liFirstPage.css("opacity", "1");\n          liPrevPage.css("opacity", "1");\n        } else {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n        }\n        if (psetting.TotalPage == 1) {\n          liFirstPage.css("opacity", "0.6");\n          liPrevPage.css("opacity", "0.6");\n          liNextPage.css("opacity", "0.6");\n          liLastPage.css("opacity", "0.6");\n        }\n      } else {\n        liFirstPage.css("opacity", "0.6");\n        liPrevPage.css("opacity", "0.6");\n        liNextPage.css("opacity", "0.6");\n        liLastPage.css("opacity", "0.6");\n      }\n    }\n    var contentPane = $("<div Style=\'width:" + width + "px; max-height: " + (height - 50) + "px;\' class=\'vis-report-a-r-container\'>");\n    var subContentPane = $("<div Style=\'width:" + width + "px;\'>");\n    contentPane.append(subContentPane);\n    var bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    setBusy(true);\n    contentPane.append(bsyDiv);\n    if (!isPrint) {\n      $root.append(contentPane);\n    }\n    cFrame.hideHeader(true);\n    cFrame.setContent(self);\n    cFrame.show();\n  }\n  ;\n  function APrint(AD_Process_ID, table_ID, record_ID, WindowNo, recIds, curTab, isShowRTF) {\n    //var overla = null;\n    var windowID = curTab == null ? 0 : curTab.getAD_Window_ID();\n    $menu.off("click");\n    $menu.on("click", "LI", function (e) {\n      var filetype = $(e.target).data("val");\n      process(false, null, filetype);\n    });\n    function loadFileTypes($btnInfo) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "JsonData/GetReportFileTypes/",\n        dataType: "json",\n        data: {\n          AD_Process_ID: AD_Process_ID\n        },\n        success: function (data) {\n          if (data == null) {\n            return;\n          }\n          var d = jQuery.parseJSON(data);\n          if (d.length == 0) {\n            return;\n          }\n          for (var i = 0; i < d.length; i++) {\n            var li = \'\';\n            if (i == 0) {\n              li = $("<li tabindex=" + i + " data-val=" + d[i].Key + " class=\'vis-selected-li-print\'>" + d[i].Name + "</li>");\n            } else {\n              li = $("<li tabindex=" + i + " data-val=" + d[i].Key + ">" + d[i].Name + "</li>");\n            }\n            $menu.append(li);\n            li = null;\n          }\n          if (document.activeElement === document.body) {\n            $btnInfo.w2overlay($root.clone(true), {\n              css: {\n                height: \'300px\'\n              }\n            });\n          } else {\n            $(document.activeElement).w2overlay($root.clone(true), {\n              align: "right",\n              css: {\n                height: \'300px\'\n              }\n            });\n          }\n        }\n      });\n    }\n    ;\n\n    // var rv = new VIS.ReportViewer();\n    //    this.PAGE_SIZE = 10;\n    this.start = function ($btnInfo) {\n      //liCSV.off(\'click\');\n      //liPDF.off(\'click\');\n      //liRTF.off(\'click\');\n      //if (isShowRTF==true) {\n      //    liRTF.css(\'display\',\'block\');\n      //}\n      //else {\n      //    liRTF.css(\'display\', \'none\');\n      //}\n\n      //liCSV.on(\'click\', function () {\n      //    process(true);\n      //});\n      //liPDF.on(\'click\', function () {\n      //    process(false);\n      //});\n      //liRTF.on(\'click\', function () {\n      //    process(false);\n      //});\n      var sqlQry = "VIS_149";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@AD_Process_ID", AD_Process_ID);\n      var isCrystalReport = executeScalar(sqlQry, param);\n      if (isCrystalReport == "Y" && VIS.context.getIsUseCrystalReportViewer()) {\n        process(false, null, VIS.ProcessCtl.prototype.REPORT_TYPE_PDF);\n        return;\n      }\n      if ($menu.find("LI").length > 0) {\n        if (document.activeElement === document.body) {\n          $btnInfo.w2overlay($root.clone(true), {\n            css: {\n              height: \'300px\'\n            }\n          });\n        } else {\n          $(document.activeElement).w2overlay($root.clone(true), {\n            css: {\n              height: \'300px\'\n            },\n            align: "right"\n          });\n        }\n        window.setTimeout(function () {\n          scrollList();\n        }, 100);\n      } else {\n        loadFileTypes($btnInfo);\n        window.setTimeout(function () {\n          scrollList();\n        }, 100);\n      }\n      function scrollList() {\n        // var list = document.getElementById(\'list\'); // targets the <ul>\n        var li = $($($(document).find(\'.w2ui-overlay\').find(\'li\'))[0]); //list.firstChild; // targets the first <li>\n        var liSelected = li.eq(0);\n        $(\'#w2ui-overlay-main\').attr(\'tabindex\', 1);\n        $(\'#w2ui-overlay-main\').focus();\n        // When user user down Arrow OR Up Arrow, select the item in oevrlay.\n        $(\'#w2ui-overlay-main\').keydown(function (e) {\n          if (e.which === 40) {\n            // If Arrow Down, then move to next item of overlay\n            if (liSelected) {\n              if (liSelected.hasClass(\'vis-selected-li-print\')) {\n                liSelected.removeClass(\'vis-selected-li-print\');\n              }\n              next = liSelected.next();\n              if (next.length > 0) {\n                liSelected = next.addClass(\'vis-selected-li-print\');\n              } else {\n                liSelected = li.eq(0).addClass(\'vis-selected-li-print\');\n              }\n            } else {\n              liSelected = li.eq(0).addClass(\'vis-selected-li-print\');\n            }\n          } else if (e.which === 38) {\n            // If Arrow Up, then move to Previous item of overlay\n            if (liSelected) {\n              if (liSelected.hasClass(\'vis-selected-li-print\')) {\n                liSelected.removeClass(\'vis-selected-li-print\');\n              }\n              next = liSelected.prev();\n              if (next.length > 0) {\n                liSelected = next.addClass(\'vis-selected-li-print\');\n              } else {\n                liSelected = li.last().addClass(\'vis-selected-li-print\');\n              }\n            } else {\n              liSelected = li.last().addClass(\'vis-selected-li-print\');\n            }\n          } else if (e.which === 13) {\n            // On Press Enter, open selected item\n            if (liSelected) {\n              var filetype = liSelected.data("val");\n              process(false, null, filetype);\n              $(\'#w2ui-overlay-main\').off(\'keydown\');\n              $(\'#w2ui-overlay-main\').remove();\n            }\n          } else {\n            // If any other key pressed, then hide overlay\n            $(\'#w2ui-overlay-main\').off(\'keydown\');\n            $(\'#w2ui-overlay-main\').remove();\n          }\n          e.stopPropagation();\n          return false;\n        });\n      }\n      ;\n    };\n    function process(csv, callback, filetype) {\n      var actionOrigin = VIS.ProcessCtl.prototype.ORIGIN_FORM;\n      if (windowID > 0) {\n        actionOrigin = VIS.ProcessCtl.prototype.ORIGIN_WINDOW;\n      }\n      if (!recIds || recIds.length == 0) {\n        $.ajax({\n          url: VIS.Application.contextUrl + "JsonData/GeneratePrint/",\n          dataType: "json",\n          data: {\n            AD_Process_ID: AD_Process_ID,\n            Name: \'Print\',\n            AD_Table_ID: table_ID,\n            Record_ID: record_ID,\n            WindowNo: WindowNo,\n            filetype: filetype,\n            actionOrigin: actionOrigin,\n            originName: VIS.context.getWindowContext(WindowNo, "WindowName")\n          },\n          success: function (data) {\n            if (data == null) {\n              alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n            }\n            var d = jQuery.parseJSON(data);\n            if (callback) {\n              callback();\n            }\n            if (d.IsError) {\n              // Show proper message in case user do not have role for Print\n              VIS.ADialog.error("", "", d.Message, null);\n              // rv.close();\n              return;\n            }\n\n            //this.pi = {};\n            ////this.pi.getUseCrystalReportViewer = function () {\n            ////    if (VIS.context.ctx["#USE_CRYSTAL_REPORT_VIEWER"] == \'Y\') {\n            ////        return true;\n            ////    }\n            ////    else {\n            ////        return false;\n            ////    }\n            ////};\n\n            ////this.pi.getAD_PInstance_ID = function () {\n            ////    return d.AD_PInstance_ID;\n            ////};\n\n            ////this.pi.getAD_Process_ID = function () {\n            ////    return d.AD_Process_ID;\n            ////};\n\n            ////this.pi.getTable_ID = function () {\n            ////    return d.AD_Table_ID;\n            ////};\n\n            ////this.pi.getRecord_ID = function () {\n            ////    return d.RecordID;\n            ////};\n\n            if (d.ReportFilePath) {\n              window.open(VIS.Application.contextUrl + d.ReportFilePath);\n            } else if (d.IsTelerikReport) {\n              if (window.KJS) {\n                var tc = new KJS.TelerikContainer(d.AD_PInstance_ID, table_ID);\n                tc.show();\n                this.unlock();\n              }\n            } else if (VIS.context.getIsUseCrystalReportViewer()) {\n              //var pdfViewer = new VIS.PdfViewer(null, null, true);\n              //var apro = new VIS.AProcess(d.AD_Process_ID);\n              var repV = new VIS.ReportViewerContainer(d);\n              repV.show();\n\n              //var frame = new VIS.CFrame();\n              //frame.setName(VIS.Msg.getMsg("Report"));\n              //frame.setTitle(VIS.Msg.getMsg("Report"));\n              //frame.setContent(repV);\n              //frame.show();\n              //repV.addReport();\n              //var rpv=new ReportViewer(\n            }\n          }\n        });\n      } else {\n        $.ajax({\n          url: VIS.Application.contextUrl + "JsonData/GenerateMultiPrint/",\n          dataType: "json",\n          data: {\n            AD_Process_ID: AD_Process_ID,\n            Name: \'Print\',\n            AD_Table_ID: table_ID,\n            RecIDs: recIds,\n            WindowNo: WindowNo,\n            filetype: filetype,\n            actionOrigin: actionOrigin,\n            originName: VIS.context.getWindowContext(WindowNo, "WindowName")\n          },\n          success: function (data) {\n            if (data == null) {\n              alert(VIS.Msg.getMsg(\'ERRORGettingRepData\'));\n            }\n            var d = jQuery.parseJSON(data);\n            if (callback) {\n              callback();\n            }\n            if (d.IsError) {\n              VIS.ADialog.error(d.ErrorText);\n              // rv.close();\n              return;\n            }\n            if (d.ReportFilePath) {\n              window.open(VIS.Application.contextUrl + d.ReportFilePath);\n              //var showPaging = d.IsReportFormat && d.TotalRecords > 0 && VIS.MRole.getDefault().getIsCanExport(table_ID);\n              //var rv = new VIS.ReportViewer(WindowNo, curTab, true,showPaging,d.TotalRecords, this.PAGE_SIZE);\n\n              //rv.show(d.HTML, d.AD_PrintFormat_ID, null, table_ID, null, null);\n              //var $object = $("<iframe style = \'width:100%;height:99.4%;\' pluginspage=\'http://www.adobe.com/products/acrobat/readstep2.html\'>");\n              //$object.attr("src", VIS.Application.contextUrl + d.ReportFilePath);\n\n              //rv.getRoot().append($object);\n              //rv.setReportBytes(d.Report);\n            }\n          }\n        });\n      }\n    }\n    ;\n    this.startPdf = function (callback) {\n      process(false, callback, VIS.ProcessCtl.prototype.REPORT_TYPE_PDF);\n    };\n    this.startCsv = function (callback) {\n      process(true, callback, VIS.ProcessCtl.prototype.REPORT_TYPE_CSV);\n    };\n  }\n  ;\n  function ReportViewerContainer(reportInfo) {\n    var $root = $(\'<div class="vis-reportrootdiv"> \');\n    var bsyDiv = $(\'<div class="vis-busyindicatorouterwrap bsyCrsyVwr"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    this.getRoot = function () {\n      return $root;\n    };\n    this.addReport = function () {\n      $root.append(bsyDiv);\n      setBusy(true);\n      var $object = $("<iframe style = \'width:100%;height:99.4%;\' pluginspage=\'http://www.adobe.com/products/acrobat/readstep2.html\'>");\n      if (reportInfo.pi && reportInfo.pi.getAD_PInstance_ID()) {\n        $object.attr("src", VIS.Application.contextUrl + \'Areas/VIS/WebPages/CrystalReprotViewer.aspx?title=rpt&aid=\' + reportInfo.pi.getAD_PInstance_ID() + \'&pid=\' + reportInfo.pi.getAD_Process_ID() + \'&tid=\' + reportInfo.pi.getTable_ID() + \'&rid=\' + reportInfo.pi.getRecord_ID());\n      } else {\n        $object.attr("src", VIS.Application.contextUrl + \'Areas/VIS/WebPages/CrystalReprotViewer.aspx?title=rpt&aid=\' + reportInfo.AD_PInstance_ID + \'&pid=\' + reportInfo.AD_Process_ID + \'&tid=\' + reportInfo.AD_Table_ID + \'&rid=\' + reportInfo.RecordID);\n      }\n      $root.append($object);\n    };\n    this.dispose = function () {\n      $root.remove();\n      $root = null;\n    };\n    var setBusy = function (isBusy) {\n      bsyDiv.css("display", isBusy ? \'block\' : \'none\');\n    };\n    this.show = function () {\n      var frame = new VIS.CFrame();\n      frame.setName(VIS.Msg.getMsg("Report"));\n      frame.setTitle(VIS.Msg.getMsg("Report"));\n      frame.setContent(this);\n      this.addReport();\n      frame.show();\n    };\n  }\n  ;\n\n  //function PrintViewer()\n  //{\n\n  //};\n\n  VIS.ReportViewer = ReportViewer;\n  VIS.AReport = AReport;\n  VIS.APrint = APrint;\n  VIS.ReportViewerContainer = ReportViewerContainer;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/areport.js?')},"./Areas/VIS/Scripts/app/arequest.js":()=>{eval(';\n(function (VIS, $) {\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    // data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  function ARequest(invoker, AD_Table_ID, Record_ID, C_BPartner_ID, iBusy, container) {\n    var AD_Window_ID = 232;\n    var m_where = \'\';\n    var window = null;\n    var tab = null;\n    this.getRequests = function (item) {\n      var sql = "VIS_72";\n      var dr = executeReader(sql, null);\n      while (dr.read()) {\n        if (parseInt(dr.getString(0)) == 0) {\n          VIS.ADialog.error(\'VIS_NotSupported\');\n          return;\n        }\n      }\n      m_where = "(AD_Table_ID=" + AD_Table_ID + " AND Record_ID=" + Record_ID + ")";\n      if (AD_Table_ID == 114) {\n        // MUser.Table_ID){\n        m_where += " OR AD_User_ID=" + Record_ID + " OR SalesRep_ID=" + Record_ID;\n      } else if (AD_Table_ID == 291) {\n        //MBPartner.Table_ID){\n        m_where += " OR C_BPartner_ID=" + Record_ID;\n      } else if (AD_Table_ID == 259) {\n        // MOrder.Table_ID){\n        m_where += " OR C_Order_ID=" + Record_ID;\n      } else if (AD_Table_ID == 318) {\n        //MInvoice.Table_ID){\n        m_where += " OR C_Invoice_ID=" + Record_ID;\n      } else if (AD_Table_ID == 335) {\n        // MPayment.Table_ID){\n        m_where += " OR C_Payment_ID=" + Record_ID;\n      } else if (AD_Table_ID == 208) {\n        //MProduct.Table_ID){\n        m_where += " OR M_Product_ID=" + Record_ID;\n      } else if (AD_Table_ID == 203) {\n        //MProject.Table_ID){\n        m_where += " OR C_Project_ID=" + Record_ID;\n      } else if (AD_Table_ID == 539) {\n        // MAsset.Table_ID){\n        m_where += " OR A_Asset_ID=" + Record_ID;\n      }\n      //sql = "SELECT Processed, COUNT(*) "\n      //    + "FROM R_Request WHERE " + m_where\n      //    + " GROUP BY Processed "\n      //    + "ORDER BY Processed DESC";\n\n      //dr = executeReader(sql, null);\n\n      var dr = null;\n      $.ajax({\n        type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Form/GetProcessedRequest",\n        data: {\n          AD_Table_ID: AD_Table_ID,\n          Record_ID: Record_ID\n        },\n        success: function (data) {\n          dr = new VIS.DB.DataReader().toJson(data);\n        }\n      });\n      var inactiveCount = 0;\n      var activeCount = 0;\n      while (dr.read()) {\n        if ("Y" == dr.getString(0)) inactiveCount = dr.getString(1);else activeCount += dr.getString(1);\n      }\n      var $root = $("<div>");\n      var ul = $(\'<ul class=vis-apanel-rb-ul>\');\n      $root.append(ul);\n      var li = $("<li data-id=\'RequestCreate\'>");\n      li.append(VIS.Msg.getMsg("RequestNew"));\n      li.on("click", function (e) {\n        createNewRequest(e);\n      });\n      ul.append(li);\n      if (activeCount > 0) {\n        li = $("<li data-id=\'RequestActive\'>");\n        li.append(VIS.Msg.getMsg("RequestActive"));\n        li.on("click", function (e) {\n          activeRequest(e);\n        });\n        ul.append(li);\n      }\n      if (inactiveCount > 0) {\n        li = $("<li data-id=\'RequestActive\'>");\n        li.append(VIS.Msg.getMsg("RequestAll"));\n        li.on("click", function (e) {\n          allRequest(e);\n        });\n        ul.append(li);\n      }\n      container.w2overlay($root.clone(true), {\n        css: {\n          height: \'200px\'\n        }\n      });\n    };\n    var createNewRequest = function (e) {\n      e.stopImmediatePropagation();\n      //var vm=new VIS.viewManager();\n      window = VIS.viewManager.startWindow(AD_Window_ID, null);\n      window.onLoad = function () {\n        var gc = window.cPanel.curGC;\n        gc.onRowInserting = function () {\n          window.cPanel.cmd_new(false);\n        };\n        gc.onRowInserted = function () {\n          tab = window.cPanel.curTab;\n          tab.setValue("AD_Table_ID", AD_Table_ID);\n          tab.setValue("Record_ID", Record_ID);\n          if (C_BPartner_ID != null && C_BPartner_ID > 0) {\n            tab.setValue("C_BPartner_ID", C_BPartner_ID);\n          }\n          if (AD_Table_ID == 291)\n            // MBPartner.Table_ID)\n            tab.setValue("C_BPartner_ID", Record_ID);else if (AD_Table_ID == 114)\n            //MUser.Table_ID)\n            tab.setValue("AD_User_ID", Record_ID);\n            //\n          else if (AD_Table_ID == 203)\n            // MProject.Table_ID)\n            tab.setValue("C_Project_ID", Record_ID);else if (AD_Table_ID == 539)\n            // MAsset.Table_ID)\n            tab.setValue("A_Asset_ID", Record_ID);else if (AD_Table_ID == 259) tab.setValue("C_Order_ID", Record_ID);else if (AD_Table_ID == 318)\n            //MInvoice.Table_ID)\n            tab.setValue("C_Invoice_ID", Record_ID);\n            //\n          else if (AD_Table_ID == 208)\n            //MProduct.Table_ID)\n            tab.setValue("M_Product_ID", Record_ID);else if (AD_Table_ID == 335)\n            //MPayment.Table_ID)\n            tab.setValue("C_Payment_ID", Record_ID);\n            //\n          else if (AD_Table_ID == 319)\n            // MInOut.Table_ID)\n            tab.setValue("M_InOut_ID", Record_ID);\n        };\n\n        // window.cPanel.cmd_new(false);\n        //tab = window.cPanel.curTab;\n      };\n      var overlay = $(\'#w2ui-overlay\');\n      overlay.hide();\n      overlay = null;\n      //window = null;\n      //tab = null;\n    };\n    var activeRequest = function (e) {\n      e.stopImmediatePropagation();\n      var zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction("(" + m_where + ") AND Processed=\'N\'");\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n      var overlay = $(\'#w2ui-overlay\');\n      overlay.hide();\n      overlay = null;\n    };\n    var allRequest = function (e) {\n      e.stopImmediatePropagation();\n      var zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction(m_where);\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n      var overlay = $(\'#w2ui-overlay\');\n      overlay.hide();\n      overlay = null;\n    };\n  }\n  ;\n  VIS.ARequest = ARequest;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/arequest.js?')},"./Areas/VIS/Scripts/app/azoomacross.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Get And Process ZoomTarget\r\n * Author         :     Lakhwinder\r\n * Date           :     3-Aug-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n\n  //executeDataSet\n  var executeDataSet = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dataSet = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (callback) {\n        callback(dataSet);\n      }\n    });\n    return dataSet;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  function AZoomAcross(btn, tableName, qry, curWindowID, busy, container, KeyCol, Record_ID) {\n    this.init = function () {\n      //\tSee What is there\n      getZoomTargets();\n      // set recordcount of query, so that lookup window does not opens while opening the window\n      // query.SetRecordCount(1);\n    };\n    var list = [];\n    var getZoomTargets = function () {\n      var dr = null;\n      $.ajax({\n        type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Form/GetZoomTargets",\n        data: {\n          tableName: tableName\n        },\n        success: function (data) {\n          dr = JSON.parse(data);\n        }\n      });\n\n      // while (dr.read()) {\n      if (dr != null && dr.length > 0) {\n        for (var a = 0; a < dr.length; a++) {\n          // get table name\n          var targetTableName = dr[a];\n          // get target table names for above table\n          // var zoomList = getZoomTarget(targetTableName, curWindowID, qry.getWhereClause());\n\n          $.ajax({\n            type: \'Get\',\n            async: false,\n            url: VIS.Application.contextUrl + "Form/GetZoomTarget",\n            data: {\n              targetTableName: targetTableName,\n              curWindow_ID: curWindowID,\n              targetWhereClause: qry.getWhereClause()\n            },\n            success: function (data) {\n              zoomList = JSON.parse(data);\n            }\n          });\n          if (zoomList != null) {\n            for (var i in zoomList) {\n              var pp = zoomList[i];\n              var pushData = true;\n              for (var itm in list) {\n                if (list[itm].Key == zoomList[i].Key) {\n                  pushData = false;\n                  break;\n                }\n              }\n              if (pushData) {\n                list.push(pp);\n                //var windowName = pp.toString();\n              }\n            }\n          }\n        }\n      }\n      // close data reader\n      dr = null;\n      if (list.length == 0) {\n        VIS.ADialog.info("NoZoomTarget");\n      } else {\n        var $root = $("<div>");\n        var ul = $(\'<ul class=vis-apanel-rb-ul>\');\n        $root.append(ul);\n        for (var i in list) {\n          var li = $("<li data-id=\'" + list[i].Key + "\'>");\n          li.append(list[i].Name);\n          li.on(\'click\', function (e) {\n            e.stopImmediatePropagation();\n            var ad_window_Id = $(this).data(\'id\');\n            var zoomQuery = new VIS.Query();\n            zoomQuery.addRestriction(KeyCol, VIS.Query.prototype.EQUAL, Record_ID);\n            VIS.viewManager.startWindow(ad_window_Id, zoomQuery);\n            var overlay = $(\'#w2ui-overlay-main\');\n            overlay.hide();\n            overlay = null;\n          });\n          ul.append(li);\n        }\n        //container.append(ul);\n        container.w2overlay($root.clone(true), {\n          css: {\n            height: \'200px\'\n          }\n        });\n      }\n    };\n\n    //var getZoomTarget = function (targetTableName, curWindow_ID, targetWhereClause) {\n\n    //    //The Option List\t\t\t\t\t\n    //    var zoomList = [];\n    //    var columns = [];\n    //    var ZoomWindow_ID = 0;\n    //    var PO_Window_ID;\n    //    var zoom_WindowName = "";\n    //    var whereClause = "";\n    //    var windowFound = false;\n    //    var ctx = VIS.context.ctx;\n    //    var windowList = [];\n    //    // Find windows where the first tab is based on the table\n    //    //var sql = "SELECT DISTINCT w.AD_Window_ID, w.Name, tt.WhereClause, t.TableName, " +\n    //    //        "wp.AD_Window_ID, wp.Name, ws.AD_Window_ID, ws.Name "\n    //    //    + "FROM AD_Table t "\n    //    //    + "INNER JOIN AD_Tab tt ON (tt.AD_Table_ID = t.AD_Table_ID) ";\n\n    //    //var baseLanguage = VIS.Env.isBaseLanguage();// GlobalVariable.IsBaseLanguage();\n    //    //if (baseLanguage) {\n    //    //    sql += "INNER JOIN AD_Window w ON (tt.AD_Window_ID=w.AD_Window_ID)";\n    //    //    sql += " LEFT OUTER JOIN AD_Window ws ON (t.AD_Window_ID=ws.AD_Window_ID)"\n    //    //        + " LEFT OUTER JOIN AD_Window wp ON (t.PO_Window_ID=wp.AD_Window_ID)";\n    //    //}\n    //    //else {\n    //    //    sql += "INNER JOIN AD_Window_Trl w ON (tt.AD_Window_ID=w.AD_Window_ID AND w.AD_Language=\'" + VIS.Env.getAD_Language() + "\')";\n    //    //    sql += " LEFT OUTER JOIN AD_Window_Trl ws ON (t.AD_Window_ID=ws.AD_Window_ID AND ws.AD_Language=\'" + VIS.Env.getAD_Language() + "\')"\n    //    //        + " LEFT OUTER JOIN AD_Window_Trl wp ON (t.PO_Window_ID=wp.AD_Window_ID AND wp.AD_Language=\'" + VIS.Env.getAD_Language() + "\')";\n    //    //}\n    //    //sql += "WHERE t.TableName =\'" + targetTableName\n    //    //    + "\' AND w.AD_Window_ID <>" + curWindow_ID\n    //    //    + " AND tt.SeqNo=10"\n    //    //    + " AND (wp.AD_Window_ID IS NOT NULL "\n    //    //            + "OR EXISTS (SELECT 1 FROM AD_Tab tt2 WHERE tt2.AD_Window_ID = ws.AD_Window_ID AND tt2.AD_Table_ID=t.AD_Table_ID AND tt2.SeqNo=10))"\n    //    //    + " ORDER BY 2";\n\n    //    var ds = null;\n    //    $.ajax({\n    //        type: \'Get\',\n    //        async: false,\n    //        url: VIS.Application.contextUrl + "Form/GetZoomTarget",\n    //        data: { targetTableName: targetTableName, curWindow_ID: curWindow_ID },\n    //        success: function (data) {\n    //            ds = new VIS.DB.DataSet().toJson(data);\n    //        },\n    //    });\n\n    //    if (ds != null && ds.getTables()[0].getRows().length > 0) {\n    //        for (var j = 0; j < ds.getTables()[0].getRows().length; j++) {\n\n    //            windowFound = true;\n    //            ZoomWindow_ID = ds.getTables()[0].getRows()[j].getCell(6);//int.Parse(ds.Tables[0].Rows[i][6].ToString());\n    //            zoom_WindowName = ds.getTables()[0].getRows()[j].getCell(7);//ds.Tables[0].Rows[i][7].ToString();\n    //            PO_Window_ID = ds.getTables()[0].getRows()[j].getCell(4);//ds.Tables[0].Rows[i][4].ToString();\n    //            whereClause = ds.getTables()[0].getRows()[j].getCell(2);//ds.Tables[0].Rows[i][2].ToString();\n    //            // Multiple window support only for Order, Invoice, Shipment/Receipt which have PO windows\n    //            if (PO_Window_ID == null || PO_Window_ID.Length == 0)\n    //                break;\n\n    //            var windowClause = {};\n    //            windowClause.AD_Window_ID = ds.getTables()[0].getRows()[j].getCell(0);\n    //            windowClause.windowName = ds.getTables()[0].getRows()[j].getCell(1);\n    //            windowClause.whereClause = whereClause;\n\n    //            windowList.push(windowClause);\n    //        }\n    //        ds = null;\n    //        var sql1 = "";\n    //        if (!windowFound || (windowList.length <= 1 && ZoomWindow_ID == 0)) {\n    //            return zoomList;\n    //        }\n    //        //If there is a single window for the table, no parsing is neccessary\n    //        if (windowList.length <= 1) {\n    //            //Check if record exists in target table\n    //            sql1 = "SELECT count(*) FROM " + targetTableName + " WHERE " + targetWhereClause;\n    //            if (whereClause != null && whereClause.Length != 0) {\n    //                sql1 += " AND " + VIS.Evaluator.replaceVariables(whereClause, VIS.Env.getCtx(), null);\n    //            }\n    //        }\n    //        else if (windowList.length > 1) {\n    //            // Get the columns used in the whereClause and stores in an arraylist\n    //            for (var i in windowList) {\n    //                parseColumns(columns, windowList[i].whereClause);\n    //            }\n    //            // Get the distinct values of the columns from the table if record exists\n    //            sql1 = "SELECT DISTINCT ";\n    //            for (var i in columns) {\n    //                if (i != 0)\n    //                    sql1 += ",";\n    //                sql1 += columns[i].toString();\n    //            }\n\n    //            if (columns.length == 0) {\n    //                sql1 += "count(*) ";\n    //            }\n\n    //            sql1 += " FROM " + targetTableName + " WHERE " + targetWhereClause;\n    //        }\n\n    //        var columnValues = [];\n    //        ds = executeDataSet(sql1, null);\n\n    //        if (ds != null && ds.getTables()[0].getRows().length > 0) {\n    //            for (var cnt = 0; cnt < ds.getTables()[0].getRows().length; cnt++) {\n    //                if (columns.length > 0) {\n    //                    columnValues = [];\n    //                    // store column names with their values in the variable\n    //                    for (var i in columns) {\n    //                        var colVal = {}\n    //                        colVal.columnName = columns[i].toString();\n    //                        colVal.columnValue = ds.getTables()[0].getRows()[cnt].getCell(columns[i].toString());//(String)ds.Tables[0].Rows[cnt][columnName].ToString();\n    //                        //log.Fine(columnName + " = " + columnValue);\n    //                        //columnValues.Add(new ValueNamePair(columnValue, columnName));\n    //                        columnValues.push(colVal);\n    //                    }\n\n    //                    // Find matching windows\n    //                    for (var i in windowList) {\n    //                        //log.Fine("Window : " + windowList[i].windowName + " WhereClause : " + windowList[i].whereClause);\n    //                        if (evaluateWhereClause(columnValues, windowList[i].whereClause)) {\n    //                            //log.Fine("MatchFound : " + windowList[i].windowName);\n    //                            //KeyNamePair pp = new KeyNamePair(windowList[i].AD_Window_ID, windowList[i].windowName);\n    //                            var zoomitm = {};\n    //                            zoomitm.ID = windowList[i].AD_Window_ID;\n    //                            zoomitm.Name = windowList[i].windowName;\n    //                            //zoomList.Add(pp);\n    //                            zoomList.push(zoomitm);\n    //                            // Use first window found. Ideally there should be just one matching\n    //                            break;\n    //                        }\n    //                    }\n\n    //                }\n    //                else {\n    //                    // get total number of records\n    //                    var rowCount = ds.getTables()[0].getRows()[cnt].getCell(0);// int.Parse(ds.Tables[0].Rows[cnt][0].ToString());\n    //                    if (rowCount != 0) {\n    //                        // make a key name pair\n    //                        //KeyNamePair pp = new KeyNamePair(ZoomWindow_ID, zoom_WindowName);\n    //                        var zoomitm = {};\n    //                        zoomitm.ID = ZoomWindow_ID;\n    //                        zoomitm.Name = zoom_WindowName;\n    //                        zoomList.push(zoomitm);\n    //                    }\n    //                }\n    //            }\n    //        }//end for\n\n    //    }//end if\n\n    //    return zoomList;\n\n    //};\n\n    var parseColumns = function (list, parseString) {\n      if (parseString == null || parseString.Length == 0) {\n        return;\n      }\n\n      //\t//log.fine(parseString);\n      var s = parseString;\n\n      // Currently parsing algorithm does not handle parenthesis, IN clause or EXISTS clause\n      if (s.indexOf(" EXISTS ") > 0 || s.indexOf(" IN ") > 0 || s.indexOf("(") > 0 || s.indexOf(")") > 0) {\n        return;\n      }\n      //  while we have columns\n      while (s.indexOf("=") != -1) {\n        var endIndex = s.indexOf("=");\n        var beginIndex = s.lastIndexOf(\' \', endIndex);\n        var len = endIndex - (beginIndex + 1);\n\n        //String variable = s.Substring(beginIndex + 1, endIndex);\n        var variable = s.substr(beginIndex + 1, len);\n        if (variable.indexOf(".") != -1) {\n          beginIndex = variable.indexOf(".") + 1;\n          //variable = variable.Substring(beginIndex, endIndex);\n          len = endIndex - beginIndex;\n          variable = variable.substr(beginIndex, len);\n        }\n        if (list.indexOf(variable) < 0) list.push(variable);\n        s = s.substr(endIndex + 1);\n      }\n    };\n    /// <summary>\n    /// Evaluate where clause\n    /// </summary>\n    /// <param name="columnValues">columns with the values</param>\n    /// <param name="whereClause">where clause</param>\n    /// <returns>bool type true if where clause evaluates to true</returns>\n    var evaluateWhereClause = function (columnValues, whereClause) {\n      if (whereClause == null || whereClause.Length == 0) {\n        return true;\n      }\n      var s = whereClause;\n      var result = true;\n\n      // Currently parsing algorithm does not handle parenthesis, IN clause or EXISTS clause\n      if (s.indexOf(" EXISTS ") > 0 || s.indexOf(" IN ") > 0 || s.indexOf("(") > 0 || s.indexOf(")") > 0) {\n        return false;\n      }\n      //  while we have variables\n      while (s.indexOf("=") != -1) {\n        var endIndex = s.indexOf("=");\n        var beginIndex = s.lastIndexOf(\' \', endIndex);\n        var variable = s.substr(beginIndex + 1, endIndex - (beginIndex + 1));\n        var operand1 = "";\n        var operand2 = "";\n        var operator1 = "=";\n        if (variable.indexOf(".") != -1) {\n          beginIndex = variable.indexOf(".");\n          variable = variable.substr(beginIndex, endIndex);\n        }\n        for (var i in columnValues) {\n          if (variable == columnValues[i].columnName) {\n            operand1 = "\'" + columnValues[i].columnValue + "\'";\n            break;\n          }\n        }\n        s = s.substr(endIndex + 1);\n        beginIndex = 0;\n        endIndex = s.indexOf(\' \');\n        if (endIndex == -1) operand2 = s.substr(beginIndex);else operand2 = s.substr(beginIndex, endIndex);\n\n        /* //log.fine("operand1:"+operand1+ \r\n                " operator1:"+ operator1 +\r\n        //        " operand2:"+operand2); */\n        if (!VIS.Evaluator.evaluateLogicTuple(operand1, operator1, operand2)) {\n          result = false;\n          break;\n        }\n      }\n      return result;\n    };\n  }\n  ;\n  VIS.AZoomAcross = AZoomAcross;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/azoomacross.js?')},"./Areas/VIS/Scripts/app/calloutengine.js":()=>{eval(';\nVIS.Model = VIS.Model || {}; //Init Model NameSpace\n\n;\n(function (VIS, $) {\n  var calloutActive = false; //flag\n\n  /**\r\n   *  Callout Base class for Callout.\r\n   *  Used in MTab and ImpFormatRow\r\n   *\r\n   */\n\n  function CalloutEngine(clsName) {\n    if (!clsName) {\n      clsName = "CalloutEngine";\n    }\n    this.log = VIS.Logging.VLogger.getVLogger(clsName); //init log Class\n  }\n  ;\n\n  /**\r\n  * \tIs Callout Active\r\n  *\t@return true if active\r\n  */\n  CalloutEngine.prototype.isCalloutActive = function () {\n    return calloutActive;\n  };\n\n  /**\r\n  * \tSet Callout (in)active\r\n  *\t@param active active\r\n  */\n  CalloutEngine.prototype.setCalloutActive = function (active) {\n    calloutActive = active;\n  };\n\n  /**\r\n  *\tStart Callout.\r\n  *  <p>\r\n  *\tCallout\'s are used for cross field validation and setting values in other fields\r\n  *\twhen returning a non empty (error message) string, an exception is raised\r\n  *  <p>\r\n  *\tWhen invoked, the Tab model has the new value!\r\n  *\r\n  *  @param ctx      Context\r\n  *  @param methodName   Method name\r\n  *  @param WindowNo current Window No\r\n  *  @param mTab     Model Tab\r\n  *  @param mField   Model Field\r\n  *  @param value    The new value\r\n  *  @param oldValue The old value\r\n  *  @return Error message or ""\r\n  */\n  CalloutEngine.prototype.start = function (ctx, methodName, windowNo, mTab, mField, value, oldValue) {\n    if (methodName == null || methodName.length == 0) throw new Error("No Method Name");\n    //\n    var retValue = "";\n    var msg = methodName + " - " + mField.getColumnName() + "=" + value + " (old=" + oldValue + ") {active=" + this.isCalloutActive() + "}";\n    if (!this.isCalloutActive()) this.log.info(msg.toString());\n\n    //\tFind Method\n    var method = this[methodName];\n    if (method == null) {\n      //methodName = methodName.replace(methodName, methodName.charAt(0).toUpperCase() + methodName.substr(1));//Added By Sarab to Handle Case\n      methodName = methodName.charAt(0).toUpperCase() + methodName.substr(1);\n      method = this[methodName];\n      if (!method) {\n        throw new Error("Method not found: " + methodName);\n      }\n      ;\n    }\n    ;\n    //  console.log(method);\n\n    var argLength = method.length;\n    if (!(argLength == 5 || argLength == 6)) throw new Error("Method " + methodName + " has invalid no of arguments: " + argLength);\n\n    //\tCall Method\n    try {\n      if (argLength == 6) retValue = this[methodName](ctx, windowNo, mTab, mField, value, oldValue);else retValue = this[methodName](ctx, windowNo, mTab, mField, value);\n    } catch (e) {\n      this.setCalloutActive(false);\n      this.log.log(VIS.Logging.Level.SEVERE, "start: " + methodName, e);\n      retValue = e.toString();\n    }\n    return retValue;\n  };\n\n  /// <summary>\n  /// Set Account Date to the date of the calling column.\n  /// </summary>\n  /// <param name="ctx">context</param>\n  /// <param name="windowNo">window no</param>\n  /// <param name="tab">tab</param>\n  /// <param name="field">field</param>\n  /// <param name="value">value</param>\n  /// <returns>null or error message</returns>\n  CalloutEngine.prototype.DateAcct = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive())\n      //\tassuming it is resetting value\n      return "";\n    //\tsetCalloutActive(true);\n    //if (value == null || !(value.getType() == typeof(DateTime)))\n    if (!value) return "";\n    //Incase of Bank statement Line can\'t update the DateAcct when C_Payment_ID is present\n    //if (mTab.getTableName() == "C_BankStatementLine") {\n    //Can\'t update the DateAcct when C_CashLine_ID is present\n    //if (mTab.findColumn("C_CashLine_ID") >= 0) {\n    //    if (VIS.Utility.Util.getValueOfInt(mTab.getValue("C_Payment_ID")) <= 0 && VIS.Utility.Util.getValueOfInt(mTab.getValue("C_CashLine_ID")) <= 0) {\n    //        mTab.setValue("DateAcct", value);\n    //    }\n    //}\n    //else {\n    //    if (VIS.Utility.Util.getValueOfInt(mTab.getValue("C_Payment_ID")) <= 0) {\n    //        mTab.setValue("DateAcct", value);\n    //    }\n    //}\n    //    mTab.setValue("DateAcct", value);\n    //}\n    //else {\n    //Can be change according to Statement Line Date incase of BankStatement window\n    mTab.setValue("DateAcct", value);\n    //}\n\n    // JID_1332: Set Value in Effective Date on selection of Statement date.\n    if (mTab.getTableName() == "C_BankStatementLine") {\n      mTab.setValue("ValutaDate", value);\n    }\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n\n  /// <summary>\n  /// Rate - set Multiply Rate from Divide Rate and vice versa\n  /// </summary>\n  /// <param name="ctx">context</param>\n  /// <param name="windowNo">window no</param>\n  /// <param name="tab">tab</param>\n  /// <param name="field">field</param>\n  /// <param name="value">value</param>\n  /// <returns>null or error message</returns>\n  CalloutEngine.prototype.Rate = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null)\n      //\tassuming it is Conversion_Rate\n      {\n        return "";\n      }\n    this.setCalloutActive(true);\n    var rate1 = value;\n    var rate2 = VIS.Env.ZERO;\n    var one = 1.0;\n    if (VIS.Utility.Util.getValueOfDouble(rate1) != 0.0)\n      //\tno divide by zero\n      {\n        //rate2 = Decimal.Round(Decimal.Divide(one, rate1), 12);// MidpointRounding.AwayFromZero);  //By Sarab\n        rate2 = (one / rate1).toFixed(12);\n      }\n    //\n    if (mField.getColumnName().toString() == "MultiplyRate") {\n      mTab.setValue("DivideRate", rate2);\n    } else {\n      mTab.setValue("MultiplyRate", rate2);\n    }\n    this.log.info(mField.getColumnName() + "=" + rate1 + " => " + rate2);\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n  VIS.Model.CalloutEngine = CalloutEngine; // global object assignment\n  VIS.CalloutEngine = CalloutEngine;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/calloutengine.js?')},"./Areas/VIS/Scripts/app/child-dialog.js":()=>{eval(";\n(function (VIS, $) {\n  function ChildDialog() {\n    var $a = $(\"<div></div>\");\n    var title = \"Dialog\";\n    var height = \"auto\";\n    var width = \"auto\";\n    var modal = true;\n    var removeClose = false;\n    var resize = true;\n    // my: \"center top\", at: \"center top+75\", of: \"#mycontainer\n    var position = {\n      at: \"center center\",\n      of: window\n    };\n    this.onOkClick = null;\n    this.onCancelClick = null;\n    this.onClose = null;\n    this.setTitle = function (t) {\n      title = t;\n    };\n    this.setModal = function (m) {\n      modal = m;\n    };\n    this.changeTitle = function (t) {\n      $a.dialog('widget').find(\".ui-dialog-title\").text(t);\n    };\n\n    //this.removeCloseBtn = function (remove) {\n    //    removeClose = remove;\n    //}\n\n    this.setHeight = function (h) {\n      height = h;\n    };\n    this.setWidth = function (w) {\n      width = w;\n    };\n    this.setPosition = function (p) {\n      position = p;\n    };\n    this.setEnableResize = function (isResize) {\n      resize = isResize;\n    };\n    var self = this;\n    this.setContent = function (content) {\n      $a.empty();\n\n      //content.css(\"margin-left\", \"-6px\");\n      //content.css(\"margin-right\", \"-7px\");\n      //content.css(\"margin-top\", \"3px\");\n      $a.append(content);\n    };\n    this.getRoot = function () {\n      return $a;\n    };\n    function onClosing() {\n      if (self.onClose) self.onClose();\n      self.dispose();\n      self = null;\n    }\n    this.hidebuttons = function () {\n      $a.dialog('widget').find('.ui-dialog-buttonpane .ui-button').hide();\n      $a.dialog('widget').find('.ui-widget-content').css('border', '0px');\n      //$a.dialog('widget').removeClass('.ui-dialog');\n      //$a.dialog('widget').removeClass('.ui-dialog-buttonpane');\n      $a.dialog('widget').find('.ui-dialog-buttonpane').css('padding', '0px');\n      $a.dialog('widget').find('.ui-dialog-buttonpane').css('margin-top', '0px');\n      $a.dialog('widget').find('.ui-dialog .ui-dialog-buttonpane').hide();\n    };\n    this.hideButtons = function () {\n      $a.dialog('widget').find('.ui-dialog-buttonpane .ui-button').hide();\n      $a.dialog('widget').find('.ui-widget-content').css('border', '0px');\n      //$a.dialog('widget').removeClass('.ui-dialog');\n      //$a.dialog('widget').removeClass('.ui-dialog-buttonpane');\n      $a.dialog('widget').find('.ui-dialog-buttonpane').css('padding', '0px');\n      $a.dialog('widget').find('.ui-dialog-buttonpane').css('margin-top', '0px');\n      $a.dialog('widget').find('.ui-dialog .ui-dialog-buttonpane').hide();\n    };\n    this.close = function () {\n      $a.dialog(\"close\");\n      this.dispose();\n    };\n    this.show = function () {\n      var styleCancel = \"\";\n      var styleOK = \"margin-right:12px\";\n      if (VIS.Application.isRTL) {\n        styleCancel = \"margin-right:7px;\";\n        styleOK = \"\";\n      }\n      $a.dialog({\n        height: height,\n        width: width,\n        title: title,\n        modal: modal,\n        resizable: resize,\n        closeOnEscape: !removeClose,\n        closeText: VIS.Msg.getMsg(\"close\"),\n        //zIndex: 999999,\n        position: position,\n        buttons: [{\n          text: VIS.Msg.getMsg(\"Ok\"),\n          click: function (evt) {\n            var buttonDomElement = evt.target;\n            // Disable the button \n            //$(buttonDomElement).css('background-color', 'red');\n            //$(buttonDomElement).css('color', 'blue');\n            $(buttonDomElement).attr('disabled', true);\n            var res = true;\n            if (self.onOkClick) {\n              res = self.onOkClick(evt);\n            }\n            if (res == true || res == undefined) {\n              if ($a != null) $a.dialog(\"close\");\n            } else {\n              $(buttonDomElement).attr('disabled', false);\n            }\n          },\n          style: styleOK\n        }, {\n          text: VIS.Msg.getMsg(\"Cancel\"),\n          click: function () {\n            if (self.onCancelClick) self.onCancelClick();\n            if ($a) $a.dialog(\"close\");\n          },\n          style: styleCancel\n        }],\n        close: onClosing\n      });\n      //Work Done to Prevent Alt+Left Arrow event due to which back fuctionality of browser executes.\n      $(document).on('keydown', function (e) {\n        if (event.altKey && event.keyCode == 37) {\n          e.preventDefault();\n          return false;\n        }\n        e.stopPropagation();\n      });\n\n      //window.setTimeout(function () {\n      //    $('.ui-widget-content').css(\"z-index\", \"999999\");\n      //});\n      //$('.ui-dialog .ui-dialog-buttonpane').css(\"margin-top\", \"-10px\");\n      $('.ui-dialog .ui-dialog-buttonpane').css(\"border-width\", \"0 0 0\");\n      if (removeClose) $('.ui-dialog-titlebar-close').remove();\n      return $a;\n    };\n\n    //$('.ui-dialog .ui-dialog-buttonpane').css(\"margin\", \"0px\");\n    //$('.ui-dialog .ui-dialog-buttonpane').css(\"padding\", \"0px\");\n    this.dispose = function () {\n      if ($a != null) {\n        $a.dialog('destroy');\n        $a.remove();\n      }\n      $a = null;\n      this.Show = null;\n      this.setContent = null;\n      this.setTitle = null;\n    };\n  }\n  ;\n  VIS.ChildDialog = ChildDialog;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/child-dialog.js?")},"./Areas/VIS/Scripts/app/classes.js":()=>{eval(';\n(function ($, VIS) {\n  var isoDateRegx = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})/;\n  var Level = VIS.Logging.Level;\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var executeReader = function (sql, param, callback, isEncrypt) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    }, isEncrypt);\n    return dr;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback, isEncrypt) {\n    var result = null;\n    //if (isEncrypt) {\n    //    data.sql = VIS.secureEngine.encrypt(data.sql);\n    //}\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n\n  /**\r\n   *\tExpression Evaluator\r\n   *\r\n   */\n  VIS.Evaluator = {\n    /**\r\n     *  Parse String and add variables with @ to the list.\r\n     *  @param list list to be added to\r\n     *  @param parseString string to parse for variables\r\n     */\n    parseDepends: function (list, parseString) {\n      if (parseString == null || parseString.length == 0) return;\n      //\t//log.fine(parseString);\n      var s = parseString;\n      //  while we have variables \n      while (s.indexOf("@") != -1) {\n        var pos = s.indexOf("@");\n        s = s.substring(pos + 1);\n        pos = s.indexOf("@");\n        if (pos == -1) continue; //\terror number of @@ not correct......................\n        var variable = s.substring(0, pos);\n        s = s.substring(pos + 1);\n        //\t//log.fine(variable);\n        if (list.indexOf(variable) < 0) list[list.length] = variable;\n      }\n    },\n    /**\r\n     *\tEvaluate Logic.\r\n     *  <code>\r\n     *\tformat\t\t:= <expression> [<logic> <expression>]\r\n     *\texpression\t:= @<context>@<exLogic><value>\r\n     *\tlogic\t\t:= <|> | <&>\r\n     *  exLogic\t\t:= <=> | <!> | <^> | <<> | <>>\r\n     *\r\n     *\tcontext\t\t:= any global or window context\r\n     *\tvalue\t\t:= strings can be with \' or "\r\n     *\tlogic operators\t:= AND or OR with the prevoius result from left to right\r\n     *\r\n     *\tExample\t\'@AD_Table@=Test | @Language@=GERGER\r\n     *  </code>\r\n     *  @param source class[function] implementing get_ValueAsString(variable)\r\n     *  @param logic logic string\r\n     *  @return locic result\r\n     */\n    evaluateLogic: function (source, logic) {\n      //\tConditionalStringTokenizer\n      var st = new VIS.StringTokenizer(logic.trim(), "&|", true);\n      // try {\n\n      var it = st.countTokens();\n      if (it / 2 - (it + 1) / 2 == 0)\n        //\tonly uneven arguments\n        {\n          //log.severe("Logic does not comply with format "\n          //    + "\'<expression> [<logic> <expression>]\' => " + logic);\n          return false;\n        }\n      var retValue = this.evaluateLogicDouble(source, st.nextToken());\n      while (st.hasMoreTokens()) {\n        var logOp = st.nextToken().trim();\n        var temp = this.evaluateLogicDouble(source, st.nextToken());\n        if (logOp.equals("&")) retValue = retValue && temp;else if (logOp.equals("|")) retValue = retValue || temp;else {\n          //            //Common.ErrorLog.FillErrorLog("Evaluatot.EvaluateLogic()", "DynamicDisplay", "Logic operant \'|\' or \'&\' expected => " + logic, VAdvantage.Framework.Message.MessageType.ERROR);\n          //            //log.warning("Logic operant \'|\' or \'&\' expected => " + logic);\n          return false;\n        }\n      }\n      return retValue;\n      //}\n      // catch (exception) {\n      //    return false;\n      // }\n    },\n    /**\r\n     *\tEvaluate\t@context@=value or @context@!value or @context@^value.\r\n     *  <pre>\r\n     *\tvalue: strips \' and " always (no escape or mid stream)\r\n     *  value: can also be a context variable\r\n     *  </pre>\r\n     *  @param source class implementing get_ValueAsString(variable)\r\n     *  @param logic logic tuple\r\n     *\t@return\ttrue or false\r\n     */\n    evaluateLogicDouble: function (source, logic) {\n      var st = new VIS.StringTokenizer(logic.trim(), "!=^><", true);\n      if (st.countTokens() !== 3) {\n        //log.warning("Logic tuple does not comply with format "\n        //    + "\'@context@=value\' where operand could be one of \'=!^><\' => " + logic);\n\n        return false;\n      }\n      //\tFirst Part\n      var first = st.nextToken().trim(); //\tget \'@tag@\'\n      var firstEval = first.trim();\n      if (first.indexOf(\'@\') != -1)\n        //\tvariable\n        {\n          first = first.replaceAll(\'@\', \' \').trim(); //\tstrip \'tag\'\n          //firstEval = source.get_ValueAsString(first);\t\t//\treplace with it\'s value\n          firstEval = source.getValueAsString(first);\n          if (firstEval == null) firstEval = "";\n        }\n      firstEval = firstEval.replaceAll(\'\\\'\', \' \').replaceAll(\'"\', \' \').trim(); //\tstrip \' and "\n      //\tComperator\n      var operand = st.nextToken();\n\n      //\tSecond Part\n      var second = st.nextToken(); //\tget value\n      var secondEval = second.trim();\n      if (second.indexOf(\'@\') != -1 && second[0] == \'@\' && second[second.length - 1] == \'@\') {\n        second = second.replaceAll(\'@\', \' \').trim(); // strip tag\n        //secondEval = source.get_ValueAsString(second);\t\t//\treplace with it\'s value\n        secondEval = source.getValueAsString(second); //\treplace with it\'s value\n        if (secondEval == null) secondEval = "";\n      }\n      secondEval = secondEval.replaceAll(\'\\\'\', \' \').replaceAll(\'"\', \' \').trim(); //\tstrip \' and "\n      //\tHandling of ID compare (null => 0)\n      if (first.indexOf("_ID") != -1 && firstEval.length == 0) firstEval = "0";\n      if (second.indexOf("_ID") != -1 && secondEval.length == 0) secondEval = "0";\n      //handle null value \n      if (firstEval == "0" && (secondEval == "" || secondEval == "null")) secondEval = "0";\n      if (firstEval.length == 0 && secondEval == "null") secondEval = "";\n\n      //\tLogical Comparison\n      var result = this.evaluateLogicTuple(firstEval, operand, secondEval);\n\n      //if (log.isLevelFinest())\n      //    //log.finest(logic\n      //        + " => \\"" + firstEval + "\\" " + operand + " \\"" + secondEval + "\\" => " + result);\n      //\n      return result;\n    },\n    /**\r\n     *\tEvaluate\t@context@=value or @context@!value or @context@^value.\r\n     *  <pre>\r\n     *\tvalue: strips \' and " always (no escape or mid stream)\r\n     *  value: can also be a context variable\r\n     *  </pre>\r\n     *  @param source class implementing get_ValueAsString(variable)\r\n     *  @param logic logic tuple\r\n     *\t@return\ttrue or false\r\n     */\n    evaluateLogicTuple: function (value1, operand, value2) {\n      if (value1 == null || operand == null || value2 == null) return false;\n      var value1bd = 0;\n      var value2bd = 0;\n      try {\n        if (!value1.startsWith("\'") && !isNaN(value1)) value1bd = Number(value1);\n        if (!value2.startsWith("\'") && !isNaN(value2)) value2bd = Number(value2);\n      } catch (exception) {\n        value1bd = 0;\n        value2bd = 0;\n      }\n      //\n      if (operand.equals("=")) {\n        if (value1bd != 0 && value2bd != 0) return value1bd.compareTo(value2bd) == 0;\n        return value1.compareTo(value2) == 0;\n      } else if (operand.equals("<")) {\n        if (value1bd != 0 && value2bd != 0) return value1bd.compareTo(value2bd) < 0;\n        return value1.compareTo(value2) < 0;\n      } else if (operand.equals(">")) {\n        if (value1bd != 0 && value2bd != 0) return value1bd.compareTo(value2bd) > 0;\n        return value1.compareTo(value2) > 0;\n      } else\n        //\tinterpreted as not\n        {\n          if (value1bd != 0 && value2bd != 0) return value1bd.compareTo(value2bd) != 0;\n          return value1.compareTo(value2) != 0;\n        }\n    },\n    /**\r\n     * \tGet Variables in string\r\n     *\t@param raw input\r\n     *\t@return variables\r\n     */\n    getVariables: function (raw) {\n      var variables = [];\n      var buf = new StringBuilder();\n      var st = new VIS.StringTokenizer(raw, "@");\n      while (st.hasMoreTokens()) {\n        buf.append(st.nextToken());\n        if (st.hasMoreTokens()) {\n          buf.append("?");\n          var temp = st.nextToken();\n\n          //now if the variable contains |, which means it is in the form of @var|alternative@, remove | the the part after\n          if (temp.indexOf("|") != -1) temp = temp.substring(0, temp.indexOf("|"));\n          if (variables.indexOf(temp) === -1) variables.push(temp);\n        }\n      }\n      return variables;\n    },\n    //\tgetVariable\n\n    replaceVariables: function (raw, ctx, windowCtx) {\n      var result = raw;\n      var variables = [];\n      this.parseDepends(variables, raw);\n      //log.finest("The variables are:"+ variables);\n      for (var i = 0; i < variables.length; i++) {\n        var variable = variables[i];\n        // Assume that variables will never contain newline\n        if (variable.indexOf("\\n") != -1) break;\n        var param = null;\n        if (windowCtx != null) param = windowCtx.get(variable);\n        if (param == null) param = ctx.getContext(variable);\n        if (param != null && param.length > 0) {\n          var l = null;\n          try {\n            l = new Number(param);\n          } catch (e) {}\n          if (l != null) result = result.replaceAll("@" + variable + "@", l.toString());else {\n            var num = null;\n            try {\n              num = new Double(param);\n            } catch (e) {}\n            if (num != null) result = result.replaceAll("@" + variable + "@", num.toString());else result = result.replaceAll("@" + variable + "@", param.replaceAll("\'", "\'\'"));\n          }\n        } else {\n          result = result.replaceAll("@" + variable + "@", "NULL");\n        }\n      }\n      return result;\n    },\n    // Evaluate Logic By passing current row data  -- Mandeep \n\n    evaluateLogicByRowData: function (source, logic) {\n      //\tConditionalStringTokenizer\n      var st = new VIS.StringTokenizer(logic.trim(), "&|", true);\n      // try {\n\n      var it = st.countTokens();\n      if (it / 2 - (it + 1) / 2 == 0)\n        //\tonly uneven arguments\n        {\n          //log.severe("Logic does not comply with format "\n          //    + "\'<expression> [<logic> <expression>]\' => " + logic);\n          return false;\n        }\n      var retValue = this.evaluateLogicByRowDouble(source, st.nextToken());\n      while (st.hasMoreTokens()) {\n        var logOp = st.nextToken().trim();\n        var temp = this.evaluateLogicByRowDouble(source, st.nextToken());\n        if (logOp.equals("&")) retValue = retValue && temp;else if (logOp.equals("|")) retValue = retValue || temp;else {\n          //            //Common.ErrorLog.FillErrorLog("Evaluatot.EvaluateLogic()", "DynamicDisplay", "Logic operant \'|\' or \'&\' expected => " + logic, VAdvantage.Framework.Message.MessageType.ERROR);\n          //            //log.warning("Logic operant \'|\' or \'&\' expected => " + logic);\n          return false;\n        }\n      }\n      return retValue;\n      //}\n      // catch (exception) {\n      //    return false;\n      // }\n    },\n    // Evaluate Logic By passing current row data  -- Mandeep \n    evaluateLogicByRowDouble: function (rowData, logic) {\n      var st = new VIS.StringTokenizer(logic.trim(), "!=^><", true);\n      if (st.countTokens() !== 3) {\n        //log.warning("Logic tuple does not comply with format "\n        //    + "\'@context@=value\' where operand could be one of \'=!^><\' => " + logic);\n\n        return false;\n      }\n      //\tFirst Part\n      var first = st.nextToken().trim(); //\tget \'@tag@\'\n      var firstEval = first.trim();\n      if (first.indexOf(\'@\') != -1)\n        //\tvariable\n        {\n          first = first.replaceAll(\'@\', \' \').trim(); //\tstrip \'tag\'\n          //firstEval = source.get_ValueAsString(first);\t\n          //\treplace with it\'s value\n          firstEval = rowData.getValue(first);\n          if (firstEval == null) {\n            firstEval = "";\n          } else {\n            firstEval = firstEval === true ? \'Y\' : firstEval === false ? \'N\' : firstEval;\n            firstEval = firstEval.toString();\n          }\n        }\n      firstEval = firstEval.replaceAll(\'\\\'\', \' \').replaceAll(\'"\', \' \').trim(); //\tstrip \' and "\n      //\tComperator\n      var operand = st.nextToken();\n\n      //\tSecond Part\n      var second = st.nextToken(); //\tget value\n      var secondEval = second.trim();\n      if (second.indexOf(\'@\') != -1 && second[0] == \'@\' && second[second.length - 1] == \'@\') {\n        second = second.replaceAll(\'@\', \' \').trim(); // strip tag\n        //secondEval = source.get_ValueAsString(second);\t\t//\treplace with it\'s value\n        secondEval = rowData.getValue(second); //\treplace with it\'s value\n        if (secondEval == null) {\n          secondEval = "";\n        } else {\n          secondEval = secondEval === true ? \'Y\' : secondEval === false ? \'N\' : secondEval;\n          secondEval = secondEval.toString();\n        }\n      }\n      secondEval = secondEval.replaceAll(\'\\\'\', \' \').replaceAll(\'"\', \' \').trim(); //\tstrip \' and "\n      //\tHandling of ID compare (null => 0)\n      if (first.indexOf("_ID") != -1 && firstEval.length == 0) firstEval = "0";\n      if (second.indexOf("_ID") != -1 && secondEval.length == 0) secondEval = "0";\n      //handle null value \n      if (firstEval == "0" && (secondEval == "" || secondEval == "null")) secondEval = "0";\n      if (firstEval.length == 0 && secondEval == "null") secondEval = "";\n\n      //\tLogical Comparison\n      var result = this.evaluateLogicTuple(firstEval, operand, secondEval);\n\n      //if (log.isLevelFinest())\n      //    //log.finest(logic\n      //        + " => \\"" + firstEval + "\\" " + operand + " \\"" + secondEval + "\\" => " + result);\n      //\n      return result;\n    }\n  };\n\n  /**\r\n   *\tQuery Descriptor.\r\n   * \tMaintains QueryRestrictions (WHERE clause)\r\n   *\r\n   */\n  VIS.Query = function (tableName, isORcondition) {\n    if (tableName) {\n      this.tableName = tableName;\n    } else {\n      this.tableName = "";\n    }\n    this.list = [];\n    /**\tRecord Count\t\t\t\t*/\n    this.recordCount = 999999;\n    /** New Record VIS.Query\t\t\t*/\n    this.newRecord = false;\n    this.isORcondition = false;\n    if (isORcondition && isORcondition == true) {\n      this.isORcondition = true;\n    }\n\n    /** New Record String\t\t\t*/\n  };\n  VIS.Query.prototype.addRestriction = function () {\n    var r = null;\n    if (arguments.length == 5) {\n      r = new VIS.QueryRestriction(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n      if (this.isORcondition) r.andCondition = false;\n      if (!arguments[3].toString().startsWith("-")) {\n        this.list.push(r);\n      }\n    } else if (arguments.length == 3) {\n      r = new VIS.QueryRestriction(arguments[0], arguments[1], arguments[2], null, null);\n      if (this.isORcondition) r.andCondition = false;\n      this.list.push(r);\n    } else if (arguments.length == 1) {\n      var whereClause = arguments[0];\n      if (typeof whereClause == "string") {\n        if (whereClause == null || whereClause.trim().length == 0) return;\n        r = new VIS.QueryRestriction(whereClause);\n        if (this.isORcondition) r.andCondition = false;\n        this.list.push(r);\n        this.newRecord = whereClause.equals(VIS.Query.NEWRECORD);\n      } else {\n        r = whereClause;\n        if (this.isORcondition) r.andCondition = false;\n        this.list.push(r);\n      }\n    } else {\n      throw new Error("invalid arguments Addrestriction");\n    }\n    r = null;\n  };\n  VIS.Query.prototype.setTableName = function (tableName) {\n    this.tableName = tableName;\n  };\n  VIS.Query.prototype.setRecordCount = function (count) {\n    this.recordCount = count;\n  };\n  VIS.Query.prototype.setColumnName = function (index, ColumnName) {\n    /// <summary>\n    /// Set ColumnName of index\n    /// </summary>\n    /// <param name="index">index</param>\n    /// <param name="ColumnName">new column name</param>\n    if (index < 0 || index >= this.list.length) return;\n    this.list[index].columnName = ColumnName;\n  };\n  VIS.Query.prototype.getCode = function (index) {\n    if (index < 0 || index >= this.list.length) return null;\n    this.list[index].code;\n  };\n  VIS.Query.prototype.getInfo = function () {\n    /// <summary>\n    /// Get printable VIS.Query Info\n    /// </summary>\n    /// <returns></returns>\n\n    var sb = "",\n      r = null;\n    if (this.tableName != null) sb += this.tableName + ": ";\n    //\n    for (var i = 0; i < this.list.length; i++) {\n      r = this.list[i];\n      if (i != 0) sb += r.andCondition ? " AND " : " OR ";\n      //\n      sb += r.getInfoName() + r.getInfoOperator() + r.getInfoDisplayAll();\n    }\n    return sb;\n  };\n  VIS.Query.prototype.getIsActive = function () {\n    /// <summary>\n    /// Restrictions are active\n    /// </summary>\n    /// <returns></returns>\n    return this.list.length != 0;\n  };\n  VIS.Query.prototype.getIsNewRecordQuery = function () {\n    /// <summary>\n    ///\tNew Record VIS.Query\n    /// </summary>\n    /// <returns></returns>\n    return this.newRecord;\n  };\n  VIS.Query.prototype.getRecordCount = function () {\n    return this.recordCount;\n  };\n  VIS.Query.prototype.getWhereClause = function () {\n    var index = arguments.length == 1 ? arguments[0] : false;\n    var sb = "",\n      r = null;\n    if (typeof index == "boolean" || isNaN(index)) {\n      var qualified = index;\n      if (qualified && (this.tableName == null || this.tableName.length == 0)) qualified = false;\n      //\n      for (var i = 0; i < this.list.length; i++) {\n        r = this.list[i];\n        if (i != 0) {\n          sb += r.andCondition ? " AND " : " OR ";\n        }\n        if (qualified) sb += r.getSQL(this.tableName);else sb += r.getSQL(null);\n      }\n      if (sb.length > 0) {\n        return " ( " + sb + " ) ";\n      }\n      return sb;\n    } else {\n      if (index >= 0 && index < this.list.Count) {\n        r = this.list[index];\n        sb += r.GetSQL(null);\n      }\n      return sb;\n    }\n  };\n  VIS.Query.prototype.getRestrictionCount = function () {\n    /// <summary>\n    ///Get VIS.Query Restriction Count\n    /// </summary>\n    /// <returns></returns>\n    return this.list.length;\n  };\n  VIS.Query.prototype.clear = function () {\n    this.list = [];\n  };\n  VIS.Query.prototype.getRestrictions = function () {\n    /// <summary>\n    ///Get VIS.Query Restriction Count\n    /// </summary>\n    /// <returns></returns>\n    return this.list;\n  };\n  VIS.Query.prototype.copyRestrictions = function (arrRes) {\n    // for (var i = 0, j = arrRes; i < j; i++)\n    this.list = this.list.concat(arrRes);\n  };\n  VIS.Query.prototype.addRangeRestriction = function () {\n    var r = null;\n    if (arguments.length == 3) {\n      r = new VIS.QueryRestriction(arguments[0], arguments[1], arguments[2], null, null, null);\n    } else {\n      r = new VIS.QueryRestriction(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n    }\n    this.list.push(r);\n  };\n  VIS.Query.prototype.getColumnName = function (index) {\n    /// <summary>\n    /// Get ColumnName of index\n    /// </summary>\n    /// <param name="index">index</param>\n    /// <returns>ColumnName</returns>\n    if (index < 0 || index >= this.list.length) return null;\n    return this.list[index].columnName;\n  };\n  VIS.Query.prototype.getTableName = function () {\n    /// <summary>\n    /// Get Table name\n    /// </summary>\n    /// <returns></returns>\n    return this.tableName;\n  };\n  VIS.Query.prototype.getOperator = function (index) {\n    if (index < 0 || index >= this.list.length) return null;\n    return this.list[index].operator;\n  };\n  VIS.Query.prototype.getCodeTo = function (index) {\n    /// <summary>\n    /// Get Operator of index\n    /// </summary>\n    /// <param name="index"></param>\n    /// <returns></returns>\n    if (index < 0 || index >= this.list.Count) return null;\n    return this.list[index].code_to;\n  };\n  VIS.Query.prototype.getInfoDisplay = function (index) {\n    /// <summary>\n    /// Get QueryRestriction Display of index\n    /// </summary>\n    /// <param name="index"></param>\n    /// <returns></returns>\n    if (index < 0 || index >= this.list.length) return null;\n    return this.list[index].infoDisplay;\n  };\n  VIS.Query.prototype.getInfoDisplay_to = function (index) {\n    /// <summary>\n    ///Get TO QueryRestriction Display of index\n    /// </summary>\n    /// <param name="index"></param>\n    /// <returns></returns>\n    if (index < 0 || index >= this.list.length) return null;\n    return this.list[index].infoDisplay_to;\n  };\n  VIS.Query.prototype.getInfoName = function (index) {\n    /// <summary>\n    ///Get Info Name\n    /// </summary>\n    /// <param name="index"></param>\n    /// <returns></returns>\n    if (index < 0 || index >= this.list.length) return null;\n    return this.list[index].infoName;\n  };\n  VIS.Query.prototype.getInfoOperator = function (index) {\n    /// <summary>\n    /// Get Info Operator\n    /// </summary>\n    /// <param name="index"></param>\n    /// <returns></returns>\n    if (index < 0 || index >= this.list.length) return null;\n    return this.list[index].getInfoOperator();\n  };\n  VIS.Query.prototype.getInfoDisplayAll = function (index) {\n    /// <summary>\n    ///Get Display with optional To\n    /// </summary>\n    /// <param name="index"></param>\n    /// <returns></returns>\n    if (index < 0 || index >= _list.Count) return null;\n    return this.list[index].getInfoDisplayAll();\n  };\n  VIS.Query.prototype.deepCopy = function () {\n    var newQuery = new VIS.Query(this.tableName);\n    for (var i = 0; i < this.list.length; i++) {\n      newQuery.addRestriction(this.list[i]);\n    }\n    return newQuery;\n  };\n  VIS.Query.prototype.getNoRecordQuery = function (tableName, newRecord) {\n    var query = new VIS.Query(tableName);\n    if (newRecord) {\n      query.AddRestriction(VIS.Query.NEWRECORD);\n    } else {\n      query.AddRestriction("1=2");\n    }\n    query.setRecordCount(0);\n    return query;\n  };\n  VIS.Query.prototype.NEWRECORD = "2=3";\n  VIS.Query.prototype.EQUAL = "=";\n  /** Equal - 0\t\t*/\n  VIS.Query.prototype.EQUAL_INDEX = 0;\n  /** Not Equal\t\t*/\n  VIS.Query.prototype.NOT_EQUAL = "!=";\n  /** Like\t\t\t*/\n  VIS.Query.prototype.LIKE = " LIKE ";\n  /** Not Like\t\t*/\n  VIS.Query.prototype.NOT_LIKE = " NOT LIKE ";\n  /** Greater\t\t\t*/\n  VIS.Query.prototype.GREATER = ">";\n  /** Greater Equal\t*/\n  VIS.Query.prototype.GREATER_EQUAL = ">=";\n  /** Less\t\t\t*/\n  VIS.Query.prototype.LESS = "<";\n  /** Less Equal\t\t*/\n  VIS.Query.prototype.LESS_EQUAL = "<=";\n  /** Between\t\t\t*/\n  VIS.Query.prototype.BETWEEN = " BETWEEN ";\n  /** Between - 8\t\t*/\n  VIS.Query.prototype.BETWEEN_INDEX = 8;\n  /** IN\t\t\t*/\n  VIS.Query.prototype.IN = " IN ";\n  /** NOT IN\t\t\t*/\n  VIS.Query.prototype.NOT_IN = " NOT IN ";\n\n  /**\tOperators for Strings\t\t\t\t*/\n  VIS.Query.prototype.OPERATORS = {\n    "=": " = ",\n    //\t0\n    "!=": " != ",\n    " LIKE ": " ~ ",\n    " NOT LIKE ": " !~ ",\n    ">": " > ",\n    ">=": " >= ",\n    //\t5\n    "<": " < ",\n    "<=": " <= ",\n    " BETWEEN ": " >-< " //\t8\n    //\t,new ValueNamePair (IN,\t\t\t\t" () "),\n    //\tnew ValueNamePair (NOT_IN,\t\t\t" !() ")\t\t\t\n  };\n  VIS.Query.prototype.CVOPERATORS = {\n    "=": " = ",\n    //\t0\n    "!=": " != ",\n    ">": " > ",\n    "<": " < "\n    //\t,new ValueNamePair (IN,\t\t\t\t" () "),\n    //\tnew ValueNamePair (NOT_IN,\t\t\t" !() ")\t\t\t\n  };\n\n  /**\tOperators for IDs\t\t\t\t\t*/\n  VIS.Query.prototype.OPERATORS_ID = {\n    "=": " = ",\n    //\t0\n    "!=": " != "\n    //\t,new ValueNamePair (IN,\t\t\t\t" IN "),\t\t\t\n    //\tnew ValueNamePair (NOT_IN,\t\t\t" !() ")\t\t\t\n  };\n\n  /**\tOperators for IDs\t\t\t\t\t*/\n  VIS.Query.prototype.CVOPERATORS_ID = {\n    "=": " = ",\n    //\t0\n    "!": " != "\n    //\t,new ValueNamePair (IN,\t\t\t\t" IN "),\t\t\t\n    //\tnew ValueNamePair (NOT_IN,\t\t\t" !() ")\t\t\t\n  };\n\n  ///**\tOperators for IDs\t\t\t\t\t*/\n  //VIS.Query.prototype.OPERATORS_DYNAMIC_ID = {\n  //    "@#AD_User_ID@": VIS.Msg.getMsg("LoginUser")\t\t//\t0\n  //    //new ValueNamePair (NOT_EQUAL,\t\t" != ")\n  //    //\t,new ValueNamePair (IN,\t\t\t\t" IN "),\t\t\t\n  //    //\tnew ValueNamePair (NOT_IN,\t\t\t" !() ")\t\t\t\n  //};\n  /**\tOperators for Boolean\t\t\t\t\t*/\n  VIS.Query.prototype.OPERATORS_YN = {\n    "=": " = "\n  };\n  VIS.Query.prototype.OPERATORS_DATE_DYNAMIC = {\n    "0": "Today",\n    "1": "lastxDays",\n    //\t0\n    "2": "lastxMonth",\n    "3": "lastxYears"\n    //,\n    //"4": "xDaysAgo",\n    //"5": "xMonthAgo",\n    //"6": "xYearsAgo"\n  };\n  /**\tOperators for IDs\t\t\t\t\t*/\n  VIS.Query.prototype.OPERATORS_DYNAMIC_ID = {\n    "@#AD_User_ID@": "LoginUser" //\t0\n    //new ValueNamePair (NOT_EQUAL,\t\t" != ")\n    //\t,new ValueNamePair (IN,\t\t\t\t" IN "),\t\t\t\n    //\tnew ValueNamePair (NOT_IN,\t\t\t" !() ")\t\t\t\n  };\n  VIS.Query.prototype.getEqualQuery = function (columnName, value) {\n    var query = new VIS.Query();\n    query.addRestriction(columnName, VIS.Query.prototype.EQUAL, value);\n    query.setRecordCount(1); //\tguess\n    return query;\n  };\n\n  /**\r\n  * \tQuery Restriction\r\n  */\n  VIS.QueryRestriction = function () {\n    this.directWhereClause = null;\n    /**\tColumn Name\t\t\t*/\n    this.columnName;\n    /** Name\t\t\t\t*/\n    this.infoName;\n    /** Operator\t\t\t*/\n    this.operator;\n    /** sql Where Code\t\t*/\n    this.code;\n    /** Info\t\t\t\t*/\n    this.infoDisplay;\n    /** sql Where Code To\t*/\n    this.code_to;\n    /** Info To\t\t\t\t*/\n    this.infoDisplay_to;\n    /** And/Or Condition\t*/\n    this.andCondition = true;\n    switch (arguments.length) {\n      case 5:\n        this.fnArgu5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n        break;\n      case 6:\n        this.fnArgu6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        break;\n      case 9:\n        this.fnArgu9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);\n        break;\n      case 1:\n        this.fnArgu1(arguments[0]);\n        break;\n      case 0:\n        break;\n      default:\n        throw new Error("Invalid arguments");\n    }\n  };\n\n  /**\r\n  * \tRestriction\r\n  * \t@param columnName ColumnName\r\n  * \t@param operator Operator, e.g. = != ..\r\n  * \t@param code Code, e.g 0, All%\r\n  *  @param infoName Display Name\r\n  * \t@param infoDisplay Display of Code (Lookup)\r\n  */\n  VIS.QueryRestriction.prototype.fnArgu5 = function (columnName, oprator, code, infoName, infoDisplay) {\n    var ColumnName = columnName.trim();\n    var InfoName;\n    if (infoName != null) InfoName = infoName;else InfoName = ColumnName;\n    //\n    Operator = oprator;\n    var Code;\n    //\tBoolean\n    if (code != null && typeof code == "Boolean") {\n      Code = new Boolean(code) == true ? "Y" : "N";\n    }\n    //else if (code != null && code.GetType() == typeof(KeyNamePair))\n    //  Code = ((KeyNamePair)code).GetKey();\n    //else if (code != null && code.GetType() == typeof(ValueNamePair))\n    //  Code = ((ValueNamePair)code).GetValue();\n    else Code = code;\n    ///\tclean code\n    if (Code != null && typeof Code == "string") {\n      if (Code.startsWith("\'")) Code = Code.substring(1);\n      if (Code.endsWith("\'")) Code = Code.substring(0, Code.length - 2);\n    }\n    var InfoDisplay;\n    if (infoDisplay != null) InfoDisplay = infoDisplay.toString().trim();else if (code != null) InfoDisplay = code;\n    this.columnName = ColumnName;\n    /** Name\t\t\t\t*/\n    this.infoName = InfoName;\n    /** Operator\t\t\t*/\n    this.operator = Operator;\n    /** sql Where Code\t\t*/\n    this.code = Code;\n    /** Info\t\t\t\t*/\n    this.infoDisplay = InfoDisplay;\n  };\n\n  /**\r\n  * \tRange Restriction (BETWEEN)\r\n  * \t@param columnName ColumnName\r\n  * \t@param code Code, e.g 0, All%\r\n  * \t@param code_to Code, e.g 0, All%\r\n  *  @param infoName Display Name\r\n  * \t@param infoDisplay Display of Code (Lookup)\r\n  * \t@param infoDisplay_to Display of Code (Lookup)\r\n  */\n  VIS.QueryRestriction.prototype.fnArgu6 = function (columnName, code, code_to, infoName, infoDisplay, infoDisplay_to) {\n    this.fnArgu5(columnName, VIS.Query.prototype.BETWEEN, code, infoName, infoDisplay);\n    var Code_to = code_to;\n    if (typeof Code_to == "string") {\n      if (Code_to.startsWith("\'")) Code_to = Code_to.substring(1);\n      if (Code_to.endsWith("\'")) Code_to = Code_to.substring(0, Code_to.length - 2);\n    }\n    //\tInfoDisplay_to\n    var InfoDisplay_to;\n    if (infoDisplay_to != null) InfoDisplay_to = infoDisplay_to.trim();else if (Code_to != null) InfoDisplay_to = Code_to.toString();\n    this.code_to = Code_to;\n    this.infoDisplay_to = InfoDisplay_to;\n  };\n\n  /**\r\n  * \tadd restirction - Internal Use\r\n  *\t@param columnName\r\n  *\t@param code\r\n  *\t@param code_to\r\n  *\t@param infoName\r\n  *\t@param infoDisplay\r\n  *\t@param infoDisplay_to\r\n  *\t@param operator\r\n  *\t@param directWhereClause\r\n  *\t@param andCondition\r\n  */\n  VIS.QueryRestriction.prototype.fnArgu9 = function (columnName, code, code_to, infoName, infoDisplay, infoDisplay_to, ooperator, directWhereClause, andCondition) {\n    this.columnName = columnName;\n    this.infoName = infoName;\n    this.code = code;\n    this.code_to = code_to;\n    this.infoName = infoName;\n    this.infoDisplay = infoDisplay;\n    this.infoDisplay_to = infoDisplay_to;\n    this.operator = ooperator;\n    this.directWhereClause = directWhereClause;\n    this.andCondition = andCondition;\n  };\n  VIS.QueryRestriction.prototype.fnArgu1 = function (whereClause) {\n    this.directWhereClause = whereClause;\n  };\n  VIS.QueryRestriction.prototype.getInfoName = function () {\n    /// <summary>\n    /// Get Info Name\n    /// </summary>\n    /// <returns></returns>\n    return this.infoName;\n  };\n  VIS.QueryRestriction.prototype.getInfoOperator = function () {\n    /// <summary>\n    /// Get Info Operator\n    /// </summary>\n    /// <returns></returns>\n    if (this.operator in VIS.Query.OPERATORS) {\n      return VIS.Query.OPERATORS[this.operator];\n    }\n    return this.operator;\n  };\n  VIS.QueryRestriction.prototype.getInfoDisplayAll = function () {\n    /// <summary>\n    ///\tGet Display with optional To\n    /// </summary>\n    /// <returns></returns>\n    if (this.infoDisplay_to == null) return this.infoDisplay;\n    var sb = this.infoDisplay;\n    sb += " - " + InfoDisplay_to;\n    return sb;\n  };\n  VIS.QueryRestriction.prototype.getSQL = function (tableName) {\n    /// <summary>\n    /// Return sql construct for this restriction\n    /// </summary>\n    /// <param name="tableName">optional table name</param>\n    /// <returns>sql WHERE construct</returns>\n\n    if (this.directWhereClause != null) return this.directWhereClause;\n    //\n    var sb = "";\n\n    // opening parenthesis for case insensitive search\n    //if (Code instanceof String)\n    if (typeof this.code == "string" && isNaN(this.code) && this.code.toString().toUpper() != "NULLValue".toUpper()) {\n      sb += " UPPER( ";\n    }\n    if (tableName != null && tableName.length > 0) {\n      //\tAssumes - REPLACE(INITCAP(variable),\'s\',\'X\') or UPPER(variable)\n      var pos = this.columnName.lastIndexOf(\'(\') + 1; //\tincluding (\n      var end = this.columnName.indexOf(\')\');\n      //\tWe have a Function in the ColumnName\n      if (pos != -1 && end != -1) sb += this.columnName.substring(0, pos) + tableName + "." + this.columnName.substring(pos, pos + (end - pos)) + this.columnName.substring(end);else sb += tableName + "." + this.columnName;\n    } else {\n      sb += this.columnName;\n    }\n\n    // closing parenthesis for case insensitive search\n    if (typeof this.code == "string" && isNaN(this.code) && this.code.toString().toUpper() != "NULLValue".toUpper()) {\n      sb += " ) ";\n    }\n\n    //\tNULL Operator\n    if (this.code == null || "NULL".equals(this.code.toString().toUpper()) || "NULLValue".toUpper().equals(this.code.toString().toUpper())) {\n      if (this.operator.equals(VIS.Query.prototype.EQUAL)) sb += " IS NULL ";else sb += " IS NOT NULL ";\n    } else {\n      sb += this.operator + " ";\n      if (VIS.Query.prototype.IN.equals(this.operator) || VIS.Query.prototype.NOT_IN.equals(this.operator)) {\n        sb += "(";\n      }\n      if (this.code instanceof Date || this.code && isoDateRegx.test(this.code.toString())) {\n        //  endsWith(\'Z\') && this.code.toString().contains(\'T\')))) {\n        sb += VIS.DB.to_date(this.code, false);\n      } else if ("string" == typeof this.code) {\n        if (isNaN(this.code)) {\n          sb += " UPPER( ";\n          sb += VIS.DB.to_string(this.code.toString());\n          sb += " ) ";\n        } else {\n          sb += VIS.DB.to_string(this.code.toString());\n        }\n      } else sb += this.code;\n\n      //\tBetween\n      if (VIS.Query.prototype.BETWEEN.equals(this.operator)) {\n        //\tif (Code_to != null && InfoDisplay_to != null)\n        sb += " AND ";\n        if (this.code_to instanceof Date || this.code_to && isoDateRegx.test(this.code_to.toString())) {\n          //  endsWith(\'Z\') ||  this.code.toString().contains(\'T\')))) {\n          sb += VIS.DB.to_date(this.code_to, false);\n        } else if (typeof this.code_to == "string") {\n          sb += VIS.DB.to_string(this.code_to.toString());\n        } else sb += this.code_to;\n      } else if (VIS.Query.prototype.IN.equals(this.operator) || VIS.Query.prototype.NOT_IN.equals(this.operator)) sb += ")";\n    }\n    return sb;\n  };\n\n  /***************************************************************/\n  //     AccessSqlParser\n  /**************************************************************/\n\n  /**\r\n   *\tParse FROM in SQL WHERE clause\r\n   *\r\n   */\n  function AccessSqlParser(sql) {\n    this.log = VIS.Logging.VLogger.getVLogger("AccessSqlParser");\n    /**\tOriginal SQL\t\t\t*/\n    this.sqlOriginal;\n    /**\tSQL Selects\t\t\t*/\n    this.sql = [];\n    /**\tList of Arrays\t\t*/\n    this.tableInfo = [];\n    this.setSql(sql);\n  }\n  AccessSqlParser.prototype.FROM = " FROM ";\n  AccessSqlParser.prototype.FROM_LENGTH = AccessSqlParser.prototype.FROM.length;\n  ;\n  AccessSqlParser.prototype.WHERE = " WHERE ";\n  AccessSqlParser.prototype.ON = " ON ";\n  AccessSqlParser.prototype.setSql = function (sql) {\n    if (sql == null) throw new IllegalArgumentException("No SQL");\n    this.sqlOriginal = sql;\n    var index = this.sqlOriginal.indexOf("\\nFROM ");\n    if (index != -1) this.sqlOriginal = this.sqlOriginal.replace("\\nFROM ", this.FROM);\n    index = this.sqlOriginal.indexOf("\\nWHERE ");\n    if (index != -1) this.sqlOriginal = this.sqlOriginal.replace("\\nWHERE ", this.WHERE);\n    //\n    this.parse();\n  }; //\n  AccessSqlParser.prototype.getSql = function () {\n    return this.sqlOriginal;\n  };\n  AccessSqlParser.prototype.setSql = function (sql) {\n    if (sql == null) throw new IllegalArgumentException("No SQL");\n    this.sqlOriginal = sql;\n    var index = this.sqlOriginal.indexOf("\\nFROM ");\n    if (index != -1) this.sqlOriginal = this.sqlOriginal.replaceAll("\\nFROM ", this.FROM);\n    index = this.sqlOriginal.indexOf("\\nWHERE ");\n    if (index != -1) this.sqlOriginal = this.sqlOriginal.replaceAll("\\nWHERE ", this.WHERE);\n    //\n    this.parse();\n  };\n  AccessSqlParser.prototype.getSql = function () {\n    return this.sqlOriginal;\n  };\n  AccessSqlParser.prototype.parse = function () {\n    if (this.sqlOriginal == null || this.sqlOriginal.length == 0) throw new IllegalArgumentException("No SQL");\n    //\n    //\tif (CLogMgt.isLevelFinest())\n    //\t\tlog.fine(m_sqlOriginal);\n    this.getSelectStatements();\n    //\tanalyze each select\n    for (var i = 0; i < this.sql.length; i++) {\n      var info = this.getTableInfo(this.sql[i].trim());\n      this.tableInfo.push(info);\n    }\n    //\n    //if (CLogMgt.isLevelFinest())\n    //    log.fine(toString());\n    return this.tableInfo.length > 0;\n  };\n  AccessSqlParser.prototype.getSelectStatements = function () {\n    var sqlIn = [this.sqlOriginal];\n    var sqlOut = null;\n    try {\n      sqlOut = this.getSubSQL(sqlIn);\n    } catch (e) {\n      this.log.log(VIS.Logging.Level.SEVERE, this.sqlOriginal, e);\n      throw new IllegalArgumentException(this.sqlOriginal);\n    }\n    //\ta sub-query was found\n    while (sqlIn.length != sqlOut.length) {\n      sqlIn = sqlOut;\n      try {\n        sqlOut = this.getSubSQL(sqlIn);\n      } catch (e) {\n        this.log.log(VIS.Logging.Level.SEVERE, this.sqlOriginal, e);\n        throw new IllegalArgumentException(sqlOut.length + ": " + m_sqlOriginal);\n      }\n    }\n    this.sql = sqlOut;\n  };\n  AccessSqlParser.prototype.getSubSQL = function (sqlIn) {\n    var list = [];\n    var sql = "";\n    for (var i = 0; i < sqlIn.length; i++) {\n      sql = sqlIn[i];\n      var index = sql.indexOf("(SELECT ", 7);\n      while (index != -1) {\n        var endIndex = index + 1;\n        var parenthesisLevel = 0;\n        //\tsearch for the end of the sql\n        while (endIndex++ < sql.length) {\n          var c = sql.charAt(endIndex);\n          if (c == \')\') {\n            if (parenthesisLevel == 0) break;else parenthesisLevel--;\n          } else if (c == \'(\') parenthesisLevel++;\n        }\n        var subSQL = sql.substring(index, endIndex + 1);\n        list.push(subSQL);\n        //\tremove inner SQL (##)\n        sql = sql.substring(0, index + 1) + "##" + sql.substring(endIndex);\n        index = sql.indexOf("(SELECT ", 7);\n      }\n      list.push(sql); //\tlast SQL\n    }\n    //String[] retValue = new String[list.size()];\n    //list.toArray(retValue);\n    return list;\n  };\n  AccessSqlParser.prototype.getTableInfo = function (sql) {\n    if (isNaN(sql)) {\n      var list = [];\n      //\tremove ()\n      if (sql.startsWith("(") && sql.endsWith(")")) sql = sql.substring(1, sql.length - 1);\n      var fromIndex = sql.indexOf(this.FROM);\n      if (fromIndex != sql.lastIndexOf(this.FROM)) this.log.log(VIS.Logging.Level.FINE, "More than one FROM clause - " + sql);\n      while (fromIndex != -1) {\n        var from = sql.substring(fromIndex + this.FROM_LENGTH);\n        //Lakhwinder\n        //var index = from.lastIndexOf(this.WHERE);\t//\tend at where\n        var index = from.indexOf(this.WHERE); //\tend at where\n        if (index != -1) from = from.substring(0, index);\n        from = from.replaceAll(" AS ", " ");\n        from = from.replaceAll(" as ", " ");\n        from = from.replaceAll(" INNER JOIN ", ", ");\n        from = from.replaceAll(" LEFT OUTER JOIN ", ", ");\n        from = from.replaceAll(" RIGHT OUTER JOIN ", ", ");\n        from = from.replaceAll(" FULL JOIN ", ", ");\n        //\tRemove ON clause - assumes that there is no IN () in the clause\n        index = from.indexOf(this.ON);\n        while (index != -1) {\n          var indexClose = from.indexOf(\')\'); //\tdoes not catch "IN (1,2)" in ON\n          var indexNextOn = from.indexOf(this.ON, index + 4);\n          if (indexNextOn != -1) indexClose = from.lastIndexOf(\')\', indexNextOn);\n          if (indexClose != -1) from = from.substring(0, index) + from.substring(indexClose + 1);else {\n            this.log.log(VIS.Logging.Level.SEVERE, "Could not remove ON " + from);\n            break;\n          }\n          index = from.indexOf(this.ON);\n        }\n        //\t\t\tlog.fine("getTableInfo - " + from);\n        var tableST = new VIS.StringTokenizer(from, ",");\n        while (tableST.hasMoreTokens()) {\n          var tableString = tableST.nextToken().trim();\n          var synST = new VIS.StringTokenizer(tableString, " ");\n          var tableInfo = null;\n          if (synST.countTokens() > 1) tableInfo = new TableInfo(synST.nextToken(), synST.nextToken());else tableInfo = new TableInfo(tableString);\n          //\t\t\t\tlog.fine("getTableInfo -- " + tableInfo);\n          list.push(tableInfo);\n        }\n        //\n        sql = sql.substring(0, fromIndex);\n        fromIndex = sql.lastIndexOf(this.FROM);\n      }\n      //nfo[] retValue = new TableInfo[list.size()];\n      //list.toArray(retValue);\n      return list;\n    } else {\n      var index = sql;\n      if (index < 0 || index > this.tableInfo.length) return null;\n      var retValue = this.tableInfo[index];\n      return retValue;\n    }\n  }; //\tgetTableInfo\n\n  AccessSqlParser.prototype.getSqlStatement = function (index) {\n    if (index < 0 || index > this.sql.length) return null;\n    return this.sql[index];\n  };\n  AccessSqlParser.prototype.getNoSqlStatments = function () {\n    if (this.sql == null) return 0;\n    return this.sql.length;\n  }; //\tgetNoSqlStatments\n  AccessSqlParser.prototype.getMainSqlIndex = function () {\n    if (this.sql == null) return -1;else if (this.sql.length == 1) return 0;\n    for (var i = this.sql.length - 1; i >= 0; i--) {\n      if (this.sql[i].charAt(0) != \'(\') return i;\n    }\n    return -1;\n  };\n  AccessSqlParser.prototype.getMainSql = function () {\n    if (this.sql == null) return this.sqlOriginal;\n    if (this.sql.length == 1) return this.sql[0];\n    for (var i = this.sql.length - 1; i >= 0; i--) {\n      if (this.sql[i].charAt(0) != \'(\') return this.sql[i];\n    }\n    return "";\n  }; //\tgetMainSql\n  AccessSqlParser.prototype.size = function () {\n    return this.tableInfo.length;\n  };\n\n  /****************** END  **************************************/\n\n  /*************************************************************\r\n                  TableInfo\r\n  **************************************************************/\n  /**\r\n  * \tTable Info VO\r\n  */\n  function TableInfo(tableName, synonym) {\n    this.tableName = tableName;\n    this.synonym = synonym;\n  }\n  ;\n  TableInfo.prototype.getSynonym = function () {\n    if (this.synonym == null) return "";\n    return this.synonym;\n  };\n  TableInfo.prototype.getTableName = function () {\n    return this.tableName;\n  };\n\n  /******************* END *************************************/\n\n  VIS.TableInfo = TableInfo;\n  VIS.AccessSqlParser = AccessSqlParser;\n\n  /**\r\n  *\tZoom Target identifier.\r\n  *  Used in Zoom across (Where used) and Zoom into\r\n  *\t\r\n  *  @author Jorg Janke\r\n  *  @version $Id: ZoomTarget.java 8753 2010-05-12 17:34:49Z nnayak $\r\n  */\n  VIS.ZoomTarget = {\n    log: VIS.Logging.VLogger.getVLogger("VIS.ZoomTarget"),\n    /**\r\n    * \tGet the Zoom Into Target for a table.\r\n    *  \r\n    *  @param targetTableName for Target Table for zoom\r\n    *  @param curWindow_ID Window from where zoom is invoked\r\n    * \t@param targetWhereClause Where Clause in the format "Record_ID=<value>"\r\n    *  @param isSOTrx Sales contex of window from where zoom is invoked\r\n    */\n    getZoomAD_Window_ID: function (targetTableName, curWindow_ID, targetWhereClause, isSOTrx) {\n      var zoomWindow_ID = 0;\n      var PO_zoomWindow_ID = 0;\n\n      // Hard code for zooming to Production Resource Window\t\t\n      if (targetTableName.equals("M_Product")) {\n        //var ProductType = null;\n        //var ResourceGroup = null;\n        //if(targetWhereClause!=null && !targetWhereClause.equals(""))\n        //{\n        //    var sql1 = " SELECT ProductType, ResourceGroup FROM M_Product "\n        //                +" WHERE " + targetWhereClause;\n\n        //    var rs = null;\n\n        //    try\n        //    {\n        //        rs = VIS.DB.executeDataReader(sql1);\n        //        if (rs.read())\n        //        {\n        //            ProductType = rs.getString(0);\n        //            ResourceGroup = rs.getString(1);\n        //        }\n        //    }\n        //    catch (e) {\n        //        //log.log(Level.SEVERE, sql1, e);\n        //    }\n        //    finally {\n        //        if(rs != null)\n        //            rs.dispose();\n        //    }\n\n        //if(ProductType != null && ResourceGroup != null &&\n        //        ProductType.equals(X_M_Product.PRODUCTTYPE_Resource)&& \n        //        (ResourceGroup.equals(X_M_Product.RESOURCEGROUP_Person) ||\n        //                ResourceGroup.equals(X_M_Product.RESOURCEGROUP_Equipment)))\n        //{\n        //    var windowID = 0;\n        //    var sql11 = " SELECT AD_Window_ID FROM AD_Window WHERE NAME LIKE \'Production Resource\'";\n        //    try\n        //    {\n        //        pstmt = DB.prepareStatement(sql11, (Trx) null);\n        //        rs = pstmt.executeQuery();\n        //        while(rs.next())\n        //        {\n        //            windowID= rs.getInt(1);\n        //        }Query\n        //    }\n        //    catch (SQLException e) {\n        //        log.log(Level.SEVERE, sql11, e);\n        //    }\n        //    finally {\n        //        DB.closeResultSet(rs);\n        //    DB.closeStatement(pstmt);\n        //}\n\n        // if(windowID !=0)\n        //  return windowID;\n        // }\n        //}\n      }\n\n      // END hard code for Zooming into Production resource.\n\n      // Find windows where the first tab is based on the table\n      var sql = "VIS_78";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@targetTableName", targetTableName);\n      var dr = null;\n      try {\n        var index = 1;\n        dr = executeReader(sql, param);\n        if (dr.read()) {\n          zoomWindow_ID = dr.getInt(0);\n          PO_zoomWindow_ID = dr.getInt(1);\n        }\n      } catch (e) {\n        this.log.log(VIS.Logging.Level.SEVERE, sql, e);\n      } finally {\n        if (dr != null) dr.dispose();\n        dr = null;\n      }\n      if (PO_zoomWindow_ID == 0) return zoomWindow_ID;\n      if (PO_zoomWindow_ID != 0 && zoomWindow_ID != 0 && targetWhereClause != null && targetWhereClause.length != 0) {\n        var ParentTable = null;\n        var ind = targetTableName.indexOf("Line");\n        if (ind != -1) ParentTable = targetTableName.substring(0, ind);\n        if (ParentTable != null) {\n          //var sql3 = "VIS_79";\n\n          //var param = [];\n          //param[0] = new VIS.DB.SqlParam("@ParentTable", ParentTable);\n          //param[1] = new VIS.DB.SqlParam("@targetTableName", targetTableName);\n          //param[2] = new VIS.DB.SqlParam("@targetWhereClause", targetWhereClause);\n          //param[3] = new VIS.DB.SqlParam("@andcondition", "p." + ParentTable + "_ID = c." + ParentTable+"_ID");\n          // param[4] = new VIS.DB.SqlParam("@ParentTable2", ParentTable+"_ID");\n\n          isSOTrx = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Form/GetZoomIsSOTrx", {\n            "parentTable": ParentTable,\n            "targetTableName": targetTableName,\n            "targetWhereClause": VIS.secureEngine.encrypt(targetWhereClause)\n          });\n\n          // dr = executeReader(sql3, param);                                                       \n\n          //if (dr.read())\n          // isSOTrx = dr.getString(0).equals("Y");\n          //}\n          //catch (e) {\n          //    this.log(VIS.Logging.Level.SEVERE, sql3.toString(), e);\n          //}\n          //finally {\n          //    if (dr != null)\n          //        dr.dispose();\n          //    dr = null;\n          //}\n        }\n      }\n      var AD_Window_ID = 0;\n      if (targetWhereClause != null && targetWhereClause.length != 0) {\n        var zoomList = [];\n        zoomList = this.getZoomTargets(targetTableName, curWindow_ID, targetWhereClause);\n        if (zoomList != null && zoomList.length > 0) AD_Window_ID = zoomList[0].Key;\n      }\n      if (AD_Window_ID != 0) return AD_Window_ID;\n      if (isSOTrx) return zoomWindow_ID;\n      return PO_zoomWindow_ID;\n    },\n    /**\r\n    *  Parse String and add columnNames to the list.\r\n    *  String should be of the format ColumnName=<Value> AND ColumnName2=<Value2>\r\n    *  @param list list to be added to\r\n    *  @param parseString string to parse for variables\r\n    */\n    parseColumns: function (list, parseString) {\n      if (parseString == null || parseString.length == 0) return;\n\n      //\tlog.fine(parseString);\n      var s = parseString;\n\n      // Currently parsing algorithm does not handle parenthesis, IN clause or EXISTS clause\n      if (s.contains(" EXISTS ") || s.contains(" IN ") || s.contains("(") || s.contains(")")) return;\n\n      //  while we have columns\n      while (s.indexOf("=") != -1) {\n        var endIndex = s.indexOf("=");\n        var clause = s.substring(0, endIndex);\n        clause = clause.trim();\n        var beginIndex = clause.lastIndexOf(\' \', clause.length);\n        var variable = clause.substring(beginIndex + 1);\n        if (variable.indexOf(".") != -1) {\n          beginIndex = variable.indexOf(".") + 1;\n          variable = variable.substring(beginIndex, variable.length);\n        }\n        if (list.indexOf(variable) < 0) list.push(variable);\n        s = s.substring(endIndex + 1);\n      }\n    },\n    //  parseDepends\n\n    /**\r\n     *  Evaluate where clause\r\n     *  @param columnValues columns with the values\r\n     *  @param whereClause where clause\r\n     *  @return true if where clause evaluates to true\r\n     */\n    evaluateWhereClause: function (columnValues, whereClause) {\n      if (whereClause == null || whereClause.length == 0) return true;\n      var s = whereClause;\n      var result = true;\n\n      // Currently parsing algorithm does not handle parenthesis, IN clause or EXISTS clause\n      if (s.contains(" EXISTS ") || s.contains(" IN ") || s.contains("(") || s.contains(")")) return false;\n\n      //  while we have variables\n      while (s.indexOf("=") != -1) {\n        var endIndex = s.indexOf("=");\n        var beginIndex = s.lastIndexOf(\' \', endIndex);\n        var variable = s.substring(beginIndex + 1, endIndex);\n        var operand1 = "";\n        var operand2 = "";\n        var operator = "=";\n        if (variable.indexOf(".") != -1) {\n          beginIndex = variable.indexOf(".") + 1;\n          variable = variable.substring(beginIndex, variable.length);\n        }\n        for (var i = 0; i < columnValues.length; i++) {\n          if (variable.equals(columnValues[i].Name)) {\n            operand1 = columnValues[i].Value;\n            break;\n          }\n        }\n        s = s.substring(endIndex + 1);\n        beginIndex = 0;\n        endIndex = s.indexOf(\' \');\n        if (endIndex == -1) operand2 = s.substring(beginIndex);else operand2 = s.substring(beginIndex, endIndex);\n\n        /* log.fine("operand1:"+operand1+ \r\n                " operator:"+ operator +\r\n                " operand2:"+operand2); */\n        if (!VIS.Evaluator.evaluateLogicTuple(operand1, operator, operand2)) {\n          result = false;\n          break;\n        }\n      }\n      return result;\n    },\n    /*  Get the Zoom Across Targets for a table.\r\n     *  \r\n     *  @param targetTableName for Target Table for zoom\r\n     *  @param curWindow_ID Window from where zoom is invoked\r\n     *  @param targetWhereClause Where Clause in the format "WHERE Record_ID=?"\r\n     *  @param params[] parameter to whereClause. Should be the Record_ID\r\n     *\r\n     */\n    getZoomTargets: function (targetTableName, curWindow_ID, targetWhereClause, params) {\n      if (arguments.length == 4) {\n        if (params.length != 1) return null;\n        var record_ID = params[0];\n        var whereClause = targetWhereClause.replace("?", record_ID.toString());\n        whereClause = whereClause.replace("WHERE ", " ");\n        this.log.fine("WhereClause : " + whereClause);\n        targetWhereClause = whereClause;\n      }\n\n      /**\tThe Option List\t\t\t\t\t*/\n      var zoomList = [];\n      var windowList = [];\n      var columns = [];\n      var zoom_Window_ID = 0;\n      var PO_Window_ID = 0;\n      var zoom_WindowName = "";\n      var whereClause = "";\n      var windowFound = false;\n\n      /** Start Hard code for adding Maintain cost windows in the zoom across for product and work center */\n      var WorkCenterCostWindowName = null;\n      var WorkCenterWindowID = 0;\n      var WorkCenterCostWindowID = 0;\n      var ProductionResourceWindowID = 0;\n      var sql11 = "VIS_80";\n      var dr = null;\n      try {\n        dr = executeReader(sql11);\n        while (dr.read()) {\n          var windowID = dr.getInt(0);\n          var windowName = dr.getString(1);\n          if (windowName.equals("Work Center")) {\n            WorkCenterWindowID = windowID;\n          } else if (windowName.equals("Work Center Costs")) {\n            WorkCenterCostWindowID = windowID;\n            WorkCenterCostWindowName = windowName;\n          } else if (windowName.equals("Production Resource")) {\n            ProductionResourceWindowID = windowID;\n          }\n        }\n      } catch (e) {\n        this.log.log(VIS.Logging.Level.SEVERE, sql11, e);\n      } finally {\n        if (dr != null) dr.dispose();\n        dr = null;\n      }\n      if (targetWhereClause != \'\' && targetWhereClause) {\n        targetWhereClause = VIS.secureEngine.encrypt(targetWhereClause);\n      }\n      $.ajax({\n        //type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Form/GetZoomWindow",\n        data: {\n          targetTableName: targetTableName,\n          curWindow_ID: curWindow_ID,\n          "targetWhereClause": targetWhereClause\n        },\n        success: function (data) {\n          zoomList = JSON.parse(data);\n        }\n      });\n      return zoomList;\n    }\n  };\n\n  /** Cache */\n\n  function CacheMgt() {\n    /**\tList of Instances\t\t\t\t*/\n    var m_instances = [];\n    var m_tableNames = [];\n    var log = VIS.Logging.VLogger.getVLogger("CacheMgt");\n    function get() {\n      if (s_cache == null) {\n        //    s_cache = \n      }\n    }\n    function register(instance) {\n      if (instance == null) return false;\n      var tableName = instance.getTableName();\n      m_tableNames.push(tableName);\n      m_instances.push(instance);\n      return true;\n    }\n\n    /**\r\n    * \tUn-Register Cache Instance\r\n    *\t@param instance Cache\r\n    *\t@return true if removed\r\n    */\n    function unregister(instance) {\n      if (instance == null) return false;\n      var found = false;\n      //\tCould be included multiple times\n      for (var i = m_instances.lenght - 1; i >= 0; i--) {\n        var stored = m_instances[i];\n        if (instance === stored) {\n          m_instances.splice(1, 1); // .remove(i);\n          found = true;\n        }\n      }\n      return found;\n    } //\tunregister\n\n    function reset() {\n      if (arguments.length == 2) return reset2(arguments[0], arguments[1]);else if (arguments.length == 1) return reset2(arguments[0]);\n      var counter = 0;\n      var total = 0;\n      for (var i = 0; i < m_instances.length; i++) {\n        var stored = m_instances.get(i);\n        if (stored != null && stored.lenght > 0) {\n          log.info(stored.toString());\n          total += stored.reset();\n          counter++;\n        }\n      }\n      //MRole.reset(0);\n      if (counter > 0) log.info("#" + counter + " (" + total + ")");\n      return total;\n    } //\treset\n\n    function reset2(tableName, Record_ID) {\n      if (tableName == null || tableName.length() == 0) return reset();\n      if (!Record_ID) Record_ID = 0;\n\n      //\tif (tableName.endsWith("Set"))\n      //\t\ttableName = tableName.substring(0, tableName.length()-3);\n      if (m_tableNames.indexOf(tableName) < 0) return 0;\n      if (tableName.equals("AD_Role")) {\n        //  MRole.reset(Record_ID);\n      }\n      //\n      var counter = 0;\n      var total = 0;\n      for (var i = 0; i < m_instances.length; i++) {\n        var stored = m_instances[i];\n        if (stored == null) continue;\n        var ii = stored.reset(tableName, Record_ID);\n        if (ii >= 0) counter++;\n        if (ii > 0) total += ii;\n      }\n      if (counter > 0) log.fine(tableName + ": #" + counter + " (" + total + ")");\n      //\tUpdate Server\n      // if (DB.isRemoteObjects())\n      // {\n      //Server server = CConnection.get().getServer();\n      //try\n      //{\n      //    if (server != null)\n      //    {\t//\tSee ServerBean\n      //        int serverTotal = server.cacheReset(tableName, Record_ID); \n      //        if (CLogMgt.isLevelFinest())\n      //            log.fine("Server => " + serverTotal);\n      //    }\n      //}\n      //catch (RemoteException ex)\n      //{\n      //    log.log(Level.SEVERE, "AppsServer error", ex);\n      //}\n      // }\n      return total;\n    } //\treset\n\n    var c = {\n      register: register,\n      reset: reset,\n      unregister: unregister\n    };\n    return c;\n  }\n  ;\n  function CCache(tableName, initialCapacity, expireMinutes, resetAll, type, tableName2) {\n    /** The Cache\t\t**/\n    this.m_cacheK = [];\n    this.m_cacheV = [];\n    /**\tTable Name\t\t\t\t\t*/\n    this.m_tableName = tableName;\n    /** Reset All Records\t\t\t*/\n    this.m_resetAll = resetAll ? resetAll : false;\n    /**\tAlternative Table Name\t\t*/\n    this.m_tableName2 = tableName2;\n    this.setExpireMinutes(expireMinutes);\n    VIS.CacheMgt.register(this);\n  }\n  ;\n  CCache.prototype.setExpireMinutes = function (expireMinutes) {\n    if (expireMinutes > 0) {\n      this.m_expire = expireMinutes;\n      var addMS = 60000 * expireMinutes;\n      this.m_timeExp = VIS.Env.currentTimeMillis() + addMS;\n    } else {\n      this.m_expire = 0;\n      this.m_timeExp = 0;\n    }\n  };\n  CCache.prototype.expire = function () {\n    if (this.m_expire != 0 && this.m_timeExp < VIS.Env.currentTimeMillis()) {\n      //\tSystem.out.println ("------------ Expired: " + GetName() + " --------------------");\n      this.reset();\n    }\n  };\n  CCache.prototype.reset = function () {\n    if (arguments.length == 2) return this.reset2(arguments[0], arguments[1]);else if (arguments.length == 1) return this.reset2(arguments[0]);\n    var no = this.m_cacheK.length;\n    //\tClear\n    this.clear();\n    if (this.m_expire != 0) {\n      var addMS = 60000 * this.m_expire;\n      this.m_timeExp = VIS.Env.currentTimeMillis() + addMS;\n    }\n    return no;\n  }; //\n\n  CCache.prototype.reset2 = function (tableName, record_ID) {\n    if (this.tableName == null) return -1;\n    var exact = tableName === this.m_tableName || tableName === this.m_tableName2;\n    if (exact || this.m_tableName2.startsWith(tableName))\n      //\tinclude Child tables\n      {\n        if (record_ID == 0 || this.m_resetAll) return reset();\n        return this.remove(record_ID);\n      }\n    return -1;\n  }; //\treset\n\n  CCache.prototype.remove = function (key) {\n    //\t might be wrong key\n    var index = this.m_cacheK.indexOf(key);\n    if (index > -1) {\n      this.m_cacheK.splice(index, 1);\n      this.m_cacheV.splice(index, 1);\n      return 1;\n    }\n    return 0;\n  };\n  CCache.prototype.get = function (key) {\n    this.expire();\n    var index = this.m_cacheK.indexOf(key);\n    if (index > -1) return this.m_cacheV[index];\n    return null;\n  }; //\tget\n\n  CCache.prototype.contains = function (key) {\n    var index = this.m_cacheK.indexOf(key);\n    if (index > -1) return true;\n    return false;\n  };\n\n  /**\r\n   * \tPut value\r\n   *\t@param key key\r\n   *\t@param value value\r\n   *\t@return previous value\r\n   */\n  CCache.prototype.add = function (key, value) {\n    this.expire();\n    if (typeof value === "function" || $.isFunction(value)) {\n      var ss = "";\n    }\n    var index = this.m_cacheK.indexOf(key);\n    if (index < 0) {\n      this.m_cacheK.push(key);\n      this.m_cacheV.push(value);\n    } else this.m_cacheV[index] = value;\n  }; // put\n\n  CCache.prototype.clear = function () {\n    this.m_cacheK.length = 0;\n    this.m_cacheV.length = 0;\n  };\n  CCache.prototype.size = function () {\n    this.expire();\n    return this.m_cacheV.length;\n  }; //\ts\n\n  /**\r\n  * \tGet Table Name\r\n  *\t@return name\r\n  */\n  CCache.prototype.getTableName = function () {\n    return this.m_tableName;\n  }; //\n\n  VIS.CacheMgt = CacheMgt();\n  VIS.CCache = CCache;\n})(jQuery, VIS);\n\n/**\r\n * Tokenizer/jQuery.Tokenizer\r\n * Copyright (c) 2007-2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\r\n * Dual licensed under MIT and GPL.\r\n * Date: 2/29/2008\r\n *\r\n * @projectDescription JS Class to generate tokens from strings.\r\n * http://flesler.blogspot.com/2008/03/string-tokenizer-for-javascript.html\r\n *\r\n * @author Ariel Flesler\r\n * @version 1.0.1\r\n */\n;\n(function (VIS) {\n  var Tokenizer = function (str, tokenizers, returnDelims, doBuild) {\n    this.tokenizers = tokenizers.splice ? tokenizers : tokenizers.split("");\n    if (doBuild) {\n      this.doBuild = doBuild;\n    }\n    //this.parse(str);\n    this.src = str;\n    this.ended = false;\n    this.tokens = [];\n    this.returnDelim = returnDelims;\n    this.curIndex = 0;\n    this.parse();\n  };\n  Tokenizer.prototype = {\n    parse: function () {\n      do this.next(); while (!this.ended);\n      return this.tokens;\n    },\n    build: function (src, real) {\n      if (src) {\n        if (!this.returnDelim && this.tokenizers.indexOf(src) > -1) {\n          return;\n        }\n        this.tokens.push(!this.doBuild ? src : this.doBuild(src, real, this.tkn));\n      }\n    },\n    next: function () {\n      var self = this,\n        plain;\n      self.findMin();\n      plain = self.src.slice(0, self.min);\n      self.build(plain, false);\n      self.src = self.src.slice(self.min).replace(self.tkn, function (all) {\n        self.build(all, true);\n        return \'\';\n      });\n      if (!self.src) self.ended = true;\n    },\n    findMin: function () {\n      var self = this,\n        i = 0,\n        tkn,\n        idx;\n      self.min = -1;\n      self.tkn = \'\';\n      while ((tkn = self.tokenizers[i++]) !== undefined) {\n        idx = self.src[tkn.test ? \'search\' : \'indexOf\'](tkn);\n        if (idx != -1 && (self.min == -1 || idx < self.min)) {\n          self.tkn = tkn;\n          self.min = idx;\n        }\n      }\n      if (self.min == -1) self.min = self.src.length;\n    },\n    countTokens: function () {\n      return this.tokens.length;\n    },\n    nextToken: function () {\n      if (this.hasMoreTokens()) {\n        return this.tokens[this.curIndex++];\n      }\n      return null;\n    },\n    hasMoreTokens: function () {\n      if (this.curIndex < this.tokens.length) {\n        return true;\n      }\n      return false;\n    },\n    reset: function () {\n      this.curIndex = -1;\n    }\n  };\n\n  //if (window.jQuery) {\n  //  console.log("Jquery");\n  //   jQuery.tokenizer = Tokenizer;//export as jquery plugin\n  //   Tokenizer.fn = Tokenizer.prototype;\n  // } else {\n  //    console.log("Window");\n  //   window.Tokenizer = Tokenizer;//export as standalone class\n  // }\n  VIS.StringTokenizer = Tokenizer;\n})(VIS);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/classes.js?')},"./Areas/VIS/Scripts/app/context.js":()=>{eval('/**\r\n *\tTyped Context\r\n *  - has logined data and app setting\r\n *\r\n */\n\nVIS.context.m_map = {}; //window\'s context\n\n;\nVIS.context.getContext = function (context) {\n  if (context == null) throw new ArgumentException("Require Context");\n  if (arguments.length > 2) {\n    if (typeof arguments[1] == "number") {\n      return this.getWindowTabContext(arguments[0], arguments[1], arguments[2]);\n    }\n    return this.getWindowContext(arguments[0], arguments[1], arguments[2]);\n  } else if (arguments.length == 2) {\n    return this.getWindowContext(arguments[0], arguments[1]);\n  }\n  var value = VIS.context.ctx[context];\n  //m_map[context];\n  if (!value) {\n    if (context == "#AD_User_ID") return VIS.context.getContext("#" + context);\n    if (context == "#AD_User_Name") return VIS.context.getContext("#" + context);\n    return "";\n  }\n  return value;\n};\nVIS.context.getWindowContext = function (windowNo, context, onlyWindow, val2) {\n  if (context == null) throw new ArgumentException("Require Context");\n  if (typeof arguments[1] == "number" && arguments.length > 2) {\n    return VIS.context.getTabRecordContext(arguments[0], arguments[1], arguments[2], val2);\n  }\n  var tabNo = "";\n  if (typeof context == "number") {\n    tabNo = "-" + context;\n    context = onlyWindow;\n    onlyWindow = val2;\n  }\n  var key = windowNo + tabNo + "|" + context;\n  var tabNo = "";\n  if (typeof context == "number") {\n    tabNo = "-" + context;\n    context = onlyWindow;\n    onlyWindow = val2;\n  }\n  var key = windowNo + tabNo + "|" + context;\n  var value = "";\n  if (this.m_map[windowNo]) {\n    value = this.m_map[windowNo][key];\n  }\n  if (!value || value == "") {\n    //\tExplicit Base Values\n    if (context.startsWith("#") || context.startsWith("$")) return VIS.context.getContext(context);\n    if (onlyWindow)\n      //\tno Default values\n      return "";\n    return VIS.context.getContext("#" + context);\n  }\n  return value;\n};\nVIS.context.getWindowTabContext = function (windowNo, tabNo, context) {\n  if (context == null) throw new ArgumentException("Require Context");\n  //check windowNo exist in map or not\n  var value = "";\n  if (this.m_map[windowNo]) {\n    value = this.m_map[windowNo][windowNo + "|" + tabNo + "|" + context];\n  }\n  if (VIS.EnvConstants.TAB_INFO == tabNo) return value != null ? value : "";\n\n  //m_map.TryGetValue(windowNo + "|" + tabNo + "|" + context,out value);\n  if (!value || value == "") return VIS.context.getWindowContext(windowNo, context, false);\n  return value;\n};\nVIS.context.getTabRecordContext = function (windowNo, tabNo, context, onlyWindow) {\n  if (context == null) throw new ArgumentException("Require Context");\n  //check windowNo exist in map or not\n  var value = "";\n  if (this.m_map[windowNo]) {\n    value = this.m_map[windowNo][windowNo + "-" + tabNo + "|" + context];\n  }\n  //m_map.TryGetValue(windowNo + "|" + tabNo + "|" + context,out value);\n  if (!value || value == "") return VIS.context.getWindowContext(windowNo, context, onlyWindow);\n  return value;\n};\nVIS.context.setTabRecordContext = function (windowNo, tabNo, context, value) {\n  if (context == null) {\n    return;\n  }\n  if (!this.m_map[windowNo]) this.m_map[windowNo] = {};\n  if (value == null || value === "") this.m_map[windowNo][windowNo + \'-\' + tabNo + "|" + context] = null;else this.m_map[windowNo][windowNo + \'-\' + tabNo + "|" + context] = value;\n};\nVIS.context.setContext = function (key, value) {\n  if (arguments.length == 4) {\n    this.setWindowTabContext(arguments[0], arguments[1], arguments[2], arguments[3]);\n  } else if (arguments.length == 3) {\n    this.setWindowContext(arguments[0], arguments[1], arguments[2]);\n  } else {\n    VIS.context.ctx[key] = value;\n  }\n  return key;\n};\nVIS.context.setWindowContext = function (windowNo, context, value, val2) {\n  if (context == null) {\n    return;\n  }\n  if (!this.m_map[windowNo]) this.m_map[windowNo] = {};\n  var tabNo = "";\n  if (typeof context == "number") {\n    tabNo = "-" + context;\n    context = value;\n    value = val2;\n  }\n  if (value == null || value === "") this.m_map[windowNo][windowNo + tabNo + "|" + context] = null;else this.m_map[windowNo][windowNo + tabNo + "|" + context] = value;\n};\nVIS.context.setWindowTabContext = function (windowNo, tabNo, context, value) {\n  if (context == null) return;\n  if (!this.m_map[windowNo]) this.m_map[windowNo] = {};\n  if (value == null || String(value).equals("")) this.m_map[windowNo][windowNo + "|" + tabNo + "|" + context] = null;\n  //\tm_map.remove(WindowNo+"|"+TabNo+"|"+context);\n  else this.m_map[windowNo][windowNo + "|" + tabNo + "|" + context] = value;\n};\n\n/**\r\n\t * Clean up context for Window Tab (i.e. delete it).\r\n\t * Please note that this method is not clearing the tab info context (i.e. _TabInfo).\r\n\t * @param ctx context\r\n\t * @param WindowNo window\r\n\t * @param TabNo tab\r\n\t */\nVIS.context.clearTabContext = function (windowNo, tabNo) {\n  var wCtx = this.m_map[windowNo];\n  for (var prop in wCtx) {\n    if (prop.startsWith(windowNo + "-" + tabNo + "|")) delete wCtx[prop];\n  }\n};\nVIS.context.getAD_User_ID = function () {\n  return VIS.context.getContextAsInt("##AD_User_ID");\n};\nVIS.context.getAD_User_Name = function () {\n  return this.getContext("#AD_User_Name");\n};\nVIS.context.getAD_Role_ID = function () {\n  return this.getContextAsInt("#AD_Role_ID");\n};\nVIS.context.getAD_Role_Name = function () {\n  return this.getContext("#AD_Role_Name");\n};\nVIS.context.getAD_Client_ID = function () {\n  return VIS.context.getContextAsInt("#AD_Client_ID");\n};\nVIS.context.getAD_Client_Name = function () {\n  return this.getContext("#AD_Client_Name");\n};\nVIS.context.getAD_Org_ID = function () {\n  return VIS.context.getContextAsInt("#AD_Org_ID");\n};\nVIS.context.getAD_Language = function () {\n  return VIS.context.getContext(\'#AD_Language\');\n};\nVIS.context.setAutoCommit = function (windowNo, autoCommit) {\n  VIS.context.setWindowContext(windowNo, "AutoCommit", autoCommit ? "Y" : "N");\n};\nVIS.context.setAutoNew = function (windowNo, autoNew) {\n  VIS.context.setWindowContext(windowNo, "AutoNew", autoNew ? "Y" : "N");\n};\nVIS.context.isAutoNew = function () {\n  var s = VIS.context.getContext("AutoNew");\n  if (s != null && s === "Y") return true;\n  return false;\n};\nVIS.context.getStdPrecision = function () {\n  return VIS.context.getContext(\'#StdPrecision\');\n};\nVIS.context.setStdPrecision = function () {\n  return VIS.context.getContext(\'#StdPrecision\');\n};\n\n/**\r\n\t *\tIs Window Auto New Record (if not set use default)\r\n\t *  @param WindowNo window no\r\n\t *  @return true if auto new record\r\n\t */\nVIS.context.getIsAutoNew = function (WindowNo) {\n  var s = this.getWindowContext(WindowNo, "AutoNew", false);\n  if (s != null && s != "") {\n    if (s.equals("Y")) return true;else return false;\n  }\n  return this.isAutoNew();\n}; //\ti\n\nVIS.context.isAutoCommit = function () {\n  var s = VIS.context.getContext("AutoCommit");\n  if (s != null && s === "Y") return true;\n  return false;\n};\nVIS.context.setContextOfWindow = function (ctxArray, winodowNo) {\n  if (ctxArray && winodowNo) {\n    for (prop in ctxArray) {\n      VIS.context.setWindowContext(winodowNo, prop, ctxArray[prop]);\n    }\n    ctxArray = null;\n  }\n};\n\n/**\r\n * \r\n * @param {any} windowNo\r\n * @param {any} context\r\n * @param {any} onlyWindow\r\n */\nVIS.context.getContextAsInt = function (windowNo, context, onlyWindow) {\n  var s = "";\n  if (arguments.length > 1 && typeof arguments[1] == "number") s = this.getWindowTabContext(arguments[0], arguments[1], arguments[2]);else if (arguments.length > 1 && typeof arguments[0] == "number") s = this.getWindowContext(windowNo, context, onlyWindow);else {\n    s = this.getContext(arguments[0]);\n  }\n  if (s.length == 0) return 0;\n  //\n  try {\n    return parseInt(s);\n  } catch (e) {}\n  return 0;\n}; //\n\n/**\r\n *\tGet Context and convert it to an integer (0 if error)\r\n *  @param windowNo window no\r\n *  @param tabNo tab no\r\n * \t@param context context key\r\n *  @return value or 0\r\n//\t */\n//VIS.context.getContextAsInt = function (windowNo, TabNo, context) {\n//    var s = this.getContext(windowNo, TabNo, context);\n//    if (!s || s == "" || isNaN(s))\n//        return 0;\n//    return parseInt(s);\n//};\n\nVIS.context.getWindowContextAsInt = function (windowNo, context, onlyWindow) {\n  var s = this.getWindowContext(windowNo, context, onlyWindow);\n  if (s.length == 0) return 0;\n  try {\n    return parseInt(s);\n  } catch (e) {}\n  return 0;\n};\nVIS.context.getContextAsTime = function (windowNo, context) {\n  var s = this.getContext(windowNo, context, false);\n  if (s == null || s.length == 0) {\n    return Date.now().getTime();\n  }\n  //try\n  //{\n\n  return new Date(s).getTime();\n  //}\n  //catch(e)\n  //{\n  //    //log.Warning("(" + context + ") = " + s + " - " + e.Message);\n  //}\n  //// return Convert.ToInt64(DateTime.Now); \n  //return CommonFunctions.CurrentTimeMillis();// Convert.ToInt64(DateTime.Now);// System.currentTimeMillis();\n};\nVIS.context.getShowClientOrg = function () {\n  return this.getContextAsInt("#ClientOrgLevel");\n};\n\n/**\r\n *\tRemove context for Window (i.e. delete it)\r\n *  @param WindowNo window\r\n */\nVIS.context.removeWindow = function (windowNo) {\n  var keys = [];\n  //var ctx = this.m_map[windowNo];\n  this.m_map[windowNo] = null;\n  //for (var prop in ctx) {\n  //    if (prop.startsWith(windowNo + "|")) {\n  //        keys.push(prop);\n  //    }\n  //}\n  //var key;\n  //while (keys.length > 0) {\n  //    key = keys.pop();\n  //    ctx[key] = null;\n  delete this.m_map[windowNo];\n  key = null;\n  //}\n};\nVIS.context.getWindowCtx = function (windowNo) {\n  var ctx = {};\n  $.extend(ctx, this.ctx);\n  if (windowNo) $.extend(ctx, this.m_map[windowNo]);\n  return ctx;\n};\nVIS.context.getEntireCtx = function () {\n  var ctx = {};\n  $.extend(ctx, this.ctx);\n  for (var property in this.m_map) {\n    if (this.m_map.hasOwnProperty(property)) {\n      $.extend(ctx, this.m_map[property]);\n    }\n  }\n  return ctx;\n};\n\n/**\r\n\t *\tIs Sales Order Trx \r\n\t *  @param WindowNo window no\r\n\t *  @return true if SO (default)\r\n\t */\nVIS.context.isSOTrx = function (WindowNo) {\n  var s = false;\n  if (WindowNo) {\n    s = this.getWindowContext(WindowNo, "IsSOTrx", true);\n  } else {\n    s = this.getContext("IsSOTrx");\n  }\n  if (s != null && s.equals("Y")) return true;\n  return false;\n}; //\n\nVIS.context.setIsSOTrx = function (windowNo, isSOTrx) {\n  if (arguments.length == 2) this.setContext(arguments[0], "IsSOTrx", arguments[1] ? "Y" : "N");else this.setContext("IsSOTrx", arguments[0] ? "Y" : "N");\n};\nVIS.context.getIsUseCrystalReportViewer = function () {\n  return VIS.context.getContext("#USE_CRYSTAL_REPORT_VIEWER") == "Y";\n};\n\n// VIS0008 added for bulk location name reload\nVIS.context.getLocationBulkReload = function () {\n  return VIS.context.getContext(\'#LOCATION_NAME_BULK_REQUEST\') == "Y";\n};\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/context.js?')},"./Areas/VIS/Scripts/app/controller.js":()=>{eval('/**\r\n * AD Window Model classes\r\n   Include \r\n  - GridWindow\r\n  - GridTab\r\n     - GridTable\r\n  - GridField\r\n */\n\n;\n(function (VIS, $) {\n  var Level = VIS.Logging.Level; /* Logger Level Object*/\n\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n  var dSetUrl = baseUrl + "Form/JDataSet";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n\n  //executeDataSet\n  var executeDataSet = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dataSet = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (callback) {\n        callback(dataSet);\n      }\n    });\n    return dataSet;\n  };\n  var executeScalar = function (sql, params, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (params) {\n      dataIn.param = params;\n    }\n    var value = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      var dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (dataSet.getTable(0).getRows().length > 0) {\n        value = dataSet.getTable(0).getRow(0).getCell(0);\n      } else {\n        value = null;\n      }\n      dataSet.dispose();\n      dataSet = null;\n      if (async) {\n        callback(value);\n      }\n    });\n    return value;\n  };\n  var executeDScalar = function (sql, params, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (params) {\n      dataIn.param = params;\n    }\n    var value = null;\n    getDSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      var dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (dataSet.getTable(0).getRows().length > 0) {\n        value = dataSet.getTable(0).getRow(0).getCell(0);\n      } else {\n        value = null;\n      }\n      dataSet.dispose();\n      dataSet = null;\n      if (async) {\n        callback(value);\n      }\n    });\n    return value;\n  };\n  var executeDReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    var dr = null;\n    getDSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n  var executeQueries = function (sqls, params, callback) {\n    var async = callback ? true : false;\n    var ret = null;\n    var dataIn = {\n      sql: sqls.join("/"),\n      param: params\n    };\n\n    // dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    $.ajax({\n      url: nonQueryUrl + \'ies\',\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(dataIn)\n    }).done(function (json) {\n      ret = json;\n      if (callback) {\n        callback(json);\n      }\n    });\n    return ret;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n\n  //DataSet String\n  function getDSetJString(data, async, callback) {\n    var result = null;\n    data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  //****************************************************//\n  //**             GRID WINDOW                       **//\n  //**************************************************//\n\n  /**\r\n   *\tWindow Model\r\n   */\n  function GridWindow(json) {\n    this.vo = json._vo;\n    this.tabs = [];\n    for (var i = 0; i < json._tabs.length; i++) {\n      var gridTab = new VIS.GridTab(json._tabs[i], this.vo);\n      gridTab.setGridWindow(this);\n      this.tabs.push(gridTab);\n    }\n\n    // console.log(this);\n\n    json = null;\n  }\n  ;\n  GridWindow.prototype.getTabs = function () {\n    return this.tabs;\n  };\n\n  /**\r\n   *\tGet tab by index \r\n   *  @param i index\r\n   *  @return MTab\r\n   */\n  GridWindow.prototype.getTab = function (index) {\n    if (index < 0 || index + 1 > this.tabs.length) return null;\n    return this.tabs[index];\n  };\n  GridWindow.prototype.getIsAppointment = function () {\n    return this.vo.IsAppointment;\n  };\n  GridWindow.prototype.getIsTask = function () {\n    return this.vo.IsTask;\n  };\n  GridWindow.prototype.getIsEmail = function () {\n    return this.vo.IsEmail;\n  };\n  GridWindow.prototype.getIsLetter = function () {\n    return this.vo.IsLetter;\n  };\n  GridWindow.prototype.getIsSms = function () {\n    return this.vo.IsSms;\n  };\n  GridWindow.prototype.getIsChat = function () {\n    return this.vo.IsChat;\n  };\n  GridWindow.prototype.getIsAttachment = function () {\n    return this.vo.IsAttachment;\n  };\n  GridWindow.prototype.getIsHistory = function () {\n    return this.vo.IsHistory;\n  };\n  GridWindow.prototype.getIsRecordShared = function () {\n    return this.vo.IsRecordShared;\n  };\n  GridWindow.prototype.getWindowType = function () {\n    return this.vo.WindowType;\n  };\n  GridWindow.prototype.getIsCheckRequest = function () {\n    return this.vo.IsCheckRequest;\n  };\n  GridWindow.prototype.getIsCopyReocrd = function () {\n    return this.vo.IsCopyReocrd;\n  };\n  GridWindow.prototype.getIsSubscribedRecord = function () {\n    return this.vo.IsSubscribedRecord;\n  };\n  GridWindow.prototype.getIsZoomAcross = function () {\n    return this.vo.IsZoomAcross;\n  };\n  GridWindow.prototype.getIsCreatedDocument = function () {\n    return this.vo.IsCreatedDocument;\n  };\n  GridWindow.prototype.getIsUploadedDocument = function () {\n    return this.vo.IsUploadedDocument;\n  };\n  GridWindow.prototype.getIsViewDocument = function () {\n    return this.vo.IsViewDocument;\n  };\n  GridWindow.prototype.getIsAttachDocumentFrom = function () {\n    return this.vo.IsAttachDocumentFrom;\n  };\n  GridWindow.prototype.getIsGenerateAttachmentCode = function () {\n    return this.vo.IsGenerateAttachmentCode;\n  };\n  GridWindow.prototype.getIsFaxEmail = function () {\n    return this.vo.IsFaxEmail;\n  };\n  GridWindow.prototype.getIsMarkToExport = function () {\n    return this.vo.IsMarkToExport;\n  };\n  GridWindow.prototype.getIsArchive = function () {\n    return this.vo.IsArchive;\n  };\n  GridWindow.prototype.getIsImportMap = function () {\n    return this.vo.IsImportMap;\n  };\n  GridWindow.prototype.getIsAttachmail = function () {\n    return this.vo.IsAttachmail;\n  };\n  GridWindow.prototype.getIsRoleCenterView = function () {\n    return this.vo.IsRoleCenterView;\n  };\n  GridWindow.prototype.getIsSOTrx = function () {\n    return this.vo.IsSOTrx;\n  };\n  GridWindow.prototype.getIsTransaction = function () {\n    return this.vo.IsTransaction;\n  };\n  GridWindow.prototype.getName = function () {\n    return this.vo.Name;\n  };\n\n  //GridWindow.prototype.getIsCall = function () {\n  //    return this.vo.IsCall;\n  //};\n\n  GridWindow.prototype.getWindowWidth = function () {\n    return this.vo.WinWidth;\n  };\n  GridWindow.prototype.getHasPanel = function () {\n    return this.vo.hasPanel;\n  };\n  GridWindow.prototype.getFontName = function () {\n    return this.vo.FontName;\n  };\n  GridWindow.prototype.getAD_Image_ID = function () {\n    return this.vo.AD_Image_ID;\n  };\n  GridWindow.prototype.getImageUrl = function () {\n    return this.vo.ImageUrl;\n  };\n  GridWindow.prototype.getIsCompositeView = function () {\n    return this.vo.IsCompositeView;\n  };\n  GridWindow.prototype.getIsHideTabLinks = function () {\n    return this.vo.IsHideTabLinks;\n  };\n  GridWindow.prototype.getIsHideToolbar = function () {\n    return this.vo.IsHideToolbar;\n  };\n  GridWindow.prototype.getIsHideActionbar = function () {\n    return this.vo.IsHideActionbar;\n  };\n  GridWindow.prototype.dispose = function () {\n    originalLength = this.tabs.length;\n    var gTab;\n    for (var i = originalLength; i > 0; i--) {\n      gtab = this.tabs.pop();\n      gtab.dispose();\n      gtab = null;\n    }\n    this.tabs.length = 0;\n    this.vo = null;\n    this.tabs = null;\n  };\n  //***************** END ******************************//\n\n  //****************************************************//\n  //**             GRID TAB                          **//\n  //**************************************************//\n  /**\r\n  *\tTab Model.\r\n  *  - a combination of AD_Tab (the display attributes) and AD_Table information.\r\n  *  The Tab owns also it\'s Table model\r\n  *  and listens to data changes to update the Field values.\r\n  *\r\n  *  \r\n  *  - The Tab maintains the bound property: CurrentRow\r\n  *\r\n  *  Event Hierarchies:\r\n  *      - dataChanged (from MTable)\r\n  *          - setCurrentRow\r\n  *              - Update all Field Values\r\n  *\r\n  *      - setValue\r\n  *          - Update Field Value\r\n  *          - Callout\r\n  *  \r\n  */\n  function GridTab(gTab, windowVo) {\n    this.gTab = gTab;\n    this.vo = gTab._vo;\n    this.gridTable = new VIS.GridTable(gTab._gridTable);\n    this.gridTable.onlyCurrentDays = this.vo.onlyCurrentDays;\n    // Maintain version on approval property on tab\n    this.gridTable.MaintainVerOnApproval = this.vo.MaintainVerOnApproval;\n    this.gridTable.IsMaintainVersions = this.vo.IsMaintainVersions;\n    this.gridTable.IsHideVerNewRecord = this.vo.IsHideVerNewRecord;\n    this.parents = [];\n    this.orderBys = [];\n    this.depOnFieldColumn = [];\n    this.depOnField = []; //Fields against columnname\n    this.tabPanels = [];\n    this.linkColumnName = gTab._linkColumnName;\n    this.extendedWhere = gTab._extendedWhere;\n    this.keyColumnName = "";\n    this.defaultFocusField;\n    this.isThroughRoleCenter = false;\n    this.query = new VIS.Query();\n    this.oldQuery = "0=9";\n    //this.oldCardQuery = "0=9";\n    this.linkValue = "999999";\n    this.currentRow = -1;\n    this.hasPanel = false;\n    this.isHeaderPanel = false;\n    this.headerPanel = null;\n    this.isHPanelNotShowInMultiRow = false;\n    this.mDataStatusEvent;\n    this.mDataListenerList = [];\n    this.loadFields();\n    this.loadTabPanels();\n    this.loadHeaderPanelItems();\n    this.gridTable.addDataStatusListener(this);\n    this.gridTable.setAD_Tab_ID(this.vo.AD_Tab_ID);\n    this.log = VIS.Logging.VLogger.getVLogger("VIS.GridTab");\n    this.loadData(windowVo);\n    windowVo = null;\n    this.gridWindow = null;\n    this.outerWhereCondition = null;\n  }\n  ;\n\n  /**\r\n   * set Grid Window \r\n   * @param {any} gWindow\r\n   */\n  GridTab.prototype.setGridWindow = function (gWindow) {\n    this.gridWindow = gWindow;\n  };\n  GridTab.prototype.getParentTab = function () {\n    var pTabNo = this.getParentTabNo();\n    if (pTabNo < 0 || pTabNo == this.vo.tabNo) return null;\n    return this.gridWindow.getTab(pTabNo);\n  };\n\n  /**\r\n   * get Parent Tab No\r\n   * @return Tab No\r\n   */\n  GridTab.prototype.getParentTabNo = function () {\n    var tabNo = this.vo.tabNo;\n    var currentLevel = this.vo.TabLevel;\n    var parentLevel = currentLevel - 1;\n    if (parentLevel < 0) return tabNo;\n    while (parentLevel < currentLevel && tabNo > 0) {\n      tabNo--;\n      currentLevel = VIS.context.getContextAsInt(this.vo.windowNo, tabNo, "TabLevel"); //Replace this magic string \n    }\n    return tabNo;\n  };\n  GridTab.prototype.getAD_Tab_ID = function () {\n    return this.vo.AD_Tab_ID;\n  };\n  GridTab.prototype.getAD_Window_ID = function () {\n    return this.vo.AD_Window_ID;\n  };\n\n  /**\r\n    *\tGet Table ID\r\n    *  @return Table ID\r\n    */\n  GridTab.prototype.getAD_Table_ID = function () {\n    return this.vo.AD_Table_ID;\n  }; //\tgetAD_Table_ID\n\n  GridTab.prototype.getTableName = function () {\n    return this.vo.TableName;\n  };\n  GridTab.prototype.getName = function () {\n    return this.vo.Name;\n  };\n  GridTab.prototype.getDescription = function () {\n    return this.vo.Description;\n  };\n  GridTab.prototype.getIsSortTab = function () {\n    return this.vo.IsSortTab;\n  };\n  GridTab.prototype.getDependentOn = function () {\n    var list = [];\n    //  Display\n    VIS.Evaluator.parseDepends(list, this.vo.DisplayLogic);\n    //\n    //if (list.Count > 0 && VLogMgt.IsLevelFiner())\n    //{\n    //  StringBuilder sb = new StringBuilder();\n    // for (int i = 0; i < list.Count; i++)\n    // sb.Append(list[i]).Append(" ");\n    // log.Finer("(" + _vo.Name + ") " + sb.ToString());\n    // }\n    return list;\n  };\n  GridTab.prototype.getTabLevel = function () {\n    return this.vo.TabLevel;\n  };\n  GridTab.prototype.getWindowNo = function () {\n    return this.vo.windowNo;\n  };\n  GridTab.prototype.getTabNo = function () {\n    return this.vo.tabNo;\n  };\n  GridTab.prototype.getIsSingleRow = function () {\n    return this.vo.IsSingleRow;\n  };\n  GridTab.prototype.getTabLayout = function () {\n    return this.vo.TabLayout;\n  };\n\n  //NewRecordView\n  GridTab.prototype.getNewRecordView = function () {\n    return this.vo.NewRecordView;\n  };\n  GridTab.prototype.getIsDisplayed = function (initialSetup) {\n    //  no restrictions\n\n    var dl = this.vo.DisplayLogic;\n    if (dl == null || dl.equals("")) return true;\n    if (initialSetup) {\n      if (dl.indexOf("@#") != -1)\n        //\tglobal variable\n        {\n          var parsed = VIS.Env.parseContext(VIS.context, 0, dl, false, true).trim();\n          if (parsed.Length != 0)\n            //\tvariable defined\n            return VIS.Evaluator.evaluateLogic(this, dl);\n        }\n      return true;\n    }\n    //\n    var retValue = VIS.Evaluator.evaluateLogic(this, dl);\n    ////log.Config(_vo.Name + " (" + dl + ") => " + retValue);\n    return retValue;\n  }; //\ti\n\n  GridTab.prototype.getValueAsString = function (variableName) {\n    var curTabIndex = VIS.context.getContext(this.vo.windowNo, "tb_Index", true);\n    if (curTabIndex == this.vo.tabNo) {\n      // 1 && this.vo.windowNo + "|" + variableName in VIS.context.m_map[this.vo.windowNo])\n      value = VIS.context.getWindowContext(this.vo.windowNo, this.vo.tabNo, variableName, true);\n    } else value = VIS.context.getWindowContext(this.vo.windowNo, variableName, true);\n    if (!value) {\n      return \'\';\n    }\n    return value.toString();\n  };\n  GridTab.prototype.getIsCurrent = function () {\n    /// <summary>\n    /*\r\n     *\tIs the tab current?.\r\n     *  <pre>\r\n     *\tYes \t- Table must be open\r\n     *\t\t\t- Query String is the same\r\n     *\t\t\t- Not Detail\r\n     *\t\t\t- Old link column value is same as current one\r\n     *  </pre>\r\n     *  @return true if current\r\n     */\n    /// </summary>\n    /// <returns></returns>\n\n    if (!this.gridTable.getIsOpen()) return false;\n    //\tSame Query\n    if (!this.oldQuery.equals(this.query.getWhereClause())) return false;\n    //\tDetail?\n    if (!this.getIsDetail()) return true;\n    ////\tSame link column value\n    var value = VIS.context.getWindowContext(this.vo.windowNo, this.getLinkColumnName());\n    return this.linkValue.equals(value);\n    //return false;\n  }; //\tisCurrent\n\n  GridTab.prototype.getIsDetail = function () {\n    /// <summary>\n    /// Returns true if this is a detail record\n    /// </summary>\n    /// <returns></returns>\n    //\tWe have IsParent columns and/or a link column\n    if (this.parents.length > 0 || this.vo.AD_Column_ID != 0) return true;\n    return false;\n  }; // Details\n\n  GridTab.prototype.getField = function (columnName) {\n    return this.gridTable.getField(columnName);\n  };\n  GridTab.prototype.getFieldById = function (fid) {\n    return this.gridTable.getFieldById(fid);\n  };\n  GridTab.prototype.getFields = function (columnName) {\n    return this.gridTable.getFields();\n  };\n  GridTab.prototype.getLinkColumnName = function () {\n    /// Get Link Col Name\n    /// </summary>\n    /// <returns></returns>\n    if (this.linkColumnName) return this.linkColumnName;\n    return "";\n  };\n  GridTab.prototype.getOnlyCurrentDays = function () {\n    // if zoom enabled- return 0, no need to check any thing regarding transaction window.\n    if (this.getIsZoomAction()) return 0;\n    return this.vo.onlyCurrentDays;\n  };\n\n  /* <summary>\r\n    Show Summary Level Nodes Only\r\n   </summary>\r\n  */\n  GridTab.prototype.getShowSummaryLevel = function () {\n    return this.vo.ShowSummaryLevel;\n  };\n  GridTab.prototype.getIsTPBottomAligned = function () {\n    return this.vo.TabPanelAlignment == "H";\n  };\n\n  /* <summary>\r\n     Has Tree\r\n    </summary>\r\n  */\n  GridTab.prototype.getIsTreeTab = function () {\n    return this.vo.HasTree;\n  };\n  GridTab.prototype.getRowCount = function () {\n    return this.gridTable.getRowCount();\n  };\n  GridTab.prototype.getRecords = function () {\n    return this.gridTable.getDataTable();\n  };\n  GridTab.prototype.getCurrentRow = function () {\n    //if (m_currentRow != verifyRow(m_currentRow))\n    //  setCurrentRow(m_mTable.getRowCount()-1, true);\n    return this.currentRow;\n  }; //  getCurrentRow\n\n  GridTab.prototype.getOrderByClause = function (onlyCurrentDays) {\n    //\tFirst Prio: Tab Order By\n    if (this.vo.orderByClause.length > 0) return this.vo.OrderByClause;\n\n    //\tSecond Prio: Fields (save it)\n    this.vo.orderByClause = "";\n    for (var i = 0; i < 3; i++) {\n      var order = this.orderBys[i];\n      if (order && order != null && order != "" && order.length > 0) {\n        if (this.vo.orderByClause.length > 0) this.vo.OrderByClause += ",";\n        this.vo.orderByClause += order;\n      }\n    }\n    if (this.vo.orderByClause.Length > 0) return this.vo.orderByClause;\n\n    //\tThird Prio: onlyCurrentRows\n    this.vo.orderByClause = "Created";\n    if (onlyCurrentDays > 0) this.vo.orderByClause += " DESC";\n    return this.vo.orderByClause;\n  }; //\tgetOrderByClause\n\n  GridTab.prototype.getTableModel = function () {\n    return this.gridTable;\n  }; //returm GridTable \n\n  GridTab.prototype.getIsOpen = function () {\n    if (this.gridTable != null) return this.gridTable.getIsOpen();\n    return false;\n  }; //IsOpen\n\n  GridTab.prototype.getIsQueryActive = function () {\n    if (this.query != null) return this.query.getIsActive();\n    return false;\n  };\n  GridTab.prototype.getDependantFields = function (columnName) {\n    var list = [];\n    if (this.depOnFieldColumn.indexOf(columnName) != -1) {\n      var size = this.depOnFieldColumn.length;\n      for (var i = 0; i < size; i++) {\n        if (this.depOnFieldColumn[i].equals(columnName)) if (list.indexOf(this.depOnField[i]) < 0) list.push(this.depOnField[i]);\n      }\n    }\n    return list;\n  };\n  GridTab.prototype.getIsReadOnly = function () {\n    if (this.vo.IsReadOnly) return true;\n\n    //  no restrictions\n    if (this.vo.ReadOnlyLogic == null || this.vo.ReadOnlyLogic.equals("")) return this.vo.IsReadOnly;\n\n    //  ** dynamic content **  uses get_ValueAsString\n    var retValue = VIS.Evaluator.evaluateLogic(this, this.vo.ReadOnlyLogic);\n    //log.finest(m_vo.Name\n    //\t\t+ " (" + m_vo.ReadOnlyLogic + ") => " + retValue);\n    return retValue;\n  }; //\tisReadOnly\n\n  /**\r\n   *\tIs Query New Record\r\n   *  @return true if query active\r\n   */\n  GridTab.prototype.getIsQueryNewRecord = function () {\n    if (this.query != null) return this.query.getIsNewRecordQuery();\n    return false;\n  }; //\n\n  GridTab.prototype.getIsAutoNewRecord = function () {\n    return this.vo.IsAutoNewRecord === true;\n  };\n  GridTab.prototype.getHideFGFrom = function () {\n    return this.vo.HideFieldGroupFrom;\n  };\n  GridTab.prototype.getIsInsertRecord = function () {\n    if (this.getIsReadOnly()) return false;\n    var limitReached = false;\n    if (this.vo.RecordLimit > 0) {\n      limitReached = this.gridTable.getTotalRowCount() >= this.vo.RecordLimit;\n    }\n    return this.vo.IsInsertRecord && !limitReached;\n  };\n  GridTab.prototype.getIsHideTabName = function () {\n    return this.vo.HideTabName;\n  };\n  GridTab.prototype.getIsResetLayout = function () {\n    return this.vo.ResetLayout;\n  };\n  GridTab.prototype.getIsHideGridToggle = function () {\n    return this.vo.IsHideGridToggle;\n  };\n  GridTab.prototype.getIsHideCardToggle = function () {\n    return this.vo.IsHideCardToggle;\n  };\n  GridTab.prototype.getIsHideRecordNav = function () {\n    return this.vo.IsHideRecordNav;\n  };\n  GridTab.prototype.getIncluded_Tab_ID = function () {\n    return this.vo.Included_Tab_ID;\n  }; //\tgetIncluded_Tab_ID\n\n  GridTab.prototype.getIsAlwaysUpdateField = function () {\n    for (var i = 0; i < this.gridTable.getColumnCount(); i++) {\n      var field = this.gridTable.getField(i);\n      if (field.getIsAlwaysUpdateable()) return true;\n    }\n    return false;\n  }; //\tisAlwaysUpdateField\n\n  GridTab.prototype.getValue = function (columnName) {\n    if (columnName == null) return null;\n    var field = this.gridTable.getField(columnName);\n    return this.getValueOfField(field);\n  };\n  GridTab.prototype.getValueOfField = function (field) {\n    if (field == null) return null;\n    return field.getValue();\n  };\n\n  /**\r\n   *\tGet Process ID\r\n   *  @return Process ID\r\n   */\n  GridTab.prototype.getAD_Process_ID = function () {\n    return this.vo.AD_Process_ID;\n  }; //\tgetAD_Process_ID\n\n  /**\r\n   *  Get Current Table Key ID\r\n   *  @return Record_ID\r\n   */\n  GridTab.prototype.getRecord_ID = function () {\n    return this.gridTable.getKeyID(this.currentRow);\n  }; //  getRecord_ID\n\n  //getDummyRecordID\n  GridTab.prototype.getDummyRecordID = function () {\n    return this.gridTable.getDummyRecordID(this.currentRow);\n  }; //  getRecord_ID\n  /**\r\n   *  Get Key ID of row\r\n   *  @param  row row number\r\n   *  @return The Key ID of the row or -1 if not found\r\n   */\n  GridTab.prototype.getKeyID = function (row) {\n    return this.gridTable.getKeyID(row);\n  }; //  get\n\n  /**\r\n   *  Get addition info message for status for for seleted tables\r\n   * @param {any} tableName \r\n   * @param {any} ctx   Record context\r\n   * @param {any} windowNo \r\n   * @param {any} tabNo  \r\n   * @param {any} rec_id  primary key Id\r\n   */\n\n  GridTab.prototype.getFooterInfo = function (tableName, ctx, windowNo, tabNo, rec_id) {\n    return new Promise(function (resolve, reject) {\n      if (tableName.startsWith("C_Order") || tableName.startsWith("C_Invoice")) {\n        var Record_ID;\n        var isOrder = tableName.startsWith("C_Order");\n        var mf = null;\n        var mfMC = null;\n        try {\n          mf = new VIS.MessageFormat(VIS.Msg.getMsg("OrderSummary"));\n          mfMC = new VIS.MessageFormat(VIS.Msg.getMsg("OrderSummaryMC"));\n        } catch (e) {\n          reject("");\n          return;\n          //log.log(Level.SEVERE, "OrderSummary/MC", e);\n        }\n        if (mf == null || mfMC == null) {\n          resolve("");\n          return;\n        }\n        /**********************************************************************\r\n         *\t** Message: OrderSummary/MC **\r\n         *\t{0} Line(s) - {1,number,#,##0.00} - Total: {3}{2,number,#,##0.00} = {5}{4,number,#,##0.00}\r\n         *\t{0} Line(s) - {1,number,#,##0.00} - Total: {3}{2,number,#,##0.00}\r\n         *\r\n         *\t{0} - Number of lines\r\n         *\t{1} - Line toral\r\n         *\t{2} - Grand total (including tax, etc.)\r\n         *\t{3} - Source Currency\r\n         *\t(4) - Grand total converted to local currency\r\n         *\t{5} - Base Currency\r\n         */\n\n        //\n\n        var Record_ID = 0;\n        if (isOrder) {\n          Record_ID = ctx.getContextAsInt(windowNo, "C_Order_ID");\n        } else {\n          Record_ID = ctx.getContextAsInt(windowNo, "C_Invoice_ID");\n        }\n        if (Record_ID < 1 && rec_id > 0) Record_ID = rec_id;\n\n        // var dr = null;\n        $.ajax({\n          type: \'Get\',\n          async: true,\n          url: VIS.Application.contextUrl + "Form/GetTrxInfo",\n          data: {\n            Record_ID: Record_ID,\n            isOrder: isOrder\n          },\n          success: function (data) {\n            try {\n              var myarguments = []; //new Object[6];\n              var filled = false;\n              var dr = new VIS.DB.DataReader().toJson(data);\n              var format = VIS.DisplayType.GetNumberFormat(VIS.DisplayType.Amount);\n              //dr = executeReader(sql.toString());\n              if (dr.read()) {\n                //\t{0} - Number of lines\n                var lines = dr.getInt(0);\n                myarguments[0] = lines;\n                //\t{1} - Line toral\n                myarguments[1] = format.getLocaleAmount(dr.getDecimal(2));\n                //\t{2} - Grand total (including tax, etc.)\n\n                myarguments[2] = format.getLocaleAmount(dr.getDecimal(3));\n                //\t{3} - Currency\n                var currency = dr.getString(1);\n                myarguments[3] = currency;\n                //\t(4) - Grand total converted to Base\n\n                myarguments[4] = format.getLocaleAmount(dr.getDecimal(4));\n                myarguments[5] = ctx.getContext("$CurrencyISO");\n                filled = true;\n              }\n            } catch (e) {\n              reject(""); //log.log(Level.SEVERE, tableName + "\\nSQL=" + sql, e);\n            }\n            if (filled) {\n              if (myarguments[2] === myarguments[4]) resolve(mf.format(myarguments));else resolve(mfMC.format(myarguments));\n            } else resolve(" ");\n          },\n          error: function (e) {\n            reject("");\n          }\n        });\n      } //\tOrder || Invoice\n    });\n  };\n  GridTab.prototype.getTrxInfo = function (tableName, ctx, windowNo, tabNo) {\n    if (tableName.startsWith("C_Order") || tableName.startsWith("C_Invoice")) {\n      var Record_ID;\n      var isOrder = tableName.startsWith("C_Order");\n      var mf = null;\n      var mfMC = null;\n      try {\n        mf = new VIS.MessageFormat(VIS.Msg.getMsg("OrderSummary"));\n        mfMC = new VIS.MessageFormat(VIS.Msg.getMsg("OrderSummaryMC"));\n      } catch (e) {\n        //log.log(Level.SEVERE, "OrderSummary/MC", e);\n      }\n      if (mf == null || mfMC == null) return " ";\n      /**********************************************************************\r\n       *\t** Message: OrderSummary/MC **\r\n       *\t{0} Line(s) - {1,number,#,##0.00} - Total: {3}{2,number,#,##0.00} = {5}{4,number,#,##0.00}\r\n       *\t{0} Line(s) - {1,number,#,##0.00} - Total: {3}{2,number,#,##0.00}\r\n       *\r\n       *\t{0} - Number of lines\r\n       *\t{1} - Line toral\r\n       *\t{2} - Grand total (including tax, etc.)\r\n       *\t{3} - Source Currency\r\n       *\t(4) - Grand total converted to local currency\r\n       *\t{5} - Base Currency\r\n       */\n      var myarguments = []; //new Object[6];\n      var filled = false;\n      //\n\n      var dr = null;\n      try {\n        var Record_ID = 0;\n        if (isOrder) {\n          Record_ID = ctx.getContextAsInt(windowNo, "C_Order_ID");\n        } else {\n          Record_ID = ctx.getContextAsInt(windowNo, "C_Invoice_ID");\n        }\n        var dr = null;\n        $.ajax({\n          type: \'Get\',\n          async: false,\n          url: VIS.Application.contextUrl + "Form/GetTrxInfo",\n          data: {\n            Record_ID: Record_ID,\n            isOrder: isOrder\n          },\n          success: function (data) {\n            dr = new VIS.DB.DataReader().toJson(data);\n          }\n        });\n\n        //dr = executeReader(sql.toString());\n        if (dr.read()) {\n          //\t{0} - Number of lines\n          var lines = dr.getInt(0);\n          myarguments[0] = lines;\n          //\t{1} - Line toral\n          var lineTotal = dr.getDecimal(2).toLocaleString(); //.toFixed(2);\n          myarguments[1] = lineTotal;\n          //\t{2} - Grand total (including tax, etc.)\n          var grandTotal = dr.getDecimal(3).toLocaleString(); //.toFixed(2);\n          myarguments[2] = grandTotal;\n          //\t{3} - Currency\n          var currency = dr.getString(1);\n          myarguments[3] = currency;\n          //\t(4) - Grand total converted to Base\n          var grandBase = dr.getDecimal(4).toLocaleString(); //.toFixed(2);\n          myarguments[4] = grandBase;\n          myarguments[5] = ctx.getContext("$CurrencyISO");\n          filled = true;\n        }\n      } catch (e) {\n        //log.log(Level.SEVERE, tableName + "\\nSQL=" + sql, e);\n      } finally {\n        if (dr != null) dr.dispose();\n      }\n      if (filled) {\n        if (myarguments[2] === myarguments[4]) return mf.format(myarguments);else return mfMC.format(myarguments);\n      }\n      return " ";\n    } //\tOrder || Invoice\n  };\n\n  /**\r\n   * \tIs Processed\r\n   *\t@return true if current record is processed\r\n   */\n  GridTab.prototype.getIsProcessed = function () {\n    var index = this.gridTable.findColumn("Processed");\n    if (index != -1) {\n      var oo = this.gridTable.getValueAt(this.currentRow, index);\n      if (typeof oo == "string") return "Y".equals(oo);\n      if (typeof oo == "boolean") return oo;\n    }\n    return "Y".equals(VIS.context.getWindowContext(this.vo.windowNo, this.vo.tabNo, "Processed"));\n  }; //\t\n\n  GridTab.prototype.getKeyColumnName = function () {\n    return this.keyColumnName;\n  };\n\n  /**\r\n   * \tGet Order column for sort tab\r\n   * \t@return AD_Column_ID\r\n   */\n  GridTab.prototype.getAD_ColumnSortOrder_ID = function () {\n    return this.vo.AD_ColumnSortOrder_ID;\n  }; //\tgetAD_ColumnSortOrder_ID\n\n  /**\r\n   * \tGet Order column for sort tab\r\n   * \t@return AD_Column_ID\r\n   */\n  GridTab.prototype.getIsMapView = function () {\n    if (this.vo.locationCols && this.vo.locationCols.length > 0) return true;\n    return false;\n  };\n  GridTab.prototype.getMapColumns = function () {\n    return this.vo.locationCols;\n  };\n\n  /**\r\n   * \tGet Yes/No column for sort tab\r\n   * \t@return AD_Column_ID\r\n   */\n  GridTab.prototype.getAD_ColumnSortYesNo_ID = function () {\n    return this.vo.AD_ColumnSortYesNo_ID;\n  }; //\tgetAD_ColumnSortYesNo_ID\n\n  /* \r\n   * Get Tab Where Clause\r\n   *\r\n   */\n  GridTab.prototype.getWhereClause = function () {\n    return this.vo.WhereClause;\n  };\n  GridTab.prototype.getSearchQuery = function (val) {\n    var query = null;\n    var fields = this.getFields();\n    var f = null;\n    for (var i = 0; i < fields.length; i++) {\n      f = fields[i];\n      if (f.getIsVirtualColumn()) continue;\n      if (f.getColumnName().toLowerCase() == "export_id") continue;\n      if (VIS.DisplayType.IsText(f.getDisplayType())) {\n        if (!query) query = new VIS.Query(this.getTableName(), true);\n        query.addRestriction(f.getColumnName(), VIS.Query.prototype.LIKE, val, f.getColumnName(), val);\n      }\n    }\n    fields = null;\n    f = null;\n    return query;\n  };\n  GridTab.prototype.getParentColumnNames = function () {\n    return this.parents;\n  };\n  GridTab.prototype.clearSelectedRow = function () {\n    var size = this.gridTable.getFields().length;\n    for (var i = 0; i < size; i++) {\n      var mField = this.gridTable.getField(i);\n      if (mField.getIsKey())\n        //refresh the context if the field is Key. This makes sure that Tab Level 2 and above works fine.\n        mField.setValue(null, false);else mField.setNullValue();\n    }\n  };\n  GridTab.prototype.setCurrentRow = function (tRow, fireEvents) {\n    var recid = -1;\n    var newRow = this.verifyRow(tRow);\n    //if (newRow === this.currentRow) {\n    //    return recid;\n    //}\n    this.currentRow = newRow;\n    var rData = this.gridTable.getRow(this.currentRow);\n    if (rData) {\n      recid = rData.recid;\n    }\n    var size = this.gridTable.getFields().length;\n    for (var i = 0; i < size; i++) {\n      var mField = this.gridTable.getField(i);\n      if (rData) {\n        // var value = m_mTable.getValueAt(m_currentRow, i);\n        var value = rData[mField.getColumnName().toLowerCase()];\n        mField.setValue(value, this.gridTable.getIsInserting());\n        //mField.validateValue();\n      } else {\n        if (mField.getIsKey())\n          //refresh the context if the field is Key. This makes sure that Tab Level 2 and above works fine.\n          mField.setValue(null, false);else mField.setNullValue();\n      }\n    }\n    if (!fireEvents)\n      //  prevents informing twice\n      return recid;\n    if (this.mDataStatusEvent != null && this.mDataStatusEvent.getTotalRows() != this.gridTable.rowCount) {\n      this.mDataStatusEvent = null;\n    }\n\n    //  inform APanel/..    -> dataStatus with row updated\n    if (this.mDataStatusEvent == null) {\n      this.mDataStatusEvent = new DataStatusEvent(null, this.getRowCount(), this.gridTable.getIsInserting(),\n      //\tchanged\n      //Env.getCtx().isAutoCommit(m_vo.WindowNo), m_mTable.isInserting());\n      false, this.gridTable.getIsInserting());\n      this.mDataStatusEvent.AD_Table_ID = this.getAD_Table_ID();\n      this.mDataStatusEvent.setPageInfo(this.gridTable.currentPage, this.gridTable.rowCount, this.gridTable.pazeSize);\n    }\n    this.mDataStatusEvent.setCurrentRow(this.currentRow);\n    var status = this.mDataStatusEvent.getAD_Message();\n    if (status == null || status.length == 0) this.mDataStatusEvent.setInfo("NavigateOrUpdate", null, false, false);\n    this.fireDataStatusChanged(this.mDataStatusEvent);\n    return recid;\n  };\n  GridTab.prototype.fireDataStatusEventOnly = function () {\n    //  inform APanel/..    -> dataStatus with row updated\n    if (this.mDataStatusEvent == null) {\n      this.mDataStatusEvent = new DataStatusEvent(null, this.getRowCount(), this.gridTable.getIsInserting(),\n      //\tchanged\n      //Env.getCtx().isAutoCommit(m_vo.WindowNo), m_mTable.isInserting());\n      false, this.gridTable.getIsInserting());\n      this.mDataStatusEvent.AD_Table_ID = this.getAD_Table_ID();\n      this.mDataStatusEvent.setPageInfo(this.gridTable.currentPage, this.gridTable.rowCount, this.gridTable.pazeSize);\n    }\n    this.mDataStatusEvent.setCurrentRow(this.currentRow);\n    var status = this.mDataStatusEvent.getAD_Message();\n    if (status == null || status.length == 0) this.mDataStatusEvent.setInfo("NavigateOrUpdate", null, false, false);\n    this.fireDataStatusChanged(this.mDataStatusEvent);\n  };\n\n  // Get Focus element;\n  GridTab.prototype.getLastFocus = function () {\n    return this.gridTable.getLastFocus();\n  };\n\n  //Set Focus element\n  GridTab.prototype.setLastFocus = function (ctl) {\n    this.gridTable.setLastFocus(ctl);\n  };\n\n  //Set Query Object\n  GridTab.prototype.setQuery = function (query) {\n    if (query == null) this.query = new VIS.Query();else {\n      this.query = query;\n      this.vo.onlyCurrentDays = 0;\n    }\n  };\n\n  /**\r\n   *  Set New Value & call Callout\r\n   *  @param field field\r\n   *  @param value value\r\n   *  @return error message or ""\r\n   */\n  GridTab.prototype.setValue = function (field, value) {\n    if (!(field instanceof VIS.GridField)) {\n      if (field == null) return "NoColumn";\n      field = this.gridTable.getField(field); // field is columnname in this case\n    }\n    if (field == null) return "NoField";\n    //log.fine(field.getColumnName() + "=" + value + " - Row=" + m_currentRow);\n    var dispalyType = field.getDisplayType();\n    if (value == null || value.toString() == "") {\n      value = null;\n    } else if (value === 0 && (VIS.DisplayType.IsID(dispalyType) || dispalyType == VIS.DisplayType.List) && !this.getIsStdColumn(field.getColumnName().toUpper())) {\n      value = null;\n    }\n    var col = this.gridTable.findColumn(field.getColumnName());\n    this.gridTable.setValueAt(value, this.currentRow, col, false);\n    //\n    return this.processFieldChange(field);\n  }; //  setValue\n\n  GridTab.prototype.getIsStdColumn = function (colName) {\n    if (colName == "AD_USER_ID" || colName == "AD_ROLE_ID" || colName == "AD_CLIENT_ID" || colName == "AD_ORG_ID") {\n      return true;\n    }\n    return false;\n  };\n  GridTab.prototype.addDataStatusListener = function (listner) {\n    this.mDataListenerList.push(listner);\n  };\n  GridTab.prototype.removeDataStatusListener = function (listner) {\n    for (var i = this.mDataListenerList.length - 1; i >= 0; i--) {\n      if (this.mDataListenerList[i] === listner) {\n        this.mDataListenerList[i] = null;\n        this.mDataListenerList.splice(i, 1);\n      }\n    }\n  };\n\n  /**\r\n   *  Do we need to Save?\r\n   *  @param rowChange row change\r\n   *  @param  onlyRealChange if true the value of a field was actually changed\r\n   *  (e.g. for new records, which have not been changed) - default false\r\n   *\t@return true it needs to be saved\r\n   */\n  GridTab.prototype.needSave = function (rowChange, onlyRealChange) {\n    if (rowChange) {\n      return this.gridTable.needSave(-2, onlyRealChange);\n    } else {\n      if (onlyRealChange) return this.gridTable.needSave();else return this.gridTable.needSave(onlyRealChange);\n    }\n  }; //  isDataChanged\n\n  GridTab.prototype.loadFields = function () {\n    for (var i = 0; i < this.gTab._gridTable.m_fields.length; i++) {\n      var gridField = new GridField(this.gTab._gridTable.m_fields[i]);\n      gridField.setGridTab(this);\n      this.gridTable.gridFields.push(gridField);\n      if (gridField.getIsDefaultFocus()) {\n        this.defaultFocusField = gridField;\n      }\n      var columnName = gridField.getColumnName();\n      //\tRecord Info\n      if (gridField.getIsKey()) {\n        this.keyColumnName = columnName;\n        this.gridTable.setKeyColumnName(columnName);\n      }\n      //\tParent Column(s)\n      if (gridField.getIsParentColumn()) this.parents.push(columnName);\n      //\tOrder By\n      var sortNo = gridField.getSortNo();\n      if (sortNo == 0) {} else if (Math.abs(sortNo) == 1) {\n        this.orderBys[0] = columnName;\n        if (sortNo < 0) this.orderBys[0] += " DESC";\n      } else if (Math.abs(sortNo) == 2) {\n        this.orderBys[1] = columnName;\n        if (sortNo < 0) this.orderBys[1] += " DESC";\n      } else if (Math.abs(sortNo) == 3) {\n        this.orderBys[2] = columnName;\n        if (sortNo < 0) this.orderBys[2] += " DESC";\n      }\n\n      //  List of ColumnNames, this field is dependent on\n      var list = gridField.getDependentOn();\n      for (var ii = 0; ii < list.length; ii++) {\n        this.depOnFieldColumn.push(list[ii]); //  ColumnName, Field\n        this.depOnField.push(gridField);\n      }\n      //  Add fields all fields are dependent on\n      if (columnName.equals("IsActive") || columnName.equals("Processed") || columnName.equals("Processing")) {\n        this.depOnFieldColumn.push(columnName); //  ColumnName, Field\n        this.depOnField.push(null);\n      }\n\n      //this.gridTable.updateTableModel(gridField);\n      gridField = null;\n    }\n  };\n  GridTab.prototype.loadTabPanels = function () {\n    if (this.gTab._panels && this.gTab._panels.length > 0) {\n      this.hasPanel = true;\n      for (var i = 0; i < this.gTab._panels.length; i++) {\n        var gridTabPanel = new GridTabPanel(this.gTab._panels[i]);\n        this.tabPanels.push(gridTabPanel);\n      }\n    } else {\n      this.hasPanel = false;\n    }\n  };\n  GridTab.prototype.loadHeaderPanelItems = function () {\n    if (this.vo.HeaderItems) {\n      this.isHeaderPanel = true;\n      headerPanel = this.vo.HeaderItems;\n      this.isHPanelNotShowInMultiRow = this.vo.HPanelNotShowInMultiRow;\n    }\n  };\n  GridTab.prototype.getIsHeaderPanel = function () {\n    return this.isHeaderPanel;\n  };\n  GridTab.prototype.getHeaderPanelItems = function () {\n    return headerPanel;\n  };\n  GridTab.prototype.getHeaderHeight = function () {\n    if (this.vo.HeaderHeight && this.vo.HeaderHeight > 0) {\n      return this.vo.HeaderHeight + \'px\';\n    } else {\n      return \'200px\';\n    }\n  };\n  GridTab.prototype.getHeaderWidth = function () {\n    if (this.vo.HeaderWidth && this.vo.HeaderWidth > 0) {\n      return this.vo.HeaderWidth + \'px\';\n    } else {\n      return \'250px\';\n    }\n  };\n  GridTab.prototype.getHeaderBackColor = function () {\n    return this.vo.HeaderBackColor;\n  };\n  GridTab.prototype.getHeaderPadding = function () {\n    return this.vo.HeaderPadding;\n  };\n  GridTab.prototype.getHeaderHorizontal = function () {\n    if (this.vo.HeaderAlignment.equals("H")) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  GridTab.prototype.getHasPanel = function () {\n    return this.hasPanel;\n  };\n  GridTab.prototype.getTabPanels = function () {\n    return this.tabPanels;\n  };\n  GridTab.prototype.validateQuery = function (query) {\n    if (query == null || query.getRestrictionCount() == 0) return null;\n\n    //\tCheck: only one restriction\n    if (query.getRestrictionCount() != 1) {\n      //log.Fine("Ignored(More than 1 Restriction): " + query);\n      return query.getWhereClause();\n    }\n    var colName = query.getColumnName(0);\n    if (colName == null) {\n      //log.Fine("Ignored(No Column): " + query);\n      return query.getWhereClause();\n    }\n    //\ta \'(\' in the name = function - don\'t try to resolve\n    if (colName.indexOf(\'(\') != -1) {\n      //log.Fine("Ignored(Function): " + colName);\n      return query.getWhereClause();\n    }\n    ////\tOK - Query is valid \n\n    //\tZooms to the same Window (Parents, ..)\n    var refColName = null;\n    if (colName.equals("R_RequestRelated_ID")) refColName = "R_Request_ID";else if (colName.startsWith("C_DocType")) refColName = "C_DocType_ID";else if (colName.equals("CreatedBy") || colName.equals("UpdatedBy")) refColName = "AD_User_ID";else if (colName.equals("Orig_Order_ID")) refColName = "C_Order_ID";else if (colName.equals("Orig_InOut_ID")) refColName = "M_InOut_ID";\n    if (refColName != null) {\n      if (this.getField(refColName) != null) {\n        query.setColumnName(0, refColName);\n        //log.Fine("Column " + colName + " replaced with synonym " + refColName);\n        return query.getWhereClause();\n      }\n      refColName = null;\n    }\n\n    ////\tSimple Query. \n    if (this.getField(colName) != null) {\n      //log.Fine("Field Found: " + colName);\n      return query.getWhereClause();\n    }\n    var sql = "VIS_104";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@colName", colName);\n    var dr = null;\n    try {\n      dr = executeReader(sql, param);\n      if (dr.read()) refColName = dr.getString(0);\n    } catch (e) {\n      this.log.log(Level.SEVERE, "(ref) - Column=" + colName, e);\n      return query.getWhereClause();\n    } finally {\n      if (dr != null) {\n        dr.dispose();\n      }\n    }\n    //\tReference Column found\n    if (refColName != null) {\n      query.setColumnName(0, refColName);\n      if (this.getField(refColName) != null) {\n        this.log.fine("Column " + colName + " replaced with " + refColName);\n        return query.getWhereClause();\n      }\n      colName = refColName;\n    }\n\n    //\tColumn NOT in Tab - create EXISTS subquery\n    var tableName = null;\n    var tabKeyColumn = this.getKeyColumnName();\n    //\tColumn=SalesRep_ID, Key=AD_User_ID, Query=SalesRep_ID=101\n\n    sql = "VIS_105";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@colName", colName);\n    param[1] = new VIS.DB.SqlParam("@tabKeyColumn", tabKeyColumn);\n    try {\n      dr = executeReader(sql, param);\n      if (dr.read()) tableName = dr.getString(0);\n    } catch (e) {\n      this.log.log(Level.SEVERE, "Column=" + colName + ", Key=" + tabKeyColumn, e);\n      return null;\n    } finally {\n      if (dr != null) {\n        dr.dispose();\n      }\n    }\n\n    //\tSpecial Reference Handling\n    if (tabKeyColumn.equals("AD_Reference_ID")) {\n      sql = "VIS_106";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@colName", colName);\n      var AD_Reference_ID = executeScalar(sql, param);\n      return "AD_Reference_ID=" + AD_Reference_ID;\n    }\n\n    //\tCauses could be functions in query\n    //\te.g. Column=UPPER(Name), Key=AD_Element_IDS, Query=UPPER(AD_Element.Name) LIKE \'%CUSTOMER%\'\n    if (tableName == null) {\n      this.log.info("Not successfull - Column=" + colName + ", Key=" + tabKeyColumn + ", Query=" + query);\n      return query.getWhereClause();\n    }\n    query.setTableName("xx");\n    var result = "EXISTS (SELECT * FROM " + tableName + " xx WHERE " + query.getWhereClause(true) + " AND xx." + tabKeyColumn + "=" + this.getTableName() + "." + tabKeyColumn + ")";\n    this.log.fine(result);\n    return result;\n    // return "";\n  };\n  GridTab.prototype.setTreeNodeID = function (nodeID) {\n    this.treeNode_ID = nodeID;\n    this.gridTable.treeNode_ID = nodeID;\n  };\n  GridTab.prototype.setTreeID = function (treeID) {\n    this.treeID = treeID;\n    this.gridTable.treeID = treeID;\n  };\n  GridTab.prototype.setTreeTable = function (tableID) {\n    this.treeTable_ID = tableID;\n    this.gridTable.treeTable_ID = tableID;\n  };\n  GridTab.prototype.setShowSummaryNodes = function (ShowSummaryNodes) {\n    this.ShowSummaryNodes = ShowSummaryNodes;\n    this.gridTable.ShowSummaryNodes = ShowSummaryNodes;\n  };\n  GridTab.prototype.setIsZoomAction = function (ZoomAction) {\n    this.isZoomAction = ZoomAction;\n    this.gridTable.isZoomAction = ZoomAction;\n  };\n  GridTab.prototype.getIsZoomAction = function () {\n    return this.isZoomAction;\n  };\n\n  /**\r\n   * \r\n   * @param {any} onlyCurrentDays\r\n   * @param {any} maxRows\r\n   * @param {any} created\r\n   * @param {any} isVisualEdtr\r\n   */\n  GridTab.prototype.prepareQuery = function (onlyCurrentDays, maxRows, created, isVisualEdtr) {\n    var success = true;\n    var queryDetailAll = false;\n    VIS.context.clearTabContext(this.vo.windowNo, this.vo.tabNo);\n\n    //\tis it same query?\n    var refresh = this.oldQuery.equals(this.query.getWhereClause()) && this.vo.onlyCurrentDays == onlyCurrentDays;\n    if (this.getIsTreeTab()) {\n      if (!this.getShowSummaryLevel()) {\n        this.gridTable.setDoPaging(false); // _gridTable.DoPaging = false;\n      }\n      if (this.getShowSummaryLevel()) {\n        this.gridTable.setDoPaging(true); // _gridTable.DoPaging = false;\n        refresh = false;\n      }\n    }\n    this.oldQuery = this.query.getWhereClause();\n    this.vo.onlyCurrentDays = onlyCurrentDays;\n    var where = "";\n    if (!isVisualEdtr)\n      //show all tab in visual editor\n      {\n        where += this.vo.WhereClause;\n      }\n    if (!this.ShowSummaryNodes && this.getShowSummaryLevel()) {\n      if (where.length > 0) {\n        where += " AND IsSummary=\'N\'";\n      } else {\n        where += " IsSummary=\'N\'";\n      }\n    }\n\n    //    _vo.WhereClause);\n\n    if (this.getOnlyCurrentDays() > 0) {\n      if (where.length > 0) where += " AND ";\n      var showNotProcessed = this.findColumn("Processed") != -1;\n      //\tShow only unprocessed or the one updated within x days\n      if (showNotProcessed) where += "(Processed=\'N\' OR ";\n      if (created) where += "Created>=";else where += "Updated>=";\n      //\twhere.append("addDays(current_timestamp, -");\n      where += "addDays(SysDate, -" + this.vo.onlyCurrentDays + ")";\n      if (showNotProcessed) where += ")";\n    }\n    if (!this.isThroughRoleCenter) {\n      if (this.getIsDetail()) {\n        var lc = this.getLinkColumnName();\n        if (lc.equals("")) {\n          //log.Warning("No link column");\n          if (where.length > 0) where += " AND ";\n          where += " 2=3";\n          success = false;\n        } else {\n          var value = "";\n          if (this.vo.tabNo > 0) var value = VIS.context.getTabRecordContext(this.vo.windowNo, this.getParentTabNo(), lc, true);else var value = VIS.context.getTabRecordContext(this.vo.windowNo, this.getParentTabNo(), lc);\n          if (refresh) {\n            refresh = this.linkValue.equals(value);\n            queryDetailAll = !refresh;\n          }\n          this.linkValue = value;\n          //\tCheck validity\n          if (value.length == 0) {\n            //log.Warning("No value for link column " + lc);\n            if (where.length > 0) where += " AND ";\n            where += " 2=4";\n            success = false;\n          } else {\n            //\twe have column and value\n            if (where.length > 0) where += " AND ";\n            if ("NULL".equals(value.toUpper())) {\n              where += lc + " IS NULL ";\n              //log.Severe("Null Value of link column " + lc);\n            } else {\n              where += lc + "=";\n              if (lc.endsWith("_ID")) where += value;else where += "\'" + value + "\'";\n            }\n          }\n        }\n      } //\tisDetail\n    }\n\n    //\tFinal Query\n    if (this.query.getIsActive()) {\n      var q = this.validateQuery(this.query);\n      if (q != null && !queryDetailAll) {\n        if (where.length > 0) where += " AND ";\n        where += q;\n      }\n    }\n    this.extendedWhere = where.toString();\n    //if (this.oldCardQuery != this.cardWhereCondition) {\n    //    refresh = false;\n    //}\n    //this.oldCardQuery = this.cardWhereCondition;\n    //if (this.outerWhereCondition && this.outerWhereCondition.length>0) {           \n    //    if (where.length > 0)\n    //        where += " AND ";\n    //    where += this.outerWhereCondition;\n    //    refresh = false;\n    //}\n\n    /* Query */\n    this.mDataStatusEvent = null; //reset \n    if (this.gridTable.getIsOpen()) {\n      if (refresh) {\n        this.gridTable.dataRefreshAll();\n        //console.log("refreshAll");\n      } else {\n        this.gridTable.dataRequery(where.toString());\n        //console.log("data requery");\n      }\n    } else {\n      if (!this.isZoomAction) {\n        //   var sqlDefaultSearch = "SELECT  AD_UserQuery.Code,ad_defaultuserquery.ad_user_id,ad_defaultuserquery.ad_tab_id FROM AD_UserQuery AD_UserQuery JOIN AD_DefaultUserQuery ad_defaultuserquery ON AD_UserQuery.AD_UserQuery_ID=ad_defaultuserquery.AD_UserQuery_ID WHERE AD_UserQuery.IsActive                 =\'Y\'" +\n        //"AND ad_defaultuserquery.AD_User_ID=" + VIS.Env.getCtx().getAD_User_ID() + " AND AD_UserQuery.AD_Client_ID =" + VIS.Env.getCtx().getAD_Client_ID() + " AND (AD_UserQuery.AD_Tab_ID = " + this.gridTable.AD_Tab_ID + " OR AD_UserQuery.AD_Table_ID                 = " + this.gridTable.AD_Table_ID + " )";\n\n        var sqlDefaultSearch = "VIS_107";\n        var param = [];\n        param[0] = new VIS.DB.SqlParam("@AD_User_ID", VIS.Env.getCtx().getAD_User_ID());\n        param[1] = new VIS.DB.SqlParam("@AD_Client_ID", VIS.Env.getCtx().getAD_Client_ID());\n        param[2] = new VIS.DB.SqlParam("@AD_Tab_ID", this.gridTable.AD_Tab_ID);\n        param[3] = new VIS.DB.SqlParam("@AD_Table_ID", this.gridTable.AD_Table_ID);\n        var queryCode = "";\n        var data = executeDataSet(sqlDefaultSearch, param);\n        if (data && data.tables[0].rows && data.tables[0].rows.length > 0) {\n          for (var i = 0; i < data.tables[0].rows.length; i++) {\n            if (VIS.Env.getCtx().getAD_User_ID() == data.tables[0].rows[i].cells["ad_user_id"] && this.gridTable.AD_Tab_ID == data.tables[0].rows[i].cells["ad_tab_id"]) {\n              queryCode = data.tables[0].rows[i].cells["code"];\n            }\n          }\n\n          //var queryCode = VIS.DB.executeScalar(sqlDefaultSearch);\n\n          if (queryCode) {\n            if (where.length > 0) {\n              where = where + " AND " + queryCode;\n            } else {\n              where = queryCode;\n            }\n          }\n        }\n        //this.gridTable.setSelectWhereClause(where.toString());\n        //this.gridTable.open(maxRows);\n        //    // console.log("open");\n        //}\n        //else {\n        //    this.gridTable.setSelectWhereClause(where.toString());\n        //    this.gridTable.open(maxRows);\n        //}\n        // console.log("open");\n      }\n\n      //this.currentRow = -1;//reset\n      this.gridTable.setSelectWhereClause(where.toString());\n      this.gridTable.open(maxRows);\n    }\n    return success;\n  };\n  GridTab.prototype.dataRefresh = function () {\n    var row = this.currentRow;\n    var record = this.gridTable.dataRefresh(row);\n    this.setCurrentRow(row, true);\n    return record;\n  };\n  GridTab.prototype.dataRefreshAll = function () {\n    /* Query */\n    this.mDataStatusEvent = null; //reset \n    this.getTableModel().dataRefreshAll();\n  };\n  GridTab.prototype.dataIgnore = function () {\n    if (this.gridTable.dataIgnore(true)) {\n      this.setCurrentRow(this.currentRow, false); //  re-load data\n      if (this.currentRow < 0) this.currentRow = 0;\n      this.IsSharedAccess();\n      this.gridTable.fireDataStatusIEvent("Ignored", "");\n    }\n\n    //log.fine("#" + m_vo.TabNo + "- fini");\n  }; //  dataIgnore\n\n  GridTab.prototype.getLinkWhereClause = function () {\n    var where = "";\n    if (this.getIsDetail()) {\n      var lc = this.getLinkColumnName();\n      if (lc.equals("")) {\n        //log.Warning("No link column");\n        if (where.length > 0) where += " AND ";\n        where += " 2=3";\n      } else {\n        var value = VIS.context.getTabRecordContext(this.vo.windowNo, this.getParentTabNo(), lc, true);\n        lc = this.getTableName() + "." + lc;\n\n        //\tCheck validity\n        if (value.length == 0) {\n          //log.Warning("No value for link column " + lc);\n          if (where.length > 0) where += " AND ";\n          where += " 2=4";\n        } else {\n          //\twe have column and value\n          if (where.length > 0) where += " AND ";\n          if ("NULL".equals(value.toUpper())) {\n            where += lc + " IS NULL ";\n            //log.Severe("Null Value of link column " + lc);\n          } else {\n            where += lc + "=";\n            if (lc.endsWith("_ID")) where += value;else where += "\'" + value + "\'";\n          }\n        }\n      }\n    } //\tisDetail\n    return where;\n  };\n  GridTab.prototype.SetSelectedNode = function (selectedNode) {\n    this.gridTable.selectedTreeNode = selectedNode;\n  };\n  GridTab.prototype.SetIsSummaryNode = function (isSummary) {\n    this.gridTable.isSummaryyNode = isSummary;\n  };\n  GridTab.prototype.dataSave = function (manualCmd) {\n    try {\n      //check if current tab and its parents have changed.\n      // if (hasChangedCurrentTabAndParents())\n      ///   return false;\n\n      var retValue = this.gridTable.dataSave(manualCmd) == VIS.GridTable.prototype.SAVE_OK;\n      if (manualCmd) this.setCurrentRow(this.currentRow, false);\n      if (retValue) {\n\n        // If the parent of the tab is also based on the same table, then we\n        // need to refresh the parent tab. \n        // an example is BPartner->Vendor->Location tab. \n        // When Vendor is changed, the BPartner needs to be refreshed,\n        // otherwise, the resultSet of BPartner and its DB will be out of Sync \n        // when Location is being updated.\n        //refreshParentsSameTable();\n      }\n      return retValue;\n    } catch (e) {\n      this.log.log(VIS.Logging.Level.SEVERE, "#" + this.vo.tabNo + " - row=" + this.currentRow, e);\n    }\n    return false;\n  }; //  dataSave\n\n  GridTab.prototype.dataNew = function (copy) {\n    if (!this.getIsInsertRecord()) {\n      this.log.warning("Insert Not allowed in TabNo=" + this.vo.tabNo);\n      return null;\n    }\n    //\tPrevent New Where Main Record is processed\n    if (this.vo.tabNo > 0) {\n      var processed = "Y".equals(VIS.context.getWindowContext(this.vo.windowNo, "Processed"));\n      //\tboolean active = "Y".equals(m_vo.ctx.getContext( m_vo.WindowNo, "IsActive"));\n      if (processed) {\n        this.log.warning("Not allowed in TabNo=" + this.vo.tabNo + " -> Processed=" + processed);\n        return null;\n      }\n      this.log.finest("Processed=" + processed);\n    }\n    var retValue = this.gridTable.dataNew(this.currentRow, copy);\n    if (!retValue) return retValue;\n    this.setCurrentRow(this.currentRow + 1, true);\n    //  process all Callouts (no dependency check - assumed that settings are valid)\n    var count = this.getFieldCount();\n    this.gridTable.setDisableNotification(true);\n    for (var i = 0; i < count; i++) this.processCallout(this.getField(i));\n    //  check validity of defaults\n    for (var i = 0; i < count; i++) {\n      //this.getField(i).refreshLookup();\n      // getField(i).validateValue();\n      this.getField(i).setError(false);\n    }\n    this.IsSharedAccess();\n    this.gridTable.setDisableNotification(false);\n    this.gridTable.fireDataStatusIEvent(copy ? "UpdateCopied" : "Insertdata", "");\n    return retValue;\n  }; // dataNew\n  GridTab.prototype.dataDelete = function (indices) {\n    var retValue = this.gridTable.dataDelete(indices, this.currentRow);\n    this.setCurrentRow(this.currentRow, true);\n    this.IsSharedAccess();\n    return retValue;\n  };\n  GridTab.prototype.findColumn = function (columnName) {\n    return this.gridTable.findColumn(columnName);\n  }; //findColumn\n\n  GridTab.prototype.navigate = function (tRow, fireEvents, force) {\n    var recid = -1;\n    var newRow = null;\n    if (!force) {\n      if (tRow === this.currentRow) {\n        return recid;\n      }\n      newRow = this.verifyRow(tRow);\n      if (newRow === this.currentRow) {\n        return recid;\n      }\n    }\n    newRow = newRow != null ? newRow : this.currentRow;\n    //  Check, if we have old uncommitted data\n    if (this.gridTable.dataSave(newRow, false)) {\n      recid = this.setCurrentRow(newRow, fireEvents);\n    }\n\n    //Check readolny status of record(if shared)\n    this.IsSharedAccess();\n    return recid;\n  }; //navigate\n\n  /**\r\n   * get shared record is readonly or not and set status on tab level.\r\n   * \r\n   * */\n  GridTab.prototype.IsSharedAccess = function () {\n    // Handle new record Case\n    if (this.gridTable.getIsInserting()) {\n      this.IsSharedReadOnly = false;\n      this.isCurrentRecordShare = false;\n      return;\n    }\n    var tableID = this.getAD_Table_ID();\n    var recordID = this.getRecord_ID();\n    if (recordID < 0 && this.getRecords().length && this.currentRow > -1 && this.getTableName() && this.getRecords()[this.currentRow]) {\n      recordID = this.getRecords()[this.currentRow][this.getTableName().toLower() + "_id"];\n    }\n    if (recordID && recordID < 0) {\n      return;\n    }\n    var that = this;\n    $.ajax({\n      async: false,\n      url: VIS.Application.contextUrl + "RecordShared/GetSharedRecordAccess",\n      data: {\n        AD_Table_ID: tableID,\n        Record_ID: recordID\n      },\n      success: function (data) {\n        data = JSON.parse(data);\n        data = data.split(\'_\');\n        if (data[0].toLowerCase() == \'true\') {\n          that.IsSharedReadOnly = true;\n        } else {\n          that.IsSharedReadOnly = false;\n        }\n        that.isCurrentRecordShare = data[1] == \'N\' ? false : true;\n      },\n      error: function (err) {\n        console.log(err);\n      }\n    });\n  };\n  GridTab.prototype.verifyRow = function (targetRow) {\n    var newRow = targetRow;\n    //  Table Open?\n    if (!this.gridTable.getIsOpen()) {\n      //log.severe ("Table " + m_mTable.getTableName() + " not open (Tab " + m_vo.AD_Tab_ID + ")");\n      return -1;\n    }\n    //  Row Count\n    var rows = this.getRowCount();\n    if (rows == 0) {\n      //log.fine("No Rows");\n      return -1;\n    }\n    if (newRow >= rows) {\n      newRow = rows - 1;\n      //log.fine("Set to max Row: " + newRow);\n    } else if (newRow < 0) {\n      newRow = 0;\n      //log.fine("Set to first Row");\n    }\n    return newRow;\n  }; //  verifyRow\n\n  GridTab.prototype.navigateRelative = function (rowChange) {\n    return this.navigate(this.currentRow + rowChange);\n  }; //  navigateRelative\n\n  GridTab.prototype.hasDependants = function (columnName) {\n    return this.depOnFieldColumn.indexOf(columnName) !== -1;\n  }; //hasDependend\n\n  GridTab.prototype.dataStatusChanged = function (e) {\n    var oldCurrentRow = e.getCurrentRow();\n    //  save it\n    //  when sorted set current row to 0\n    var msg = e.getAD_Message();\n    //if (msg != null && msg.equals("Sorted"))\n    //  setCurrentRow(0, true);\n    //  set current row\n    e.setCurrentRow(this.currentRow);\n    this.mDataStatusEvent = e;\n\n    //  Same row - update value\n    if (oldCurrentRow == this.currentRow) {\n      var field = this.gridTable.getField(e.getChangedColumn());\n      if (field != null) {}\n    } else\n      //  Redistribute Info with current row info\n      this.fireDataStatusChanged(this.mDataStatusEvent);\n  }; //dataStatusChanged\n\n  GridTab.prototype.fireDataStatusChanged = function (e) {\n    var listeners = this.mDataListenerList;\n    if (listeners.length == 0) return;\n\n    //  WHO Info\n    if (e.getCurrentRow() >= 0) {\n      e.Created = this.getValue("Created");\n      e.CreatedBy = this.getValue("CreatedBy");\n      e.Updated = this.getValue("Updated");\n      e.UpdatedBy = this.getValue("UpdatedBy");\n      e.Record_ID = this.getKeyID(e.getCurrentRow()); //this.getValue(this.keyColumnName);\n      //  Info\n      var info = new StringBuilder(this.getTableName());\n      //  We have a key column\n      if (this.keyColumnName != null && this.keyColumnName.length > 0) {\n        info.append(" - ").append(this.keyColumnName).append("=").append(e.Record_ID);\n      } else\n        //  we have multiple parents\n        {\n          for (var i = 0; i < this.parents.length; i++) {\n            var keyCol = this.parents[i];\n            info.append(" - ").append(keyCol).append("=").append(this.getValue(keyCol));\n          }\n        }\n      e.Info = info.toString();\n    }\n    e.setInserting(this.gridTable.getIsInserting());\n    //  Distribute/fire it\n    for (var j = 0; j < listeners.length; j++) {\n      //  DataStatusListener element : listeners)\n      listeners[j].dataStatusChanged(e);\n    }\n  }; //fire\n\n  /**\r\n   *  Process Field Change - evaluate Dependencies and process Callouts.\r\n   *\r\n   *  called from MTab.setValue or GridController.dataStatusChanged\r\n   *  @param changedField changed field\r\n   *  @return error message or ""\r\n   */\n  GridTab.prototype.processFieldChange = function (changedField) {\n    this.processDependencies(changedField);\n    return this.processCallout(changedField);\n  }; //  processFieldChange\n\n  /**\r\n   *  Evaluate Dependencies\r\n   *  @param changedField changed field\r\n   */\n  GridTab.prototype.processDependencies = function (changedField) {\n    var columnName = changedField.getColumnName();\n    //\tlog.trace(log.l4_Data, "Changed Column", columnName);\n\n    //  when column name is not in list of DependentOn fields - fini\n    if (!this.hasDependants(columnName)) return;\n\n    //  Get dependent MFields (may be because of display or dynamic lookup)\n    var list = this.getDependantFields(columnName);\n    for (var i = 0; i < list.length; i++) {\n      var dependentField = list[i];\n      //\tlog.trace(log.l5_DData, "Dependent Field", dependentField==null ? "null" : dependentField.getColumnName());\n      //  if the field has a lookup\n      if (dependentField != null && dependentField.getLookup() instanceof VIS.MLookup) {\n        var mLookup = dependentField.getLookup();\n        //\tlog.trace(log.l6_Database, "Lookup Validation", mLookup.getValidation());\n        //  if the lookup is dynamic (i.e. contains this columnName as variable)\n        if (mLookup.getValidation().indexOf("@" + columnName + "@") != -1) {\n          // If C_BPartner_ID and C_BPartner_LOcation_ID is used  in same window, \n          //then on change C_BPartner_ID system clears value of C_BPartner_LOcation_ID, bcoz C_BPartner_LOcation_ID is depednet on C_BPartner_ID.\n          // then in this case we will not refresh lookup of Location.\n          if (columnName == "C_BPartner_ID" && dependentField.getColumnName() == "C_BPartner_Location_ID") {\n            continue;\n          } else {\n            if (dependentField.getValue() == null) {\n              continue;\n            }\n            this.log.fine(columnName + " changed - " + dependentField.getColumnName() + " set to null");\n            if (dependentField.getValue() == null) {\n              return;\n            }\n            //  invalidate current selection\n            this.setValue(dependentField, null);\n          }\n        }\n      }\n      if (dependentField != null && dependentField.getLookup() instanceof VIS.MLocatorLookup) {\n\n        //var locLookup = dependentField.getLookup();\n        //var valueAsInt = 0;\n        //if (changedField.getValue() != null && changedField.getValue() instanceof Number)\n        //    valueAsInt = changedField.getValue();\n        //if( columnName.equals( "M_Warehouse_ID" ) )\n        //{\n        //    locLookup.setOnly_Warehouse_ID( valueAsInt );\n        //}\n        //if( columnName.equals( "M_Product_ID" ) )\n        //{\n        //    locLookup.setOnly_Product_ID( valueAsInt );\n        //}\n        //locLookup.setOnly_Outgoing(Env.getCtx().isSOTrx(m_vo.WindowNo ));\n        //locLookup.refresh();\n        //if( !locLookup.isValid( dependentField.getValue() ) )\n        //    setValue(dependentField, null);\n      }\n    } //  for all dependent fields\n  }; //  processDe\n\n  /**************************************************************************\r\n   *  Process Callout(s).\r\n   *  <p>\r\n   *  The Callout is in the string of\r\n   *  "class.method;class.method;"\r\n   * If there is no class name, i.e. only a method name, the class is regarded\r\n   * as CalloutSystem.\r\n   *\r\n   * @param field field\r\n   * @return error message or ""\r\n   * @see VIS.app.CalloutEngine\r\n   */\n  GridTab.prototype.processCallout = function (field) {\n    var callout = field.getCallout();\n    if (callout.length == 0) return "";\n    //\n    if (this.getIsProcessed())\n      //\tonly active records\n      return ""; //\t"DocProcessed";\n\n    var value = field.getValue();\n    var oldValue = field.getOldValue();\n    //log.fine(field.getColumnName() + "=" + value\n    //\t\t+ " (" + callout + ") - old=" + oldValue);\n\n    var st = new VIS.StringTokenizer(callout, ";,", false);\n    while (st.hasMoreTokens())\n    //  for each callout\n    {\n      var cmd = st.nextToken().trim();\n      var call = null;\n      var method = null;\n      var cClass = cmd;\n      var methodStart = cmd.lastIndexOf(".");\n      try {\n        if (methodStart != -1)\n          //  no class\n          {\n            cClass = cmd.substring(0, methodStart).replace("ViennaAdvantage", "VIS").replace("VAdvantage", "VIS");\n            var type = VIS.Utility.getFunctionByName(cClass, window);\n            if (!type && !cClass.startsWith("VIS")) {\n              //if callout is not found in module then try to run from ViennaAdvantage or VIS\n              // and callout class has module  prefix\n              cClass = "VIS" + cClass.substring(cClass.indexOf("."));\n              type = VIS.Utility.getFunctionByName(cClass, window);\n            }\n            call = new type();\n            method = cmd.substring(methodStart + 1);\n          }\n      } catch (e) {\n        this.log.log(Level.SEVERE, cClass, e);\n        return "Callout Invalid: " + cClass + " (" + e.toString() + ")";\n      }\n      if (call == null || method == null || method.length == 0) return "Callout Invalid: " + method;\n      var retValue = "";\n      try {\n        retValue = call.start(VIS.context, method, this.vo.windowNo, this, field, value, oldValue);\n      } catch (e) {\n        this.log.log(VIS.Logging.Level.SEVERE, "start", e);\n        retValue = "Callout Invalid: " + e.toString();\n        return retValue;\n      }\n      if (retValue && !retValue.toString().equals(""))\n        //\tinterrupt on first error\n        {\n          if (retValue instanceof Error) {\n            retValue = retValue.toString() + "-> " + cmd;\n          }\n          this.log.warning(retValue);\n          return retValue;\n        }\n    } //  for each callout\n    return "";\n  };\n\n  /// <summary>\n  /// //return Total Fields in Tab\n  /// </summary>\n  /// <returns></returns>\n  // <author>Karan</author>\n  GridTab.prototype.getFieldCount = function () {\n    return this.gridTable.getColumnCount();\n  };\n\n  /// <summary>\n  ///Get Chat_ID for this record.\n  /// </summary>\n  /// <returns>return ID or 0, if not found</returns>\n  /// <author>Karan</author>\n  GridTab.prototype.getCM_ChatID = function () {\n    if (this.chats == null || this.chats.length == 0) this.loadChats(); //call chat function\n    if (this.chats == null) return 0;\n    //get chatId\n    var key = this.getRecord_ID(); // _gridTable.GetKeyID(CurrentRow);\n    //The given key was not present in the dictionary. Error\n    //int value = Utility.Util.GetValueOfInt(this.chats[key].ToString());\n    if (this.hasKey(this.chats, key)) {\n      //get chat key value\n      var value = VIS.Utility.Util.getValueOfInt(this.getKeyValue(this.chats, key));\n      return value;\n    }\n    return 0;\n  };\n\n  /// <summary>\n  ///Get CM_SubScribedID for this record.\n  /// </summary>\n  /// <returns>return ID or 0, if not found</returns>\n  /// <author>Karan</author>\n  GridTab.prototype.getCM_SubScribedID = function () {\n    if (this._subscribe == null || this._subscribe.length == 0) this.loadSubscribe(); //call subscribe function\n    if (this._subscribe == null) return 0;\n    //get subscribeId\n    var key = this.getRecord_ID(); //\n\n    if (this.hasKey(this._subscribe, key)) {\n      //get subscribe key value\n      var value = VIS.Utility.Util.getValueOfInt(this.getKeyValue(this._subscribe, key));\n      return value;\n    }\n    return 0;\n  };\n\n  /// <summary>\n  ///Get Chat_ID for this record.\n  /// </summary>\n  /// <returns>return ID or 0, if not found</returns>\n  /// <author>Karan</author>\n  ///<date>26-may-2014<date>\n  GridTab.prototype.hasKey = function (array, key) {\n    for (var i = 0; i < array.length; i++) {\n      if (array[i].ID === key) return true;\n    }\n    return false;\n\n    //var ret = array[key];\n    //if (ret) { return true; }\n\n    //return false;s\n  };\n\n  /// <summary>\n  ///Get Chat_ID for this record.\n  /// </summary>\n  /// <returns>return ID or 0, if not found</returns>\n  /// <author>Karan</author>\n  ///<date>26-may-2014<date>\n  GridTab.prototype.getKeyValue = function (array, key) {\n    for (var i = 0; i < array.length; i++) {\n      if (array[i].ID === key) return array[i].value;\n    }\n    return 0;\n  };\n\n  /**\r\n   *  Get Commit Warning\r\n   *  @return commit warning\r\n   */\n  GridTab.prototype.getCommitWarning = function () {\n    return this.vo.CommitWarning;\n  };\n\n  /// <summary>\n  /// return filed by index\n  /// </summary>\n  /// <param name="index"></param>\n  /// <returns></returns>\n  GridTab.prototype.getField = function (index) {\n    return this.gridTable.getField(index);\n  };\n  GridTab.prototype.dispose = function () {\n    this.gTab = null;\n    this.vo = null;\n    this.gridTable.removeDataStatusListener(this);\n    this.gridTable.dispose();\n    this.gridTable = null;\n    if (this.mDataListenerList != null) {\n      for (var i = this.mDataListenerList.length - 1; i >= 0; i--) {\n        this.mDataListenerList[i] = null;\n        this.mDataListenerList.splice(i, 1);\n      }\n    }\n  };\n\n  /// <summary>\n  ///Record Is Locked\n  /// </summary>\n  /// <returns></returns>\n  GridTab.prototype.getIsLocked = function () {\n    if (!VIS.MRole.getIsPersonalLock()) return false;\n    if (this.isDataLoading) return false;\n    if (this._Lock == null) this.loadLocks();\n    if (this._Lock == null || this._Lock.length == 0) return false;\n    //\n    var key = this.getRecord_ID();\n    return this._Lock.indexOf(key) > -1;\n  };\n\n  /**************************************************************************\r\n  * \tLoad Locks for Table and User\r\n  */\n  GridTab.prototype.loadLocks = function () {\n    var AD_User_ID = VIS.context.getAD_User_ID();\n    //log.Fine("#" + _vo.tabNo + " - AD_User_ID=" + AD_User_ID);\n    if (!this.canHaveAttachment()) return;\n    var sql = "VIS_108";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@AD_User_ID", AD_User_ID);\n    param[1] = new VIS.DB.SqlParam("@AD_Table_ID", this.vo.AD_Table_ID);\n    var dr = null;\n    try {\n      if (this._Lock == null) this._Lock = [];else this._Lock.length = 0;\n      dr = executeReader(sql, param);\n      while (dr.read()) {\n        var key = VIS.Utility.Util.getValueOfInt(dr.get("Record_ID"));\n        this._Lock.push(key);\n      }\n      dr.close();\n      dr = null;\n    } catch (e) {\n      this.log.log(Level.SEVERE, sql, e);\n    }\n    this.log.fine("#" + this._Lock.length);\n  };\n\n  /// <summary>\n  /// Load Subscribed record\'s IDs for this table\n  /// </summary>\n  /// <author>Karan</author>\n  ///Date: 10-July-2014\n\n  GridTab.prototype.loadSubscribe = function () {\n    //if doesn\'t have attachment\n    if (!this.canHaveAttachment()) return; //return nothing\n    //set query\n    //var sql = "SELECT CM_Subscribe_ID, Record_ID FROM CM_Subscribe WHERE AD_User_ID=" + VIS.context.getAD_User_ID() + " AND AD_Table_ID=" + this.getAD_Table_ID();\n    var sql = "VIS_109";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@AD_User_ID", VIS.context.getAD_User_ID());\n    param[1] = new VIS.DB.SqlParam("@AD_Table_ID", this.getAD_Table_ID());\n    var dr = null;\n    try {\n      this._subscribe = [];\n      if (this._subscribe == null)\n        //create new list for chat\n        {\n          this._subscribe = {};\n        } else\n        //if contain chat then clear list\n        {\n          this._subscribe.length = 0;\n        }\n\n      //execute query\n      dr = executeReader(sql, param);\n      var key, value; //for recordId and chatId\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(1));\n        value = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        this._subscribe.push({\n          ID: key,\n          value: value\n        });\n      }\n      dr = null;\n\n      //int key, value;//for recordId and chatId\n      //while (dr.Read())\n      //{\n      //    key = Util.GetValueOfInt(dr["Record_ID"].ToString());\n      //    value = Util.GetValueOfInt(dr["CM_Subscribe_ID"].ToString());\n      //    _subscribe[key] = value;\n      //}\n      //dr.Close();\n      //dr = null;\n    } catch (e) {\n      //if (dr != null)\n      //{\n      //    dr.Close();\n      //    dr = null;\n      //}\n      //// MessageBox.Show("No Chat");\n      //log.Log(Level.SEVERE, sql, e);\n    }\n  };\n\n  /// <summary>\n  /// Load Chats for this table\n  /// </summary>\n  /// <author>Karan</author>\n  ///Date: 23-May-2014\n  GridTab.prototype.loadDocuments = function () {\n    //if doesn\'t have attachment\n    if (!this.canHaveAttachment()) return; //return nothing\n    //set query\n    //var sql = "SELECT vadms_windowdoclink_id,record_id FROM vadms_windowdoclink WHERE ad_table_id=" + this.getAD_Table_ID();\n    //var sql = "SELECT vadms_windowdoclink_id,record_id FROM vadms_windowdoclink wdl JOIN vadms_document doc "\n    //         + " ON wdl.VADMS_Document_ID  =doc.VADMS_Document_ID  WHERE doc.vadms_docstatus!=\'DD\' AND ad_table_id=" + this.getAD_Table_ID();\n\n    var sql = "VIS_110";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@ad_table_id", this.getAD_Table_ID());\n    var dr = null;\n    try {\n      this.viewDocument = [];\n      if (this.viewDocument == null)\n        //create new list for chat\n        {\n          this.viewDocument = {};\n        } else\n        //if contain chat then clear list\n        {\n          this.viewDocument.length = 0;\n        }\n      dr = executeReader(sql, param);\n      var key, value; //for recordId and chatId\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(1));\n        value = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        this.viewDocument.push({\n          ID: key,\n          value: value\n        });\n      }\n      dr = null;\n    } catch (e) {}\n    ;\n  };\n  GridTab.prototype.loadChats = function () {\n    //if doesn\'t have attachment\n    if (!this.canHaveAttachment()) return; //return nothing\n    //set query\n    //var sql = "SELECT CM_Chat_ID, Record_ID FROM CM_Chat WHERE AD_Table_ID=" + this.getAD_Table_ID();\n    var sql = "VIS_111";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@AD_Table_ID", this.getAD_Table_ID());\n    var dr = null;\n    try {\n      this.chats = [];\n      if (this.chats == null)\n        //create new list for chat\n        {\n          this.chats = {};\n        } else\n        //if contain chat then clear list\n        {\n          this.chats.length = 0;\n        }\n      dr = executeReader(sql, param);\n      var key, value; //for recordId and chatId\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(1));\n        value = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        this.chats.push({\n          ID: key,\n          value: value\n        });\n      }\n      dr = null;\n    } catch (e) {}\n    ;\n  };\n\n  /// <summary>\n  /// Can this tab have Attachments?.\n  /// </summary>\n  /// <returns>bool type true if record can have attachment</returns>\n  /// <author>Karan</author>\n  ///Date: 23-May-2014\n  GridTab.prototype.canHaveAttachment = function () {\n    if (this.keyColumnName.endsWith("_ID")) return true;\n    return false;\n  };\n\n  /// <summary>\n  /// Returns true, if current row has a Chat\n  /// </summary>\n  /// <author>Karan</author>\n  /// <returns>Bool Type (return true if record has chat)</returns>\n  ///<Date> 27-May-2014 </Date> \n  GridTab.prototype.hasChat = function () {\n    if (this.isDataLoading) return false;\n    if (this.chats == null) this.loadChats(); //call load chat function\n    if (this.chats == null) return false;\n    //get chat id\n    var key = this.getRecord_ID(); //ridTable.GetKeyID(CurrentRow);\n\n    return this.hasKey(this.chats, key); //return chatId\n  };\n  GridTab.prototype.hasDocument = function () {\n    if (this.isDataLoading) return false;\n    if (this.viewDocument == null) this.loadDocuments(); //call load chat function\n    if (this.viewDocument == null) return false;\n    //get chat id\n    var key = this.getRecord_ID(); //ridTable.GetKeyID(CurrentRow);\n\n    return this.hasKey(this.viewDocument, key); //return chatId\n  };\n\n  /**\r\n   * Check if currect record is shared with other organization or not\r\n   * */\n  GridTab.prototype.hasShared = function (reload) {\n    if (this.isDataLoading) return false;\n    if (this.sharedRecords == null || reload == true) this.loadShared(); //call load shared record function\n    if (this.sharedRecords == null) return false;\n    //get chat id\n    var key = this.getRecord_ID(); //ridTable.GetKeyID(CurrentRow);\n    if (key == -1) key = this.getDummyRecordID();\n    return this.hasKey(this.sharedRecords, key); //return chatId\n  };\n\n  /// <summary>\n  /// Returns true, if current row has a Subscribe\n  /// </summary>\n  /// <author>Karan</author>\n  /// <returns>Bool Type (return true if record has chat)</returns>\n  ///<Date> 10-July-2014 </Date> \n  GridTab.prototype.HasSubscribed = function () {\n    if (this.isDataLoading) return false;\n    if (this._subscribe == null) this.loadSubscribe(); //call load chat function\n    if (this._subscribe == null) return false;\n    //get chat id\n    var key = this.getRecord_ID(); //ridTable.GetKeyID(CurrentRow);\n    return this.hasKey(this._subscribe, key); //return subscribeId\n  };\n\n  /**\r\n   * Prepare list of shared records of current table\r\n   * this list is used to set icon of shared record icon on action panel\r\n   * \r\n   * */\n  GridTab.prototype.loadShared = function () {\n    if (VIS.MRole.getIsShowSharedRecord() == true) {\n      var sqlQry = "VIS_157";\n      var param = [];\n      // param[0] = new VIS.DB.SqlParam("@Org_ID", VIS.context.getAD_Org_ID());\n      param[0] = new VIS.DB.SqlParam("@AD_Table_ID", this.getAD_Table_ID());\n      var dr = null;\n      try {\n        this.sharedRecords = [];\n        dr = executeReader(sqlQry, param);\n        var key;\n        while (dr.read()) {\n          key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n          this.sharedRecords.push({\n            ID: key\n          });\n        }\n        dr = null;\n      } catch (ex) {}\n    }\n  };\n\n  //GridTab.prototype.loadSharedWithCurrent = function () {\n  //    var sqlQry = "VIS_156";\n  //    var param = [];\n  //    param[0] = new VIS.DB.SqlParam("@Org_ID", VIS.context.getAD_Org_ID());\n  //    param[1] = new VIS.DB.SqlParam("@AD_Table_ID", this.getAD_Table_ID());\n\n  //    var dr = null;\n  //    try {\n  //        this.sharedRecordsWithLoginOrg = [];\n\n  //        dr = executeReader(sqlQry, param);\n  //        var key;\n  //        while (dr.read()) {\n  //            key = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n  //            this.sharedRecordsWithLoginOrg.push({ ID: key });\n  //        }\n\n  //        dr = null;\n\n  //    }\n  //    catch (ex) {\n  //    }\n  //};\n\n  //Lakhwinder\n  GridTab.prototype.loadAttachments = function () {\n    //log.fine("#" + m_vo.TabNo);\n    if (!this.canHaveAttachment()) return;\n\n    //var sqlQry = "SELECT distinct att.AD_Attachment_ID, att.Record_ID FROM AD_Attachment att"\n    //       + " INNER JOIN AD_Attachmentline al ON (al.AD_Attachment_id=att.AD_Attachment_id)"\n    //       + " WHERE att.AD_Table_ID=" + this.getAD_Table_ID();\n\n    var sqlQry = "VIS_112";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@AD_Table_ID", this.getAD_Table_ID());\n    var dr = null;\n    try {\n      this._attachments = [];\n      dr = executeReader(sqlQry, param);\n      var key, value;\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(1));\n        value = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        this._attachments.push({\n          ID: key,\n          value: value\n        });\n      }\n      dr = null;\n    } catch (ex) {}\n  };\n  GridTab.prototype.loadMarking = function () {\n    //log.fine("#" + m_vo.TabNo);\n\n    // var sqlQry = "SELECT AD_ExportData_ID, Record_ID FROM AD_ExportData WHERE AD_Table_ID=" + this.getAD_Table_ID()\n    var sqlQry = "VIS_113";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@AD_Table_ID", this.getAD_Table_ID());\n    var dr = null;\n    try {\n      this._marking = [];\n      dr = executeReader(sqlQry, param);\n      var key, value;\n      while (dr.read()) {\n        key = VIS.Utility.Util.getValueOfInt(dr.getString(1));\n        value = VIS.Utility.Util.getValueOfInt(dr.getString(0));\n        this._marking.push({\n          ID: key,\n          value: value\n        });\n      }\n      dr = null;\n    } catch (ex) {}\n  };\n  GridTab.prototype.hasAttachment = function () {\n    if (this.isDataLoading) return false;\n    if (this._attachments == null) this.loadAttachments();\n    if (this._attachments == null) return false;\n    //\n    var key = this.getRecord_ID(); // _gridTable.GetKeyID(CurrentRow);\n    return this.hasKey(this._attachments, key);\n  };\n  GridTab.prototype.hasMarked = function () {\n    if (this.isDataLoading) return false;\n    if (this._marking == null) this.loadMarking();\n    if (this._marking == null) return false;\n    //\n    var key = this.getRecord_ID(); // _gridTable.GetKeyID(CurrentRow);\n    return this.hasKey(this._marking, key);\n  };\n\n  /// <summary>\n  /// \n  /// </summary>\n  /// <author>Karan</author>\n  /// <returns> </returns>\n  ///<Date> 27-May-2014 </Date> \n  GridTab.prototype.loadData = function (windowVo) {\n    //this.isDataLoading = true;\n    //this.isExportLoading = true;\n    //var sb = [];\n    this.isDataLoading = false;\n    this.isExportLoading = false;\n    this._attachments = this.gTab._attachments;\n    this.chats = this.gTab._chats;\n    this._lock = this.gTab._pAccess;\n    this._subscribe = this.gTab._subscribe;\n    this.viewDocument = this.gTab._documents;\n    this.sharedRecords = this.gTab._sharedRec;\n    //this.sharedRecordsWithLoginOrg = this.gTab._sharedWithLoginRec;\n    //var tableIndex = {};\n    //var ServerValues = {};\n    //ServerValues.IsExportData = false;\n    //ServerValues.IsAttachment = false;\n    //ServerValues.IsChat = false;\n    //ServerValues.IsPLock = false;\n    //ServerValues.IsSubscribeRecord = false;\n    //ServerValues.IsViewDocument = false;\n\n    //if (windowVo.IsExportData) {\n    //    tableIndex.AD_EXPORTDATA = sb.length;\n    //    ServerValues.IsExportData = true;\n    //    sb.push("");\n    //    //sb.push("SELECT AD_EXPORTDATA_ID,RECORD_ID, AD_ColOne_ID FROM AD_ExportData WHERE AD_Table_ID=" + this.getAD_Table_ID());\n    //    //sb.push("SELECT AD_EXPORTDATA_ID,RECORD_ID, AD_ColOne_ID FROM AD_ExportData WHERE AD_Table_ID=" + this.getAD_Table_ID());\n\n    //}\n\n    //if (this.canHaveAttachment()) {\n\n    //    if (windowVo.IsAttachment) {\n    //        ServerValues.IsAttachment = true;\n    //        tableIndex.AD_Attachment = sb.length;\n    //        sb.push("");\n    //        //sb.push("SELECT distinct att.AD_Attachment_ID, att.Record_ID FROM AD_Attachment att  INNER JOIN AD_AttachmentLine al ON (al.AD_Attachment_id=att.AD_Attachment_id)  WHERE att.AD_Table_ID=" + this.getAD_Table_ID());\n    //    }\n    //    if (windowVo.IsChat) {\n    //        ServerValues.IsChat = true;\n    //        tableIndex.CM_Chat = sb.length;\n    //        sb.push("");\n    //        //sb.push("SELECT CM_Chat_ID, Record_ID FROM CM_Chat WHERE AD_Table_ID=" + this.getAD_Table_ID());\n    //    }\n    //    if (VIS.MRole.getIsPersonalLock()) {\n    //        ServerValues.IsPLock = true;\n    //        tableIndex.AD_Private_Access = sb.length;\n    //        sb.push("");\n    //        //sb.push("SELECT Record_ID FROM AD_Private_Access WHERE AD_User_ID=" + VIS.context.getAD_User_ID() + " AND AD_Table_ID=" + this.getAD_Table_ID() + " AND IsActive=\'Y\' ORDER BY Record_ID");\n    //    }\n    //    if (windowVo.IsSubscribeRecord) {\n    //        ServerValues.IsSubscribeRecord = true;\n    //        tableIndex.Cm_Subscribe = sb.length;\n    //        sb.push("");\n    //        //sb.push("Select cm_Subscribe_ID,Record_ID from CM_Subscribe where AD_User_ID=" + VIS.context.getAD_User_ID() + " AND ad_Table_ID=" + this.getAD_Table_ID());\n    //    }\n    //    if (windowVo.IsViewDocument && window.VADMS) {\n    //        ServerValues.IsViewDocument = true;\n    //        tableIndex.vadms_windowdoclink = sb.length;\n    //        sb.push("");\n    //        //sb.push("SELECT vadms_windowdoclink_id, record_id FROM VADMS_WindowDocLink wdl JOIN vadms_document doc ON wdl.VADMS_Document_ID  =doc.VADMS_Document_ID WHERE doc.vadms_docstatus!=\'DD\' AND AD_Table_ID =" + this.getAD_Table_ID());\n    //    }\n    //}\n    //ServerValues.AD_Table_ID = this.getAD_Table_ID();\n    //ServerValues.AD_User_ID = VIS.context.getAD_User_ID();\n\n    // sb = sb.join("~");\n\n    //var ds = null;\n    //try {\n    //ds = executeDataSet(sb);\n\n    //$.ajax({\n    //    type: \'Get\',\n    //    //async: false,\n    //    url: VIS.Application.contextUrl + "Form/LoadData",\n    //    data: { value: JSON.stringify(ServerValues) },\n    //    success: function (data) {\n    //        dataSet = new VIS.DB.DataSet().toJson(data);\n    //    },\n    //});\n\n    //if (ds != null && ds.getTables().length > 0) {\n    //    //LoadExtraData(ds.Tables[0]);\n    //    if (this.canHaveAttachment()) {\n\n    //        var key, value;\n    //        if (windowVo.IsAttachment) {\n\n    //            var _dtAttachment = ds.getTables()[tableIndex.AD_Attachment];\n    //            elements = null;\n    //            //Attachment\n\n    //            if (this._attachments == null)\n    //                this._attachments = [];\n    //            else\n    //                this._attachments.length = 0;\n\n    //            for (var i = 0; i < _dtAttachment.getRows().length; i++) {\n    //                key = VIS.Utility.Util.getValueOfInt(_dtAttachment.getRows()[i].getCell("Record_ID"));\n    //                value = VIS.Utility.Util.getValueOfInt(_dtAttachment.getRows()[i].getCell("AD_Attachment_ID"));\n    //                this._attachments.push({ ID: key, value: value });\n    //            }\n    //        }\n\n    //        if (windowVo.IsChat) {\n\n    //            var _dtChat = ds.getTables()[tableIndex.CM_Chat];\n    //            //Chat\n    //            if (this.chats == null)\n    //                //create new list for chat\n    //                this.chats = [];\n    //            else\n    //                //if contain chat then clear list\n    //                this.chats.length = 0;\n    //            //execute query\n    //            for (var i = 0; i < _dtChat.getRows().length; i++) {\n    //                key = VIS.Utility.Util.getValueOfInt(_dtChat.getRows()[i].getCell("Record_ID"));\n    //                value = VIS.Utility.Util.getValueOfInt(_dtChat.getRows()[i].getCell("CM_Chat_ID"));\n    //                this.chats.push({ ID: key, value: value });\n    //            }\n    //        }\n\n    //        if (VIS.MRole.getIsPersonalLock()) {\n\n    //            var _dtLocked = ds.getTables()[tableIndex.AD_Private_Access];\n    //            //Locks\n    //            //this._Lock = [];\n    //            if (this._Lock == null)\n    //                this._Lock = [];\n    //            else\n    //                this._Lock.length = 0;\n\n    //            for (var i = 0; i < _dtLocked.getRows().length; i++) {\n    //                key = VIS.Utility.Util.getValueOfInt(_dtLocked.getRows()[i].getCell("Record_ID"));\n    //                this._Lock.push(key);\n    //            }\n    //            //end Lock\n    //        }\n    //        if (windowVo.IsSubscribeRecord) {\n\n    //            var _dtSubscribe = ds.getTables()[tableIndex.Cm_Subscribe];\n    //            //Subscricbe\n    //            if (this._subscribe == null)\n    //                this._subscribe = [];\n    //            else\n    //                this._subscribe.length = 0;\n\n    //            for (var i = 0; i < _dtSubscribe.getRows().length; i++) {\n    //                key = VIS.Utility.Util.getValueOfInt(_dtSubscribe.getRows()[i].getCell("Record_ID"));\n    //                value = VIS.Utility.Util.getValueOfInt(_dtSubscribe.getRows()[i].getCell("CM_Subscribe_ID"));\n    //                this._subscribe.push({ ID: key, value: value });\n    //            }\n    //        }\n\n    //        if (windowVo.IsViewDocument) {\n\n    //            //var _dtViewDocument = ds.getTables()[tableIndex.vadms_windowdoclink];\n    //            //  //ViewDocument\n    //            //if (this.viewDocument == null)\n    //            //    this.viewDocument = [];\n    //            //else\n    //            //    this.viewDocument.length=0;\n\n    //            //for (var i = 0; i < _dtViewDocument.getRows().length; i++) {\n    //            //    key = VIS.Utility.Util.getValueOfInt(_dtViewDocument.getRows()[i].getCell("Record_ID"));\n    //            //    value = VIS.Utility.Util.getValueOfInt(_dtViewDocument.getRows()[i].getCell("vadms_windowdoclink_id"));\n    //            //    this.viewDocument.push({ ID: key, value: value });\n    //            //}\n\n    //        }\n\n    //        // this._attachments = [];\n\n    //        this.isDataLoading = false;\n    //        this.isExportLoading = false;\n    //        tableIndex = null;\n    //        // sb = null;\n    //    }\n\n    //}\n    //else {\n    //    this.isDataLoading = false;\n    //    this.isExportLoading = false;\n    //}\n    //}\n    //catch (e) {\n    //    this.isDataLoading = false;\n    //    this.isExportLoading = false;\n    //}\n  };\n\n  /// <summary>\n  /// Lock Record\n  /// </summary>\n  /// <param name="ctx">ctx context</param>\n  /// <param name="Record_ID"></param>\n  /// <param name="locks">true if lock, otherwise unlock</param>\n  GridTab.prototype.locks = function (ctx, Record_ID, locks) {\n    var AD_User_ID = ctx.getAD_User_ID();\n    //log.Finer("Lock=" + locks + ", AD_User_ID=" + AD_User_ID\n    //+ ", AD_Table_ID=" + _vo.AD_Table_ID + ", Record_ID=" + Record_ID);\n\n    VIS.dataContext.updateInsertLocks(AD_User_ID, this.vo.AD_Table_ID, Record_ID, locks);\n    this.loadLocks();\n  };\n  GridTab.prototype.setRecordStatus = function (data) {\n    var aaa = data;\n  };\n\n  //********************* END *************************//\n\n  //****************************************************//\n  //**             GRID TABLE                        **//\n  //**************************************************//\n\n  /**\r\n  *\tGrid Table Model for data access including buffering.\r\n  *  - The following data types are handled\r\n  *\t\t\tInteger\t\tfor all IDs\r\n  *\t\t\tNumber\tfor all Numbers\r\n  *\t\t\tdate\tfor all Dates\r\n  *\t\t\tString\t\tfor all others\r\n  *  - The data is read via ajax request   and cached in m_buffer. Writes/updates\r\n  *   are via dynamically constructed SQL INSERT/UPDATE statements. The record\r\n  *   is re-read via the ajax request record only to get results of triggers.\r\n  *\r\n  *  - The model maintains and fires the requires TableModelEvent changes,\r\n  *   the DataChanged events (loading, changed, etc.)\r\n  *   as well as Vetoable Change event "RowChange"\r\n  *   (for row changes initiated by moving the row in the table grid).\r\n  *\r\n  */\n\n  function GridTable(gTable) {\n    this.gTable = gTable;\n    this.readOnly = this.gTable._readOnly;\n    this.AD_Table_ID = gTable._AD_Table_ID;\n    this.deleteable = this.gTable._deleteable;\n    this.gridFields = [];\n    this.keyColumnName = "";\n    this.isOpen = false;\n    this.inserting = false;\n    this.SQL_Select = "";\n    this.SQL_Count = "";\n    this.SQL = "";\n    this.bufferList = [];\n    this.defaultModel = {};\n    this.pazeSize = VIS.Env.getWINDOW_PAGE_SIZE();\n    this.newRow = -1;\n    this.compareDB = true;\n    this.treeNode_ID = 0;\n    this.treeTable_ID = 0;\n    this.treeID = 0;\n    this.selectedTreeNode = 0;\n    this.ShowSummaryNodes = false;\n    this.isSummaryyNode = false;\n    this.isZoomAction = false;\n    /* Paging */\n    this.currentPage;\n    this.dopaging;\n    gTable = null;\n    this.mSortList;\n    this.AD_Tab_ID = 0;\n    this.log = VIS.Logging.VLogger.getVLogger("VIS.GridTable");\n    //this.outerOrderClause = "";\n    this.card_ID = 0;\n    this.lastFocus = null;\n  }\n  ;\n  GridTable.prototype.ctx = VIS.context; //\tthe only OK condition\n\n  GridTable.prototype.SAVE_OK = \'O\'; //\tthe only OK condition\n  /** Save Error - E\t*/\n  GridTable.prototype.SAVE_ERROR = \'E\';\n  /** Save Access Error - A\t*/\n  GridTable.prototype.SAVE_ACCESS = \'A\';\n  /** Save Mandatory Error - M\t*/\n  GridTable.prototype.SAVE_MANDATORY = \'M\';\n  /** Save Abort Error - U\t*/\n  GridTable.prototype.SAVE_ABORT = \'U\';\n  /** Save Regex Error - R\t*/\n  GridTable.prototype.SAVE_REGEX_ERROR = \'R\';\n  GridTable.prototype.getReadOnly = function () {\n    return false;\n  }; //\n\n  GridTable.prototype.setAD_Tab_ID = function (tabid) {\n    this.AD_Tab_ID = tabid;\n  };\n  GridTable.prototype.getField = function (identifier) {\n    if (isNaN(identifier)) {\n      if (identifier == null || identifier.length == 0) return null;\n      var cols = this.gridFields.length;\n      for (var i = 0; i < cols; i++) {\n        var field = this.gridFields[i];\n        if (identifier.equals(field.getColumnName(), true)) {\n          return field;\n        }\n      }\n      //log.Log(Level.WARNING, "Not found: \'" + identifier + "\'");\n      return null;\n    } else {\n      if (identifier < 0 || identifier >= this.gridFields.length) return null;\n      return this.gridFields[identifier];\n    }\n  };\n  GridTable.prototype.getFieldById = function (fid) {\n    if (fid < 1) return null;\n    var cols = this.gridFields.length;\n    for (var i = 0; i < cols; i++) {\n      var field = this.gridFields[i];\n      if (fid === field.getAD_Field_ID()) {\n        return field;\n      }\n    }\n    return null;\n  };\n  GridTable.prototype.getIsInserting = function () {\n    return this.inserting;\n  }; //  isInserting\n\n  GridTable.prototype.getColumnCount = function () {\n    return this.gridFields.length;\n  }; //\n\n  GridTable.prototype.getFields = function () {\n    return this.gridFields;\n  };\n  GridTable.prototype.getWhereClause = function (rowData) {\n    var size = this.gridFields.length;\n    var singleRowWHERE = null;\n    var multiRowWHERE = null;\n    for (var col = 0; col < size; col++) {\n      var field = this.gridFields[col];\n      if (field.getIsKey()) {\n        var columnName = field.getColumnName().toLowerCase();\n        var value = rowData[columnName];\n        if (value == null) {\n          this.log.log(VIS.Logging.Level.WARNING, "PK data is null - " + columnName);\n          return null;\n        }\n        if (columnName.toUpperCase().endsWith("_ID")) singleRowWHERE = new StringBuilder(columnName).append("=").append(value);else singleRowWHERE = new StringBuilder(columnName).append("=").append(VIS.DB.to_string(value.toString()));\n      } else if (field.getIsParentColumn()) {\n        var columnName = field.getColumnName().toLowerCase();\n        var value = rowData[columnName];\n        if (value == null) {\n          this.log.log(Level.INFO, "FK data is null - " + columnName);\n          continue;\n        }\n        if (multiRowWHERE == null) multiRowWHERE = new StringBuilder();else multiRowWHERE.append(" AND ");\n        if (columnName.toUpperCase().endsWith("_ID")) multiRowWHERE.append(columnName).append("=").append(value);else multiRowWHERE.append(columnName).append("=").append(VIS.DB.to_string(value.toString()));\n      }\n    } //\tfor all columns\n    if (singleRowWHERE != null) return singleRowWHERE.toString();\n    if (multiRowWHERE != null) return multiRowWHERE.toString();\n    this.log.log(Level.WARNING, "No key Found");\n    return null;\n  };\n  GridTable.prototype.getIsOpen = function () {\n    return this.isOpen;\n  }; //\n\n  GridTable.prototype.getTableID = function () {\n    return this.gTable._AD_Table_ID;\n  };\n  GridTable.prototype.getDataTable = function () {\n    return this.bufferList;\n  };\n  GridTable.prototype.getSortModel = function (mSort) {\n    return this.mSortList;\n  };\n  GridTable.prototype.getRow = function (index) {\n    return this.mSortList[index];\n  };\n  GridTable.prototype.getRowCount = function () {\n    if (this.mSortList) {\n      return this.mSortList.length;\n    }\n    if (this.bufferList) {\n      return this.bufferList.length;\n    }\n    return 0;\n  };\n  GridTable.prototype.getTotalRowCount = function () {\n    return this.rowCount;\n  };\n  GridTable.prototype.getValueAt = function (row, colName) {\n    var rowData = this.getRow(row);\n    if (rowData && colName in rowData) {\n      return rowData[colName];\n    }\n    return null;\n  };\n  GridTable.prototype.checkMaxMin = function () {\n    //  see also => ProcessParameter.saveParameter\n    var sb = new StringBuilder();\n\n    //\tCheck all columns\n    var size = this.gridFields.length;\n    var maxValue = "";\n    var minValue = "";\n    for (var i = 0; i < size; i++) {\n      var field = this.gridFields[i];\n      if (VIS.DisplayType.IsNumeric(field.getDisplayType())) {\n        maxValue = field.getMaxValue();\n        minValue = field.getMinValue();\n        if ($.isNumeric(maxValue) && $.isNumeric(minValue)) {\n          if (Number(field.getValue()) > Number(field.getMaxValue()) || Number(field.getValue()) < Number(field.getMinValue())) {\n            VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + field.getHeader() + " " + VIS.Msg.getMsg("VIS_MustBetween") + " " + field.getMinValue() + " " + VIS.Msg.getMsg("VIS_And") + " " + field.getMaxValue());\n            return false;\n          }\n        } else if ($.isNumeric(maxValue)) {\n          if (Number(field.getValue()) > Number(maxValue)) {\n            VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + field.getHeader() + " " + VIS.Msg.getMsg("VIS_Lessthan") + " " + maxValue);\n            return false;\n          }\n        } else if ($.isNumeric(minValue)) {\n          if (Number(field.getValue()) < Number(minValue)) {\n            VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + field.getHeader() + " " + VIS.Msg.getMsg("VIS_Greaterthan") + " " + minValue);\n            return false;\n          }\n        }\n      }\n    }\n\n    //if (field.getIsMandatory(true))        //  check context\n    //{\n    //    var colName = field.getColumnName().toLowerCase();\n    //    if (rowData[colName] == null || rowData[colName].toString().length == 0) {\n    //        field.setInserting(true);  //  set editable otherwise deadlock\n    //        field.setError(true);\n    //        if (sb.length() > 0)\n    //            sb.append(", ");\n    //        sb.append(field.getHeader());\n    //    }\n    //}\n\n    return true;\n  }; //\tgetManda\n\n  //GridTable.prototype.checkAmountDivisionValue = function () {\n\n  //    var sb = new StringBuilder();\n\n  //    //\tCheck all columns\n  //    var size = this.gridFields.length;\n  //    var maxValue = "";\n  //    var minValue = "";\n\n  //    var val = $.grep(this.gridFields, function (e) {\n  //        if (e.getDisplayType() == VIS.DisplayType.AmtDimension) {\n  //            return e;\n  //        }\n  //    });\n\n  //    if (val) {\n  //        for (var i = 0; i < size; i++) {\n  //            var field = this.gridFields[i];\n  //            if (field.getDisplayType() == VIS.DisplayType.AmtDimension) {\n  //                var defValue = field.vo.DefaultValue;\n\n  //                if (defValue) {\n  //                    defValue = defValue.replace(/@/g, "").trim();\n  //                    defValue = VIS.Env.getCtx().getContextAsInt(this.gTable._windowNo, defValue, false);\n\n  //                    var fieldValue = field.getValue();\n  //                    if (fieldValue && fieldValue > 0) {\n  //                        //var str = "SELECT amount FROM C_DimAmt where C_DimAmt_ID=" + fieldValue;\n  //                        //fieldValue = VIS.DB.executeScalar(str);\n  //                        fieldValue = field.lookup.get(field.getValue());//.Name;\n  //                        if (fieldValue) {\n  //                            fieldValue = field.lookup.get(field.getValue()).Name;\n\n  //                            if (parseFloat(defValue) < parseFloat(fieldValue)) {\n  //                                VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + VIS.Msg.translate(VIS.Env.getCtx(), field.vo.DefaultValue.replace(/@/g, "").trim()) + VIS.Msg.getMsg("VIS_CannotBeLessThan") + field.getHeader());\n  //                                return false;\n  //                            }\n  //                        }\n  //                    }\n  //                }\n  //            }\n  //        }\n  //    }\n  //    return true;\n  //    //for (var i = 0; i < size; i++) {\n  //    //    var field = this.gridFields[i];\n\n  //    //if (VIS.DisplayType.IsNumeric(field.getDisplayType())) {\n  //    //    maxValue = field.getMaxValue();\n  //    //    minValue = field.getMinValue();\n  //    //    if ($.isNumeric(maxValue) && $.isNumeric(minValue)) {\n  //    //        if (field.getValue() > field.getMaxValue() || field.getValue() < field.getMinValue()) {\n  //    //            VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + field.getHeader() + " " + VIS.Msg.getMsg("VIS_MustBetween") + " " + field.getMinValue() + " " + VIS.Msg.getMsg("VIS_And") + field.getMaxValue());\n  //    //            return false;\n  //    //        }\n  //    //    }\n  //    //    else if ($.isNumeric(maxValue)) {\n  //    //        if (field.getValue() > maxValue) {\n  //    //            VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + field.getHeader() + " " + VIS.Msg.getMsg("VIS_Lessthan") + " " + maxValue);\n  //    //            return false;\n  //    //        }\n  //    //    }\n  //    //    else if ($.isNumeric(minValue)) {\n  //    //        if (field.getValue() < minValue) {\n  //    //            VIS.ADialog.error("ValidationError", true, ": " + VIS.Msg.getMsg("VIS_ValueOf") + " " + field.getHeader() + " " + VIS.Msg.getMsg("VIS_Greaterthan") + " " + minValue);\n  //    //            return false;\n  //    //        }\n  //    //    }\n  //    //}\n  //    //}\n\n  //    //this.gridFields[i].\n  //};\n\n  GridTable.prototype.getMandatory = function (rowData) {\n    //  see also => ProcessParameter.saveParameter\n    var sb = new StringBuilder();\n\n    //\tCheck all columns\n    var size = this.gridFields.length;\n    var isFocused = false;\n    for (var i = 0; i < size; i++) {\n      var field = this.gridFields[i];\n      if (field.getIsMandatory(true))\n        //  check context\n        {\n          var colName = field.getColumnName().toLowerCase();\n          if (rowData[colName] == null || rowData[colName].toString().length == 0) {\n            field.setInserting(true); //  set editable otherwise deadlock\n            field.setError(true);\n            if (sb.length() > 0) sb.append(", ");\n            sb.append(field.getHeader());\n\n            // Handle Focus Mandatory column\n            if (!isFocused) {\n              this.lastFocus = field.propertyChangeListner.getControl();\n              isFocused = true;\n            }\n          }\n        }\n    }\n    if (sb.length() == 0) return "";\n    return sb.toString();\n  }; //\tgetManda\n\n  // Get Last Focus\n  GridTable.prototype.getLastFocus = function () {\n    var lf = this.lastFocus;\n    return lf;\n  };\n\n  // Set Last Focus\n  GridTable.prototype.setLastFocus = function (ctrl) {\n    this.lastFocus = ctrl;\n  };\n  GridTable.prototype.getErrorColumns = function () {\n    //  see also => ProcessParameter.saveParameter\n    var sb = new StringBuilder();\n\n    //\tCheck all columns\n    var size = this.gridFields.length;\n    for (var i = 0; i < size; i++) {\n      var field = this.gridFields[i];\n      if (field.getIsError())\n        //  check context\n        {\n          if (sb.length() > 0) sb.append(", ");\n          sb.append(field.getHeader());\n        }\n    }\n    if (sb.length() == 0) return "";\n    return sb.toString();\n  }; //\tget\n\n  GridTable.prototype.getClientOrg = function (row) {\n    var AD_Client_ID = -1;\n    if (this.gTable._indexClientColumn != -1) {\n      var ii = this.getValueAt(row, \'ad_client_id\');\n      if (ii != null) AD_Client_ID = ii;\n    }\n    var AD_Org_ID = 0;\n    if (this.gTable._indexOrgColumn != -1) {\n      var oo = this.getValueAt(row, \'ad_org_id\');\n      if (oo != null) AD_Org_ID = oo;\n    }\n    return [AD_Client_ID, AD_Org_ID];\n  };\n  GridTable.prototype.getKeyID = function (row) {\n    if (this.gTable._indexKeyColumn != -1) {\n      try {\n        var ii = this.getValueAt(row, this.keyColumnName.toLowerCase());\n        if (ii == null || isNaN(ii)) return -1;\n        return ii;\n      } catch (e)\n      //  Alpha Key\n      {\n        return -1;\n      }\n    }\n    return -1;\n  }; //\tgetKeyID\n\n  GridTable.prototype.getDummyRecordID = function (row) {\n    try {\n      var ii = this.getValueAt(row, this._tableName + "_ID");\n      if (ii == null || isNaN(ii)) return -1;\n      return ii;\n    } catch (e) {\n      return -1;\n    }\n    return -1;\n  };\n  GridTable.prototype.setKeyColumnName = function (keyName) {\n    this.keyColumnName = keyName;\n  };\n  GridTable.prototype.setTableName = function (newTableName) {\n    if (this.isOpen) {\n      //log.Fine("Table already open - ignored");\n      return;\n    }\n    if (newTableName == null || newTableName.length == 0) return;\n    this.gTable._tableName = newTableName;\n  };\n  GridTable.prototype.setReadOnly = function (value) {\n    this.readOnly = value;\n  };\n  GridTable.prototype.setDeleteable = function (value) {\n    this.gTable._deleteable = value;\n  };\n  GridTable.prototype.setOrderClause = function (newOrderClause) {\n    this.gTable._orderClause = newOrderClause;\n    if (this.gTable._orderClause == null) this.gTable._orderClause = "";\n  };\n\n  //GridTable.prototype.setOuterOrderClause = function (newOrderClause) {\n  //    this.outerOrderClause = newOrderClause;\n  //    if (this.outerOrderClause == null)\n  //        this.outerOrderClause = "";\n  //};\n\n  GridTable.prototype.setSelectWhereClause = function (newWhereClause) {\n    if (this.isOpen) {\n      //log.Log(Level.SEVERE, "Table already open - ignored");\n      return false;\n    }\n    //\n    this.gTable._whereClause = newWhereClause;\n    if (this.gTable._whereClause == null) this.gTable._whereClause = "";\n    return true;\n  };\n  GridTable.prototype.setDoPaging = function (doPaging) {\n    this.dopaging = doPaging;\n  };\n  GridTable.prototype.setCurrentPage = function (page) {\n    this.currentPage = page;\n  };\n  GridTable.prototype.setCurrentPageRelative = function (newPage) {\n    var cPage = this.currentPage;\n    if (isNaN(newPage)) {\n      //last page\n      cPage = Math.ceil(this.rowCount / this.pazeSize);\n    } else {\n      if (newPage !== 0) {\n        cPage += newPage;\n      } else {\n        cPage = 1;\n      }\n    }\n    this.currentPage = cPage;\n  };\n  GridTable.prototype.setSortModel = function (mSort) {\n    this.mSortList = null;\n    this.mSortList = mSort;\n  };\n  /**\r\n   * Set Card ID for featch card data\r\n   * @param {any} cardID\r\n   */\n  GridTable.prototype.setCardID = function (cardID) {\n    this.card_ID = cardID;\n  };\n\n  /**\r\n   * Reset card details for other view\r\n   * */\n  GridTable.prototype.resetCard = function () {\n    this.cardTempalte = null;\n    this.setCardID(0);\n  };\n  GridTable.prototype.setValueAt = function (value, row, col, force) {\n    //\tCan we edit?\n    if (!this.isOpen //  not accessible\n    || row < 0 || col < 0 //  invalid index\n    || this.rowCount == 0)\n      //  no rows\n      {\n        //console.finest("r=" + row + " c=" + col + " - R/O=" + m_readOnly + ", Rows=" + m_rowCount + " - Ignored");\n        return;\n      }\n    var field = this.getField(col);\n    var oldValue = this.getValueAt(row, field.getColumnName().toLowerCase());\n    //  update MField\n\n    if (!force && (oldValue == null && value == null || oldValue === value)) {\n      // log.finest("r=" + row + " c=" + col + " - New=" + value + "==Old=" + oldValue + " - Ignored");\n      return;\n    }\n\n    //dataSave(row, false);\n\n    //\tHas anything changed?\n    //Object oldValue = getValueAt(row, col);\n    //\tSet Data item\n    var _rowData = this.getRow(row);\n    this.rowChanged = row;\n\n    //\tsave original value - shallow copy\n    if (this.rowData == null) {\n      this.rowData = {};\n      $.extend(this.rowData, _rowData);\n    }\n\n    //\tsave & update\n\n    field.setValue(value, this.inserting);\n    _rowData[field.getColumnName().toLowerCase()] = value;\n\n    //  inform\n    if (!this.disableNotification) {\n      var evt = this.createDSE();\n      evt.setChangedColumn(col, field.getColumnName());\n      this.fireDataStatusChanged(evt);\n    }\n  };\n\n  /**\r\n   * set this flag to disable notification loop (callout) for new record inserting\r\n   * @param {any} disable\r\n   */\n  GridTable.prototype.setDisableNotification = function (disable) {\n    this.disableNotification = disable;\n  };\n\n  /**\r\n   *\tCheck if the row needs to be saved.\r\n   *  - only when row changed\r\n   *  - only if nothing was changed\r\n   *\t@param\tnewRow to check\r\n   *  @param  onlyRealChange if true the value of a field was actually changed\r\n   *  (e.g. for new records, which have not been changed) - default false\r\n   *\t@return true it needs to be saved\r\n   */\n  GridTable.prototype.needSave = function (nRow, onlyChange) {\n    //log.fine("Row=" + newRow +\n    //\t\t", Changed=" + m_rowChanged + "/" + m_changed);  //  m_rowChanged set in setValueAt\n\n    var newRow = nRow;\n    var onlyRealChange = onlyChange;\n    if (arguments.length == 0) {\n      newRow = this.rowChanged;\n      onlyRealChange = false;\n    } else if (arguments.length == 1) {\n      newRow = arguments[0];\n      onlyRealChange = false;\n    } else {\n      newRow = arguments[0];\n      onlyRealChange = arguments[1];\n    }\n\n    //  nothing done\n    if (typeof this.changed == "undefined" || !this.changed && (this.rowChanged == -1 || typeof this.rowChanged == "undefined")) return false;\n    //  E.g. New unchanged records\n    if (this.changed && (typeof this.rowChanged == "undefined" || this.rowChanged == -1) && onlyRealChange) return false;\n    //  same row\n    if (newRow == this.rowChanged) return false;\n    return true;\n  }; //\tneedSave\n\n  GridTable.prototype.findColumn = function (columnName) {\n    var m_fields = this.gridFields;\n    for (var i = 0; i < m_fields.length; i++) {\n      var field = m_fields[i];\n      if (columnName.equals(field.getColumnName(), true)) return i;\n    }\n    return -1;\n  }; //  \n\n  GridTable.prototype.createSelectSql = function () {\n    var gt = this.gTable;\n    this.columns = [];\n    if (this.gridFields.length == 0 || gt._tableName == null || gt._tableName.equals("")) return "";\n\n    //\tCreate SELECT Part\n    var select = new StringBuilder("SELECT ");\n    var selectDirect = null;\n    var selectSql = null;\n    var hasImage = false;\n    var imgColName = [];\n    for (var i = 0; i < this.gridFields.length; i++) {\n      if (i > 0) {\n        select.append(", ");\n      }\n      var field = this.gridFields[i];\n      //selectSql = field.getColumnSQL(true);\n      //if (selectSql.indexOf("@") == -1) {\n      // select.append(selectSql);\t//\tColumnName or Virtual Column\n      this.columns.push(field.getColumnName());\n      //}\n      //else {\n      //   // select.append(VIS.Env.parseContext(this.ctx, gt._windowNo, selecgetSql, false));\n      //    this.columns.push(VIS.Env.parseContext(this.ctx, gt._windowNo, selecgetSql, false));\n      //}\n\n      //if (field.getDisplayType() == VIS.DisplayType.Image) {\n      //    imgColName.push(selectSql);\n      //    hasImage = true;\n      //    // select.append(", (SELECT ImageURL from AD_Image img where img.AD_Image_ID=" + gt._tableName+"."+ selectSql+") as imgUrlColumn");\n      //}\n\n      //if (field.getLookup() != null && field.getLookup() instanceof VIS.MLookup) {\n      //    var lInfo = field.getLookup().info;\n      //    if (lInfo.displayColSubQ && lInfo.displayColSubQ != "" && gt._tableName.toLowerCase() != lInfo.tableName.toLowerCase()) {\n\n      //        if (selectDirect == null)\n      //            selectDirect = new StringBuilder("SELECT ");\n      //        else\n      //            selectDirect.append(",");\n\n      //        var qryDirect = lInfo.queryDirect.substring(lInfo.queryDirect.lastIndexOf(\' FROM \' + lInfo.tableName + \' \'));\n\n      //        if (!field.getIsVirtualColumn())\n      //            qryDirect = qryDirect.replace(\'@key\', gt._tableName + \'.\' + field.getColumnSQL());\n      //        else\n      //            qryDirect = qryDirect.replace(\'@key\', field.getColumnSQL(false));\n\n      //        selectDirect.append("( SELECT (").append(lInfo.displayColSubQ).append(\') \').append(qryDirect)\n      //            .append(" ) AS ").append(field.getColumnSQL() + \'_T\')\n      //            .append(\',\').append(field.getColumnSQL(true));\n      //    }\n      //}\n\n      //else if (field.getLookup() != null && field.getLookup() instanceof VIS.MAccountLookup) {\n      //    if (selectDirect == null)\n      //        selectDirect = new StringBuilder("SELECT ");\n      //    else\n      //        selectDirect.append(",");\n\n      //    selectDirect.append("( SELECT C_ValidCombination.Combination FROM C_ValidCombination WHERE C_ValidCombination.C_ValidCombination_ID=")\n      //        .append(gt._tableName + \'.\' + field.getColumnSQL()).append(" ) AS ").append(field.getColumnSQL() + \'_T\')\n      //        .append(\',\').append(field.getColumnSQL(true));\n\n      //}\n    }\n    selectSql = null;\n\n    //var randomNo = Math.random();\n    //if (hasImage) {\n    //    for (var im = 0; im < imgColName.length; im++) {\n    //        //select.append(", (SELECT ImageURL||\'?random=" + randomNo + "\' from AD_Image img where img.AD_Image_ID=CAST(" + gt._tableName + "." + imgColName[im] + " AS INTEGER)) as imgUrlColumn" + imgColName[im]);\n\n    //        this.columns.push(", (SELECT ImageURL||\'?random=" + randomNo + "\' from AD_Image img where img.AD_Image_ID=CAST(" + gt._tableName + "." + imgColName[im] + " AS INTEGER)) as imgUrlColumn" + imgColName[im]);\n    //    }\n    //}\n\n    //\n    select.append(" FROM ").append(gt._tableName);\n    this.SQL_Select = select.toString();\n    this.SQL_Count = "SELECT COUNT(*) FROM " + gt._tableName;\n\n    //\n\n    var m_SQL_Where = new StringBuilder("");\n\n    //\tWHERE\n    var _whereClause = gt._whereClause;\n    if (_whereClause.length > 0) {\n      m_SQL_Where.append(" WHERE ");\n      if (_whereClause.indexOf("@") == -1) {\n        m_SQL_Where.append(_whereClause);\n      } else\n        //  replace variables\n        {\n          var wClause = VIS.Env.parseContext(this.ctx, gt._windowNo, _whereClause, false);\n          if ((!wClause || wClause.length == 0) && _whereClause.length > 0) m_SQL_Where.append("11=12");else m_SQL_Where.append(wClause);\n        }\n      //\n      if (_whereClause.toUpperCase().indexOf("=NULL") > 0) {\n        this.log.Severe("Invalid NULL - " + _tableName + "=" + _whereClause);\n      }\n    }\n    this.whereClause = m_SQL_Where;\n    this.SQL = this.SQL_Select + m_SQL_Where.toString();\n    this.SQL_Count += m_SQL_Where.toString();\n\n    //List<GridField> jj = new List<GridField>();\n\n    //\tRO/RW Access\n\n    if (gt._withAccessControl) {\n      this.SQL = VIS.MRole.addAccessSQL(this.SQL, gt._tableName, VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RO);\n\n      //this.SQL_Count = "SELECT COUNT(*) FROM " + gt._tableName + this.SQL.replaceAll(this.SQL_Select, \'\');\n      this.SQL_Count = "SELECT COUNT(*) FROM " + gt._tableName + this.SQL.substring(this.SQL_Select.length);\n      // this.SQL_Count = VIS.MRole.addAccessSQL(this.SQL_Count,\n      // gt._tableName, VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RO);\n    }\n    if (selectDirect != null) this.SQL_Direct = selectDirect.toString() + \' \' + this.SQL_Count.substring(this.SQL_Count.indexOf(" COUNT(*) FROM") + 9);else this.SQL_Direct = "";\n\n    //\tORDER BY\n\n    //if (!this.outerOrderClause.equals("")) {\n    //    this.SQL += " ORDER BY " + this.outerOrderClause;\n    //    this.SQL_Direct += " ORDER BY " + this.outerOrderClause;\n    //} else\n    if (!gt._orderClause.equals("")) {\n      this.SQL += " ORDER BY " + gt._orderClause;\n      this.SQL_Direct += " ORDER BY " + gt._orderClause;\n    }\n\n    //\n    ////log.fine(_SQL_Count);\n    //this.ctx.setWindowTabContext(gt._windowNo, gt._tabNo, "SQL", this.SQL);\n    return this.SQL;\n  }; //\tcreateSelectSql\n\n  GridTable.prototype.open = function (maxRows) {\n    //TODO\n    //log.Info("MaxRows=" + maxRows);\n    this.maxRows = maxRows;\n    if (this.isOpen) {\n      //log.Fine("already open");\n      this.dataRefreshAll();\n      return true;\n    }\n    //create _SQL and m_countSQL\n    this.createSelectSql();\n    if (this.SQL == null || this.SQL.equals("") || !this.columns || this.columns.length == 0) {\n      //log.Log(Level.SEVERE, "No SQL");\n      return false;\n    }\n    this.rowCount = 0;\n    var rCount = 0;\n\n    //if (this.treeNode_ID > 0) {\n    //    $.ajax({\n    //        url: VIS.Application.contextUrl + "jsonData/GetRecordCountForTreeNode",\n    //        data: { sqlIn: this.gTable._whereClause, AD_Table_ID: this.AD_Table_ID, treeID: this.treeID, treeNodeID: this.treeNode_ID, windowNo: this.gTable._windowNo, summaryOnly: this.ShowSummaryNodes },\n    //        type: \'POST\',\n    //        async: false,\n    //        success: function (resultt) {\n    //            rCount = JSON.parse(resultt);\n    //        },\n    //        error: function (e) { }\n    //    });\n    //}\n    //else {\n    //    if (this.card_ID > 0) {\n    //        $.ajax({\n    //            url: VIS.Application.contextUrl + "jsonData/GetRecordCountWithCard",\n    //            data: { sql: VIS.secureEngine.encrypt(this.SQL_Count), cardID: this.card_ID },\n    //            type: \'POST\',\n    //            async: false,\n    //            success: function (resultt) {\n    //                rCount = JSON.parse(resultt);\n    //            },\n    //            error: function (e) { }\n    //        });\n    //    } else {\n    //        rCount = executeDScalar(this.SQL_Count, null);\n    //    }\n\n    //}\n\n    //$.ajax({\n    //    url: VIS.Application.contextUrl + "jsonData/GetRecordCountForTreeNode",\n    //    data: { sqlIn: this.gTable._whereClause, AD_Table_ID: this.AD_Table_ID, treeID: this.treeID, treeNodeID: this.treeNode_ID, windowNo: this.gTable._windowNo, summaryOnly: this.ShowSummaryNodes },\n    //    type: \'POST\',\n    //    async: false,\n    //    success: function (resultt) {\n    //        rCount = JSON.parse(resultt);\n    //    },\n    //    error: function (e) { }\n    //});\n\n    this.rowCount = rCount;\n    this.bufferList.length = 0;\n    var that = this;\n    this.pazeSize = Number(VIS.Env.getWINDOW_PAGE_SIZE());\n    //this.pazeSize = 50;\n    var gFieldsIn = this.createGridFieldArr(this.gridFields, true);\n    var dataIn = {\n      page: this.dopaging ? this.currentPage : 0,\n      pageSize: this.dopaging ? this.pazeSize : 0,\n      treeID: this.treeID,\n      treeNode_ID: this.treeNode_ID,\n      card_ID: this.card_ID,\n      ad_Tab_ID: this.AD_Tab_ID,\n      tableName: this.gTable._tableName\n    };\n    var obscureFields = this.createObsecureFields(this.gridFields);\n    $.ajax({\n      url: baseUrl + "Window/GetWindowRecords",\n      type: \'post\',\n      data: {\n        \'ctx\': VIS.context.getWindowCtx(that.gTable._windowNo),\n        Columns: this.columns,\n        TableName: this.gTable._tableName,\n        WhereClause: VIS.secureEngine.encrypt(this.whereClause),\n        ObscureFields: obscureFields,\n        sqlIn: dataIn,\n        AD_Window_ID: that.gridFields[0].getAD_Window_ID(),\n        WindowNo: that.gTable._windowNo,\n        AD_Tab_ID: that.AD_Tab_ID,\n        SummaryOnly: that.ShowSummaryNodes,\n        Encryptedfields: gFieldsIn,\n        AD_Table_ID: that.AD_Table_ID,\n        MaxRows: that.maxRows,\n        DoPaging: that.dopaging\n      },\n      success: function (jString) {\n        var retObj = JSON.parse(jString);\n        if (retObj.RecordCount > 0) {\n          that.rowCount = retObj.RecordCount;\n          that.isOpen = true;\n          if (!that.dopaging || that.pazeSize > that.rowCount) {\n            that.pazeSize = that.rowCount;\n          }\n\n          //\n          that.changed = false;\n          that.rowChanged = -1;\n          that.fillData(retObj);\n        } else {\n          //console.log("clear");\n          if (that.bufferList != null) {\n            that.bufferList.length = 0;\n          }\n          ;\n          if (that.mSortList != null) {\n            that.mSortList = null;\n          }\n          that.currentPage = 1;\n          that.isOpen = true;\n          //\n          that.changed = false;\n          that.rowChanged = -1;\n\n          //call Query Complete\n          window.setTimeout(function (t) {\n            that.fireQueryCompleted(true); //Inform GridController   \n          }, 300, that);\n        }\n      },\n      error: function () {}\n    });\n    return true;\n\n    //this.bufferList.length = 0;\n    //var that = this;\n\n    ////prepare josn \n\n    ////this.SQL_Count = VIS.secureEngine.encrypt(this.SQL_Count);\n\n    //var gFieldsIn = this.createGridFieldArr(this.gridFields, true);\n    ////var dataIn = { sql: this.SQL, page: this.dopaging ? this.currentPage : 0, pageSize: this.dopaging ? this.pazeSize : 0, treeID: 0, treeNode_ID: 0, card_ID: this.card_ID, ad_Tab_ID: this.AD_Tab_ID, tableName: this.gTable._tableName };\n\n    //var obscureFields = this.createObsecureFields(this.gridFields);\n\n    //$.ajax({\n    //    url: baseUrl + "Window/GetWindowRecords",\n    //    type: \'post\',\n    //    data: {\n    //        \'ctxp\': VIS.context.getWindowCtx(that.gTable._windowNo),\n    //        AD_Window_ID: that.gridFields[0].getAD_Window_ID(),\n    //        WindowNo: that.gTable._windowNo,\n    //        AD_Tab_ID: that.AD_Tab_ID,\n    //        WhereClause: VIS.secureEngine.encrypt(that.gTable._whereClause),\n    //        AD_tree_ID: that.treeID,\n    //        Node_ID: that.treeNode_ID,\n    //        SummaryOnly: that.ShowSummaryNodes,\n    //        CardID: that.card_ID,\n    //        Encryptedfields: gFieldsIn,\n    //        AD_Table_ID: that.AD_Table_ID,\n    //        ObscureFields: obscureFields,\n    //        MaxRows: that.maxRows,\n    //        CurrentPage: that.currentPage,\n    //        PageSize: that.pazeSize,\n    //        doPaging: that.dopaging\n    //    },\n    //    success: function (jString) {\n    //        var retObj = JSON.parse(jString);\n    //        if (retObj.RecordCount > 0) {\n    //            that.rowCount = retObj.RecordCount;\n    //            that.isOpen = true;\n    //            //\n    //            that.changed = false;\n    //            that.rowChanged = -1;\n    //            that.fillData(retObj);\n\n    //        }\n    //        else {\n    //            //console.log("clear");\n    //            if (that.bufferList != null) { that.bufferList.length = 0; };\n    //            if (that.mSortList != null) {\n    //                that.mSortList = null;\n    //            }\n    //            that.currentPage = 1;\n\n    //            that.isOpen = true;\n    //            //\n    //            that.changed = false;\n    //            that.rowChanged = -1;\n\n    //            //call Query Complete\n    //            window.setTimeout(function (t) {\n    //                that.fireQueryCompleted(true);//Inform GridController   \n    //            }, 300, that);\n    //        }\n    //    },\n    //    error: function () {\n\n    //    }\n\n    //});\n\n    //return true;\n  };\n  GridTable.prototype.fillData = function (retObj) {\n    var buffer = null;\n    var that = this;\n    if (this.treeNode_ID > 0) {\n      try {\n        buffer = new VIS.DB.DataSet().toJson(retObj.Tables);\n        if (buffer != null) {\n          var count = 0;\n          if (buffer.getTables().length != 0) {\n            var rows = buffer.getTable(0).getRows();\n            var columns = buffer.getTable(0).getColumnsName();\n            for (var row = 0; row < rows.length; row++) {\n              var cells = rows[row].getJSCells();\n              for (var cell = 0; cell < columns.length; cell++) {\n                cells[columns[cell]] = that.readDataOfColumn(columns[cell], cells[columns[cell]]);\n              }\n              //cells.recid = row;\n              that.bufferList[row] = cells;\n              count++;\n              //break;\n            }\n\n            //console.log(this.bufferList);\n          }\n          buffer.dispose();\n          buffer = null;\n        }\n      } catch (e) {\n        //alert(e);\n        this.log.Log(Level.SEVERE, that.SQL, e);\n      }\n      that.fireQueryCompleted(true); // inform gridcontroller\n      that = null;\n    } else {\n      try {\n        var lookupDirect = null;\n        var cardViewData = null;\n        if (retObj) {\n          buffer = new VIS.DB.DataSet().toJson(retObj.Tables);\n          lookupDirect = retObj.LookupDirect;\n          cardViewData = retObj.CardViewTpl;\n        }\n        if (buffer != null) {\n          var count = 0;\n          if (buffer.getTables().length != 0) {\n            var rows = buffer.getTable(0).getRows();\n            var columns = buffer.getTable(0).getColumnsName();\n            for (var row = 0; row < rows.length; row++) {\n              var cells = rows[row].getJSCells();\n              for (var cell = 0; cell < columns.length; cell++) {\n                cells[columns[cell]] = that.readDataOfColumn(columns[cell], cells[columns[cell]]);\n              }\n              //cells.recid = row;\n              that.bufferList[row] = cells;\n              count++;\n              //break;\n            }\n            console.log(buffer.getTable(0).lookupDirect);\n          }\n          buffer.dispose();\n          buffer = null;\n        }\n        if (lookupDirect) VIS.MLookupCache.addRecordLookup(that.gTable._windowNo, that.gTable._tabNo, lookupDirect);\n        that.cardTempalte = cardViewData;\n        if (dataIn.card_ID > 0 && cardViewData && cardViewData.DisableWindowPageSize) {\n          that.pazeSize = that.rowCount;\n          that.currentPage = 1;\n        }\n      } catch (e) {\n        //alert(e);\n        //that.log.Log(Level.SEVERE, that.SQL, e);\n      }\n      that.fireQueryCompleted(true); // inform gridcontroller\n      that = null;\n    }\n    //    },\n    //    error: function (ex) { }\n    //});\n  };\n  /**\r\n   * Get Card tempatate for cardview\r\n   * */\n  GridTable.prototype.getCardTemplate = function () {\n    return this.cardTempalte;\n  };\n  GridTable.prototype.readDataOfColumn = function (colName, colValue) {\n    if (colValue == null) {\n      return colValue;\n    } else {\n      //\tColumn Info\n      try {\n        var field = this.getField(colName);\n        if (field == null) return colValue;\n        var columnName = field.getColumnName();\n        var displayType = field.getDisplayType();\n        //\tInteger, ID, Lookup (UpdatedBy is a numeric column)\n        if (VIS.DisplayType.IsID(displayType) // JJ: don\'t touch!\n        && (columnName.endsWith("_ID") || columnName.endsWith("_Acct")) || columnName.endsWith("atedBy") || columnName.endsWith("_ID_1") || columnName.endsWith("_ID_2") || columnName.endsWith("_ID_3") || displayType == VIS.DisplayType.Integer) {\n          colValue = VIS.Utility.Util.getValueOfInt(colValue); //\tInteger\n        }\n        //\tNumber\n        else if (VIS.DisplayType.IsNumeric(displayType)) {\n          colValue = VIS.Utility.Util.getValueOfDecimal(colValue); //\tBigDecimal\n        }\n        //\tDate\n        else if (VIS.DisplayType.IsDate(displayType)) {\n          //var dte = new Date(colValue);\n          //  dte.setMinutes(+dte.getTimezoneOffset() + dte.getMinutes());\n          //colValue = dte.toISOString();\n          dte = null;\n        }\n        //\tRowID or Key (and Selection)\n        else if (displayType == VIS.DisplayType.RowID) colValue = null;\n        //\tYesNo\n        else if (displayType == VIS.DisplayType.YesNo) {\n          var str = colValue.toString();\n          if (field.getIsEncryptedColumn()) str = this.decrypt(str);\n          colValue = str.equals("Y"); //\tBoolean\n        }\n        //\tLOB\n        else if (VIS.DisplayType.IsLOB(displayType)) {\n          var value = colValue;\n          if (value == null) colValue = null;\n          if (typeof value == typeof string) {\n            colValue = value.toString();\n          } else {\n            colValue = value;\n          }\n        }\n        //\tString\n        else colValue = colValue.toString(); //string\n        //\tEncrypted\n        if (field.getIsEncryptedColumn() && displayType != VIS.DisplayType.YesNo) colValue = this.decrypt(colValue);\n        if (field.getObscureType() && displayType != VIS.DisplayType.YesNo) colValue = this.decrypt(colValue);\n      } catch (e) {\n        //log.Severe("Decryption =>" + e.Message);\n        console.log(e);\n      }\n      return colValue;\n    }\n  };\n  GridTable.prototype.encrypt = function (xx) {\n    if (xx == null || xx.length < 1) return xx;\n    return VIS.secureEngine.encrypt(xx);\n  };\n\n  /// <summary>\n  /// Decrypt\n  /// </summary>\n  /// <param name="yy"></param>\n  /// <returns></returns>\n  GridTable.prototype.decrypt = function (yy) {\n    if (yy == null || yy.length < 1) return yy;\n    if (VIS.secureEngine.isEncrypted(yy)) return VIS.secureEngine.decrypt(yy);\n    return yy;\n  };\n\n  /**\r\n   *\tCheck if it needs to be saved and save it.\r\n   *  @param newRow row\r\n   *  @param manualCmd manual command to save\r\n   *\t@return true if not needed to be saved or successful saved\r\n   */\n  GridTable.prototype.dataSave = function (newRow, manualCmd) {\n    if (arguments.length == 2) {\n      //log.fine("Row=" + newRow +\n      //\t", Changed=" + m_rowChanged + "/" + m_changed);  //  m_rowChanged set in setValueAt\n      //  nothing done\n      if (!this.changed && (typeof this.rowChanged == "undefined" || this.rowChanged == -1)) return true;\n      //  same row, don\'t save yet\n      if (newRow == this.rowChanged) return true;\n      return this.dataSaveL(manualCmd) == GridTable.prototype.SAVE_OK;\n    } else {\n      return this.dataSaveL(manualCmd);\n    }\n  };\n  GridTable.prototype.dataSaveL = function (manualCmd) {\n    //\tcannot save\n    if (!this.isOpen) {\n      this.log.warning("Error - Open=" + this.isOpen);\n      return this.SAVE_ERROR;\n    }\n    //\tno need - not changed - row not positioned - no Value changed\n    if (this.rowChanged == -1) {\n      this.log.config("NoNeed - Changed=" + this.changed + ", Row=" + this.rowChanged);\n      //\treturn SAVE_ERROR;\n      if (!manualCmd) return this.SAVE_OK;\n    }\n    //  Value not changed\n    if (this.rowData == null) {\n      this.log.fine("No Changes");\n      return this.SAVE_ERROR;\n    }\n    if (this.readOnly)\n      //\tIf Processed - not editable (Find always editable)  -> ok for changing payment terms, etc.\n      {\n        log.warning("IsReadOnly - ignored");\n        this.dataIgnore();\n        return this.SAVE_ACCESS;\n      }\n\n    //\trow not positioned - no Value changed\n    if (this.rowChanged == -1) {\n      if (this.newRow != -1)\n        //  new row and nothing changed - might be OK\n        this.rowChanged = this.newRow;else {\n        this.fireDataStatusEEvent("SaveErrorNoChange", "", false);\n        return this.SAVE_ERROR;\n      }\n    }\n\n    //\tCan we change?\n    var co = this.getClientOrg(this.rowChanged);\n    var AD_Client_ID = co[0];\n    var AD_Org_ID = co[1];\n    var createError = true;\n    if (!VIS.MRole.canUpdate(AD_Client_ID, AD_Org_ID, this.AD_Table_ID, 0, createError)) {\n      // this.fireDataStatusEEvent("cant-update","",true);//CLogger.retrieveError());\n      this.fireDataStatusEEvent("AccessTableNoUpdate", "", true); //CLogger.retrieveError());\n      this.dataIgnore();\n      return this.SAVE_ACCESS;\n    }\n\n    //  inform about data save action, if not manually initiated\n    //try\n    //{\n    //    if (!manualCmd)\n    //        m_vetoableChangeSupport.fireVetoableChange(PROPERTY, -1, m_rowChanged);\n    //}\n    //catch (PropertyVetoException pve)\n    //{\n    //    log.warning(pve.getMessage());\n    //    dataIgnore();\n    //    return SAVE_ABORT;\n    //}\n\n    //\tget updated row data\n    var rowDataNew = this.getRow(this.rowChanged);\n\n    // regex validation\n    for (var i = 0; i < this.gridFields.length; i++) {\n      var rexfield = this.gridFields[i];\n      if (VIS.DisplayType.IsString(rexfield.getDisplayType())) {\n        if (rexfield.value != null) {\n          if (rexfield.value.toString().trim().length > 0) {\n            if (!new RegExp(rexfield.getVFormat()).test(rexfield.value)) {\n              this.fireDataStatusEEvent("RegexFailed", (rexfield.getHeader() == \'\' ? rexfield.getColumnName() : rexfield.getHeader()) + "\\n", true);\n              //Work DOne to set focus in field whose value does not match with regular expression.\n              rexfield.propertyChangeListner.ctrl.focus();\n              return this.SAVE_ERROR;\n            }\n          }\n        }\n      }\n    }\n    //\tCheck Mandatory\n    var missingColumns = this.getMandatory(rowDataNew);\n    if (missingColumns.length != 0) {\n      //\tTrace.printStack(false, false);\n      this.fireDataStatusEEvent("FillMandatory", missingColumns + "\\n", true);\n      return this.SAVE_MANDATORY;\n    }\n    if (!this.checkMaxMin()) {\n      return;\n    }\n\n    //if (!this.checkAmountDivisionValue()) {\n    //    return;\n    //}\n\n    //\tCheck miscellaneous errors\n    var errorColumns = this.getErrorColumns();\n    if (errorColumns.length != 0) {\n      //\tTrace.printStack(false, false);\n      this.fireDataStatusEEvent("Error", errorColumns + "\\n", true);\n      return this.SAVE_ERROR;\n    }\n    var Record_ID = 0;\n    if (!this.inserting) Record_ID = this.getKeyID(this.rowChanged);\n    //try {\n    //    if (!this.tableName.endsWith("_Trl"))\t//\ttranslation tables have no model\n    //        return this.dataSavePO(Record_ID);\n    //}\n    //catch (e) {\n    //    //if (e instanceof ClassNotFoundException)\n    //    //    log.warning(m_tableName + " - " + e.getLocalizedMessage());\n    //    //else {\n    //    this.log.log(VIS.Logging.Level.SEVERE, "Persistency Issue - "\n    //            + this.tableName + ": " + e.message, e);\n    //    return this.SAVE_ERROR;\n    //}\n\n    /* Prepare Json */\n    var gFields = [];\n    var m_fields = this.gridFields;\n    var size = m_fields.length;\n    gFields = this.createGridFieldArr(m_fields);\n    var encryptedCol = this.createGridFieldArr(m_fields, true);\n    var obscureFields = this.createObsecureFields(m_fields);\n    var RowData = {},\n      OldRowData = {};\n    $.extend(true, RowData, rowDataNew);\n    $.extend(true, OldRowData, this.rowData);\n    if (encryptedCol && encryptedCol.length > 0) {\n      var len = encryptedCol.length;\n      for (var i = 0; i < len; i++) {\n        if (RowData[encryptedCol[i]]) {\n          RowData[encryptedCol[i]] = this.encrypt(RowData[encryptedCol[i]]);\n        }\n        if (OldRowData[encryptedCol[i]]) {\n          OldRowData[encryptedCol[i]] = this.encrypt(OldRowData[encryptedCol[i]]);\n        }\n      }\n    }\n    if (obscureFields && obscureFields.length > 0) {\n      var len = obscureFields.length;\n      for (var i = 0; i < len; i++) {\n        if (RowData[obscureFields[i]] || RowData[obscureFields[i]] == 0) {\n          RowData[obscureFields[i]] = this.encrypt(RowData[obscureFields[i]]);\n        }\n        if (OldRowData[obscureFields[i]] || OldRowData[obscureFields[i]] == 0) {\n          OldRowData[obscureFields[i]] = this.encrypt(OldRowData[obscureFields[i]]);\n        }\n      }\n    }\n\n    //var RowData = this.encryptRow(this.rowDataNew);\n\n    //for (var i = 0; i < size; i++) {\n    //    var field = m_fields[i];\n    //    gFields.push({\n    //        IsVirtualColumn: field.getIsVirtualColumn(),\n    //        DisplayType: field.getDisplayType(),\n    //        ColumnName: field.getColumnName(),\n    //        IsKey: field.getIsKey(),\n    //        ColumnSQL: field.getColumnSQL(true),\n    //        IsEncrypted: field.getIsEncrypted(),\n    //        IsParentColumn: field.getIsParentColumn()\n\n    //    });\n    //}\n\n    var gridTableIn = {\n      Record_ID: Record_ID,\n      AD_Table_ID: this.AD_Table_ID,\n      TableName: this.gTable._tableName,\n      Inserting: this.inserting,\n      CompareDB: this.compareDB,\n      RowData: RowData,\n      OldRowData: OldRowData,\n      ManualCmd: manualCmd,\n      WhereClause: this.getWhereClause(rowDataNew),\n      Fields: gFields,\n      AD_Client_ID: AD_Client_ID,\n      AD_Org_ID: AD_Org_ID,\n      Columns: this.columns,\n      AD_WIndow_ID: m_fields[0].getAD_Window_ID(),\n      // vinay bhatt window id\n      MaintainVersions: false,\n      UnqFields: this.gFieldUnique,\n      Ctx: VIS.context.getWindowCtx(this.gTable._windowNo),\n      WindowNo: this.gTable._windowNo,\n      AD_Tab_ID: this.AD_Tab_ID\n      //ImmediateSave: true,\n      //ValidFrom: new Date().toISOString(),\n    };\n    if (this.selectedTreeNode > 0) {\n      gridTableIn[\'SelectedTreeNodeID\'] = this.selectedTreeNode;\n      if (this.isSummaryyNode) {\n        gridTableIn[\'TreeID\'] = this.treeID;\n        gridTableIn[\'ParentNodeID\'] = this.selectedTreeNode;\n      }\n    }\n    if (this.treeNode_ID > 0) {\n      gridTableIn[\'ParentNodeID\'] = this.treeNode_ID;\n      gridTableIn[\'TreeID\'] = this.treeID;\n      gridTableIn[\'TreeTableID\'] = this.treeTable_ID;\n    }\n\n    // check if this is master window and if there is change in maintain version field\n    if (this.onlyCurrentDays == 0 && (this.IsMaintainVersions || this.maintainVersionFieldChanged(RowData, OldRowData))) {\n      var self = this;\n      // in case of new record in Master Version window\n      if (OldRowData["updatedby"] == null) {\n        if (this.IsHideVerNewRecord) {\n          gridTableIn.MaintainVersions = true;\n          gridTableIn.ImmediateSave = true;\n          gridTableIn.ValidFrom = new Date().toISOString();\n        } else if (!this.MaintainVerOnApproval || this.MaintainVerOnApproval && VIS.context.getWindowContext(this.gTable._windowNo, VIS.Env.approveCol) == \'Y\') {\n          gridTableIn.MaintainVersions = true;\n          gridTableIn.ImmediateSave = true;\n          gridTableIn.ValidFrom = new Date().toISOString();\n          self.showVersions(self, Record_ID, gridTableIn, rowDataNew, true);\n          return;\n        }\n        var out = self.dataSaveDB(gridTableIn, rowDataNew);\n        // check if there is workflow linked on version table\n        // then do not save in Master window and reset \n        // and display message to user\n        if (out.Status == "E") {\n          if (!(out.FireEEvent || out.FireIEvent)) VIS.ADialog.info(out.ErrorMsg);\n        } else {\n          if (out.VersionResult) {\n            out.RowData = gridTableIn.RowData;\n            if (out.VersionResult.KeyColName != "") {\n              // out.RowData[out.KeyColName.toLower()] = out.Record_ID;\n              rowDataNew[out.VersionResult.KeyColName.toLower()] = out.VersionResult.Record_ID;\n              rowDataNew["isactive"] = out.VersionResult.IsActive;\n            }\n            self.fireTableModelChanged(VIS.VTable.prototype.ROW_REFRESH, rowDataNew, self.rowChanged);\n            self.fireRowChanged(true, self.getKeyID(self.rowChanged));\n\n            //\teverything ok\n            self.rowData = null;\n            self.changed = false;\n            self.compareDB = true;\n            self.rowChanged = -1;\n            self.newRow = -1;\n            self.inserting = false;\n            if (out.ErrorMsg != null) {\n              self.log.log(VIS.Logging.Level.SEVERE, out.ErrorMsg);\n            }\n            if (out.FireEEvent) {\n              self.fireDataStatusEEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError, out.IsWarning);\n            } else if (out.FireIEvent) {\n              self.fireDataStatusIEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError);\n            }\n            if (out.Status == "W") VIS.ADialog.info("SentForApproval");\n            //self.dataRefreshAll();\n          }\n        }\n        return out.Status;\n      } else if (this.MaintainVerOnApproval && VIS.context.getWindowContext(this.gTable._windowNo, VIS.Env.approveCol) != \'Y\') {\n        var out = this.dataSaveDB(gridTableIn, rowDataNew);\n        return out.Status;\n      } else {\n        // applied check for checking future versions\n        // if found any records then ask for confirmation to proceed\n        var res = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "JsonData/CheckVersions", {\n          RowData: gridTableIn\n        });\n        if (res.result) {\n          VIS.ADialog.confirm("FoundVersions", true, "", "Confirm", function (result) {\n            if (result) {\n              self.showVersions(self, Record_ID, gridTableIn, rowDataNew, false);\n            }\n          });\n        } else {\n          // in case of update display UI to user, \n          // whether user want to save immediately or for future\n          self.showVersions(self, Record_ID, gridTableIn, rowDataNew, false);\n        }\n      }\n    } else {\n      var out = this.dataSaveDB(gridTableIn, rowDataNew);\n      return out.Status;\n    }\n  };\n  GridTable.prototype.showVersions = function (slf, rec_ID, gTblIn, rdNew, newRecord) {\n    // in case of update display UI to user, \n    // whether user want to save immediately or for future\n    var msVer = new VIS.MasterDataVersion(slf.gTable._tableName, slf.gridFields, rec_ID, gTblIn.WhereClause, slf.IsMaintainVersions, newRecord, function (immediate, valFrom, verRecID) {\n      gTblIn.MaintainVersions = true;\n      gTblIn.ImmediateSave = immediate;\n      // VIS0008 Change done as we need only date string which doesn\'t include time\n      gTblIn.ValidFrom = valFrom;\n      gTblIn.VerRecID = verRecID;\n      var rowChg = slf.rowChanged;\n      var out = slf.dataSaveDB(gTblIn, rdNew);\n      // if Stauts is not OK\n      if (out.Status != "O") {\n        // if there is any error then display error message\n        if (out.Status == "E") {\n          if (!(out.FireEEvent || out.FireIEvent)) VIS.ADialog.info(out.ErrorMsg);\n        } else {\n          if (out.VersionResult) {\n            slf.rowChanged = rowChg;\n            out.RowData = gTblIn.RowData;\n            if (out.VersionResult.KeyColName != "") {\n              // out.RowData[out.KeyColName.toLower()] = out.Record_ID;\n              rdNew[out.VersionResult.KeyColName.toLower()] = out.VersionResult.Record_ID;\n              rdNew["isactive"] = out.VersionResult.IsActive;\n            }\n            slf.fireTableModelChanged(VIS.VTable.prototype.ROW_REFRESH, rdNew, slf.rowChanged);\n            slf.fireRowChanged(true, slf.getKeyID(slf.rowChanged));\n\n            //\teverything ok\n            slf.rowData = null;\n            slf.changed = false;\n            slf.compareDB = true;\n            slf.rowChanged = -1;\n            slf.newRow = -1;\n            slf.inserting = false;\n            if (out.ErrorMsg != null) {\n              slf.log.log(VIS.Logging.Level.SEVERE, out.ErrorMsg);\n            }\n            if (out.FireEEvent) {\n              slf.fireDataStatusEEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError, out.IsWarning);\n            } else if (out.FireIEvent) {\n              out.EventParam.Info = "VER";\n              slf.fireDataStatusIEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError);\n            }\n\n            // if sent for WF Approval then display Message\n            if (out.Status == "W") VIS.ADialog.info("SentForApproval");\n            // if saved for future then display Message and refresh UI\n            else if (out.Status == "F") VIS.ADialog.info("SavedForFuture");else if (out.Status == "B") VIS.ADialog.info("SavedForBackDate");\n            // }\n          }\n        }\n      }\n      return out.Status;\n    });\n    msVer.show();\n  };\n  GridTable.prototype.dataSaveDB = function (gridTableIn, rowDataNew) {\n    var out = VIS.dataContext.insertOrUpdateWRecord(gridTableIn);\n    out = JSON.parse(out);\n    if (out.IsError) {\n      //\n    } else {\n      if (out.RowData) {\n        $.extend(true, rowDataNew, this.readDataOfObject(out.RowData));\n      }\n      this.fireTableModelChanged(VIS.VTable.prototype.ROW_REFRESH, rowDataNew, this.rowChanged);\n      this.fireRowChanged(true, this.getKeyID(this.rowChanged));\n\n      //\teverything ok\n      this.rowData = null;\n      this.changed = false;\n      this.compareDB = true;\n      this.rowChanged = -1;\n      this.newRow = -1;\n      this.inserting = false;\n    }\n    if (out.ErrorMsg != null) {\n      this.log.log(VIS.Logging.Level.SEVERE, out.ErrorMsg);\n    }\n    if (out.FireEEvent) {\n      this.fireDataStatusEEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError, out.IsWarning);\n    } else if (out.FireIEvent) {\n      this.fireDataStatusIEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError);\n    }\n    return out;\n  };\n  GridTable.prototype.createGridFieldArr = function (m_fields, lessdata) {\n    var size = m_fields.length;\n    if (lessdata) {\n      if (this.gFieldLessData) return this.gFieldLessData;else {\n        this.gFieldLessData = [];\n        for (var i = 0; i < size; i++) {\n          var field = m_fields[i];\n          var colName = field.getColumnName().toLowerCase();\n          if (field.getIsEncryptedColumn()) {\n            this.gFieldLessData.push(\n            //{\n            //IsVirtualColumn: field.getIsVirtualColumn(),\n            // DisplayType: field.getDisplayType(),\n            colName\n            // IsKey: field.getIsKey(),\n            // ColumnSQL: field.getColumnSQL(true),\n            // IsEncrypted: field.getIsEncrypted(),\n            // IsParentColumn: field.getIsParentColumn()\n            );\n          }\n        }\n        return this.gFieldLessData;\n      }\n    } else {\n      if (this.gFieldData) return this.gFieldData;else {\n        this.gFieldData = [];\n        this.gFieldUnique = [];\n        for (var i = 0; i < size; i++) {\n          var field = m_fields[i];\n          this.gFieldData.push({\n            IsVirtualColumn: field.getIsVirtualColumn(),\n            DisplayType: field.getDisplayType(),\n            ColumnName: field.getColumnName(),\n            IsKey: field.getIsKey(),\n            ColumnSQL: field.getColumnSQL(true),\n            IsEncryptedColumn: field.getIsEncryptedColumn(),\n            IsParentColumn: field.getIsParentColumn(),\n            Name: field.getHeader(),\n            IsUnique: field.getIsUnique(),\n            IsObscure: field.getObscureType() ? true : false\n          });\n          if (field.getIsUnique() && !field.getIsVirtualColumn() && field.getIsDisplayed()) {\n            this.gFieldUnique.push(field.getColumnName());\n          }\n        }\n        return this.gFieldData;\n      }\n    }\n  };\n  GridTable.prototype.createObsecureFields = function (mfields) {\n    var size = mfields.length;\n    if (this.gFieldObscureList) return this.gFieldObscureList;else {\n      this.gFieldObscureList = [];\n      for (var i = 0; i < size; i++) {\n        var field = mfields[i];\n        if (field.getObscureType()) {\n          this.gFieldObscureList.push(field.getColumnName().toLowerCase());\n        }\n      }\n      return this.gFieldObscureList;\n    }\n  };\n  GridTable.prototype.dataRefreshAll = function () {\n    this.inserting = false; //\tshould not happen\n    this.dataIgnore();\n    this.close(false);\n    this.open(this.maxRows);\n    //\tInfo\n    //this.rowData = null;\n    //this.changed = false;\n    //this.rowChanged = -1;\n    //this.inserting = false;\n    //fireTableDataChanged();\n    this.dseEvent = "Refreshed";\n    //this.fireDataStatusIEvent("Refreshed", "");\n  };\n  GridTable.prototype.dataRequery = function (whereClause) {\n    this.close(false);\n    this.setSelectWhereClause(whereClause);\n    this.rowData = null;\n    this.changed = false;\n    this.rowChanged = -1;\n    this.inserting = false;\n    this.open(this.maxRows);\n    //  Info\n\n    //fireTableDataChanged();\n    this.dseEvent = "Refreshed";\n    //this.fireDataStatusIEvent("Refreshed", "");\n    return true;\n  };\n  GridTable.prototype.dataRefresh = function (row) {\n    if (row < 0 || this.getRowCount() == 0 || this.inserting) return null;\n    var rData = this.getRow(row);\n    //  ignore\n    this.dataIgnore();\n\n    //\tCreate SQL\n    var where = this.getWhereClause(rData);\n    if (where == null || where.length == 0) where = "1=2";\n    //var sql = this.SQL_Select + " WHERE " + where;\n\n    var rowDataDB = null;\n    var dr = null;\n    try {\n      //sql = VIS.secureEngine.encrypt(sql);\n      //dr = VIS.dataContext.getWindowRecord(sql, this.createGridFieldArr(this.gridFields, true), this.createObsecureFields(this.gridFields));\n      $.ajax({\n        url: baseUrl + "Window/GetWindowRecord",\n        async: false,\n        type: \'post\',\n        data: {\n          ctxp: VIS.context.getWindowCtx(this.gTable._windowNo),\n          Columns: this.columns,\n          TableName: this.gTable._tableName,\n          AD_Window_ID: this.gridFields[0].getAD_Window_ID(),\n          AD_Tab_ID: this.AD_Tab_ID,\n          WindowNo: this.gTable._windowNo,\n          WhereClause: VIS.secureEngine.encrypt(where),\n          Encryptedfields: this.createGridFieldArr(this.gridFields, true),\n          ObscureFields: this.createObsecureFields(this.gridFields)\n        },\n        success: function (jData) {\n          dr = new VIS.DB.DataReader().toJson(jData);\n        },\n        error: function () {}\n      });\n\n      //\tonly one row\n      if (dr.read()) rowDataDB = this.readData(dr);\n      rowDataDB.recid = rData.recid; //set record ID \n    } catch (e) {\n      console.log(e);\n      sql = VIS.secureEngine.decrypt(sql);\n      this.log.log(Level.SEVERE, sql, e);\n      this.fireDataStatusEEvent("RefreshError", sql, true);\n      return null;\n    } finally {\n      if (dr != null) {\n        dr.dispose();\n      }\n    }\n    this.rowData = null;\n    this.changed = false;\n    this.rowChanged = -1;\n    this.inserting = false;\n    //fireTableRowsUpdated(row, row);\n    this.fireTableModelChanged(VIS.VTable.prototype.ROW_REFRESH, rowDataDB);\n    this.fireDataStatusIEvent("Refreshed", "");\n    return rowDataDB;\n  };\n\n  /*\r\n    *\t get current row record\r\n    *  @param row current row index\r\n    *  @return row Object\r\n    */\n\n  GridTable.prototype.getRowFromDB = function (row, callback) {\n    if (row < 0 || this.getRowCount() == 0 || this.inserting) return null;\n    var rData = this.getRow(row);\n\n    //\tCreate SQL\n    var where = this.getWhereClause(rData);\n    if (where == null || where.length == 0) where = "1=2";\n    //var sql = this.SQL_Select + " WHERE " + where;\n\n    var rowDataDB = null;\n    var dr = null;\n    var isAsync = callback ? true : false;\n    var self = null;\n    if (callback) {\n      self = this;\n    }\n    try {\n      //sql = VIS.secureEngine.encrypt(sql);\n      //dr = VIS.dataContext.getWindowRecord(sql, this.createGridFieldArr(this.gridFields, true), this.createObsecureFields(this.gridFields));\n      $.ajax({\n        url: baseUrl + "Window/GetWindowRecord",\n        async: isAsync,\n        type: \'post\',\n        data: {\n          ctxp: VIS.context.getWindowCtx(this.gTable._windowNo),\n          Columns: this.columns,\n          TableName: this.gTable._tableName,\n          AD_Window_ID: this.gridFields[0].getAD_Window_ID(),\n          AD_Tab_ID: this.AD_Tab_ID,\n          WindowNo: this.gTable._windowNo,\n          WhereClause: VIS.secureEngine.encrypt(where),\n          Encryptedfields: this.createGridFieldArr(this.gridFields, true),\n          ObscureFields: this.createObsecureFields(this.gridFields)\n        },\n        success: function (jData) {\n          dr = new VIS.DB.DataReader().toJson(jData);\n          if (callback) {\n            if (dr.read()) rowDataDB = self.readData(dr);\n            rowDataDB.recid = rData.recid; //set record ID \n            callback(rowDataDB);\n          }\n        },\n        error: function () {}\n      });\n      if (!callback) {\n        //\tonly one row\n        if (dr.read()) rowDataDB = this.readData(dr);\n        rowDataDB.recid = rData.recid; //set record ID \n      }\n    } catch (e) {\n      console.log(e);\n      sql = VIS.secureEngine.decrypt(sql);\n      this.log.log(Level.SEVERE, sql, e);\n      // this.fireDataStatusEEvent("RefreshError", sql, true);\n      return null;\n    } finally {\n      if (dr != null) {\n        dr.dispose();\n      }\n    }\n    return rowDataDB;\n  };\n\n  /*\r\n   *\tNew Record after current Row\r\n   *  @param currentRow row\r\n   *  @param copyCurrent copy\r\n   *  @return true if success -\r\n   *  Error info (Access*, AccessCannotInsert) is saved in the log\r\n   */\n  GridTable.prototype.dataNew = function (currentRow, copyCurrent) {\n    this.log.info("Current=" + currentRow + ", Copy=" + copyCurrent);\n    //  Read only\n    if (this.readOnly) {\n      this.fireDataStatusEEvent("AccessCannotInsert", "", true);\n      return false;\n    }\n\n    /** @todo No TableLevel */\n    //  || !Access.canViewInsert(m_ctx, m_WindowNo, tableLevel, true, true))\n    //  fireDataStatusEvent(Log.retrieveError());\n\n    //  see if we need to save\n\n    //todo dataSave(-2, false);\n\n    this.inserting = true;\n    //\tCreate default data\n    var size = this.gridFields.length; // .size();\n    this.rowData = {}; // //\t"original" data\n    var rowData = {};\n    var tempWindowNo = this.gTable._windowNo + VIS.EnvConstants.WINDOW_TEMP;\n    //\tfill data\n    if (copyCurrent) {\n      //MSort sort = m_sort.get(currentRow);\n      var origData = this.getRow(currentRow);\n      for (var i = 0; i < size; i++) {\n        var field = this.gridFields[i];\n        var columnName = field.getColumnName();\n        var colNameLower = columnName.toLowerCase();\n        if (field.getIsVirtualColumn()) ;else if (field.getIsKey() || columnName.equals("AD_Client_ID") || columnName.equals("IsActive")\n        //\n        || columnName.startsWith("Created") || columnName.startsWith("Updated") || columnName.equals("EntityType") || columnName.equals("DocumentNo") || columnName.equals("Processed") || columnName.equals("IsSelfService") || columnName.equals("DocAction") || columnName.equals("DocStatus") || columnName.startsWith("Ref_") || columnName.equals("Posted")\n        //\tOrder/Invoice\n        || columnName.equals("GrandTotal") || columnName.equals("TotalLines") || columnName.equals("C_CashLine_ID") || columnName.equals("C_Payment_ID") || columnName.equals("IsPaid") || columnName.equals("IsAllocated") || columnName.equalsIgnoreCase("C_Location_ID") || columnName.equals("IsApproved") || columnName.equals("IsDelivered") || columnName.equals("IsInvoiced") || columnName.equals("TotalDr") || columnName.equals("TotalCr") || columnName.equalsIgnoreCase("I_IsImported")) {\n          var oo = field.getDefault(this.ctx, tempWindowNo);\n          rowData[colNameLower] = oo;\n          if (oo != null) this.ctx.setWindowContext(tempWindowNo, field.getColumnName(), oo.toString());\n        } else if (field.getIsCopy()) {\n          var oo1 = origData[columnName.toLowerCase()];\n          rowData[colNameLower] = oo1;\n          if (oo1 != null) this.ctx.setWindowContext(tempWindowNo, field.getColumnName(), oo1.toString());\n        } else {\n          var oo = field.getDefault(this.ctx, tempWindowNo);\n          rowData[colNameLower] = oo;\n          if (oo != null) this.ctx.setWindowContext(tempWindowNo, field.getColumnName(), oo.toString());\n        }\n      }\n    } else\n      //\tnew\n      {\n        for (var i = 0; i < size; i++) {\n          var field = this.gridFields[i];\n          var oo = field.getDefault(this.ctx, tempWindowNo);\n          rowData[field.getColumnName().toLowerCase()] = oo;\n          if (oo != null) this.ctx.setWindowContext(tempWindowNo, field.getColumnName(), oo.toString());\n        }\n      }\n\n    //this.mQueryCompletedListener\n    this.ctx.removeWindow(tempWindowNo);\n    this.changed = true;\n    this.compareDB = true;\n    //\t\tm_rowChanged = -1;  //  only changed in setValueAt\n    this.newRow = currentRow + 1;\n\n    //  if there is no record, the current row could be 0 (and not -1)\n    if (this.getRowCount() < this.newRow) this.newRow = this.getRowCount();\n    this.rowChanged = this.newRow; //  force save checking on new record\n    //\tadd Data at end of buffer\n\n    //if (!this.mSortList) {\n\n    //}\n    //this.mSortList.splice(this.newRow, 0, rowData);\n    //this.mSortList.inser .push(rowData);\n    //\tadd Sort pointer\n    //m_sort.add(m_newRow, sort);\n    this.rowCount++;\n    rowData.recid = this.rowCount;\n    this.pazeSize++;\n    //\tinform\n    //log.finer("Current=" + currentRow + ", New=" + m_newRow);\n    this.fireTableModelChanged(VIS.VTable.prototype.ROW_ADD, rowData, this.newRow, null);\n    //this.fireDataStatusIEvent(copyCurrent ? "UpdateCopied" : "Inserted", "");\n    this.log.fine("Current=" + this.currentRow + ", New=" + this.newRow + " - complete");\n    return true;\n  }; //\tdataNew\n\n  GridTable.prototype.dataDelete = function (selIndices, currentRow) {\n    if (!selIndices || selIndices.length < 0) return false;\n\n    //\tTab R/O\n    if (this.readOnly) {\n      this.fireDataStatusEEvent("AccessCannotDelete", "", true); //\tprivileges\n      return false;\n    }\n\n    //\tIs this record deletable?\n    if (!this.deleteable) {\n      this.fireDataStatusEEvent("AccessNotDeleteable", "", true); //\taudit\n      return false;\n    }\n    var hasKeyColumn = this.gTable._indexKeyColumn != -1;\n    var hasProcessedColumn = this.gTable._indexProcessedColumn > 0 && !this.gTable._tableName.startsWith("I_");\n    var hasProcessedRecord = [];\n\n    //PrepareJson Object\n    var recIds = [];\n    var singleKeyWhere = [];\n    var multiKeyWhere = [];\n    var AD_Table_ID = this.AD_Table_ID;\n    var rowData = null;\n\n    //prepare postive list \n    //collect all records, exclude processed records\n    for (var sel = 0; sel < selIndices.length; sel++) {\n      rowData = this.mSortList[selIndices[sel]];\n      if (hasProcessedColumn) {\n        var processed = this.getValueAt(selIndices[sel], "processed");\n        if (processed != null && processed) {\n          //fireDataStatusEEvent("CannotDeleteTrx", "", true);\n          hasProcessedRecord.push(rowData.recid);\n          continue;\n        }\n      }\n      recIds.push(rowData.recid);\n      if (hasKeyColumn) {\n        singleKeyWhere.push(rowData[this.keyColumnName.toLowerCase()]);\n      } else {\n        multiKeyWhere.push(this.getWhereClause(rowData));\n      }\n    } //end\n\n    var out = null;\n    if (recIds.length > 0)\n      //has records to delete\n      {\n        var inn = {\n          RecIds: recIds,\n          HasKeyColumn: hasKeyColumn,\n          TableName: this.gTable._tableName,\n          AD_Table_ID: AD_Table_ID\n        };\n        if (hasKeyColumn) inn.SingleKeyWhere = singleKeyWhere;else inn.MultiKeyWhere = multiKeyWhere;\n        //call Delete\n        out = VIS.dataContext.deleteWRecords(inn);\n        out = JSON.parse(out);\n      } else if (hasProcessedRecord.length > 0)\n      //Single Record\n      {\n        this.fireDataStatusEEvent("CannotDeleteTrx", "", true);\n        return false;\n      }\n    if (out) {\n      var selIndexOrIds = null;\n      if (out.UnDeletedRecIds && out.UnDeletedRecIds.length > 0) {\n        selIndexOrId = out.UnDeletedRecIds;\n      } else if (hasProcessedRecord.length > 0) {\n        selIndexOrId = hasProcessedRecord;\n      } else {\n        selIndexOrId = currentRow;\n      }\n      if (out.DeletedRecIds && out.DeletedRecIds.length > 0) {\n        this.rowCount -= out.DeletedRecIds.length;\n        this.fireTableModelChanged(VIS.VTable.prototype.ROW_DELETE, out.DeletedRecIds, selIndexOrId);\n        if (out.RecIds && out.RecIds.length > 0) this.fireRowChanged(false, out.RecIds);\n      }\n      if (out.ErrorMsg) {\n        this.log.log(Level.SEVERE, out.ErrorMsg);\n      }\n      if (out.InfoMsg) {\n        this.log.log(Level.Info, out.InfoMsg);\n      }\n      if (out.IsError) {\n        if (out.FireEEvent) this.fireDataStatusEEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError);\n        return false;\n      } else {\n        this.changed = false;\n        this.rowChanged = -1;\n        this.fireDataStatusIEvent("Deleted", "");\n      }\n    }\n    return true;\n  };\n  GridTable.prototype.dataDeleteAsync = function (selIndices, currentRow) {\n    var localthis = this;\n    return new Promise(function (resolve, reject) {\n      if (!selIndices || selIndices.length < 0) {\n        resolve(false);\n        return;\n      }\n\n      //\tTab R/O\n      if (localthis.readOnly) {\n        localthis.fireDataStatusEEvent("AccessCannotDelete", "", true); //\tprivileges\n        resolve(false);\n        return;\n      }\n\n      //\tIs this record deletable?\n      if (!localthis.deleteable) {\n        localthis.fireDataStatusEEvent("AccessNotDeleteable", "", true); //\taudit\n        resolve(false);\n        return;\n      }\n      var hasKeyColumn = localthis.gTable._indexKeyColumn != -1;\n      var hasProcessedColumn = localthis.gTable._indexProcessedColumn > 0 && !localthis.gTable._tableName.startsWith("I_");\n      var hasProcessedRecord = [];\n\n      //PrepareJson Object\n      var recIds = [];\n      var singleKeyWhere = [];\n      var multiKeyWhere = [];\n      var AD_Table_ID = localthis.AD_Table_ID;\n      var rowData = null;\n\n      //prepare postive list \n      //collect all records, exclude processed records\n      for (var sel = 0; sel < selIndices.length; sel++) {\n        rowData = localthis.mSortList[selIndices[sel]];\n        if (hasProcessedColumn) {\n          var processed = localthis.getValueAt(selIndices[sel], "processed");\n          if (processed != null && processed) {\n            //fireDataStatusEEvent("CannotDeleteTrx", "", true);\n            hasProcessedRecord.push(rowData.recid);\n            continue;\n          }\n        }\n        recIds.push(rowData.recid);\n        if (hasKeyColumn) {\n          singleKeyWhere.push(rowData[localthis.keyColumnName.toLowerCase()]);\n        } else {\n          multiKeyWhere.push(localthis.getWhereClause(rowData));\n        }\n      } //end\n\n      var out = null;\n      if (recIds.length > 0)\n        //has records to delete\n        {\n          var inn = {\n            RecIds: recIds,\n            HasKeyColumn: hasKeyColumn,\n            TableName: localthis.gTable._tableName,\n            AD_Table_ID: AD_Table_ID\n          };\n          if (hasKeyColumn) inn.SingleKeyWhere = singleKeyWhere;else inn.MultiKeyWhere = multiKeyWhere;\n\n          //var that = this;\n\n          //call Delete\n          out = VIS.dataContext.deleteWRecords(inn).then(function (out) {\n            out = JSON.parse(out);\n            if (out) {\n              var selIndexOrIds = null;\n              if (out.UnDeletedRecIds && out.UnDeletedRecIds.length > 0) {\n                selIndexOrId = out.UnDeletedRecIds;\n              } else if (hasProcessedRecord.length > 0) {\n                selIndexOrId = hasProcessedRecord;\n              } else {\n                selIndexOrId = currentRow;\n              }\n              if (out.DeletedRecIds && out.DeletedRecIds.length > 0) {\n                localthis.rowCount -= out.DeletedRecIds.length;\n                localthis.fireTableModelChanged(VIS.VTable.prototype.ROW_DELETE, out.DeletedRecIds, selIndexOrId);\n                if (out.RecIds && out.RecIds.length > 0) localthis.fireRowChanged(false, out.RecIds);\n              }\n              if (out.ErrorMsg) {\n                localthis.log.log(Level.SEVERE, out.ErrorMsg);\n              }\n              if (out.InfoMsg) {\n                localthis.log.log(Level.Info, out.InfoMsg);\n              }\n              if (out.IsError) {\n                if (out.FireEEvent) localthis.fireDataStatusEEvent(out.EventParam.Msg, out.EventParam.Info, out.EventParam.IsError);\n                resolve(false);\n                return;\n              } else {\n                localthis.changed = false;\n                localthis.rowChanged = -1;\n                localthis.fireDataStatusIEvent("Deleted", "");\n              }\n              resolve(true);\n              return;\n            }\n          });\n        } else if (hasProcessedRecord.length > 0)\n        //Single Record\n        {\n          localthis.fireDataStatusEEvent("CannotDeleteTrx", "", true);\n          resolve(false);\n          return;\n        }\n    });\n  };\n  GridTable.prototype.readData = function (dr) {\n    var rowDB = {};\n    var size = this.gridFields.length;\n    var columnName = null;\n    //\tTypes see also MField.createDefault\n    try {\n      //\tget row data\n      for (var j = 0; j < size; j++) {\n        columnName = this.gridFields[j].getColumnName().toLowerCase();\n        rowDB[columnName] = this.readDataOfColumn(columnName, dr.getCell(columnName));\n        columnName = null;\n      }\n      return rowDB;\n    } catch (e) {\n      throw e;\n    }\n  };\n  GridTable.prototype.readDataOfObject = function (obj) {\n    var rowDB = {};\n    var size = this.gridFields.length;\n    var columnName = null;\n    var imgColList = [];\n    //\tTypes see also MField.createDefault\n    try {\n      //\tget row data\n      for (var j = 0; j < size; j++) {\n        columnName = this.gridFields[j].getColumnName().toLowerCase();\n        rowDB[columnName] = this.readDataOfColumn(columnName, obj[columnName]);\n        if (this.gridFields[j].getDisplayType() == VIS.DisplayType.Image) {\n          imgColList.push("imgurlcolumn" + columnName);\n        }\n        columnName = null;\n      }\n      if (imgColList && imgColList.length > 0) {\n        for (k = 0; k < imgColList.length; k++) {\n          rowDB[imgColList[k]] = this.readDataOfColumn(imgColList[k], obj[imgColList[k]]);\n        }\n      }\n      return rowDB;\n    } catch (e) {\n      throw e;\n    }\n  };\n  GridTable.prototype.close = function (finalCall) {\n    if (!this.isOpen) return;\n    //  remove listeners\n    if (finalCall) {}\n    if (!this.inserting) {\n      //DataSave(false);\t//\tnot manual\n    }\n    if (this.bufferList != null) {\n      this.bufferList.length = 0;\n      this.bufferList = null;\n      this.bufferList = [];\n      this.mSortList = null;\n    }\n    if (this.mSortList != null) {\n      this.mSortList = null;\n    }\n    if (finalCall) {\n      this.dispose();\n    }\n    this.isOpen = false;\n  }; //\tclose\n\n  GridTable.prototype.dataIgnore = function (skipNotify) {\n    if (!this.inserting && !this.changed && this.rowChanged < 0) {\n      return;\n    }\n    if (this.inserting) {\n      //\tGet Sort\n      // MSort sort = m_sort.get(m_newRow);\n      //int bufferRow = sort.index;\n      //this.mSortList.splice(this.newRow, 1);\n\n      //\tDelete row in Buffer and shifts all below up\n      //m_buffer.remove(bufferRow);\n      this.rowCount--;\n      this.pazeSize--;\n      //\tDelete row in Sort\n      //m_sort.remove(m_newRow);\t//\tpintint to the last column, so no adjustment\n      //\n      this.changed = false;\n      //this.changed = false;\n      this.rowChanged = -1;\n      this.inserting = false;\n      //\tinform\n      // var isLastRecord = this.newRow >= this.rowCount && this.rowCount > 0;\n      this.fireTableModelChanged(VIS.VTable.prototype.ROW_UNDO, this.mSortList[this.newRow].recid, this.newRow);\n    } else {\n      if (this.rowData != null) {\n        var row = this.getRow(this.rowChanged);\n        $.extend(row, this.rowData);\n      }\n    }\n    this.changed = false;\n    this.rowChanged = -1;\n    this.rowData = null;\n    this.inserting = false;\n    this.newRow = -1;\n    //return true;\n    if (!skipNotify) {\n      this.fireDataStatusIEvent("Ignored", "");\n    }\n    return true;\n  };\n  GridTable.prototype.createDSE = function () {\n    var changed = this.changed;\n    if (this.rowChanged != -1) changed = true;\n    var dse = new DataStatusEvent(null, this.getRowCount(), changed,\n    //m_ctx.isAutoCommit(m_WindowNo), m_inserting);\n    false, this.inserting);\n    dse.setPageInfo(this.currentPage, this.rowCount, this.pazeSize);\n    dse.AD_Table_ID = this.gTable._AD_Table_ID;\n    dse.Record_ID = null;\n    return dse;\n  };\n  GridTable.prototype.fireDataStatusChanged = function (e) {\n    if (this.mDataListener) {\n      this.mDataListener.dataStatusChanged(e);\n    }\n    e = null;\n  };\n  GridTable.prototype.fireTableModelChanged = function (type, record, index, fireSelect) {\n    if (this.mCardModelListener) {\n      this.mCardModelListener.tableModelChanged(type, record, index, fireSelect);\n    }\n    if (this.mTableModelListener) {\n      this.mTableModelListener.tableModelChanged(type, record, index, fireSelect);\n    }\n  };\n  GridTable.prototype.fireRowChanged = function (save, keyID) {\n    if (this.mRowChangedListener) {\n      this.mRowChangedListener.rowChanged(save, keyID);\n    }\n  };\n  GridTable.prototype.fireDataStatusIEvent = function (AD_Message, info) {\n    var e = this.createDSE();\n    e.setInfo(AD_Message, info, false, false);\n    this.fireDataStatusChanged(e);\n  };\n  GridTable.prototype.fireQueryCompleted = function (args) {\n    // this.fireDataStatusIEvent(this.dseEvent);\n    if (this.mQueryCompletedListener) this.mQueryCompletedListener.queryCompleted(args);\n    args = null;\n  };\n\n  //AD_Message, info, isError\n  //errorLog\n  GridTable.prototype.fireDataStatusEEvent = function (AD_Message, info, isError, isWarn) {\n    if (arguments.length === 1) {\n      this.fireDataStatusEEvent(myarguments[0].value, myarguments[0].name, true, false);\n    } else {\n      var e = this.createDSE();\n      if (!isWarn) isWarn = !isError;else {\n        isError = !isWarn;\n      }\n      e.setInfo(AD_Message, info, isError, isWarn);\n      //if (isError)\n      //    log.saveWarning(AD_Message, info);\n      this.fireDataStatusChanged(e);\n    }\n  };\n\n  //GridTable.prototype.fireDataStatusEEvent = function (errorLog) {\n  //    if (errorLog != null)\n  //        this.fireDataStatusEEvent(errorLog.value, errorLog.name, true);\n  //};\n\n  GridTable.prototype.addDataStatusListener = function (listner) {\n    this.mDataListener = listner;\n  };\n  GridTable.prototype.removeDataStatusListener = function (listner) {\n    this.mDataListener = null;\n  };\n  GridTable.prototype.addQueryCompleteListner = function (listner) {\n    this.mQueryCompletedListener = listner;\n  };\n  GridTable.prototype.removeQueryCompleteListner = function (listner) {\n    this.mQueryCompletedListener = null;\n  };\n  GridTable.prototype.addTableModelListener = function (listner) {\n    this.mTableModelListener = listner;\n  };\n  GridTable.prototype.removeTableModelListener = function (listner) {\n    this.mTableModelListener = null;\n    listner = null;\n  };\n  GridTable.prototype.addCardModelListener = function (listner) {\n    this.mCardModelListener = listner;\n  };\n  GridTable.prototype.removeCardModelListener = function (listner) {\n    this.mCardModelListener = null;\n    listner = null;\n  };\n  GridTable.prototype.addRowChangedListener = function (listner) {\n    this.mRowChangedListener = listner;\n  };\n  GridTable.prototype.removeRowChangedListener = function (listner) {\n    this.mRowChangedListener = null;\n    listner = null;\n  };\n  GridTable.prototype.updateTableModel = function (field) {\n    var columnName = field.getColumnName();\n    var displayType = field.getDisplayType();\n    //\tInteger, ID, Lookup (UpdatedBy is a numeric column)\n    if (displayType == VIS.DisplayType.Integer || VIS.DisplayType.IsID(displayType) // JJ: don\'t touch!\n    && (columnName.endsWith("_ID") || columnName.endsWith("_Acct") || columnName.endsWith("_ID_1") || columnName.endsWith("_ID_2") || columnName.endsWith("_ID_3")) || columnName.endsWith("atedBy")) {\n      //dc = new DataColumn(columnName, typeof(Int32));\n      this.defaultModel[columnName.toLowerCase()] = new Number();\n    }\n\n    //\tNumber\n    else if (VIS.DisplayType.IsNumeric(displayType)) {\n      //dc = new DataColumn(columnName, typeof(Decimal));\t\t\t//\tBigDecimal\n      this.defaultModel[columnName.toLowerCase()] = new Number();\n    }\n    //\tDate\n    else if (VIS.DisplayType.IsDate(displayType)) {\n      //dc = new DataColumn(columnName, typeof(DateTime));\t//\tTimestamp\n      this.defaultModel[columnName.toLowerCase()] = new Date();\n    }\n    //\tRowID or Key (and Selection)\n    else if (displayType == VIS.DisplayType.RowID) {\n      dc = new DataColumn(columnName, typeof Object);\n      this.defaultModel[columnName.toLowerCase()] = new Object();\n    }\n    //\tYesNo\n    else if (displayType == VIS.DisplayType.YesNo) {\n      //if (field.isEncryptedColumn())\n      //\tstr = (String)decrypt(str);\n      //dc = new DataColumn(columnName, typeof(String));\t//\tBoolean\n      this.defaultModel[columnName.toLowerCase()] = new Boolean();\n    }\n    //\tLOB\n    else if (VIS.DisplayType.IsLOB(displayType)) {\n      //if (DisplayType.Binary == displayType)\n      // {\n      //     dc = new DataColumn(columnName, typeof(Byte[]));\n      // }\n      // else\n      // {\n      // dc = new DataColumn(columnName, typeof (String));\n      this.defaultModel[columnName.toLowerCase()] = new String();\n      // }\n    }\n    // For EnterpriseDB (Vienna Type Long Text is stored as Text in EDB)\n    //\tString\n    else {\n      //dc = new DataColumn(columnName, typeof(String));\n      this.defaultModel[columnName.toLowerCase()] = new String();\n    }\n\n    //defaultModel.Columns.Add(dc);\n  };\n  GridTable.prototype.dispose = function () {\n    originalLength = this.gridFields.length;\n    var gField;\n    for (var i = originalLength; i > 0; i--) {\n      gField = this.gridFields.pop();\n      gField.dispose();\n      gField = null;\n    }\n    this.gridFields.length = 0;\n    this.gTable = null;\n    this.gridFields = null;\n    this.gFieldLessData = null;\n    this.gFieldData = null;\n    this.gFieldUnique = null;\n  };\n  GridTable.prototype.maintainVersionFieldChanged = function (rowData, oldRowData) {\n    // return false if new Record is inserted\n    // do not ask for date if new Record\n    // if (oldRowData["updatedby"]) {\n    if (this.gridFields && this.gridFields.length > 0) {\n      for (var i = 0; i < this.gridFields.length; i++) {\n        if (this.gridFields[i].vo.IsMaintainVersions) {\n          var colName = this.gridFields[i].vo.ColumnName.toLowerCase();\n          if (rowData[colName] != oldRowData[colName]) return true;\n        }\n      }\n    }\n    // }\n    return false;\n  };\n\n  //********************* END *****************//\n\n  //****************************************************//\n  //**             GRID FIELD                        **//\n  //**************************************************//\n  /**\r\n  *  Grid Field Model.\r\n  * \r\n  *  - Fields are a combination of AD_Field (the display attributes)\r\n  *    and AD_Column (the storage attributes).\r\n  * \r\n  *  - The Field maintains the current edited value. If the value is changed,\r\n  *  - it fire PropertyChange "FieldValue".\r\n  *  <br>\r\n  *  Usually editors listen to their fields.\r\n  *\r\n  */\n  function GridField(gField) {\n    this.gfield = gField;\n    this.vo = gField._vo;\n    this.vo["orginalDispaly"] = gField._vo.displayType;\n    this.oldValue;\n    this.value;\n    this.inserting;\n    this.error;\n    this.valueNoFire = true;\n    this.gridTab = null;\n    var m_lookup = null;\n    /* Load Lookup */\n    if (this.vo.IsDisplayedf || this.vo.IsDisplayedMR || this.vo.ColumnName.toLower().equals("createdby") || gField._vo.ColumnName.toLower().equals("updatedby") || this.vo.IsHeaderPanelitem) {\n      if (gField._vo.lookupInfo != null && VIS.DisplayType.IsLookup(gField._vo.displayType)) {\n        if (VIS.DisplayType.IsLookup(gField._vo.displayType)) {\n          m_lookup = new VIS.MLookup(gField._vo.lookupInfo, gField._lookup, gField._vo.AD_Window_ID, gField._vo.AD_Field_ID, gField._vo.AD_Tab_ID);\n          if (this.vo.tabNo > 0)\n            //&& !_vo._isThroughRoleCenter)  // defer load lookup data of tab \' control except first tab\n            {\n              m_lookup.initialize(true);\n              VIS.MLookupCache.addWindowLookup(this.vo.windowNo, m_lookup);\n            } else {\n            m_lookup.initialize();\n          }\n        }\n      } else if (gField._vo.displayType == VIS.DisplayType.Location) {\n        m_lookup = new VIS.MLocationLookup(VIS.context, gField._vo.windowNo);\n      } else if (gField._vo.displayType == VIS.DisplayType.Locator) {\n        m_lookup = new VIS.MLocatorLookup(VIS.context, gField._vo.windowNo);\n        //this.vo.DefaultValue = m_lookup.getDefault();\n      } else if (gField._vo.displayType == VIS.DisplayType.Account) {\n        m_lookup = new VIS.MAccountLookup(VIS.context, gField._vo.windowNo);\n        m_lookup.setTabNo(this.vo.tabNo);\n      } else if (gField._vo.displayType == VIS.DisplayType.PAttribute) {\n        m_lookup = new VIS.MPAttributeLookup(VIS.context, gField._vo.windowNo);\n      } else if (gField._vo.displayType == VIS.DisplayType.GAttribute) {\n        m_lookup = new VIS.MGAttributeLookup(VIS.context, gField._vo.windowNo);\n      } else if (gField._vo.displayType == VIS.DisplayType.AmtDimension) {\n        m_lookup = new VIS.MAmtDivLookup(VIS.context, gField._vo.windowNo);\n      } else if (gField._vo.displayType == VIS.DisplayType.ProductContainer) {\n        m_lookup = new VIS.MProductContainerLookup(VIS.context, gField._vo.windowNo);\n      }\n    }\n    this.lookup = m_lookup;\n    /*value Change Listner */\n    this.propertyChangeListner;\n    this.log = VIS.Logging.VLogger.getVLogger("VIS.GridField");\n    gField = null;\n  }\n  ;\n  GridField.prototype.PROPERTY = \'FieldValue\';\n  /** Indicator for new Value\t\t\t\t*/\n  GridField.prototype.INSERTING = \'FieldValueInserting\';\n  GridField.prototype.setGridTab = function (gridTab) {\n    this.gridTab = gridTab;\n  };\n  GridField.prototype.getIsInserting = function () {\n    return this.inserting;\n  };\n  GridField.prototype.getIsDisplayed = function (checkContext) {\n    if (arguments.length == 0) {\n      return this.vo.IsDisplayedf;\n    } else {\n      if (!this.vo.IsDisplayedf) return false;\n      //  no restrictions\n      if (this.vo.DisplayLogic == null || this.vo.DisplayLogic.equals("")) return true;\n      ////  ** dynamic content **\n\n      if (checkContext) {\n        //To-Do\n        var retValue = false;\n        var checkAll = [];\n        var logical = [];\n        //changes done by Jagmohan Bhatt on 5-May-2010\n        //purpose: display logic defined by multiple field action\n        //best way: [@fieldName1 = <someValue>] &/| [@fieldName2 = <someValue]\n        //currently it will support condition from only two fields.\n        var bracket = new VIS.StringTokenizer(this.vo.DisplayLogic, "[]");\n        while (bracket.hasMoreTokens()) {\n          var currentToken = bracket.nextToken();\n          if (currentToken.trim() != " & ".trim()) {\n            retValue = VIS.Evaluator.evaluateLogic(this, currentToken);\n            checkAll.push(retValue);\n          } else {\n            logical.push(currentToken);\n          }\n        }\n        if (checkAll.length > 1) {\n          if (logical[0].trim().equals("&")) {\n            if (checkAll.indexOf(false) > -1)\n              //conatins\n              retValue = false;else retValue = true;\n          } else if (logical[0].trim().equals("|")) {\n            if (checkAll.indexOf(true) > -1)\n              // contains()\n              retValue = true;\n          }\n        }\n        //    //log.finest(_vo.COLUMNNAME\n        //        + " (" + _vo.DisplayLogic + ") => " + retValue);\n        return retValue;\n      }\n      return true;\n    }\n  };\n  GridField.prototype.getIsDisplayedMR = function (checkContext) {\n    if (arguments.length == 0) {\n      return this.vo.IsDisplayedMR;\n    } else {\n      if (!this.vo.IsDisplayedMR) return false;\n      //  no restrictions\n      if (this.vo.DisplayLogic == null || this.vo.DisplayLogic.equals("")) return true;\n      ////  ** dynamic content **\n\n      if (checkContext) {\n        //To-Do\n        var retValue = false;\n        var checkAll = [];\n        var logical = [];\n        //changes done by Jagmohan Bhatt on 5-May-2010\n        //purpose: display logic defined by multiple field action\n        //best way: [@fieldName1 = <someValue>] &/| [@fieldName2 = <someValue]\n        //currently it will support condition from only two fields.\n        var bracket = new VIS.StringTokenizer(this.vo.DisplayLogic, "[]");\n        while (bracket.hasMoreTokens()) {\n          var currentToken = bracket.nextToken();\n          if (currentToken.trim() != " & ".trim()) {\n            retValue = VIS.Evaluator.evaluateLogic(this, currentToken);\n            checkAll.push(retValue);\n          } else {\n            logical.push(currentToken);\n          }\n        }\n        if (checkAll.length > 1) {\n          if (logical[0].trim().equals("&")) {\n            if (checkAll.indexOf(false) > -1)\n              //conatins\n              retValue = false;else retValue = true;\n          } else if (logical[0].trim().equals("|")) {\n            if (checkAll.indexOf(true) > -1)\n              // contains()\n              retValue = true;\n          }\n        }\n        //    //log.finest(_vo.COLUMNNAME\n        //        + " (" + _vo.DisplayLogic + ") => " + retValue);\n        return retValue;\n      }\n      return true;\n    }\n  };\n  GridField.prototype.getColumnName = function () {\n    return this.vo.ColumnName;\n  };\n  GridField.prototype.getIsLongField = function () {\n    //\tif (m_vo.displayType == DisplayType.String \n    //\t\t|| m_vo.displayType == DisplayType.Text \n    //\t\t|| m_vo.displayType == DisplayType.Memo\n    //\t\t|| m_vo.displayType == DisplayType.TextLong\n    //\t\t|| m_vo.displayType == DisplayType.Image)\n    return this.vo.DisplayLength >= 30;\n  };\n  GridField.prototype.getFieldColSpan = function () {\n    //\tif (m_vo.displayType == DisplayType.String \n    //\t\t|| m_vo.displayType == DisplayType.Text \n    //\t\t|| m_vo.displayType == DisplayType.Memo\n    //\t\t|| m_vo.displayType == DisplayType.TextLong\n    //\t\t|| m_vo.displayType == DisplayType.Image)\n    if (this.vo.DisplayLength <= 9) return 1;\n    if (this.vo.DisplayLength <= 19) return 2;\n    if (this.vo.DisplayLength <= 29) return 3;\n    return 4;\n  };\n  GridField.prototype.getIsMandatory = function (checkContext) {\n    //  Do we have mandatory logic\n    if (checkContext && this.vo.mandatoryLogic != null && this.vo.mandatoryLogic.length > 0) {\n      var retValue = VIS.Evaluator.evaluateLogic(this, this.vo.mandatoryLogic);\n      //log.Finest(_vo.ColumnName + " MandatoryLogic(" + _vo.mandatoryLogic + ") => " + retValue);\n      if (retValue) return true;\n    }\n\n    //  Not mandatory\n    if (!this.vo.IsMandatoryUI || this.getIsVirtualColumn()) return false;\n    //  Numeric Keys and Created/Updated as well as \n    //\tDocumentNo/Value/ASI ars not mandatory (persistency layer manages them)\n    var _vo = this.vo;\n    if (_vo.IsKey && _vo.ColumnName.endsWith("_ID") || _vo.ColumnName.startsWith("Created") || _vo.ColumnName.startsWith("Updated")\n    // || _vo.ColumnName.equals("Value")\n    //|| _vo.ColumnName.equals("DocumentNo")\n    || _vo.ColumnName.equals("M_AttributeSetInstance_ID"))\n      //\t0 is valid\n      return false;\n\n    //  Mandatory if displayed\n    return this.getIsDisplayed(checkContext);\n  };\n  GridField.prototype.getDisplayType = function () {\n    return this.vo.displayType;\n  };\n  GridField.prototype.getOrginalDisplayType = function () {\n    return this.vo.orginalDispaly;\n  };\n  GridField.prototype.getIsVirtualColumn = function () {\n    if (this.vo.ColumnSQL && this.vo.ColumnSQL.length > 0) return true;\n    return false;\n  };\n  GridField.prototype.getIsReadOnly = function () {\n    if (this.getIsVirtualColumn()) return true;\n    return this.vo.IsReadOnly;\n  };\n\n  /**\r\n   * set readonly property of field \r\n   * @param {any} value\r\n   */\n  GridField.prototype.setReadOnly = function (value) {\n    this.vo.IsReadOnly = value;\n  };\n\n  /**\r\n   * check is \r\n   * @param {any} checkContext\r\n   * @param {any} isMR\r\n   */\n  GridField.prototype.getIsEditable = function (checkContext, isMR) {\n    //TODO:\n    var _vo = this.vo;\n    if (this.getIsVirtualColumn()) return false;\n    //  Fields always enabled (are usually not updateable)\n\n    if (_vo.ColumnName.equals("Posted") || _vo.ColumnName.equals("Record_ID") && (_vo.displayType == VIS.DisplayType.Button || this.getOrginalDisplayType() == VIS.DisplayType.Button))\n      //  Zoom\n      return true;\n    var hasMRDisplayLogic = isMR && !(this.vo.DisplayLogic == null || this.vo.DisplayLogic.equals(""));\n\n    //  Fields always updateable\n    if (_vo.IsAlwaysUpdateable && !_vo.tabReadOnly)\n      //  Zoom single \n      {\n        if (!hasMRDisplayLogic) return true;\n      }\n\n    //  Tab or field is R/O\n    if (_vo.tabReadOnly || _vo.IsReadOnly) {\n      return false;\n    }\n\n    //\tNot Updateable - only editable if new updateable row\n    if (!_vo.IsUpdateable && !this.inserting) {\n      //log.finest(m_vo.ColumnName + " NO - FieldUpdateable=" + m_vo.IsUpdateable);\n      return false;\n    }\n\n    //\tField is the Link Column of the tab\n    if (_vo.ColumnName.equals(VIS.context.getWindowTabContext(_vo.windowNo, _vo.tabNo, "LinkColumnName"))) {\n      //log.finest(m_vo.ColumnName + " NO - LinkColumn");\n      return false;\n    }\n    var ctx = VIS.context;\n    if (checkContext) {\n      var AD_Client_ID = parseInt(ctx.getTabRecordContext(_vo.windowNo, _vo.tabNo, "AD_Client_ID"));\n      // If the AD_Org_ID is null then set it to default value (from global Context) as it may cause \n      // the window to be rendered read only.\n      if (_vo.ColumnName.equals("AD_Org_ID")) {\n        if (ctx.getWindowContext(_vo.windowNo, "AD_Org_ID") == null || ctx.getWindowContext(_vo.windowNo, "AD_Org_ID").length == 0) {\n          ctx.setWindowContext(_vo.windowNo, "AD_Org_ID", ctx.getContext("#AD_Org_ID"));\n        }\n      }\n      var AD_Org_ID = parseInt(ctx.getTabRecordContext(_vo.windowNo, _vo.tabNo, "AD_Org_ID"));\n      var keyColumn = ctx.getWindowTabContext(_vo.windowNo, _vo.tabNo, "KeyColumnName");\n      var AD_Window_ID = _vo.AD_Window_ID;\n      if ("EntityType".equals(keyColumn)) keyColumn = "AD_EntityType_ID";\n      if (!keyColumn.toUpperCase().endsWith("_ID")) keyColumn += "_ID"; //\tAD_Language_ID\n      var Record_ID = ctx.getWindowTabContext(_vo.windowNo, _vo.tabNo, keyColumn);\n      if (Record_ID == "" && this.gridTab) Record_ID = ctx.getWindowTabContext(_vo.windowNo, _vo.tabNo, this.gridTab.getTableName() + "_ID");\n      if (Record_ID == "") Record_ID = 0;\n      var AD_Table_ID = _vo.AD_Table_ID;\n      if (!VIS.MRole.canUpdate(AD_Client_ID, AD_Org_ID, AD_Table_ID, Record_ID, false) || !VIS.MRole.getWindowAccess(AD_Window_ID)) return false;\n      if (!VIS.MRole.getIsColumnAccess(AD_Table_ID, this.vo.AD_Column_ID, false)) return false;\n      if (this.gridTab && this.gridTab.IsSharedReadOnly) return false;\n    }\n\n    //  Do we have a readonly rule\n    if (checkContext && _vo.ReadOnlyLogic.length > 0) {\n      var retValue = !VIS.Evaluator.evaluateLogic(this, _vo.ReadOnlyLogic);\n      //log.finest(m_vo.ColumnName + " R/O(" + m_vo.ReadOnlyLogic + ") => R/W-" + retValue);\n      if (!retValue) return false;\n    }\n\n    //  Always editable if Active\n    if (_vo.ColumnName.equals("Processing") || _vo.ColumnName.equals("DocAction") || _vo.ColumnName.equals("GenerateTo")) return true;\n\n    //  Record is Processed\t***\n    if (checkContext && (ctx.getWindowContext(_vo.windowNo, _vo.tabNo, "Processed").equals("Y") || ctx.getWindowContext(_vo.windowNo, _vo.tabNo, "Processing").equals("Y"))) {\n      if (!hasMRDisplayLogic) return false;\n    }\n\n    //  IsActive field is editable, if record not processed\n    if (_vo.ColumnName.equals("IsActive")) return true;\n\n    //  Record is not Active\n    if (checkContext && !ctx.getWindowContext(_vo.windowNo, _vo.tabNo, "IsActive").equals("Y")) return false;\n    if (!isMR) return this.getIsDisplayed(checkContext);\n    return this.getIsDisplayedMR(checkContext);\n  };\n\n  /**\r\n   * Evaluate Readonly and Display logic\r\n   *@return true if readonly \r\n   * */\n  GridField.prototype.evaluateLogicsOnly = function () {\n    var _vo = this.vo;\n    var retReadOnly = false;\n    if (_vo.ReadOnlyLogic.length > 0) retReadOnly = VIS.Evaluator.evaluateLogic(this, _vo.ReadOnlyLogic); //true\n    if (!retReadOnly && _vo.DisplayLogic.length > 0) retReadOnly = VIS.Evaluator.evaluateLogic(this, _vo.DisplayLogic); //true\n    return retReadOnly;\n  };\n  GridField.prototype.getWindowNo = function () {\n    return this.vo.windowNo;\n  };\n  GridField.prototype.getIsHeading = function () {\n    return this.vo.IsHeading;\n  };\n  GridField.prototype.getIsSameLine = function () {\n    return this.vo.IsSameLine;\n  };\n  GridField.prototype.getHeader = function () {\n    return this.vo.Header;\n  };\n  GridField.prototype.getDescription = function () {\n    return this.vo.Description;\n  };\n  GridField.prototype.getHelp = function () {\n    return this.vo.Help;\n  };\n  GridField.prototype.getAD_Process_ID = function () {\n    return this.vo.AD_Process_ID;\n  };\n  GridField.prototype.getAD_Form_ID = function () {\n    return this.vo.AD_Form_ID;\n  };\n  GridField.prototype.getAD_Column_ID = function () {\n    return this.vo.AD_Column_ID;\n  };\n  GridField.prototype.getAD_Field_ID = function () {\n    return this.vo.AD_Field_ID;\n  };\n  GridField.prototype.getFieldGroup = function () {\n    return this.vo.FieldGroup;\n  };\n  GridField.prototype.getIsFieldOnly = function () {\n    return this.vo.IsFieldOnly;\n  };\n  GridField.prototype.getShowLabel = function () {\n    return true;\n  };\n\n  //GridField.prototype.getShowIcon = function () {\n  //    return true;\n  //};\n\n  GridField.prototype.getIsKey = function () {\n    return this.vo.IsKey;\n  };\n  GridField.prototype.getIsParentColumn = function () {\n    return this.vo.IsParent;\n  };\n  GridField.prototype.getSortNo = function () {\n    return this.vo.SortNo;\n  };\n  GridField.prototype.getMRSeqNo = function () {\n    return this.vo.mrSeqNo;\n  };\n  GridField.prototype.getIsSelectionColumn = function () {\n    return this.vo.IsSelectionColumn;\n  };\n  GridField.prototype.getSelectionSeqNo = function () {\n    return this.vo.SelectionSeqNo;\n  };\n  GridField.prototype.getIsIncludedColumn = function () {\n    return this.vo.IsIncludedColumn;\n  };\n  GridField.prototype.getDependentOn = function () {\n    var list = [];\n    //\tImplicit Dependencies\n    var colName = this.getColumnName();\n    if (colName.equals("M_AttributeSetInstance_ID")) list.push("M_Product_ID");else if (colName.equals("M_Locator_ID") || colName.equals("M_LocatorTo_ID")) {\n      list.push("M_Product_ID");\n      list.push("M_Warehouse_ID");\n    }\n    //  Display dependent\n    VIS.Evaluator.parseDepends(list, this.vo.DisplayLogic);\n    VIS.Evaluator.parseDepends(list, this.vo.ReadOnlyLogic);\n    //  Lookup\n    if (this.lookup != null) {\n      VIS.Evaluator.parseDepends(list, this.lookup.getValidation()); // _lookup.getv .getValidation());\n    }\n\n    //if (list.length > 0 && Logging.VLogMgt.IsLevelFiner())//  CLogMgt.isLevelFiner())\n    //{\n    //    StringBuilder sb = new StringBuilder();\n    //    for (int i = 0; i < list.Count; i++)\n    //    sb.Append(list[i]).Append(" - ");\n    //    log.Finer("(" + _vo.ColumnName + ") " + sb.ToString());\n    //}\n    return list;\n  };\n  GridField.prototype.getAD_Window_ID = function () {\n    return this.vo.AD_Window_ID;\n  };\n  GridField.prototype.getAD_InfoWindow_ID = function () {\n    return this.vo.AD_InfoWindow_ID;\n  };\n  GridField.prototype.getValueAsString = function (variableName) {\n    var value = VIS.context.getWindowContext(this.vo.windowNo, this.vo.tabNo, variableName, true);\n    if (!value) {\n      return \'\';\n    }\n    return value.toString();\n  };\n  GridField.prototype.getColumnSQL = function (withAS) {\n    if (arguments.length == 0) {\n      return this.vo.ColumnName;\n    } else {\n      if (this.vo.ColumnSQL != null && this.vo.ColumnSQL.length > 0) {\n        if (withAS) {\n          if (this.vo.displayType == VIS.DisplayType.YesNo) {\n            //return " (case " + _vo.ColumnSQL + " when \'Y\' then \'True\' else \'False\' end) " + " AS " + _vo.ColumnName;\n          }\n          return this.vo.ColumnSQL + " AS " + this.vo.ColumnName;\n        } else {\n          if (this.vo.displayType == VIS.DisplayType.YesNo) {\n            //return " (case " + _vo.ColumnSQL + " when \'Y\' then \'True\' else \'False\' end) ";\n          }\n          return this.vo.ColumnSQL;\n        }\n      }\n      if (this.vo.displayType == VIS.DisplayType.YesNo) {\n        //return " (case " + _vo.ColumnName + " when \'Y\' then \'True\' else \'False\' end) AS " + _vo.ColumnName;\n      }\n      //if (this.getObscureType().length > 0) {\n\n      //}\n      return this.vo.ColumnSQL;\n    }\n  };\n  GridField.prototype.getIsLink = function () {\n    return this.vo.isLink;\n  };\n  GridField.prototype.getIsRightPaneLink = function () {\n    return this.vo.isRightPaneLink;\n  };\n  GridField.prototype.getColumnWidth = function () {\n    return this.vo.ColumnWidth;\n  };\n  GridField.prototype.getIsAlwaysUpdateable = function () {\n    if (this.getIsVirtualColumn() || !this.vo.IsUpdateable) return false;\n    return this.vo.IsAlwaysUpdateable;\n  };\n\n  /**\r\n   * \tIs Encrypted Field (display)\r\n   *\t@return encrypted field\r\n   */\n  GridField.prototype.getIsEncryptedField = function () {\n    return this.vo.IsEncryptedField;\n  };\n  GridField.prototype.getIsEncrypted = function () {\n    if (this.vo.IsEncryptedField) return true;\n    var ob = this.getObscureType();\n    if (ob != null && ob.length > 0) return true;\n    return this.vo.ColumnName.equals("Password");\n  };\n  GridField.prototype.getObscureType = function () {\n    return this.vo.ObscureType;\n  };\n  GridField.prototype.getDisplayLength = function () {\n    return this.vo.DisplayLength;\n  };\n\n  /**\r\n   * Get Field Length\r\n   * @return fieldLength\r\n   */\n  GridField.prototype.getFieldLength = function () {\n    return this.vo.FieldLength;\n  };\n\n  /**\r\n  * Get Field Length\r\n  * @return fieldLength\r\n  */\n  GridField.prototype.getMinValue = function () {\n    return this.vo.ValueMin;\n  };\n\n  /**\r\n  * Get Field Length\r\n  * @return fieldLength\r\n  */\n  GridField.prototype.getMaxValue = function () {\n    return this.vo.ValueMax;\n  };\n  /**\r\n   * Get VFormat\r\n   * @return vformat string\r\n   */\n  GridField.prototype.getVFormat = function () {\n    return this.vo.VFormat;\n  };\n\n  /**\r\n   * get format error message\r\n   * */\n  GridField.prototype.getVFormatError = function () {\n    return this.vo.VFormatError;\n  };\n  GridField.prototype.getLookup = function () {\n    return this.lookup;\n  };\n  GridField.prototype.getIsError = function () {\n    return this.error;\n  };\n  GridField.prototype.getIsCopy = function () {\n    return this.vo.IsCopy;\n  };\n  GridField.prototype.getCallout = function () {\n    return this.vo.Callout;\n  };\n  GridField.prototype.getValue = function () {\n    return this.value;\n  };\n  GridField.prototype.getIsIdentifier = function () {\n    return this.vo.IsIdentifier;\n  };\n\n  /**\r\n   *  Get old/previous Value.\r\n   * \tCalled from MTab.processCallout\r\n   *  @return old value\r\n   */\n  GridField.prototype.getOldValue = function () {\n    return this.oldValue;\n  }; //\n\n  GridField.prototype.getIsRange = function () {\n    return this.vo.isRange;\n  };\n  GridField.prototype.getIsRange = function () {\n    return this.vo.isRange;\n  };\n  GridField.prototype.getIsParentValue = function () {\n    var ctx = VIS.context;\n    if (this.parentValue != null) return this.parentValue;\n    if (!VIS.DisplayType.IsID(this.vo.displayType) || this.vo.tabNo == 0) this.parentValue = false;else {\n      var LinkColumnName = ctx.getWindowTabContext(this.vo.windowNo, this.vo.tabNo, "LinkColumnName");\n      if (LinkColumnName.length == 0) this.parentValue = false;else this.parentValue = this.vo.ColumnName.equals(LinkColumnName);\n      if (this.parentValue) this.log.config(this.parentValue + " - Link(" + LinkColumnName + ", W=" + this.vo.windowNo + ",T=" + this.vo.tabNo + ") = " + this.vo.ColumnName);\n    }\n    return this.parentValue;\n  }; //\tisParentValue\n\n  GridField.prototype.getDefault = function (ctx, windowNo) {\n    /**************************************************************************\r\n    *\tCreate default value.\r\n    *  <pre>\r\n    *\t\t(a) Key/Parent/IsActive/SystemAccess\r\n    *      (b) SQL Default\r\n    *\t\t(c) Column Default\t\t//\tsystem integrity\r\n    *      (d) User Preference\r\n    *\t\t(e) System Preference\r\n    *\t\t(f) DataType Defaults\r\n    *\r\n    *  Don\'t default from Context => use explicit defaultValue\r\n    *  (would otherwise copy previous record)\r\n    *  </pre>\r\n    *  @return default value or null\r\n    */\n\n    /**\r\n     *  (a) Key/Parent/IsActive/SystemAccess\r\n     */\n    var vo = this.vo;\n    //\tNo defaults for these fields\n    if (vo.IsKey || vo.displayType == VIS.DisplayType.RowID || VIS.DisplayType.IsLOB(vo.displayType)) return null;\n    //\tSet Parent to context if not explicitly set\n    if (this.getIsParentValue() && VIS.Utility.Util.isEmpty(vo.DefaultValue)) {\n      //fix parent value\n      var parent = ctx.getWindowContext(vo.windowNo, vo.ColumnName);\n      if (this.gridTab) {\n        parent = ctx.getWindowContext(vo.windowNo, this.gridTab.getParentTabNo(), vo.ColumnName);\n      }\n      this.log.fine("[Parent] " + vo.ColumnName + "=" + parent);\n      return this.createDefault(vo.ColumnName, parent);\n    }\n    //\tAlways Active\n    if (vo.ColumnName.equals("IsActive")) {\n      this.log.fine("[IsActive] " + vo.ColumnName + "=Y");\n      return true;\n    }\n\n    //\tSet Client & Org to System, if System access\n    if (VIS.Consts.ACCESSLEVEL_SystemOnly.equals(ctx.getWindowTabContext(vo.windowNo, vo.tabNo, "AccessLevel")) && (vo.ColumnName.equals("AD_Client_ID") || vo.ColumnName.equals("AD_Org_ID"))) {\n      this.log.fine("[SystemAccess] " + vo.ColumnName + "=0");\n      return 0;\n    }\n    //\tSet Org to System, if Client access\n    else if (VIS.Consts.ACCESSLEVEL_SystemPlusClient.equals(ctx.getWindowTabContext(vo.windowNo, vo.tabNo, "AccessLevel")) && vo.ColumnName.equals("AD_Org_ID")) {\n      this.log.fine("[ClientAccess] " + vo.ColumnName + "=0");\n      return 0;\n    }\n\n    /**\r\n     *  (b) SQL Statement (for data integity & consistency)\r\n     */\n    var defStr = "";\n    if (vo.DefaultValue.startsWith("@SQL=")) {\n      var sql0 = vo.DefaultValue.substring(5); //\tw/o tag\n      var sql = VIS.Env.parseContext(ctx, vo.windowNo, sql0, false, true); //\treplace variables\n      var sqlTest = sql.toUpperCase();\n      if (sqlTest.indexOf("DELETE ") != -1 && sqlTest.indexOf("UPDATE ") != -1 && sqlTest.indexOf("DROP ") != -1) sql = ""; //\tPotential security issue\n      if (sql.equals("")) {\n        this.log.log(Level.WARNING, "(" + vo.ColumnName + ") - Default SQL variable parse failed: " + sql0);\n      } else {\n        var dr = null;\n        try {\n          //dr = executeReader(sql);\n          dr = executeDReader(sql);\n          if (dr.read()) defStr = dr.getString(0);else this.log.log(Level.WARNING, "(" + vo.ColumnName + ") - no Result: " + sql);\n          dr.close();\n        } catch (e) {\n          if (sql.endsWith("="))\n            //\tVariable Resolved empty\n            this.log.log(Level.SEVERE, "(" + vo.ColumnName + ") " + sql0, e);else this.log.log(Level.WARNING, "(" + vo.ColumnName + ") " + sql, e);\n        } finally {\n          //\t\tDB.closeResultSet(rs);\n          //    DB.closeStatement(stmt);\n          if (dr != null) {\n            dr.dispose();\n          }\n        }\n      }\n      if (defStr != null && defStr.length > 0) {\n        this.log.fine("[SQL] " + vo.ColumnName + "=" + defStr);\n        return this.createDefault("", defStr);\n      }\n    } //\tSQL Statement\n\n    /**\r\n     * \t(c) Field DefaultValue\t\t=== similar code in AStartRPDialog.getDefault ===\r\n     */\n    if (!vo.DefaultValue.equals("") && !vo.DefaultValue.startsWith("@SQL=")) {\n      defStr = ""; //\tproblem is with texts like \'sss;sss\'\n      //\tIt is one or more variables/constants\n      var st = new VIS.StringTokenizer(vo.DefaultValue, ",;", false);\n      while (st.hasMoreTokens()) {\n        var variable = st.nextToken().trim();\n        if (variable.equals("@SysDate@") || variable.equals("@Now@"))\n          //\tSystem Time\n          {\n            var d = new Date();\n            d.setMilliseconds(0);\n            d.setSeconds(0);\n            var n = d.toISOString();\n            //console.log(vo.ColumnName + " <==>" + variable +"==>"+ n);\n            return n;\n          } else if (variable.indexOf(\'@\') != -1) {\n          //\tit is a variable\n          defStr = ctx.getWindowContext(vo.windowNo, variable.replaceAll(\'@\', \' \').trim());\n\n          // Check Role have Org Access. \n          if (vo.ColumnName == \'AD_Org_ID\' && !VIS.MRole.getIsOrgAccess(Number(defStr), false)) {\n            defStr = variable;\n          }\n        } else if (variable.startsWith("\'") && variable.endsWith("\'"))\n          //\tit is a \'String\'\n          {\n            if (variable.length - 2 > 0) defStr = variable.substring(1, variable.length - 1);else defStr = variable.replaceAll("\'", "");\n          } else defStr = variable;\n        if (defStr.length > 0) {\n          this.log.fine("[DefaultValue] " + vo.ColumnName + "=" + defStr);\n          return this.createDefault(variable, defStr);\n        }\n      } //\twhile more Tokens\n    } //\tDefault value\n\n    //\tNo default for Dependent fields of IDs (if defined - assumed to be correct)\n    if (this.lookup != null && !VIS.Utility.Util.isEmpty(this.lookup.getValidation())) {\n      var code = this.lookup.getValidation();\n      var vars = VIS.Evaluator.getVariables(code);\n      var setNull = false;\n      for (var j = 0; j < vars.length; j++)\n      //  (String var : vars)\n      {\n        var token = vars[j];\n        if (!token.startsWith("#") //\tGlobal variables OK\n        && token.toUpperCase().endsWith("_ID") && !token.equals(vo.ColumnName)) {\n          //\tassumes that parent value is already defined in ctx\n          var ctxValue = ctx.getWindowContext(windowNo, token);\n          setNull = VIS.Utility.Util.isEmpty(ctxValue);\n          if (setNull) break;\n        }\n      }\n      //\tif (vars.size() > 0)\n      //\t\tlog.warning(getColumnName() + ": " + setNull + " - " + vars\n      //\t\t\t+ " - " + code);\n      if (setNull) {\n        //if (CLogMgt.isLevelFiner())\n        //  log.fine("[Dependent] " + m_vo.ColumnName + "=NULL - " + code);\n        //else\n        //  log.fine("[Dependent] " + m_vo.ColumnName + "=NULL");\n        this.lookup.clear();\n        return null;\n      }\n    } //\tdependent\n\n    /**\r\n     *\t(d) Preference (user) - P|\r\n     */\n    defStr = VIS.Env.getPreference(ctx, vo.AD_Window_ID, vo.ColumnName, false);\n    if (defStr !== "") {\n      this.log.fine("[UserPreference] " + vo.ColumnName + "=" + defStr);\n      return this.createDefault("", defStr);\n    }\n\n    /**\r\n     *\t(e) Preference (System) - # $\r\n     */\n    defStr = VIS.Env.getPreference(ctx, vo.AD_Window_ID, vo.ColumnName, true);\n    if (defStr !== "") {\n      this.log.fine("[SystemPreference] " + vo.ColumnName + "=" + defStr);\n      return this.createDefault("", defStr);\n    }\n\n    /**\r\n     *\t(f) DataType defaults\r\n     */\n\n    //\tButton to N\n    if (vo.displayType == VIS.DisplayType.Button && !vo.ColumnName.toUpperCase().endsWith("_ID")) {\n      this.log.fine("[Button=N] " + vo.ColumnName);\n      return "N";\n    }\n    //\tCheckBoxes default to No\n    if (this.vo.displayType == VIS.DisplayType.YesNo) {\n      this.log.fine("[YesNo=N] " + vo.ColumnName);\n      return false;\n    }\n    //  lookups with one value\n    //\tif (DisplayType.isLookup(m_vo.displayType) && m_lookup.getSize() == 1)\n    //\t{\n    //\t\t/** @todo default if only one lookup value */\n    //\t}\n    //  IDs remain null\n    if (vo.ColumnName.toUpperCase().endsWith("_ID")) {\n      this.log.fine("[ID=null] " + vo.ColumnName);\n      return null;\n    }\n    //  actual Numbers default to zero\n    if (VIS.DisplayType.IsNumeric(vo.displayType)) {\n      this.log.fine("[Number=0] " + vo.ColumnName);\n      return this.createDefault("", "0");\n    }\n\n    /**\r\n     *  No resolution\r\n     */\n    this.log.fine("[NONE] " + vo.ColumnName);\n    return null;\n  }; //\tgetDefault\n\n  GridField.prototype.getDefault2 = function (ctx, windowNo) {\n    /**************************************************************************\r\n    *\tCreate default value.\r\n    *  <pre>\r\n    *\t\t(a) Key/Parent/IsActive/SystemAccess\r\n    *      (b) SQL Default\r\n    *\t\t(c) Column Default\t\t//\tsystem integrity\r\n    *      (d) User Preference\r\n    *\t\t(e) System Preference\r\n    *\t\t(f) DataType Defaults\r\n    *\r\n    *  Don\'t default from Context => use explicit defaultValue2\r\n    *  (would otherwise copy previous record)\r\n    *  </pre>\r\n    *  @return default value or null\r\n    */\n\n    /**\r\n     *  (a) Key/Parent/IsActive/SystemAccess\r\n     */\n    var vo = this.vo;\n    //\tNo defaults for these fields\n    if (vo.IsKey || vo.displayType == VIS.DisplayType.RowID || VIS.DisplayType.IsLOB(vo.displayType)) return null;\n    //\tSet Parent to context if not explicitly set\n    if (this.getIsParentValue() && VIS.Utility.Util.isEmpty(vo.DefaultValue2)) {\n      var parent = ctx.getWindowContext(vo.windowNo, vo.ColumnName);\n      this.log.fine("[Parent] " + vo.ColumnName + "=" + parent);\n      return this.createDefault(vo.ColumnName, parent);\n    }\n    //\tAlways Active\n    if (vo.ColumnName.equals("IsActive")) {\n      this.log.fine("[IsActive] " + vo.ColumnName + "=Y");\n      return true;\n    }\n\n    //\tSet Client & Org to System, if System access\n    if (VIS.Consts.ACCESSLEVEL_SystemOnly.equals(ctx.getWindowTabContext(vo.windowNo, vo.tabNo, "AccessLevel")) && (vo.ColumnName.equals("AD_Client_ID") || vo.ColumnName.equals("AD_Org_ID"))) {\n      this.log.fine("[SystemAccess] " + vo.ColumnName + "=0");\n      return 0;\n    }\n    //\tSet Org to System, if Client access\n    else if (VIS.Consts.ACCESSLEVEL_SystemPlusClient.equals(ctx.getWindowTabContext(vo.windowNo, vo.tabNo, "AccessLevel")) && vo.ColumnName.equals("AD_Org_ID")) {\n      this.log.fine("[ClientAccess] " + vo.ColumnName + "=0");\n      return 0;\n    }\n\n    /**\r\n     *  (b) SQL Statement (for data integity & consistency)\r\n     */\n    var defStr = "";\n    if (vo.DefaultValue2.startsWith("@SQL=")) {\n      var sql0 = vo.DefaultValue2.substring(5); //\tw/o tag\n      var sql = VIS.Env.parseContext(ctx, vo.windowNo, sql0, false, true); //\treplace variables\n      var sqlTest = sql.toUpperCase();\n      if (sqlTest.indexOf("DELETE ") != -1 && sqlTest.indexOf("UPDATE ") != -1 && sqlTest.indexOf("DROP ") != -1) sql = ""; //\tPotential security issue\n      if (sql.equals("")) {\n        this.log.log(Level.WARNING, "(" + vo.ColumnName + ") - Default SQL variable parse failed: " + sql0);\n      } else {\n        var dr = null;\n        try {\n          // dr = executeReader(sql);\n          dr = executeDReader(sql);\n          if (dr.read()) defStr = dr.getString(0);else this.log.log(Level.WARNING, "(" + vo.ColumnName + ") - no Result: " + sql);\n          dr.close();\n        } catch (e) {\n          if (sql.endsWith("="))\n            //\tVariable Resolved empty\n            this.log.log(Level.SEVERE, "(" + vo.ColumnName + ") " + sql0, e);else this.log.log(Level.WARNING, "(" + vo.ColumnName + ") " + sql, e);\n        } finally {\n          //\t\tDB.closeResultSet(rs);\n          //    DB.closeStatement(stmt);\n          if (dr != null) {\n            dr.dispose();\n          }\n        }\n      }\n      if (defStr != null && defStr.length > 0) {\n        this.log.fine("[SQL] " + vo.ColumnName + "=" + defStr);\n        return this.createDefault("", defStr);\n      }\n    } //\tSQL Statement\n\n    /**\r\n     * \t(c) Field DefaultValue\t\t=== similar code in AStartRPDialog.getDefault ===\r\n     */\n    if (!vo.DefaultValue2.equals("") && !vo.DefaultValue2.startsWith("@SQL=")) {\n      defStr = ""; //\tproblem is with texts like \'sss;sss\'\n      //\tIt is one or more variables/constants\n      var st = new VIS.StringTokenizer(vo.DefaultValue2, ",;", false);\n      while (st.hasMoreTokens()) {\n        var variable = st.nextToken().trim();\n        if (variable.equals("@SysDate@") || variable.equals("@Now@"))\n          //\tSystem Time\n          {\n            var d = new Date();\n            var n = d.toISOString();\n            //console.log(vo.ColumnName + " <==>" + variable +"==>"+ n);\n            return n;\n          } else if (variable.indexOf(\'@\') != -1)\n          //\tit is a variable\n          defStr = ctx.getWindowContext(vo.windowNo, variable.replaceAll(\'@\', \' \').trim());else if (variable.startsWith("\'") && variable.endsWith("\'"))\n          //\tit is a \'String\'\n          {\n            if (variable.length - 2 > 0) defStr = variable.substring(1, variable.length - 1);else defStr = variable.replaceAll("\'", "");\n          } else defStr = variable;\n        if (defStr.length > 0) {\n          this.log.fine("[DefaultValue2] " + vo.ColumnName + "=" + defStr);\n          return this.createDefault(variable, defStr);\n        }\n      } //\twhile more Tokens\n    } //\tDefault value\n\n    //\tNo default for Dependent fields of IDs (if defined - assumed to be correct)\n    if (this.lookup != null && !VIS.Utility.Util.isEmpty(this.lookup.getValidation())) {\n      var code = this.lookup.getValidation();\n      var vars = VIS.Evaluator.getVariables(code);\n      var setNull = false;\n      for (var j = 0; j < vars.length; j++)\n      //  (String var : vars)\n      {\n        var token = vars[j];\n        if (!token.startsWith("#") //\tGlobal variables OK\n        && token.toUpperCase().endsWith("_ID") && !token.equals(vo.ColumnName)) {\n          //\tassumes that parent value is already defined in ctx\n          var ctxValue = ctx.getWindowContext(windowNo, token);\n          setNull = VIS.Utility.Util.isEmpty(ctxValue);\n          if (setNull) break;\n        }\n      }\n      //\tif (vars.size() > 0)\n      //\t\tlog.warning(getColumnName() + ": " + setNull + " - " + vars\n      //\t\t\t+ " - " + code);\n      if (setNull) {\n        //if (CLogMgt.isLevelFiner())\n        //  log.fine("[Dependent] " + m_vo.ColumnName + "=NULL - " + code);\n        //else\n        //  log.fine("[Dependent] " + m_vo.ColumnName + "=NULL");\n        this.lookup.clear();\n        return null;\n      }\n    } //\tdependent\n\n    /**\r\n     *\t(d) Preference (user) - P|\r\n     */\n    defStr = VIS.Env.getPreference(ctx, vo.AD_Window_ID, vo.ColumnName, false);\n    if (defStr !== "") {\n      this.log.fine("[UserPreference] " + vo.ColumnName + "=" + defStr);\n      return this.createDefault("", defStr);\n    }\n\n    /**\r\n     *\t(e) Preference (System) - # $\r\n     */\n    defStr = VIS.Env.getPreference(ctx, vo.AD_Window_ID, vo.ColumnName, true);\n    if (defStr !== "") {\n      this.log.fine("[SystemPreference] " + vo.ColumnName + "=" + defStr);\n      return this.createDefault("", defStr);\n    }\n\n    /**\r\n     *\t(f) DataType defaults\r\n     */\n\n    //\tButton to N\n    if (vo.displayType == VIS.DisplayType.Button && !vo.ColumnName.toUpperCase().endsWith("_ID")) {\n      this.log.fine("[Button=N] " + vo.ColumnName);\n      return "N";\n    }\n    //\tCheckBoxes default to No\n    if (this.vo.displayType == VIS.DisplayType.YesNo) {\n      this.log.fine("[YesNo=N] " + vo.ColumnName);\n      return false;\n    }\n    //  lookups with one value\n    //\tif (DisplayType.isLookup(m_vo.displayType) && m_lookup.getSize() == 1)\n    //\t{\n    //\t\t/** @todo default if only one lookup value */\n    //\t}\n    //  IDs remain null\n    if (vo.ColumnName.toUpperCase().endsWith("_ID")) {\n      this.log.fine("[ID=null] " + vo.ColumnName);\n      return null;\n    }\n    //  actual Numbers default to zero\n    if (VIS.DisplayType.IsNumeric(vo.displayType)) {\n      this.log.fine("[Number=0] " + vo.ColumnName);\n      return this.createDefault("", "0");\n    }\n\n    /**\r\n     *  No resolution\r\n     */\n    this.log.fine("[NONE] " + vo.ColumnName);\n    return null;\n  }; //\tgetDefault\n\n  GridField.prototype.getIsEncryptedColumn = function () {\n    return this.vo.IsEncryptedColumn;\n  };\n  GridField.prototype.getZoomWindow_ID = function () {\n    return this.vo.ZoomWindow_ID;\n  };\n  GridField.prototype.getIsDefaultFocus = function () {\n    return this.vo.IsDefaultFocus;\n  };\n  GridField.prototype.getStyleLogic = function () {\n    if (!this.vo.StyleLogic) this.vo.StyleLogic = \'\';\n    return this.vo.StyleLogic;\n  };\n  GridField.prototype.createDefault = function (variable, value) {\n    //\ttrue NULL\n    if (value == null || value.length == 0) return null;\n    //\tsee also MTable.readData\n    try {\n      /*return null if default value exist in validation code. TUV Points*/\n      if (!this.vo.IsReadOnly && this.vo.ValidationCode != "" && this.vo.ValidationCode.indexOf(value) != -1) {\n        return null;\n      }\n\n      //\tIDs & Integer & CreatedBy/UpdatedBy\n      if (this.vo.ColumnName.endsWith("atedBy") || this.vo.ColumnName.toUpperCase().endsWith("_ID")) {\n        try\n        //\tdefaults -1 => null\n        {\n          var ii = parseInt(value);\n          if (ii < 0) return null;\n          return ii; //  Integer.valueOf(ii);\n        } catch (e) {\n          this.log.warning("Cannot parse: " + value + " - " + e.message);\n        }\n        return 0;\n      }\n      //\tInteger\n      if (this.vo.displayType == VIS.DisplayType.Integer) return parseInt(value);\n\n      //\tNumber\n      if (VIS.DisplayType.IsNumeric(this.vo.displayType)) return parseFloat(value);\n\n      //\tTimestamps\n      if (VIS.DisplayType.IsDate(this.vo.displayType)) {\n        //\tTime\n        try {\n          var d = null;\n          if (isNaN(Number(value))) {\n            d = new Date(value);\n          } else {\n            d = new Date(); //parseInt(value)); Set current date \n            console.log(this.vo.ColumnName + "==>[1n] " + d);\n            d.setMinutes(-d.getTimezoneOffset() + d.getMinutes());\n            // console.log(this.vo.ColumnName + "==>[2] " + d);\n            console.log(this.vo.ColumnName + "==>[3n] " + d.toISOString());\n          }\n          d.setMilliseconds(0);\n          d.setSeconds(0);\n          return d.toISOString();\n        } catch (ex) {}\n        //\tDate yyyy-mm-dd hh:mm:ss.fffffffff\n        var tsString = value + "2014-01-01T01:00:05Z".substring(value.length);\n        try {\n          new Date(tsString).toISOString();\n        } catch (exx) {\n          this.log.warning("Cannot convert to Timestamp: " + tsString);\n        }\n        var d = new Date();\n        d.setMilliseconds(0);\n        d.setSeconds(0);\n        return d.toISOString();\n      }\n\n      //\tBoolean\n      if (this.vo.displayType == VIS.DisplayType.YesNo) return "Y".equals(value);\n\n      //\tDefault - String\n      if (variable.equals("@#Date@")) {\n        try {\n          //\t2007-06-27 00:00:00.0\n          //var date1 = new Date(value);\n          // date1.setHours(0, 0, 0, 0);\n          var date1 = new Date(parseInt(value));\n          // date1.setHours(0, 0, 0, 0);\n\n          //long time = Long.parseLong (value);\n          //value = new Timestamp(time).toString();\n          //value = value.substring(0, 10);\n          value = date1.toLocaleDateString();\n          //long time = Long.parseLong (value);\n          //value = new Timestamp(time).toString();\n          //value = value.substring(0, 10);\n          //value = date1.toISOString();\n        } catch (eex) {}\n      }\n      return value;\n    } catch (error) {\n      this.log.log(Level.SEVERE, this.vo.ColumnName + " - " + error.message);\n    }\n    return null;\n  }; //\tcreateDefaul\n\n  GridField.prototype.setValue = function (newValue, inserting) {\n    if (!this.inserting)\n      //  set the old value\n      this.oldValue = this.value;\n    this.value = newValue;\n    this.inserting = inserting;\n    this.error = false; //  reset error\n\n    this.updateContext();\n\n    //  Does not fire, if same value\n    var oldValue = this.oldValue;\n    if (inserting) {\n      oldValue = this.INSERTING;\n    }\n    //console.log(_vo.ColumnName + " ===> " + newValue)\n    if ((oldValue !== newValue || this.forcefirepropchange) && this.propertyChangeListner) {\n      //console.log(_vo.ColumnName + " ===> " + newValue);\n      this.propertyChangeListner.setValue(newValue, inserting);\n    }\n    this.forcefirepropchange = this.inserting || this.vo.displayType == VIS.DisplayType.YesNo;\n  };\n  GridField.prototype.setCardViewSeqNo = function (seqNo) {\n    this.cardViewSeq = seqNo;\n  };\n  GridField.prototype.getCardViewSeqNo = function () {\n    return this.cardViewSeq;\n  };\n  GridField.prototype.setCardFieldStyle = function (style) {\n    this.cardFieldStyle = style;\n  };\n  GridField.prototype.getCardFieldStyle = function () {\n    return this.cardFieldStyle;\n  };\n  GridField.prototype.setCardIconHide = function (hide) {\n    this.cardHideIcon = hide;\n  };\n  GridField.prototype.isCardIconHide = function () {\n    return this.cardHideIcon;\n  };\n  GridField.prototype.setCardTextHide = function (hide) {\n    this.cardTextHide = hide;\n  };\n  GridField.prototype.isCardTextHide = function () {\n    return this.cardTextHide;\n  };\n  GridField.prototype.updateContext = function () {\n    //\tSet Context\n    var _vo = this.vo;\n    var DisplayType = VIS.DisplayType;\n    var ctx = VIS.context;\n    var newValue = this.value;\n    if (_vo.displayType == DisplayType.Text || _vo.displayType == DisplayType.Memo || _vo.displayType == DisplayType.TextLong || _vo.displayType == DisplayType.Binary || _vo.displayType == DisplayType.RowID || this.getIsEncrypted()) {} else if (newValue == \'undefined\' || newValue == null) {\n      if (!this.getIsParentTabField()) {\n        ctx.setWindowContext(_vo.windowNo, _vo.ColumnName, null);\n      } else if (this.gridTab) ctx.setTabRecordContext(_vo.windowNo, _vo.tabNo, _vo.ColumnName, null);\n    } else if (typeof newValue == typeof Boolean || _vo.displayType == DisplayType.YesNo) {\n      var newVal = newValue.toString().toLowerCase() == "true" || newValue.toString() == "Y" ? "Y" : "N";\n      if (!this.getIsParentTabField()) {\n        ctx.setWindowContext(_vo.windowNo, _vo.ColumnName, newVal);\n      } else if (this.gridTab) ctx.setTabRecordContext(_vo.windowNo, _vo.tabNo, _vo.ColumnName, newVal);\n    } else if (typeof newValue == typeof date || DisplayType.IsDate(_vo.displayType)) {\n      if (!this.getIsParentTabField()) {\n        ctx.setWindowContext(_vo.windowNo, _vo.ColumnName, newValue);\n      } else if (this.gridTab) ctx.setTabRecordContext(_vo.windowNo, _vo.tabNo, _vo.ColumnName, newValue);\n    } else {\n      if (!this.getIsParentTabField()) {\n        ctx.setWindowContext(_vo.windowNo, _vo.ColumnName, newValue == null ? null : newValue.toString());\n      } else if (this.gridTab) ctx.setTabRecordContext(_vo.windowNo, _vo.tabNo, _vo.ColumnName, newValue.toString());\n    }\n  };\n\n  /**\r\n   * check field exist in parent tab \r\n   * @param {any} colName column name \r\n   */\n  GridField.prototype.getIsParentTabField = function (colName) {\n    if (!this.gridTab) return false;\n    if (!colName) colName = this.vo.ColumnName;\n    var parentTab = this.gridTab.getParentTab();\n    if (parentTab == null) return false;\n    return parentTab.getField(colName) != null;\n  };\n  GridField.prototype.setNullValue = function () {\n    if (this.valueNoFire)\n      //  set the old value\n      this.oldValue = this.value;\n    this.value = null;\n    this.inserting = false;\n    this.error = false; //  reset error\n\n    if (this.oldValue !== this.value && this.propertyChangeListner) {\n      //console.log(_vo.ColumnName + " ===> " + newValue);\n      this.propertyChangeListner.setValue(this.value);\n    }\n  };\n  GridField.prototype.setPropertyChangeListener = function (listner) {\n    this.propertyChangeListner = listner;\n  };\n  GridField.prototype.setError = function (error) {\n    this.error = error;\n  };\n  GridField.prototype.setInserting = function (inserting) {\n    this.inserting = inserting;\n  };\n  GridField.prototype.getAD_Reference_Value_ID = function () {\n    return this.vo.AD_Reference_Value_ID;\n  };\n  GridField.prototype.setDisplayType = function (displayType) {\n    this.vo.displayType = displayType;\n  };\n  GridField.prototype.setDisplayLength = function (length) {\n    this.vo.DisplayLength = length;\n  };\n  GridField.prototype.setDisplayed = function (displayed) {\n    this.vo.IsDisplayedf = displayed;\n  };\n  GridField.prototype.setValueNoFire = function (value) {\n    this.valueNoFire = value;\n  };\n  GridField.prototype.getLoadRecursiveData = function () {\n    return this.vo.LoadRecursiveData;\n  };\n  GridField.prototype.getShowChildOfSelected = function () {\n    return this.vo.ShowChildOfSelected;\n  };\n  GridField.prototype.getIsBackgroundProcess = function () {\n    return this.vo.IsBackgroundProcess;\n  };\n  GridField.prototype.getAskUserBGProcess = function () {\n    return this.vo.AskUserBGProcess;\n  };\n\n  /****************************************/\n\n  GridField.prototype.getIsHeaderPanelitem = function () {\n    return this.vo.IsHeaderPanelitem;\n  };\n  GridField.prototype.getHeaderOverrideReference = function () {\n    return this.vo.HeaderOverrideReference;\n  };\n  GridField.prototype.getHeaderStyle = function () {\n    return this.vo.HeaderStyle;\n  };\n  GridField.prototype.getHeaderHeadingOnly = function () {\n    return this.vo.HeaderHeadingOnly;\n  };\n  GridField.prototype.getHeaderSeqno = function () {\n    return this.vo.HeaderSeqno;\n  };\n  GridField.prototype.getHeaderIconOnly = function () {\n    return this.vo.HeaderIconOnly;\n  };\n  GridField.prototype.getHtmlStyle = function () {\n    return this.vo.HtmlStyle;\n  };\n  GridField.prototype.getGridImageStyle = function () {\n    return this.vo.GridImageStyle;\n  };\n  GridField.prototype.getShowIcon = function () {\n    return this.vo.ShowIcon;\n  };\n  GridField.prototype.getAD_Image_ID = function () {\n    return this.vo.AD_Image_ID;\n  };\n  GridField.prototype.getFontClass = function () {\n    return this.vo.FontClass;\n  };\n  GridField.prototype.getPlaceHolder = function () {\n    return this.vo.PlaceHolder;\n  };\n  GridField.prototype.getImageName = function () {\n    return this.vo.ImageName;\n  };\n  GridField.prototype.getCellSpace = function () {\n    return this.vo.CellSpace;\n  };\n  GridField.prototype.getFieldBreadth = function () {\n    return this.vo.FieldBreadth;\n  };\n  GridField.prototype.getIsLineBreak = function () {\n    return this.vo.LineBreak;\n  };\n  GridField.prototype.getIsFieldgroupDefault = function () {\n    return this.vo.FieldGroupDefault;\n  };\n  //\n  GridField.prototype.getShowFilterOption = function () {\n    return this.vo.ShowFilterOption;\n  };\n  GridField.prototype.getIsUnique = function () {\n    return this.vo.IsUnique;\n  };\n  GridField.prototype.getIsSwitch = function () {\n    return this.vo.IsSwitch;\n  };\n  GridField.prototype.getIsAction = function () {\n    return this.vo.IsAction;\n  };\n  GridField.prototype.getTabSeqNo = function () {\n    return this.vo.TabSeqNo;\n  };\n  GridField.prototype.getAction = function () {\n    return this.vo.ADAction;\n  };\n  GridField.prototype.getActionName = function () {\n    return this.vo.ADActionName;\n  };\n\n  /**\r\n   *  Refresh Lookup if the lookup is unstable\r\n   *  @return true if lookup is validated\r\n   */\n  GridField.prototype.refreshLookup = function () {\n    //  if there is a validation string, the lookup is unstable\n    if (!this.lookup || this.lookup.getValidation().length == 0) return true;\n    //\n    this.lookup.refresh();\n    return this.lookup.getIsValidated();\n  };\n  GridField.prototype.dispose = function () {\n    if (this.lookup != null) {\n      this.lookup.dispose();\n      this.lookup = null;\n    }\n    this.gfield = null;\n    this.vo = null;\n    this.propertyChangeListner = null;\n  };\n  //**************** END **********************//\n  //DataStatusEvent\n\n  function GridTabPanel(tPanel) {\n    this.tPanel = tPanel;\n    this.vo = tPanel._vo;\n  }\n  ;\n  GridTabPanel.prototype.getName = function () {\n    return this.vo.Name;\n  };\n  GridTabPanel.prototype.getAD_Tab_ID = function () {\n    return this.vo.AD_Tab_ID;\n  };\n  GridTabPanel.prototype.getIconPath = function () {\n    return this.vo.IconPath;\n  };\n  GridTabPanel.prototype.getIsDefault = function () {\n    return this.vo.IsDefault;\n  };\n  GridTabPanel.prototype.getClassName = function () {\n    return this.vo.Classname;\n  };\n  GridTabPanel.prototype.getAD_TabPanel_ID = function () {\n    return this.vo.AD_TabPanel_ID;\n  };\n  GridTabPanel.prototype.getSeqNo = function () {\n    return this.vo.SeqNo;\n  };\n  GridTabPanel.prototype.getExtraInfo = function () {\n    return this.vo.ExtraInfo;\n  };\n  function DataStatusEvent(source1, totalRows, changed, autoSave, inserting) {\n    this.mTotalPage = 1;\n    this.mCurrentPage = 1;\n    this.mPageSize = VIS.Env.getWINDOW_PAGE_SIZE();\n    this.totalRecords = 1;\n    this.m_totalRows = totalRows;\n    this.m_changed = changed;\n    this.m_autoSave = autoSave;\n    this.m_inserting = inserting;\n    //\n    this.m_AD_Message;\n    this.m_info = null;\n    this.m_isError = false;\n    this.m_isWarning = false;\n    this.m_confirmed = false;\n    //\n    this.m_allLoaded = true;\n    this.m_loadedRows = -1;\n    this.m_currentRow = -1;\n    //\n    this.m_changedColumn = -1;\n    this.m_columnName = null;\n\n    /** Created \t\t\t\t*/\n    this.Created;\n    /** Created By\t\t\t\t*/\n    this.CreatedBy;\n    /** Updated\t\t\t\t\t*/\n    this.Updated;\n    /** Updated By\t\t\t\t*/\n    this.UpdatedBy;\n    /** Info\t\t\t\t\t*/\n    this.Info;\n    /** Table ID\t\t\t\t*/\n    this.AD_Table_ID;\n    /** Record ID\t\t\t\t*/\n    this.Record_ID;\n    this.source = source1;\n  }\n  ;\n\n  /** \r\n   *  Get Primar Id of Record\r\n   *  */\n  DataStatusEvent.prototype.getRecord_ID = function () {\n    return this.Record_ID;\n  };\n  DataStatusEvent.prototype.setLoading = function (loadedRows) {\n    this.m_allLoaded = false;\n    this.m_loadedRows = loadedRows;\n  };\n  DataStatusEvent.prototype.getIsLoading = function () {\n    return !this.m_allLoaded;\n  };\n  DataStatusEvent.prototype.getLoadedRows = function () {\n    return this.m_loadedRows;\n  };\n  DataStatusEvent.prototype.setCurrentRow = function (currentRow) {\n    this.m_currentRow = currentRow;\n  };\n  DataStatusEvent.prototype.setCurrentPage = function (currentPage) {\n    this.mCurrentPage = currentPage;\n  };\n  DataStatusEvent.prototype.getCurrentRow = function () {\n    return this.m_currentRow;\n  };\n  DataStatusEvent.prototype.getTotalRows = function () {\n    return this.m_totalRows;\n  };\n  DataStatusEvent.prototype.getTotalRecords = function () {\n    return this.totalRecords;\n  };\n  DataStatusEvent.prototype.getCurrentPage = function () {\n    return this.mCurrentPage;\n  };\n  DataStatusEvent.prototype.getTotalPage = function () {\n    return this.mTotalPage;\n  };\n  DataStatusEvent.prototype.getPageSize = function () {\n    return this.mPageSize;\n  };\n  DataStatusEvent.prototype.setInfo = function (AD_Message, info, isError, isWarning) {\n    this.m_AD_Message = AD_Message;\n    this.m_info = info;\n    this.m_isError = isError;\n    this.m_isWarning = isWarning;\n  };\n  DataStatusEvent.prototype.setPageInfo = function (currentPage, totalReocrds, pageSize) {\n    this.mCurrentPage = currentPage;\n    this.mPageSize = pageSize;\n    if (totalReocrds < 1 || totalReocrds < pageSize) {\n      this.mcurrentPage = 1;\n      this.mTotalPage = 1;\n    } else if (pageSize == 0) {\n      this.mTotalPage = 1;\n    } else {\n      this.mTotalPage = Math.ceil(totalReocrds / pageSize); // + ((totalRows % pageSize) != 0 ? 1 : 0);\n    }\n    this.totalRecords = totalReocrds;\n  };\n  DataStatusEvent.prototype.setInserting = function (inserting) {\n    this.m_inserting = inserting;\n  };\n  DataStatusEvent.prototype.getIsInserting = function () {\n    return this.m_inserting;\n  };\n  DataStatusEvent.prototype.getAD_Message = function () {\n    return this.m_AD_Message;\n  };\n  DataStatusEvent.prototype.getInfo = function () {\n    return this.m_info;\n  };\n  DataStatusEvent.prototype.getIsError = function () {\n    return this.m_isError;\n  };\n  DataStatusEvent.prototype.getIsWarning = function () {\n    return this.m_isWarning;\n  };\n  DataStatusEvent.prototype.getMessage = function () {\n    var retValue = new StringBuilder();\n    if (this.m_inserting) retValue.append("+");\n    retValue.append(this.m_changed ? this.m_autoSave ? "*" : "?" : " ");\n    //  current row\n    if (this.m_totalRows == 0) retValue.append(this.m_currentRow);else retValue.append(this.m_currentRow + 1);\n    //  of\n    retValue.append("/");\n    if (this.m_allLoaded) retValue.append(this.m_totalRows);else retValue.append(this.m_loadedRows).append("->").append(this.m_totalRows);\n    //\n    return retValue.toString();\n  }; //\tgetMessage\n\n  DataStatusEvent.prototype.getIsChanged = function () {\n    return this.m_changed;\n  };\n  DataStatusEvent.prototype.getIsFirstRow = function () {\n    if (this.m_totalRows == 0) return true;\n    return this.m_currentRow == 0;\n  };\n  DataStatusEvent.prototype.getIsLastRow = function () {\n    if (this.m_totalRows == 0) return true;\n    return this.m_currentRow == this.m_totalRows - 1;\n  };\n  DataStatusEvent.prototype.getIsFirstPage = function () {\n    if (this.mTotalPage < 2) return true;\n    return this.mCurrentPage < 2;\n  };\n  DataStatusEvent.prototype.getIsLastPage = function () {\n    if (this.mTotalPage < 2) return true;\n    return this.mCurrentPage >= this.mTotalPage;\n  };\n  DataStatusEvent.prototype.setChangedColumn = function (col, columnName) {\n    this.m_changedColumn = col;\n    this.m_columnName = columnName;\n  };\n  DataStatusEvent.prototype.getChangedColumn = function () {\n    return this.m_changedColumn;\n  };\n  DataStatusEvent.prototype.getColumnName = function () {\n    return this.m_columnName;\n  };\n  DataStatusEvent.prototype.setConfirmed = function (confirmed) {\n    this.m_confirmed = confirmed;\n  };\n  DataStatusEvent.prototype.getIsConfirmed = function () {\n    return this.m_confirmed;\n  };\n\n  //Global Assignment\n\n  VIS.GridWindow = GridWindow;\n  VIS.GridTab = GridTab;\n  VIS.GridTable = GridTable;\n  VIS.GridField = GridField;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/controller.js?')},"./Areas/VIS/Scripts/app/controls.js":()=>{eval(';\nVIS.Controls = {};\n;\n(function ($, VIS) {\n  /**\r\n   *\tSystem Display Types.\r\n   *  <pre>\r\n   *\tSELECT AD_Reference_ID, Name FROM AD_Reference WHERE ValidationType = \'D\'\r\n   *  </pre>\r\n   */\n\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n  var dSetUrl = baseUrl + "Form/JDataSet";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n  var executeScalar = function (sql, params, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (params) {\n      dataIn.param = params;\n    }\n    var value = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      var dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (dataSet.getTable(0).getRows().length > 0) {\n        value = dataSet.getTable(0).getRow(0).getCell(0);\n      } else {\n        value = null;\n      }\n      dataSet.dispose();\n      dataSet = null;\n      if (async) {\n        callback(value);\n      }\n    });\n    return value;\n  };\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  VIS.DisplayType = {\n    String: 10,\n    Integer: 11,\n    Amount: 12,\n    ID: 13,\n    Text: 14,\n    Date: 15,\n    DateTime: 16,\n    List: 17,\n    Table: 18,\n    TableDir: 19,\n    YesNo: 20,\n    Location: 21,\n    Number: 22,\n    Binary: 23,\n    Time: 24,\n    Account: 25,\n    RowID: 26,\n    Color: 27,\n    Button: 28,\n    Quantity: 29,\n    Search: 30,\n    Locator: 31,\n    Image: 32,\n    Assignment: 33,\n    Memo: 34,\n    PAttribute: 35,\n    TextLong: 36,\n    CostPrice: 37,\n    FilePath: 38,\n    FileName: 39,\n    URL: 40,\n    PrinterName: 42,\n    Label: 44,\n    MultiKey: 45,\n    GAttribute: 46,\n    AmtDimension: 47,\n    ProductContainer: 48,\n    ProgressBar: 49,\n    TelePhone: 50,\n    IsString: function (displayType) {\n      return VIS.DisplayType.String == displayType;\n    },\n    IsText: function (displayType) {\n      if (displayType == VIS.DisplayType.String || displayType == VIS.DisplayType.Text || displayType == VIS.DisplayType.TextLong || displayType == VIS.DisplayType.Memo || displayType == VIS.DisplayType.FilePath || displayType == VIS.DisplayType.FileName || displayType == VIS.DisplayType.URL || displayType == VIS.DisplayType.PrinterName || displayType == VIS.DisplayType.TelePhone || displayType == VIS.DisplayType.Color) return true;\n      return false;\n    },\n    IsLookup: function (displayType) {\n      if (VIS.DisplayType.List == displayType || displayType == VIS.DisplayType.TableDir || displayType == VIS.DisplayType.Table || displayType == VIS.DisplayType.Search || displayType == VIS.DisplayType.MultiKey || displayType == VIS.DisplayType.ProductContainer) {\n        return true;\n      }\n      return false;\n    },\n    IsInt: function (displayType) {\n      if (displayType == VIS.DisplayType.Integer || displayType == VIS.DisplayType.ProgressBar) {\n        return true;\n      }\n      return false;\n    },\n    IsSearch: function (displayType) {\n      if (displayType == this.Search) {\n        return true;\n      }\n      return false;\n    },\n    IsID: function (displayType) {\n      if (displayType == VIS.DisplayType.ID || displayType == VIS.DisplayType.Table || displayType == VIS.DisplayType.TableDir || displayType == VIS.DisplayType.Search || displayType == VIS.DisplayType.Location || displayType == VIS.DisplayType.Locator || displayType == VIS.DisplayType.Account || displayType == VIS.DisplayType.Assignment || displayType == VIS.DisplayType.PAttribute || displayType == VIS.DisplayType.Image || displayType == VIS.DisplayType.AmtDimension || displayType == VIS.DisplayType.ProductContainer) return true;\n      return false;\n    },\n    IsNumeric: function (displayType) {\n      if (displayType == VIS.DisplayType.Amount || displayType == VIS.DisplayType.Number || displayType == VIS.DisplayType.CostPrice || displayType == VIS.DisplayType.Integer || displayType == VIS.DisplayType.Quantity || displayType == VIS.DisplayType.ProgressBar) return true;\n      return false;\n    },\n    //\t\n    IsDate: function (displayType) {\n      if (displayType == VIS.DisplayType.Date || displayType == VIS.DisplayType.DateTime || displayType == VIS.DisplayType.Time) return true;\n      return false;\n    },\n    //\tisDate\n    IsLOB: function (displayType) {\n      if (displayType == VIS.DisplayType.Binary || displayType == VIS.DisplayType.TextLong) return true;\n      return false;\n    },\n    MAX_DIGITS: 28,\n    //  Oracle Standard Limitation 38 digits\n    INTEGER_DIGITS: 10,\n    MAX_FRACTION: 12,\n    AMOUNT_FRACTION: 2,\n    GetNumberFormat: function (displayType) {\n      var format = null;\n      if (displayType == this.Integer || displayType == this.ProgressBar) {\n        format = new VIS.Format(this.INTEGER_DIGITS, 0, 0);\n      } else if (displayType == this.Quantity) {\n        format = new VIS.Format(this.MAX_DIGITS, this.MAX_FRACTION, 0);\n      } else if (displayType == this.Amount) {\n        format = new VIS.Format(this.MAX_DIGITS, this.MAX_FRACTION, this.AMOUNT_FRACTION);\n      } else if (displayType == this.CostPrice) {\n        format = new VIS.Format(this.MAX_DIGITS, this.MAX_FRACTION, this.AMOUNT_FRACTION);\n      } else\n        //\tif (displayType == Number)\n        {\n          format = new VIS.Format(this.MAX_DIGITS, this.MAX_FRACTION, 1);\n        }\n      return format;\n    }\n  };\n\n  /*********** END DisplayType********************/\n\n  /**\r\n   *  Factory for Control and its Label for single Row display \r\n   *\r\n   */\n  VIS.VControlFactory = {\n    /**\r\n     *  Create control for MField.\r\n     *  The Name is set to the column name for dynamic display management\r\n     *  @param mTab MTab\r\n     *  @param mField MField\r\n     *  @param tableEditor true if table editor\r\n     *  @param disableValidation show all values\r\n     *  @return icontrol\r\n     */\n    getControl: function (mTab, mField, tableEditor, disableValidation, other) {\n      if (!mField) return null;\n      var columnName = mField.getColumnName();\n      var isMandatory = mField.getIsMandatory(false); //  no context check\n      //  Not a Field\n      if (mField.getIsHeading()) return null;\n      var isDisplayed = mField.getIsDisplayed();\n      var minValue = mField.getMinValue();\n      var maxValue = mField.getMaxValue();\n      var ctrl = null;\n      var displayType = mField.getDisplayType();\n      var isReadOnly = mField.getIsReadOnly();\n      var isUpdateable = mField.getIsEditable(false);\n      var windowNo = mField.getWindowNo();\n      var tabNo = 0;\n      var hideMapBtn = false;\n      if (mTab) {\n        tabNo = mTab.getTabNo();\n        hideMapBtn = !mTab.getIsMapView();\n      }\n      if (displayType == VIS.DisplayType.Button) {\n        var btn = new VButton(columnName, isMandatory, isReadOnly, isUpdateable, mField.getHeader(), mField.getDescription(), mField.getHelp(), mField.getAD_Process_ID(), mField.getIsLink(), mField.getIsRightPaneLink(), mField.getAD_Form_ID(), mField.getIsBackgroundProcess(), mField.getAskUserBGProcess());\n        btn.setField(mField);\n        btn.setReferenceKey(mField.getAD_Reference_Value_ID());\n        ctrl = btn;\n      } else if (displayType == VIS.DisplayType.TelePhone) {\n        var txt = new VTelePhone(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), mField.getVFormat(), mField.getObscureType(), mField.getIsEncryptedField());\n        txt.setField(mField);\n        ctrl = txt;\n      } else if (displayType == VIS.DisplayType.Color) {\n        var txt = new VColor(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), mField.getVFormat(), mField.getObscureType(), mField.getIsEncryptedField());\n        txt.setField(mField);\n        ctrl = txt;\n      } else if (displayType == VIS.DisplayType.String) {\n        //if (mField.getIsEncryptedField()) {\n        //    //VPassword vs = new VPassword (columnName, mandatory, readOnly, updateable,\n        //    //    mField.getDisplayLength(), mField.getFieldLength(), mField.getVFormat());\n        //    //vs.setName (columnName);\n        //    //vs.setField (mField);\n        //    //editor = vs;\n        //}\n        //else {\n        var txt = new VTextBox(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), mField.getVFormat(), mField.getObscureType(), mField.getIsEncryptedField());\n        txt.setField(mField);\n        ctrl = txt;\n        //}\n      } else if (displayType == VIS.DisplayType.YesNo) {\n        //columnName, mandatory, isReadOnly, isUpdateable, text, description, tableEditor\n        var chk = new VCheckBox(columnName, isMandatory, isReadOnly, isUpdateable, mField.getHeader(), mField.getDescription(), mField.getIsSwitch());\n        chk.setField(mField);\n        ctrl = chk;\n      } else if (VIS.DisplayType.IsDate(displayType)) {\n        if (displayType == VIS.DisplayType.DateTime) readOnly = true;\n        var vd = new VDate(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getHeader());\n        vd.setName(columnName);\n        vd.setField(mField);\n        ctrl = vd;\n      } else if (VIS.DisplayType.IsLookup(displayType) || VIS.DisplayType.ID == displayType) {\n        var lookup = mField.getLookup();\n        if (disableValidation && lookup != null) lookup.disableValidation();\n        if (!disableValidation) {\n          if (displayType != VIS.DisplayType.Search && displayType != VIS.DisplayType.MultiKey && displayType != VIS.DisplayType.ProductContainer) {\n            var cmb = new VComboBox(columnName, isMandatory, isReadOnly, isUpdateable, lookup, mField.getDisplayLength(), displayType, mField.getZoomWindow_ID());\n            cmb.setField(mField);\n            ctrl = cmb;\n            //ctrl = new VComboBox();\n          } else if (displayType == VIS.DisplayType.ProductContainer) {\n            var txtAmtDiv = new VProductContainer(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), windowNo);\n            txtAmtDiv.setField(mField);\n            ctrl = txtAmtDiv;\n          } else {\n            var txtb = new VTextBoxButton(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, mField.getZoomWindow_ID());\n            txtb.setField(mField);\n            ctrl = txtb;\n          }\n        } else {\n          if (lookup == null || displayType != VIS.DisplayType.Search && lookup.getDisplayType() != VIS.DisplayType.Search) {\n            var cmb = new VComboBox(columnName, isMandatory, isReadOnly, isUpdateable, lookup, mField.getDisplayLength(), displayType, mField.getZoomWindow_ID());\n            cmb.setDisplayType(displayType);\n            cmb.setField(mField);\n            ctrl = cmb;\n            // ctrl = new VComboBox();\n          } else {\n            displayType = VIS.DisplayType.Search;\n            var txtb = new VTextBoxButton(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, mField.getZoomWindow_ID());\n            txtb.setField(mField);\n            ctrl = txtb;\n          }\n        }\n      } else if (displayType == VIS.DisplayType.Location) {\n        var txtLoc = new VLocation(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), hideMapBtn);\n        txtLoc.setField(mField);\n        ctrl = txtLoc;\n      } else if (displayType == VIS.DisplayType.Locator) {\n        var txtLocator = new VLocator(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup());\n        txtLocator.setField(mField);\n        ctrl = txtLocator;\n      } else if (VIS.DisplayType.Text == displayType || VIS.DisplayType.TextLong == displayType || VIS.DisplayType.Memo == displayType) {\n        var tl = new VTextArea(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), displayType);\n        tl.setField(mField);\n        ctrl = tl;\n      } else if (VIS.DisplayType.IsNumeric(displayType)) {\n        if (VIS.DisplayType.Amount == displayType || VIS.DisplayType.Quantity == displayType || VIS.DisplayType.CostPrice == displayType) {\n          var amt = new VAmountTextBox(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), displayType, "FixedHeader"); // mField.getHeader());\n          amt.setMinValue(minValue);\n          amt.setMaxValue(maxValue);\n          amt.setField(mField);\n          ctrl = amt;\n        } else if (VIS.DisplayType.Integer == displayType) {\n          var int = new VNumTextBox(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), "FixedHeader"); // mField.getHeader());\n          int.setField(mField);\n          ctrl = int;\n        } else if (VIS.DisplayType.Number == displayType) {\n          var num = new VAmountTextBox(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), displayType, "FixedHeader"); // mField.getHeader());\n          num.setField(mField);\n          num.setMinValue(minValue);\n          num.setMaxValue(maxValue);\n          ctrl = num;\n        } else if (displayType == VIS.DisplayType.ProgressBar) {\n          var bar = new VProgressBar(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), displayType);\n          bar.setField(mField);\n          bar.setMinValue(minValue);\n          bar.setMaxValue(maxValue);\n          ctrl = bar;\n        }\n      } else if (displayType == VIS.DisplayType.PAttribute) {\n        var txtP = new VPAttribute(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), windowNo, false, false, false, true, tabNo);\n        txtP.setField(mField);\n        ctrl = txtP;\n      } else if (displayType == VIS.DisplayType.GAttribute) {\n        var txtP = new VPAttribute(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), windowNo, false, false, false, false, tabNo);\n        txtP.setField(mField);\n        ctrl = txtP;\n      } else if (displayType == VIS.DisplayType.Account) {\n        var txtA = new VAccount(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), windowNo, mField.getHeader());\n        txtA.setField(mField);\n        ctrl = txtA;\n      } else if (displayType == VIS.DisplayType.Binary) {\n        var bin = new VBinary(columnName, isMandatory, isReadOnly, isUpdateable, windowNo);\n        bin.setField(mField);\n        ctrl = bin;\n      } else if (displayType == VIS.DisplayType.Image) {\n        var image = new VImage(columnName, isMandatory, isReadOnly, windowNo);\n        image.setField(mField);\n        ctrl = image;\n      } else if (displayType == VIS.DisplayType.URL) {\n        var vs = new VURL(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength());\n        vs.setField(mField);\n        ctrl = vs;\n      } else if (displayType == VIS.DisplayType.FileName || displayType == VIS.DisplayType.FilePath) {\n        var vs = new VFile(columnName, isMandatory, isReadOnly, isUpdateable, windowNo, displayType);\n        vs.setField(mField);\n        ctrl = vs;\n      } else if (displayType == VIS.DisplayType.Label) {\n        ///******14/2/2012 *******///\n        ///implement Action pane \n        ///\n\n        var txt = new VLabel(mField.getHelp(), columnName, false, true);\n        //VAdvantage.Controls.VButton button = new VAdvantage.Controls.VButton();\n        //button.SetAttribute(mField, columnName, mandatory, isReadOnly, isUpdateable,\n        //                    mField.GetHeader(), mField.GetDescription(), mField.GetHelp(), mField.GetAD_Process_ID());\n        txt.setField(mField);\n        ctrl = txt;\n      } else if (displayType == VIS.DisplayType.AmtDimension) {\n        var txtAmtDiv = new VAmtDimension(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), windowNo);\n        txtAmtDiv.setField(mField);\n        txtAmtDiv.setDefaultValue(mField.vo.DefaultValue);\n        ctrl = txtAmtDiv;\n      } else if (displayType == VIS.DisplayType.ProductContainer) {\n        var txtAmtDiv = new VProductContainer(columnName, isMandatory, isReadOnly, isUpdateable, displayType, mField.getLookup(), windowNo);\n        txtAmtDiv.setField(mField);\n        ctrl = txtAmtDiv;\n      }\n      if (ctrl == null) {\n        var txt = new VTextBox(columnName, isMandatory, isReadOnly, isUpdateable, mField.getDisplayLength(), mField.getFieldLength(), mField.getVFormat(), mField.getObscureType(), mField.getIsEncryptedField());\n        txt.setField(mField);\n        ctrl = txt;\n        //ctrl = new VTextBox(columnName, mandatory, isReadOnly, isUpdateable, 40, 20, null, "");\n      }\n      return ctrl;\n    },\n    /**\r\n     *  Create Label for MField. (null for YesNo/Button)\r\n     *  The Name is set to the column name for dynamic display management\r\n     *  ignoreCheckbox is used to create label for checkbox from header panel.\r\n     *  @param mField MField\r\n     *  @param ignoreCheckbox bool\r\n     *  @return Label\r\n     */\n    getLabel: function (mField) {\n      if (mField == null) return null;\n      var displayType = mField.getDisplayType();\n\n      //\tNo Label for FieldOnly, CheckBox, Button\n      if (mField.getIsFieldOnly() || displayType == VIS.DisplayType.YesNo || displayType == VIS.DisplayType.Button || displayType == VIS.DisplayType.Label) return null;\n      return new VIS.Controls.VLabel(mField.getHeader(), mField.getColumnName(), mField.getIsMandatory());\n    },\n    getHeaderLabel: function (mField) {\n      if (mField == null) return null;\n      var displayType = mField.getDisplayType();\n\n      //\tNo Label for FieldOnly, CheckBox, Button\n      if (mField.getHeaderIconOnly() && mField.getHeaderHeadingOnly() || mField.getHeaderIconOnly() || displayType == VIS.DisplayType.Button || displayType == VIS.DisplayType.Label) return null;\n      return new VIS.Controls.VLabel(mField.getHeader(), mField.getColumnName(), mField.getIsMandatory());\n    },\n    ///Return label for almost all the references. Used in header panel.\n    getReadOnlyControl: function (Tab, mField, tableEditor, disableValidation, other) {\n      if (!mField) return null;\n      var columnName = mField.getColumnName();\n      var isMandatory = mField.getIsMandatory(false);\n      var windowNo = mField.getWindowNo(); //  no context check  \n      var displayType = mField.getOrginalDisplayType();\n      var isReadOnly = mField.getIsReadOnly();\n      var isUpdateable = mField.getIsEditable(false);\n      var ctrl = null;\n      if (displayType == VIS.DisplayType.Image) {\n        var image = new VImage(columnName, isMandatory, true, windowNo);\n        //image.setField(mField);\n        image.setDimension(120, 140);\n        image.hideText();\n        image.hideEditIcon();\n        ctrl = image;\n      } else if (displayType == VIS.DisplayType.Button) {\n        var btn = new VButton(columnName, isMandatory, isReadOnly, isUpdateable, mField.getHeader(), mField.getDescription(), mField.getHelp(), mField.getAD_Process_ID(), mField.getIsLink(), mField.getIsRightPaneLink(), mField.getAD_Form_ID(), mField.getIsBackgroundProcess(), mField.getAskUserBGProcess());\n        btn.setField(mField, true);\n        ctrl = btn;\n      } else {\n        var $ctrl = new VSpan(mField.getHelp(), columnName, false, true);\n        $ctrl.setField(mField);\n        if (VIS.DisplayType.IsNumeric(displayType)) {\n          $ctrl.format = VIS.DisplayType.GetNumberFormat(displayType);\n        }\n        ctrl = $ctrl;\n      }\n      return ctrl;\n    },\n    ///Checks if class is applied, then return i tag with className\n    //Otherwise return image tag along with source.\n    getIcon: function (mField) {\n      if (mField.getFontClass()) {\n        return "<i class=\'" + mField.getFontClass() + "\'> </i>";\n      }\n      if (mField.getAD_Image_ID() > 0) {\n        return "<img src=\'" + VIS.Application.contextUrl + "Images/Thumb16x16/" + mField.getAD_Image_ID() + ".jpg\' > ";\n      }\n    }\n  };\n\n  /***************************************************************************\r\n   *\tbase class  for single Row controls \r\n   *  <p>\r\n   *  Controls fire VetoableChange to inform about new entered values\r\n   *  and listen to propertyChange (MField.PROPERTY) to receive new values\r\n   *  and performed action to inform action listner (etc click event);\r\n   *  or  changes of Background or Editability\r\n   *\r\n   ***************************************************************************/\n\n  function IControl(ctrl, displayType, isReadOnly, colName, isMandatory) {\n    if (this instanceof IControl) {\n      this.ctrl = ctrl;\n      this.displayType = displayType;\n      this.isReadOnly = isReadOnly;\n      this.colName = colName;\n      this.isMandatory = isMandatory;\n      this.oldValue = "oldValue";\n      this.visible;\n      this.tag;\n      this.setVisible(true);\n      this.editingGrid = null;\n    } else {\n      return new VIS.controls.IControl(ctrl, displayType, isReadOnly, colName, isMandatory);\n    }\n  }\n  ;\n\n  /**\r\n   *\tGet control\r\n   * \t@return control\r\n   */\n  IControl.prototype.getControl = function () {\n    return this.ctrl;\n  };\n\n  /**\r\n  *\tGet root\r\n  * \t@return control\r\n  */\n  IControl.prototype.getRoot = function () {\n    if (!this.root) {\n      return this.ctrl;\n    }\n    return this.root;\n  };\n\n  /**\r\n   *\tGet model field\r\n   * \t@return field\r\n   */\n  IControl.prototype.getField = function () {\n    return this.mField;\n  };\n  /**\r\n   *\tGet Column Name\r\n   * \t@return column name\r\n   */\n  IControl.prototype.getName = function () {\n    return this.colName;\n  };\n  /**\r\n   *\tGet Column Name\r\n   * \t@return column name\r\n   */\n  IControl.prototype.getColumnName = function () {\n    return this.colName;\n  };\n  /**\r\n   *\tGet is Mandatory\r\n   * \t@return true control can not be empty\r\n   */\n  IControl.prototype.getIsMandatory = function () {\n    return this.isMandatory;\n  };\n  /**\r\n   *\tGet is readonly\r\n   * \t@return read only\r\n   */\n  IControl.prototype.getIsReadonly = function () {\n    return this.readOnly;\n  };\n  /**\r\n   *\tGet type of control\r\n   * \t@return display type\r\n   */\n  IControl.prototype.getDisplayType = function () {\n    return this.displayType;\n  };\n  /**\r\n   *\tGet visibility\r\n   * \t@return visible or not\r\n   */\n  IControl.prototype.getIsVisible = function () {\n    return this.visible;\n  };\n  /**\r\n   *\tGet value of control\r\n   * \t@return value\r\n   */\n  IControl.prototype.getValue = function () {\n    var v = this.ctrl.val();\n    //if (v == "") return null;\n    return v;\n  }; //\n\n  IControl.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  };\n\n  /**\r\n   * get additinal action button count with this control\r\n   -  zoom 0r Info\r\n  */\n  IControl.prototype.getBtnCount = function () {\n    return 0;\n  }; //\n\n  /**\r\n   *\tset name of control\r\n   *\r\n   * @param name\r\n   */\n  IControl.prototype.setName = function (name, prefix) {\n    if (!prefix) {\n      this.colName = name;\n    } else {\n      this.name = prefix + name;\n    }\n  };\n  /**\r\n   *\tset model field\r\n   *\r\n   * @param model field\r\n   */\n  IControl.prototype.setField = function (mField) {\n    this.mField = mField;\n  };\n  /**\r\n   *\tset value \r\n   *\r\n   * @param value to set \r\n   */\n  IControl.prototype.setValue = function (val) {};\n  /**\r\n   *\tshow hide control\r\n   *\r\n   * @param visible\r\n   */\n  IControl.prototype.setVisible = function (visible) {\n    this.visible = visible;\n    if (visible) {\n      this.ctrl.show();\n    } else {\n      this.ctrl.hide();\n    }\n  };\n  /**\r\n   *\tset readonly\r\n   *\r\n   * @param readOnly\r\n   */\n  IControl.prototype.setReadOnly = function (readOnly) {\n    this.isReadOnly = readOnly;\n    this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    this.setBackground(false);\n  };\n\n  /**\r\n   * set/reset style on control\r\n   * @param {any} style inline style / class\r\n   */\n  IControl.prototype.setHtmlStyle = function (style) {\n    if (style && this.dynStyle != style) {\n      if (style.contains(\':\')) {\n        if (!this.dynStyle) this.oldStyle = this.ctrl.attr(\'style\');\n        this.ctrl.removeAttr(style).attr(\'style\', style);\n      } else {\n        this.ctrl.addClass(style);\n      }\n      this.dynStyle = style;\n    } else if (!style && this.dynStyle) {\n      if (this.dynStyle.contains(\':\')) {\n        this.ctrl.removeAttr(\'style\');\n        if (this.oldStyle) this.ctrl.attr(\'style\', this.oldStyle);\n      } else {\n        this.ctrl.removeClass(this.dynStyle);\n      }\n      this.oldStyle = null;\n      this.dynStyle = null;\n    }\n  };\n\n  /*\r\n  Set Default Focus\r\n  */\n  IControl.prototype.setDefaultFocus = function (focus) {\n    if (focus) {\n      this.ctrl.focus();\n    }\n  };\n\n  /**\r\n   *\tset mandatory\r\n   *\r\n   * @param ismandotry\r\n   */\n  IControl.prototype.setMandatory = function (isMandatory) {\n    this.isMandatory = isMandatory;\n    this.setBackground(false);\n  };\n\n  /**\r\n   *\tset backgoud color of control\r\n   *\r\n   * @param iserror\r\n   */\n  IControl.prototype.setBackground = function (e) {\n    if (this.colName.startsWith("lbl") || this.displayType == VIS.DisplayType.Label || this.displayType == VIS.DisplayType.YesNo || this.displayType == VIS.DisplayType.Button) return;\n\n    //console.log(typeof (e));\n    if (typeof e == "boolean") {\n      // console.log("1");\n      if (e) this.setBackground("vis-ev-col-error");else if (this.isReadOnly) this.setBackground("vis-ev-col-readonly");else if (this.isMandatory) {\n        var val = this.getValue();\n        if (val && val.toString().length > 0) {\n          this.setBackground("");\n          return;\n        }\n        this.setBackground("vis-ev-col-mandatory");\n      } else this.setBackground("");\n    } else {\n      // console.log("2");\n      //var c = this.ctrl.css(\'background-color\');\n      //if (c == color)\n      //    return;\n      if (this.activeClass == e) return;\n      //if (e.length > 0 && (e.indexOf([\'vis-ev-col-error\', \'vis-ev-col-readonly\', \'vis-ev-col-mandatory\']) > -1)) {\n      //    var oldC = this.ctrl.attr(\'class\');\n      //   if(oldC.length>0) {\n      //       this.oldClass = oldC;\n      //    }\n      //}\n\n      this.ctrl.removeClass(\'vis-ev-col-error\');\n      this.ctrl.removeClass(\'vis-ev-col-readonly\');\n      this.ctrl.removeClass(\'vis-ev-col-mandatory\');\n      if (e.length > 0) this.ctrl.addClass(e);\n      this.activeClass = e;\n      //this.ctrl.css(\'background-color\', color);\n      //console.log(this.ctrl.css(\'background-color\'));\n    }\n  };\n  IControl.prototype.setDisplayType = function (displayType) {\n    this.displayType = displayType;\n  };\n\n  /**\r\n   *\tvalue Change Listener \r\n   *  @param listener\r\n   */\n  IControl.prototype.addVetoableChangeListener = function (listner) {\n    this.vetoablechangeListner = listner;\n  };\n\n  /**\r\n   *\tNotify value changed\r\n   *  @param event\r\n   */\n  IControl.prototype.fireValueChanged = function (evt, force) {\n    if (this.isReadOnly) {\n      //if (this.valSetting) {\n      //    this.valSetting = false;\n      //    return;\n      //}\n      var oldVal = this.oldValue;\n      this.oldValue = "";\n      // this.valSetting = true;\n      this.setValue(oldVal);\n      return;\n    }\n    if (this.editingGrid && (this.gridPos.dialog || force)) {\n      window.setTimeout(function (self) {\n        if (self.ctrl.parent().length != 0) self.ctrl.detach();\n        self.editingGrid.editChange.call(self.editingGrid, self.ctrl[0], self.gridPos.index, self.gridPos.col, evt, evt.newValue);\n        if (self.oldValue == evt.newValue)\n          // special handling\n          {\n            self.vetoablechangeListner.vetoablechange(evt);\n          }\n        self = null;\n        evt = null;\n      }, 10, this);\n    } else if (this.vetoablechangeListner && !this.editingGrid) {\n      window.setTimeout(function (self) {\n        self.vetoablechangeListner.vetoablechange(evt);\n        self = null;\n        evt = null;\n      }, 10, this);\n    }\n  };\n\n  /**\r\n   *\tRefresh UI\r\n   *  @param event\r\n   */\n  IControl.prototype.fireRefreshUI = function (evt) {\n    if (this.vetoablechangeListner) {\n      window.setTimeout(function (self) {\n        self.vetoablechangeListner.refreshUI(evt);\n        self = null;\n        evt = null;\n      }, 10, this);\n    }\n  };\n\n  /**\r\n  *\taction listner\r\n  *   @param event\r\n  */\n  IControl.prototype.addActionListner = function (listner) {\n    this.actionListner = listner;\n  };\n\n  /**\r\n   *\tNotify action (eg click )\r\n   *  @param event\r\n   */\n  IControl.prototype.invokeActionPerformed = function (evt) {\n    if (this.actionListner) {\n      this.actionListner.actionPerformed(evt);\n    }\n  };\n\n  //Lazy initlization\n  IControl.prototype.init = function () {\n    ;\n  };\n  IControl.prototype.detach = function () {\n    this.ctrl.detach();\n  };\n\n  /**\r\n   *\tclean up\r\n   */\n  IControl.prototype.dispose = function () {\n    console.log("dispose ");\n    this.ctrl.remove();\n    this.ctrl = null;\n    this.mField = null;\n    this.displayType = null;\n    this.isReadOnly = null;\n    this.colName = null;\n    this.isMandatory = null;\n    this.oldValue = null;\n    this.vetoablechangeListner = null;\n    this.actionListner = null;\n    this.disposeComponent();\n  };\n  //END IControls \n\n  /**************************************************************************\r\n   *\tData Binding:\r\n   *\t\tIcontrols call fireVetoableChange(m_columnName, null, getText());\r\n   *\t\tGridController (for Single-Row) \r\n   *      listen to Vetoable Change Listener (vetoableChange)\r\n   *\t\tthen set the value for that column in the current row in the table\r\n   *\r\n   **************************************************************************/\n\n  /**************************************************************************\r\n   *\tvisual control for system displaytype text or string\r\n   *\tDetail Constructor\r\n   *  @param columnName column name\r\n   *  @param mandatory mandatory\r\n   *  @param isReadOnly read only\r\n   *  @param isUpdateable updateable\r\n   *  @param displayLength display length\r\n   *  @param fieldLength field length\r\n   *  @param VFormat format\r\n   *  @param ObscureType obscure type\r\n   ***************************************************************************/\n\n  function VTextBox(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, vFormat, obscureType, isPwdField) {\n    var displayType = VIS.DisplayType.String;\n    this.obscureType = obscureType;\n    var src = "fa fa-credit-card";\n    //Init Control\n    var $ctrl = $(\'<input>\', {\n      type: isPwdField ? \'password\' : \'text\',\n      name: columnName,\n      maxlength: fieldLength\n    });\n    var $btnSearch = $(\'<button class="input-group-text" style="display:none"><i class="\' + src + \'" /></button>\');\n    //if (obscureType && !isReadOnly)\n    //    $ctrl.append($btnSearch);\n\n    //Call base class\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    if (isReadOnly || !isUpdateable || obscureType) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    this.getBtn = function (index) {\n      if (index == 0 && obscureType) {\n        this.setReadOnly(true);\n        return $btnSearch;\n      }\n    };\n    this.showObscureButton = function (show) {\n      if (show && obscureType) {\n        $btnSearch.css("display", "");\n      } else {\n        $btnSearch.css("display", "none");\n        $btnSearch.off("click");\n      }\n    };\n    this.getBtnCount = function () {\n      if (obscureType) return 1;\n      return 0;\n    };\n    var self = this; //self pointer\n\n    /* Event */\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      var newVal = $ctrl.val();\n      this.value = newVal;\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n      if (obscureType) {\n        self.setReadOnly(true);\n      }\n    });\n\n    /* Event */\n    $ctrl.on("blur", function (e) {\n      // e.stopPropagation();\n      var newValue = $ctrl.val();\n      if (self.obscureType && newValue != "" && self.oldValue == newValue) {\n        self.ctrl.val(VIS.Env.getObscureValue(self.obscureType, newValue));\n        self.setReadOnly(true);\n      }\n    });\n    $btnSearch.on("click", function () {\n      if (self.mField.getIsEditable(true)) {\n        self.setReadOnly(false, true, true);\n        $ctrl.val(self.mField.getValue());\n        $ctrl.focus();\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl.off("change"); //u bind event\n      $ctrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VTextBox, IControl); //Inherit from IControl\n\n  VTextBox.prototype.setReadOnly = function (readOnly, forceWritable) {\n    if (!readOnly && this.obscureType && !forceWritable && (!this.mField.getIsInserting() || this.ctrl.val() != "")) {\n      readOnly = true;\n    }\n    this.isReadOnly = readOnly;\n    this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    this.setBackground(false);\n  };\n\n  /** \r\n   *  set value \r\n   *  @param new value to set\r\n   */\n  VTextBox.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      //console.log(newValue);\n\n      if (this.obscureType && (!this.mField.getIsInserting() || this.ctrl.val() != "")) {\n        this.ctrl.val(VIS.Env.getObscureValue(this.obscureType, newValue));\n        this.setReadOnly(true);\n      } else this.ctrl.val(newValue);\n      this.oldValue = newValue;\n      //this.setBackground("white");\n    }\n  };\n\n  /** \r\n   *  get display text of control\r\n   *  @return text of control\r\n   */\n  VTextBox.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  };\n  //END VTextbox\n\n  //2.  VLabel\n\n  /**\r\n   *  Label with Mnemonics interpretation\r\n   *  Label against model field control like (textbox, combobox etc)\r\n   *  @param value  The text to be displayed by the label.\r\n   *  @param name  name of control to bind label with\r\n   */\n  function VLabel(value, name, isMandatory, isADControl) {\n    value = value != null ? value.replace("[&]", "") : "";\n    var strFor = \' for="\' + name + \'"\';\n    if (isADControl) strFor = \'\';\n    var $ctrl = $(\'<label \' + strFor + \'></label>\');\n    IControl.call(this, $ctrl, VIS.DisplayType.Label, true, isADControl ? name : "lbl" + name);\n    if (isMandatory) {\n      $ctrl.append(\'<span>\' + value + \'</span>\').append("<sup>*</sup>");\n    } else {\n      $ctrl.text(value);\n    }\n    this.disposeComponent = function () {\n      $ctrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VLabel, IControl); //Inherit\n\n  // END VLabel \n\n  //2.  VSPAN\n\n  /**\r\n   *  VSpan with Mnemonics interpretation\r\n   *  VSpan against model field control like (textbox, combobox etc)\r\n   *  @param value  The text to be displayed by the VSpan.\r\n   *  @param name  name of control to bind VSpan with\r\n   */\n  function VSpan(value, name, isMandatory, isADControl) {\n    value = value != null ? value.replace("[&]", "") : "";\n    var strFor = \' for="\' + name + \'"\';\n    if (isADControl) strFor = \'\';\n    var $ctrl = $(\'<span \' + strFor + \'></span>\');\n    IControl.call(this, $ctrl, VIS.DisplayType.Label, true, isADControl ? name : "lbl" + name);\n    if (isMandatory) {\n      $ctrl.text(value).append("<sup>*</sup>");\n    } else {\n      $ctrl.text(value);\n    }\n    this.disposeComponent = function () {\n      $ctrl = null;\n      self = null;\n      if (this.format) this.format.dispose();\n      this.format = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VSpan, IControl); //Inherit\n\n  VSpan.prototype.setValue = function (newValue, isHTML) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      if (this.mField.getDisplayType() == VIS.DisplayType.TelePhone && newValue && newValue != "- -") {\n        this.ctrl.html(VIS.VTelePhoneInstance.getHtml(newValue));\n      } else {\n        this.ctrl.text(newValue);\n        if (isHTML) {\n          this.ctrl.html(newValue);\n        }\n      }\n    }\n  };\n  VSpan.prototype.getValue = function () {\n    if (this.value != null) {\n      return this.ctrl.text().toString();\n    } else {\n      return null;\n    }\n  };\n\n  // END VSpan \n\n  //3. VButton \n  /***************************************************************************\r\n   *  General Button.\r\n   *  <pre>\r\n   *  Special Buttons:\r\n   *      Payment,\r\n   *      Processing,\r\n   *      CreateFrom,\r\n   *      Record_ID       - Zoom\r\n   *  </pre>\r\n   *  Maintains all values for display in m_values.\r\n   *  implement action listner to notify click event\r\n   *\r\n   *  @param columnName column\r\n   *  @param mandatory mandatory\r\n   *  @param isReadOnly read only\r\n   *  @param isUpdateable updateable\r\n   *  @param text text\r\n   *  @param description description\r\n   *  @param help help\r\n   *  @param AD_Process_ID process to start\r\n  \r\n   ***************************************************************************/\n  function VButton(columnName, mandatory, isReadOnly, isUpdateable, text, description, help, AD_Process_ID, isLink, isRightLink, AD_Form_ID, isBGProcess, isAskUserBGProcess) {\n    this.actionListner;\n    this.AD_Process_ID = AD_Process_ID;\n    this.AD_Form_ID = AD_Form_ID;\n    this.description = description;\n    this.help = help;\n    this.text = text;\n    this.isLink = isLink;\n    this.isRightLink = isRightLink;\n    this.actionLink = null;\n    this.isCsv = false;\n    this.isPdf = false;\n    this.askUserBGProcess = isAskUserBGProcess;\n    this.isBackgroundProcess = isBGProcess;\n    this.values = null;\n    this.isIconSet = true;\n    var $img = $("<i style=\'color:inherit\' title=\'" + text + "\'>");\n    var $txt = $("<span style=\'color:inherit\'>").text(text);\n    var rootPath = VIS.Application.contextUrl + "Areas/VIS/Images/base/";\n    var $ctrl = null;\n    //Init Control\n    if (!isLink) {\n      $ctrl = $(\'<button class="vis-ev-col-wrap-button">\', {\n        type: \'button\',\n        name: columnName\n      });\n      $img.css("margin-right", "8px");\n      $ctrl.append($img).append($txt);\n    } else {\n      if (isRightLink) {\n        $ctrl = $(\'<li>\');\n        $ctrl.append($txt).append($img);\n      } else {\n        $ctrl = $(\'<button type="button" class="vis-ev-col-wrap-button vis-ev-col-linkbutton"></button>\');\n        $ctrl.append($img).append($txt);\n      }\n    }\n    this.setIcon = function (img, isSrc) {\n      if (isSrc) $img.src = img;else $img.addClass(img);\n    };\n\n    //\tSpecial Buttons\n\n    if (columnName.equals("PaymentRule")) {\n      this.readReference(195);\n      this.setIcon("vis vis-payment"); //  29*14\n    } else if (columnName.equals("DocAction")) {\n      this.readReference(135);\n      this.setIcon("vis vis-cog"); //  16*16\n    } else if (columnName.equals("CreateFrom")) {\n      this.setIcon("vis vis-copy"); //  16*16\n    } else if (columnName.equals("Record_ID")) {\n      this.setIcon("vis vis-find"); //  16*16\n      $ctrl.text(VIS.Msg.getMsg("ZoomDocument"));\n    } else if (columnName.equals("Posted")) {\n      this.readReference(234);\n      //$ctrl.css("color", "magenta"); //\n      this.setIcon("fa fa-line-chart"); //  16*16\n    } else if (isLink) {\n      this.isIconSet = false;\n      this.setIcon("vis vis-action");\n    }\n    IControl.call(this, $ctrl, VIS.DisplayType.Button, isReadOnly, columnName, mandatory);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n      //this.Enabled = false;\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n    var $ulPopup = null;\n    $ulPopup = getPopupList();\n    function getPopupList() {\n      var ullst = $("<ul class=\'vis-apanel-rb-ul\'>");\n      //ullst.append($("<li data-action=\'D\'>").text(VIS.Msg.getMsg("Default")));\n      ullst.append($("<li data-action=\'C\'>").text(VIS.Msg.getMsg("OpenCSV")));\n      ullst.append($("<li data-action=\'P\'>").text(VIS.Msg.getMsg("OpenPDF")));\n      return ullst;\n    }\n    ;\n    $ctrl.on(VIS.Events.onClick, function (evt) {\n      //click handler\n      evt.stopPropagation();\n      var isReport = null;\n      // self.invokeActionPerformed({ source: self });\n      if (!self.isReadOnly) {\n        var sqlQry = "VIS_81";\n        var param = [];\n        param[0] = new VIS.DB.SqlParam("@AD_Process_ID", AD_Process_ID);\n        isReport = executeScalar(sqlQry, param);\n        sqlQry = "VIS_149";\n        param = [];\n        param[0] = new VIS.DB.SqlParam("@AD_Process_ID", AD_Process_ID);\n        var isCrystalReport = executeScalar(sqlQry, param);\n        if (isCrystalReport == "Y" && VIS.context.getIsUseCrystalReportViewer()) {\n          self.invokeActionPerformed({\n            source: self\n          });\n        } else {\n          if (isReport == \'Y\') {\n            $img.w2overlay($ulPopup.clone(true));\n          } else {\n            self.invokeActionPerformed({\n              source: self\n            });\n          }\n        }\n      }\n    });\n    if ($ulPopup) {\n      $ulPopup.on("click", "LI", function (e) {\n        var target = $(e.target);\n        if (target.data("action") == "P") {\n          self.isPdf = true;\n          self.isCsv = false;\n        } else if (target.data("action") == "C") {\n          self.isCsv = true;\n          self.isPdf = false;\n        }\n        self.invokeActionPerformed({\n          source: self\n        });\n      });\n    }\n    this.setText = function (text) {\n      if (text == null) {\n        $txt.text("");\n        return;\n      }\n      var pos = text.indexOf(\'&\');\n      if (pos != -1)\n        //\tWe have a nemonic - creates ALT-_\n        {\n          var mnemonic = text.toUpperCase().charAt(pos + 1);\n          if (mnemonic != \' \') {\n            //setMnemonic(mnemonic);\n            text = text.substring(0, pos) + text.substring(pos + 1);\n          }\n        }\n      $txt.text(text);\n    };\n    this.setLayout = function (isHeaderPnl) {\n      if (!this.mField) return;\n      if (!isHeaderPnl) {\n        if (this.mField.getIsFieldOnly() && this.mField.getShowIcon()) $txt.remove();else if (this.mField.getIsFieldOnly()) $img.remove();\n      } else {\n        if (this.mField.getHeaderHeadingOnly()) $img.remove();else if (this.mField.getHeaderIconOnly()) $txt.remove();\n      }\n    };\n    this.disposeComponent = function () {\n      $ctrl.off(VIS.Events.onClick);\n      $ctrl = null;\n      self = null;\n      //this.actionListner = null;\n      this.AD_Process_ID = null;\n      this.description = null;\n      this.help = null;\n      this.setText = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VButton, IControl); //Inherit\n\n  VButton.prototype.referenceList = {};\n  VButton.prototype.setField = function (mField, isHeaderPnl) {\n    this.mField = mField;\n    // if (!this.isIconSet) {\n    if (mField.getShowIcon() && (mField.getFontClass() != \'\' || mField.getImageName() != \'\')) {\n      if (mField.getFontClass() != \'\') this.setIcon(mField.getFontClass());else this.setIcon(VIS.Application.contextUrl + \'Images/Thumb16x16/\' + mField.getImageName(), true);\n    }\n    // }\n    this.setLayout(isHeaderPnl);\n  };\n  VButton.prototype.setReferenceKey = function (refid) {\n    if (refid && refid > 0 && refid != 195 && refid != 135 && refid != 234 && refid != 435) {\n      this.readReference(refid);\n    }\n  };\n  VButton.prototype.setValue = function (value) {\n    this.value = value;\n    var text = this.text;\n\n    //\tNothing to show or Record_ID\n    if (value == null || this.colName.equals("Record_ID")) ;else if (this.values != null) text = this.values[value];else if (this.lookup != null) {\n      var pp = this.lookup.get(value);\n      if (pp != null) text = pp.getName();\n    }\n    //\tDisplay it\n    if (!text) {\n      text = VIS.Msg.getMsg("Invalid") + " { \'" + value + "\' }";\n    }\n    this.setText(text != null ? text : "");\n  };\n  VButton.prototype.setReadOnly = function (readOnly) {\n    this.isReadOnly = readOnly;\n    if (this.dynStyle && this.dynStyle.indexOf(\'opacity\') > -1) {\n      // by pass opacity in case of style logic already have\n    } else {\n      this.ctrl.css(\'opacity\', readOnly ? .6 : 1);\n    }\n    if (this.isLink) {} else {\n      this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    }\n    this.setBackground(false);\n  };\n\n  /**\r\n   *\tReturn Value\r\n   *  @return value\r\n   */\n\n  VButton.prototype.getValue = function () {\n    if (this.value != null) {\n      return this.value.toString();\n    } else {\n      return null;\n    }\n  }; //\tgetValue\n\n  /**\r\n   *  Return Display Value\r\n   *  @return String value\r\n   */\n  VButton.prototype.getDisplay = function () {\n    return this.value;\n  }; //  getDispl\n\n  /**\r\n   *\tFill m_Values with Ref_List values\r\n   *  @param AD_Reference_ID reference\r\n   */\n  VButton.prototype.readReference = function (AD_Reference_ID) {\n    this.values = null;\n    if (this.referenceList) {\n      this.values = this.referenceList[AD_Reference_ID];\n    }\n    if (this.values) {\n      return this.values;\n    } else {\n      this.values = {};\n    }\n    var SQL;\n    if (VIS.Env.isBaseLanguage(VIS.Env.getCtx(), "")) {\n      SQL = "VIS_82";\n    } else {\n      SQL = "VIS_148";\n    }\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@AD_Reference_ID", AD_Reference_ID);\n    try {\n      var dr = executeReader(SQL, param);\n      while (dr.read()) {\n        this.values[dr.getString(0)] = dr.getString(1);\n      }\n      this.referenceList[AD_Reference_ID] = this.values;\n      dr.close();\n    } catch (e) {\n      VIS.Logging.VLogger.getVLogger().get().log(VIS.Logging.Level.SEVERE, SQL, e);\n    }\n  }; //\treadReferenc\n  /**\r\n   *  Return process id\r\n   *  @return ad_process_id\r\n   */\n  VButton.prototype.getProcess_ID = function () {\n    return this.AD_Process_ID;\n  };\n  VButton.prototype.getAD_Form_ID = function () {\n    return this.AD_Form_ID;\n  };\n\n  /**\r\n   *  Return description\r\n   *  @return String value\r\n   */\n  VButton.prototype.getDescription = function () {\n    return this.description;\n  };\n  /**\r\n   *  Return help[ text\r\n   *  @return String value\r\n   */\n  VButton.prototype.getHelp = function () {\n    return this.help;\n  };\n\n  /**\r\n  * return if user want to open confirmation popup or not\r\n  * @return Bool value\r\n  */\n  VButton.prototype.getAskUserBGProcess = function () {\n    return this.askUserBGProcess;\n  };\n\n  /**\r\n  * return if process is background or not\r\n  * @return Bool value\r\n  */\n  VButton.prototype.getIsBackgroundProcess = function () {\n    return this.isBackgroundProcess;\n  };\n\n  //End Button \n\n  //4. VCheckBox \n  /*********************************************************************\r\n  *  Checkbox Control\r\n  *\r\n  *  @param columnName\r\n  *  @param mandatory\r\n  *  @param isReadOnly\r\n  *  @param isUpdateable\r\n  *  @param title\r\n  *  @param description\r\n  **********************************************************************/\n\n  function VCheckBox(columnName, mandatory, isReadOnly, isUpdateable, text, description, isSwitch) {\n    var $ctrl = $(\'<input>\', {\n      type: \'checkbox\',\n      name: columnName,\n      value: text\n    });\n    var $lbl = $(\'<label class="vis-ec-col-lblchkbox" />\').html(text);\n    if (isSwitch) {\n      $ctrl.addClass(\'vis-ctrl-switch\');\n      $lbl.prepend(\'<i for="switch" class="vis-ctrl-switchSlider">Toggle</i>\');\n    }\n    $lbl.prepend($ctrl);\n    //var $lbl = $(\'<label class="vis-ec-col-lblchkbox" />\').html(text).prepend(\'<i for="switch" class="vis-switchSlider">Toggle</i>\').prepend($ctrl);\n    IControl.call(this, $lbl, VIS.DisplayType.YesNo, isReadOnly, columnName, mandatory);\n    this.cBox = $ctrl;\n    var self = this;\n    this.setReadOnly = function (isReadOnly) {\n      this.isReadOnly = isReadOnly;\n      $ctrl.prop(\'disabled\', isReadOnly);\n      $lbl.css(\'opacity\', isReadOnly ? .7 : 1);\n    };\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n      //this.Enabled = false;\n    } else {\n      this.setReadOnly(false);\n    }\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      var newVal = $ctrl.prop(\'checked\');\n      if (newVal !== self.oldValue) {\n        self.oldValue = newVal;\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl.off("change");\n      $ctrl = null;\n      self = null;\n      this.cBox = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VCheckBox, IControl); //Inherit\n  /** \r\n   *  Set Value \r\n   *  @param new Value\r\n   */\n  VCheckBox.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      //this.ctrl.val(newValue);\n      this.cBox.prop(\'checked\', newValue);\n    }\n  };\n\n  /** @override  \r\n   *  get Value \r\n   *  @return value\r\n   */\n  VCheckBox.prototype.getValue = function () {\n    return this.cBox.prop(\'checked\');\n  };\n\n  /** \r\n   *  get display\r\n   *  @return value\r\n   */\n  VCheckBox.prototype.getDisplay = function () {\n    return this.cBox.prop(\'checked\').toString();\n  };\n\n  //END \n\n  //5.VCombobox\n\n  /******************************************************************\r\n  *  select control for Lookup Visual Field.\r\n  *  Special handling of BPartner and Product\r\n  *\r\n  *  @param columnName column\r\n  *  @param mandatory mandatory\r\n  *  @param isReadOnly read only\r\n  *  @param isUpdateable updateable\r\n  *  @param lookup lookup\r\n  *******************************************************************/\n  function VComboBox(columnName, mandatory, isReadOnly, isUpdateable, lookup, displayLength, displayType, zoomWindow_ID) {\n    if (!displayType) displayType = VIS.DisplayType.Table;\n\n    // var $ctrl = $(\'<input>\', { name: columnName });\n    var $ctrl = $(\'<select>\', {\n      name: columnName\n    });\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, mandatory);\n    this.lookup = lookup;\n    this.lastDisplay = "";\n    this.settingFocus = false;\n    this.inserting = false;\n    this.settingValue = false;\n    this.loading = false;\n    if (lookup != null && lookup.getIsValidated()) {\n      // if (lookup.getIsLoading())\n      this.loading = true;\n      //else {\n      //  lookup.fillCombobox(mandatory, false, false, false);\n      //  this.refreshOptions(lookup.data);\n      // }\n    }\n    $ctrl[0].selectedIndex = -1;\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n      //this.Enabled = false;\n    } else {\n      this.setReadOnly(false);\n    }\n\n    //Set Buttons and [pop up]\n    var isZoom = false;\n    var $btnPop = null;\n    var btnCount = 0;\n    var $ulPopup = null;\n    var options = {};\n    var disabled = false;\n    if (lookup != null) {\n      if (lookup.getDisplayType() == VIS.DisplayType.List && VIS.context.getAD_Role_ID() == 0 || lookup.getDisplayType() != VIS.DisplayType.List)\n        //  only system admins can change lists, so no need to zoom for others\n        {\n          isZoom = true;\n          if (lookup instanceof VIS.MLookup) {\n            if (lookup.getZoomWindow() == 0 && zoomWindow_ID < 1) {\n              disabled = true;\n            }\n          }\n\n          //$btnZoom = VIS.AEnv.getZoomButton(disabled);\n          options[VIS.Actions.zoom] = disabled;\n\n          // btnCount += 1;\n        }\n      options[VIS.Actions.addnewrec] = true;\n      if (this.lookup && (this.lookup.info.keyColumn.toLowerCase() == "ad_user.ad_user_id" || this.lookup.info.keyColumn.toLowerCase() == "ad_user_id") || columnName === "AD_User_ID" || columnName === "SalesRep_ID") {\n        options[VIS.Actions.contact] = true;\n      }\n\n      // $btnPop = $(\'<button tabindex="-1" class="input-group-text"><img tabindex="-1" src="\' + VIS.Application.contextUrl + "Areas/VIS/Images/base/Info20.png" + \'" /></button>\');\n      $btnPop = $(\'<button  class="input-group-text"><i tabindex="-1" class="fa fa-ellipsis-v" /></button>\');\n      options[VIS.Actions.refresh] = true;\n      if (VIS.MRole.getIsShowPreference()) options[VIS.Actions.preference] = true;\n      $ulPopup = VIS.AEnv.getContextPopup(options);\n      btnCount += 1;\n      options = null;\n    }\n\n    /* provilized function */\n\n    /* @overridde\r\n    */\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    //this.createAutoComplete = function () {\n    //    $ctrl.autocomplete({\n    //    });\n    //};\n\n    //this.createAutoComplete();\n\n    /** \r\n        get contols button by index \r\n        -  zoom or info button \r\n        - index 0 for info button \r\n        - index 1 for zoom button\r\n        - control must tell or implemnt getBtnCount default is zero [no button]\r\n    *\r\n    */\n    this.getBtn = function (index) {\n      return $btnPop;\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        if ($btnPop) $btnPop.show();\n        $ctrl.show();\n      } else {\n        $ctrl.hide();\n        if ($btnPop) $btnPop.hide();\n      }\n    };\n    var self = this; //self pointer\n\n    //$ctrl.on("mousedown", function (e) {\n    //    e.preventDefault();\n    //});\n\n    //$ctrl.on("touchend", function (e) {\n    //    e.preventDefault();\n    //});\n\n    $ctrl.on("focus", function (e) {\n      var outp = [];\n      if (self.lookup == null) return;\n      var selVal = $ctrl.val();\n      if (self.lookup.getIsValidated() && !self.lookup.getHasInactive()) {\n        if (self.loading) {\n          self.lookup.fillCombobox(mandatory, false, false, false);\n          if (self.lookup.loading) return;\n          self.refreshOptions(self.lookup.data, selVal);\n          if (selVal != null && $ctrl[0].selectedIndex < 0) {\n            //fire change event\n            self.oldValue = "old";\n            // fire  on change to clear datasource value\n\n            $ctrl.trigger("change");\n          }\n          self.loading = false;\n        }\n        return;\n      }\n      if (self.getIsReadonly()) return;\n      self.settingFocus = true;\n\n      //var obj = lookup.getSelectedItem();\n      var selVal = $ctrl.val();\n      self.lookup.fillCombobox(self.getIsMandatory(), true, true, true); //  only validated & active & temporary\n      //self.lookup.setSelectedItem(selVal);\n      //obj = self.lookup.getSelectedItem();\n\n      self.refreshOptions(self.lookup.data, selVal);\n      if (selVal && $ctrl[0].selectedIndex < 0) {\n        self.oldValue = "old";\n        // fire  on change to clear datasource value\n\n        $ctrl.trigger("change");\n      }\n      self.settingFocus = false;\n    });\n    $ctrl.on("change", function (e) {\n      var newVal = $ctrl.val();\n      if (newVal !== self.oldValue) {\n        if (newVal == -1 || newVal == "") {\n          newVal = null;\n        }\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n      e.stopPropagation();\n    });\n    function zoomAction(value) {\n      if (!self.lookup || disabled) return;\n      //\n      var zoomQuery = self.lookup.getZoomQuery();\n      //var value = self.getValue();\n\n      if (!value) value = self.getValue();\n      if (value == "") value = null;\n      if (value != null && !isNaN(value)) value = parseInt(value);\n\n      //\tIf not already exist or exact value\n      if (zoomQuery == null || value != null) {\n        zoomQuery = new VIS.Query(); //\tColumnName might be changed in MTab.validateQuery\n\n        var keyColumnName = null;\n        //\tCheck if it is a Table Reference\n        if (self.lookup != null && self.lookup instanceof VIS.MLookup) {\n          var AD_Reference_ID = self.lookup.getAD_Reference_Value_ID();\n          if (AD_Reference_ID != 0) {\n            var query = "VIS_83";\n            var param = [];\n            param[0] = new VIS.DB.SqlParam("@AD_Reference_ID", AD_Reference_ID);\n            try {\n              var dr = executeReader(query, param);\n              if (dr.read()) {\n                keyColumnName = dr.getString(0);\n              }\n              dr.dispose();\n            } catch (e) {\n              this.log.log(VIS.Logging.Level.SEVERE, query, e);\n            }\n          } //\tTable Reference\n        } //\tMLookup\n\n        if (keyColumnName != null && keyColumnName.length != 0) zoomQuery.addRestriction(keyColumnName, VIS.Query.prototype.EQUAL, value);else zoomQuery.addRestriction(self.getColumnName(), VIS.Query.prototype.EQUAL, value);\n        zoomQuery.setRecordCount(1); //\tguess\n      }\n      var AD_Window_ID = 0;\n      // VIS0045 : Handle Zoom Issue on Combo when control used on Form\n      if (self.mField != null && self.mField.getZoomWindow_ID() > 0) {\n        AD_Window_ID = self.mField.getZoomWindow_ID();\n      } else {\n        AD_Window_ID = self.lookup.getZoomWindow(zoomQuery);\n      }\n\n      // No target record to be zoomed - then zoom querry set null to show all records.\n      if (value == null || value == -1) {\n        zoomQuery = null;\n      }\n\n      //\n      //this.log.info(this.getColumnName() + " - AD_Window_ID=" + AD_Window_ID\n      //    + " - Query=" + zoomQuery + " - Value=" + value);\n      //\n      //setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n      //\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n\n      //setCursor(Cursor.getDefaultCursor());\n    }\n    ;\n    var option;\n    if ($btnPop) {\n      $btnPop.on(VIS.Events.onClick, function (e) {\n        $btnPop.w2overlay($ulPopup.clone(true));\n        e.stopPropagation();\n      });\n    }\n    if ($ulPopup) {\n      $ulPopup.on("click", "LI", function (e) {\n        var action = $(e.target).data("action");\n        if (action == VIS.Actions.preference) {\n          var obj = new VIS.ValuePreference(self.mField, self.getValue(), self.getDisplay());\n          if (obj != null) {\n            obj.showDialog();\n          }\n          obj = null;\n        } else if (action == VIS.Actions.refresh) {\n          if (lookup == null) return;\n          //\n          //setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n          //\n          self.settingFocus = true;\n          var selVal = $ctrl.val();\n          self.lookup.refresh();\n          if (self.lookup.getIsValidated()) self.lookup.fillCombobox(self.getIsMandatory(), false, false, false);else self.lookup.fillCombobox(self.getIsMandatory(), true, false, false);\n          //m_combo.setSelectedItem(obj);\n\n          //\tm_combo.revalidate();\n          //\n          self.refreshOptions(self.lookup.data, selVal);\n          self.settingFocus = false;\n          //alert(selVal);\n          //log.info(m_columnName + " #" + m_lookup.getSize() + ", Selected=" + m_combo.getSelectedItem());\n        } else if (action == VIS.Actions.contact) {\n          var val = self.getValue();\n          if (val && val.toString().length > 0) {\n            //var contactInfo = new VIS.ContactInfo(val, this.mField.getWindowNo());\n            var contactInfo = new VIS.ContactInfo(val, self.mField.getWindowNo());\n            contactInfo.show();\n          }\n        } else if (action == VIS.Actions.zoom) {\n          if (!disabled) zoomAction();\n        } else if (action == VIS.Actions.addnewrec) {\n          if (!disabled) zoomAction(-10);\n        }\n      });\n    }\n    this.disposeComponent = function () {\n      $ctrl.off("focus");\n      $ctrl.off("change");\n      if ($btnPop) {\n        $btnPop.off(VIS.Events.onClick);\n        $btnPop.remove();\n      }\n      $btnPop = null;\n      if ($ulPopup) $ulPopup.remove();\n      $ulPopup = null;\n      this.lookup = null;\n      this.lastDisplay = null;\n      this.settingFocus = null;\n      this.inserting = null;\n      this.settingValue = null;\n      $ctrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VComboBox, IControl); //inherit IControl\n\n  /**\r\n   *  Set control to value\r\n   *  @param newValue new Value\r\n   */\n  VComboBox.prototype.setValue = function (newValue, inserting) {\n    if (this.oldValue != newValue) {\n      this.settingValue = true;\n      this.oldValue = newValue;\n\n      //\tSet comboValue\n      this.ctrl.val(newValue);\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.settingValue = false;\n        return;\n      }\n      if (this.lookup == null) {\n        this.lastDisplay = newValue.toString();\n        this.settingValue = false;\n        return;\n      }\n      this.lastDisplay = this.lookup.getDisplay(newValue, true);\n      if (this.lastDisplay.equals("<-1>")) {\n        this.lastDisplay = "";\n        this.oldValue = null;\n      }\n      this.inserting = inserting; //\tMField.setValue\n\n      var notFound = this.lastDisplay.startsWith("<") && this.lastDisplay.endsWith(">");\n      var selValue = this.ctrl.val();\n      if (selValue == null || this.inserting && this.lookup.getDisplayType() != VIS.DisplayType.Search) {\n        //  lookup found nothing too\n\n        if (notFound && this.lookup.loading) {\n          //wait for fill lookup operation completation\n          window.setTimeout(function (that) {\n            that.setValue(newValue, inserting);\n            that = null;\n            return;\n          }, 500, this);\n          this.oldValue = "oldValue";\n          return;\n        }\n        if (notFound) {\n          //  we may have a new value\n          // this.lookup.refresh();\n          // this.lookup.fillCombobox(\n          // this.refreshOptions(this.lookup.data, newValue);\n\n          this.lastDisplay = this.lookup.getDisplay(newValue, false);\n          notFound = this.lastDisplay.startsWith("<") && this.lastDisplay.endsWith(">");\n        }\n        if (notFound)\n          //\t<key>\n          {\n            this.oldValue = "old";\n            this.ctrl.val(null);\n            // fire  on change to clear datasource value\n            if (this.inserting) this.ctrl.trigger("change");\n          }\n          //  we have lookup\n        else if (this.ctrl.val() == null) {\n          //  do-not add item in combobox if look up validated and loaded \n          if (this.inserting && !this.lookup.info.isParent && this.lookup.getIsValidated() && this.lookup.allLoaded) {\n            //If Validated lookup ata source list not filled or not binded with combo \n            this.lookup.fillCombobox(this.getIsMandatory(), false, false, false); // fill lookup list\n            if (!this.lookup.loading) {\n              // if not from validated cache list \n              this.refreshOptions(this.lookup.data, newValue); // bind datasource \n            }\n          } else {\n            var pp = null;\n            if (!this.lookup.loading) {\n              pp = this.lookup.getFromList(newValue);\n            }\n            if (pp == null) {\n              pp = this.lookup.get(newValue);\n            }\n            if (pp != null) {\n              var valName = VIS.Utility.Util.getIdentifierDisplayVal(pp.Name);\n              this.ctrl.append(\'<option value="\' + pp.Key + \'">\' + valName + \'</option>\');\n              this.ctrl.val(newValue);\n            }\n          }\n        }\n        //  Not in Lookup - set to Null\n        if (this.ctrl.val() == null && newValue != null) {\n          this.oldValue = null;\n        }\n      }\n      this.settingValue = false;\n      //this.setBackground("white");\n    }\n    this.inserting = false;\n  };\n\n  /**\r\n   * if Identifer value contains image path, then remove it and return remaining Identifier\r\n   * @param {any} Name\r\n   */\n  VComboBox.prototype.getDisplayValue = function (Name) {\n    var val = "";\n    if (Name.indexOf("Images/") > -1) {\n      val = Name.replace("^^" + Name.substring(Name.indexOf("Images/"), Name.lastIndexOf("^^") + 3), "_");\n      if (val.indexOf("Images/") > -1) {\n        val = val.replace(val.substring(val.indexOf("Images/"), val.lastIndexOf("^^") + 3), "_");\n      }\n    } else val = Name;\n    return val;\n  };\n  VComboBox.prototype.getValue = function () {\n    var val = this.ctrl.val();\n    if (val == "-1") {\n      return null;\n    }\n    return val;\n  };\n\n  /**\r\n   *  recrete options of control\r\n   *  @param data  object array\r\n   *  @param selVal value to select\r\n   */\n  VComboBox.prototype.refreshOptions = function (data, selVal) {\n    var output = [];\n    var selIndex = -1;\n    //userQueries = [];\n    for (var i = 0; i < data.length; i++) {\n      if (selVal && selVal == data[i].Key) {\n        selIndex = i;\n      }\n      var val = VIS.Utility.Util.getIdentifierDisplayVal(data[i].Name);\n      output[i] = \'<option value="\' + data[i].Key + \'">\' + val + \'</option>\';\n\n      //userQueries.push({\n      //    \'title\': val, \'label\': val, \'value\': val, \'id\': data[i].Key\n      //});\n    }\n    this.ctrl.empty();\n    this.ctrl.html(output.join(\'\'));\n\n    //this.ctrl.autocomplete(\'option\', \'source\', userQueries);\n\n    //if (selVal) {\n    this.ctrl[0].selectedIndex = selIndex;\n    // }\n  };\n\n  /**\r\n   *  Return control display\r\n   *  @return display value\r\n   */\n  VComboBox.prototype.getDisplay = function () {\n    var retValue = "";\n    if (this.lookup == null) retValue = this.ctrl.val();else retValue = this.lookup.getDisplay(this.ctrl.val());\n    return retValue;\n  };\n\n  //VComboBox.prototype.dispose = function () {\n  //    this.ctrl.off("focus");\n  //    this.ctrl.off("change");\n  //    this.ctrl.remove();\n  //    this.ctrl = null;\n  //    this.mField = null;\n  //}\n  //End VCombobox\n\n  //6. VDate\n\n  /**\r\n   *\tCreate Date field\r\n   *  @param columnName column name\r\n   *  @param mandatory mandatory\r\n   *  @param isReadOnly read only\r\n   *  @param isUpdateable updateable\r\n   *  @param displayType display type\r\n   *  @param title title\r\n   */\n  function VDate(columnName, isMandatory, isReadOnly, isUpdateable, displayType, title) {\n    var type = \'date\';\n    var max = \'9999-12-31\';\n    if (displayType == VIS.DisplayType.Time) {\n      type = \'time\';\n      max = \'\';\n    }\n    if (displayType == VIS.DisplayType.DateTime) {\n      type = \'datetime-local\';\n      max += \'T24:00:00\';\n    }\n    var $ctrl = $(\'<input>\', {\n      \'type\': type,\n      name: columnName\n    });\n    if (max != \'\') {\n      $ctrl.attr(\'max\', max);\n    }\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n\n    //\tReadWrite\n    if (isReadOnly || !isUpdateable) this.setReadOnly(true);else this.setReadOnly(false);\n    var self = this;\n    $ctrl.on("focusout", function (e) {\n      if (!this.editingGrid) {\n        var newVal = self.getValue();\n        //if (newVal !== new Date(self.oldValue).toISOString()) {\n        self.oldValue = newVal;\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n\n    /* privilized function */\n    this.disposeComponent = function () {\n      $ctrl.off("change");\n      self = null;\n      $ctrl = null;\n    };\n  }\n  VIS.Utility.inheritPrototype(VDate, IControl); //inherit IControl\n\n  VDate.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      if (newValue == null || newValue == "") {\n        this.ctrl.val("");\n        return;\n      }\n      var date = new Date(newValue);\n      if (this.displayType != VIS.DisplayType.Date) date.setMinutes(-date.getTimezoneOffset() + date.getMinutes());\n      newValue = date.toISOString();\n      var val = newValue.substring(0, newValue.length - 1);\n      var indexTime = newValue.indexOf("T");\n      if (this.displayType == VIS.DisplayType.DateTime) {\n        this.ctrl.val(val);\n      } else if (this.displayType == VIS.DisplayType.Date) {\n        this.ctrl.val(val.substring(0, indexTime));\n      } else {\n        //var d = new Date(newValue);\n        //var h = d.getHours();\n        //var m = d.getMinutes();\n        var h = date.getUTCHours();\n        var m = date.getUTCMinutes();\n        this.ctrl.val((h < 10 ? "0" + h : h) + ":" + (m < 10 ? "0" + m : m)); //.substring(indexTime + 1, val.length));\n      }\n\n      //this.setBackground("white");\n    }\n  };\n  VDate.prototype.getValue = function () {\n    var val = this.ctrl.val();\n    if (val == null || val == "") return null;\n    var d = null;\n    if (this.displayType == VIS.DisplayType.Time) {\n      d = new Date(0);\n      d.setYear(1990);\n      var parts = val.match(/(\\d+)\\:(\\d+)/);\n      var hours = parseInt(parts[1], 10),\n        minutes = parseInt(parts[2], 10);\n      d.setHours(hours);\n      d.setMinutes(minutes);\n    } else {\n      d = new Date(val + "Z"); // Done by Bharat on 08 Sep 2017 to solve Date time issue\n    }\n    try {\n      if (this.displayType == VIS.DisplayType.DateTime) d.setMinutes(d.getTimezoneOffset() + d.getMinutes());\n      return d.toISOString().replace(\'.000Z\', \'Z\');\n    } catch (e) {\n      console.log(val);\n      return new Date();\n    }\n  };\n  VDate.prototype.getDisplay = function () {\n    return this.getValue();\n  };\n\n  //EndDate\n\n  //6. VSearch\n\n  /**\r\n   *\tCreate lookup search field\r\n   *  @param columnName column name\r\n   *  @param mandatory mandatory\r\n   *  @param isReadOnly read only\r\n   *  @param isUpdateable updateable\r\n   *  @param displayType display type\r\n   *  @param title title\r\n   */\n\n  function VTextBoxButton(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, zoomWindow_ID) {\n    if (!displayType) displayType = VIS.DisplayType.Search;\n    this.lookup = lookup;\n    this.isMultiKeyTextBox = displayType === VIS.DisplayType.MultiKey;\n    this.value = null;\n    // Variable for setting custom info window while creating search control.- added by Mohit.\n    this.custInfoWin = null;\n    var _TableName = null;\n    var _KeyColumnName = null;\n    this.infoMultipleIds = null;\n    var _value = null;\n    this.log = VIS.Logging.VLogger.getVLogger("VTextBoxButton");\n    // WindowNo for PrintCustomize */\n    var WINDOW_INFO = 1113;\n\n    // Tab for Info                */\n    var TAB_INFO = 1113;\n    var src = ""; // VIS.Application.contextUrl + "Areas/VIS/Images/base/";\n\n    if (displayType == VIS.DisplayType.Location || displayType == VIS.DisplayType.MultiKey) {\n      if (!this.isMultiKeyTextBox) {\n        src += "vis vis-card";\n      } else {\n        src += "fa fa-caret-down"; //delete10.png";\n      }\n      //txtText.IsReadOnly = true;\n    } else if (displayType == VIS.DisplayType.Locator) {\n      src += "vis vis-locator";\n    } else if (displayType == VIS.DisplayType.Search) {\n      if (columnName.equals("C_BPartner_ID") || columnName.equals("C_BPartner_To_ID") && lookup.getColumnName().equals("C_BPartner.C_BPartner_ID")) {\n        src += "fa fa-handshake-o";\n      } else if (columnName.equals("M_Product_ID") || columnName.equals("M_Product_To_ID") && lookup.getColumnName().equals("M_Product.M_Product_ID")) {\n        src += "vis vis-product";\n      } else {\n        src += "fa fa-caret-down";\n      }\n    }\n    var btnCount = 0;\n    //create ui\n    var $ctrl = $(\'<input>\', {\n      type: \'text\',\n      name: columnName\n    });\n    $ctrl.attr(\'autocomplete\', \'off\');\n    var $btnSearch = $(\'<button   class="input-group-text"><i  tabindex="-1" class="\' + src + \'"></i></button>\');\n    btnCount += 1;\n\n    //Set Buttons and [pop up]\n\n    var $btnPop = null;\n    var $ulPopup = null;\n    var $btnDelete = null;\n    var options = {};\n    var disabled = false;\n    var addBtn = null;\n    var addItem = null;\n    if (lookup != null && !this.isMultiKeyTextBox) {\n      if (lookup instanceof VIS.MLookup) {\n        if (lookup.getZoomWindow() == 0 && zoomWindow_ID < 1) {\n          disabled = true;\n        }\n      }\n\n      //$btnZoom = VIS.AEnv.getZoomButton(disabled);\n      // btnCount += 1;\n      options[VIS.Actions.zoom] = disabled;\n      options[VIS.Actions.addnewrec] = true;\n\n      //$btnPop = $(\'<button  tabindex="-1" class="input-group-text"><img tabindex="-1" src="\' + VIS.Application.contextUrl + "Areas/VIS/Images/base/Info20.png" + \'" /></button>\');\n      $btnPop = $(\'<button   class="input-group-text"><i tabindex="-1" Class="fa fa-ellipsis-v" /></button>\');\n      //\tVBPartner quick entry link\n      var isBP = false;\n      if (columnName === "C_BPartner_ID") {\n        options[VIS.Actions.addnewrec] = false;\n        options[VIS.Actions.add] = true;\n        options[VIS.Actions.update] = true;\n      }\n      if (columnName === "M_Product_ID") {\n        options[VIS.Actions.addnewrec] = false;\n        options[VIS.Actions.add] = false; //false by Ruby as discuss with Mandeep Sir/Mukesh Arora Sir --02 May 2023\n        options[VIS.Actions.update] = true;\n        options[VIS.Actions.addproduct] = true; //Added by Ruby as discuss with Mandeep Sir/Mukesh Arora Sir --02 May 2023\n      }\n      if (this.lookup && (this.lookup.info.keyColumn.toLowerCase() == "ad_user.ad_user_id" || this.lookup.info.keyColumn.toLowerCase() == "ad_user_id") || columnName === "AD_User_ID" || columnName === "SalesRep_ID") {\n        options[VIS.Actions.contact] = true;\n      }\n      if (VIS.MRole.getIsShowPreference()) options[VIS.Actions.preference] = true;\n      options[VIS.Actions.refresh] = true;\n      options[VIS.Actions.remove] = true;\n      $ulPopup = VIS.AEnv.getContextPopup(options);\n      btnCount += 1;\n      options = null;\n    }\n    if (this.isMultiKeyTextBox) {\n      $btnPop = $(\'<button   class="input-group-text"><i class="fa fa-arrow-left" aria-hidden="true"></i></button>\');\n      btnCount += 1;\n    }\n    var self = this;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory); //call base function\n\n    this.setReadOnly = function (readOnly) {\n      this.isReadOnly = readOnly;\n      $ctrl.prop(\'disabled\', readOnly ? true : false);\n      // this.$super.setReadOnly(readonly);\n      if (readOnly) {\n        $btnSearch.css("opacity", .7);\n      } else {\n        $btnSearch.css("opacity", 1);\n      }\n      if (this.isMultiKeyTextBox) {\n        if (readOnly) {\n          $btnPop.css("opacity", .7);\n        } else {\n          $btnPop.css("opacity", 1);\n        }\n      }\n    };\n    // Autocomplete\n    if (displayType == VIS.DisplayType.Search) {\n      addBtn = $("<div class=\'vis-autocompleteList-item vis-auto-addItem\' style=\'background-color: rgba(var(--v-c-secondary), 1)\'>" + VIS.Msg.getMsg("AddNew") + "</div>");\n      addItem = $("<div><center>" + VIS.Msg.getMsg("NoDataFoundSugg") + "</center></div>").append($("<center></center>").append(addBtn));\n      $ctrl.vaautocomplete({\n        source: function (term, response) {\n          //var sql = self.lookup.info.query;\n          //var keyColumn = self.lookup.info.keyColumn;\n          //var displayColumn = self.lookup.info.displayColSubQ;\n          //sql = sql.replace(displayColumn, \'\');\n\n          //var posFrom = sql.indexOf(" FROM ");\n          //var hasWhere = sql.indexOf(" WHERE ", posFrom) != -1;\n          //var posOrder = sql.lastIndexOf(" ORDER BY ");\n          var validation = "";\n          //if (!self.lookup.info.isValidated) {\n          //    validation = VIS.Env.parseContext(VIS.context, self.lookup.windowNo, self.lookup.tabNo, self.lookup.info.validationCode, false, true);\n          //    if (validation.length == 0 && self.lookup.info.validationCode.length > 0) {\n          //        return;\n          //    }\n          //    validation = " AND " + validation;\n          //}\n\n          //if (posOrder != -1) {\n          //    var orderByIdx = validation.toUpper().lastIndexOf(" ORDER BY ");\n          //    if (orderByIdx == -1) {\n          //        validation = validation + sql.substring(posOrder);\n          //    }\n          //    sql = sql.substring(0, posOrder) + (hasWhere ? " AND " : " WHERE ") + self.lookup.info.tableName + ".isActive=\'Y\' " + validation;\n          //}\n          //else {\n          //    sql += (hasWhere ? " AND " : " WHERE ") + self.lookup.info.tableName + ".isActive=\'Y\' " + validation;\n          //}\n\n          //var lastPart = sql.substr(sql.indexOf(\'FROM\'), sql.length);\n          //sql = "SELECT " + keyColumn + " AS ID,NULL," + displayColumn + " AS finalValue " + lastPart;\n\n          //term = term.toUpper();\n          //term = "%" + term + "%";\n          validation = VIS.Env.parseContext2(VIS.context, self.lookup.windowNo, self.lookup.tabNo, self.lookup.info.validationCode, false, true);\n          var d = {\n            \'ctx\': VIS.context.getWindowCtx(self.lookup.windowNo),\n            \'windowNo\': self.lookup.windowNo,\n            \'column_ID\': self.lookup.info.column_ID,\n            \'AD_Reference_ID\': displayType,\n            \'columnName\': columnName,\n            \'AD_Reference_Value_ID\': self.lookup.info.AD_Reference_Value_ID,\n            \'isParent\': self.lookup.info.isParent,\n            \'validationCode\': VIS.secureEngine.encrypt(self.lookup.info.validationCode)\n          };\n          $.ajax({\n            type: \'Post\',\n            url: VIS.Application.contextUrl + "Form/GetAccessSqlAutoComplete",\n            data: {\n              columnName: columnName,\n              text: term,\n              WindowNo: self.lookup.getWindowNo(),\n              AD_Window_ID: self.lookup.AD_Window_ID,\n              AD_Tab_ID: self.lookup.AD_Tab_ID,\n              AD_Field_ID: self.lookup.AD_Field_ID,\n              Validation: JSON.stringify(validation),\n              LookupData: JSON.stringify(d)\n            },\n            success: function (data) {\n              var res = [];\n              if (JSON.parse(data) != null) {\n                result = JSON.parse(data).Table;\n                for (var i = 0; i < result.length; i++) {\n                  var parseObj = {};\n                  parseObj[Object.keys(result[i])[0].toLowerCase()] = result[i][Object.keys(result[i])[0]];\n                  parseObj[Object.keys(result[i])[1].toLowerCase()] = result[i][Object.keys(result[i])[1]];\n                  parseObj[Object.keys(result[i])[2].toLowerCase()] = result[i][Object.keys(result[i])[2]];\n                  res.push({\n                    id: parseObj.id,\n                    value: VIS.Utility.Util.getIdentifierDisplayVal(parseObj.finalvalue)\n                  });\n                }\n                response(res);\n              }\n              if (res.length == 0) {\n                res = [];\n                res.push({\n                  id: "vis-AddNew",\n                  value: VIS.Msg.getMsg("AddNew"),\n                  msg: VIS.Msg.getMsg("NoDataFound") //"No data found. Do you want to add?"                                    \n                });\n                response(res);\n              }\n            }\n          });\n        },\n        minLength: 2,\n        html: addItem,\n        onSelect: function (e, item) {\n          if (item.id == "vis-AddNew") {\n            zoomAction();\n            setTimeout(function () {\n              self.setValue(-1, true, true);\n            }, 500);\n          } else {\n            self.setValue(item.id, true, true);\n            if (self.editingGrid) {\n              // bring back to edit mode(grid view) after value selection\n              setTimeout(function () {\n                self.editingGrid.editField(self.gridPos.recid, self.gridPos.col, item.id);\n              }, 500);\n            }\n          }\n        }\n      });\n      addBtn.on("click", function (event) {\n        zoomAction();\n      });\n    }\n    $ctrl.on("keydown", function (event) {\n      //if (event.shiftKey && event.keyCode == 13) {\n      //$(\'input, select, textarea, button\')[$(\'input,select,textarea,button\').index(this) + 1].focus();\n      // $ctrl                   \n\n      //        event.stopPropagation();\n      //        event.preventDefault();\n      //    }\n\n      //else \n      if ((event.keyCode == 13 || event.keyCode == 9 && $ctrl.val().trim() != \'\') && !event.shiftKey && $ctrl.val().length == 0) {\n        //will work on press of Tab key OR Enter Key\n        if (self.actionText()) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      } else if ((event.keyCode == 46 || event.keyCode == 8) && self.getValue() != null) {\n        self.setValue(null, true, true);\n      }\n    });\n\n    /// <summary>\n    ///Check, if data returns unique entry, otherwise involve Info via Button\n    /// </summary>\n    this.actionText = function () {\n      var text = $ctrl.val().trim();\n      ;\n      VIS.context.setContext(self.lookup.windowNo, "AttrCode", text);\n\n      // Change GSI Barcode\n      // To get Product UPC from GS1 bar code\n      if (text != null) {\n        // for GS1 bar code starting with (01)\n        if (text.indexOf("(01)") >= 0) {\n          var prodUPC = text;\n          // check whether (10) exists in the UPC (For Lot No)\n          if (prodUPC.indexOf("(10)") >= 0) {\n            prodUPC = prodUPC.substring(0, prodUPC.indexOf("(10)"));\n          }\n          // check whether (17) exists in the UPC (For Expiry Date)\n          if (prodUPC.indexOf("(17)") >= 0) {\n            prodUPC = prodUPC.substring(0, prodUPC.indexOf("(17)"));\n          }\n          prodUPC = prodUPC.replace("(01)", "");\n          text = prodUPC;\n        }\n      }\n\n      //\tNothing entered\n      if (text == null || text.length == 0 || text.equals("%")) {\n        self.openSearchForm();\n        return true;\n      }\n      // text = text.toUpper();\n\n      // var id = -3;\n      // var keyId = null;\n      // var dr = null;\n\n      //// var finalSql = VIS.Msg.parseTranslation(VIS.context, self.getDirectAccessSQL(text));\n      // var wc = self.getWhereClause(VIS.context, "", self.lookup);\n      // try {\n      //     // dr = executeReader(finalSql);\n      //     sel\n\n      //     var dr = null;\n      //     $.ajax({\n      //         type: \'Post\',\n      //         async: false,\n      //         url: VIS.Application.contextUrl + "Form/GetTextButtonQueryResult",\n      //         data: {\n      //             Text: text, WindowNo: self.lookup.getWindowNo(),\n      //             AD_Window_ID: self.lookup.AD_Window_ID,\n      //             AD_Tab_ID: self.lookup.AD_Tab_ID,\n      //             AD_Field_ID: self.lookup.AD_Field_ID,\n      //             ColumnName: columnName,\n      //             ValidationCode:JSON.stringify(wc)\n      //         },\n      //         success: function (data) {\n      //             data = JSON.parse(data);\n      //             dr = new VIS.DB.DataReader().toJson(data[0]);\n      //             _TableName = data[1];\n      //             _KeyColumnName = data[2];\n      //         },\n      //     });\n\n      //     if (dr.read()) {\n      //         try {\n      //             keyId = parseInt(dr.get(0));\t//\tfirst\n      //         }\n      //         catch (ex) {\n      //             keyId = dr.get(0);\n      //         }\n      //         id = 1;\n      //         if (dr.read()) {\n      //             id = -1;\t\t\t//\tonly if unique\n      //             keyId = null;\n      //         }\n      //     }\n      //     dr.close();\n      //     dr = null;\n      // }\n      // catch (ee) {\n      //     if (dr != null)\n      //         dr.close();\n      //     dr = null;\n      //     this.log.log(VIS.Logging.Level.SEVERE, e);\n\n      //     id = -2;\n      // }\n\n      // //\tTry like\n      // if (id == -3 && !text.endsWith("%")) {\n      //     text += "%";\n      //     finalSql = VIS.Msg.parseTranslation(VIS.context, self.getDirectAccessSQL(text));\n      //     try {\n      //         // dr = executeReader(finalSql);\n\n      //         var dr = null;\n      //         $.ajax({\n      //             type: \'Get\',\n      //             async: false,\n      //             url: VIS.Application.contextUrl + "Form/GetTextButtonQueryResult",\n      //             data: { sql: VIS.secureEngine.encrypt(finalSql) },\n      //             success: function (data) {\n      //                 dr = new VIS.DB.DataReader().toJson(data)\n      //             },\n      //         });\n\n      //         if (dr.read()) {\n      //             //id = rs.getInt(1);\t\t//\tfirst\n      //             try {\n      //                 keyId = parseInt(dr.get(0));\t//\tfirst\n      //             }\n      //             catch (es) {\n      //                 keyId = dr.get(0);\n      //             }\n      //             id = 1;\n      //             if (dr.read()) {\n      //                 keyId = null;\n      //                 id = -1;\t\t\t//\tonly if unique\n      //             }\n      //         }\n      //         dr.close();\n      //     }\n      //     catch (ewe) {\n      //         if (dr != null)\n      //             dr.close();\n      //         dr = null;\n      //         this.log.log(VIS.Logging.Level.SEVERE, e);\n\n      //         id = -2;\n      //     }\n      // }\n\n      // //\tNo (unique) result\n      // if (id < 0 && keyId == null) {\n      //     //if (id == -3)\n      //     // this.log.log(VIS.Logging.Level.INFO, _columnName + " - Not Found - " + finalSql);\n      //     //else\n      //     //  this.log.log(VIS.Logging.Level.INFO, _columnName + " - Not Unique - " + finalSql);\n      //     _value = {};\t// force re-display\n      //     self.openSearchForm();\n      //     return true;\n      // }\n\n      // //if (this.oldValue == keyId) {\n      // //    return false;\n      // //}\n\n      // text = "";\n\n      // self.setValue(keyId, true, true); //bind value and text\n      return false;\n    };\n\n    /// <summary>\n    /// Generate Access SQL for Search.\n    /// The SQL returns the ID of the value entered\n    /// Also sets _tableName and _keyColumnName\n    /// </summary>\n    /// <param name="text">uppercase text for LIKE comparison</param>\n    /// <returns>sql or ""</returns>\n    this.getDirectAccessSQL = function (text) {\n      var result = self.getDirectAccessSQL1(VIS.context, columnName, lookup, text);\n      _TableName = result[1];\n      _KeyColumnName = result[2];\n      return result[0];\n    };\n\n    /// <summary>\n    /// Generate Access SQL for Search.\n    /// The SQL returns the ID of the value entered\n    /// Also sets _tableName and _keyColumnName\n    /// </summary>\n    /// <param name="ctx">Current Context</param>\n    /// <param name="_columnName">Column Name</param>\n    /// <param name="_lookup">Lookup Object</param>\n    /// <param name="text">uppercase text for LIKE comparison</param>\n    /// <returns>An array of 3 Strings; 0=SQL, 1=_tableName, 2=_keyColumnName</returns>\n    this.getDirectAccessSQL1 = function (ctx, _columnName, _lookup, text) {\n      //var sql = "";\n      var retVal = [];\n      //var _tableName = _columnName.substring(0, _columnName.length - 3);\n      //var _keyColumnName = _columnName;\n      //\n      //if (_columnName.equals("M_Product_ID")) {\n      //    //\tReset\n      //    ctx.setContext(WINDOW_INFO, TAB_INFO, "M_Product_ID", "0");\n      //    ctx.setContext(WINDOW_INFO, TAB_INFO, "M_AttributeSetInstance_ID", "0");\n      //    ctx.setContext(WINDOW_INFO, TAB_INFO, "M_Locator_ID", "0");\n      //}\n      //else if (_columnName.equals("SalesRep_ID")) {\n      //    _tableName = "AD_User";\n      //    _keyColumnName = "AD_User_ID";\n      //}\n\n      //$.ajax({\n      //    url: VIS.Application.contextUrl + "Form/GetAccessSql",\n      //    dataType: "json",\n      //    async: false,\n      //    data: {\n      //        columnName: _columnName,\n      //        text: text\n      //    },\n      //    success: function (data) {\n      //        sql = data;\n      //    }\n      //});\n\n      ////\tPredefined\n      //if (sql.length > 0) {\n      //    var wc = self.getWhereClause(ctx, _columnName, _lookup);\n      //    if (_columnName.equals("M_Product_ID")) {\n      //        if (wc != null && wc.length > 0)\n      //            sql += " AND " + wc.replace(/M_Product\\./g, "p.") + " AND p.IsActive=\'Y\'";\n      //    }\n      //    else {\n      //        if (wc != null && wc.length > 0)\n      //            sql += " AND " + wc + " AND IsActive=\'Y\'";\n      //    }\n      //    //\t***\n      //    // //log.finest(_columnName + " (predefined) " + sql.toString());\n\n      //    retVal.push(VIS.MRole.getDefault().addAccessSQL(sql, _tableName, VIS.MRole.SQL_FULLYQUALIFIED, VIS.MRole.SQL_RO));\n      //    retVal.push(_tableName);\n      //    retVal.push(_keyColumnName);\n      //    return retVal;\n\n      //}\n\n      ////\tCheck if it is a Table Reference\n      //var dr = null;\n      //if (_lookup != null && _lookup instanceof VIS.MLookup) {\n      //    var AD_Reference_ID = _lookup.getAD_Reference_Value_ID();\n      //    if (AD_Reference_ID != 0) {\n\n      //        // Commented 10 Aug 2015 For : not searching based on the identifiers\n      //        var tblQuery = "VIS_84";\n\n      //        try {\n      //            var param = [];\n      //            param[0] = new VIS.DB.SqlParam("@refid", AD_Reference_ID);\n      //            dr = executeReader(tblQuery, param);\n\n      //            while (dr.read()) {\n      //                _columnName = dr.get(0);\n      //                _keyColumnName = dr.get(0);\n      //                _tableName = dr.get(1);\n      //                break;\n      //            }\n\n      //            dr.close();\n      //            dr = null;\n      //        }\n      //        catch (e) {\n      //            if (dr != null) {\n      //                dr.close();\n      //                dr = null;\n      //            }\n      //            this.log.log(VIS.Logging.Level.SEVERE, squery, e);\n      //            //Logging.VLogger.Get().Log(Logging.Level.SEVERE, sql.ToString(), ex);\n      //        }\n\n      //        var query = "VIS_85";\n\n      //        var displayColumnName = null;\n\n      //        _keyColumnName = _columnName;\n\n      //        sql = "(";\n\n      //        try {\n      //            var param = [];\n      //            param[0] = new VIS.DB.SqlParam("@refid", AD_Reference_ID);\n      //            param[1] = new VIS.DB.SqlParam("@colname", _columnName);\n      //            dr = executeReader(query, param);\n\n      //            while (dr.read()) {\n      //                if (sql.length > 1)\n      //                    sql += " OR ";\n      //                _tableName = dr.get(0);\n      //                sql += "UPPER(" + dr.get(1) + ") LIKE " + VIS.DB.to_string(text);\n      //            }\n      //            sql += ")";\n      //            dr.close();\n      //            dr = null;\n\n      //        }\n      //        catch (e) {\n      //            if (dr != null) {\n      //                dr.close();\n      //                dr = null;\n      //            }\n      //            this.log.log(VIS.Logging.Level.SEVERE, squery, e);\n      //            //Logging.VLogger.Get().Log(Logging.Level.SEVERE, sql.ToString(), ex);\n      //        }\n\n      //        if (sql.length == 0) {\n      //            this.log.log(VIS.Logging.Level.SEVERE, _columnName + " (TableDir) - no standard/identifier columns");\n      //            //Logging.VLogger.Get().Log(Logging.Level.SEVERE, _columnName + " (TableDir) - no standard/identifier columns");\n      //            retVal.push("");\n      //            retVal.push(_tableName);\n      //            retVal.push(_keyColumnName);\n      //            return retVal;\n      //            //return new String[] { "", _tableName, _keyColumnName };\n      //        }\n      //        //\n      //        var retValue = "SELECT " + _columnName + " FROM " + _tableName + " WHERE " + sql + " AND IsActive=\'Y\'";\n      //        var _wc = self.getWhereClause(ctx, _columnName, _lookup);\n      //        if (_wc != null && _wc.length > 0)\n      //            retValue += " AND " + _wc;\n      //        //\t***\n      //        ////log.finest(_columnName + " (TableDir) " + sql.toString());\n      //        retVal.push(VIS.MRole.getDefault().addAccessSQL(retValue, _tableName, VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO));\n      //        retVal.push(_tableName);\n      //        retVal.push(_keyColumnName);\n      //        return retVal;\n\n      ////        // Commented 10 Aug 2015 For : not searching based on the identifiers\n      ////        //var query = "SELECT kc.ColumnName, dc.ColumnName, t.TableName "\n      ////        //    + "FROM AD_Ref_Table rt"\n      ////        //    + " INNER JOIN AD_Column kc ON (rt.Column_Key_ID=kc.AD_Column_ID)"\n      ////        //    + " INNER JOIN AD_Column dc ON (rt.Column_Display_ID=dc.AD_Column_ID)"\n      ////        //    + " INNER JOIN AD_Table t ON (rt.AD_Table_ID=t.AD_Table_ID) "\n      ////        //    + "WHERE rt.AD_Reference_ID=@refid";\n      ////        //var displayColumnName = null;\n\n      ////        //try {\n      ////        //    var param = [];\n      ////        //    param[0] = new VIS.DB.SqlParam("@refid", AD_Reference_ID);\n      ////        //    dr = VIS.DB.executeReader(query, param);\n      ////        //    while (dr.read()) {\n      ////        //        _keyColumnName = dr.get(0);\n      ////        //        displayColumnName = dr.get(1);\n      ////        //        _tableName = dr.get(2);\n      ////        //    }\n      ////        //    dr.close();\n      ////        //    dr = null;\n\n      ////        //}\n      ////        //catch (e) {\n      ////        //    if (dr != null) {\n      ////        //        dr.close();\n      ////        //        dr = null;\n      ////        //    }\n      ////        //    this.log.log(VIS.Logging.Level.SEVERE, query, e);\n      ////        //}\n\n      ////        //if (displayColumnName != null) {\n      ////        //    sql = "";\n      ////        //    sql += "SELECT " + _keyColumnName + " FROM " + _tableName + " WHERE UPPER(" + displayColumnName + ") LIKE ";\n      ////        //    sql += VIS.DB.to_string(text) + " AND IsActive=\'Y\'";\n      ////        //    var wc = self.getWhereClause(ctx, _columnName, _lookup);\n      ////        //    if (wc != null && wc.length > 0)\n      ////        //        sql += " AND " + wc;\n      ////        //    //\t***\n      ////        //    //log.finest(_columnName + " (Table) " + sql.toString());\n\n      ////        //    retVal.push(VIS.MRole.getDefault().addAccessSQL(sql, _tableName, VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO));\n      ////        //    retVal.push(_tableName);\n      ////        //    retVal.push(_keyColumnName);\n      ////        //    return retVal;\n\n      ////        //}\n      //    }\t//\tTable Reference\n      //}\t//\tMLookup\n\n      /////** Check Well Known Columns of Table - assumes TableDir\t**/\n      //var squery = "VIS_86";\n      //_keyColumnName = _columnName;\n      //sql = "(";\n\n      ////IDataReader dr = null;\n      //try {\n      //    var param = [];\n      //    param[0] = new VIS.DB.SqlParam("@colname", _keyColumnName);\n      //    dr = executeReader(squery, param);\n\n      //    while (dr.read()) {\n      //        if (sql.length > 1)\n      //            sql += " OR ";\n      //        _tableName = dr.get(0);\n      //        sql += "UPPER(" + dr.get(1) + ") LIKE " + VIS.DB.to_string(text);\n      //    }\n      //    sql += ")";\n      //    dr.close();\n      //    dr = null;\n\n      //}\n      //catch (e) {\n      //    if (dr != null) {\n      //        dr.close();\n      //        dr = null;\n      //    }\n      //    this.log.log(VIS.Logging.Level.SEVERE, squery, e);\n      //    //Logging.VLogger.Get().Log(Logging.Level.SEVERE, sql.ToString(), ex);\n      //}\n\n      //if (sql.length == 0) {\n      //    this.log.log(VIS.Logging.Level.SEVERE, _columnName + " (TableDir) - no standard/identifier columns");\n      //    //Logging.VLogger.Get().Log(Logging.Level.SEVERE, _columnName + " (TableDir) - no standard/identifier columns");\n      //    retVal.push("");\n      //    retVal.push(_tableName);\n      //    retVal.push(_keyColumnName);\n      //    return retVal;\n      //    //return new String[] { "", _tableName, _keyColumnName };\n      //}\n      ////\n      //var retValue = "SELECT " + _columnName + " FROM " + _tableName + " WHERE " + sql + " AND IsActive=\'Y\'";\n      //var _wc = self.getWhereClause(ctx, _columnName, _lookup);\n      //if (_wc != null && _wc.length > 0)\n      //    retValue += " AND " + _wc;\n      ////\t***\n      //////log.finest(_columnName + " (TableDir) " + sql.toString());\n      //retVal.push(VIS.MRole.getDefault().addAccessSQL(retValue, _tableName, VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO));\n      //retVal.push(_tableName);\n      //retVal.push(_keyColumnName);\n      return retVal;\n    }; //\tgetDirectAccessSQL\n\n    /// <summary>\n    /// Get Where Clause\n    /// </summary>\n    /// <param name="ctx">Current Context</param>\n    /// <param name="_ColumnName">Column Name</param>\n    /// <param name="_Lookup">Lookup reference</param>\n    /// <returns>where clause or ""</returns>\n    this.getWhereClause = function (ctx, _ColumnName, _Lookup) {\n      //_Lookup = (MLookup)_Lookup;\n      var WhereClause = "";\n      try {\n        if (_Lookup == null) return "";\n        if (_Lookup.getZoomQuery() != null) WhereClause = _Lookup.getZoomQuery().getWhereClause();\n        var validation = _Lookup.getValidation();\n        if (validation == null) validation = "";\n        if (WhereClause.length == 0) WhereClause = validation;else if (validation.length > 0) WhereClause += " AND " + validation;\n        //\t//log.finest("ZoomQuery=" + (_lookup.getZoomQuery()==null ? "" : _lookup.getZoomQuery().getWhereClause())\n        //\t\t+ ", Validation=" + _lookup.getValidation());\n        if (WhereClause.indexOf(\'@\') != -1) {\n          var validated = VIS.Env.parseContext(ctx, _Lookup.getWindowNo(), _Lookup.getTabNo(), WhereClause, false, true);\n          if (validated.length == 0) {\n            ////log.severe(_columnName + " - Cannot Parse=" + whereClause);\n          } else {\n            ////log.fine(_columnName + " - Parsed: " + validated);\n            return validated;\n          }\n        }\n      } catch (eee) {}\n      return WhereClause;\n    };\n\n    //\tReadWrite\n    if (isReadOnly || !isUpdateable) this.setReadOnly(true);else this.setReadOnly(false);\n    /* provilized function */\n\n    /* @overridde\r\n    */\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    /** \r\n        get contols button by index \r\n        -  zoom or info button \r\n        - index 0 for info button \r\n        - index 1 for zoom button\r\n        - control must tell or implemnt getBtnCount default is zero [no button]\r\n    *\r\n    */\n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btnSearch;\n      }\n      if (index == 1) {\n        //zoom\n        if ($btnPop) return $btnPop;\n      }\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        //$ctrl.show();\n        $ctrl.css("visibility", "visible");\n        if ($btnPop) $btnPop.show();\n        $btnSearch.show();\n      } else {\n        //$ctrl.hide();\n        $ctrl.css("visibility", "hidden");\n        if ($btnPop) $btnPop.hide();\n        $btnSearch.hide();\n      }\n    };\n    this.openSearchForm = function () {\n      if (self.isReadOnly) {\n        return;\n      }\n      // e.stopPropagation();\n      //alert("[pending] Info window for [" + self.value + "] => " + self.getName());\n      var text = $ctrl.val().trim();\n      if (typeof text == "object") {\n        text = "";\n      }\n      var selectedIDs = \'\';\n      if (self.isMultiKeyTextBox) selectedIDs = self.getValue();\n      if (self.isReadOnly) return;\n      if (self.lookup == null) return;\n      var infoWinID = 0;\n      var wc = self.getWhereClause(VIS.Env.getCtx(), columnName, self.lookup);\n      // Check if custom info window set on control.- done by mohit- asked by mukesh sir - 13 Feb 2019\n      if (self.custInfoWin != null) {\n        // Call controller to get info window id from search key.\n        $.ajax({\n          url: VIS.Application.contextUrl + "InfoWindow/GetInfoWindowID",\n          dataType: "json",\n          async: false,\n          data: {\n            InfoSearchKey: self.custInfoWin\n          },\n          success: function (data) {\n            infoWinID = data.result;\n          }\n        });\n      }\n\n      // Get info window from field if exist.\n      else if (self.getField() != null & infoWinID == 0) {\n        infoWinID = self.getField().getAD_InfoWindow_ID();\n      }\n      var InfoWindow = null;\n      if (infoWinID != 0) {\n        InfoWindow = new VIS.InfoWindow(infoWinID, text, self.lookup.windowNo, wc, self.isMultiKeyTextBox, selectedIDs);\n      } else {\n        var tableName = tableName;\n        var _keyColumnName = columnName;\n        var query = null;\n        var dr = null;\n\n        // Added by Bharat \n        var M_Warehouse_ID = 0,\n          M_PriceList_ID = 0,\n          window_ID = 0;\n\n        //\n        var AD_Reference_ID = self.lookup.getAD_Reference_Value_ID();\n        if (AD_Reference_ID > 0) {\n          query = "VIS_87";\n          var displayColumnName = null;\n          try {\n            var param = [];\n            param[0] = new VIS.DB.SqlParam("@AD_Reference_ID", AD_Reference_ID);\n            dr = executeReader(query, param);\n            while (dr.read()) {\n              _keyColumnName = dr.getString(0); //.Table.rows[0].cells[\'ColumnName\']; [0].ToString();\n              displayColumnName = dr.getString(1); //dr[1].ToString();\n              tableName = dr.getString(2); //dr[2].ToString();\n            }\n            dr.close();\n            dr = null;\n          } catch (e) {\n            if (dr != null) {\n              dr.close();\n              dr = null;\n            }\n            //Logging.VLogger.Get().Log(Logging.Level.SEVERE, query, e);\n          }\n        } else {\n          tableName = String(columnName).substr(0, columnName.length - 3);\n          _keyColumnName = columnName;\n        }\n\n        // Added by Bharat    For Product Info\n        //VIS.context.getContext(self.lookup.windowNo, "0|AD_Tab_ID", true)\n        //query = "SELECT AD_Window_ID FROM AD_Window WHERE Name = \'" + VIS.context.getContext(self.lookup.windowNo, "WindowName") + "\'";\n        query = "VIS_88";\n        var param = [];\n        param[0] = new VIS.DB.SqlParam("@AD_Tab_ID", VIS.context.getContextAsInt(self.lookup.windowNo, "0|AD_Tab_ID", true));\n        window_ID = executeScalar(query, param);\n        if (_keyColumnName.equals("M_Product_ID") && window_ID) {\n          if (window.DTD001 && window_ID == 170) {\n            M_Warehouse_ID = VIS.context.getContextAsInt(self.lookup.windowNo, "DTD001_MWarehouseSource_ID");\n          } else {\n            M_Warehouse_ID = VIS.context.getContextAsInt(self.lookup.windowNo, "M_Warehouse_ID");\n          }\n          M_PriceList_ID = VIS.context.getContextAsInt(self.lookup.windowNo, "M_PriceList_ID");\n          var multipleSelection = false;\n          if (self.lookup.windowNo > 0) {\n            multipleSelection = VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "C_OrderLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "C_InvoiceLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "M_InOutLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "M_PackageLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "M_MovementLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "M_InventoryLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "M_ProductPrice_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "C_ProjectLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "M_RequisitionLine_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 0, "KeyColumnName") == "M_PriceList_ID" || VIS.context.getWindowTabContext(self.lookup.windowNo, 1, "KeyColumnName") == "SAP001_StockTransferLine_ID" //;\n            ;\n          }\n          InfoWindow = new VIS.infoProduct(true, self.lookup.windowNo, M_Warehouse_ID, M_PriceList_ID, text, tableName, _keyColumnName, multipleSelection, wc, selectedIDs);\n        } else {\n          //try get dynamic window\n          // Change by mohit - to change the logic of getting dynamic window. Date - 17 october 2017\n          query = "VIS_89";\n          var param = [];\n          param[0] = new VIS.DB.SqlParam("@tableName", tableName);\n          dr = executeReader(query, param);\n          while (dr.read()) {\n            infoWinID = dr.getString(0);\n            break;\n          }\n          dr.close();\n          dr = null;\n          if (infoWinID > 0) {\n            InfoWindow = new VIS.InfoWindow(infoWinID, text, self.lookup.windowNo, wc, self.isMultiKeyTextBox, selectedIDs);\n          } else {\n            InfoWindow = new VIS.infoGeneral(true, self.lookup.windowNo, text, tableName, _keyColumnName, self.isMultiKeyTextBox, wc, selectedIDs);\n          }\n        }\n      }\n      InfoWindow.onClose = function () {\n        //self.setValue(InfoWindow.getSelectedValues(), false, true);\n\n        var objResult = InfoWindow.getSelectedValues();\n        if (objResult && objResult.length == 0) {\n          if ($ctrl.closest(\'td\').hasClass(\'vis-gc-vpanel-table-td3\')) {\n            //var next = $ctrl.closest(\'tr\').next(\'tr\');\n            //if (next && next.length > 0) {\n            //    window.setTimeout(function () {\n            //        next.find(\'.vis-gc-vpanel-table-td1\').find(\'input,select,textarea,button\').focus();\n            //    }, 200);\n            //}\n\n            window.setTimeout(function () {\n              $ctrl.closest(\'tr\').nextAll().children(\'input,select,textarea,button\').focus();\n            }, 200);\n          } else if ($ctrl.closest(\'td\').hasClass(\'vis-gc-vpanel-table-td1\')) {\n            var next = $ctrl.closest(\'td\').siblings(\'.vis-gc-vpanel-table-td3\');\n            if (next && next.length > 0) {\n              next = next.find(\'input,select,textarea,button\');\n              if (next && next.length > 0) {\n                window.setTimeout(function () {\n                  next.focus();\n                }, 200);\n              } else {\n                //var next = $ctrl.closest(\'tr\').next(\'tr\');\n                //if (next && next.length > 0) {\n                //    window.setTimeout(function () {\n                //        next.find(\'.vis-gc-vpanel-table-td1\').find(\'input,select,textarea,button\').focus();\n                //    }, 200);\n                //}\n                window.setTimeout(function () {\n                  $ctrl.closest(\'tr\').nextAll().children(\'input,select,textarea,button\').focus();\n                }, 200);\n              }\n            }\n          } else {\n            window.setTimeout(function () {\n              $ctrl.closest(\'td\').siblings(\'.vis-gc-vpanel-table-td3\').find(\'input,select,textarea,button\').focus();\n            }, 200);\n          }\n          $ctrl.closest(\'td\').nextAll().children(\'input,select,textarea,button\').focus();\n          // change by mohit to refresh the grid if resfresh ui status sent true from info window.\n          if (InfoWindow.getRefreshStatus && InfoWindow.getRefreshStatus()) {\n            self.fireRefreshUI();\n          }\n          return;\n        }\n        if (self.isMultiKeyTextBox) {\n          var sb = "";\n          var i = 0;\n          var j = 0;\n          for (i = 0, j = objResult.length; i < j; i++) {\n            if (sb.length == 0) {\n              sb += objResult[i];\n              continue;\n            }\n            sb += "," + objResult[i];\n          }\n          if (self.isMultiKeyTextBox) {\n            self.setValue(sb, true, true);\n          } else {\n            self.setValue(sb, false, true);\n          }\n        } else {\n          var newVal = null;\n          if (InfoWindow.getRefreshStatus && InfoWindow.getRefreshStatus()) {\n            self.fireRefreshUI();\n          } else {\n            if (objResult != null && objResult.length == 1) {\n              newVal = objResult[0];\n            } else {\n              //if ((_value.ToString() != objResult.ToString()))\n              InfoMultipleIds = null;\n              if (objResult.length > 1) {\n                newVal = objResult[0];\n              }\n            }\n            if (newVal != null) {\n              if (self.isMultiKeyTextBox) {\n                self.setValue(newVal, true, true);\n              } else {\n                self.setValue(newVal, false, true);\n                if (self.editingGrid) {\n                  // bring back to edit mode(grid view) after value selection\n                  setTimeout(function () {\n                    self.editingGrid.editField(self.gridPos.recid, self.gridPos.col, newVal);\n                  }, 500);\n                }\n              }\n            }\n          }\n        }\n        InfoWindow = null;\n      };\n      InfoWindow.show();\n    };\n    $btnSearch.on(VIS.Events.onClick, self.openSearchForm);\n    function zoomAction(value) {\n      if (!self.lookup || disabled) return;\n      //\n      var zoomQuery = self.lookup.getZoomQuery();\n      //var value = self.getValue();\n      if (!value) value = self.getValue();\n      if (value == "") value = null;\n\n      //\tIf not already exist or exact value\n      if (zoomQuery == null || $.isEmptyObject(zoomQuery) || value != null) {\n        zoomQuery = new VIS.Query(); //\tColumnName might be changed in MTab.validateQuery\n\n        var keyColumnName = null;\n        //\tCheck if it is a Table Reference\n        if (self.lookup != null && self.lookup instanceof VIS.MLookup) {\n          var AD_Reference_ID = self.lookup.getAD_Reference_Value_ID();\n          if (AD_Reference_ID != 0) {\n            var query = "VIS_90";\n            var param = [];\n            param[0] = new VIS.DB.SqlParam("@AD_Reference_ID", AD_Reference_ID);\n            try {\n              var dr = executeReader(query, param);\n              if (dr.read()) {\n                keyColumnName = dr.getString(0);\n              }\n              dr.dispose();\n            } catch (e) {\n              this.log.log(VIS.Logging.Level.SEVERE, query, e);\n            }\n          } //\tTable Reference\n        } //\tMLookup\n\n        if (keyColumnName != null && keyColumnName.length != 0) zoomQuery.addRestriction(keyColumnName, VIS.Query.prototype.EQUAL, value);else zoomQuery.addRestriction(self.getColumnName(), VIS.Query.prototype.EQUAL, value);\n        zoomQuery.setRecordCount(1); //\tguess\n      }\n      var AD_Window_ID = 0;\n      if (self.mField != null && self.mField.getZoomWindow_ID() > 0) {\n        AD_Window_ID = self.mField.getZoomWindow_ID();\n      } else if (zoomWindow_ID && zoomWindow_ID > 0) {\n        AD_Window_ID = zoomWindow_ID;\n      } else {\n        AD_Window_ID = self.lookup.getZoomWindow(zoomQuery);\n      }\n\n      //\n      //this.log.info(this.getColumnName() + " - AD_Window_ID=" + AD_Window_ID\n      //    + " - Query=" + zoomQuery + " - Value=" + value);\n      //\n      //setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n      //\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n\n      //setCursor(Cursor.getDefaultCursor());\n    }\n    ;\n    if ($btnPop) {\n      $btnPop.on(VIS.Events.onClick, function (e) {\n        if (!self.isMultiKeyTextBox) $btnPop.w2overlay($ulPopup.clone(true));else {\n          if (self.isReadOnly) {\n            return;\n          }\n          var val = self.getValue();\n          if (val && val.toString().length > 0) {\n            self.setValue(null, false, true);\n          }\n        }\n        e.stopPropagation();\n      });\n    }\n    if ($ulPopup) {\n      $ulPopup.on("click", "LI", function (e) {\n        var action = $(e.target).data("action");\n        if (action == VIS.Actions.zoom) {\n          if (disabled) return;\n          zoomAction();\n        } else if (action == VIS.Actions.addnewrec) {\n          if (disabled) return;\n          zoomAction(-10);\n        } else if (action == VIS.Actions.preference) {\n          var obj = new VIS.ValuePreference(self.mField, self.getValue(), self.getDisplay());\n          if (obj != null) {\n            obj.showDialog();\n          }\n          obj = null;\n        } else if (action == VIS.Actions.refresh) {\n          if (!self.lookup || self.isReadOnly) return;\n          self.lookup.refresh();\n        } else if (action == VIS.Actions.add) {\n          var val = self.getValue();\n          // if (val && val.toString().length > 0) {\n          VIS.AddUpdateBPartner(self.mField.getWindowNo(), 0, VIS.Msg.getMsg("Customer"), null, 0, 0);\n          //  var contactInfo = new VIS.ContactInfo(101, 1);\n          // contactInfo.show();\n          //}\n        } else if (action == VIS.Actions.addproduct) {\n          var val = self.getValue();\n          VIS.AddUpdateMProduct(self.mField.getWindowNo(), 0, VIS.Msg.getMsg("Product"), null, 0, 0);\n        } else if (action == VIS.Actions.update) {\n          var val = self.getValue();\n          if (val && val.toString().length > 0) {\n            VIS.AddUpdateBPartner(self.mField.getWindowNo(), val, VIS.Msg.getMsg("Customer"), null, 0, 0);\n          }\n        } else if (action == VIS.Actions.contact) {\n          var val = self.getValue();\n          if (val && val.toString().length > 0) {\n            //var contactInfo = new VIS.ContactInfo(val, this.mField.getWindowNo());\n            var contactInfo = new VIS.ContactInfo(val, self.mField.getWindowNo());\n            contactInfo.show();\n          }\n        } else if (action == VIS.Actions.remove) {\n          if (self.isReadOnly) return;\n          self.setValue(null, false, true);\n        }\n      });\n    }\n\n    /** \r\n    *  dispose \r\n    */\n    this.disposeComponent = function () {\n      $btnSearch.off(VIS.Events.onClick);\n      if ($btnPop) $btnPop.off(VIS.Events.onClick);\n      if ($ulPopup) $ulPopup.off(VIS.Events.onTouchStartOrClick);\n      $ulPopup = null;\n      self = null;\n      $ctrl = null;\n      $btnSearch = null;\n      $btnPop = null;\n      this.getBtn = null;\n      this.setVisible = null;\n      if (addBtn) {\n        addBtn.off("click");\n      }\n      addBtn = null;\n      addItem = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VTextBoxButton, IControl); //inherit IControl\n\n  VTextBoxButton.prototype.setValue = function (newValue, refrsh, fire) {\n    if (this.oldValue != newValue || refrsh) {\n      this.settingValue = true;\n      this.oldValue = newValue;\n      this.value = newValue;\n      //\tSet comboValue\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.ctrl.val("");\n        this.settingValue = false;\n        if (fire) {\n          var evt = {\n            newValue: newValue,\n            propertyName: this.getName()\n          };\n          this.fireValueChanged(evt);\n          evt = null;\n        }\n        return;\n      }\n      if (this.lookup == null) {\n        this.ctrl.val(newValue.toString());\n        this.lastDisplay = newValue.toString();\n        this.settingValue = false;\n        return;\n      }\n      if (this.displayType !== VIS.DisplayType.MultiKey) this.lastDisplay = this.lookup.getDisplay(newValue);else {\n        var arr = newValue.toString().split(\',\');\n        var sb = "";\n        for (var i = 0, j = arr.length; i < j; i++) {\n          var val = arr[i];\n          if (!isNaN(val)) {\n            val = Number(val);\n          }\n          if (sb.length == 0) {\n            sb += this.lookup.getDisplay(val);\n            continue;\n          }\n          sb += ", " + this.lookup.getDisplay(val);\n        }\n        this.lastDisplay = sb;\n      }\n      if (this.lastDisplay.equals("<-1>")) {\n        this.lastDisplay = "";\n        this.oldValue = null;\n        this.value = null;\n      }\n      this.value = newValue;\n      var ctrlval = VIS.Utility.Util.getIdentifierDisplayVal(this.lastDisplay);\n      this.ctrl.val(VIS.Utility.decodeText(ctrlval));\n      this.settingValue = false;\n      //this.setBackground("white");\n      if (fire) {\n        if (newValue == -1 || newValue == "") {\n          newValue = null;\n        }\n        var evt = {\n          newValue: newValue,\n          propertyName: this.getName()\n        };\n        this.fireValueChanged(evt);\n        evt = null;\n      }\n    } else if (newValue == null) {\n      this.ctrl.val("");\n    }\n  };\n  VTextBoxButton.prototype.getValue = function () {\n    return this.value;\n  };\n  VTextBoxButton.prototype.getMultipleIds = function () {\n    return this.infoMultipleIds;\n  };\n  VTextBoxButton.prototype.getDisplay = function () {\n    var retValue = "";\n    if (this.lookup == null) retValue = this.value;else retValue = this.lookup.getDisplay(this.value);\n    return retValue;\n  };\n\n  // Added by mohit - To set the custom info window needed to be opened while creating search control.\n  VTextBoxButton.prototype.setCustomInfo = function (InfoWindow) {\n    if (InfoWindow != null) {\n      this.custInfoWin = InfoWindow;\n    }\n  };\n\n  //7. \n  function VTextArea(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, displayType) {\n    var rows = 6;\n    var minHeight = 79;\n    if (displayType != VIS.DisplayType.Memo) {\n      if (displayType == VIS.DisplayType.TextLong) {\n        rows = 6;\n        fieldLength = 100000;\n      } else {\n        rows = fieldLength < 300 ? 2 : fieldLength < 2000 ? 4 : 6;\n        minHeight = fieldLength < 300 ? 79 : fieldLength < 2000 ? 129 : 129;\n      }\n    } else {\n      try {\n        rows = fieldLength < 300 ? 2 : fieldLength < 2000 ? 4 : fieldLength / 500;\n        minHeight = fieldLength < 300 ? 79 : fieldLength < 2000 ? 129 : 129;\n      } catch (e) {\n        rows = fieldLength < 300 ? 2 : fieldLength < 2000 ? 4 : 6;\n        minHeight = fieldLength < 300 ? 79 : fieldLength < 2000 ? 129 : 129;\n      }\n    }\n\n    //Init Control\n    var $ctrl = $(\'<textarea>\', {\n      name: columnName,\n      maxlength: fieldLength,\n      rows: rows,\n      \'style\': \'min-height:\' + minHeight + \'px\'\n    });\n    //Call base class\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n      //this.Enabled = false;\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n\n    /* Event */\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      var newVal = $ctrl.val();\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl.off("change"); //u bind event\n      $ctrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VTextArea, IControl); //inherit IControl\n  /** \r\n  *  set value \r\n  *  @param new value to set\r\n  */\n  VTextArea.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      //console.log(newValue);\n      this.ctrl.val(newValue);\n      //this.setBackground("white");\n    }\n  };\n  /** \r\n   *  get display text of control\r\n   *  @return text of control\r\n   */\n  VTextArea.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  };\n\n  /*************HTML 5 Amount,Integer,Number Txtbox Block Code By raghu 06-05-2014****************************************/\n\n  //8.\n  /**\r\n  * Create VAmountTextBox text box Control\r\n  *  @param columnName column name\r\n  *  @param mandatory mandatory\r\n  *  @param isReadOnly read only\r\n  *  @param isUpdateable updateable\r\n  *  @param displayLength textbox lenght\r\n  *  @param fieldLength column lenght\r\n  *  @param title title\r\n  */\n  function VAmountTextBox(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, controlDisplayType, title) {\n    var displayType = controlDisplayType;\n    var length = fieldLength;\n\n    //Init Control\n\n    var $ctrl = $(\'<input>\', {\n      type: \'number\',\n      step: \'any\',\n      name: columnName,\n      maxlength: 16,\n      \'data-type\': \'int\'\n    });\n    $ctrl.attr(\'autocomplete\', \'off\');\n\n    //Call base class\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    //Set Fration,min,max value for control according to there dispay type\n    this.format = VIS.DisplayType.GetNumberFormat(displayType);\n\n    // Define Formatter type\n    //this.dotFormatter = VIS.Env.isDecimalPoint();\n\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n\n    // Assign Value\n    this.dotFormatter = VIS.Env.isDecimalPoint();\n\n    // For testing purpose\n    //this.dotFormatter = true;\n\n    //On key down event\n    $ctrl.on("keydown", function (event) {\n      if (event.keyCode == 189 || event.keyCode == 109 || event.keyCode == 173) {\n        // dash (-)\n        if (event.keyCode == 189 && this.value.length == 0) {\n          return true;\n        }\n        var val = self.format.GetConvertedNumber(this.value, self.dotFormatter);\n        this.value = Number(val) * -1;\n        setTimeout(function () {\n          $ctrl.trigger("change");\n        }, 100);\n        return false;\n      }\n\n      //if (event.shiftKey) {\n      //    return false;\n      //}\n\n      if (event.keyCode >= 37 && event.keyCode <= 40 ||\n      // Left, Up, Right and Down        \n      event.keyCode == 8 ||\n      // backspaceASKII\n      event.keyCode == 9 ||\n      // tabASKII\n      event.keyCode == 16 ||\n      // shift\n      event.keyCode == 17 ||\n      // control\n      event.keyCode == 35 ||\n      // End\n      event.keyCode == 36 ||\n      // Home\n      event.keyCode == 46)\n        // deleteASKII\n        {\n          return true;\n        }\n      // 0-9 numbers (the numeric keys at the right of the keyboard)\n      if (event.keyCode >= 48 && event.keyCode <= 57 && event.shiftKey == false || event.keyCode >= 96 && event.keyCode <= 105 && event.shiftKey == false) {\n        if (this.value.length >= length) {\n          return false;\n        }\n        return true;\n      } else if (event.keyCode == 189 || event.keyCode == 109 || event.keyCode == 173) {\n        // dash (-)\n        this.value = this.value * -1;\n        return false;\n      }\n\n      // Get culture decimal separator\n      // if (window.navigator.language != undefined) {\n      //    var culture = new VIS.CultureSeparator();\n      // var isDotSeparator = VIS.Env.isDecimalPoint();// culture.isDecimalSeparatorDot(window.navigator.language);\n\n      // Not . decimal separator\n      //console.log(event.keyCode, " >keyCode ", VIS.Env.isDecimalPoint());\n\n      //if (!VIS.Env.isDecimalPoint()) {\n      if (!self.dotFormatter) {\n        if (event.keyCode == 190 || event.keyCode == 110) {\n          return false;\n        }\n      }\n      // . separator\n      else {\n        if (event.keyCode == 188) {\n          // for ","\n          return false;\n        }\n      }\n\n      // }\n\n      if (event.keyCode == 190 || event.keyCode == 110 || event.keyCode == 188) {\n        // decimal (.)\n        if (this.value.indexOf(\'.\') > -1) {\n          this.value = this.value.replace(\'.\', \'\');\n        }\n        // For mulpile , separator\n        else if (this.value.indexOf(\',\') > -1) {\n          this.value = this.value.replace(\',\', \'\');\n        }\n        if (this.value.length >= length) {\n          return false;\n        }\n        return true;\n      }\n\n      // Select All (CTRL + A)\n      // console.log(event.ctrlKey, " >> ", event.keyCode)\n      if (event.ctrlKey && event.keyCode == 65) {\n        if (this.value.length > 0) {\n          event.stopPropagation();\n          $ctrl.select();\n          return true;\n        }\n        // Copy (CTRL +C)\n      } else if (event.ctrlKey && event.keyCode == 67) {\n        if (this.value.length > 0) {\n          event.stopPropagation();\n          return true;\n        }\n        // Paster (CTRL+V)\n      } else if (event.ctrlKey && event.keyCode == 86) {\n        setTimeout(function () {\n          event.stopPropagation();\n          var _value = event.target.value;\n          event.target.value = _value ? self.format.GetConvertedString(_value, self.dotFormatter) : \'\';\n        }, 10);\n        return true;\n        // CUT (CTRL+X)\n      } else if (event.ctrlKey && event.keyCode == 88) {\n        event.stopPropagation();\n        return true;\n      }\n\n      /* Check Only for . and , */\n      //if (event.keyCode == 188) {\n      //   return false;\n      //}\n      //else {\n      return false;\n      //}\n    });\n\n    //If user click in amount control, select all amount present in control\n    $ctrl.on("focus", function (e) {\n      e.stopPropagation();\n      // Change Amount Display Type\n      var _value = e.target.value;\n      $ctrl.attr("type", "text");\n      e.target.value = _value ? self.format.GetConvertedString(_value, self.dotFormatter) : \'\';\n      if (VIS.DisplayType.Amount == displayType) {\n        $ctrl.select();\n      }\n    });\n\n    //text change Event\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      // var newVal = $ctrl.val();\n\n      var newVal = self.getValue();\n      this.value = newVal;\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n    $ctrl.on("blur", function (e) {\n      e.stopPropagation();\n      $ctrl.attr("type", "text");\n      var val = $ctrl.val();\n      if (!self.dotFormatter) {\n        val = val.replace(".", ",");\n      }\n      var _value = self.format.GetConvertedString(val, self.dotFormatter);\n      var _val = self.format.GetFormatAmount(_value, "formatOnly", self.dotFormatter);\n      $ctrl.val(_val);\n    });\n    this.disposeComponent = function () {\n      $ctrl.off("keydown"); //u bind event\n      $ctrl.off("change"); //u bind event\n\n      $ctrl = null;\n      self = null;\n      this.format.dispose();\n      this.format = null;\n      length = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VAmountTextBox, IControl); //Inherit from IControl\n\n  // set value   @param new value to set\n  VAmountTextBox.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      newValue = this.format.GetFormatedValue(newValue);\n\n      // this.ctrl.val(newValue);\n      // this.setBackground("white");\n\n      this.ctrl.attr("type", "text");\n      var _value = this.format.GetFormatAmount(newValue, "init", this.dotFormatter);\n      this.ctrl.val(_value);\n    }\n  };\n  VAmountTextBox.prototype.getValue = function () {\n    var val = this.$super.getValue.call(this);\n    val = this.format.GetConvertedNumber(val, this.dotFormatter);\n    if (isNaN(val) || val === null) {\n      return null;\n    }\n    return Number(val);\n  };\n\n  //get display text of control  @return text of control\n  VAmountTextBox.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  };\n  VAmountTextBox.prototype.setMaxValue = function (maxValue) {\n    if ($.isNumeric(maxValue)) {\n      this.ctrl.attr("max", maxValue);\n    }\n  };\n  VAmountTextBox.prototype.setMinValue = function (minValue) {\n    if ($.isNumeric(minValue)) {\n      this.ctrl.attr("min", minValue);\n    }\n  };\n\n  /***END VAmountTextBox***/\n\n  //9. \n  /**\r\n  * Create VNumTextBox Allow only Integer values (-,+) decimal not allowed\r\n  *  @param columnName column name\r\n  *  @param mandatory mandatory\r\n  *  @param isReadOnly read only\r\n  *  @param isUpdateable updateable\r\n  *  @param displayLength textbox lenght\r\n  *  @param fieldLength column lenght\r\n  *  @param title title\r\n  */\n  function VNumTextBox(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, title) {\n    var displayType = VIS.DisplayType.Integer;\n    var length = fieldLength;\n    //Init Control\n    var $ctrl = $(\'<input>\', {\n      type: \'text\',\n      name: columnName,\n      maxlength: length,\n      \'data-type\': \'int\'\n    });\n\n    //Call base class\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    //Set Fration,min,max value for control according to there dispay type\n    this.format = VIS.DisplayType.GetNumberFormat(displayType);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n      //this.Enabled = false;\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n    //$ctrl.addClass("vis-control-wrap-int-amount");\n\n    //On key down event\n    $ctrl.on("keydown", function (event) {\n      if (event.keyCode == 189 || event.keyCode == 109 || event.keyCode == 173) {\n        // dash (-)\n        if (event.keyCode == 189 && this.value.length == 0) {\n          return true;\n        }\n        this.value = Number(this.value * -1);\n        setTimeout(function () {\n          $ctrl.trigger("change");\n        }, 100);\n        return false;\n      }\n\n      //if (event.shiftKey) {\n      //    return false;\n      //}\n\n      if (event.keyCode >= 37 && event.keyCode <= 40 ||\n      // Left, Up, Right and Down        \n      event.keyCode == 8 ||\n      // backspaceASKII\n      event.keyCode == 9 ||\n      // tabASKII\n      event.keyCode == 16 ||\n      // shift\n      event.keyCode == 17 ||\n      // control\n      event.keyCode == 35 ||\n      // End\n      event.keyCode == 36 ||\n      // Home\n      event.keyCode == 46)\n        // deleteASKII\n        {\n          return true;\n        }\n      if (this.value < 0) {\n        if (this.value.length > VIS.DisplayType.INTEGER_DIGITS && event.keyCode != 8 && event.keyCode != 9 && event.keyCode != 46) {\n          return false;\n        }\n      } else {\n        if (this.value.length >= VIS.DisplayType.INTEGER_DIGITS && event.keyCode != 8 && event.keyCode != 9 && event.keyCode != 46) {\n          return false;\n        }\n      }\n      // 0-9 numbers (the numeric keys at the right of the keyboard)\n      if (event.keyCode >= 48 && event.keyCode <= 57 && event.shiftKey == false || event.keyCode >= 96 && event.keyCode <= 105 && event.shiftKey == false) {\n        if (this.value.length >= length) {\n          return false;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    // text change Event \n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      //var newVal = $ctrl.val();    \n      var newVal = self.getValue();\n      newVal = Globalize.parseInt(newVal.toString());\n      //alert(newVal);\n      var newFormatedVal = Number(self.format.GetFormatedValue(newVal));\n      if (newVal != newFormatedVal) {\n        self.mField.setValue(null);\n        newVal = newFormatedVal;\n      }\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl.off("keydown"); //u bind event\n      $ctrl.off("change"); //u bind event\n      $ctrl = null;\n      self = null;\n      this.format.dispose();\n      this.format = null;\n      length = null;\n    };\n  }\n  ;\n\n  //Inherit from IControl\n  VIS.Utility.inheritPrototype(VNumTextBox, IControl);\n\n  // set value   @param new value to set\n  VNumTextBox.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      //console.log(newValue);\n      //newValue = Number(this.format.GetFormatedValue(newValue));\n      // newValue = Globalize.format(newValue, "n0");\n      this.ctrl.val(newValue);\n      //this.setBackground("white");\n    }\n  };\n  VNumTextBox.prototype.getValue = function () {\n    var val = this.$super.getValue.call(this);\n    if (val === null) {\n      return null;\n    }\n    if (this.editingGrid) {\n      val = this.format.GetFormatedValue(val);\n    }\n    //return Number(val);\n    return val;\n  };\n\n  //get display text of control @return text of control\n  VNumTextBox.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  };\n\n  /***END VNumTextBox***/\n\n  //10. Location\n\n  /**\r\n   *\tCreate lookup for location field\r\n   *  @param columnName column name\r\n   *  @param mandatory mandatory\r\n   *  @param isReadOnly read only\r\n   *  @param isUpdateable updateable\r\n   *  @param displayType display type\r\n   *  @param title title\r\n   */\n\n  function VLocation(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, hideMapButton) {\n    if (!displayType) {\n      displayType = VIS.DisplayType.Location;\n    }\n    this.lookup = lookup;\n    this.lastDisplay = "";\n    this.settingFocus = false;\n    this.inserting = false;\n    this.settingValue = false;\n    this.value = null;\n\n    //create ui\n    var $ctrl = $(\'<input readonly>\', {\n      type: \'text\',\n      name: columnName\n    });\n    var $btnMap = $(\'<button class="input-group-text"><i class="vis vis-location" aria-hidden="true"></i></button>\');\n    var $btnLocation = $(\'<button class="input-group-text"><i class="vis vis-pencil" aria-hidden="true"></i></button>\');\n    var btnCount = hideMapButton ? 1 : 2;\n    //$ctrl.append($btnMap).append($btnLocation);\n    var self = this;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory); //call base function\n\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    this.getBtn = function (index) {\n      if (btnCount == 2) {\n        if (index == 0) {\n          return $btnMap;\n        }\n        if (index == 1) {\n          return $btnLocation;\n        }\n      } else return $btnLocation;\n    };\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btnMap.show();\n        $btnLocation.show();\n      } else {\n        $ctrl.hide();\n        $btnMap.hide();\n        $btnLocation.hide();\n      }\n    };\n    this.setReadOnly = function (readOnly) {\n      this.isReadOnly = readOnly;\n      $ctrl.prop(\'disabled\', readOnly ? true : false);\n      if (readOnly) {\n        $btnLocation.css("opacity", .7);\n      } else {\n        $btnLocation.css("opacity", 1);\n      }\n      this.setBackground(false);\n    };\n    $btnMap.on(VIS.Events.onClick, function (e) {\n      //var url = "http://local.google.com/maps?q=" + self.getDisplay();\n      //window.open(url);\n      // On click map icon from control, switch to map view and show that location.\n      if (self.getField().gridTab && self.getField().gridTab.mDataListenerList) {\n        self.getField().gridTab.mDataListenerList[0].switchMapRow(self.value);\n      }\n      e.stopPropagation();\n    });\n    $btnLocation.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (self.isReadOnly) {\n        return;\n      }\n      // passed new parameter for Maintain Versions in case of Location Control\n      var maintainVers = null;\n      if (self.mField && self.mField.vo) maintainVers = self.mField.vo.IsMaintainVersions;\n      var obj = new VIS.LocationForm(self.value, maintainVers);\n      obj.load();\n      obj.showDialog();\n      obj.onClose = function (location, change) {\n        //if (self.oldValue != location)\n        {\n          if (change) {\n            self.oldValue = 0;\n            self.lookup.refreshLocation(location);\n            self.setValue(location);\n            var evt = {\n              newValue: location,\n              propertyName: self.getColumnName()\n            };\n            self.fireValueChanged(evt);\n            evt = null;\n          }\n        }\n      };\n      obj = null;\n      //alert("Map button [" + self.value + "] => " + self.getName());\n    });\n\n    //dispose \n    this.disposeComponent = function () {\n      $btnMap.off(VIS.Events.onClick);\n      $btnLocation.off(VIS.Events.onClick);\n      self = null;\n      $ctrl = null;\n      $btnMap = null;\n      $btnLocation = null;\n      this.setVisible = null;\n      //this.lookup = null;\n      //this.lastDisplay = "";\n      //this.settingFocus = false;\n      //this.inserting = false;\n      //this.settingValue = false;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VLocation, IControl); //inherit IControl\n\n  VLocation.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.settingValue = true;\n      this.oldValue = newValue;\n      this.value = newValue;\n\n      //\tSet comboValue\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.ctrl.val("");\n        this.settingValue = false;\n        return;\n      }\n      if (this.lookup == null) {\n        this.ctrl.val(newValue.toString());\n        this.lastDisplay = newValue.toString();\n        this.settingValue = false;\n        return;\n      }\n      this.lastDisplay = this.lookup.getDisplay(newValue);\n      if (this.lastDisplay.equals("<-1>")) {\n        this.lastDisplay = "";\n        this.oldValue = null;\n        this.value = null;\n      }\n      this.value = newValue;\n      //this.ctrl.val(this.lastDisplay);\n      this.ctrl.val(VIS.Utility.decodeText(this.lastDisplay));\n      this.settingValue = true;\n    }\n  };\n  VLocation.prototype.getValue = function () {\n    return this.value;\n  };\n  VLocation.prototype.getDisplay = function () {\n    var retValue = "";\n    if (this.lookup == null) retValue = this.value;else retValue = this.lookup.getDisplay(this.value);\n    return retValue;\n  };\n\n  //END\n\n  //11. Locator\n\n  /**\r\n   *\tCreate lookup for locator field\r\n   *  @param columnName column name\r\n   *  @param mandatory mandatory\r\n   *  @param isReadOnly read only\r\n   *  @param isUpdateable updateable\r\n   *  @param displayType display type\r\n   *  @param title title\r\n   */\n  function VLocator(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup) {\n    this.mandatory = isMandatory;\n    this.onlyWarehouseId = 0;\n    this.onlyProductId = 0;\n    this.onlyOutgoing = null;\n    this.windowNum = lookup.getWindowNo();\n    this.columnName = columnName;\n    this.lookup = lookup;\n    var src = "vis vis-locator"; //VIS.Application.contextUrl + "Areas/VIS/Images/base/Locator20.png";\n    this.value = null;\n    if (!displayType) displayType = VIS.DisplayType.Locator;\n\n    //create ui\n    var $ctrl = $(\'<input readonly>\', {\n      type: \'text\',\n      name: columnName\n    });\n    var $btn = $(\'<button class="input-group-text"><i class="\' + src + \'" aria-hidden="true"></i></button>\');\n    var $btnZoom = $(\'<button class="input-group-text"><i class="vis vis-find" aria-hidden="true"></i></button>\');\n    var btnCount = 2;\n    var self = this;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    // @overridde\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    // get contols button by index \n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btn;\n      }\n      if (index == 1) {\n        //zoom\n        return $btnZoom;\n      }\n    };\n    //show visivility\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btn.show();\n        $btnZoom.show();\n      } else {\n        $btn.hide();\n        $btnZoom.hide();\n        $ctrl.hide();\n      }\n    };\n    this.setReadOnly = function (readOnly) {\n      this.isReadOnly = readOnly;\n      $ctrl.prop(\'disabled\', readOnly ? true : false);\n      if (readOnly) {\n        $btn.css("opacity", .7);\n      } else {\n        $btn.css("opacity", 1);\n      }\n      this.setBackground(false);\n    };\n    $btn.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (self.isReadOnly) {\n        return;\n      }\n      //\tWarehouse/Product\n      var warehouseId = self.getOnlyWarehouseID();\n      var productId = self.getOnlyProductID();\n      self.showLocatorForm(warehouseId, productId);\n    });\n    $btnZoom.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (!self.lookup) return;\n      //\n      var zoomQuery = self.lookup.getZoomQuery();\n      var value = self.getValue();\n      if (value == null) {\n        //   value = selectedItem;\n      }\n      if (value == "") value = null;\n      //\tIf not already exist or exact value\n      if (zoomQuery == null || value != null) {\n        zoomQuery = new VIS.Query(); //\tColumnName might be changed in MTab.validateQuery\n\n        var keyColumnName = null;\n        //\tCheck if it is a Table Reference\n        if (self.lookup != null && self.lookup instanceof VIS.MLookup) {\n          var AD_Reference_ID = self.lookup.getAD_Reference_Value_ID();\n          if (AD_Reference_ID != 0) {\n            var query = "VIS_91";\n            var param = [];\n            param[0] = new VIS.DB.SqlParam("@AD_Reference_ID", AD_Reference_ID);\n            try {\n              var dr = executeReader(query, param);\n              if (dr.read()) {\n                keyColumnName = dr.getString(0);\n              }\n              dr.dispose();\n            } catch (e) {\n              this.log.log(VIS.Logging.Level.SEVERE, query, e);\n            }\n          } //\tTable Reference\n        } //\tMLookup\n\n        if (keyColumnName != null && keyColumnName.length != 0) zoomQuery.addRestriction(keyColumnName, VIS.Query.prototype.EQUAL, value);else zoomQuery.addRestriction(self.getColumnName(), VIS.Query.prototype.EQUAL, value);\n        zoomQuery.setRecordCount(1); //\tguess\n      }\n      var AD_Window_ID = 0;\n      if (self.mField.getZoomWindow_ID() > 0) {\n        AD_Window_ID = self.mField.getZoomWindow_ID();\n      } else {\n        AD_Window_ID = self.lookup.getZoomWindow(zoomQuery);\n      }\n      //\n      //this.log.info(this.getColumnName() + " - AD_Window_ID=" + AD_Window_ID\n      //    + " - Query=" + zoomQuery + " - Value=" + value);\n      //\n      //setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n      //\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n      //setCursor(Cursor.getDefaultCursor());\n    });\n\n    //dispose\n    this.disposeComponent = function () {\n      $btn.off(VIS.Events.onClick);\n      $btnZoom.off(VIS.Events.onClick);\n      self = null;\n      $ctrl = null;\n      $btn = null;\n      this.getBtn = null;\n      this.setVisible = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VLocator, IControl);\n  VLocator.prototype.getOnlyWarehouseID = function () {\n    var ctx = VIS.Env.getCtx();\n    // gwu: do not restrict locators by warehouse when in Import Inventory Transactions window \n    var AD_Table_ID = ctx.getContext(this.windowNum, "0|AD_Table_ID", true);\n    // Import Inventory Transactions\n    if ("572" == AD_Table_ID) {\n      return 0;\n    }\n    var only_Warehouse = ctx.getContext(this.windowNum, "M_Warehouse_ID", true);\n    var only_Warehouse_ID = 0;\n    try {\n      if (only_Warehouse != null && only_Warehouse.length > 0) {\n        only_Warehouse_ID = Number(only_Warehouse);\n      }\n    } catch (ex) {\n      // log.Log(Logging.Level.SEVERE, ex.Message);\n    }\n    return only_Warehouse_ID;\n  };\n  VLocator.prototype.getOnlyProductID = function () {\n    var ctx = VIS.Env.getCtx();\n    // gwu: do not restrict locators by product when in Import Inventory Transactions window \n    var AD_Table_ID = ctx.getContext(this.windowNum, "0|AD_Table_ID", true);\n    // Import Inventory Transactions\n    if ("572" == AD_Table_ID) {\n      return 0;\n    }\n    var only_Product = ctx.getContext(this.windowNum, "M_Product_ID", true);\n    var only_Product_ID = 0;\n    try {\n      if (only_Product != null && only_Product.length > 0) {\n        only_Product_ID = Number(only_Product);\n      }\n    } catch (ex) {\n      //log.Log(Logging.Level.SEVERE, ex.Message);\n    }\n    return only_Product_ID;\n  };\n\n  //Function which show form\n  VLocator.prototype.showLocatorForm = function (warehouseId, productId) {\n    var M_Locator_ID = 0;\n    if (this.value != null) {\n      M_Locator_ID = Number(this.value);\n    }\n    this.lookup.setOnlyWarehouseID(warehouseId);\n    this.lookup.setOnlyProductID(productId);\n    var isReturnTrx = "Y".equals(VIS.context.getWindowContext(this.windowNum, "IsReturnTrx"));\n    var isSOTrx = VIS.Env.getCtx().isSOTrx(this.windowNum);\n    var isOnlyOutgoing = (isSOTrx && !isReturnTrx || !isSOTrx && isReturnTrx) && this.columnName == "M_Locator_ID";\n    this.lookup.setOnlyOutgoing(isOnlyOutgoing);\n    this.lookup.refresh();\n\n    //Open locator form\n    self = this;\n    var obj = new VIS.LocatorForm(this.columnName, this.lookup, M_Locator_ID, this.mandatory, warehouseId, this.windowNum);\n    obj.load();\n    obj.showDialog();\n    obj.onClose = function (locator) {\n      if (self.oldValue != locator) {\n        self.setValue(locator);\n        var evt = {\n          newValue: locator,\n          propertyName: self.columnName\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    };\n  };\n  VLocator.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.settingValue = true;\n      this.oldValue = newValue;\n      this.value = newValue;\n      //\tSet comboValue\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.ctrl.val("");\n        this.settingValue = false;\n        return;\n      }\n      if (this.lookup == null) {\n        this.ctrl.val(newValue.toString());\n        this.lastDisplay = newValue.toString();\n        this.settingValue = false;\n        return;\n      }\n      this.lastDisplay = this.lookup.getDisplay(newValue);\n      if (this.lastDisplay.equals("<-1>")) {\n        this.lastDisplay = "";\n        this.oldValue = null;\n        this.value = null;\n      }\n      //console.log(newValue);\n\n      this.value = newValue;\n      this.ctrl.val(this.lastDisplay);\n      this.settingValue = true;\n      //this.setBackground("white");\n    }\n  };\n  VLocator.prototype.getValue = function () {\n    return this.value;\n  };\n  VLocator.prototype.getDisplay = function () {\n    var retValue = "";\n    if (this.lookup == null) retValue = this.value;else retValue = this.lookup.getDisplay(this.value);\n    return retValue;\n  };\n  //END\n\n  //pAttribute control\n  function VPAttribute(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, windowNop, isActivityForm, search, fromDMS, pAttribute, tabNo) {\n    //Variable region\n    /**\tNo Instance Key\t\t\t\t\t*/\n    this.NO_INSTANCE = 0;\n    /**\tCalling Window Info\t*/\n    this.AD_Column_ID = 0;\n    var colName = "M_AttributeSetInstance_ID";\n    var focus = false;\n\n    //For genral attribute variable settings\n    this.C_GenAttributeSet_ID = 0;\n    this.C_GenAttributeSetInstance_ID = 0;\n    this.M_Locator_ID = 0;\n    colName = columnName;\n    this.value = null;\n    this.windowNo = windowNop;\n    this.tabNo = tabNo;\n    //set lookup into current object from pttribute/gattribute lookup\n    this.lookup = lookup;\n    this.C_BPartner_ID = VIS.Env.getCtx().getContextAsInt(this.windowNo, "C_BPartner_ID");\n\n    /**\tLogger\t\t\t*/\n    this.log = VIS.Logging.VLogger.getVLogger("VPAttribute");\n    var src = "vis vis-pattribute"; // VIS.Application.contextUrl + "Areas/VIS/Images/base/PAttribute20.png";\n    if (!displayType) {\n      displayType = VIS.DisplayType.PAttribute;\n    }\n\n    //Genral Attribute parameter\n\n    this.isFromActivityForm = isActivityForm;\n    this.isSearch = search;\n    this.isFromDMS = fromDMS;\n    this.isPAttribute = pAttribute;\n    this.canSaveRecord = true;\n\n    //create ui\n    var $ctrl = $(\'<input>\', {\n      type: \'text\',\n      name: columnName\n    });\n    var $btn = $(\'<button class="input-group-text"><i class="\' + src + \'"></i></button>\');\n    var btnCount = 1;\n    var self = this;\n    this.setInstanceIDs = null;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n\n    //read only control\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n\n    // @overridde\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    // get contols button by index \n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btn;\n      }\n    };\n    //show visivility\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btn.show();\n      } else {\n        $btn.hide();\n        $ctrl.hide();\n      }\n    };\n    this.setReadOnly = function (readOnly) {\n      this.isReadOnly = readOnly;\n      $ctrl.prop(\'disabled\', readOnly ? true : false);\n      if (readOnly) {\n        $btn.css("opacity", .7);\n      } else {\n        $btn.css("opacity", 1);\n      }\n      this.setBackground(false);\n    };\n\n    //Open Genral attribute Dialog form\n    function OpenGeneralAttributeDialog(VADMS_AttributeSet_ID, oldValue) {\n      var valueChange = false;\n      var C_GenAttributeSetInstance_IDWin = VIS.Env.getCtx().getContextAsInt(self.windowNo, "C_GenAttributeSetInstance_ID");\n      if (self.isFromActivityForm) {\n        C_GenAttributeSetInstance_IDWin = self.C_GenAttributeSetInstance_ID;\n      }\n      if (C_GenAttributeSetInstance_IDWin == 0) {\n        //txtAttribute.Text = string.Empty;\n      }\n      var obj = new VIS.GenralAttributeForm(C_GenAttributeSetInstance_IDWin, VADMS_AttributeSet_ID, self.windowNo, self.isSearch, self.getCanSaveRecord(), self.isFromDMS);\n      obj.showDialog();\n      obj.onClose = function (mGenAttributeSetInstanceId, name, instanceIDs) {\n        VIS.Env.getCtx().setContext(windowNop, "C_GenAttributeSetInstance_ID", mGenAttributeSetInstanceId);\n        setValueInControl(mGenAttributeSetInstanceId, name);\n        if (instanceIDs != null) self.setInstanceIDs = instanceIDs;\n        self.getControl().val(name);\n        if (self.editingGrid) {\n          // bring back to edit mode(grid view) after value selection\n          setTimeout(function () {\n            self.editingGrid.editField(self.gridPos.recid, self.gridPos.col, mGenAttributeSetInstanceId);\n          }, 500);\n        }\n      };\n    }\n    function setValueInControl(mAttributeSetInstanceId, name) {\n      self.log.finest("Changed M_AttributeSetInstance_ID=" + mAttributeSetInstanceId);\n      if (self.oldValue != mAttributeSetInstanceId) {\n        if (mAttributeSetInstanceId == 0) {\n          self.setValue(null);\n        }\n        self.setValue(mAttributeSetInstanceId);\n        var evt = {\n          newValue: mAttributeSetInstanceId,\n          propertyName: self.colName\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    }\n\n    //Open PAttribute form\n    function OpenPAttributeDialog(oldValue) {\n      var M_AttributeSetInstance_ID = oldValue == null ? 0 : oldValue;\n      var M_Product_ID = VIS.Env.getCtx().getTabRecordContext(windowNop, tabNo, "M_Product_ID");\n      var M_ProductBOM_ID = VIS.context.getTabRecordContext(windowNop, tabNo, "M_ProductBOM_ID");\n      var M_Locator_ID = VIS.Env.getCtx().getContextAsInt(windowNop, "M_Locator_ID");\n      self.log.config("M_Product_ID=" + M_Product_ID + "/" + M_ProductBOM_ID + ",M_AttributeSetInstance_ID=" + M_AttributeSetInstance_ID + ", AD_Column_ID=" + self.AD_Column_ID);\n      var productWindow = self.AD_Column_ID == 8418; //\tHARDCODED\n\n      //\tExclude ability to enter ASI\n      var exclude = true;\n      var changed = false;\n      if (M_ProductBOM_ID != 0)\n        //\tUse BOM Component\n        {\n          M_Product_ID = M_ProductBOM_ID;\n        }\n      if (M_Product_ID != 0) {\n        //call controller of pAttributeForm to get is value should include or exclude\n        $.ajax({\n          url: VIS.Application.contextUrl + "PAttributes/ExcludeEntry",\n          dataType: "json",\n          async: false,\n          data: {\n            productId: M_Product_ID,\n            adColumn: self.AD_Column_ID,\n            windowNo: windowNop\n          },\n          success: function (data) {\n            exclude = data.result;\n          }\n        });\n      }\n      if (!productWindow && (M_Product_ID == 0 || exclude)) {\n        changed = true;\n        M_AttributeSetInstance_ID = 0;\n        setValueInControl(M_AttributeSetInstance_ID);\n\n        // JID_0898: Need to show the Info message when no attribute set is defined on product or having exclude entry for this table.\n        VIS.ADialog.info("VIS_PAttributeNotFound", null, null, null);\n      } else {\n        var obj = new VIS.PAttributesForm(M_AttributeSetInstance_ID, M_Product_ID, M_Locator_ID, self.C_BPartner_ID, productWindow, self.AD_Column_ID, windowNop);\n        if (obj.hasAttribute) {\n          obj.showDialog();\n        }\n        obj.onClose = function (mAttributeSetInstanceId, name, mLocatorId) {\n          this.M_Locator_ID = mLocatorId;\n          setValueInControl(mAttributeSetInstanceId, name);\n          if (self.editingGrid) {\n            // bring back to edit mode(grid view) after value selection\n            setTimeout(function () {\n              self.editingGrid.editField(self.gridPos.recid, self.gridPos.col, mAttributeSetInstanceId);\n            }, 500);\n          }\n        };\n      }\n    }\n    $btn.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (self.isReadOnly) {\n        return;\n      }\n      var oldValue = self.getValue();\n      //Genral Attribute Logic\n      if (!self.isPAttribute) {\n        var genAttributeSetId = 0;\n        genAttributeSetId = VIS.Env.getCtx().getContextAsInt(self.windowNo, "C_GenAttributeSet_ID");\n        if (genAttributeSetId == 0) {\n          genAttributeSetId = self.C_GenAttributeSet_ID;\n          if (genAttributeSetId == 0) {\n            VIS.ADialog.info("NoAttributeSet", null, null, null);\n            return;\n          }\n        }\n        OpenGeneralAttributeDialog(genAttributeSetId, oldValue);\n        return;\n      }\n      //PAttribute logic for open form\n      OpenPAttributeDialog(oldValue);\n    });\n    this.SetC_GenAttributeSet_ID = function (instanceID) {\n      this.C_GenAttributeSet_ID = instanceID;\n    };\n\n    //dispose\n    this.disposeComponent = function () {\n      $btn.off(VIS.Events.onClick);\n      self = null;\n      $ctrl = null;\n      $btn = null;\n      this.getBtn = null;\n      this.setVisible = null;\n      this.value = null;\n      this.lookup = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VPAttribute, IControl);\n\n  /**************************************************************************\r\n    * Set/lookup Value\r\n    * \r\n    * @param value\r\n    *            value\r\n    */\n  VPAttribute.prototype.setValue = function (value) {\n    if (value == null || 0 === value) {\n      this.ctrl.text("");\n      this.value = value;\n    }\n    // The same\n    //if (value === this.value)\n    //    return;\n    this.value = value;\n    this.ctrl.val(this.lookup.getDisplay(value)); // loads value\n  }; // setValue\n\n  VPAttribute.prototype.setField = function (mField) {\n    if (mField != null) {\n      this.windowNo = mField.getWindowNo();\n      this.AD_Column_ID = mField.getAD_Column_ID();\n    }\n    this.mField = mField;\n  };\n\n  /**\r\n   * Get Value\r\n   * \r\n   * @return value\r\n   */\n  VPAttribute.prototype.getValue = function () {\n    return this.value;\n  }; // getValue\n\n  VPAttribute.prototype.genSetInstanceIDs = function () {\n    return this.setInstanceIDs;\n  };\n\n  /**\r\n   * Get Display Value\r\n   * \r\n   * @return info\r\n   */\n  VPAttribute.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  }; // getDisplay\n\n  VPAttribute.prototype.getCanSaveRecord = function () {\n    return this.canSaveRecord;\n  }; // getCanSaveRecord\n\n  VPAttribute.prototype.setCanSaveRecord = function (value) {\n    return this.canSaveRecord = value;\n  };\n\n  //End\n\n  //Account\n  function VAccount(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, windowNo, title) {\n    this.value = null;\n    this.windowNo = windowNo;\n    this.lookup = lookup;\n    this.title = title;\n    var colName = columnName;\n    var src = "vis vis-account"; // VIS.Application.contextUrl + "Areas/VIS/Images/base/Account20.png";\n    if (!displayType) displayType = VIS.DisplayType.PAttribute;\n\n    //create ui\n    var $ctrl = $(\'<input readonly>\', {\n      type: \'text\',\n      name: columnName\n    });\n    var $btn = $(\'<button class="input-group-text"><i class="\' + src + \'" ></i></button>\');\n    var btnCount = 1;\n    var self = this;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n\n    // @overridde\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    // get contols button by index \n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btn;\n      }\n    };\n    //show visivility\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btn.show();\n      } else {\n        $ctrl.hide();\n        $btn.hide();\n      }\n    };\n    this.setReadOnly = function (readOnly) {\n      this.isReadOnly = readOnly;\n      $ctrl.prop(\'disabled\', readOnly ? true : false);\n      if (readOnly) {\n        $btn.css("opacity", .7);\n      } else {\n        $btn.css("opacity", 1);\n      }\n      this.setBackground(false);\n    };\n    $btn.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (self.isReadOnly) {\n        return;\n      }\n      var C_AcctSchema_ID = VIS.Env.getCtx().getContextAsInt(self.windowNo, "C_AcctSchema_ID");\n      var getTbID_s = 0;\n      if (self != null && self.getField() != null && self.getField().vo != null && self.getField().vo.AD_Table_ID != null) {\n        getTbID_s = self.getField().vo.AD_Table_ID;\n      }\n      var obj = new VIS.AccountForm(self.title, self.lookup, C_AcctSchema_ID, getTbID_s);\n\n      //var obj = new VIS.AccountForm(self.title, self.lookup, C_AcctSchema_ID);\n      obj.load();\n      obj.showDialog();\n      obj.onClose = function (location) {\n        if (self.oldValue != location) {\n          self.setValue(location);\n          var evt = {\n            newValue: location,\n            propertyName: colName\n          };\n          self.fireValueChanged(evt);\n          evt = null;\n        }\n      };\n      obj = null;\n    });\n\n    //dispose\n    this.disposeComponent = function () {\n      $btn.off(VIS.Events.onClick);\n      self = null;\n      $ctrl = null;\n      $btn = null;\n      this.getBtn = null;\n      this.setVisible = null;\n      this.value = null;\n      this.lookup = null;\n      this.value = null;\n      this.windowNo = null;\n      this.title = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VAccount, IControl);\n  /*\r\n    * Set/lookup Value\r\n    * \r\n    * @param value\r\n    *            value\r\n    */\n  VAccount.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      this.value = newValue;\n      this.ctrl.val(this.lookup.getDisplay(newValue)); //\tloads value\n    }\n  }; // setValue\n  /**\r\n   * Get Value\r\n   * \r\n   * @return value\r\n   */\n  VAccount.prototype.getValue = function () {\n    return this.value;\n  }; // getValue\n  /**\r\n   * Get Display Value\r\n   * \r\n   * @return info\r\n   */\n  VAccount.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  }; // getDisplay\n  //End\n\n  //VImage\n  function VImage(colName, mandatoryField, isReadOnly, winNo) {\n    this.values = null;\n    this.log = VIS.Logging.VLogger.getVLogger("VImage");\n    var windowNo = winNo;\n    var columnName = colName; // "AD_Image_ID";\n    var $img = $("<img >");\n    var $icon = $("<i>");\n    var $txt = $("<span>").text("-");\n    var $spanIcon = $(\'<a href="javascript:;" class="vis vis-edit vis-img-ctrl-icon">\');\n    var $ctrl = null;\n    var dimension = "Thumb500x375";\n    $ctrl = $(\'<button >\', {\n      type: \'button\',\n      name: columnName,\n      class: \'vis-ev-col-img-ctrl\',\n      tabindex: \'-1\'\n    });\n    $txt.css("color", "blue");\n    $ctrl.append($spanIcon).append($img).append($icon).append($txt);\n    IControl.call(this, $ctrl, VIS.DisplayType.Button, isReadOnly, columnName, mandatoryField);\n    if (isReadOnly) {\n      this.setReadOnly(true);\n      //this.Enabled = false;\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n\n    $spanIcon.on(VIS.Events.onClick, function (e) {\n      //click handler\n      e.stopPropagation();\n      if (!self.isReadOnly) {\n        //self.invokeActionPerformed({ source: self });\n        var obj = new VIS.VImageForm(self.getValue(), $txt.text().trim().length);\n        obj.showDialog();\n        obj.onClose = function (ad_image_Id, change) {\n          //call set only when change call \n          if (change) {\n            self.oldValue = -1;\n            if (self.oldValue != ad_image_Id) {\n              // \'null\' in case of image delete \n              ad_image_Id = ad_image_Id == \'null\' ? null : ad_image_Id;\n              self.setValue(ad_image_Id);\n              var evt = {\n                newValue: ad_image_Id,\n                propertyName: columnName\n              };\n              self.fireValueChanged(evt, true);\n              evt = null;\n            } else {\n              self.refreshImage(ad_image_Id);\n            }\n          }\n        };\n        obj = null;\n      }\n    });\n    this.setText = function (text) {\n      if (text == null) {\n        $txt.text("");\n        $img.image.src = \'\';\n        return;\n      }\n      var pos = text.indexOf(\'&\');\n      if (pos != -1)\n        //\tWe have a nemonic - creates ALT-_\n        {\n          var mnemonic = text.toUpperCase().charAt(pos + 1);\n          if (mnemonic != \' \') {\n            //setMnemonic(mnemonic);\n            text = text.substring(0, pos) + text.substring(pos + 1);\n          }\n        }\n      $txt.text(text);\n    };\n    this.setDimension = function (height, width) {\n      dimension = "Thumb" + width + "x" + height;\n    };\n    this.setIcon = function (resImg, imgPath) {\n      //$img.attr(\'src\', rootPath + img);\n\n      if (imgPath) {\n        $img.attr(\'src\', VIS.Application.contextUrl + "Images/" + dimension + "/" + imgPath + "? timestamp =" + new Date().getTime());\n        $img.show();\n        $icon.hide();\n        $txt.text("");\n        this.ctrl.addClass(\'vis-input-wrap-button-image-add\');\n      } else if (resImg != null) {\n        $img.attr(\'src\', "data:image/jpg;base64," + resImg + "? timestamp =" + new Date().getTime());\n        $img.show();\n        $icon.hide();\n        $txt.text("");\n        this.ctrl.addClass(\'vis-input-wrap-button-image-add\');\n      } else {\n        $img.attr(\'src\', "data:image/jpg;base64," + resImg);\n        $img.hide();\n        $txt.text("-");\n        this.ctrl.removeClass(\'vis-input-wrap-button-image-add\');\n      }\n    };\n    this.hideText = function () {\n      $txt.hide();\n    };\n    /**\r\n     * hide edit icon\r\n     * */\n    this.hideEditIcon = function () {\n      $spanIcon.hide();\n    };\n    this.hideEditIcon = function () {\n      $spanIcon.hide();\n    };\n    this.hideEditIcon = function () {\n      $spanIcon.hide();\n    };\n    this.disposeComponent = function () {\n      $ctrl.off(VIS.Events.onClick);\n      $ctrl = null;\n      this.log = null;\n      windowNo = null;\n      $img = null;\n      $txt = null;\n      this.setText = null;\n      this.setIcon = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VImage, IControl); //Inherit\n\n  VImage.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      this.value = newValue;\n      //\tSet comboValue\n      if (newValue == null) {\n        this.setIcon(null);\n        this.value = 0;\n        if (this) {\n          this.ctrl.val(null);\n        }\n        return;\n      }\n      //var neValue = newValue;\n      //  Get/Create Image byte array\n      //var sql = "select * from AD_Image where AD_Image_ID=" + newValue;\n      //var dr = VIS.DB.executeDataReader(sql.toString());\n      //if (dr.read()) {\n      //    var data = dr.getString("BINARYDATA");\n      //    this.setIcon(data);\n      //}\n\n      //By Ajex request\n      ////var localObj = this;\n      ////$.ajax({\n      ////    url: VIS.Application.contextUrl + "VImageForm/GetImageAsByte",\n      ////    dataType: "json",\n      ////    data: {\n      ////        ad_image_id: neValue\n      ////    },\n      ////    success: function (data) {\n      ////        var data = JSON.parse(data);\n      ////        if (data) {\n      ////            localObj.setIcon(data.Bytes, data.Path);\n      ////        }\n      ////        else {\n      ////            localObj.setIcon(null, null);\n      ////        }\n      ////        localObj.ctrl.val(neValue);\n      ////        localObj = null;\n      ////    }\n      ////});\n\n      this.refreshImage(newValue);\n    }\n  };\n  VImage.prototype.refreshImage = function (neValue) {\n    var localObj = this;\n    $.ajax({\n      url: VIS.Application.contextUrl + "VImageForm/GetImageAsByte",\n      dataType: "json",\n      data: {\n        ad_image_id: neValue\n      },\n      success: function (data) {\n        var data = JSON.parse(data);\n        if (data) {\n          localObj.setIcon(data.Bytes, data.Path);\n        } else {\n          localObj.setIcon(null, null);\n        }\n        localObj.ctrl.val(neValue);\n        localObj = null;\n      }\n    });\n  };\n  VImage.prototype.setReadOnly = function (readOnly) {\n    this.isReadOnly = readOnly;\n    if (this.isLink) {\n      this.ctrl.css(\'opacity\', readOnly ? .6 : 1);\n    } else {\n      this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    }\n    this.setBackground(false);\n  };\n  VImage.prototype.getValue = function () {\n    return this.value;\n  };\n  VImage.prototype.getDisplay = function () {\n    return this.value;\n  };\n\n  //End VImage \n\n  //VBinary\n  function VBinary(colName, mandatoryField, isReadOnly, isUpdateable, winNo) {\n    this.values = null;\n    var $txt = $("<span>").text("");\n    var windowNo = winNo;\n    var columnName = colName; // "AD_Image_ID";\n\n    var $ctrl = null;\n    var $ulPopup = null;\n    var SaveTolocalFile = \'SaveTolocalFile\';\n    var LoadIntoDatabase = \'LoadIntoDatabase\';\n    this.data = null;\n    var inputCtrl = $("<input type=\'file\' class=\'file\' name=\'file\'/>");\n    $ctrl = $(\'<button>\', {\n      type: \'button\',\n      name: columnName\n    });\n    $ctrl.append($txt);\n    IControl.call(this, $ctrl, VIS.DisplayType.Button, isReadOnly, columnName, mandatoryField);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n\n    function getPopupList() {\n      var ullst = $("<ul class=\'vis-apanel-rb-ul\'>");\n      ullst.append($("<a id=\'link\' style=\'border-bottom: 1px solid #CCDADE;color: #535353;font-size: 12px;display: block;margin-bottom: 8px;\'  href=\'javascript:void(0)\'>" + VIS.Msg.getMsg("SaveTolocalFile") + "</a>"));\n      // ullst.append($("<li data-action=\'" + SaveTolocalFile + "\'>").text(VIS.Msg.getMsg("SaveTolocalFile")));\n      ullst.append($("<li data-action=\'" + LoadIntoDatabase + "\'>").text(VIS.Msg.getMsg("Open/LoadIntoDatabase")));\n      return ullst;\n    }\n    ;\n    $ulPopup = getPopupList();\n    if ($ulPopup) {\n      $ulPopup.on("click", "LI", function (e) {\n        var action = $(e.target).data("action");\n        if (action == SaveTolocalFile) {\n          // onDownload(self.getValue());\n          //var d = new Date().toISOString().slice(0, 19).replace(/-/g, "");\n          //$("#link").attr("href", self.getValue()).attr("download", "file-" + d + ".log");\n        } else if (action == LoadIntoDatabase) {\n          inputCtrl.trigger(\'click\');\n        }\n      });\n      $ulPopup.on("click", "a", function (e) {\n        if (self.getValue() != null) {\n          var d = new Date().toISOString().slice(0, 19).replace(/-/g, "");\n          var fileData = "data:;base64," + self.getValue();\n          $(this).attr("href", fileData).attr("download", "file-" + d + ".log");\n        }\n      });\n    }\n\n    //Upload File on client side and get byte array from file on client side\n    inputCtrl.change(function () {\n      var file = inputCtrl[0].files[0];\n      var reader = new FileReader();\n      var ary = reader.readAsDataURL(file);\n      reader.onloadend = function () {\n        var base64data = reader.result.split(\',\')[1];\n        if (self.oldValue != base64data) {\n          self.setValue(base64data);\n          var evt = {\n            newValue: base64data,\n            propertyName: columnName\n          };\n          self.fireValueChanged(evt, true);\n          evt = null;\n        }\n      };\n      return;\n\n      //get byte array from server\n      //var xhr = new XMLHttpRequest();\n      //var fd = new FormData();\n      //fd.append("file", file);\n      //xhr.open("POST", VIS.Application.contextUrl + "VImageForm/GetFileByteArray", true);\n      //xhr.send(fd);\n      //xhr.addEventListener("load", function (event) {\n      //    alert("response");\n      //    var dd = event.target.response;\n      //    dd = JSON.parse(dd);\n      //    var newByt = dd.result;\n\n      //    if (self.oldValue != newByt) {\n      //        self.setValue(newByt);\n      //        var evt = { newValue: newByt, propertyName: columnName };\n      //        self.fireValueChanged(evt);\n      //        evt = null;\n      //    }\n      //}, false);\n    });\n    $ctrl.on(VIS.Events.onClick, function (evt) {\n      //click handler\n      if (!self.isReadOnly) {\n        $ctrl.w2overlay($ulPopup.clone(true));\n      }\n      evt.stopPropagation();\n    });\n    this.setText = function (text) {\n      if (text == null) {\n        $txt.text("");\n        return;\n      }\n      var pos = text.indexOf(\'&\');\n      if (pos != -1)\n        //\tWe have a nemonic - creates ALT-_\n        {\n          var mnemonic = text.toUpperCase().charAt(pos + 1);\n          if (mnemonic != \' \') {\n            //setMnemonic(mnemonic);\n            text = text.substring(0, pos) + text.substring(pos + 1);\n          }\n        }\n      $txt.text(text);\n    };\n    this.disposeComponent = function () {\n      $ctrl.off(VIS.Events.onClick);\n      $ctrl = null;\n      this.setText = null;\n      this.values = null;\n      $txt = null;\n      windowNo = null;\n      columnName = null;\n      $ulPopup = null;\n      SaveTolocalFile = null;\n      LoadIntoDatabase = null;\n      this.data = null;\n      inputCtrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VBinary, IControl); //Inherit\n\n  VBinary.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      if (newValue == null) {\n        this.setText("-");\n        this.value = newValue;\n        this.ctrl.val(newValue);\n      } else {\n        var text = "?";\n        if (newValue.length > 0) {\n          var bb = newValue;\n          text = "#" + bb.length;\n        } else {\n          text = newValue.GetType().FullName;\n        }\n        //\tDisplay it\n        this.setText(text != null ? text : "");\n        this.value = newValue;\n        this.ctrl.val(newValue);\n      }\n    }\n  };\n  VBinary.prototype.setReadOnly = function (readOnly) {\n    this.isReadOnly = readOnly;\n    this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    this.setBackground(false);\n  };\n  VBinary.prototype.getValue = function () {\n    return this.value;\n  };\n  VBinary.prototype.getDisplay = function () {\n    return this.value;\n  };\n\n  //End VBinary \n\n  //VURL\n  function VURL(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength) {\n    this.value = null;\n    var src = "vis vis-url"; // VIS.Application.contextUrl + "Areas/VIS/Images/base/Url20.png";\n    var btnCount = 0;\n    //create ui\n    var $ctrl = $(\'<input>\', {\n      type: \'text\',\n      name: columnName,\n      maxlength: fieldLength\n    });\n    var $btnSearch = $(\'<button class="input-group-text"><i class="\' + src + \'" ></i></button>\');\n    btnCount += 1;\n\n    //Set Buttons and [pop up]\n    var self = this;\n    IControl.call(this, $ctrl, VIS.DisplayType.URL, isReadOnly, columnName, isMandatory);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n\n    //provilized function\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    //Get url Button\n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btnSearch;\n      }\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btnSearch.show();\n      } else {\n        $ctrl.hide();\n        $btnSearch.hide();\n      }\n    };\n    $btnSearch.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (self.value == null) {\n        return;\n      } else if (self.isReadOnly) {\n        return;\n      }\n      var urlString = self.value.trim();\n      if (urlString.length > 0) {\n        if (urlString.contains("http://") || urlString.contains("https://")) {\n          ;\n        } else {\n          urlString = "http://" + urlString;\n        }\n        window.open(urlString);\n        return;\n      }\n      VIS.ADialog.warn("URLnotValid", true, null);\n    });\n\n    /* Event */\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      var newVal = $ctrl.val();\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n\n    //  dispose \n    this.disposeComponent = function () {\n      $btnSearch.off(VIS.Events.onClick);\n      $ctrl.off("change");\n      self = null;\n      $ctrl = null;\n      $btnSearch = null;\n      this.getBtn = null;\n      this.setVisible = null;\n      this.value = null;\n      src = null;\n      btnCount = null;\n      this.getBtnCount = null;\n      this.getBtn = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VURL, IControl); //inherit IControl\n\n  VURL.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      this.value = newValue;\n      //\tSet comboValue\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.ctrl.val("");\n        return;\n      }\n      this.value = newValue;\n      this.ctrl.val(newValue);\n      this.ctrl.val(newValue);\n    }\n  };\n  VURL.prototype.getValue = function () {\n    return this.value;\n  };\n  VURL.prototype.getDisplay = function () {\n    return this.ctrl.val();\n  };\n\n  //File\n\n  function VFile(colName, mandatoryField, isReadOnly, isUpdateable, winNo, displayType) {\n    var files = false;\n    if (displayType == displayType.FileName) {\n      files = true;\n    }\n    DialogType = {\n      OpenFile: 0,\n      SaveFile: 1,\n      Custom: 2\n    };\n    SelectionType = {\n      FilesOnly: 0,\n      DirectoryOnly: 1\n    };\n    //Selection Mode\t\t\t\t\t\n    var selectionMode = SelectionType.DirectoryOnly;\n    //Save/Open\t\t\t\t\t\t\n    var dialogType = DialogType.Custom;\n    //Logger\n    this.log = VIS.Logging.VLogger.getVLogger("VFile");\n    var displayType = VIS.DisplayType.FileName;\n    var src = "fa fa-folder-open-o"; //VIS.Application.contextUrl + "Areas/VIS/Images/base/Folder20.png";\n    if (files) {\n      selectionMode = SelectionType.FilesOnly;\n      src = "fa fa-file-text-o"; // VIS.Application.contextUrl + "Areas/VIS/Images/base/File20.png";\n    }\n    var col = colName.toUpperCase();\n    if (col.indexOf("open") != -1 || col.indexOf("load") != -1) {\n      dialogType = DialogType.OpenFile;\n    } else if (col.indexOf("save") != -1) {\n      dialogType = DialogType.SaveFile;\n    }\n    var windowNo = winNo;\n    var columnName = colName;\n    this.value = null;\n    var btnCount = 0;\n    var $ctrl = $(\'<input>\', {\n      type: \'text\',\n      name: columnName\n    });\n    var $btnSearch = $(\'<button class="input-group-text"><i class="\' + src + \'" /></button>\');\n    btnCount += 1;\n    var inputCtrl = $("<input autocomplete=\'off\' type=\'file\' class=\'file\' name=\'file\'/>");\n    $ctrl.append($btnSearch);\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, mandatoryField);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n\n    //provilized function\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n\n    //Get url Button\n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btnSearch;\n      }\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btnSearch.show();\n      } else {\n        $ctrl.hide();\n        $btnSearch.hide();\n      }\n    };\n    var self = this; //self pointer\n\n    $btnSearch.on(VIS.Events.onClick, function (evt) {\n      if (self.isReadOnly) {\n        return;\n      }\n      evt.stopPropagation();\n      if (selectionMode == SelectionType.DirectoryOnly) {\n        //inputCtrl.trigger(\'click\');\n        var obj = new VIS.VisImportFiles(true);\n        obj.onClose = function (names) {\n          self.setValue(names);\n        };\n        obj.show();\n      } else {\n        if (dialogType == DialogType.SaveFile) {\n          if (self.getValue() != null) {\n            var d = new Date().toISOString().slice(0, 19).replace(/-/g, "");\n            var fileData = "data:;base64," + self.getValue();\n            $(this).attr("href", fileData).attr("download", "file-" + d + ".log");\n          }\n        } else {\n          //inputCtrl.trigger(\'click\');\n          var obj = new VIS.VisImportFiles(false);\n          obj.onClose = function (names) {\n            self.setValue(name);\n          };\n          obj.show();\n        }\n      }\n    });\n\n    //Upload File on client side and get byte array from file on client side\n    inputCtrl.on("change", function (e) {\n      e.stopPropagation();\n      var file = $(inputCtrl).val().split(\'\\\\\').pop();\n      if (self.oldValue != file) {\n        self.setValue(file);\n        var evt = {\n          newValue: file,\n          propertyName: columnName\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n    });\n\n    /* Event */\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      var newVal = $ctrl.val();\n      this.value = newVal;\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n        self.setValue(newVal);\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl.off(VIS.Events.onClick);\n      $ctrl.off("change");\n      inputCtrl.off("change");\n      $ctrl = null;\n      windowNo = null;\n      columnName = null;\n      inputCtrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VFile, IControl); //Inherit\n\n  VFile.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      this.value = newValue;\n      this.ctrl.val(newValue);\n    }\n  };\n  VFile.prototype.setReadOnly = function (readOnly) {\n    this.isReadOnly = readOnly;\n    this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    this.setBackground(false);\n  };\n  VFile.prototype.getValue = function () {\n    return this.value;\n  };\n  VFile.prototype.getDisplay = function () {\n    return this.value;\n  };\n\n  //End File\n\n  // Amount Division\n  function VAmtDimension(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, windowNo) {\n    if (!displayType) {\n      displayType = VIS.DisplayType.AmtDimension;\n    }\n    this.lookup = lookup;\n    this.lastDisplay = "";\n    this.settingFocus = false;\n    this.inserting = false;\n    this.settingValue = false;\n    this.value = null;\n    this.defaultValue = "";\n    //create ui\n    var $ctrl = $(\'<input readonly>\', {\n      type: \'text\',\n      name: columnName\n    });\n    var $btnAmtDiv = $(\'<button class="input-group-text"><i class="vis vis-amtdimension" /></button>\');\n    var btnCount = 1;\n    var self = this;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory); //call base function\n\n    this.format = VIS.DisplayType.GetNumberFormat(VIS.DisplayType.Amount);\n    this.dotFormatter = VIS.Env.isDecimalPoint();\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btnAmtDiv;\n      }\n    };\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n    this.hideButton = function (show) {\n      if (show) {\n        $btnAmtDiv.show();\n      } else {\n        $btnAmtDiv.hide();\n      }\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btnAmtDiv.show();\n      } else {\n        $ctrl.hide();\n        $btnAmtDiv.hide();\n      }\n    };\n    this.setReadOnly = function (readOnly) {\n      //if (!isMandatory) {\n      //    //readOnly = true;\n      //    $ctrl.css("background-color", "#f8f8f8");\n      //}\n      //else if (isMandatory && self.value) {\n      //    //readOnly = true;\n      //    $ctrl.css("background-color", "#f8f8f8");\n      //}\n      //this.isReadOnly = readOnly;\n      //$ctrl.prop(\'disabled\', readOnly ? true : false);\n      //if (readOnly) {\n      //    $btnAmtDiv.css("opacity", .7);\n      //} else {\n      //    $btnAmtDiv.css("opacity", 1);\n      //}\n      this.isReadOnly = readOnly;\n      $ctrl.css("background-color", "#f8f8f8");\n      this.setBackground(readOnly);\n    };\n    this.setReadOnlyTextbox = function (readOnly) {\n      //this.isReadOnly = readOnly;\n      //$ctrl.prop(\'disabled\', readOnly ? true : false);\n      if (readOnly) {\n        $ctrl.attr(\'readonly\', \'readonly\');\n        $ctrl.attr(\'disabled\', \'disabled\');\n        //$btnAmtDiv.css("opacity", .7);\n      } else {\n        $ctrl.removeAttr(\'readonly\');\n        $ctrl.removeAttr(\'disabled\');\n        //$btnAmtDiv.css("opacity", 1);\n      }\n      //this.setBackground(false);\n    };\n    this.getText = function () {\n      return $ctrl.val();\n    };\n    this.setDefaultValue = function (deValue) {\n      this.defaultValue = deValue;\n    };\n\n    ///* Event */\n    //$ctrl.on("change", function (e) {\n    //    e.stopPropagation();\n    //    var newVal = $ctrl.val();\n    //    this.value = newVal;\n    //    if (newVal !== self.oldValue) {\n    //        var evt = { newValue: newVal, propertyName: self.getName() };\n    //        self.fireValueChanged(evt);\n    //        evt = null;\n    //    }\n    //});\n\n    $btnAmtDiv.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      //if (self.isReadOnly) {\n      //    return;\n      //}\n\n      self.actionText();\n      //var obj = new VIS.LocationForm(self.value);\n      //obj.load();\n      //obj.showDialog();\n\n      //alert("Map button [" + self.value + "] => " + self.getName());\n    });\n    this.actionText = function () {\n      if (!self.value) {\n        self.value = 0;\n      }\n      var orgID = VIS.Env.getCtx().getContextAsInt(windowNo, "AD_Org_ID", false);\n      var dValue;\n      if (this.defaultValue) {\n        self.defaultValue = self.defaultValue.replace(/@/g, "").trim().replace(".value", "");\n        dValue = VIS.Env.getCtx().getWindowContext(windowNo, self.defaultValue, false);\n      }\n      self.oldValue = self.value;\n      var obj = new VIS.AmountDivision(self.value, orgID, dValue, self.isReadOnly);\n      obj.onClosing = function (rid) {\n        if (rid > 0) {\n          self.oldValue = 0;\n          // Refresh lookup to get updated uplve\n          self.lookup.refreshAmountDivision(rid);\n          self.setValue(rid);\n          var evt = {\n            newValue: rid,\n            propertyName: self.getColumnName()\n          };\n          self.fireValueChanged(evt);\n          evt = null;\n        }\n      };\n      obj.show();\n      obj = null;\n    };\n\n    //$ctrl.on("keydown", function (event) {\n    //    if (event.keyCode == 13 || event.keyCode == 9) {//will work on press of Tab key OR Enter Key\n    //        self.actionText();\n    //    }\n    //});\n\n    //dispose \n    this.disposeComponent = function () {\n      $btnAmtDiv.off(VIS.Events.onClick);\n      self = null;\n      $ctrl = null;\n      $btnAmtDiv = null;\n      this.setVisible = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VAmtDimension, IControl); //inherit IControl\n\n  VAmtDimension.prototype.setValue = function (newValue, isInserting) {\n    // if (!isInserting && this.oldValue != newValue) {\n    if (this.oldValue != newValue) {\n      this.settingValue = true;\n      this.oldValue = newValue;\n      this.value = newValue;\n\n      //\tSet comboValue\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.ctrl.val("");\n        this.settingValue = false;\n        return;\n      }\n      if (this.lookup == null) {\n        this.ctrl.val(newValue.toString());\n        this.lastDisplay = newValue.toString();\n        this.settingValue = false;\n        return;\n      }\n      this.lastDisplay = this.lookup.getDisplay(newValue);\n      if (this.lastDisplay && this.lastDisplay.equals("<-1>")) {\n        this.lastDisplay = "";\n        this.oldValue = null;\n        this.value = null;\n      }\n      if (this.lastDisplay && this.lastDisplay.indexOf("<") > -1) {\n        this.value = this.lastDisplay;\n      } else {\n        this.value = newValue;\n      }\n      //this.ctrl.val(this.lastDisplay);\n      if (this.lastDisplay) {\n        var _value = this.format.GetFormatedValue(this.lastDisplay);\n        this.ctrl.val(this.format.GetFormatAmount(_value, "init", this.dotFormatter));\n      }\n      this.settingValue = true;\n    }\n    //else if (isInserting) {\n    //    this.lastDisplay = "";\n    //    this.ctrl.val("");\n    //    this.settingValue = false;\n    //    return;\n    //}\n  };\n  VAmtDimension.prototype.getValue = function () {\n    return this.value;\n  };\n  VAmtDimension.prototype.getDisplay = function () {\n    var retValue = "";\n    if (this.lookup == null) retValue = this.value;else retValue = this.lookup.getDisplay(this.value);\n    return retValue;\n  };\n\n  // Product Container\n  function VProductContainer(columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup, windowNo) {\n    if (!displayType) {\n      displayType = VIS.DisplayType.ProductContainer;\n    }\n    // Options to show in context menu....\n    var options = {};\n    this.lookup = lookup;\n    this.lastDisplay = "";\n    this.settingFocus = false;\n    this.inserting = false;\n    this.settingValue = false;\n    this.value = null;\n    this.defaultValue = "";\n    var disabled = false;\n\n    //Show Zoom, Preferences and Clear Option\n    options[VIS.Actions.zoom] = disabled;\n    if (VIS.MRole.getIsShowPreference()) options[VIS.Actions.preference] = true;\n    options[VIS.Actions.remove] = true;\n    var $ulPopup = VIS.AEnv.getContextPopup(options);\n\n    //create ui\n    var $ctrl = $(\'<input>\', {\n      type: \'text\',\n      name: columnName\n    });\n    $ctrl.attr(\'autocomplete\', \'off\');\n    var $btnpContainer = $(\'<button class="input-group-text"><i class="vis vis-pcontainer" /></button>\');\n    //var $btnPop = $(\'<button  tabindex="-1" class="input-group-text"><img tabindex="-1" src="\' + VIS.Application.contextUrl + "Areas/VIS/Images/base/Info20.png" + \'" /></button>\');\n    var $btnPop = $(\'<button   class="input-group-text"><i tabindex="-1" Class="fa fa-ellipsis-v" /></button>\');\n    var btnCount = 1;\n    btnCount += 1;\n    var self = this;\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory); //call base function\n\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    this.getBtn = function (index) {\n      if (index == 0) {\n        return $btnpContainer;\n      }\n      if (index == 1) {\n        //zoom\n        if ($btnPop) return $btnPop;\n      }\n    };\n    this.getBtnCount = function () {\n      return btnCount;\n    };\n    this.hideButton = function (show) {\n      if (show) {\n        $btnpContainer.show();\n        if (this.getBtnCount() > 1) {\n          //zoom\n          if ($btnPop) $btnPop.show();\n        }\n      } else {\n        $btnpContainer.hide();\n        if (this.getBtnCount() > 1) {\n          //zoom\n          if ($btnPop) $btnPop.hide();\n        }\n      }\n    };\n    this.setVisible = function (visible) {\n      this.visible = visible;\n      if (visible) {\n        $ctrl.show();\n        $btnpContainer.show();\n        if (this.getBtnCount() > 1) {\n          //zoom\n          if ($btnPop) $btnPop.show();\n        }\n      } else {\n        $ctrl.hide();\n        $btnpContainer.hide();\n        if (this.getBtnCount() > 1) {\n          //zoom\n          if ($btnPop) $btnPop.hide();\n        }\n      }\n    };\n    this.setReadOnly = function (readOnly) {\n      this.isReadOnly = readOnly;\n      $ctrl.prop(\'disabled\', readOnly ? true : false);\n      if (readOnly) {\n        $btnpContainer.css("opacity", .7);\n      } else {\n        $btnpContainer.css("opacity", 1);\n      }\n      this.setBackground(false);\n    };\n    if ($btnPop) {\n      $btnPop.on(VIS.Events.onClick, function (e) {\n        $btnPop.w2overlay($ulPopup.clone(true));\n        e.stopPropagation();\n      });\n    }\n\n    // Handle Click when click on Context Menu\n    if ($ulPopup) {\n      $ulPopup.on("click", "LI", function (e) {\n        var action = $(e.target).data("action");\n        if (action == VIS.Actions.preference) {\n          // Show Preferences\n          var obj = new VIS.ValuePreference(self.mField, self.getValue(), self.getDisplay());\n          if (obj != null) {\n            obj.showDialog();\n          }\n          obj = null;\n        } else if (action == VIS.Actions.zoom) {\n          // Zoom\n          zoomAction();\n        }\n        //else if (action == VIS.Actions.addproduct) {// Zoom\n        //    zoomAction();\n        //}\n        else if (action == VIS.Actions.remove) {\n          // Clear\n          if (self.isReadOnly) return;\n          self.setValue(null, false, true);\n        }\n      });\n    }\n    function zoomAction() {\n      if (!self.lookup) return;\n      //\n      var zoomQuery = self.lookup.getZoomQuery();\n      var value = self.getValue();\n      if (value == null) {\n        //   value = selectedItem;\n      }\n      if (value == "") value = null;\n      if (value != null && !isNaN(value)) value = parseInt(value);\n\n      //Create Zoom Query to Zoom to product Container window\n      zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction("M_ProductContainer_ID", VIS.Query.prototype.EQUAL, value);\n      zoomQuery.setRecordCount(1); //\tguess\n      //}\n\n      var AD_Window_ID = 0;\n      if (self.mField.getZoomWindow_ID() > 0) {\n        AD_Window_ID = self.mField.getZoomWindow_ID();\n      } else {\n        AD_Window_ID = self.lookup.getZoomWindow(zoomQuery);\n      }\n      //Open Window\n      VIS.viewManager.startWindow(AD_Window_ID, zoomQuery);\n    }\n    ;\n    this.getText = function () {\n      return $ctrl.val();\n    };\n    this.setDefaultValue = function (deValue) {\n      this.defaultValue = deValue;\n    };\n    $btnpContainer.on(VIS.Events.onClick, function (e) {\n      e.stopPropagation();\n      if (self.isReadOnly) {\n        return;\n      }\n      self.actionText(true);\n    });\n\n    /*\r\n    * Decide if open container dialog or not.\r\n    * If Must Open that means must open dialog.(when user click Icon)\r\n    */\n\n    this.actionText = function (mustOpen) {\n      if (!self.value) {\n        self.value = 0;\n      }\n      var text = $ctrl.val().trim();\n      var validated = VIS.Env.parseContext(VIS.Env.getCtx(), windowNo, self.lookup.getTabNo(), self.lookup.info.validationCode, false, true);\n      if (!text || mustOpen) {\n        self.openForm(0, 0, text, validated);\n      } else {\n        $.ajax({\n          url: baseUrl + \'productContainer/GetProductContainer\',\n          data: {\n            text: text,\n            validation: validated\n          },\n          success: function (result) {\n            result = JSON.parse(result);\n            if (result == "null" || result == null || result == "" || result == 0) {\n              self.openForm(0, 0, text, validated);\n            } else {\n              self.setVal(result);\n            }\n          },\n          error: function () {}\n        });\n      }\n    };\n    $ctrl.on("keydown", function (event) {\n      if (event.keyCode == 13 || event.keyCode == 9) {\n        //will work on press of Tab key OR Enter Key\n        self.actionText(false);\n      }\n    });\n    this.setVal = function (rid) {\n      self.oldValue = 0;\n      self.setValue(rid);\n      var evt = {\n        newValue: rid,\n        propertyName: self.getColumnName()\n      };\n      self.fireValueChanged(evt, true);\n      evt = null;\n    };\n    this.openForm = function (warehouseID, mLocator, text, validation) {\n      self.oldValue = self.value;\n      var obj = new VIS.productContainerTree(warehouseID, mLocator, text, validation);\n      if (obj != null) {\n        obj.showDialog();\n        obj.onClosing = function (containerId) {\n          self.setVal(containerId);\n        };\n      }\n      obj = null;\n    };\n\n    //dispose \n    this.disposeComponent = function () {\n      $btnpContainer.off(VIS.Events.onClick);\n      self = null;\n      $ctrl = null;\n      $btnpContainer = null;\n      this.setVisible = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VProductContainer, IControl); //inherit IControl\n\n  VProductContainer.prototype.setValue = function (newValue, isInserting, fire) {\n    // if (!isInserting && this.oldValue != newValue) {\n    if (this.oldValue != newValue) {\n      this.settingValue = true;\n      this.oldValue = newValue;\n      this.value = newValue;\n\n      //\tSet comboValue\n      if (newValue == null) {\n        this.lastDisplay = "";\n        this.ctrl.val("");\n        this.settingValue = false;\n        if (fire) {\n          var evt = {\n            newValue: newValue,\n            propertyName: this.getName()\n          };\n          this.fireValueChanged(evt);\n          evt = null;\n        }\n        return;\n      }\n      if (this.lookup == null) {\n        this.ctrl.val(newValue.toString());\n        this.lastDisplay = newValue.toString();\n        this.settingValue = false;\n        return;\n      }\n      this.lastDisplay = this.lookup.getDisplay(newValue);\n      if (this.lastDisplay.equals("<-1>")) {\n        this.lastDisplay = "";\n        this.oldValue = null;\n        this.value = null;\n      }\n      if (this.lastDisplay.indexOf("<") > -1) {\n        this.value = this.lastDisplay;\n      } else {\n        this.value = newValue;\n      }\n      //this.ctrl.val(this.lastDisplay);\n      this.ctrl.val(VIS.Utility.decodeText(this.lastDisplay));\n      this.settingValue = true;\n    }\n    //else if (isInserting) {\n    //    this.lastDisplay = "";\n    //    this.ctrl.val("");\n    //    this.settingValue = false;\n    //    return;\n    //}\n  };\n  VProductContainer.prototype.getValue = function () {\n    return this.value;\n  };\n  VProductContainer.prototype.getDisplay = function () {\n    var retValue = "";\n    if (this.lookup == null) retValue = this.value;else retValue = this.lookup.getDisplay(this.value);\n    return retValue;\n  };\n\n  /**\r\n   *  VKeyText with Mnemonics interpretation\r\n   *  VKeyText against header panel item key-value pair\r\n   *  @param value  The text to be displayed by the VSpan.\r\n   *  @param name  name of control to bind VSpan with\r\n   */\n  function VKeyText(colSql, windowNo, name, isExe, mField, headerItemID) {\n    this.colSql = colSql;\n    this.windowNo = windowNo;\n    this.cache = {};\n    this.isExe = isExe;\n    this.headerItemID = headerItemID;\n    // this.col = \'\';\n    this.needtoParse = false;\n    this.frmat = null;\n    if (mField && VIS.DisplayType.IsNumeric(mField.getDisplayType())) {\n      this.frmat = VIS.DisplayType.GetNumberFormat(mField.getDisplayType());\n    }\n    this.frmat = null;\n    if (mField && VIS.DisplayType.IsNumeric(mField.getDisplayType())) {\n      this.frmat = VIS.DisplayType.GetNumberFormat(mField.getDisplayType());\n    }\n    if (colSql.contains(\'@\')) {\n      this.needtoParse = true;\n    }\n    var strFor = \' for="\' + name + \'"\';\n    var $ctrl = $(\'<span \' + strFor + \'></span>\');\n    IControl.call(this, $ctrl, VIS.DisplayType.Label, true, "lbl" + name);\n    this.disposeComponent = function () {\n      $ctrl = null;\n      self = null;\n      if (this.frmat) this.frmat.dispose();\n      this.format = null;\n      this.cache = {};\n      this.cache = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VKeyText, IControl); //Inherit\n\n  VKeyText.prototype.setValue = function (newValue, isHTML, records) {\n    var validation = null;\n    var validationData = [];\n    if (this.needtoParse) {\n      if (records && !$.isEmptyObject(records)) {\n        // parse sql query with records \n        validationData = VIS.Env.parseSQLFromRecords(this.colSql, records);\n        for (var i = 0; i < validationData.length > 0; i++) {\n          this.colSql = this.colSql.replace(\'@\' + validationData[i].Key + \'@\', validationData[i].Value);\n        }\n        validation = this.colSql;\n      } else {\n        validationData = VIS.Env.parseContext2(VIS.context, this.windowNo, 0, this.colSql, false, true);\n        validation = VIS.Env.parseContext(VIS.context, this.windowNo, 0, this.colSql, false, true);\n      }\n    } else {\n      validation = this.colSql;\n    }\n    if (!validation || validation.length == 0)\n      //console.log(this.info.keyColumn + ": Loader NOT Validated: " + this.info.validationCode);\n      return;\n    var where = \'-1\';\n    var wIndex = validation.toUpperCase().lastIndexOf(\'WHERE\');\n    if (wIndex > -1) {\n      where = validation.substring(wIndex);\n    }\n    if (this.cache[where]) {\n      // if (this.oldValue != newValue) {\n      //  this.oldValue = newValue;\n      this.ctrl.text(this.cache[where]);\n      if (isHTML) {\n        this.ctrl.html(this.cache[where]);\n      }\n    } else {\n      if (validation.toLowerCase().indexOf("select") == -1) {\n        this.cache[where] = validation;\n        this.ctrl.text(validation);\n        return;\n      }\n      var self = this;\n      $.ajax({\n        type: \'Post\',\n        url: VIS.Application.contextUrl + "Form/GetKeyText",\n        data: {\n          Validation: JSON.stringify(validationData),\n          AD_HeaderItem_ID: self.headerItemID\n        },\n        success: function (data) {\n          var val = JSON.parse(data);\n          if (val || val == 0) {\n            if (self.frmat) val = self.frmat.GetFormatAmount(self.frmat.GetFormatedValue(val), "init", VIS.Env.isDecimalPoint());\n            self.ctrl.text(val);\n          } else self.ctrl.text("");\n          if (!self.isExe) {\n            self.cache[where] = val;\n          }\n        }\n      });\n\n      //executeScalarEn(validation, null, function (val) {\n      //    if (val || val == 0) {\n      //        if (self.frmat)\n      //            val = self.frmat.GetFormatAmount(self.frmat.GetFormatedValue(val), "init", VIS.Env.isDecimalPoint());\n      //        self.ctrl.text(val);\n      //    }\n      //    else\n      //        self.ctrl.text("");\n      //    if (!self.isExe) {\n      //        self.cache[where] = val;\n      //    }\n      //});\n    }\n  };\n  VKeyText.prototype.getValue = function () {\n    if (this.value != null) {\n      return this.ctrl.text().toString();\n    } else {\n      return null;\n    }\n  };\n\n  // VProgressBar\n\n  function VProgressBar(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, controlDisplayType) {\n    var $ctrl = $(\'<div class="vis-progressCtrlWrap"></div>\');\n    var $rangeCtrl = $(\'<input>\', {\n      type: \'range\',\n      step: \'1\',\n      name: columnName,\n      maxlength: fieldLength,\n      \'data-type\': \'int\'\n    });\n    var $oputput = $(\'<output  class="vis-progress-output">\');\n    $ctrl.append($oputput).append($rangeCtrl);\n    IControl.call(this, $ctrl, controlDisplayType, isReadOnly, columnName, isMandatory);\n    this.rangeCtrl = $rangeCtrl;\n    this.oputput = $oputput;\n    $oputput.text(0);\n    this.setText = function (val) {\n      $oputput.text(val);\n    };\n    this.setRange = function (val) {\n      if (val != null) {\n        $rangeCtrl.val(val);\n      } else {\n        $rangeCtrl.val(0);\n      }\n    };\n    this.getRange = function () {\n      return $rangeCtrl.val();\n    };\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    var self = this; //self pointer\n\n    /* Event */\n\n    $oputput.keypress(function (event) {\n      if (event.which < 46 || event.which > 59) {\n        event.preventDefault();\n      }\n      ;\n      if (event.which == 46 && $(this).val().indexOf(\'.\') != -1 || event.which == 44 && $(this).val().indexOf(\',\') != -1) {\n        event.preventDefault();\n      }\n      ;\n    }).on("blur", function () {\n      if ($.isNumeric($rangeCtrl.attr("max")) && Number($rangeCtrl.attr("max")) < Number($(this).text())) {\n        $(this).text($rangeCtrl.attr("max"));\n      }\n      $rangeCtrl.val($(this).text() || 0).change();\n    });\n    $rangeCtrl.on("input", function (e) {\n      e.stopPropagation();\n      var newVal = $rangeCtrl.val();\n      //self.setOutputPosition();\n      $oputput.show();\n      $oputput.text(newVal);\n      //$ctrl.val(newVal);\n    });\n    $rangeCtrl.on("change", function (e) {\n      e.stopPropagation();\n      var newVal = $rangeCtrl.val();\n      //$ctrl.val(newVal);\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n        //self.setOutputPosition();\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl = null;\n      $rangeCtrl = null;\n      this.rangeCtrl = this.$oputput = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VProgressBar, IControl);\n  VProgressBar.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.oldValue = newValue;\n      this.setText(newValue);\n      this.setRange(newValue);\n      //this.setOutputPosition();\n    }\n  };\n  VProgressBar.prototype.getValue = function () {\n    return this.getRange();\n  };\n  VProgressBar.prototype.setMaxValue = function (maxValue) {\n    if ($.isNumeric(maxValue)) {\n      this.rangeCtrl.attr("max", maxValue);\n    } else {\n      this.rangeCtrl.attr("max", 100);\n    }\n  };\n  VProgressBar.prototype.setMinValue = function (minValue) {\n    if ($.isNumeric(minValue)) {\n      this.rangeCtrl.attr("min", minValue);\n    }\n  };\n  VProgressBar.prototype.getDisplay = function () {\n    return this.rangeCtrl.val();\n  };\n  VProgressBar.prototype.getControl = function (parent) {\n    if (parent) {\n      parent.addClass("vis-progressCtrlWrap");\n      parent.append(this.oputput);\n      return this.rangeCtrl;\n    }\n    return this.ctrl;\n  };\n  VProgressBar.prototype.setReadOnly = function (readOnly) {\n    this.isReadOnly = readOnly;\n    this.ctrl.find(\'input\').prop(\'disabled\', readOnly ? true : false);\n    this.ctrl.find(\'output\').attr(\'contenteditable\', readOnly ? false : true);\n    this.setBackground(false);\n  };\n  VProgressBar.prototype.setHtmlStyle = function (style) {\n    if (style && this.dynStyle != style) {\n      if (style.contains(\':\')) {\n        if (!this.dynStyle) this.oldStyle = this.ctrl.find(\'input\').attr(\'style\');\n        this.ctrl.find(\'input\').removeAttr(style).attr(\'style\', style);\n        this.ctrl.find(\'output\').removeAttr(style).attr(\'style\', style);\n      } else {\n        this.ctrl.find(\'input\').addClass(style);\n        this.ctrl.find(\'output\').addClass(style);\n      }\n      this.dynStyle = style;\n    } else if (!style && this.dynStyle) {\n      if (this.dynStyle.contains(\':\')) {\n        this.ctrl.find(\'input\').removeAttr(\'style\');\n        this.ctrl.find(\'output\').removeAttr(\'style\');\n        if (this.oldStyle) {\n          this.ctrl.find(\'input\').attr(\'style\', this.oldStyle);\n          this.ctrl.find(\'output\').attr(\'style\', this.oldStyle);\n        }\n        ;\n      } else {\n        this.ctrl.find(\'input\').removeClass(this.dynStyle);\n        this.ctrl.find(\'output\').removeClass(this.dynStyle);\n      }\n      this.oldStyle = null;\n      this.dynStyle = null;\n    }\n  };\n  //VProgressBar.prototype.setOutputPosition = function () {\n  //    var offset = 30;\n  //    if (this.editingGrid) {\n  //        offset = 0;\n  //    }\n  //    var width = this.ctrl.width();\n  //    var val = this.getValue();\n  //    var min = this.mField.getMinValue() ? this.mField.getMinValue() : 0;\n  //    var max = this.mField.getMaxValue() ? this.mField.getMaxValue() : 100;\n  //    var newPoint = (val - Number(min)) / (Number(max) - Number(min));\n  //    if (newPoint < 0) {\n  //        newPlace = 0;\n  //    }\n  //    else if (newPoint > 1) {\n  //        newPlace = width;\n  //    }\n  //    else {\n  //        newPlace = width * newPoint;\n  //    }\n\n  //    this.getProgressOutput().css({ left: (newPlace / 2) + offset }).text(val);\n\n  //}\n\n  //To implement culture change\n  //1.Control type number to textbox:number text not comma in un english culture\n  //2.implement formate in setValue Globalize.format(newValue, "n0");\n  //3.Change event part formated value Globalize.parseInt(newVal.toString());\n\n  /**************************************************************************\r\n  *\tvisual control for system displaytype text or string\r\n  *\tDetail Constructor\r\n  *  @param columnName column name\r\n  *  @param mandatory mandatory\r\n  *  @param isReadOnly read only\r\n  *  @param isUpdateable updateable\r\n  *  @param displayLength display length\r\n  *  @param fieldLength field length\r\n  *  @param VFormat format\r\n  *  @param ObscureType obscure type\r\n  ***************************************************************************/\n\n  function VTelePhone(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, vFormat, obscureType, isPwdField) {\n    var displayType = VIS.DisplayType.TelePhone;\n    this.obscureType = obscureType;\n    var src = "fa fa-phone";\n    //Init Control\n\n    var $ctrl = $(\'<input>\', {\n      type: \'tel\',\n      name: columnName,\n      maxlength: fieldLength\n    });\n    var $btnSearch = $(\'<button class="input-group-text"><i class="\' + src + \'" /></button>\');\n    // if (!isReadOnly)\n    //   $ctrl.append($btnSearch);\n    var telCtrl = $ctrl;\n    //Call base class\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    this.getBtn = function (index) {\n      if (index == 0) {\n        //this.setReadOnly(true);\n        return $btnSearch;\n      }\n    };\n    this.getBtnCount = function () {\n      if (!this.editingGrid) return 1;\n      return 0;\n    };\n    var self = this; //self pointer\n\n    /* Event */\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      //var newVal = $ctrl.val();\n      var newVal = self.iti ? self.iti.getNumber() : self.ctrl.val();\n      this.value = newVal;\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n      if (obscureType) {\n        self.setReadOnly(true);\n      }\n    });\n    $ctrl.on("keypress", function (evt) {\n      // Only ASCII character in that range allowed\n      var ASCIICode = evt.which ? evt.which : evt.keyCode;\n      if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57)) {\n        if (ASCIICode == 43 && this.value.indexOf(\'+\') < 0) return true; //+ sign only\n        return false;\n      }\n      return true;\n    });\n    $ctrl.on("countrychange", function (e, countryData) {\n      if (!self.settingVal) {\n        //self.iti.setNumber(\'\');\n        //$ctrl.val(\'\');\n        //var res = $ctrl.attr(\'placeholder\').replace(/[0-9]/g, 0);\n        //$ctrl.unmask();\n        // $ctrl.mask(res);\n      }\n    });\n    $ctrl.on("blur", function (e) {\n      // $ctrl.unmask();\n    });\n\n    /* Event */\n    //$ctrl.on("blur", function (e) {\n    //    // e.stopPropagation();\n    //    var newValue = $ctrl.val();\n\n    //    if (self.obscureType && newValue != "" && self.oldValue == newValue) {\n    //        self.ctrl.val(VIS.Env.getObscureValue(self.obscureType, newValue));\n    //        self.setReadOnly(true);\n    //    }\n    //});\n\n    $btnSearch.on("click", function () {\n      //if (self.mField.getIsEditable(true) && !self.editingGrid) {\n      if (!self.editingGrid) {\n        //self.setReadOnly(false, true, true);\n        // $ctrl.val(self.mField.getValue());\n        // $ctrl.focus();\n        if (window.VA048) {\n          var val = self.getValue();\n          if (!val || val == "") return;\n          var numberinfo = {};\n          numberinfo["tonumbers"] = val;\n          numberinfo["username"] = "";\n          numberinfo["userimg"] = "";\n          numberinfo["isconference"] = false;\n          numberinfo["reftableid"] = -1;\n          numberinfo["refrecordid"] = -1;\n          numberinfo["windowno"] = 0;\n          numberinfo["windowid"] = 0;\n          numberinfo["tableid"] = 0;\n          numberinfo["recordid"] = 0;\n          numberinfo["withrecording"] = false;\n          numberinfo["withcall"] = true;\n          VA048.Apps.GetCallingInstance(true, numberinfo, false);\n        } else VIS.ADialog.info("ComModuleNotInstalled");\n\n        //alert(\'val\');\n      }\n    });\n    this.disposeComponent = function () {\n      $ctrl.off("change"); //u bind event\n      $ctrl = null;\n      if (self.iti) self.iti.destroy();\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VTelePhone, IControl); //Inherit from IControl\n\n  VTelePhone.prototype.setReadOnly = function (readOnly, forceWritable) {\n    if (!readOnly && this.obscureType && !forceWritable && (!this.mField.getIsInserting() || this.ctrl.val() != "")) {\n      readOnly = true;\n    }\n    this.isReadOnly = readOnly;\n    this.ctrl.prop(\'disabled\', readOnly ? true : false);\n    this.setBackground(false);\n  };\n\n  /** \r\n   *  set value \r\n   *  @param new value to set\r\n   */\n  VTelePhone.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      //console.log(newValue);\n\n      //if (this.obscureType && (!this.mField.getIsInserting() || this.ctrl.val() != "")) {\n      //    this.ctrl.val(VIS.Env.getObscureValue(this.obscureType, newValue));\n      //    this.setReadOnly(true);\n      //}\n      //else {\n      this.settingVal = true;\n      //else\n      //his.ctrl.val(newValue);\n      if (!newValue) {\n        this.iti ? this.iti.setNumber(\'\') : this.ctrl.val(\'\');\n        this.setCountry();\n      } else {\n        this.iti ? this.iti.setNumber(newValue) : this.ctrl.val(newValue);\n        //var res = this.ctrl.attr(\'placeholder\').replace(/[0-9]/g, 0);\n        //this.ctrl.mask(res);\n      }\n      this.settingVal = false;\n      //}\n\n      this.oldValue = newValue;\n      //this.setBackground("white");\n    }\n  };\n\n  /** \r\n   *  get display text of control\r\n   *  @return text of control\r\n   */\n  VTelePhone.prototype.getDisplay = function () {\n    return this.getValue();\n  };\n  VTelePhone.prototype.getValue = function () {\n    return this.iti ? this.iti.getNumber() : this.ctrl.val(); //ctrl.val();\n  };\n  VTelePhone.prototype.init = function () {\n    this.iti = window.intlTelInput(this.ctrl[0], {\n      initialCountry: "auto",\n      separateDialCode: true,\n      autoPlaceholder: "aggressive",\n      //initialCountry: "in",\n      formatOnDisplay: true,\n      // allowDropdown: false,\n      //customPlaceholder: function (selectedCountryPlaceholder, selectedCountryData) {\n      //    return  selectedCountryPlaceholder;\n      //},\n      geoIpLookup: function (success, failure) {\n        // $.get("https://ipinfo.io", function () { }, "jsonp").always(function (resp) {\n        //   var countryCode = (resp && resp.country) ? resp.country : "us";\n        if (window.geoplugin_countryCode) success(geoplugin_countryCode());else success("IN");\n        // });\n      },\n      utilsScript: baseUrl + "Areas/ViennaBase/Scripts/tel_Input/utils.js?1638200991544"\n    });\n  };\n  VTelePhone.prototype.getControl = function (parent) {\n    if (parent) {\n      if (!this.isMasked) {\n        this.ctrl.mask("Z0000000000000000", {\n          translation: {\n            \'0\': {\n              pattern: /\\d/\n            },\n            \'9\': {\n              pattern: /\\d/,\n              optional: true\n            },\n            \'Z\': {\n              pattern: /[+]/,\n              optional: true\n            }\n          }\n        });\n        this.isMasked = true;\n      }\n      return this.ctrl;\n      //return this.ctrl;\n    }\n    return this.ctrl;\n  };\n  VTelePhone.prototype.setCountry = function () {\n    if (this.iti) {\n      if (window.geoplugin_countryCode) this.iti.setCountry(geoplugin_countryCode());else this.iti.setCountry(\'IN\');\n    }\n  };\n  VTelePhone.prototype.getSelectedCountryData = function () {\n    if (this.iti) return this.iti.getSelectedCountryData();\n    return {\n      \'dialCode\': \'+91\',\n      \'iso2\': \'en\'\n    };\n  };\n  VTelePhone.prototype.detach = function () {\n    this.prnt.detach();\n  };\n  //END VTelephone\n\n  //start color\n  function VColor(columnName, isMandatory, isReadOnly, isUpdateable, displayLength, fieldLength, vFormat, obscureType, isPwdField) {\n    var displayType = VIS.DisplayType.Color;\n    this.obscureType = obscureType;\n    var src = "fa fa-phone";\n    //Init Control\n\n    var $ctrl = $(\'<input>\', {\n      type: \'color\',\n      name: columnName,\n      maxlength: fieldLength\n    });\n    var $btnSearch = $(\'<button class="input-group-text"><i class="\' + src + \'" /></button>\');\n    // if (!isReadOnly)\n    //   $ctrl.append($btnSearch);\n    var telCtrl = $ctrl;\n    //Call base class\n    IControl.call(this, $ctrl, displayType, isReadOnly, columnName, isMandatory);\n    if (isReadOnly || !isUpdateable) {\n      this.setReadOnly(true);\n    } else {\n      this.setReadOnly(false);\n    }\n    this.getBtn = function (index) {\n      if (index == 0) {\n        //this.setReadOnly(true);\n        return $btnSearch;\n      }\n    };\n    this.getBtnCount = function () {\n      //if (!this.editingGrid)\n      //    return 1;\n      return 0;\n    };\n    var self = this; //self pointer\n\n    /* Event */\n    $ctrl.on("change", function (e) {\n      e.stopPropagation();\n      //var newVal = $ctrl.val();\n      var newVal = self.ctrl.val();\n      this.value = newVal;\n      if (newVal !== self.oldValue) {\n        var evt = {\n          newValue: newVal,\n          propertyName: self.getName()\n        };\n        self.fireValueChanged(evt);\n        evt = null;\n      }\n      if (obscureType) {\n        self.setReadOnly(true);\n      }\n    });\n    $ctrl.on("blur", function (e) {\n      // $ctrl.unmask();\n    });\n    $btnSearch.on("click", function () {});\n    this.disposeComponent = function () {\n      $ctrl.off("change"); //u bind event\n      $ctrl = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.Utility.inheritPrototype(VColor, IControl); //Inherit from IControl\n\n  VColor.prototype.setValue = function (newValue) {\n    if (this.oldValue != newValue) {\n      this.ctrl.val(newValue);\n      this.oldValue = newValue;\n    }\n  };\n\n  //end color \n\n  /* NameSpace */\n  VIS.Controls.IControl = IControl;\n  VIS.Controls.VTextBox = VTextBox;\n  VIS.Controls.VLabel = VLabel;\n  VIS.Controls.VButton = VButton;\n  VIS.Controls.VCheckBox = VCheckBox;\n  VIS.Controls.VComboBox = VComboBox;\n  VIS.Controls.VTextBoxButton = VTextBoxButton;\n  VIS.Controls.VTextArea = VTextArea;\n  VIS.Controls.VAmountTextBox = VAmountTextBox;\n  VIS.Controls.VNumTextBox = VNumTextBox;\n  VIS.Controls.VLocation = VLocation;\n  VIS.Controls.VDate = VDate;\n  VIS.Controls.VLocator = VLocator;\n  VIS.Controls.VAccount = VAccount;\n  VIS.Controls.VPAttribute = VPAttribute;\n  VIS.Controls.VImage = VImage;\n  VIS.Controls.VBinary = VBinary;\n  VIS.Controls.VFile = VFile;\n  VIS.Controls.VAmtDimension = VAmtDimension;\n  VIS.Controls.VProductContainer = VProductContainer;\n  VIS.Controls.VKeyText = VKeyText;\n  VIS.Controls.VProgressBar = VProgressBar;\n  VIS.Controls.VSpan = VSpan;\n  VIS.Controls.VTelePhone = VTelePhone;\n  VIS.Controls.VColor = VColor;\n  VIS.Controls.VURL = VURL;\n  /* END */\n\n  /**\r\n  * global instance for telephone control \r\n  * used by grid, header and card view to show formatted value\r\n  * */\n  VIS.VTelePhoneInstance = function () {\n    var telePhoneFormatter = null;\n    function init() {\n      if (!telePhoneFormatter) {\n        /*int Default */\n        var tel = new VIS.Controls.VTelePhone("Mobile", false, false, true, 20, 20, "", null, false);\n        var divRoot = $(\'<div>\').append(tel.getControl());\n        tel.init();\n        divRoot.hide();\n        $(\'body\').append(divRoot);\n        telePhoneFormatter = tel;\n      }\n    }\n    ;\n    function getFormatedHtml(val, showPointer) {\n      init();\n      if (!val) return \'\';\n      if (val.indexOf(\'+\') < 0) {\n        telePhoneFormatter.setCountry();\n      }\n      telePhoneFormatter.setValue(val);\n      var sel = telePhoneFormatter.iti.getSelectedCountryData();\n      var fVal = telePhoneFormatter.getDisplay();\n      if (fVal == \'\') {\n        //lazy init\n        if (val.indexOf(\'+\') < 0) {\n          val = \'+\' + sel.dialCode + val;\n        }\n        fVal = val;\n      }\n\n      ////ctrl.iti.setNumber(val);\n      var code = sel.iso2;\n      var htm = \'<div style="display:flex">\' + \'<div class="iti__selected-flag">\' + \'<div class="iti__flag iti__\' + code + \'"></div>\' + \'<div/>\' + \'<div style="margin: 0 6px;\';\n      if (showPointer) {\n        htm += \'cursor: pointer;\';\n      }\n      htm += \'"> \' + fVal + \'</div > \' + \'</div>\';\n      return htm;\n    }\n    ;\n    return {\n      getHtml: getFormatedHtml\n    };\n  }();\n})(jQuery, VIS);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/controls.js?')},"./Areas/VIS/Scripts/app/datacontext.js":()=>{eval(';\n(function (VIS, $) {\n  var baseUrl = VIS.Application.contextUrl;\n  //Window\'s Url\n  var windowUrl = baseUrl + "JsonData/GetGridWindow";\n  var windowInsertOrUpdateUrl = baseUrl + "JsonData/InsertOrUpdateWRecords";\n  var windowDeleteUrl = baseUrl + "JsonData/DeleteWRecords";\n  var windowRecordsUrl = baseUrl + "JsonData/GetWindowRecords";\n  var windowRecordsForTreeNodeUrl = baseUrl + "JsonData/GetWindowRecordsForTreeNode";\n\n  //Form\'s Url\n  var formUrl = baseUrl + "JsonData/GetFormInfo";\n\n  //Process\'s Url\n  var processInfoUrl = baseUrl + "JsonData/GetProcessInfo";\n  var processUrl = baseUrl + "JsonData/Process"; //Try execute Process ,return if process has Parameter\n  var executeProcessUrl = baseUrl + "JsonData/ExecuteProcess"; //Finish Process if has parameters\n\n  var personalLockUrl = baseUrl + "JsonData/UpdateOrInsertPersonalLock";\n\n  //DataSet\'s Url\n  var dataSetUrl = baseUrl + "JsonData/JDataSet";\n  var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n  var cardViewUrl = baseUrl + "JsonData/GetCardViewDetail";\n  var mapViewUrl = baseUrl + "JsonData/GetLocLatLng";\n  var dataContext = function () {\n    //Ctx\n\n    function updateClientCtx(data, callback) {\n      $.ajax({\n        url: baseUrl + "JsonData/UpdateCtx",\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: true,\n        data: JSON.stringify({\n          dCtx: data\n        })\n      }).done(function (json) {\n        if (callback) {\n          callback(json);\n        }\n      });\n    }\n    ;\n    function getCardViewInfo(AD_Window_ID, AD_Tab_ID, AD_CardView_ID, sql, callback) {\n      var data = {\n        AD_Window_ID: AD_Window_ID,\n        AD_Tab_ID: AD_Tab_ID,\n        AD_CardView_ID: AD_CardView_ID,\n        SQL: sql\n      };\n      $.ajax({\n        url: cardViewUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: true,\n        data: JSON.stringify(data)\n      }).done(function (jString) {\n        if (callback) {\n          var cv = null;\n          if (jString) {\n            cv = jString;\n            if (typeof jString === "string") {\n              cv = JSON.parse(jString);\n            }\n          }\n          callback(cv);\n        }\n      });\n    }\n    ;\n    function getLocLatLng(lstLocIds, callback) {\n      var data = {\n        locIds: lstLocIds\n      };\n      $.ajax({\n        url: mapViewUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: true,\n        data: JSON.stringify(data)\n      }).done(function (jString) {\n        if (callback) {\n          var cv = null;\n          if (jString) {\n            cv = jString;\n            if (typeof jString === "string") {\n              cv = JSON.parse(jString);\n            }\n          }\n          callback(cv);\n        }\n      });\n    }\n    ;\n\n    //Windows\n    function getWindowJString(data, callback) {\n      $.ajax({\n        url: windowUrl,\n        type: "GET",\n        datatype: "json",\n        async: true,\n        data: data\n      }).done(function (json) {\n        if (callback) {\n          callback(json);\n        }\n      });\n    }\n    ;\n    function insertOrUpdateWRecord(data) {\n      var result = null;\n      $.ajax({\n        url: windowInsertOrUpdateUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        //return result;\n      });\n      return result;\n    }\n    ;\n    function deleteWRecords(data) {\n      return new Promise(function (resolve, reject) {\n        var result = null;\n        $.ajax({\n          url: windowDeleteUrl,\n          type: "POST",\n          datatype: "json",\n          contentType: "application/json; charset=utf-8",\n          data: JSON.stringify(data)\n        }).done(function (json) {\n          result = json;\n          resolve(result);\n          //return result;\n        });\n        return result;\n      });\n    }\n    ;\n    function getWindowRecords(sqlIn, fields, rowCount, SQL_Count, AD_Table_ID, obscureFields, callback) {\n      var data = {\n        fields: fields,\n        sqlIn: sqlIn,\n        rowCount: rowCount,\n        sqlCount: SQL_Count,\n        AD_Table_ID: AD_Table_ID,\n        obscureFields: obscureFields\n      };\n      $.ajax({\n        url: windowRecordsUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: true,\n        data: JSON.stringify(data)\n      }).done(function (jString) {\n        if (callback) {\n          var retObj = JSON.parse(jString);\n          var dataSet = null;\n          var lookupDirect = null;\n          var cardViewData = null;\n          if (retObj) {\n            dataSet = new VIS.DB.DataSet().toJson(retObj.Tables);\n            lookupDirect = retObj.LookupDirect;\n            cardViewData = retObj.CardViewTpl;\n          }\n          callback(dataSet, lookupDirect, cardViewData);\n        }\n      });\n    }\n    ;\n    function getWindowRecordsForTreeNode(sqlIn, fields, rowCount, SQL_Count, AD_Table_ID, treeID, treeNode_ID, callback) {\n      var data = {\n        fields: fields,\n        sqlIn: sqlIn,\n        rowCount: rowCount,\n        sqlCount: SQL_Count,\n        AD_Table_ID: AD_Table_ID,\n        treeID: treeID,\n        treeNodeID: treeNode_ID\n      };\n      $.ajax({\n        url: windowRecordsForTreeNodeUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: true,\n        data: JSON.stringify(data)\n      }).done(function (jString) {\n        if (callback) {\n          var dataSet = null;\n          if (jString) dataSet = new VIS.DB.DataSet().toJson(jString);\n          callback(dataSet);\n        }\n      });\n    }\n    ;\n    function getWindowRecord(sql, fields, obscureFields) {\n      var result = null;\n      $.ajax({\n        url: baseUrl + "JsonData/GetWindowRecord",\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify({\n          sql: sql,\n          fields: fields,\n          obscureFields: obscureFields\n        })\n      }).done(function (jString) {\n        if (jString) result = new VIS.DB.DataReader().toJson(jString);\n      });\n      return result;\n    }\n    function updateInsertLocks(AD_User_ID, AD_Table_ID, Record_ID, locked) {\n      var result = null;\n      var data = {\n        AD_User_ID: AD_User_ID,\n        AD_Table_ID: AD_Table_ID,\n        Record_ID: Record_ID,\n        locked: locked\n      };\n      $.ajax({\n        url: personalLockUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        //return result;\n      });\n      return result;\n    }\n    ;\n    function getJSONRecord(actionUrl, fields) {\n      var result = null;\n      if (actionUrl.indexOf(VIS.Application.contextUrl) == -1) actionUrl = VIS.Application.contextUrl + actionUrl;\n      var inputData = fields;\n      if (typeof fields === \'object\' && fields !== null && !Array.isArray(fields)) {} else {\n        inputData = {\n          fields: fields\n        };\n      }\n      $.ajax({\n        url: actionUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: false,\n        data: JSON.stringify(inputData)\n      }).done(function (jString) {\n        if (jString) result = JSON.parse(jString);\n      }).fail(function (jqXHR, textStatus, et) {\n        alert(et);\n      });\n      return result;\n    }\n    ;\n\n    //Form\n    function getFormDataJString(data, callback) {\n      $.ajax({\n        url: formUrl,\n        type: "GET",\n        datatype: "json",\n        async: true,\n        data: data\n      }).done(function (json) {\n        if (callback) {\n          callback(json);\n        }\n      });\n    }\n    ;\n\n    //process\n    function getProcessInfoJString(data, callback) {\n      $.ajax({\n        url: processInfoUrl,\n        type: "GET",\n        datatype: "json",\n        async: true,\n        data: data\n      }).done(function (json) {\n        if (callback) {\n          callback(json);\n        }\n      });\n    }\n    ;\n    // updated by vinay for ftpt coa work\n    function process(data, callback) {\n      var asyn = callback ? true : false;\n      var jRet = null;\n      $.ajax({\n        url: processUrl,\n        type: "POST",\n        datatype: "json",\n        async: asyn,\n        data: data\n      }).done(function (json) {\n        jRet = json;\n        if (callback) {\n          callback(json);\n        }\n      });\n      return jRet;\n    }\n    ;\n    function processAsyncFalse(data, callback) {\n      $.ajax({\n        url: processUrl,\n        type: "GET",\n        datatype: "json",\n        async: false,\n        data: data\n      }).done(function (json) {\n        if (callback) {\n          callback(json);\n        }\n      });\n    }\n    ;\n    // updated by vinay for frpt coa work\n    function executeProcess(data, callback) {\n      var asyn = callback ? true : false;\n      var jRet = null;\n      $.ajax({\n        url: executeProcessUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: asyn,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        jRet = json;\n        if (callback) {\n          callback(json);\n        }\n      });\n      return jRet;\n    }\n    ;\n\n    //DataSet String\n    //function getDataSetJString(data, async, callback) {\n    //    var result = null;\n\n    //    $.ajax({\n    //        url: dataSetUrl,\n    //        type: "POST",\n    //        datatype: "json",\n    //        contentType: "application/json; charset=utf-8",\n    //        async: async,\n    //        data: JSON.stringify(data)\n    //    }).done(function (json) {\n    //        result = json;\n    //        if (callback) {\n    //            callback(json);\n    //        }\n    //        //return result;\n    //    });\n    //    return result;\n    //};\n\n    /* Execute Non Query */\n\n    //function executeQuery(data, async, callback) {\n    //    var result = null;\n\n    //    $.ajax({\n    //        url: nonQueryUrl + \'y\',\n    //        type: "POST",\n    //        datatype: "json",\n    //        contentType: "application/json; charset=utf-8",\n    //        async: async,\n    //        data: JSON.stringify(data)\n    //    }).done(function (json) {\n    //        result = json;\n    //        if (callback) {\n    //            callback(json);\n    //        }\n    //    });\n    //    return result;\n    //};\n\n    //function executeQueries(data, async, callback) {\n    //    var result = null;\n\n    //    $.ajax({\n    //        url: nonQueryUrl + \'ies\',\n    //        type: "POST",\n    //        datatype: "json",\n    //        contentType: "application/json; charset=utf-8",\n    //        async: async,\n    //        data: JSON.stringify(data)\n    //    }).done(function (json) {\n    //        result = json;\n    //        if (callback) {\n    //            callback(json);\n    //        }\n    //    });\n    //    return result;\n    //};\n\n    function getJSONData(actionUrl, data, callback) {\n      var asyc = callback ? true : false;\n      var result = null;\n      $.ajax({\n        url: actionUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: asyc,\n        data: JSON.stringify(data)\n      }).done(function (jString) {\n        if (jString) {\n          result = jString;\n          if (typeof jString === "string") {\n            result = JSON.parse(jString);\n          }\n        }\n        if (asyc) {\n          callback(result);\n        }\n      });\n      return result;\n    }\n    ;\n    function postJSONData(actionUrl, data, callback) {\n      var asyc = callback ? true : false;\n      var result = null;\n      $.ajax({\n        url: actionUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: asyc,\n        data: JSON.stringify(data)\n      }).done(function (jString) {\n        if (jString) {\n          result = jString;\n          if (typeof jString === "string") {\n            result = JSON.parse(jString);\n          }\n        }\n        if (asyc) {\n          callback(result);\n        }\n      });\n      return result;\n    }\n    ;\n    function getChatRecords(data, callback) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \'Chat/LoadChat\',\n        data: data,\n        type: \'GET\',\n        cache: false,\n        datatype: \'Json\',\n        success: function (json) {\n          if (callback) {\n            callback(json);\n          }\n        }\n      });\n    }\n    ;\n    function saveChat(prop) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \'Chat/SaveChat\',\n        type: \'POST\',\n        dataType: \'Json\',\n        data: prop,\n        success: function (data) {\n          if (data) {\n            console.log("Chat Saved");\n          } else console.log("Chat Not Saved");\n        },\n        error: function (data) {\n          console.log("Chat Not Saved");\n        }\n      });\n    }\n    ;\n    function getTreeAsString(data, callback) {\n      var result = null;\n      var async = callback ? true : false;\n      $.ajax({\n        url: baseUrl + "Tree/GetTreeAsString",\n        async: async,\n        data: data\n      }).done(function (str) {\n        result = str;\n        if (callback) {\n          callback(str);\n        }\n      });\n      return result;\n    }\n    ;\n    function subscribeUnsubscribeRecords(CM_SubScribedID, AD_Window_ID, Record_ID, AD_Table_ID, reloadSubscribe) {\n      var url;\n      var data;\n      if (CM_SubScribedID == 0) {\n        url = VIS.Application.contextUrl + \'Subscribe/Subscribe\';\n        data = {\n          AD_Window_ID: AD_Window_ID,\n          Record_ID: Record_ID,\n          AD_Table_ID: AD_Table_ID\n        };\n      } else {\n        url = VIS.Application.contextUrl + \'Subscribe/UnSubscribe\';\n        data = {\n          AD_Window_ID: AD_Window_ID,\n          Record_ID: Record_ID,\n          AD_Table_ID: AD_Table_ID\n        };\n      }\n      $.ajax({\n        url: url,\n        type: \'GET\',\n        dataType: \'Json\',\n        data: data,\n        success: function (result) {\n          if (result == 0) {\n            if (CM_SubScribedID == 0) {\n              //VIS.ADialog.error(VIS.Msg.getMsg("SubscriptionFailed"));\n              VIS.ADialog.error("SubscriptionFailed");\n            } else {\n              //VIS.ADialog.error(VIS.Msg.getMsg("UnSubscriptionFailed"));\n              VIS.ADialog.error("UnSubscriptionFailed");\n            }\n          } else if (result == 2) {\n            //VIS.ADialog.info(VIS.Msg.getMsg("AlreadyUnsubscribed"));\n            VIS.ADialog.info("AlreadyUnsubscribed");\n          }\n          reloadSubscribe();\n        },\n        error: function (r) {\n          VIS.ADialog.error(VIS.Msg.getMsg("Error") + r.statusText);\n        }\n      });\n    }\n    ;\n\n    //object\n    var dc = {\n      insertOrUpdateWRecord: insertOrUpdateWRecord,\n      getWindowJString: getWindowJString,\n      deleteWRecords: deleteWRecords,\n      getWindowRecords: getWindowRecords,\n      getWindowRecordsForTreeNode: getWindowRecordsForTreeNode,\n      getWindowRecord: getWindowRecord,\n      updateInsertLocks: updateInsertLocks,\n      //getDataSetJString: getDataSetJString,\n      getFormDataString: getFormDataJString,\n      getProcessDataString: getProcessInfoJString,\n      process: process,\n      processAsyncFalse: processAsyncFalse,\n      executeProcess: executeProcess,\n      updateClientCtx: updateClientCtx,\n      //executeQueries: executeQueries,\n      //executeQuery: executeQuery,\n      getJSONRecord: getJSONRecord,\n      getJSONData: getJSONData,\n      subscribeUnsubscribeRecords: subscribeUnsubscribeRecords,\n      getChatRecords: getChatRecords,\n      saveChat: saveChat,\n      getTreeAsString: getTreeAsString,\n      getCardViewInfo: getCardViewInfo,\n      postJSONData: postJSONData\n    };\n    return dc;\n  }();\n  VIS.dataContext = dataContext;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/datacontext.js?')},"./Areas/VIS/Scripts/app/desktopmgr.js":()=>{eval(";\n(function (VIS) {\n  // scope\n\n  /* main UI manager \r\n     - manage window desktop like look\r\n     - manage home and other container \r\n     - manage menu and taskbar \r\n     - bind and handle events of menu and taskbar etc\r\n     BG:234\r\n  */\n\n  function desktopMgr() {\n    var searchSelectItem = null; // menu's search current item\n    var currentActiveView = null; //active view\n    var dynamicViewCache = {}; // all opened views\n    var viewsZIndexCache = []; // Z Index of view\n    var isDataListSupported = false; // Modernizr.input.list; // Browser support Datalist or Not\n    //New\n    var $home = $(\"#vis_home\"); // Home Div\n    var $section = $('#vis_mainSection'); //Outer main Area\n    var $mainConatiner = $(\"#vis_mainConatiner\"); //central-right main container has  [home page] and all opened views...\n    var $shortcutUL = $(\"#vis_taskbar\"); // [dynamic shortcut]\n\n    var $vis_appMenu = $(\"#vis_appMenu\"); // app menu\n    var $vis_mainMenu = $(\"#vis_mainMenu\"); // \n    var $vis_closeMenu = $(\"#vis_closeMenu\"); // menu close button\n    var $vis_CloudDaysLeft = $('#vis_cloud_daysleft');\n    var $vis_menuSearch = $('#vis_menuSearch'); //Search Box\n    var $menuTree = $('#vis_divTree'); //tree div\n    var $menuOverlay = $(\"#vis_menuOverlay\"); // Menu Overlay div\n    var $vIcon = $(\".vis-app-footer-c-r\");\n    var $mainNavigationDiv = null;\n    var curSelTaskBarItem = null; //Current active TaskBar item\n\n    // button for opening calling interface  \n    //var $vis_appCall = $(\"#vis_appCall\");\n\n    /* main viewable area \r\n    */\n    function getMainConatiner() {\n      return $mainConatiner;\n    }\n    ;\n\n    /* task bar  list\r\n    */\n    function getShortcutUL() {\n      return $shortcutUL;\n    }\n    ;\n\n    /*\r\n    * layout and events binding\r\n    */\n    function bindEvents() {\n      $vIcon.on('click', function () {\n        VIS.UserSession.show();\n      });\n      $menuOverlay.on(VIS.Events.onTouchStartOrClick, function (event) {\n        event.preventDefault();\n        hideMenu(); //Hide start menu\n      });\n\n      // menu tree click\n      var time = Date.now();\n      $menuTree.on(\"click\", function (event) {\n        menuItemClick(event);\n      });\n      $menuTree.on(\"keyDown\", function (event) {\n        if (event.which == 13) {\n          menuItemClick(event);\n        }\n      });\n      $($menuTree.find('.vis-navLeftWrap a')[0]).trigger(\"click\");\n      function menuItemClick(event) {\n        var $target = $(event.target);\n        if ($target.hasClass('fa fa-arrow-left')) {\n          $target = $target.parent();\n        }\n        var $par = $target.parent();\n\n        // If modile menu is opened and user clicks on back button\n        if ($target.hasClass('vis-menuitm-backbtn')) {\n          $target.closest('ul').css('display', 'none');\n          ;\n          $vis_mainMenu.find('.vismenu-parent').show();\n          $menuTree.find('.vismenu-selectedMbTab').removeClass('vismenu-selectedMbTab');\n\n          //Show All items of main menu\n          $menuTree.find('[data-val=\"' + $par.data('ulid') + '\"]').siblings().show();\n          $menuTree.find('[data-val=\"' + $par.data('ulid') + '\"]').show();\n\n          //hide all submenus\n          $menuTree.find('ul:not(.vismenu-parent)').hide();\n          $menuTree.find('li:not(.vis-hasSubMenu)').hide();\n          if (menuFilterMgr) menuFilterMgr.setIsMenuHeaderClicked(false);\n        }\n        // If user clicks on any item in mobile menu\n        else if (event.target.nodeName === \"LABEL\" && $par.data(\"con\") == \"Y\") {\n          var pID = $par.data(\"val\");\n          var currentFilter;\n          if (!menuFilterMgr) return;\n          // if any filter is applied, then on navigation on main menu, that filter must be applied.\n          currentFilter = menuFilterMgr.getFilterValue();\n          menuFilterMgr.setIsMenuHeaderClicked(false);\n          var selectedTab = $menuTree.find('[data-ulid=\"' + pID + '\"]');\n          selectedTab.css('display', 'flex').addClass('vismenu-selectedMbTab');\n          selectedTab.find('ul').css('display', 'block');\n          selectedTab.find('li').hide();\n          selectedTab.find('.vis-subNavFirstElement').show();\n          selectedTab.find('.vis-menu-innerFolders').show();\n          selectedTab.find('.fa-minus').removeClass('fa-minus').addClass('fa-plus');\n          if (currentFilter != \"A\") selectedTab.find('li > a[data-action=\"' + currentFilter + '\"]').parent().css('display', 'flex');else selectedTab.find('li:not(.vis-menusubItem)').css('display', 'flex');\n          $vis_mainMenu.find('.vismenu-parent').hide();\n          menuFilterMgr.hideMobileEmptyFolder();\n          if ($par.data(\"summary\") == 'Y') {\n            $par.siblings().hide();\n            $par.hide();\n          } else {\n            $par.parent().siblings().hide();\n            $par.hide();\n          }\n        }\n        //For Web Menu\n        else {\n          if (event.target.nodeName === \"LABEL\") {\n            if (Date.now() - time < 300) {\n              //skip double click\n              event.preventDefault();\n              event.stopPropagation();\n              time = Date.now();\n              return;\n            }\n            time = Date.now();\n          }\n          if (event.target.nodeName === \"A\") {\n            var $target = $(event.target);\n            if ($target.data('isfavbtn') == 'yes') {\n              VIS.FavouriteHelper.showOverlay($target); // show menu item's options\n              return;\n            }\n            //If user clicks summary Item, thenmark it as selected item in main menu and show its child along with\n            if ($target.data('summary') == \"Y\") {\n              var currentFilter;\n              // if any filter is applied, then on navigation on main menu, that filter must be applied.\n\n              if (!menuFilterMgr) {\n                currentFilter = null;\n              } else {\n                currentFilter = menuFilterMgr.getFilterValue();\n              }\n              $vis_mainMenu.find('.vis-navmenuItems-Container').hide();\n              $target.parent().siblings().removeClass(\"vis-navSelected\");\n              $target.parent().addClass(\"vis-navSelected\");\n              var items = $vis_mainMenu.find('#Menu' + $target.data('value'));\n              items.removeAttr('style');\n              items.find('.vis-menuSum-hide').removeClass('vis-menuSum-hide');\n              $menuTree.find('.vismenu-hidden-header').hide();\n              $menuTree.find('.vis-nav-AllItems').hide();\n              $menuTree.find('.fa-minus').removeClass('fa-minus').addClass('fa-plus');\n              if (currentFilter != null) {\n                if (currentFilter != \"A\") {\n                  $menuTree.find('.fa-plus').removeClass('fa-plus').addClass('fa-minus');\n                } else {\n                  $menuTree.find('.fa-minus').removeClass('fa-minus').addClass('fa-plus');\n                }\n              }\n              items.find('.vismenu-subSummaryNode').css('display', 'none');\n              if (menuFilterMgr) menuFilterMgr.hideEmptyFolders();\n              return;\n            }\n            startMenuAction($target.data('action'), $target.data('actionid')); //start action\n            return;\n          }\n          // For Sub menus in Web.\n          if (event.target.nodeName === \"I\") {\n            var $target = $(event.target);\n            if ($target.hasClass('vis-navAccordian')) {\n              //If user clicks on plus sign, then show all items of submenu\n              if ($target.hasClass('fa-plus')) {\n                $target.removeClass('fa-plus').addClass('fa-minus');\n                var id = $target.data('pid');\n                $menuTree.find('[data-ulid=\"' + id + '\"]').show();\n              }\n              //If user clicks on plus sign, then hide all items of submenu\n              else {\n                $target.removeClass('fa-minus').addClass('fa-plus');\n                var id = $target.data('pid');\n                $menuTree.find('[data-ulid=\"' + id + '\"]').hide();\n              }\n              return;\n            }\n            var $target = $target.parent();\n            if ($target.data('isfavbtn') == 'yes') {\n              VIS.FavouriteHelper.showOverlay($target); // show menu item's options\n              return;\n            }\n          }\n        }\n      }\n      ;\n\n      // task bar click event\n      $shortcutUL.on(VIS.Events.onClick, \"LI\", function (event) {\n        event.preventDefault();\n        //if (VIS.context.getContext(\"#DisableMenu\") == 'Y') {\n        //    return;\n        //}\n\n        if (event.target.nodeName === \"I\" || event.target.nodeName === \"SPAN\") {\n          //close\n          closeFrame($(event.currentTarget));\n          return;\n        }\n        var $c = null;\n        if (event.target.nodeName === \"LI\") {\n          $c = $(event.target);\n        } else if (event.target.parentNode.nodeName === \"LI\") {\n          $c = $(event.target.parentNode);\n        }\n        if ($c) {\n          toggleContainer($c[0].id);\n          activateTaskBarItem($c);\n        }\n        $c = null;\n      });\n      $vis_appMenu.on(\"click\", function (event) {\n        //var disableMenu = VIS.context.getContext(\"#DisableMenu\");\n        if (VIS.MRole.getIsDisableMenu()) {\n          return;\n        }\n        event.preventDefault();\n        window.setTimeout(function () {\n          $vis_menuSearch.focus();\n          $('#vis_divTree').on('focus', 'li', function (e) {\n            var $target = $(e.target);\n            $($target).off(\"keydown\");\n            $($target).on(\"keydown\", function (event) {\n              if (event.key == \"Enter\") {\n                if ($target.siblings('label').length > 0) {\n                  $($target.siblings('label')).trigger('click');\n                }\n                if ($target.siblings('a').length > 0) {\n                  $($target.siblings('label')).trigger('a');\n                }\n              }\n            });\n            $($target.siblings('label')).css('border', '1px solid rgba(var(--v-c-primary), 1)');\n          });\n          $('#vis_divTree').on('focusout', 'li', function (e) {\n            var $target = $(e.target);\n            $($target.siblings('label')).css('border', '1px solid white');\n          });\n        }, 2);\n        showMenu(); // show the menu\n      });\n\n      // call/show calling module \n      //$vis_appCall.on(\"click\", function (event) {\n      //    event.preventDefault();\n      //    VA048.Apps.GetCallingInstance(true);\n      //    return false;\n      //});\n\n      /* Main Menu Close */\n      $vis_closeMenu.on(\"click\", function (event) {\n        //alert( \"Handler for .click() called.\" );\n        event.preventDefault();\n        hideMenu();\n      });\n      if (isDataListSupported) {\n        $vis_menuSearch.bind('input', function () {\n          searchAndStartAction($vis_menuSearch.val(), this.list);\n        });\n      }\n      $(window).resize(adjustHeight);\n\n      //this event work for IE,FireFox and Chrome\n      //on other browsers not tested till now\n      window.onbeforeunload = function (e) {\n        $.ajax({\n          url: VIS.Application.contextUrl + \"Account/LogOffHandler\",\n          type: \"POST\"\n        });\n      };\n      refreshSession(1);\n      //window.setInterval(refreshSession, 1000 * 60 * 3); // every 1.5 minutes\n    }\n    ;\n\n    /*\r\n    Refresh session\r\n    */\n\n    //function refreshSession() {\n    //    $.ajax({\n    //        url: VIS.Application.contextUrl + \"Account/Refresh\",\n    //        type: \"POST\"\n    //    });\n    //};\n    function refreshSession(time) {\n      window.setTimeout(function () {\n        $.ajax({\n          url: VIS.Application.contextUrl + \"Account/Refresh\",\n          complete: function () {\n            //window.setTimeout(function () {\n            refreshSession(60 * 3);\n            //}, );\n          }\n        });\n      }, 1000 * time);\n    }\n    ;\n    function getDaysLeft() {\n      //console.log(\"start\");\n      //console.log(VIS.Application.contextFullUrl);\n      if (VIS.Application.contextFullUrl.toLower().indexOf(\"softwareonthecloud.com\") > -1) {\n        $.ajax({\n          url: VIS.Application.contextUrl + \"home/GetSubscriptionDaysLeft/\",\n          success: function (result) {\n            //console.log(\"success\");\n            var data = JSON.parse(result);\n            if (data) {\n              if (data == \"True\" || data == \"\") {\n                // console.log(\"none\");\n                $vis_CloudDaysLeft.css(\"display\", \"none\");\n              } else {\n                // console.log(\"show\");\n                if (data > 1) {\n                  $vis_CloudDaysLeft.text(VIS.Msg.getMsg(\"VIS_TrialPeriod\") + \": \" + data + \" \" + VIS.Msg.getMsg(\"VIS_TrialDaysLeft\"));\n                } else if (data == 1) {\n                  $vis_CloudDaysLeft.text(VIS.Msg.getMsg(\"VIS_TrialPeriod\") + \": \" + data + \" \" + VIS.Msg.getMsg(\"VIS_TrialDayLeft\"));\n                }\n              }\n            }\n          },\n          error: function (e) {\n            // console.log(\"error\");\n            // console.log(e);\n            $vis_CloudDaysLeft.css(\"display\", \"none\");\n          }\n        });\n      } else {\n        //  console.log(\"else\");\n        $vis_CloudDaysLeft.css(\"display\", \"none\");\n      }\n    }\n    ;\n\n    /* \r\n      called when auto complete control fire  closed event\r\n      * check the current search item\r\n       - if found then start menu action \r\n    */\n    function onAutoCompleteClose() {\n      if (searchSelectItem && searchSelectItem.id && searchSelectItem.action) {\n        startMenuAction(searchSelectItem.action, searchSelectItem.id);\n        $vis_menuSearch.val(\"\");\n      }\n      searchSelectItem = null;\n    }\n    ;\n\n    /* Hide app menu\r\n     - clear menu serach text\r\n    */\n    function hideMenu() {\n      menuFilterMgr.closePopup();\n      $vis_mainMenu.attr('style', 'display: none !important');\n      $menuOverlay.fadeOut();\n      $vis_menuSearch.val(\"\");\n      $vis_menuSearch.blur();\n    }\n    ;\n\n    /* show app menu */\n    function showMenu() {\n      $menuOverlay.fadeIn();\n      //if ((VIS.Application.isMobile || VIS.Application.isIOS) && document.documentElement) {\n      $vis_mainMenu.attr('style', 'display: block !important');\n      //}\n      //else {\n      //    $vis_mainMenu.attr('style', 'display: flex !important')\n      //}\n    }\n    ;\n    function toggleMenu() {\n      $menudiv.fadeToggle();\n      $menuOverlay.fadeToggle();\n    }\n    ;\n\n    /*set height of section (main container) to window size */\n    function adjustHeight() {\n      var height = 0;\n      if ((VIS.Application.isMobile || VIS.Application.isIOS) && document.documentElement) {\n        height = document.documentElement.clientHeight;\n      } else {\n        height = window.innerHeight;\n      }\n      ////$section.css('height', height - 22);\n      height = height - 23;\n      if (VIS.Utility.Util.getValueOfInt(VIS.context.ctx[\"#FRAMEWORK_VERSION\"]) < 2) height = height - 43;\n      VIS.Env.setScreenHeight(height);\n      document.documentElement.style.setProperty('--vis-screen-height', height * 0.01 + 'px');\n      if (VIS.viewManager) VIS.viewManager.sizeChanged(height, window.innerwidth);\n      // Resize event for calling interface\n      //if (window.VA048 && VA048.Apps.GetCallingInstance(false))\n      //    VA048.Apps.GetCallingInstance(false).resize();\n    }\n    ;\n\n    /*\r\n       start menu action\r\n       - call view manger start action \r\n       - open corresponding view\r\n       - hide the  menu\r\n    */\n    function startMenuAction(action, id) {\n      VIS.viewManager.startAction(action, id);\n      hideMenu();\n    }\n    ;\n\n    /*\r\n     *  change background color of active Task bar item\r\n     *\r\n     *@param itm\r\n     */\n    function activateTaskBarItem(itm) {\n      if (itm.length > 0) {\n        if (itm[0].id == \"vis_lhome\") return;\n        //select unselect taskbar items\n        if (curSelTaskBarItem) {\n          //curSelTaskBarItem.css('background-color', '');\n          curSelTaskBarItem.removeClass('vis-app-f-selected');\n        }\n        //curSelTaskBarItem = itm.css('background-color', '#D7E3E7');\n        curSelTaskBarItem = itm.addClass('vis-app-f-selected');\n        itm = null;\n      }\n    }\n    ;\n    function activateTaskBarItemUsingID(item) {\n      var nId = item.data('wid');\n      activateTaskBarItem($shortcutUL.find(\"LI#\" + nId));\n    }\n    ;\n\n    /*\r\n       close active view\r\n       and get container by passed name or id to set as current active view\r\n     *\r\n     * @param  name name or id of view\r\n     */\n    function closeFrame(ele) {\n      if (viewsZIndexCache[viewsZIndexCache.length - 1] == ele[0].id) VIS.viewManager.closeFrame(ele[0].id);else {\n        toggleContainer(ele[0].id);\n        activateTaskBarItem(ele);\n      }\n    }\n    ;\n\n    /* \r\n       hide current active view \r\n       and get container by passed name or id to set as current active view\r\n     *\r\n     * @param  name name or id of view\r\n     */\n\n    function toggleContainer(name) {\n      if (currentActiveView) {\n        currentActiveView.hide();\n        ;\n      } else {\n        $mainConatiner.children('div').hide();\n      }\n      if (dynamicViewCache[name]) {\n        //get from view list\n        currentActiveView = dynamicViewCache[name];\n        currentActiveView.css({\n          \"opacity\": 0\n        });\n        currentActiveView.show().animate({\n          opacity: 1\n        }, 500, \"linear\", function () {\n          VIS.viewManager.resize(name); //resize view\n        });\n      }\n      if (viewsZIndexCache.indexOf(name) != -1) {\n        // maintain visible order of view\n        viewsZIndexCache.splice(viewsZIndexCache.indexOf(name), 1);\n      }\n      viewsZIndexCache.push(name);\n      hideMenu(); //hide menu\n    }\n    ;\n\n    /* \r\n       get item from list by matching passed txt\r\n      -get values from mating item and call start action function\r\n    * \r\n    *@param txt matching text\r\n    *@param list options list\r\n    */\n    function searchAndStartAction(txt, list) {\n      if (txt === \"\" || txt.length < 1) return;\n      for (var i = 0; i < list.options.length; i++) {\n        if (list.options[i].value === txt) {\n          //matched\n          var $option = $(list.options[i]);\n          startMenuAction($option.data(\"action\"), $option.data(\"actionid\"));\n          $vis_menuSearch.val(\"\");\n          break;\n        }\n      }\n    }\n    ;\n\n    /* initialize action */\n    function start() {\n      polyFills(); //implement fallback for Datalist and other newer controls \n      menuFilterMgr.init($menuTree, $('#vis_filterMenu'), $vis_mainMenu); //init Menu filter popup Manager\n      authDialog.init($('#vis_home_ca'), $('#vis_userName')); //Init Authorization Dialog\n      setAndLoadHomePage(); //Home Page\n      historyMgr.restoreHistory(); //Restore History of App if any\n      navigationInit();\n      window.addEventListener(\"DOMContentLoaded\", VIS.sseManager.start, false);\n    }\n\n    /*\r\n       add home div in view cache \r\n       - init home Manager js \r\n       - set active view to home page\r\n    */\n    function setAndLoadHomePage() {\n      // if (!VIS.MRole.getIsDisableMenu() || (VIS.MRole.getIsDisableMenu() && VIS.MRole.getHomePage() == 0)) {\n      if (!VIS.MRole.getIsDisableMenu()) {\n        renderHomePage();\n      }\n      if (VIS.MRole.getIsDisableMenu()) {\n        $('.vis-topMenu').hide();\n        $('.vis-menuHeaderLogo').show();\n      }\n      var homePageID = VIS.MRole.getHomePage();\n      if (homePageID && parseInt(homePageID) > 0) {\n        startMenuAction(\"X\", homePageID);\n      }\n    }\n    ;\n    function renderHomePage() {\n      $('#vis_lhome').show();\n      dynamicViewCache['vis_lhome'] = $home;\n      currentActiveView = $home.show();\n      VIS.HomeMgr.initHome($home);\n    }\n\n    /*\r\n     * add new dynamic view to list\r\n     * set set as current active view\r\n     *\r\n     * @param id   unique key if view\r\n     * @param view UI Element  \r\n     * @return view \r\n     */\n    function registerView(id, view) {\n      dynamicViewCache[id] = view;\n      viewsZIndexCache.push(id);\n      toggleContainer(id); //show view\n      return view;\n      //return dynamicViewCache;\n    }\n    ;\n\n    /*\r\n     * remove view from list\r\n     * remove from Task bar div\r\n     * \r\n     * @param id   unique key if view\r\n     */\n    function unRegisterView(id) {\n      $shortcutUL.find(\"LI#\" + id).remove(); //Remove Taskbar Item\n\n      var view = dynamicViewCache[id];\n      dynamicViewCache[id] = null;\n      delete dynamicViewCache[id];\n      viewsZIndexCache.pop();\n      view = null;\n      var nId = \"\";\n      if (viewsZIndexCache.length > 0) {\n        nId = viewsZIndexCache[viewsZIndexCache.length - 1];\n      } else {\n        nId = 'vis_lhome';\n      }\n      toggleContainer(nId); //show view\n      activateTaskBarItem($shortcutUL.find(\"LI#\" + nId));\n      return true;\n    }\n    ;\n\n    /* add item in Taskbar \r\n    * @parm id id of item\r\n    *@param imgpath path of image\r\n    *a@param name name to diplay\r\n    */\n    function addTaskBarItem(id, imgPath, name) {\n      var img = ['<li id=' + id + '>'];\n      if (imgPath) {\n        if (imgPath.indexOf(\".\") > -1) img.push('<img src= \"' + imgPath + '\" />');else img.push('<i class= \"' + imgPath + '\" />');\n      }\n      img.push('<a>' + name + '</a><span style=\"padding:0 7px;\"><i class=\"fa fa-times-circle-o\" /></span></li>');\n      var $li = $(img.join(' '));\n      $shortcutUL.append($li);\n      activateTaskBarItem($li);\n      $li = null;\n    }\n    ;\n\n    /* fallback for datalist */\n    function polyFills() {\n      var datalist,\n        listAttribute,\n        options = [];\n      // If the browser doesn't support the list attribute...\n      if (!isDataListSupported) {\n        // For each text input with a list attribute...\n        // $('input[type=\"text\"][list]').each(function () {\n        // Find the id of the datalist on the input\n        // Using this, find the datalist that corresponds to the input.\n        listAttribute = $vis_menuSearch.attr('list');\n        datalist = $('#' + listAttribute);\n        // If the input has a corresponding datalist element...\n        if (datalist.length > 0) {\n          options = [];\n          // Build up the list of options to pass to the autocomplete widget.\n          datalist.find('option').each(function () {\n            options.push({\n              label: this.value,\n              value: this.value,\n              action: $(this).data(\"action\"),\n              id: $(this).data(\"actionid\")\n            });\n            //<option data-action=\"W\" data-actionid=\"262\" title=\"360\" value=\"Expense Invoice (Alpha)\"></option>\n          });\n          // Transform the input into a jQuery UI autocomplete widget.\n          $vis_menuSearch.autocomplete({\n            source: options,\n            open: function () {\n              window.setTimeout(function () {\n                $('.ui-autocomplete').css('z-index', 1000);\n\n                //if (!VIS.Application.isMobile)\n                //{\n                var menuHeight = window.innerHeight * 60 / 100;\n                $('.ui-autocomplete').css('max-height', menuHeight);\n                //}\n              });\n            },\n            select: function (event, ui) {\n              searchSelectItem = ui.item;\n            },\n            close: function (event, ui) {\n              onAutoCompleteClose();\n            }\n          });\n        }\n        // });\n        // Remove all datalists from the DOM so they do not display.\n        datalist.remove();\n      }\n    }\n    ;\n\n    //Call function \n    adjustHeight(); //set default size \n\n    bindEvents(); // bind events\n\n    getDaysLeft();\n    function openMenu() {\n      $vis_appMenu.trigger('click');\n    }\n    ;\n    function closeMenu() {\n      $vis_closeMenu.trigger('click');\n    }\n    ;\n    function navigationInit() {}\n    ;\n    function getNavigationSection() {\n      if (!$mainNavigationDiv) $mainNavigationDiv = $(\".vis-app-action-nav\");\n      return $mainNavigationDiv;\n    }\n    ;\n    function getMenuDiv() {\n      return $vis_appMenu;\n    }\n\n    /* public object */\n    var desktopMgr = {\n      startMenuAction: startMenuAction,\n      //getMenu: getMenu,\n      getMainConatiner: getMainConatiner,\n      toggleContainer: toggleContainer,\n      registerView: registerView,\n      unRegisterView: unRegisterView,\n      addTaskBarItem: addTaskBarItem,\n      start: start,\n      activateTaskBarItemUsingID: activateTaskBarItemUsingID,\n      openMenu: openMenu,\n      closeMenu: closeMenu,\n      getNavSection: getNavigationSection,\n      getMenuDiv: getMenuDiv\n    };\n    return desktopMgr;\n  }\n  ;\n  VIS.desktopMgr = desktopMgr(); // assigned to VIS\n\n  /************************************************************************/\n\n  /* auhtorization Up Dialog\r\n     - show auth dialog containg loginned used auhtorization detail\r\n     - provide functionality, user can change authorized credential\r\n  */\n  var authDialog = function () {\n    var form, cmbRole, hidRoleName, hidClientName, cmbClient, cmbOrg, hidOrgName, cmbWare, hidWareName, liUserName;\n    var root, btnClose, btnChange;\n    var orgRoleVal, orgClientHtml, orgOrgHtml, orgWareHtml, wareHouseId;\n    var changed = false,\n      setting = false;\n    var contextUrl = \"\";\n    var lblRole, lblClient, lblOrg, lblWare;\n    var main = $('<div class=\"vis-wakeup-main\" >').hide();\n\n    /* \r\n     inilialize dialog\r\n     *\r\n     *@param $root\r\n     @param $liuserName\r\n     */\n    function init($root, $liUserName) {\n      $root.remove(); // remove root from DOM\n      liUserName = $liUserName; // event invoker li\n      root = $root;\n      form = $root.find('#vis_changeAuthForm');\n      cmbRole = $root.find('#vis_home_role'); //role\n      //hidRoleName = $root.find('#vis_home_rolename');\n      cmbClient = $root.find('#vis_home_client'); //client\n      //hidClientName = $root.find('#vis_home_clientName');\n      cmbOrg = $root.find('#vis_home_org');\n      //hidOrgName = $root.find('#vis_home_orgName');\n      cmbWare = $root.find('#vis_home_warehouse');\n      //hidWareName = $root.find('#vis_home_warehouseName');\n      wareHouseId = $root.find('#vis_home_warehouseId');\n      btnClose = $root.find('#vis-auth-close'); //cancel\n      btnChange = $root.find('#vis-auth-change'); //change\n\n      lblRole = $root.find('label[for=\"Login2Model_Role\"]');\n      lblClient = $root.find('label[for=\"Login2Model_Client\"]');\n      lblOrg = $root.find('label[for=\"Login2Model_Org\"]');\n      lblWare = $root.find('label[for=\"Login2Model_Warehouse\"]');\n      orgRoleVal = cmbRole.val();\n      orgClientHtml = cmbClient.html();\n      orgOrgHtml = cmbOrg.html();\n      orgWareHtml = cmbWare.html();\n      events();\n      $('body').append(main);\n      $('body').append(root);\n      contextUrl = VIS.Application.contextUrl;\n      setText();\n      if (wareHouseId.val() == \"-1\") {\n        cmbWare.val(null);\n      }\n    }\n    ;\n\n    /*\r\n      set text according to culture\r\n    */\n    function setText() {\n      lblRole.text(Globalize.localize(\"Role\"));\n      lblClient.text(Globalize.localize(\"Client\"));\n      lblOrg.text(Globalize.localize(\"Organization\"));\n      lblWare.text(Globalize.localize(\"Warehouse\"));\n      btnChange.val(VIS.Msg.getMsg(\"Change\"));\n      btnClose.val(VIS.Msg.getMsg(\"Close\"));\n    }\n    ;\n\n    /*\r\n    bind events \r\n    */\n    function events() {\n      liUserName.on('click', show);\n      main.on(\"click\", hide);\n      btnClose.on(\"click\", hide);\n      cmbRole.on(\"change\", comboChange);\n      cmbClient.on(\"change\", comboChange);\n      cmbOrg.on(\"change\", comboChange);\n      cmbWare.on(\"change\", comboChange);\n      form.submit(formSubmitHandler);\n    }\n    ;\n\n    /*\r\n       restore to original value\r\n       - user can change value of combobox but later close the form \r\n    */\n    function restore() {\n      cmbRole.val(orgRoleVal);\n      cmbClient.html(orgClientHtml);\n      cmbOrg.html(orgOrgHtml);\n      cmbWare.html(orgWareHtml);\n      if (wareHouseId.val() == \"-1\") {\n        cmbWare.val(null);\n      }\n      btnChange.prop(\"disabled\", true);\n      displayErrors(form, []);\n      changed = false;\n    }\n    ;\n\n    /* show dialog\r\n    */\n    function show() {\n      main.show(); // disable background\n      root.show('slideDown'); //popup\n      btnClose.prop('disabled', false);\n      btnChange.prop('disabled', true);\n    }\n    ;\n    /* hide dialog\r\n    */\n    function hide(e) {\n      if (changed) restore();\n      main.hide();\n      root.hide('slideUp');\n      e.preventDefault();\n      return false;\n      //root.detach();\n    }\n    ;\n\n    /* get data and fill combobox\r\n    *@param combo combobox to fill\r\n    *@param url url of controller\r\n    *@param data input data\r\n    */\n    function getdata(combo, url, data) {\n      if (data.client != \"\" && data.id != \"\") {\n        //$imgbusy1.show();\n        $.ajax(url, {\n          data: data\n        }).success(function (result) {\n          fillCombo(combo, result.data);\n        }).fail(function (result) {\n          alert(result);\n        });\n      }\n    }\n    ;\n\n    /* handle combobox change event\r\n    */\n    function comboChange() {\n      if (setting) return;\n      if (!changed) {\n        changed = true;\n        btnChange.prop(\"disabled\", false);\n      }\n      combo = this;\n      //$cmbRole.attr('id');\n      if (combo.id === cmbRole.attr('id')) {\n        //Clear other combo\n        cmbClient.empty();\n        cmbOrg.empty();\n        cmbWare.empty();\n        getdata(cmbClient, contextUrl + \"Account/GetClients\", {\n          'Id': combo.value\n        });\n      } else if (combo.id === cmbClient.attr('id')) {\n        cmbOrg.empty();\n        cmbWare.empty();\n        getdata(cmbOrg, contextUrl + \"Account/GetOrgs\", {\n          'role': cmbRole.val(),\n          'user': VIS.context.getAD_User_ID(),\n          'client': combo.value\n        });\n      } else if (combo.id === cmbOrg.attr('id')) {\n        cmbWare.empty();\n        getdata(cmbWare, contextUrl + \"Account/GetWarehouse\", {\n          'id': cmbOrg.val()\n        });\n      } else if (combo.id === cmbWare.attr('id')) {}\n      var $hidden = $('#' + combo.id + 'Name');\n      var text = this.options[this.selectedIndex].innerHTML;\n      $hidden.val(text);\n    }\n    ;\n\n    /* function to fill combo\r\n    */\n    function fillCombo(combo, data) {\n      setting = true;\n      combo.empty();\n      var text = Globalize.localize('SelectWarehouse');\n      if (combo === cmbRole) {\n        text = Globalize.localize('SelectRole');\n      } else if (combo === cmbClient) {\n        text = Globalize.localize('SelectClient');\n      } else if (combo === cmbOrg) {\n        text = Globalize.localize('SelectOrg');\n      }\n      $(\"<option />\", {\n        val: \"-1\",\n        text: text\n      }).appendTo(combo);\n      $(data).each(function () {\n        $(\"<option />\", {\n          val: this.Key,\n          text: this.Name\n        }).appendTo(combo);\n      });\n      setting = false;\n    }\n    ;\n\n    /*\r\n       handle form sumbit handler\r\n       - true then reload page \r\n       - false them show error message\r\n    */\n    function formSubmitHandler(e) {\n      var $form = $(this);\n      displayErrors($form, []);\n      btnClose.prop('disabled', true);\n      btnChange.prop('disabled', true);\n      $form.find('#vis_home_langugage').val(localStorage.getItem(\"vis_login_langCode\"));\n      //$imgbusy1.show();\n      // We check if jQuery.validator exists on the form\n      if (!$form.valid || $form.valid()) {\n        $.post($form.attr('action'), $form.serializeArray()).done(function (json) {\n          json = json || {};\n\n          // In case of success, we redirect to the provided URL or the same page.\n\n          if (json.success) {\n            window.location = json.redirect || location.href;\n            if (window.location.href.indexOf('#') != -1) {\n              location.reload();\n            }\n            // btnClose.prop('disabled', false);\n            // btnChange.prop('disabled', true);\n          } else if (json.errors) {\n            displayErrors($form, json.errors);\n            btnClose.prop('disabled', false);\n            btnChange.prop('disabled', false);\n            //$imgbusy1.hide();\n          }\n        }).error(function () {\n          displayErrors($form, ['An unknown error happened.']);\n          btnClose.prop('disabled', false);\n          btnChange.prop('disabled', false);\n          //$imgbusy2.hide();\n          //$imgbusy1.hide();\n        });\n      }\n      // Prevent the normal behavior since we opened the dialog\n      e.preventDefault();\n    }\n    ;\n    var getValidationSummaryErrors = function ($form) {\n      var errorSummary = $form.find('.validation-summary-errors, .validation-summary-valid');\n      return errorSummary;\n    };\n    var displayErrors = function (form, errors) {\n      var errorSummary = getValidationSummaryErrors(form).removeClass('validation-summary-valid').addClass('validation-summary-errors');\n      var items = $.map(errors, function (error) {\n        return '<li>' + Globalize.localize(error) + '</li>';\n      }).join('');\n      errorSummary.find('ul').empty().append(items);\n    };\n    return {\n      init: init\n    };\n  }();\n\n  /*********************************************************************/\n  /* Menu filter popup\r\n     - show menu filter option and filter menu tree according to selection\r\n  */\n  var menuFilterMgr = function () {\n    var menuUL = null;\n    var menuHtml = \"\";\n    var filteredMenuHtml = \"\";\n    var filterA = null;\n    var isVisible = false;\n    var selectedMenu = '';\n    var _menuTree = null;\n    var newContainer = null;\n    var isheaderClicked = false;\n    var _mainMenu = null;\n\n    //var main = $('<div class=\"vis-wakeup-main\" >').hide(); \n    var root = $('<div class=\"vis-dialog vis-filter-dialog\">');\n\n    /* initialize\r\n    @param menuTree  menu tree UI element\r\n    @param filterMenuA filter UI element\r\n    */\n    function init(menuTree, filterMenuA, mainMenu) {\n      // create UI\n      root.html('<input type=\"radio\" name=\"filter\" id=\"vis_filter_radio_1\" value=\"A\" checked style=\"margin-bottom:5px;margin:1px;\" /><label for=\"vis_filter_radio_1\">' + VIS.Msg.getMsg(\"All\") + '</label><br>' + '<input type=\"radio\" name=\"filter\" id=\"vis_filter_radio_2\" value=\"W\" style=\"margin-bottom:5px;margin:1px;\" /><label for=\"vis_filter_radio_2\">' + VIS.Msg.getMsg(\"Window\") + '</label><br>' + '<input type=\"radio\" name=\"filter\" id=\"vis_filter_radio_3\" value=\"X\" style=\"margin-bottom:5px;margin:1px;\"/><label for=\"vis_filter_radio_3\">' + VIS.Msg.getMsg(\"Form\") + '</label><br>' + '<input type=\"radio\" name=\"filter\" id=\"vis_filter_radio_4\" value=\"P\" style=\"margin-bottom:5px;margin:1px;\"/><label for=\"vis_filter_radio_4\">' + VIS.Msg.getMsg(\"Process\") + '</label><br>' + '<input type=\"radio\" name=\"filter\" id=\"vis_filter_radio_5\" value=\"R\" style=\"margin-bottom:20px;margin:1px;\"/><label for=\"vis_filter_radio_5\">' + VIS.Msg.getMsg(\"Report\") + '</label><br/>' + '<input type=\"button\" name=\"filter\" value=' + VIS.Msg.getMsg(\"Filter\") + '></input>');\n      _mainMenu = mainMenu;\n      _menuTree = menuTree;\n      var options = [],\n        itm = null;\n      options = getMenuList();\n      menuHtml = menuUL.html(); //all html tree string\n      filteredMenuHtml = options; // all leaf nodes\n      filterA = filterMenuA; // event invoker\n      $('body').append(root); // append div to body\n      createFilterAllMenu();\n      events(); // bind events\n    }\n    ;\n\n    /**\r\n     * Create a list of all items to be displayed in Show all contents\r\n     * @param {any} action\r\n     */\n    function getMenuList(action) {\n      var options = [];\n      menuUL = _menuTree.find(\".vis-navMainContent\"); //menu UL element\n      var menuUL1 = _menuTree.find(\".vismenu-hidden-header\"); //menu UL element\n      for (var i = 0; i < menuUL1.length; i++) {\n        itm = $(menuUL1[i]);\n        options.push(itm[0].outerHTML);\n      }\n      ;\n      return options;\n    }\n    ;\n\n    /*\r\n    bind events to ui elements\r\n    */\n    function events() {\n      filterA.on(\"click\", toggle);\n      root.on(\"click\", \"input[type=button]\", function (e) {\n        e.stopPropagation();\n        filterClicked();\n      });\n      _mainMenu.find('.vis-removeFilter').on(\"click\", function () {\n        root.find('#vis_filter_radio_1').prop(\"checked\", true);\n        filterClicked();\n      });\n\n      /**\r\n       *  When user clicks on menu name, show all items in menu\r\n       * \r\n       **/\n      _mainMenu.find('.vis-menu-headerName').click(function () {\n        setIsMenuHeaderClicked(true);\n        showAllItems();\n      });\n      function filterClicked() {\n        var rd = root.find(\"input[type=radio]:checked\").val();\n        filterSelectedMenu(rd);\n        if (rd == \"A\") {\n          _mainMenu.find('.vis-removeFilter').hide();\n          _menuTree.find('.vismenu-subSummaryNode').css('display', 'none');\n          if ((VIS.Application.isMobile || VIS.Application.isIOS) && document.documentElement) {\n            if (!isheaderClicked) {\n              _menuTree.find('.vis-menusubItem').css('display', 'none');\n              _menuTree.find('.fa-minus').removeClass('fa-minus').addClass('fa-plus');\n            } else {\n              _menuTree.find('.vis-menusubItem').css('display', '');\n              _menuTree.find('.fa-plus').removeClass('fa-plus').addClass('fa-minus');\n            }\n          } else {\n            _menuTree.find('.fa-minus').removeClass('fa-minus').addClass('fa-plus');\n          }\n        } else {\n          _mainMenu.find('.vis-removeFilter').show();\n          _menuTree.find('.fa-plus').removeClass('fa-plus').addClass('fa-minus');\n        }\n        closePopup(); // close popup\n      }\n      ;\n    }\n    ;\n    function filterSelectedMenu(action) {\n      if ((VIS.Application.isMobile || VIS.Application.isIOS) && document.documentElement) {\n        if (_menuTree.find('.vismenu-parent').is(':visible')) return;\n\n        //if using mobile device, then filter is All Items, show all otherwise based on filter\n        _menuTree.find('.vis-menuSum-hide').removeClass('vis-menuSum-hide');\n        if (action === \"A\") {\n          // all tree\n          _menuTree.find('li').show();\n        } else {\n          _menuTree.find('li').hide();\n          _menuTree.find('.vis-menu-innerFolders').show();\n          _menuTree.find('.vis-menuitm-backbtn').parent().show();\n          _menuTree.find('li > a[data-action=\"' + action + '\"]').parent().show();\n        }\n        hideMobileEmptyFolder();\n      } else {\n        _menuTree.find('.vis-navSubMenu').removeClass('vis-menuSum-hide');\n\n        // If all items are visible\n        //if (newContainer.is(':visible')) {\n        //    newContainer.find('.vis-navMainContent').removeAttr('style');\n        //    if (action === \"A\") { // all tree\n        //        _menuTree.find('.vis-navMainContent li').show();///Show All\n        //    }\n        //    else {\n        //        _menuTree.find('.vis-navMainContent li').hide(); // hide all\n        //        _menuTree.find('.vis-navMainContent li > a[data-action=\"' + action + '\"]').parent().show(); // show only match action\n        //    }\n        //}\n        //else {\n        //    if (action === \"A\") { // all tree\n        //        _menuTree.find('.vis-navMainContent li').show();///Show All\n        //    }\n        //    else {\n        //        _menuTree.find('.vis-navMainContent li').hide(); // hide all\n        //        _menuTree.find('.vis-navMainContent li > a[data-action=\"' + action + '\"]').parent().show(); // show only match action\n        //    }\n        //}\n\n        //Show or hide items based on filters applied\n        if (newContainer.is(':visible')) {\n          newContainer.find('.vis-navMainContent').removeAttr('style');\n        }\n        if (action === \"A\") {\n          // all tree\n          _menuTree.find('.vis-navMainContent li').show(); ///Show All\n        } else {\n          _menuTree.find('.vis-navMainContent li').hide(); // hide all\n          _menuTree.find('.vis-navMainContent li > a[data-action=\"' + action + '\"]').parent().show(); // show only match action\n        }\n        hideEmptyFolders();\n      }\n    }\n\n    /**\r\n     * In case of mobiles, when user apply filter then hide all folders with no visible child\r\n     * @param {any} allItems\r\n     */\n    function hideMobileEmptyFolder(allItems) {\n      if (root.find(\"input[type=radio]:checked\").val() != \"A\") {\n        if (_menuTree.find('.vismenu-parent').is(':visible')) return;\n        var selectedTab = _menuTree.find('.vismenu-selectedMbTab');\n        var allUls = [];\n        if (selectedTab && selectedTab.length > 0) {\n          allUls = selectedTab.find('ul');\n          selectedTab.find('.vis-menuSum-hide').removeClass('vis-menuSum-hide');\n        } else {\n          allUls = _menuTree.find('ul');\n          _menuTree.find('.vis-menuSum-hide').removeClass('vis-menuSum-hide');\n        }\n\n        //Hide all Emplty Subfolders\n        for (var j = 0; j < allUls.length; j++) {\n          var thisUL = $(allUls[j]);\n          if (thisUL.hasClass('vismenu-parent')) continue;\n          var liList = thisUL.find('li');\n          var canhide = false;\n          for (var k = 0; k < liList.length; k++) {\n            if ($(liList[k]).is(':visible') && !$(liList[k]).hasClass('vis-menu-innerFolders')) {\n              canhide = false;\n              break;\n            }\n            canhide = true;\n          }\n          if (canhide) {\n            thisUL.addClass('vis-menuSum-hide');\n            thisUL.css('display', '');\n            thisUL.parent().css('display', '');\n          }\n        }\n        if (selectedTab && selectedTab.length > 0 && !isheaderClicked) {\n          allUls = selectedTab.find('.vis-menuitm-backbtn');\n        } else {\n          allUls = _menuTree.find('.vis-menuitm-backbtn');\n          selectedTab = null;\n        }\n        //Hide all Main folder having no visible child after appling filter\n        for (var j = 0; j < allUls.length; j++) {\n          var thisUL = $(allUls[j]).parent();\n          ;\n          var liList = thisUL.siblings();\n          var canhide = false;\n          for (var k = 0; k < liList.length; k++) {\n            if ($(liList[k]).is(':visible')) {\n              canhide = false;\n              break;\n            }\n            canhide = true;\n          }\n          if (canhide) {\n            if (selectedTab == null || selectedTab.length == 0 || isheaderClicked) {\n              thisUL.css('display', '');\n              thisUL.addClass('vis-menuSum-hide');\n            }\n          }\n        }\n      }\n    }\n\n    /**\r\n     * In case of  Web Menu, when user apply filter then hide all folders with no visible child\r\n     */\n    function hideEmptyFolders() {\n      if (root.find(\"input[type=radio]:checked\").val() != \"A\") {\n        var allUls = menuUL.find('.vis-navmenuItems-Container').find('ul');\n        menuUL.find('.vis-menuSum-hide').removeClass('vis-menuSum-hide');\n        menuUL.find('.vismenu-subSummaryNode').css('display', '');\n        //Hide all empty subfolders\n        for (var j = 0; j < allUls.length; j++) {\n          var thisUL = $(allUls[j]);\n          var liList = thisUL.find('li');\n          var canhide = false;\n          for (var k = 0; k < liList.length; k++) {\n            if ($(liList[k]).is(':visible')) {\n              canhide = false;\n              break;\n            }\n            canhide = true;\n          }\n          if (canhide) thisUL.closest('.vis-navSubMenu').addClass('vis-menuSum-hide');\n        }\n\n        //Hide all empty parent Folders\n        allUls = menuUL.find('.vis-navmenuItems-Container-allItems');\n        for (var j = 0; j < allUls.length; j++) {\n          var canhide = false;\n          var liList = $(allUls[j]).find('.vis-navSubMenu');\n          if (liList.length > 0) {\n            for (var k = 0; k < liList.length; k++) {\n              if (!$(liList[k]).hasClass('vis-menuSum-hide')) {\n                canhide = false;\n                break;\n              }\n              canhide = true;\n            }\n            //if (canhide)\n            //    $(allUls[j]).addClass('vis-menuSum-hide');\n          }\n          //else {\n          var liList = $(allUls[j]).find('li');\n          for (var k = 0; k < liList.length; k++) {\n            if ($(liList[k]).is(':visible')) {\n              canhide = false;\n              break;\n            }\n            canhide = true;\n          }\n          if (canhide) $(allUls[j]).addClass('vis-menuSum-hide');\n          //}\n        }\n      } else {\n        menuUL.find('.vis-menuSum-hide').removeClass('vis-menuSum-hide');\n      }\n    }\n\n    /**\r\n     * Create UI to display all items together in case of web Menu\r\n     * */\n    function createFilterAllMenu() {\n      if ((VIS.Application.isMobile || VIS.Application.isIOS) && document.documentElement) {\n        return;\n      } else {\n        // In case of web menu,when showing all items, create copy of all item containers and add them in new parent.\n        //This is done because in case of displaying all items, design is not same as with Single Item.\n        var container = _menuTree.find('.vis-navmenuItems-Container');\n        newContainer = $(\"<div class='vis-nav-AllItems'></div>\");\n        for (var i = 0; i < container.length; i++) {\n          newContainer.append($(container[i]).clone().removeAttr('style').addClass('vis-navmenuItems-Container-allItems'));\n        }\n        newContainer.hide();\n        _menuTree.find('.vis-navMainContent').append(newContainer);\n      }\n    }\n\n    /**\r\n     * When User clicks on menu name, all items of menu will be visible.\r\n     * */\n    function showAllItems() {\n      if ((VIS.Application.isMobile || VIS.Application.isIOS) && document.documentElement) {\n        var filter = getFilterValue();\n        _menuTree.find('li').hide();\n        _menuTree.find('.vis-subNavFirstElement').show();\n        _menuTree.find('.vis-menu-innerFolders').show();\n        _menuTree.find('ul').show();\n        if (filter == \"A\") _menuTree.find('li').show();else _menuTree.find('li > a[data-action=\"' + filter + '\"]').parent().show();\n        _menuTree.find('.vis-subNavFirstElement').css({\n          \"position\": \"relative\",\n          \"top\": \"0px\"\n        });\n        _menuTree.find('.fa-plus').removeClass('fa-plus').addClass('fa-minus');\n        _menuTree.find('.vismenu-parent').hide();\n        hideMobileEmptyFolder(true);\n      } else {\n        _menuTree.find('.vis-navmenuItems-Container').hide();\n        newContainer.find('.vis-navmenuItems-Container').removeAttr('style');\n        newContainer.find('.vismenu-hidden-header').show();\n        _menuTree.find(\".vis-navSelected\").removeClass('vis-navSelected');\n        newContainer.show();\n        _menuTree.find('.fa-plus').removeClass('fa-plus').addClass('fa-minus');\n        newContainer.find('.vismenu-subSummaryNode').css('display', '');\n        hideEmptyFolders();\n      }\n    }\n    ;\n\n    /* show hide popup\r\n    */\n    function toggle() {\n      isVisible = !isVisible;\n      var left = Math.round(_mainMenu.find('.vis-navFilterIco').offset().left) - 84;\n      if (VIS.Application.isRTL) {\n        root.css('right', 'auto');\n      }\n      root.css('left', left);\n      isVisible ? root.show('slide-down') : root.hide('slide-up');\n    }\n    ;\n\n    /**\r\n     * return Applied filter(window Or Form or process or reports or all)\r\n     * */\n    function getFilterValue() {\n      return root.find(\"input[type=radio]:checked\").val();\n    }\n    function setIsMenuHeaderClicked(isheader) {\n      isheaderClicked = isheader;\n    }\n\n    /* close popup\r\n    */\n    function closePopup() {\n      if (isVisible) {\n        toggle();\n      }\n    }\n    ;\n\n    // return object public function\n    return {\n      init: init,\n      closePopup: closePopup,\n      hideEmptyFolders: hideEmptyFolders,\n      getFilterValue: getFilterValue,\n      hideMobileEmptyFolder: hideMobileEmptyFolder,\n      setIsMenuHeaderClicked: setIsMenuHeaderClicked\n    };\n  }();\n\n  /***************************************************************/\n  /*\r\n      wake Up Dialog\r\n     - show dialog when ajax request session or authorize time out \r\n     - refresh url to re build tokens\r\n  */\n  var wakeupDialog = function () {\n    // ui root\n    var root = $('<div class=\"vis-wakeup-main\"></div>' + '<div class=\"vis-wakeup-outerwrap\">' + '<div class=\"vis-wakeup-content\">' + '<div class=\"vis-wakeup-headsec\">' + '</div>' + '<div class=\"vis-wakeup-datawrp\">' + '<strong>Oh no! Something went wrong</strong>' + '<div class=\"vis-wakeup-text\">'\n    //+ VIS.Msg.getMsg('WakeupText')\n    + '</div><button>Refresh</button></div></div></div></div>');\n    var btn = root.find('button');\n    var imgS = root.find('.vis-wakeup-sleep');\n    var imgA = root.find('.vis-wakeup-awake');\n    var txt = root.find(\".vis-wakeup-text\");\n\n    /* initilize \r\n     @param tx text to display  \r\n    */\n    function init(tx) {\n      txt.text(tx);\n      $('body').append(root);\n    }\n    ;\n    btn.on('click', function () {\n      btn.prop(\"disabled\", true);\n      //imgS.hide();\n      //imgA.show();\n      window.location.reload(); //refresh url\n    });\n    var d = {\n      init: init\n    };\n    return d;\n  }();\n\n  /**\r\n  * Start Server sent events\r\n  */\n  //var startToastr = function () {\n  //    var source = new EventSource('JsonData/MsgForToastr?varificationToken=' + $(\"#vis_antiForgeryToken\").val());\n  //    source.onmessage = function (e) {\n  //        var returnedItem = JSON.parse(e.data);\n  //        if (returnedItem.message && returnedItem.message.length > 0) {\n  //            toastr.success(returnedItem.message, '', { timeOut: 4000, \"positionClass\": \"toast-top-center\", \"closeButton\": true, });\n  //        }\n  //    };\n  //};\n\n  /*\r\n     global ajax error handler \r\n    - hanlde authorize and session time error\r\n    - show wakeup dialog  \r\n    */\n\n  var redirect = false;\n  $(document).ajaxError(function (xhr, props) {\n    if (props.status === 401) {\n      if (!redirect) {\n        wakeupDialog.init(VIS.Msg.getMsg('UnAuthorized')); // show wakeup dialog\n        redirect = true;\n      }\n    } else if (props.status === 999) {\n      if (!redirect) {\n        wakeupDialog.init(VIS.Msg.getMsg('WakeupText')); // show wakeup dialog\n        redirect = true;\n      }\n    } else {\n      console.log(props.responseText);\n    }\n  });\n})(VIS);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/desktopmgr.js?")},"./Areas/VIS/Scripts/app/favouritehelper.js":()=>{eval("/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Get Favourite Nodes And shows in Wellcome Screen\r\n * Author         :     Lakhwinder\r\n * Date           :     10-Aug-2014\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  function FavouriteHelper() {\n    var $root = null;\n    var $menu = null;\n    var nodeID = null;\n    var btn = null;\n    var barNode = null;\n    var menudiv = null;\n    var liAddfav = null;\n    var liRemovefav = null;\n    var lifavZoom = null;\n    var action, actionid, nodeName, isFav;\n    var isloaded = false;\n    function initialize() {\n      $root = $('<div style=\"width:100%;height:100%\">'); //, {\n      $menu = $(\"<ul class='vis-apanel-rb-ul' style='width:100%;height:100%'>\");\n      liAddfav = $(\"<li data-isfav='no' data-id='favaction'>\").append(VIS.Msg.getMsg('AddFav'));\n      liRemovefav = $(\"<li data-isfav='yes' data-id='favaction'>\").append(VIS.Msg.getMsg('RemoveFav'));\n      lifavZoom = $(\"<li data-isfav='\" + btn.data('isfav') + \"' data-id='favaction'>\").append(VIS.Msg.getMsg('OpenNewTab'));\n      $menu.append(liAddfav);\n      $menu.append(liRemovefav);\n      $menu.append(lifavZoom);\n      $root.append($menu);\n      bindEvent();\n    }\n    ;\n    function showOverlay(_btn) {\n      btn = _btn;\n      nodeID = btn.data('value');\n      action = btn.data('action');\n      actionid = btn.data('actionid');\n      nodeName = btn.data('name');\n      isFav = btn.attr('data-isfav');\n      if (!isloaded) {\n        initialize();\n        isloaded = true;\n      }\n      if (isFav == 'yes') {\n        liAddfav.css('display', 'none');\n        liRemovefav.css('display', 'block');\n      } else {\n        liAddfav.css('display', 'block');\n        liRemovefav.css('display', 'none');\n      }\n      btn.w2overlay($root.clone(true), {\n        css: {\n          height: '300px'\n        }\n      });\n    }\n    ;\n    function bindEvent() {\n      liAddfav.on('click', addRemoveFav);\n      liRemovefav.on('click', addRemoveFav);\n      lifavZoom.on('click', openNewTab);\n    }\n    ;\n    function addRemoveFav() {\n      if (isFav == 'yes') {\n        //btn.removeClass(\"vis-favitmchecked\");\n        //btn.addClass(\"vis-favitmunchecked\");\n        btn.find('span').remove();\n        var otherSpan = $('#vis_divTree').find('[data-value=\"' + btn.data('value') + '\"]');\n        if (otherSpan && otherSpan.length > 0) {\n          if ($(otherSpan[1]).find('span.fa.fa-star').length > 0) {\n            $(otherSpan[1]).attr('data-isfav', 'no');\n            $(otherSpan[1]).find('span.fa.fa-star').remove();\n          }\n          if (VIS.Application.isMobile || VIS.Application.isIOS) {\n            if ($(otherSpan[5])) {\n              $(otherSpan[5]).attr('data-isfav', 'no');\n              $(otherSpan[5]).find('span.fa.fa-star').remove();\n            }\n          } else {\n            if ($(otherSpan[3])) {\n              $(otherSpan[3]).attr('data-isfav', 'no');\n              $(otherSpan[3]).find('span.fa.fa-star').remove();\n            }\n          }\n        }\n        btn.attr('data-isfav', 'no');\n        removeFav(nodeID);\n        VIS.favMgr.removeFavourite(nodeID);\n      } else {\n        barNode = {};\n        barNode.Action = action; //aAction.data('action');\n        barNode.WindowID = actionid; //aAction.data('actionid');\n        barNode.FormID = actionid; //aAction.data('actionid');\n        barNode.ProcessID = actionid; //aAction.data('actionid');\n        barNode.NodeID = nodeID; //btn.data('value');\n        barNode.Name = nodeName; // $(aAction).parent().children(0).text();\n        //btn.removeClass(\"vis-favitmunchecked\");\n        //btn.addClass(\"vis-favitmchecked\");\n        btn.attr('data-isfav', 'yes');\n        btn.prepend('<span class=\"fa fa-star\"></span>');\n        var otherSpan = $('#vis_divTree').find('[data-value=\"' + btn.data('value') + '\"]');\n        if (otherSpan && otherSpan.length > 2) {\n          if ($(otherSpan[1]).find('span.fa.fa-star').length == 0) {\n            $(otherSpan[1]).prepend('<span class=\"fa fa-star\"></span>');\n            $(otherSpan[1]).attr('data-isfav', 'yes');\n          } else {\n            if (VIS.Application.isMobile || VIS.Application.isIOS) {\n              $(otherSpan[5]).prepend('<span class=\"fa fa-star\"></span>');\n              $(otherSpan[5]).attr('data-isfav', 'yes');\n            } else {\n              $(otherSpan[3]).prepend('<span class=\"fa fa-star\"></span>');\n              $(otherSpan[3]).attr('data-isfav', 'yes');\n            }\n          }\n        }\n        addToFav(nodeID);\n        VIS.favMgr.addFavourite(barNode);\n      }\n    }\n    ;\n    function openNewTab() {\n      //alert(action + \" \" + actionid);\n      VIS.viewManager.startActionInNewTab(action, actionid);\n    }\n    ;\n    function addToFav(nodeID) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"Home/SetNodeFavourite/?nodeID=\" + nodeID,\n        dataType: \"json\"\n      });\n    }\n    ;\n    function removeFav(nodeID) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"Home/RemoveNodeFavourite/?nodeID=\" + nodeID,\n        dataType: \"json\"\n      });\n    }\n    ;\n    function removeFavourite(nodeID) {\n      if (!menudiv) menudiv = $('#vis_divTree');\n      var li = menudiv.children(0).find(\"[data-value='\" + nodeID + \"']\");\n      var btnPic = $(li.children()[1]);\n      btnPic.removeClass(\"vis-favitmchecked\");\n      btnPic.addClass(\"vis-favitmunchecked\");\n      btnPic.data('isfav', 'no');\n    }\n    var favHelper = {\n      removeFavourite: removeFavourite,\n      showOverlay: showOverlay\n    };\n    return favHelper;\n  }\n  ;\n  VIS.FavouriteHelper = FavouriteHelper();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/favouritehelper.js?")},"./Areas/VIS/Scripts/app/formframe.js":()=>{eval('//*** AForm *******//\n\n;\n(function (VIS, $) {\n  /**\r\n   *\tForm Framework\r\n   *\r\n   */\n  function AForm(height) {\n    this.$parent; //parent container\n    this.mPanel; // content panel\n    this.ctx = VIS.Env.getCtx(); //ctx\n    this.log = VIS.Logging.VLogger.getVLogger("VIS.AForm"); //Logger\n\n    var $root, $busyDiv, $contentGrid;\n\n    //InitComponenet\n    function initComponent() {\n      $root = $("<div class=\'vis-height-full vis-app-aform-root\' >");\n      $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      $contentGrid = $("<div class=\'vis-height-full\'>");\n      $root.append($contentGrid).append($busyDiv);\n    }\n    ;\n    initComponent();\n    this.setSize = function (height, width) {\n      $root.height(height); //height \n      //$busyDiv.height(height);\n      $contentGrid.height(height);\n    };\n    this.setSize(height);\n\n    //privilized function\n\n    this.getRoot = function () {\n      return $root;\n    };\n    this.getContentGrid = function () {\n      return $contentGrid;\n    };\n    this.setBusy = function (busy, focus) {\n      isLocked = busy;\n      if (busy) {\n        $busyDiv[0].style.visibility = \'visible\'; // .show();\n      } else {\n        $busyDiv[0].style.visibility = \'hidden\';\n        if (focus) {}\n      }\n    };\n    this.disposeComponent = function () {\n      $root.remove();\n      $root = null;\n      $contentGrid.remove();\n      $contentGrid = null;\n      $busyDiv.remove();\n      $busyDiv = null;\n      this.$parentWindow = null;\n      this.ctx = null;\n      this.getRoot = null;\n      this.getContentGrid = null;\n      this.setBusy = null;\n      this.setSize = null;\n    };\n  }\n  ;\n\n  /**\r\n   * \tOpen Form (directly)\r\n   *\t@param jObject form object\r\n   *\t@param $parent parent control\r\n   *\t@param windowNo window number \r\n   *\t@return true if started\r\n   */\n  AForm.prototype.openForm = function (json, $parent, windowNo, additionalInfo) {\n    if (json.IsReport) {\n      VIS.ADialog.info("Form Report is not supported");\n      return false;\n    }\n    this.parent = $parent;\n    var className = "";\n\n    //if (json.Prefix.length > 0) // has Mod\n    //{\n    //    className = json.Prefix + json.ClassName;\n    //}\n    //else {\n    //    //check for VAdv\n\n    //    className = "VIS" + json.ClassName;\n    //}\n\n    //className = json.Prefix + json.ClassName;\n    className = json.Prefix + json.ClassName;\n    try {\n      var type = "";\n      var isReact = className.split(\'.\');\n      additionalInfo = null;\n      if (isReact[1].toLowerCase() == \'react\') {\n        additionalInfo = isReact[2];\n        className = isReact[0] + \'.\' + isReact[1];\n      }\n      //    type = VIS.Utility.getFunctionByName(\'VIS.Apps.ReactTemplate\', window);\n      //    additionalInfo = className;\n      //} else {\n      type = VIS.Utility.getFunctionByName(className, window);\n      //}\n      var o = new type(windowNo);\n      o.init(windowNo, this, additionalInfo);\n      this.mPanel = o;\n      o = null;\n    } catch (e) {\n      this.log.log(VIS.Logging.Level.WARNING, "Class=" + className + ", AD_Form Name=" + json.Name, e);\n      return false;\n    }\n\n    //this.getRoot().html("Form _ID=>" + json.ClassName);\n\n    this.setBusy(false);\n    this.windowNo = windowNo;\n    this.setTitle(VIS.Env.getHeader(this.ctx, windowNo));\n    this.parent.setName(json.DisplayName);\n    $parent = null;\n    return true;\n  };\n  AForm.prototype.openWidget = function (className, windowNo) {\n    try {\n      var type = "";\n      var isReact = className.split(\'.\');\n      additionalInfo = null;\n      if (isReact[1].toLowerCase() == \'react\') {\n        additionalInfo = isReact[2];\n        className = isReact[0] + \'.\' + isReact[1];\n      }\n      //    type = VIS.Utility.getFunctionByName(\'VIS.Apps.ReactTemplate\', window);\n      //    additionalInfo = className;\n      //} else {\n      type = VIS.Utility.getFunctionByName(className, window);\n      //}\n      var o = new type(windowNo);\n      o.init(windowNo, this, additionalInfo);\n      this.mPanel = o;\n      o = null;\n    } catch (e) {\n      this.log.log(VIS.Logging.Level.WARNING, "Class=" + className, e);\n      return false;\n    }\n    this.setBusy(false);\n  };\n\n  /**\r\n  *  set title of form\r\n  *  @param title \r\n  */\n  AForm.prototype.setTitle = function (title) {\n    if (this.parent) this.parent.setTitle(VIS.Utility.Util.cleanMnemonic(title));\n  };\n  AForm.prototype.hideHeader = function (hide) {\n    if (this.parent) this.parent.hideHeader(hide);\n  };\n  AForm.prototype.hideCloseIcon = function (hide) {\n    if (this.parent) this.parent.hideCloseIcon(hide);\n  };\n  AForm.prototype.sizeChanged = function (height, width) {\n    this.setSize(height);\n    if (this.mPanel && this.mPanel.sizeChanged) {\n      this.mPanel.sizeChanged(height, width);\n    }\n  };\n  AForm.prototype.refresh = function () {\n    if (this.mPanel && this.mPanel.refresh) {\n      this.mPanel.refresh();\n    }\n  };\n\n  /**\r\n  * \tdispose\r\n  */\n  AForm.prototype.dispose = function () {\n    if (this.disposed) return;\n    this.disposed = true;\n    if (this.mPanel) {\n      if (this.mPanel.disposeComponent) this.mPanel.dispose();\n      this.mPanel = null;\n    }\n    if (this.parent) {\n      this.parent.dispose();\n      this.parent = null;\n    }\n    VIS.Env.clearWinContext(this.ctx, this.windowNo);\n    this.disposeComponent();\n  };\n\n  // global assignment\n  VIS.AForm = AForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/formframe.js?')},"./Areas/VIS/Scripts/app/forms/form.js":()=>{eval(';\n(function (VIS, $) {\n  /*\tForm Interface.\r\n  \tfor communicating between AFrame and user Form\r\n    \r\n    Every form must Implement these two function \r\n  \r\n       1.  \'form\'.prototype.init = function (WindowNo, frame);\r\n       2.  \'form\'.prototype.dispose = function();\r\n    *   \'form\' = User Form \r\n      Optional functions\r\n     1. \'form\'.prototype.sizeChanged = function(height,width)  fire when screen size changed\r\n     2. \'form\'.prototype.refresh = function()  fire when form got focus\r\n    \r\n  \r\n    see TestForm Exemple below\r\n  */\n\n  //Form Class function fullnamespace\n  VIS.TestForm = function () {\n    this.frame;\n    this.windowNo;\n    var $root, $text, $okBtn, $cancelBtn;\n    function initializeComponent() {\n      $root = $("<div>");\n      $text = $("<input type=\'text\'>");\n      $okBtn = $("<input type=\'button\'>").val("Show");\n      $cancelBtn = $("<input type=\'button\'>").val("Close");\n\n      //Add to root\n      $root.append($text).append($okBtn).append($cancelBtn);\n    }\n    initializeComponent();\n    var self = this; //scoped self pointer\n\n    //Event\n\n    $okBtn.on(VIS.Events.onTouchStartOrClick, function () {\n      alert("Test From has value :==> " + $text.val());\n    });\n    $cancelBtn.on(VIS.Events.onTouchStartOrClick, function () {\n      if (confirm("wanna close this form???")) self.dispose(); // \n    });\n\n    //Privilized function\n    this.getRoot = function () {\n      return $root;\n    };\n    this.disposeComponent = function () {\n      self = null;\n      if ($root) $root.remove();\n      $root = null;\n      if ($okBtn) $okBtn.off(VIS.Events.onTouchStartOrClick);\n      if ($cancelBtn) $cancelBtn.off(VIS.Events.onTouchStartOrClick);\n      $text = $okBtn = $cancelBtn = null;\n      this.getRoot = null;\n      this.disposeComponent = null;\n    };\n  };\n\n  //Must Implement with same parameter\n  VIS.TestForm.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n\n  //Must implement dispose\n  VIS.TestForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n\n  /* Optional functions\r\n   3. server side message handling \r\n  */\n  //Form Class function fullnamespace\n  VIS.TestMsgForm = function () {\n    this.frame;\n    this.windowNo;\n    var $root, $text, $okBtn, $cancelBtn;\n    function initializeComponent() {\n      $root = $("<div>");\n      $text = $("<input type=\'text\'>");\n      $okBtn = $("<input type=\'button\'>").val("Start");\n      $cancelBtn = $("<input type=\'button\' disable>").val("Stop");\n\n      //Add to root\n      $root.append($text).append($okBtn).append($cancelBtn);\n    }\n    initializeComponent();\n    var self = this; //scoped self pointer\n\n    //Event\n\n    $okBtn.on(VIS.Events.onTouchStartOrClick, function () {\n      self.sendRequest(false);\n      changeUI(false, "started");\n    });\n    $cancelBtn.on(VIS.Events.onTouchStartOrClick, function () {\n      self.sendRequest(true);\n      changeUI(true, "Stopped");\n    });\n\n    //Privilized function\n    this.getRoot = function () {\n      return $root;\n    };\n    function changeUI(stop, text) {\n      if (stop) {\n        $cancelBtn.hide();\n        $okBtn.show();\n        $text.css(\'color\', \'red\');\n      } else {\n        $cancelBtn.show();\n        $okBtn.hide();\n        $text.css(\'color\', \'green\');\n      }\n      $text.val(text);\n    }\n    this.onmessage = function (data) {\n      /* Event should be unique */\n      if (data.Event == "DEMOS") {\n        changeUI(false, data.Message);\n      } else if (data.Event == "DEMOE") {\n        changeUI(true, data.Message);\n      }\n\n      //elseskip\n    };\n    this.disposeComponent = function () {\n      self = null;\n      if ($root) $root.remove();\n      $root = null;\n      if ($okBtn) $okBtn.off(VIS.Events.onTouchStartOrClick);\n      if ($cancelBtn) $cancelBtn.off(VIS.Events.onTouchStartOrClick);\n      $text = $okBtn = $cancelBtn = null;\n      this.getRoot = null;\n      this.disposeComponent = null;\n    };\n  };\n\n  //Must Implement with same parameter\n  VIS.TestMsgForm.prototype.init = function (windowNo, frame) {\n    //Assign to this Varable\n    this.frame = frame;\n    this.frame.getContentGrid().append(this.getRoot());\n    //register\n    VIS.sseManager.register(this);\n  };\n  VIS.TestMsgForm.prototype.sendRequest = function (isStop) {\n    VIS.dataContext.postJSONData(VIS.Application.contextUrl + \'Message/Demo\', {\n      \'IsStop\': isStop\n    }, function (e) {});\n  };\n\n  //Must implement dispose\n  VIS.TestMsgForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n    //unregister\n    VIS.sseManager.unregister(this);\n  };\n\n  /* another way */\n  //VIS.TestMsgForm.prototype.onmessage = function (data) {\n\n  //};\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/forms/form.js?')},"./Areas/VIS/Scripts/app/forms/generatexmodel.js":()=>{eval(';\n(function (VIS, $) {\n  VIS.AForms = VIS.AForms || {};\n  function GenerateXModel() {\n    this.frame;\n    this.windowNo;\n    this.log = VIS.Logging.VLogger.getVLogger("GenerateXModel");\n    var $self = this;\n    var $root = $("<div style=\'width: 100%; height: 100%; background-color: white;\'>");\n    //var $busyDiv = $("<div class=\'vis-apanel-busy\' style=\'width:98%;height:98%;position:absolute\'>");\n    var $busyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    var okBtn = null;\n    var btnOkA = null;\n    var cancelBtn = null;\n    var cmbAllTable = null;\n    varchkAllTable = null;\n    vartxtpath = null;\n    varchkClassType = null;\n    function initializeComponent() {\n      var div = \'<div style="width: 400px;margin: 20px auto;vertical-align: middle;">\' + \'<div style="width: 400px;float: left;">\' + \'<div style="width: 100px;float: left;   margin-top: 8px;">\' + \'<span>\' + VIS.Msg.getMsg("VISPRO_SelectTable") + \'</span>\' + \'</div>\' + \'<div style="width: 300px;float: left;">\' + \'<select style="width: 100%;float: left;" class="VIS_Pref_pass" id="cmbAllTable_@windowNo"></select>\' + \'</div>\' + \'</div>\' + \'<div style="float: left;margin-left: 5px;margin-top: 7px; display: none;">\' + \'<input id="chkAllTable_@windowNo" type="checkbox" />\' + \'<span>\' + VIS.Msg.getMsg("VISPRO_AllTable") + \'</span>\' + \'</div>\' + \'<div style="width: 400px;float: left; display: none;">\' + \'<div style="width: 100px;float: left;">\' + \'<span>\' + VIS.Msg.getMsg("VISPRO_Path") + \'</span>\' + \'</div>\' + \'<div style="width: 300px;float: left;">\' + \'<input style="width: 81%;float: left;" class="VIS_Pref_pass" type="text" id="txtpath_@windowNo" />\' + \'<input type="file" multiple="" webkitdirectory="" style="height: -1px; width:30px ">\' + \'</div>\' + \'</div>\' + \'<div style="width: 400px;float: left; display: none;">\' + \'<div style="width: 100px;float: left;">\' + \'<span>\' + VIS.Msg.getMsg("VISPRO_EntityType") + \'</span>\' + \'</div>\' + \'<div style="width: 300px;float: left;">\' + \'<input id="chkClassType_@windowNo" type="checkbox" />\' + \'<span>\' + VIS.Msg.getMsg("VISPRO_ClassType") + \'</span>\' + \'</div>\' + \'</div>\' + \'<div class="VIS-locator-DivStyle" style="text-align: right">\' + \'<input type="button" id="btnCancel_@windowNo" style="margin-bottom:0px;margin-top:0px; float:right " value="\' + VIS.Msg.getMsg("Cancel") + \'" class="VIS_Pref_btn-2" />\' + \'<input type="button" id="btnOk_@windowNo" style="margin-bottom:0px;margin-top:0px; float:right; margin-right:10px" class="VIS_Pref_btn-2" value="\' + VIS.Msg.getMsg("VIS_Genrate") + \'" />\' + \'<a href="javascript:void(0)" class="VIS_Pref_pass-btn" style="display: none; margin-bottom: 0px; margin-top: 0px;float: right; margin-right: 10px;" id="btnOkA_@windowNo" >\' + VIS.Msg.getMsg("VIS_Download") + \'</a>\' + \'</div>\' + \'</div>\';\n      div = div.replaceAll("@windowNo", $self.windowNo);\n      $root.html(div);\n      $root.append($busyDiv);\n      okBtn = $root.find("#btnOk_" + $self.windowNo);\n      cancelBtn = $root.find("#btnCancel_" + $self.windowNo);\n      btnOkA = $root.find("#btnOkA_" + $self.windowNo);\n      cmbAllTable = $root.find("#cmbAllTable_" + $self.windowNo);\n      chkAllTable = $root.find("#chkAllTable_" + $self.windowNo);\n      txtpath = $root.find("#txtpath_" + $self.windowNo);\n      chkClassType = $root.find("#chkClassType_" + $self.windowNo);\n    }\n    function jbInit() {\n      // $self.lblStatusInfo.getControl().text(VIS.Msg.getMsg("InvGenerateSel", false, false));\n      getTable();\n    }\n    function events() {\n      //Events\n      if (okBtn != null) okBtn.on(VIS.Events.onTouchStartOrClick, function () {\n        setBusy(true);\n        generateXclasses();\n        setBusy(false);\n      });\n      if (btnOkA != null) btnOkA.on(VIS.Events.onTouchStartOrClick, function () {\n        btnOkA.css("display", "none");\n        okBtn.css("display", "block");\n      });\n      if (cancelBtn != null) cancelBtn.on(VIS.Events.onTouchStartOrClick, function () {\n        $self.dispose();\n      });\n    }\n    function generateXclasses() {\n      var obj = $self;\n      var directory = "";\n      var chkStatus = false;\n      var tableId = cmbAllTable.find(\'option:selected\').val();\n      var classType = "";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Form/GenerateXClasses",\n        dataType: "json",\n        data: {\n          directory: directory,\n          chkStatus: chkStatus,\n          tableId: tableId,\n          classType: classType\n        },\n        success: function (data) {\n          if (data.contant != null) {\n            //var fileData = "data:text/csv;base64," + window.btoa(data.contant);\n            var fileData = "data:text/csv;charset=utf-8," + encodeURIComponent(data.contant);\n            //btnOkA.attr("href", fileData).attr("download", data.fileName)\n            btnOkA.attr(\'download\', data.fileName).attr(\'href\', fileData).attr(\'target\', \'_blank\');\n            //btnOkA.trigger("click");\n            // btnOkA.removeAttr("download");\n\n            //window.open(URL, name, specs, replace)\n            //window.open("data:text/csv;charset=utf-8," + encodeURIComponent(data.contant), data.fileName);\n            VIS.ADialog.info(data.msg);\n            btnOkA.css("display", "block");\n            okBtn.css("display", "none");\n          }\n          setBusy(false);\n        }\n      });\n    }\n\n    // Get Table Name\n    function getTable() {\n      $.ajax({\n        url: VIS.Application.contextUrl + "GenerateXModel/GenXModelGetTable",\n        type: \'POST\',\n        async: false,\n        success: function (data) {\n          var res = data.result;\n          if (res) {\n            for (var i = 0; i < res.length; i++) {\n              cmbAllTable.append("<option value=\'" + res[i].AD_Table_ID + "\'>" + VIS.Utility.encodeText(res[i].Name) + \'</option>\');\n            }\n          }\n        },\n        error: function (e) {\n          $self.log.info(e);\n        }\n      });\n    }\n    function getEntity() {\n      try {\n        var strQuery = "VIS_130";\n        var dr = executeReader(strQuery, null, null);\n        while (dr.read()) {}\n        dr.close();\n      } catch (e) {}\n    }\n    var baseUrl = VIS.Application.contextUrl;\n    var dataSetUrl = baseUrl + "JsonData/JDataSet";\n    var executeReader = function (sql, param, callback) {\n      var async = callback ? true : false;\n      var dataIn = {\n        sql: sql,\n        page: 1,\n        pageSize: 0\n      };\n      if (param) {\n        dataIn.param = param;\n      }\n      var dr = null;\n      getDataSetJString(dataIn, async, function (jString) {\n        dr = new VIS.DB.DataReader().toJson(jString);\n        if (callback) {\n          callback(dr);\n        }\n      });\n      return dr;\n    };\n    function getDataSetJString(data, async, callback) {\n      var result = null;\n      //  data.sql = VIS.secureEngine.encrypt(data.sql);\n      $.ajax({\n        url: dataSetUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        if (callback) {\n          callback(json);\n        }\n        //return result;\n      });\n      return result;\n    }\n    ;\n    function setBusy(isBusy) {\n      $busyDiv.css("display", isBusy ? \'block\' : \'none\');\n    }\n    ;\n    this.Initialize = function () {\n      initializeComponent();\n      jbInit();\n      events();\n      setBusy(false);\n    };\n\n    //Privilized function\n    this.getRoot = function () {\n      return $root;\n    };\n    this.disposeComponent = function () {\n      if (okBtn) okBtn.off(VIS.Events.onTouchStartOrClick);\n      if (cancelBtn) cancelBtn.off(VIS.Events.onTouchStartOrClick);\n      $self = null;\n      this.windowNo = null;\n      $root = null;\n      $busyDiv = null;\n      this.getRoot = null;\n      this.disposeComponent = null;\n    };\n  }\n  ;\n\n  //Must Implement with same parameter\n  GenerateXModel.prototype.init = function (windowNo, frame) {\n    this.frame = frame;\n    this.windowNo = windowNo;\n    try {\n      this.Initialize();\n    } catch (ex) {\n      //log.Log(Level.SEVERE, "init", ex);\n    }\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n\n  //Must implement dispose\n  GenerateXModel.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.AForms.GenerateXModel = GenerateXModel;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/forms/generatexmodel.js?')},"./Areas/VIS/Scripts/app/forms/productContainer.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Generate Product Container.\r\n * Author         :     Amit Bansal\r\n * Date           :     13-July-2018\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  VIS.AForms = VIS.AForms || {};\n  function productContainer() {\n    this.frame;\n    this.windowNo;\n    var $self = this;\n    var $root = $("<div style=\'height:100%;background-color:white;\' >");\n    //var $bsyDiv = $("<div class=\'vis-apanel-busy\' style=\'height:100%;position:relative;z-index: 2\'>");\n    var $bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n\n    /**Create Main View Variable **/\n    var $mainpageContent = null;\n    var $formDataRow = null;\n    var $formLeftWrap = null;\n    var $formRightWrap = null;\n    var $formdata = null;\n    var $actionDiv = null;\n\n    // Left div Variables\n    var $lblName = null;\n    var $containerName = null;\n    var $lblWarehouse = null;\n    var $warehouseSearch = null;\n    var _ReqLookUpWarehouse = null;\n    this.$ReqControlWarehouse = null; // for Globaly access use this operator\n\n    var $lblLocator = null;\n    var $LocatorSearch = null;\n    var _ReqLookUpLocator = null;\n    this.$ReqControlLocator = null; // for Globaly access use this operator\n\n    var $searchRecordBtn = null;\n    var $okBtn = null;\n\n    /** Create Grid Variable**/\n    var $ContainerGrid = null;\n    var CGrid = null;\n    var grdname = null;\n    this.$selectedContainerId = null;\n    this.Initialize = function () {\n      busyDiv(\'visible\');\n      createMainView();\n      bindEvents();\n      busyDiv(\'hidden\');\n    };\n    function createMainView() {\n      $mainpageContent = $(\'<div class="Page-content" style="height:100%;background-color:white;">\');\n\n      /**created 1st Div **/\n      $formLeftWrap = $(\' <div class="formLeft" style="background-color: rgb(241, 241, 241);display: inline-block; float: left;width:23%;height:87.8%;overflow:auto;padding-left: 7px;">\');\n      $formDataRow = $(\'<div class="VIS_formDataRow">\');\n      $formdata = $(\'<div id=PCont_Name_\' + $self.windowNo + \' class="VIS_formData">\');\n      $lblName = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "Name") + \'</label><br>\');\n      $containerName = $(\'<input type=text id=containerName_\' + $self.windowNo + \' ></input>\');\n      $formdata.append($lblName).append($containerName);\n      $formDataRow.append($formdata);\n      $formLeftWrap.append($formDataRow);\n      $formDataRow = $(\'<div class="VIS_formDataRow">\');\n      $formdata = $(\'<div id=PCont_WarehouseSearch_\' + $self.windowNo + \' class="VIS_formData" style="margin-top:20px">\');\n      $lblWarehouse = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "M_Warehouse_ID") + \'</label><br>\');\n      $formdata.append($lblWarehouse);\n      $formDataRow.append($formdata);\n      $formLeftWrap.append($formDataRow);\n      $formDataRow = $(\'<div class="VIS_formDataRow">\');\n      $formdata = $(\'<div id=PCont_LocatorSearch_\' + $self.windowNo + \' class="VIS_formData" style="margin-top:20px">\');\n      $lblLocator = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "M_Locator_ID") + \'</label><br>\');\n      $formdata.append($lblLocator).append($LocatorSearch);\n      $formDataRow.append($formdata);\n      $formLeftWrap.append($formDataRow);\n      $formDataRow = $(\'<div class="VIS_formDataRow">\');\n      $formdata = $(\'<div class="VIS_formData">\');\n      //$searchRecordBtn = $(\'<span class="gray-btn" style="Float:left;margin-top:20px">\' + VIS.Msg.getMsg("VIS_Search") + \'</span>\');\n      $searchRecordBtn = $(\'<input type=button id="PCont_btnSearch_\' + $self.windowNo + \' class="#" style="margin-top:20px;width: 100px;" value = \' + VIS.Msg.getMsg("Search") + \'></input>\');\n      $formdata.append($searchRecordBtn);\n      $formDataRow.append($formdata);\n      $formLeftWrap.append($formDataRow);\n      /**End form Left wrapper**/\n\n      /**created 2nd Div **/\n      $formRightWrap = $(\' <div class="formRight" style="display: inline-block; float: left; width: 75%; height: 87.8%; margin-left: 10px;">\');\n      $ContainerGrid = $(\'<div style="display: inline-block; float: left; width: 75%; height: 87.8%; margin-left: 10px;">\');\n      $actionDiv = $(\'<div>\');\n      $okBtn = $(\'<input type=button id="PCont_OK_\' + $self.windowNo + \' style="margin-top:20px;width: 100px;" value = \' + VIS.Msg.getMsg("OK") + \'></input>\');\n      $actionDiv.append($okBtn);\n      $formRightWrap.append($ContainerGrid).append($actionDiv);\n      $mainpageContent.append($formLeftWrap).append($formRightWrap);\n      $root.append($mainpageContent).append($bsyDiv);\n    }\n    ;\n    function bindEvents() {\n      // load warehouse control \n      $warehouseSearch = $root.find("#PCont_WarehouseSearch_" + $self.windowNo);\n      loadControlWarehouse();\n\n      //load locator control\n      $LocatorSearch = $root.find("#PCont_LocatorSearch_" + $self.windowNo);\n      loadControlLocator();\n\n      // when the form is intailize, on behalf of default filter -- load grid\n      var name = $root.find("#containerName_" + $self.windowNo)[0].value;\n      getProductContainer(name, $ReqControlWarehouse.value, $ReqControlLocator.value);\n      $searchRecordBtn.on("click", function () {\n        // get container name from filter\n        var name = $root.find("#containerName_" + $self.windowNo)[0].value;\n        // load container on behalf of filter parameter\n        getProductContainer(name, $ReqControlWarehouse.value, $ReqControlLocator.value);\n      });\n      $okBtn.on("click", function () {\n        // get key column for updating container ID for the same record\n        var tableName = VIS.context.getWindowTabContext($self.windowNo, 1, "KeyColumnName");\n        // get record id on behalf of key column\n        var RecordId = 0;\n        if (tableName.length > 0) {\n          RecordId = VIS.context.getWindowContext($self.windowNo, tableName, true);\n        } else {\n          w2alert(VIS.Msg.getMsg("VIS_TableNotFound"));\n          return;\n        }\n        // call to ajax or updation \n        if (RecordId > 0 && $selectedContainerId > 0) {\n          updateProductContainer(tableName, RecordId, $selectedContainerId);\n        } else {\n          w2alert(VIS.Msg.getMsg("VIS_RecordNotSelected"));\n        }\n      });\n    }\n    ;\n\n    //Warehouse control Load\n    function loadControlWarehouse() {\n      _ReqLookUpWarehouse = VIS.MLookupFactory.get(VIS.Env.getCtx(), $self.windowNo, 3798, VIS.DisplayType.Search, "M_Warehouse_ID", 0, false, null); //ctx, windowNo, column_ID, AD_Reference_ID, columnName, AD_Reference_Value_ID, isParent, validationCode\n      this.$ReqControlWarehouse = new VIS.Controls.VTextBoxButton("M_Warehouse_ID", true, true, true, VIS.DisplayType.Search, _ReqLookUpWarehouse); // columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup\n      this.$ReqControlWarehouse.getControl().css("width", "55%");\n      this.$ReqControlWarehouse.getBtn(0).css("height", "29px");\n      this.$ReqControlWarehouse.getBtn(0).css("margin-top", "-1px");\n      this.$ReqControlWarehouse.getBtn(0).css("width", "14%");\n      this.$ReqControlWarehouse.getBtn(1).css("height", "29px");\n      this.$ReqControlWarehouse.getBtn(1).css("margin-top", "-1px");\n      this.$ReqControlWarehouse.getBtn(1).css("width", "14%");\n      $warehouseSearch.append(this.$ReqControlWarehouse.getControl());\n      $warehouseSearch.append(this.$ReqControlWarehouse.getBtn(0));\n      $warehouseSearch.append(this.$ReqControlWarehouse.getBtn(1));\n\n      //this.$ReqControlWarehouse.fireValueChanged = locationChanged;\n\n      var WarehouseId = GetValuefromContext($self.windowNo, "M_Warehouse_ID");\n      $ReqControlWarehouse.setValue(WarehouseId);\n    }\n    ;\n\n    // Locator Control Load\n    function loadControlLocator() {\n      //_ReqLookUpLocator = VIS.MLookupFactory.get(VIS.Env.getCtx(), $self.windowNo, 3537, VIS.DisplayType.Locator, "M_Locator_ID", 0, false, null); //ctx, windowNo, column_ID, AD_Reference_ID, columnName, AD_Reference_Value_ID, isParent, validationCode\n      _ReqLookUpLocator = new VIS.MLocatorLookup(VIS.Env.getCtx(), $self.windowNo);\n      this.$ReqControlLocator = new VIS.Controls.VLocator("M_Locator_ID", true, true, true, VIS.DisplayType.Locator, _ReqLookUpLocator); // columnName, isMandatory, isReadOnly, isUpdateable, displayType, lookup\n      this.$ReqControlLocator.getControl().css("width", "55%");\n      this.$ReqControlLocator.getBtn(0).css("height", "29px");\n      this.$ReqControlLocator.getBtn(0).css("margin-top", "-1px");\n      this.$ReqControlLocator.getBtn(0).css("width", "14%");\n      this.$ReqControlLocator.getBtn(1).css("height", "29px");\n      this.$ReqControlLocator.getBtn(1).css("margin-top", "-1px");\n      this.$ReqControlLocator.getBtn(1).css("width", "14%");\n      $LocatorSearch.append(this.$ReqControlLocator.getControl());\n      $LocatorSearch.append(this.$ReqControlLocator.getBtn(0));\n      $LocatorSearch.append(this.$ReqControlLocator.getBtn(1));\n\n      //this.$ReqControlLocator.fireValueChanged = locationChanged;\n\n      var locatorId = GetValuefromContext($self.windowNo, "M_Locator_ID");\n      $ReqControlLocator.setValue(locatorId);\n    }\n    ;\n\n    // pick value from the context\n    function GetValuefromContext(windowNo, token) {\n      var value = VIS.context.getWindowContext(windowNo, token, false); // windowNo, context, onlyWindow\n      return value;\n    }\n    ;\n\n    /** Load Gid**/\n    function getProductContainer(Name, WarehouseId, LocatorId) {\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/ProductContainer",\n        data: {\n          Name: Name,\n          WarehouseId: WarehouseId,\n          LocatorId: LocatorId\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            createContainerGrid(result);\n          } else {\n            w2ui[grdname].clear();\n          }\n        },\n        error: function (er) {\n          console.log(er);\n        }\n      });\n    }\n    ;\n\n    /** Create Grids**/\n    function createContainerGrid(data) {\n      var grdCols = [];\n      var grdRows = [];\n      grdCols.push({\n        field: "ContainerName",\n        caption: VIS.Msg.getMsg("ContainerName"),\n        size: "15%"\n      });\n      grdCols.push({\n        field: "Width",\n        caption: VIS.Msg.getMsg("Width"),\n        size: "15%"\n      });\n      grdCols.push({\n        field: "Height",\n        caption: VIS.Msg.getMsg("Height"),\n        size: "15%"\n      });\n      grdCols.push({\n        field: "ParentPath",\n        caption: VIS.Msg.getMsg("ParentPath"),\n        size: "22%"\n      });\n      grdCols.push({\n        field: "M_ProductContainer_ID",\n        caption: VIS.Msg.getMsg("M_ProductContainer_ID"),\n        hidden: true\n      });\n      grdCols.push({\n        field: "Ref_M_Container_ID",\n        caption: VIS.Msg.getMsg("Ref_M_Container_ID"),\n        hidden: true\n      });\n      for (var j = 0; j < data.length; j++) {\n        var row = {};\n        row[\'M_ProductContainer_ID\'] = data[j].M_ProductContainer_ID;\n        row[\'Ref_M_Container_ID\'] = data[j].Ref_M_Container_ID;\n        row[\'ContainerName\'] = data[j].ContainerName;\n        row[\'ParentPath\'] = data[j].ParentPath;\n        row[\'Width\'] = data[j].Width;\n        row[\'Height\'] = data[j].Height;\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      grdname = \'PCont_gridContainer\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(grdRows);\n      CGrid = $ContainerGrid.w2grid({\n        name: grdname,\n        recordHeight: 20,\n        show: {\n          toolbar: false,\n          // indicates if toolbar is visible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: true,\n          // indicates if line numbers column is visible\n          selectColumn: false,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: grdCols,\n        records: grdRows,\n        onClick: function (event) {\n          //if (event.column < 8 && CGrid.records.length > 0) {\n          $selectedContainerId = CGrid.get(event.recid).M_ProductContainer_ID;\n          //}\n          //gridRecordId = [];\n          //gridRecordId.push(CGrid.get(event.recid).M_ProductContainer_ID);\n        }\n      });\n    }\n    ;\n\n    /** OK Button - update containe ID on Record**/\n    function updateProductContainer(TableName, RecordId, ContainerId) {\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/UpdateProductContainer",\n        data: {\n          TableName: TableName,\n          RecordId: RecordId,\n          ContainerId: ContainerId\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            w2alert(VIS.Msg.getMsg("VIS_UpdatedSuccess"));\n\n            // Re-Load container grid\n            var name = $root.find("#containerName_" + $self.windowNo)[0].value;\n            getProductContainer(name, $ReqControlWarehouse.value, $ReqControlLocator.value);\n            //$self.dispose();\n          } else {\n            w2alert(VIS.Msg.getMsg("VIS_NotUpdated"));\n          }\n        },\n        error: function (er) {\n          console.log(er);\n        }\n      });\n    }\n    ;\n\n    // Busy Indicator\n    function busyDiv(Value) {\n      $bsyDiv[0].style.visibility = Value;\n    }\n    ;\n    this.getRoot = function () {\n      return $root;\n    };\n    this.formSizeChanged = function (height, width) {};\n    this.sizeChanged = function (height, width) {};\n    disposeComponent = function () {\n      //$root.empty();\n      //$root.remove();\n      /**Create Main View Variable **/\n      var $mainpageContent = null;\n      var $formDataRow = null;\n      var $formLeftWrap = null;\n      var $formRightWrap = null;\n      var $formdata = null;\n      var $actionDiv = null;\n\n      // Left div Variables\n      var $lblName = null;\n      var $containerName = null;\n      var $lblWarehouse = null;\n      var $warehouseSearch = null;\n      var _ReqLookUpWarehouse = null;\n      this.$ReqControlWarehouse = null;\n      var $lblLocator = null;\n      var $LocatorSearch = null;\n      var _ReqLookUpLocator = null;\n      this.$ReqControlLocator = null;\n      var $searchRecordBtn = null;\n      var $okBtn = null;\n\n      /** Create Grid Variable**/\n      var $ContainerGrid = null;\n      var CGrid = null;\n      var grdname = null;\n      this.$selectedContainerId = null;\n    };\n  }\n  ;\n  productContainer.prototype.init = function (windowNo, frame) {\n    this.frame = frame;\n    this.windowNo = windowNo;\n    var obj = this.Initialize();\n    this.frame.getContentGrid().append(this.getRoot());\n    this.formSizeChanged();\n  };\n  productContainer.prototype.sizeChanged = function (height, width) {\n    this.formSizeChanged(height, width);\n  };\n  productContainer.prototype.refresh = function (height, width) {\n    this.formSizeChanged();\n  };\n\n  //Must implement dispose\n  productContainer.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    disposeComponent();\n\n    //call frame dispose function\n    this.frame = null;\n  };\n  VIS.AForms.productContainer = productContainer;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/forms/productContainer.js?')},"./Areas/VIS/Scripts/app/forms/productContainerMove.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Move Product Container.\r\n * Author         :     Amit Bansal\r\n * Date           :     26-July-2018\r\n  ******************************************************/\n;\n(function (VIS, $) {\n  VIS.AForms = VIS.AForms || {};\n  function productContainerMove() {\n    this.frame;\n    this.windowNo;\n    var $self = this;\n    var $root = $("<div style=\'height:100%;background-color:white;\' class=\'vis-forms-container\' >");\n    var $bsyDiv = $("<div class=\'vis-busyindicatorouterwrap\'><div class=\'vis-busyindicatorinnerwrap\'><i class=\'vis-busyindicatordiv\'></i></div></div>");\n\n    /**Create Main View Variable **/\n    var $mainpageContent = null;\n    var $formWrap = null;\n    var $formDataRow = null;\n    var $formData = null;\n    var $formDataR = null;\n    var $formData3 = null;\n    var $lblFromWarehouse = null;\n    var $cmbFromWarehouse = null;\n    var $lblToWarehouse = null;\n    var $cmbToWarehouse = null;\n    var $lblFromLocator = null;\n    var $cmbFromLocator = null;\n    var $lblToLocator = null;\n    var $cmbToLocator = null;\n    var $btnFromContainerTree = null;\n    var $lblFromContainer = null;\n    var $cmbFromContainer = null;\n    var $btnFromContainerTo = null;\n    var $lblToContainer = null;\n    var $cmbToContainer = null;\n\n    // configuration for open Popup\n    var config = null;\n    var $fromContainerPopUp = null;\n    var fromContainerDialog = null;\n    var $fromContainerParent;\n    var $fromContainerParentChild = null;\n    var $toContainerPopUp = null;\n    var toContainerDialog = null;\n    var $toContainerParent;\n    var $toContainerParentChild = null;\n    var $moveFullContainer = null;\n    var $lblMoveFullContainer = null;\n    var $withoutContainer = null;\n    var $lblWithoutContainer = null;\n    var $withContainer = null;\n    var $lblWithContainer = null;\n    var $formRightWrap = null;\n    var $containerGrid = null;\n    var CGrid = null;\n    this.grdname;\n    var $actionPanel = null;\n    var $buttons = null;\n    var $btnApply = null;\n    var $btnOk = null;\n    var $btnCancel = null;\n    var $labelMessage = null;\n    //Search Button\n    var $btnSearch = null;\n    var $txtSearch = null;\n    var $btnSearchTo = null;\n    var $txtSearchTo = null;\n\n    /* Variable for Paging*/\n    var PAGESIZE = 50;\n    var CurrentPage = 1;\n    var pageNoContainer = 1,\n      gridPgnoContainer = 1,\n      containerRecord = 0;\n    var isContainerGridLoaded = false;\n    var ttlPages = 1;\n    var fromContainerID = 0;\n    //To store multiple select values\n    var multiselectData = [];\n    this.Initialize = function () {\n      busyDiv(\'visible\');\n      createMainView();\n      bindEvents();\n      busyDiv(\'hidden\');\n    };\n    this.setHeight = function () {\n      return 700;\n    };\n    function createMainView() {\n      $mainpageContent = $(\'<div class="VIS_main-wrap vis-formouterwrpdiv">\');\n\n      // Row 1\n      $formWrap = $(\'<div class="VIS_form-wrap">\');\n      $formDataRow = $(\'<div class="VIS_form-row">\');\n      $formData = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      $lblFromWarehouse = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "M_Warehouse_ID") + \'</label>\');\n      $cmbFromWarehouse = $(\'<select disabled class="vis-ev-col-readonly">\');\n      $formData.append($formDataCtrlWrp);\n      $formDataCtrlWrp.append($cmbFromWarehouse).append($lblFromWarehouse);\n      $formDataR = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataRCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      $lblToWarehouse = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "M_WarehouseTo_ID") + \'</label>\');\n      $cmbToWarehouse = $(\'<select disabled class="vis-ev-col-readonly">\');\n      $formDataR.append($formDataRCtrlWrp);\n      $formDataRCtrlWrp.append($cmbToWarehouse).append($lblToWarehouse);\n      $formDataRow.append($formData).append($formDataR);\n      $formWrap.append($formDataRow);\n\n      // Row 2\n      $formDataRow = $(\'<div class="VIS_form-row">\');\n      $formData = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      $lblFromLocator = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "M_Locator_ID") + \'</label>\');\n      $cmbFromLocator = $(\'<select>\');\n      $formData.append($formDataCtrlWrp);\n      $formDataCtrlWrp.append($cmbFromLocator).append($lblFromLocator);\n      $formDataR = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataRCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      $lblToLocator = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "M_LocatorTo_ID") + \'</label>\');\n      $cmbToLocator = $(\'<select>\');\n      $formDataR.append($formDataRCtrlWrp);\n      $formDataRCtrlWrp.append($cmbToLocator).append($lblToLocator);\n      $formDataRow.append($formData).append($formDataR);\n      $formWrap.append($formDataRow);\n\n      // Row 3\n      $formDataRow = $(\'<div class="VIS_form-row">\');\n      $formData = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      var $formDataBtnWrp = $(\'<div class="input-group-append">\');\n      $lblFromContainer = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_FromContainer") + \'</label>\');\n      $cmbFromContainer = $(\'<select disabled class="VIS-container-move-combo-width" class="vis-ev-col-readonly" data-hasbtn=" ">\');\n      $btnFromContainerTree = $(\'<span class="fa fa-cubes input-group-text VIS_buttons-ContainerTree VIS-pallet-icon VIS_Tree-Container-disabled"></span>\');\n      $formData.append($formDataCtrlWrp);\n      $formDataCtrlWrp.append($cmbFromContainer).append($lblFromContainer);\n      $formData.append($formDataBtnWrp);\n      $formDataBtnWrp.append($btnFromContainerTree);\n      $formDataR = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataRCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      var $formDataRBtnWrp = $(\'<div class="input-group-append">\');\n      $lblToContainer = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "Ref_M_ProductContainerTo_ID") + \'</label>\');\n      $cmbToContainer = $(\'<select disabled class="VIS-container-move-combo-width" class="vis-ev-col-readonly" data-hasbtn=" ">\');\n      $btnToContainerTree = $(\'<span class="fa fa-cubes input-group-text VIS_buttons-ContainerTree VIS-pallet-icon VIS_Tree-Container-disabled"></span>\');\n      $formDataR.append($formDataRCtrlWrp);\n      $formDataRCtrlWrp.append($cmbToContainer).append($lblToContainer);\n      $formDataR.append($formDataRBtnWrp);\n      $formDataRBtnWrp.append($btnToContainerTree);\n      $formDataRow.append($formData).append($formDataR);\n      $formWrap.append($formDataRow);\n\n      // Row 4\n      $formDataRow = $(\'<div class="VIS_form-row">\');\n      $formData = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formDataCtrlWrp = $(\'<div class="vis-control-wrap">\');\n      var $ChkFullContainer = $(\'<label class="vis-ec-col-lblchkbox" title="\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_MoveFullContainerToolTip") + \'"><input type="checkbox" name="">\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_MoveFullContainer") + \'</label>\');\n      $formData.append($formDataCtrlWrp);\n      $formDataCtrlWrp.append($ChkFullContainer) /*.append($lblMoveFullContainer)*/;\n      $moveFullContainer = $ChkFullContainer.find(\'input\');\n\n      //$formDataR = $(\'<div class="VIS_form-col-checkbox">\');\n      //$withContainer = $(\'<input type="radio" name="WithContainer" disabled>\');\n      //$lblWithContainer = $(\'<label>\' + VIS.Msg.translate(VIS.Env.getCtx(),"VIS_WithContainer") + \'</label>\');\n      //$formDataR.append($withContainer).append($lblWithContainer);\n\n      $formData3 = $(\'<div class="VIS_form-col input-group vis-input-wrap">\');\n      var $formData3CtrlWrp = $(\'<div class="vis-control-wrap">\');\n      //$withoutContainer = $(\'<input type="radio" name="WithoutContainer" disabled>\');\n      var $ChkwithoutContainer = $(\'<label class="vis-ec-col-lblchkbox" title="\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_WithoutContainerToolTip") + \'"><input type="checkbox" name="WithoutContainer">\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_WithoutContainer") + \'</label>\');\n      $formData3.append($formData3CtrlWrp);\n      $formData3CtrlWrp.append($ChkwithoutContainer) /*.append($lblWithoutContainer)*/;\n      $withoutContainer = $ChkwithoutContainer.find(\'input\');\n      $formDataRow.append($formData).append($formData3);\n      $formWrap.append($formDataRow);\n\n      // Product Container Grid \n      $formRightWrap = $(\' <div class="VIS_outer-table-wrap">\');\n      $containerGrid = $(\'<div class="VIS_outer-table-wrap">\');\n      $formRightWrap.append($containerGrid);\n\n      //Action \n      $actionPanel = $(\'<div class="VIS_buttons-wrap">\');\n      $labelMessage = $(\'<div class="pull-left" style="display: none;"><label>\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_ContainerGridInfo") + \'</label></div>\');\n      $buttons = $(\'<div class="pull-right">\');\n      //$btnApply = $(\'<span class="btn">Apply</span>\');\n      //$btnCancel = $(\'<span class="btn">Cancel</span>\');\n      $btnOk = $(\'<span class="btn">\' + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_OK") + \'</span>\');\n      createPageSettings($buttons);\n      $buttons.append($btnOk);\n      $actionPanel.append($labelMessage).append($buttons);\n      $mainpageContent.append($formWrap).append($formRightWrap).append($actionPanel);\n      $root.append($mainpageContent).append($bsyDiv);\n    }\n    ;\n    function createPageSettings(buttonsdiv) {\n      ulPaging = $(\'<ul style="float:left;margin-top:4px" class="vis-statusbar-ul">\');\n      liFirstPage = $(\'<li style="display: none; "><div><i class="vis vis-shiftleft" title="\' + VIS.Msg.translate(VIS.Env.getCtx(), "FirstPage") + \'"  style="opacity: 0.6;"></i></div></li>\');\n      liPrevPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pageup" title="\' + VIS.Msg.translate(VIS.Env.getCtx(), "PageUp") + \'"  style="opacity: 0.6;"></i></div></li>\');\n      cmbPage = $("<select>");\n      liCurrPage = $(\'<li>\').append(cmbPage);\n      liNextPage = $(\'<li style="opacity: 1;"><div><i class="vis vis-pagedown" title="\' + VIS.Msg.translate(VIS.Env.getCtx(), "PageDown") + \'" style="opacity: 0.6;"></i></div></li>\');\n      liLastPage = $(\'<li style="display: none;"><div><i class="vis vis-shiftright" title="\' + VIS.Msg.translate(VIS.Env.getCtx(), "LastPage") + \'" style="opacity: 0.6;"></div></li>\');\n      ulPaging.append(liFirstPage).append(liPrevPage).append(liCurrPage).append(liNextPage).append(liLastPage);\n      buttonsdiv.append(ulPaging);\n\n      //pageEvents();\n    }\n    function pageEvents() {\n      liPrevPage.on("click", function (e) {\n        e.preventDefault();\n        if ($(this).css("opacity") == "1") {\n          busyDiv(\'visible\');\n          LoadProductContainerGrid(fromContainerID, true, -1);\n        }\n      });\n      liNextPage.on("click", function (e) {\n        e.preventDefault();\n        if ($(this).css("opacity") == "1") {\n          busyDiv(\'visible\');\n          LoadProductContainerGrid(fromContainerID, true, 1);\n        }\n      });\n      cmbPage.on("change", function (e) {\n        e.preventDefault();\n        busyDiv(\'visible\');\n        LoadProductContainerGrid(fromContainerID, true, 0);\n      });\n    }\n    function resetPageCtrls(CurrentPage, TotalPage) {\n      cmbPage.val(CurrentPage);\n      if (TotalPage > 0) {\n        if (TotalPage > CurrentPage) {\n          liNextPage.css("opacity", "1");\n        } else {\n          liNextPage.css("opacity", "0.6");\n        }\n        if (CurrentPage > 1) {\n          liPrevPage.css("opacity", "1");\n        } else {\n          liPrevPage.css("opacity", "0.6");\n        }\n        if (TotalPage == 1) {\n          liPrevPage.css("opacity", "0.6");\n          liNextPage.css("opacity", "0.6");\n        }\n      } else {\n        liPrevPage.css("opacity", "0.6");\n        liNextPage.css("opacity", "0.6");\n      }\n      busyDiv(\'hidden\');\n    }\n    function bindEvents() {\n      // load From warehouse\n      LoadFromWarehouse();\n\n      // Load From Locator\n      loadFromLocator();\n\n      // load To warehouse\n      loadToWarehouse();\n\n      // load To Locator\n      //loadToLocator();\n\n      // on selection of "From Locator" -- load "From Container"\n      $cmbFromLocator.on(\'change\', function () {\n        busyDiv(\'visible\');\n        $cmbFromContainer.empty();\n        if ($cmbFromLocator.val() == "0") {\n          $btnFromContainerTree.addClass("VIS_Tree-Container-disabled");\n        } else {\n          $btnFromContainerTree.removeClass("VIS_Tree-Container-disabled");\n        }\n        window.setTimeout(function () {\n          LoadProductContainerGrid(0, false, 0);\n        }, 20);\n        busyDiv(\'hidden\');\n      });\n\n      // on selection of "To Warehouse" -- load locator\n      $cmbToWarehouse.on(\'change\', function () {\n        busyDiv(\'visible\');\n        $cmbToContainer.empty();\n        loadToLocator();\n        busyDiv(\'hidden\');\n      });\n\n      // on selection of "To Locator" -- load "To Container"\n      $cmbToLocator.on(\'change\', function () {\n        busyDiv(\'visible\');\n        $cmbToContainer.empty();\n        if ($cmbToLocator.val() == "0") {\n          $btnToContainerTree.addClass("VIS_Tree-Container-disabled");\n        } else {\n          $btnToContainerTree.removeClass("VIS_Tree-Container-disabled");\n        }\n        busyDiv(\'hidden\');\n      });\n\n      // Load Grid\n      LoadProductContainerGrid(0, false, 0);\n\n      // Create Line on Movement Line \n      $btnOk.on("click", function () {\n        if ($cmbToWarehouse.val() == "0") {\n          VIS.ADialog.error("VIS_ToWarehouseNotSelected", true, "", "");\n          return false;\n        }\n        ;\n        if ($cmbFromLocator.val() == "0") {\n          VIS.ADialog.error("VIS_FromLocatorNotSelected", true, "", "");\n          return false;\n        }\n        ;\n        if ($cmbToLocator.val() == "0") {\n          VIS.ADialog.error("VIS_ToLocatorNotSelected", true, "", "");\n          return false;\n        }\n        ;\n        if ($cmbFromContainer.val() == null && $cmbToContainer.val() == null) {\n          // Need to select either "From Container" or "To Container"\n          // Otherwise no need to use Move container functionality\n          VIS.ADialog.error("VIS_SelectContainer", true, "", "");\n          return false;\n        }\n        var countRecordChanges = multiselectData.length;\n        if (countRecordChanges == 0 && !$withoutContainer.is(":checked") && !$moveFullContainer.is(":checked")) {\n          VIS.ADialog.error("VIS_MoveQtyNotSelected", true, "", "");\n          return false;\n        }\n        ;\n        if ($moveFullContainer.is(":checked")) {\n          VIS.ADialog.confirm("VIS_DoYouWantToDeleteManualCL", true, "", "Confirm", function (result) {\n            if (result) {\n              busyDiv(\'visible\');\n              SaveMovementLine();\n              busyDiv(\'hidden\');\n            } else return false;\n          });\n        } else {\n          busyDiv(\'visible\');\n          SaveMovementLine();\n          busyDiv(\'hidden\');\n        }\n      });\n\n      // Load Tree Structure for "From Container"\n      $btnFromContainerTree.on("click", function () {\n        //config.gridFromContainer();\n        if ($btnFromContainerTree.hasClass("VIS_Tree-Container-disabled")) {\n          return;\n        }\n        ;\n        var warehouse = $cmbFromWarehouse.val() == "0" || $cmbFromWarehouse.val() == null ? 0 : parseInt($cmbFromWarehouse.val());\n        var locator = $cmbFromLocator.val() == "0" || $cmbFromLocator.val() == null ? 0 : parseInt($cmbFromLocator.val());\n        var obj = new VIS.productContainerTree(warehouse, locator, null, null);\n        if (obj != null) {\n          obj.showDialog();\n          obj.onClosing = function (containerId, containerText) {\n            fromContainerID = containerId;\n            if (containerId > 0) {\n              $labelMessage.css("display", "block");\n            }\n            // set combo value - \n            $cmbFromContainer.empty();\n            $cmbFromContainer.append(" <option value=" + containerId + "  selected>" + containerText + "</option>");\n            multiselectData = []; // Empty Array\n            LoadProductContainerGrid(containerId, false, 0);\n          };\n        }\n        obj = null;\n      });\n\n      // Load Tree Structure for "To Container"\n      $btnToContainerTree.on("click", function () {\n        //config.TreeToContainer();\n        if ($btnToContainerTree.hasClass("VIS_Tree-Container-disabled")) {\n          return;\n        }\n        ;\n        var warehouse = $cmbToWarehouse.val() == "0" || $cmbToWarehouse.val() == null ? 0 : parseInt($cmbToWarehouse.val());\n        var locator = $cmbToLocator.val() == "0" || $cmbToLocator.val() == null ? 0 : parseInt($cmbToLocator.val());\n        var obj = new VIS.productContainerTree(warehouse, locator, null, null);\n        if (obj != null) {\n          obj.showDialog();\n          obj.onClosing = function (containerId, containerText) {\n            // set combo value - \n            $cmbToContainer.empty();\n            $cmbToContainer.append(" <option value=" + containerId + "  selected>" + containerText + "</option>");\n          };\n        }\n        obj = null;\n      });\n\n      // Is used to lock Grid\n      $moveFullContainer.change(function () {\n        if (this.checked) {\n          w2ui[grdname].lock(\'\');\n          $(this).prop("checked", true);\n          $withoutContainer.prop(\'checked\', false);\n\n          // disable = false\n          //$withoutContainer.prop("disabled", false);\n          //$withContainer.prop("disabled", false);\n\n          // set value as false\n          //$withoutContainer.attr(\'checked\', false);\n          //$withContainer.attr(\'checked\', false);\n        } else {\n          w2ui[grdname].unlock(\'\');\n          $(this).prop("checked", false);\n\n          //$withoutContainer.prop("disabled", true);\n          //$withContainer.prop("disabled", true);\n\n          //$withoutContainer.attr(\'checked\', false);\n          //$withContainer.attr(\'checked\', false);\n        }\n      });\n      $withoutContainer.change(function () {\n        if (this.checked) {\n          w2ui[grdname].lock(\'\');\n          $(this).prop("checked", true);\n          $moveFullContainer.prop(\'checked\', false);\n\n          //$withoutContainer.attr(\'checked\', true);\n          //$withContainer.attr(\'checked\', false);\n        } else {\n          w2ui[grdname].unlock(\'\');\n          $(this).prop("checked", false);\n        }\n      });\n      pageEvents();\n    }\n    ;\n\n    // load From warehouse\n    function LoadFromWarehouse() {\n      // get from warehouse id from the context\n      var fromWarehouse_ID = VIS.context.getWindowContext($self.windowNo, "DTD001_MWarehouseSource_ID", true); // windowNo, context, onlyWindow\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/LoadWarehouse",\n        data: {\n          fromWarehouse_ID: fromWarehouse_ID\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            for (var i = 0; i < result.length; i++) {\n              key = VIS.Utility.Util.getValueOfInt(result[i].ID);\n              value = VIS.Utility.Util.getValueOfString(result[i].Name);\n              $cmbFromWarehouse.append(" <option value=" + key + ">" + value + "</option>");\n            }\n          }\n          $cmbFromWarehouse.prop(\'selectedIndex\', 0);\n        },\n        error: function (er) {\n          busyDiv(\'hidden\');\n          console.log(er);\n        }\n      });\n    }\n    ;\n\n    // load from Locator\n    function loadFromLocator() {\n      // get from warehouse id from the context\n      var fromWarehouse_ID = VIS.context.getWindowContext($self.windowNo, "DTD001_MWarehouseSource_ID", true); // windowNo, context, onlyWindow\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/LoadLocator",\n        data: {\n          fromWarehouse_ID: fromWarehouse_ID\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            $cmbFromLocator.empty();\n            $cmbFromLocator.append("<option value= 0 >Select</option>");\n            for (var i = 0; i < result.length; i++) {\n              key = VIS.Utility.Util.getValueOfInt(result[i].ID);\n              value = VIS.Utility.Util.getValueOfString(result[i].Name);\n              $cmbFromLocator.append(" <option value=" + key + ">" + value + "</option>");\n            }\n          } else {\n            $cmbFromLocator.append("<option value= 0 >Select</option>");\n          }\n          $cmbFromLocator.prop(\'selectedIndex\', 0);\n        },\n        error: function (er) {\n          busyDiv(\'hidden\');\n          console.log(er);\n        }\n      });\n    }\n    ;\n\n    // load To warehouse\n    function loadToWarehouse() {\n      var fromWarehouse_ID = VIS.context.getWindowContext($self.windowNo, "M_Warehouse_ID", true); // windowNo, context, onlyWindow\n      if (fromWarehouse_ID == "") fromWarehouse_ID = 0;\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/LoadWarehouse",\n        data: {\n          fromWarehouse_ID: fromWarehouse_ID\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            for (var i = 0; i < result.length; i++) {\n              key = VIS.Utility.Util.getValueOfInt(result[i].ID);\n              value = VIS.Utility.Util.getValueOfString(result[i].Name);\n              $cmbToWarehouse.append(" <option value=" + key + ">" + value + "</option>");\n            }\n          }\n          $cmbToWarehouse.prop(\'selectedIndex\', 0);\n\n          // load To Locator\n          loadToLocator();\n        },\n        error: function (er) {\n          busyDiv(\'hidden\');\n          console.log(er);\n        }\n      });\n    }\n    ;\n\n    // load To Locator\n    function loadToLocator() {\n      var fromWarehouse_ID = $cmbToWarehouse.val() == "0" || $cmbToWarehouse.val() == null ? 0 : parseInt($cmbToWarehouse.val());\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/LoadLocator",\n        data: {\n          fromWarehouse_ID: fromWarehouse_ID\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            $cmbToLocator.empty();\n            $cmbToLocator.append("<option value= 0 >Select</option>");\n            for (var i = 0; i < result.length; i++) {\n              key = VIS.Utility.Util.getValueOfInt(result[i].ID);\n              value = VIS.Utility.Util.getValueOfString(result[i].Name);\n              $cmbToLocator.append(" <option value=" + key + ">" + value + "</option>");\n            }\n          } else {\n            $cmbToLocator.append("<option value= 0 >Select</option>");\n          }\n          $cmbToLocator.prop(\'selectedIndex\', 0);\n        },\n        error: function (er) {\n          busyDiv(\'hidden\');\n          console.log(er);\n        }\n      });\n    }\n    ;\n    function LoadProductContainerGrid(containerId, isReload, prvNextNo) {\n      pageNoContainer = 1, gridPgnoContainer = 1, containerRecord = 0;\n      isContainerGridLoaded = false;\n      //var container = ($cmbFromContainer.val() == "0" || $cmbFromContainer.val() == null) ? 0 : parseInt($cmbFromContainer.val());\n      var AD_Org_ID = parseInt(VIS.context.getWindowContext($self.windowNo, "AD_Org_ID", true)); // windowNo, context, onlyWindow\n      var date = VIS.context.getWindowContext($self.windowNo, "MovementDate", true); // windowNo, context, onlyWindow\n      var locator = $cmbFromLocator.val() == "0" || $cmbFromLocator.val() == null ? 0 : parseInt($cmbFromLocator.val());\n      //if grid is reloading than store the value of page combo in pageNoContainer\n      if (isReload) {\n        pageNoContainer = parseInt(cmbPage.val());\n        if (prvNextNo != 0) {\n          if (prvNextNo == -1) {\n            pageNoContainer = pageNoContainer - 1;\n            if (pageNoContainer < 1) pageNoContainer = 1;\n          } else if (prvNextNo == 1) {\n            pageNoContainer = pageNoContainer + 1;\n            if (pageNoContainer > ttlPages) pageNoContainer = ttlPages;\n          }\n        }\n      }\n      //if (containerId != 0 || locator != 0) {\n      $.ajax({\n        type: "POST",\n        url: VIS.Application.contextUrl + "ProductContainer/MoveContainer",\n        data: {\n          container: containerId,\n          movementDate: date,\n          AD_Org_ID: AD_Org_ID,\n          locator: locator,\n          page: pageNoContainer,\n          size: PAGESIZE\n        },\n        dataType: "json",\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result) {\n            if (pageNoContainer == 1 && result.length > 0) {\n              containerRecord = result[0].ContainerRecord;\n              gridPgnoContainer = Math.ceil(containerRecord / PAGESIZE);\n            }\n            createContainerGrid(result);\n            if (!isReload) {\n              ttlPages = gridPgnoContainer;\n              liCurrPage.find("option").remove();\n              if (gridPgnoContainer > 0) {\n                for (var i = 0; i < gridPgnoContainer; i++) {\n                  cmbPage.append($("<option value=" + (i + 1) + ">" + (i + 1) + "</option>"));\n                }\n              }\n              resetPageCtrls(CurrentPage, gridPgnoContainer);\n              cmbPage.val(pageNoContainer);\n            } else {\n              CurrentPage = pageNoContainer;\n              cmbPage.val(CurrentPage);\n              if (CurrentPage > 1) liPrevPage.css("opacity", "1");else liPrevPage.css("opacity", "0.6");\n              busyDiv(\'hidden\');\n            }\n            //$containerGrid.find(\'#grid_\' + grdname + \'_records\').on(\'scroll\', cartContainerScroll);\n            isContainerGridLoaded = true;\n          }\n        },\n        error: function (er) {\n          busyDiv(\'hidden\');\n          console.log(er);\n        }\n      });\n      //}\n    }\n    ;\n\n    /** Create Grids**/\n    function createContainerGrid(data) {\n      var grdCols = [];\n      var grdRows = [];\n      //  this.gridRowsData = [];\n      grdCols.push({\n        field: "ProductName",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "ProductName"),\n        size: "20%"\n      });\n      grdCols.push({\n        field: "ASI",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "ASI"),\n        size: "15%"\n      });\n      grdCols.push({\n        field: "UomName",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "UomName"),\n        size: "15%"\n      });\n      grdCols.push({\n        field: "ContainerQty",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "ContainerQty"),\n        size: "10%"\n      });\n      grdCols.push({\n        field: "MoveQty",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "MoveQty"),\n        editable: {\n          type: \'float\'\n        },\n        render: \'number:4\',\n        sortable: false,\n        size: "10%"\n      });\n      grdCols.push({\n        field: "M_ProductContainer_ID",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "M_ProductContainer_ID"),\n        hidden: true\n      });\n      grdCols.push({\n        field: "M_PRODUCT_ID",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "M_PRODUCT_ID"),\n        hidden: true\n      });\n      grdCols.push({\n        field: "M_AttributeSetInstance_ID",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "M_AttributeSetInstance_ID"),\n        size: "15%",\n        hidden: true\n      });\n      grdCols.push({\n        field: "C_Uom_ID",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "C_Uom_ID"),\n        size: "15%",\n        hidden: true\n      });\n      grdCols.push({\n        field: "M_Transaction_ID",\n        caption: VIS.Msg.translate(VIS.Env.getCtx(), "M_Transaction_ID"),\n        size: "15%",\n        hidden: true\n      });\n      for (var j = 0; j < data.length; j++) {\n        var row = {};\n        //row[\'Select\'] = false;\n        row[\'ProductName\'] = data[j].ProductName;\n        row[\'ASI\'] = data[j].ASI;\n        row[\'UomName\'] = data[j].UomName;\n        row[\'ContainerQty\'] = data[j].ContainerQty;\n        row[\'M_ProductContainer_ID\'] = data[j].M_ProductContainer_ID;\n        row[\'M_Product_ID\'] = data[j].M_Product_ID;\n        row[\'M_AttributeSetInstance_ID\'] = data[j].M_AttributeSetInstance_ID;\n        row[\'C_Uom_ID\'] = data[j].C_Uom_ID;\n        if (multiselectData.length > 0) {\n          var obj = $.map(multiselectData, function (value) {\n            if (value.M_Product_ID == data[j].M_Product_ID && value.M_AttributeSetInstance_ID == data[j].M_AttributeSetInstance_ID) {\n              return value;\n            }\n          });\n          if (obj.length > 0) row[\'MoveQty\'] = obj[0].MoveQty;else row[\'MoveQty\'] = 0;\n        } else row[\'MoveQty\'] = 0;\n        row[\'recid\'] = j + 1;\n        grdRows[j] = row;\n      }\n      //end\n      // create global array grid for paging\n      //  gridRowsData.push(grdRows);\n\n      grdname = \'MCont_gridContainer\' + Math.random();\n      grdname = grdname.replace(\'.\', \'\');\n      w2utils.encodeTags(grdRows);\n      CGrid = $containerGrid.w2grid({\n        name: grdname,\n        recordHeight: 20,\n        show: {\n          toolbar: false,\n          // indicates if toolbar is visible\n          columnHeaders: true,\n          // indicates if columns is visible\n          lineNumbers: true,\n          // indicates if line numbers column is visible\n          selectColumn: false,\n          // indicates if select column is visible\n          toolbarReload: false,\n          // indicates if toolbar reload button is visible\n          toolbarColumns: true,\n          // indicates if toolbar columns button is visible\n          toolbarSearch: false,\n          // indicates if toolbar search controls are visible\n          toolbarAdd: false,\n          // indicates if toolbar add new button is visible\n          toolbarDelete: false,\n          // indicates if toolbar delete button is visible\n          toolbarSave: false,\n          // indicates if toolbar save button is visible\n          selectionBorder: false,\n          // display border arround selection (for selectType = \'cell\')\n          recordTitles: false // indicates if to define titles for records\n        },\n        columns: grdCols,\n        records: grdRows,\n        multiSelect: false,\n        onClick: function (event) {},\n        onChange: function (event) {\n          if (event.column == 4 && event.value_new && event.value_new != 0) {\n            var MoveQty = event.value_new;\n            var ContainerQty = w2ui[grdname].get(event.recid).ContainerQty;\n            if (ContainerQty < 0 && MoveQty > 0) {\n              VIS.ADialog.error(\'VIS_CantbePositive\');\n              event.value_new = 0;\n              return false;\n            }\n            if (Math.abs(MoveQty) > Math.abs(ContainerQty)) {\n              VIS.ADialog.error(\'VIS_CantGreater\');\n              event.value_new = 0;\n              return false;\n            }\n            //Push the data into array for multiple selection\n            pushDataIntoArrayForSave(MoveQty, event.recid);\n          }\n        }\n      });\n      if ($moveFullContainer.is(":checked") || $withoutContainer.is(":checked")) {\n        w2ui[grdname].lock(\'\');\n      }\n    }\n    ;\n\n    // Save MovementLine\n    function SaveMovementLine() {\n      // initialize array\n      var moveData = [];\n\n      // check Full container \n      var isMoveContainer = $moveFullContainer.is(":checked");\n      var isWithoutContainer = false;\n      isWithoutContainer = $withoutContainer.is(":checked");\n      if (isMoveContainer && $cmbFromContainer.val() == null) {\n        // In Full Move Container movement, From Container is mandatory\n        VIS.ADialog.error("VIS_FullContainerMove", true, "", "");\n        return false;\n      }\n      var FromContainer = $cmbFromContainer.val() == "0" || $cmbFromContainer.val() == null ? 0 : parseInt($cmbFromContainer.val());\n      var ToContainer = $cmbToContainer.val() == "0" || $cmbToContainer.val() == null ? 0 : parseInt($cmbToContainer.val());\n      if (FromContainer == ToContainer) {\n        //From and To Container can\'t be same.\n        VIS.ADialog.error("VIS_ContainerCantSame", true, "", "");\n        return false;\n      }\n\n      // check length of selected record\n      var countRecordChanges = multiselectData.length;\n      if (countRecordChanges == 0 && !isMoveContainer && !isWithoutContainer) {\n        VIS.ADialog.error("VIS_MoveQtyNotSelected", true, "", "");\n        return false;\n      }\n      ;\n      // get record Id\n      var recordId = VIS.context.getWindowContext($self.windowNo, "M_Movement_ID", true);\n      if (countRecordChanges > 0 || isMoveContainer || isWithoutContainer) {\n        if (!isMoveContainer && !isWithoutContainer && countRecordChanges > 0) {\n          $.each(multiselectData, function () {\n            this.ToLocator = parseInt($cmbToLocator.val());\n            this.ToContainer = $cmbToContainer.val() == "0" || $cmbToContainer.val() == null ? 0 : parseInt($cmbToContainer.val());\n          });\n          moveData = multiselectData;\n        }\n\n        // when move full container (with or without qty)\n        if (isMoveContainer || isWithoutContainer) {\n          moveData = [];\n          for (var i = 0; i < w2ui[grdname].records.length; i++) {\n            var row = w2ui[grdname].records[i];\n            moveData.push({\n              M_Product_ID: row.M_Product_ID,\n              M_AttributeSetInstance_ID: row.M_AttributeSetInstance_ID,\n              C_UOM_ID: row.C_Uom_ID,\n              FromLocator: parseInt($cmbFromLocator.val()),\n              ToLocator: parseInt($cmbToLocator.val()),\n              FromContainer: $cmbFromContainer.val() == "0" || $cmbFromContainer.val() == null ? 0 : parseInt($cmbFromContainer.val()),\n              ToContainer: $cmbToContainer.val() == "0" || $cmbToContainer.val() == null ? 0 : parseInt($cmbToContainer.val()),\n              MoveQty: row.ContainerQty,\n              M_Movement_ID: recordId,\n              IsFullMoveContainer: isMoveContainer ? true : false,\n              IsfullContainerQtyWise: isWithoutContainer ? true : false\n            });\n            break;\n          }\n          ;\n          // when we move parent container and parent container not having any product, but child have \n          // then pass this limited inforrmation to server side -- for picking data of child record fo movement\n          if (moveData.length == 0 && isMoveContainer) {\n            moveData.push({\n              M_Product_ID: 0,\n              M_AttributeSetInstance_ID: 0,\n              C_UOM_ID: 0,\n              FromLocator: parseInt($cmbFromLocator.val()),\n              ToLocator: parseInt($cmbToLocator.val()),\n              FromContainer: $cmbFromContainer.val() == "0" || $cmbFromContainer.val() == null ? 0 : parseInt($cmbFromContainer.val()),\n              ToContainer: $cmbToContainer.val() == "0" || $cmbToContainer.val() == null ? 0 : parseInt($cmbToContainer.val()),\n              MoveQty: 0,\n              M_Movement_ID: recordId,\n              IsFullMoveContainer: isMoveContainer ? true : false,\n              IsfullContainerQtyWise: isWithoutContainer ? true : false\n            });\n          }\n        }\n        ;\n        if (moveData.length == 0) {\n          VIS.ADialog.error("VIS_MoveQtyNotSelected", true, "", "");\n          return false;\n        }\n\n        // Save Record\n        $.ajax({\n          url: VIS.Application.contextUrl + "ProductContainer/SaveMoveData",\n          type: \'POST\',\n          data: {\n            moveData: JSON.stringify(moveData)\n          },\n          success: function (result) {\n            if (JSON.parse(result) == "VIS_SuccessFullyInserted") {\n              VIS.ADialog.info("VIS_SuccessFullyInserted", true, "", "");\n            } else {\n              VIS.ADialog.error("Error", true, VIS.Msg.translate(VIS.Env.getCtx(), "VIS_NotInserted") + " - " + result, "");\n            }\n            //LoadProductContainerGrid(0 , false, 0);\n            $moveFullContainer.prop("checked", false);\n            $withoutContainer.prop("checked", false);\n            multiselectData = []; // Empty Array\n            $self.frame.close();\n          },\n          error: function (result) {\n            //disposeComponent();\n            //LoadProductContainerGrid(0, false , 0);\n            multiselectData = []; // Empty Array\n            $self.frame.close();\n            busyDiv(\'hidden\');\n          }\n        });\n      }\n    }\n    ;\n    function pushDataIntoArrayForSave(MoveQty, recid) {\n      var isMoveContainer = $moveFullContainer.is(":checked");\n      var isWithoutContainer = $withoutContainer.is(":checked");\n      // get record Id\n      var recordId = VIS.context.getWindowContext($self.windowNo, "M_Movement_ID", true);\n      var countRecordChanges = w2ui[grdname].getChanges().length;\n      // when product move from continer to container\n      if (MoveQty != 0) {\n        var row = w2ui[grdname].get(recid);\n        multiselectData.push({\n          M_Product_ID: row.M_Product_ID,\n          M_AttributeSetInstance_ID: row.M_AttributeSetInstance_ID,\n          C_UOM_ID: row.C_Uom_ID,\n          FromLocator: parseInt($cmbFromLocator.val()),\n          ToLocator: parseInt($cmbToLocator.val()),\n          FromContainer: $cmbFromContainer.val() == "0" || $cmbFromContainer.val() == null ? 0 : parseInt($cmbFromContainer.val()),\n          ToContainer: $cmbToContainer.val() == "0" || $cmbToContainer.val() == null ? 0 : parseInt($cmbToContainer.val()),\n          MoveQty: MoveQty,\n          M_Movement_ID: recordId,\n          IsFullMoveContainer: isMoveContainer ? true : false,\n          IsfullContainerQtyWise: isWithoutContainer ? true : false\n        });\n      }\n    }\n    ;\n\n    // Busy Indicator\n    function busyDiv(Value) {\n      $bsyDiv[0].style.visibility = Value;\n    }\n    ;\n    this.getRoot = function () {\n      return $root;\n    };\n    disposeComponent = function () {\n      $mainpageContent = null;\n      $formWrap = null;\n      $formDataRow = null;\n      $formData = null;\n      $formDataR = null;\n      $formData3 = null;\n      $lblFromWarehouse = null;\n      $cmbFromWarehouse = null;\n      $lblToWarehouse = null;\n      $cmbToWarehouse = null;\n      $lblFromLocator = null;\n      $cmbFromLocator = null;\n      $lblToLocator = null;\n      $cmbToLocator = null;\n      $lblFromContainer = null;\n      $cmbFromContainer = null;\n      $lblToContainer = null;\n      $cmbToContainer = null;\n\n      // configuration for open Popup\n      config = null;\n      $fromContainerPopUp = null;\n      fromContainerDialog = null;\n      $fromContainerParent;\n      $fromContainerParentChild = null;\n      $moveFullContainer = null;\n      $lblMoveFullContainer = null;\n      $withoutContainer = null;\n      $lblWithoutContainer = null;\n      $withContainer = null;\n      $lblWithContainer = null;\n      $formRightWrap = null;\n      $containerGrid = null;\n      CGrid = null;\n      this.grdname = null;\n      $actionPanel = null;\n      $buttons = null;\n      $btnApply = null;\n      $btnOk = null;\n      $btnCancel = null;\n      PAGESIZE = null;\n      pageNoContainer = null, gridPgnoContainer = null, containerRecord = null;\n      isContainerGridLoaded = null;\n      $self = null;\n      $root = null;\n    };\n  }\n  ;\n  productContainerMove.prototype.init = function (windowNo, frame) {\n    this.frame = frame;\n    this.windowNo = windowNo;\n    var obj = this.Initialize();\n    this.frame.getContentGrid().append(this.getRoot());\n  };\n\n  //Must implement dispose\n  productContainerMove.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    disposeComponent();\n\n    //call frame dispose function\n    this.frame = null;\n  };\n  VIS.AForms.productContainerMove = productContainerMove;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/forms/productContainerMove.js?')},"./Areas/VIS/Scripts/app/forms/productContainerTree.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Product Container Tree Structure\r\n * Author         :     Amit Bansal\r\n * Date           :     22-Oct-2018 \r\n  ******************************************************/\n\n;\n(function (VIS, $) {\n  // this constructor is having 3 parameter - based on this parameter - show Product Container Tree\n  function productContainerTree(warehouseId, locatorId, containerRef, validation) {\n    var $self = this;\n    this.onClose = null;\n    this.onClosing = null;\n\n    // configuration for open Popup\n    var $ContainerPopUp = null;\n    var ContainerDialog = null;\n    var $ContainerParent;\n    var $ContainerParentChild = null;\n    var $btnSearch = null;\n    var $txtSearch = null;\n    var $btnSave = null;\n    var $btnAdd = null;\n    var $btnCancel = null;\n    var divContainer = null;\n    var $_DialogOKCancelProductContainer;\n    var $labelInfo = null;\n    this.showDialog = function () {\n      var param;\n      var info = "";\n      if (validation != null) {\n        param = getLocatorFromValidation(validation);\n      } else if (locatorId > 0) {\n        param = locatorId;\n      }\n      ;\n      if (param != null) {\n        info = VIS.dataContext.getJSONRecord("ProductContainer/GetWarehouseAndLocatorName", param);\n      }\n      // var info = "avc";\n      // Create Dialog design\n      $ContainerPopUp = $("<div class=\'vis-formouterwrpdiv\' style=\'float: left; width: 100%;min-height:480px; max-height:480px !important\'></div>");\n      var $_ContainerPopUp;\n      var $_CreateNewProductContainer;\n      //var $_CancelProductContainer;\n\n      $_CreateNewProductContainer = $("<div id=\'AddNewContainer\' style=\'float: left; width: 100%; display:none;\'>" + "<div class=\'VIS_form-data-row\'>" + "<div class=\'VIS_form-data-col input-group vis-input-wrap\'><div class=\'vis-control-wrap\'>" // style=\'float: left; width: 50%; margin-bottom:10px;\n      + "<input id=\'VIS_SearchValue\' type=\'text\' placeholder=\' \' data-placeholder=\'\'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Value") + "</label>" + "</div></div>" // style=\'width: 96%;\'\n      + "<div class=\'VIS_form-data-col input-group vis-input-wrap\'><div class=\'vis-control-wrap\'>" // style=\'float: left; width: 50%; margin-bottom:10px;\'\n      + "<input id=\'VIS_Name\' type=\'text\' class=\'vis-ev-col-mandatory\' placeholder=\' \' data-placeholder=\'\'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Name") + "</label>" + "</div></div>" //style=\'width: 96%;\'\n      + "</div>" + "<div class=\'VIS_form-data-row\'>" + "<div class=\'VIS_form-data-col input-group vis-input-wrap\'><div class=\'vis-control-wrap\'>" // style=\'float: left; width: 50%; margin-bottom:10px;\'\n      + "<input id=\'VIS_Height\' type=\'Number\' placeholder=\' \' data-placeholder=\'\'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Height") + "</label>" + "</div></div>" //style=\'width: 96%;\'\n      + "<div class=\'VIS_form-data-col input-group vis-input-wrap\'><div class=\'vis-control-wrap\'>" //style=\'float: left; width: 50%; margin-bottom:10px;\'\n      + "<input id=\'VIS_Width\' type=\'Number\' placeholder=\' \' data-placeholder=\'\'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Width") + "</label>" + "</div></div>" // style=\'width: 96%;\'\n      + "</div>" + "<div class=\'VIS_form-data-row\' style=\'display: none;\'>" + "<div class=\'VIS_form-data-col\'>" //style=\'float: left; width: 50%; margin-bottom:10px;\'\n      + "<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Ref_M_Container_ID") + "</label>" + "</div>" + "</div>" + "</div>");\n      $_ContainerPopUp = $("<div class=\'VIS_form-data-row\'>" + "<div class=\'VIS_form-search-wrap input-group vis-input-wrap\'><div class=\'vis-control-wrap\'>" + "<input class=\'VIS_form-search-wrap input\' id=\'VIS_Search\' type=\'text\' placeholder=\'Search Here...\' data-hasbtn=\' \'></div>" + "<div class=\'input-group-append\'><button class=\'VIS_form-search-wrap button input-group-text\' id=VIS_BtnSearch title=" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_Search") + "><i class=\'vis vis-search\'></i></button>" + "<button class=\'VIS_form-search-wrap button input-group-text\' id=VIS_BtnAdd title=" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_NewContainer") + "><i class=\'vis vis-plus\'></i></button>" + "<button class=\'VIS_form-search-wrap button input-group-text\' style=\'display:none;\' id=VIS_BtnSave title=" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_SaveContainer") + "><i class=\'vis vis-save\'></i></button>" + "<button class=\'VIS_form-search-wrap button input-group-text\' style=\'display:none;\' id=VIS_BtnCancel title=" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_Cancel") + "><i class=\'vis vis-mark\'></i></button>" + "</div></div>");\n      $ContainerParentChild = $("<div id=\'VIS_ContainerParentChild\' class=\'VIS_Tree-Container\' ></div>"); //style=\'height:400px; float: left; width: 100%;\'\n\n      //$_CancelProductContainer = $("<div id=\'VIS_CancelProductContainer\' class=\'VIS_buttons-wrap VIS_pop-btn-wrap\'>"\n      //                            + " <span class=\'btn\' style=\'display:none;\' id=VIS_BtnCancel1>" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_Cancel") + "</span>"\n      //                            + " </div>");\n\n      $_DialogOKCancelProductContainer = $("<div id=\'VIS_DialogOKCancelProductContainer\' class=\'VIS_buttons-wrap VIS_pop-btn-wrap\' style=\'display:block;\'>" + " <span class=\'btn\' id=VIS_DialogOK>" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_DialogOK") + "</span>" + " <span class=\'btn\' id=VIS_DialogCancel>" + VIS.Msg.translate(VIS.Env.getCtx(), "VIS_DialogCancel") + "</span>" + " </div>");\n      $labelInfo = $("<div id=\'VIS_LabelInfo\' class=\'VIS_Tree-Container-labelInfo\'>" // style=\'height:10px; float: left; width: 100%; display:none;\'\n      + "<label>" + info + "</label>" + "</div>");\n      $_ContainerPopUp.append($ContainerParentChild);\n      $ContainerPopUp.append($_CreateNewProductContainer).append($_ContainerPopUp).append($_DialogOKCancelProductContainer).append($labelInfo);\n      ContainerDialog = new VIS.ChildDialog();\n      ContainerDialog.setContent($ContainerPopUp);\n      ContainerDialog.setTitle(VIS.Msg.translate(VIS.Env.getCtx(), "VIS_Container"));\n      ContainerDialog.setWidth("450px");\n      ContainerDialog.setEnableResize(false);\n      ContainerDialog.setModal(true);\n      ContainerDialog.show();\n      ContainerDialog.hidebuttons();\n\n      //Get Control Search\n      $btnSearch = $ContainerPopUp.find("#VIS_BtnSearch");\n      $txtSearch = $ContainerPopUp.find("#VIS_Search");\n      $searchInput = $ContainerPopUp.find("#VIS_SearchValue");\n      $NameInput = $ContainerPopUp.find("#VIS_Name");\n      $HeightInput = $ContainerPopUp.find("#VIS_Height");\n      $WidthInput = $ContainerPopUp.find("#VIS_Width");\n      $btnAdd = $ContainerPopUp.find("#VIS_BtnAdd");\n      $btnSave = $ContainerPopUp.find("#VIS_BtnSave");\n      $btnCancel = $ContainerPopUp.find("#VIS_BtnCancel");\n      $DialogbtnOk = $ContainerPopUp.find("#VIS_DialogOK");\n      $DialogbtnCancel = $ContainerPopUp.find("#VIS_DialogCancel");\n\n      // OK Click Event\n      //ContainerDialog.onOkClick = function () {\n      $DialogbtnOk.click(function (e) {\n        var treeStructure = $ContainerParentChild;\n        var length = $(treeStructure).find(".current").length;\n        if (length > 1) {\n          VIS.ADialog.error("VIS_SelectSingleContainer", true, "", "");\n          return false;\n        }\n        if (length > 0) {\n          var containerId = parseInt($(treeStructure).find(".current")[0].htmlFor);\n          var containerText = $($(treeStructure).find(".current")[0]).text();\n\n          // on close passing container ID and its name -- from where this dialog is opened\n          //ContainerDialog.onClose = function () {\n\n          $self.onClosing(containerId, containerText);\n          ContainerDialog.close();\n          //if ($self.onClose) $self.onClose();\n          //}\n        } else {\n          ContainerDialog.close();\n        }\n      });\n\n      // Close dialog box\n      $DialogbtnCancel.click(function (e) {\n        ContainerDialog.close();\n      });\n      if (containerRef) {\n        $txtSearch.val(containerRef);\n      }\n\n      // Load data\n      loadgrdContainer(callbackController);\n\n      //Add Button Click event\n      $btnAdd.click(function (e) {\n        // Show control of -- creation of new product Container\n        ShowNewContainerControl();\n      });\n\n      //Cancel Button Click event\n      $btnCancel.click(function (e) {\n        // hide control of -- creation of new product Container\n        HideNewContainerControl();\n\n        // clear container fields\n        clearContainerfields();\n      });\n\n      //Save Button Click event\n      $btnSave.click(function (e) {\n        // Container Name should be mandatory\n        if ($NameInput.val() == "") {\n          VIS.ADialog.error("VIS_ContainerNameNotSelected", true, "", "");\n          return false;\n        }\n        var abc = validation;\n        // Need to define wither waehouse of locator for saving product container\n        if (warehouseId == "" && locatorId == "" && validation == "") {\n          VIS.ADialog.error("VIS_WarehouseOrLocatorNotFound", true, "", "");\n          return false;\n        } else if (validation != null) {\n          var token;\n          validation = validation.toUpperCase();\n          if (validation.contains("M_LOCATOR_ID")) {\n            token = validation.substr(validation.indexOf("M_LOCATOR_ID=") + 13, validation.length);\n          } else if (validation.contains("M_LOCATORTO_ID")) {\n            token = validation.substr(validation.indexOf("M_LOCATORTO_ID=") + 15, validation.length);\n          }\n          if (token != undefined) {\n            if (token.contains("AND")) {\n              locatorId = token.substr(0, token.indexOf("AND")).trim();\n            } else {\n              locatorId = token.trim();\n            }\n            if (parseInt(locatorId) == 0) {\n              VIS.ADialog.error("VIS_WarehouseOrLocatorNotFound", true, "", "");\n            }\n          }\n        }\n\n        // find parent container \n        var treeStructure = $ContainerParentChild;\n        var length = $(treeStructure).find(".current").length;\n        var parentContainerId = 0;\n        if (length <= 1) {\n          if ($(treeStructure).find(".current")[0] != undefined) {\n            parentContainerId = parseInt($(treeStructure).find(".current")[0].htmlFor);\n          }\n        } else {\n          VIS.ADialog.error("VIS_SelectSingleContainer", true, "", "");\n          return false;\n        }\n\n        // Save new record of Product Container\n        SaveContainer($searchInput.val(), $NameInput.val(), $HeightInput.val() == "" ? 0 : $HeightInput.val(), $WidthInput.val() == "" ? 0 : $WidthInput.val(), parentContainerId);\n      });\n    };\n    function getLocatorFromValidation(validation) {\n      var token;\n      validation = validation.toUpperCase();\n      if (validation.contains("M_LOCATOR_ID")) {\n        token = validation.substr(validation.indexOf("M_LOCATOR_ID=") + 13, validation.length);\n      } else if (validation.contains("M_LOCATORTO_ID")) {\n        token = validation.substr(validation.indexOf("M_LOCATORTO_ID=") + 15, validation.length);\n      }\n      if (token != undefined) {\n        if (token.contains("AND")) {\n          token = token.substr(0, token.indexOf("AND")).trim();\n        } else {\n          token = token.trim();\n        }\n      }\n      return token;\n    }\n    ;\n\n    // Get From Controller Data \n    function loadgrdContainer(callback) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "ProductContainer/LoadContainerAsTree",\n        type: "GET",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        data: {\n          warehouse: warehouseId,\n          locator: locatorId,\n          container: 0,\n          validation: validation\n        },\n        success: function (data) {\n          callback(data);\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorLoadingFromController");\n        }\n      });\n    }\n    ;\n\n    // callback function for loading containers in Tree Structure\n    function callbackController(data) {\n      $ContainerParent = \'<div id=containerParent style="width:100%;height:400px">\' + \'<div>\' + \'<div class="well VIS_tree-container" style="width:100%;float: left;">\' + \'<div id=containerParent1 style="overflow-y: auto;height: 383px;">\' + \'<ul class="nav nav-list">\';\n      var result = JSON.parse(data);\n      for (var j = 0; j < result.length; j++) {\n        // Represent Parent\n        if (j == 0) {\n          Ascendent(result[j], result[j].Level);\n          continue;\n        }\n        // Represent Child\n        else if (result[j - 1].Level < result[j].Level) {\n          $ContainerParent += \'<ul class="nav nav-list tree" style="display: none;">\';\n          Ascendent(result[j], result[j].Level);\n          if (j + 1 == result.length) {\n            $ContainerParent += \'</li> </ul>\';\n          }\n          continue;\n        }\n        // represent also child\n        else if (result[j - 1].Level == result[j].Level && result[j].Level != 1) {\n          $ContainerParent += \'</li>\';\n          Ascendent(result[j], result[j].Level);\n          if (j + 1 == result.length) {\n            $ContainerParent += \'</li>\';\n          }\n          continue;\n        }\n        // represent also child\n        else if (result[j - 1].Level > result[j].Level && result[j].Level != 1) {\n          // closingTag();\n          if (result[j - 1].Level > result[j].Level) {\n            var level = result[j - 1].Level - result[j].Level;\n            for (var l = 0; l < level; l++) {\n              closingTag();\n            }\n          }\n          Ascendent(result[j], result[j].Level);\n          if (j + 1 == result.length) {\n            $ContainerParent += \'</li>\';\n          }\n          continue;\n        }\n        // Represent Parent\n        else if (result[j].Level == 1) {\n          if (result[j - 1].Level > result[j].Level) {\n            var level = result[j - 1].Level - 1;\n            for (var l = 0; l < level; l++) {\n              closingTag();\n            }\n          }\n          $ContainerParent += \'</li>\';\n          $ContainerParent += \'<li class="divider"></li>\';\n          Ascendent(result[j], result[j].Level);\n          if (j + 1 == result.length) {\n            $ContainerParent += \'</li>\';\n          }\n          continue;\n        }\n      }\n      $ContainerParent += \'</ul> </div> </div> </div> </div>\';\n      //$ContainerParentChild.append($ContainerParent);\n      $("#VIS_ContainerParentChild").html($ContainerParent);\n      $ContainerParentChild = $("#VIS_ContainerParentChild")[0];\n\n      //To add "overflow: hidden" property on the content dialog \n      //$($ContainerParentChild).parents(\'.ui-dialog-content\').css(\'overflow\', \'hidden\');\n\n      $(\'label.tree-toggler\').click(function (e) {\n        var treeStructure = $($ContainerParentChild);\n        // remove class\n        treeStructure.find(".nav-header").removeClass("current");\n        // Add class\n        //$($(this).parent().context).addClass(\'current\')\n        // after bootstrap 4\n        $($(this)).addClass(\'current\');\n        // toggle records\n        $(this).parent().children(\'ul.tree\').toggle(300);\n      });\n\n      //Search Button Click event\n      $btnSearch.click(function (e) {\n        if ($txtSearch.val() != "") {\n          searchResults($($ContainerParentChild), $txtSearch.val());\n        }\n        if ($txtSearch.val() == "") {\n          //remove class\n          $($ContainerParentChild).find(".nav-header").removeClass("current");\n        }\n      });\n      if (containerRef) {\n        $btnSearch.trigger("click");\n      }\n\n      // is used to search container in Tree\n      $(document).keypress(function (event) {\n        var keycode = event.keyCode ? event.keyCode : event.which;\n        if (keycode == 13) event.preventDefault();\n        if (keycode == \'13\') {\n          if ($txtSearch.val() != "") {\n            searchResults($($ContainerParentChild), $txtSearch.val());\n          } else {\n            // remove class\n            // $($ContainerParentChild).find(".nav-header").removeClass("current");\n          }\n        }\n      });\n\n      // is used to set update Interface Of Container Name\n      $(document).keyup(function (event) {\n        if ($NameInput.val() != "") {\n          $NameInput.css(\'background-color\', SetMandatory(false));\n        } else {\n          $NameInput.css(\'background-color\', SetMandatory(true));\n        }\n      });\n    }\n    ;\n\n    // Creating (ul - li) tag for Tree\n    function Ascendent(record, level) {\n      if (level == 1) $ContainerParent += \'<li data-value=\' + record.M_ProductContainer_ID + \' class="First">\';else $ContainerParent += \'<li data-value=\' + record.M_ProductContainer_ID + \'>\';\n      $ContainerParent += \'<label class="tree-toggler nav-header" for=\' + record.M_ProductContainer_ID + \'>\' + record.ContainerName + \'\' + \'<span class="vis-treewindow-span"><span class="vis-css-treewindow-arrow-up"></span></span></label>\';\n    }\n    ;\n\n    // closing tag \n    function closingTag() {\n      $ContainerParent += \'</li> </ul>\';\n    }\n    ;\n\n    // use for searching container by its name\n    function searchResults(e, val) {\n      var labelFound = e.find("label:contains(\'" + val + "\')");\n      $("label").removeClass("current");\n      labelFound.addClass(\'current\');\n      //Toggle\n      if ($(labelFound).parents(".First").find(\'ul.tree:last-child\').css(\'display\') == \'none\') {\n        $(labelFound).parents(".First").find(\'ul.tree:last-child\').toggle();\n        $(labelFound).parents(".First").find(\'ul.tree:last-child\').css(\'display\', \'block\');\n      } else {\n        $(labelFound).parents(".First").find(\'ul.tree:last-child\').css(\'display\', \'block\');\n      }\n      labelFound[0].scrollIntoView();\n    }\n    ;\n\n    // Save new record of Product Container\n    function SaveContainer(value, name, height, width, parentContainerId) {\n      $.ajax({\n        url: VIS.Application.contextUrl + "ProductContainer/SaveContainer",\n        datatype: "json",\n        async: false,\n        contentType: "application/json; charset=utf-8",\n        data: {\n          warehouseId: warehouseId,\n          locatorId: locatorId,\n          value: value,\n          name: name,\n          height: height,\n          width: width,\n          parentContainerId: parentContainerId\n        },\n        success: function (data) {\n          if (JSON.parse(data) == "") {\n            VIS.ADialog.info("VIS_ContainerInserted", true, "", "");\n            $($ContainerParentChild).empty();\n            $ContainerParentChild = $("<div id=\'VIS_ContainerParentChild\' style=\'height:382px; float: left; width: 100%;\'></div>");\n            // Load data\n            loadgrdContainer(callbackController);\n\n            // hide control of -- creation of new product Container\n            HideNewContainerControl();\n\n            // clear container fields\n            clearContainerfields();\n          } else {\n            VIS.ADialog.error("", true, JSON.parse(data), "");\n          }\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorLoadingFromController");\n        }\n      });\n    }\n    ;\n\n    // show Inteface as mandatory or not\n    function SetMandatory(value) {\n      if (value) return \'#FFB6C1\';else return \'White\';\n    }\n    ;\n\n    //hide control of -- creation of new product Container\n    function HideNewContainerControl() {\n      divContainer = $ContainerPopUp.find("#AddNewContainer");\n      divContainer[0].style.display = "none";\n      $btnAdd[0].style.display = "flex";\n      $btnSave[0].style.display = "none";\n      $btnCancel[0].style.display = "none";\n      $ContainerPopUp.find("#VIS_DialogOKCancelProductContainer")[0].style.display = "block";\n      $ContainerPopUp.find("#containerParent").css(\'height\', \'400px\');\n      $ContainerPopUp.find("#containerParent1").css(\'height\', \'383px\');\n      $ContainerPopUp.find("#VIS_ContainerParentChild").css(\'height\', \'382px\');\n      $labelInfo[0].style.display = "none";\n    }\n    ;\n\n    //show control of -- creation of new product Container\n    function ShowNewContainerControl() {\n      divContainer = $ContainerPopUp.find("#AddNewContainer");\n      divContainer[0].style.display = "block";\n      $btnAdd[0].style.display = "none";\n      $btnSave[0].style.display = "flex";\n      $btnCancel[0].style.display = "flex";\n      $ContainerPopUp.find("#VIS_DialogOKCancelProductContainer")[0].style.display = "none";\n      $ContainerPopUp.find("#containerParent").css(\'height\', \'295px\');\n      $ContainerPopUp.find("#containerParent1").css(\'height\', \'275px\');\n      $ContainerPopUp.find("#VIS_ContainerParentChild").css(\'height\', \'265px\');\n      $labelInfo[0].style.display = "block";\n    }\n\n    // Clear Text fields\n    function clearContainerfields() {\n      $searchInput.val("");\n      $NameInput.val("");\n      $HeightInput.val("");\n      $WidthInput.val("");\n    }\n    ;\n    jQuery.expr[\':\'].contains = function (a, i, m) {\n      return jQuery(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n    };\n    this.disposeComponent = function () {\n      $self = null;\n      $ContainerPopUp = null;\n      ContainerDialog = null;\n      $ContainerParent;\n      $ContainerParentChild = null;\n      $btnSearch = null;\n      $txtSearch = null;\n      $labelInfo = null;\n      $btnSave = null;\n      $btnAdd = null;\n      $btnCancel = null;\n      divContainer = null;\n      $_DialogOKCancelProductContainer;\n      this.disposeComponent = null;\n    };\n  }\n\n  //dispose call\n  productContainerTree.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n  };\n\n  //Load form into VIS\n  VIS.productContainerTree = productContainerTree;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/forms/productContainerTree.js?')},"./Areas/VIS/Scripts/app/grouprights/createrole.js":()=>{eval(';\n(function (VIS, $) {\n  function createrole(groupID) {\n    var $root = $(\'<div>\');\n    var ch = null;\n    var $txtRole = null;\n    var $cmbUserLevel = null;\n    var $btnOrgAccess = null;\n    var $btnSave = null;\n    var orgAccesses = null;\n    var self = this;\n    var $bsyDiv = null;\n    this.intialize = function () {\n      //createBusyIndicator();\n      createLayout();\n      eventHandling();\n    };\n    function createLayout() {\n      var script = \'<div class="vis-group-assinRole-content">\' + \'<div class="vis-group-assinRole-data"><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<input tabindex="1" maxlength="60" data-placeholder="" placeholder=" " class="vis-group-role-text vis-ev-col-mandatory" type="text"><label>\' + VIS.Msg.getMsg("Role") + \'</label>\' + \'</div></div></div>\' + \'<div class="vis-group-assinRole-data"><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<select  tabindex="2"  class="vis-group-role-select" >\' + \'</select>\' + \'<label>\' + VIS.Msg.getMsg("VIS_UserLevel") + \'</label>\' + \'</div></div></div>\' + \'<div class="vis-group-assinRole-data vis-group-asignrole-btnwrap">\' + \'<a style="float:left"  tabindex="3"  class="vis-group-btn vis-group-orgAccess vis-group-pointer vis-group-grayBtn">\' + VIS.Msg.getMsg("VIS_OrgAccess") + \'</a>\' + \'<a  tabindex="4"  class="vis-group-btn vis-group-Save vis-group-pointer vis-group-grayBtn" style="float: right;">\' + VIS.Msg.getMsg("Save") + \'</a>\' + \'</div>\' + \'</div>\';\n      $root.append(script);\n      $txtRole = $root.find(\'.vis-group-role-text\');\n      $cmbUserLevel = $root.find(\'.vis-group-role-select\');\n      $btnOrgAccess = $root.find(\'.vis-group-orgAccess\');\n      $btnSave = $root.find(\'.vis-group-Save\');\n      createBusyIndicator();\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/GetUserLevel",\n        success: function (result) {\n          var data = JSON.parse(result);\n          if (data != null && data.length > 0) {\n            for (var i = 0; i < data.length; i++) {\n              $cmbUserLevel.append(\'<option value="\' + data[i].ID + \'">\' + data[i].Name + \'</option>\');\n            }\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*\r\n     Create busyIndicator\r\n    */\n    function createBusyIndicator() {\n      $bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      $bsyDiv[0].style.visibility = "hidden";\n      $root.append($bsyDiv);\n    }\n    function eventHandling() {\n      $btnOrgAccess.on("click", orgAccess);\n      $btnOrgAccess.on("keydown", orgAccessTabClick);\n      $btnSave.on("click", save);\n      $btnSave.on("keydown", saveTabClick);\n      $txtRole.on("change", checkRoleName);\n    }\n    ;\n    function orgAccessTabClick(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      orgAccess();\n    }\n    ;\n    function saveTabClick(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      save();\n    }\n    ;\n    function checkRoleName() {\n      if ($txtRole.val().length > 0) {\n        $txtRole.removeClass(\'vis-group-mandatory\');\n      } else {\n        $txtRole.addClass(\'vis-group-mandatory\');\n      }\n    }\n    ;\n    function orgAccess() {\n      var orgaccess = new VIS.orgAccess(self.setSelectedOrg);\n      window.setTimeout(function () {\n        orgaccess.intialize();\n        orgaccess.show();\n      }, 20);\n    }\n    ;\n    function save() {\n      var roleName = $txtRole.val();\n      var usrLEvel = $cmbUserLevel.val();\n      if (roleName == null || roleName == undefined || roleName == "") {\n        VIS.ADialog.info("VIS_PleaseName");\n        return;\n      }\n      if (orgAccesses == undefined || orgAccesses == null || orgAccesses == "" || orgAccesses.length == 0) {\n        VIS.ADialog.info("VIS_SelectOrgAccess");\n        return;\n      }\n      if (usrLEvel == null || usrLEvel == undefined || usrLEvel == "" || usrLEvel == -1) {\n        VIS.ADialog.info("VIS_SelectUserLevel");\n        return;\n      }\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/AddNewRole",\n        data: {\n          name: roleName,\n          userLevel: usrLEvel,\n          orgID: JSON.stringify(orgAccesses)\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          if (data.length > 0) {\n            VIS.ADialog.error(data);\n          } else {\n            VIS.ADialog.info("Record saved successfully");\n            ch.close();\n          }\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorSavingRole");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n      //AddNewRole\n    }\n    ;\n    this.setSelectedOrg = function (value) {\n      orgAccesses = value;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setContent($root);\n\n      //ch.setHeight(428);\n      ch.setWidth(550);\n      ch.setTitle(VIS.Msg.getMsg("VIS_CreateRole"));\n      ch.setModal(true);\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        self.dispose();\n        self = null;\n      };\n      ch.show();\n      ch.hideButtons();\n    };\n    this.dispose = function () {\n      $txtRole.remove();\n      $txtRole = null;\n      $cmbUserLevel.remove();\n      $cmbUserLevel = null;\n      $btnOrgAccess.remove();\n      $btnOrgAccess = null;\n      $btnSave.remove();\n      $btnSave = null;\n      $root.remove();\n      $root = null;\n      ch = null;\n    };\n  }\n  ;\n  VIS.createrole = createrole;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/grouprights/createrole.js?')},"./Areas/VIS/Scripts/app/grouprights/createuser.js":()=>{eval(';\n(function (VIS, $) {\n  function createUser() {\n    var $root = null;\n    var $rootChild = null;\n    //  var $btnOrgAccess = null;\n    var $btnCreateUser = null;\n    var $btnInviteUser = null;\n    var $btnSave = null;\n    var $txtEmail = null;\n    var $txtName = null;\n    var $txtUID = null;\n    var $txtPwd = null;\n    var $txtMobile = null;\n    var ch = null;\n    var self = this;\n    var orgAccesses = null;\n    var $bsyDiv = null;\n    var rolemodtmp,\n      roletheModTmp = null;\n    var $divRoleGroup = null;\n    var roleAssigned = [];\n    var createContainer = null;\n    var $btnFinish = null;\n    this.intialize = function () {\n      createLayout();\n      eventHandling();\n      createBusyIndicator();\n      roleTemplate();\n      loadRoles();\n    };\n\n    /*\r\n       Create busyIndicator\r\n    */\n    function createBusyIndicator() {\n      $bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      $bsyDiv[0].style.visibility = "hidden";\n      $root.append($bsyDiv);\n    }\n    function createLayout() {\n      $root = $(\'<div>\');\n      var str = \'  <div style="overflow:hidden" class="vis-group-assinRole-content"><div class="vis-group-assinRole-data" style=" margin-top: 5px; margin-bottom: 0; "><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<input  tabindex="1" class="vis-group-email" type="text" name="Name" data-placeholder="" placeholder=" "><label>\' + VIS.Msg.getMsg(\'EMail\') + \'</label></div></div></div>\' + \'<div class="vis-group-assinRole-data vis-creategroup-btnwrap">\' +\n      //\'<a style="float:left" class="vis-group-btn vis-group-orgAcess vis-group-grayBtn">\' + VIS.Msg.getMsg(\'VIS_OrgAccess\') + \'</a>\' +\n      \' <a tabindex="2" class="vis-group-btn vis-group-pointer vis-group-create vis-group-grayBtn" style="float: left;">\' + VIS.Msg.getMsg(\'Create\') + \'</a>\' + \'<a tabindex="3" class="vis-group-btn vis-group-pointer vis-group-invite vis-group-blueBtn" style="float: right;">\' + VIS.Msg.getMsg(\'VIS_Invite\') + \'</a>\' + \'</div>\' + \'</div>\';\n      createContainer = $(\'<div class="vis-group-assignContainer" style="visibility:hidden">\' + \'<div class="vis-group-assinRole-data"><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<input  tabindex="4" type="text" maxlength="60" data-placeholder="" placeholder=" " class="vis-group-name vis-group-mandatory"  name="Name">\' + \'<label>\' + VIS.Msg.getMsg(\'Name\') + \'</label>\' + \'</div></div></div>\' + \'<div class="vis-group-assinRole-data"><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<input tabindex="5" type="text" maxlength="80" data-placeholder="" placeholder=" " class="vis-group-uid"  name="Name">\' + \'<label>\' + VIS.Msg.getMsg(\'VIS_UserID\') + \'</label>\' + \'</div></div></div>\' + \'<div class="vis-group-assinRole-data"><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<input tabindex="6" type="password" maxlength="250" data-placeholder="" placeholder=" " class="vis-group-pwd"  name="Name">\' + \'<label>\' + VIS.Msg.getMsg(\'Password\') + \'</label>\' + \'</div></div></div>\' + \'<div class="vis-group-assinRole-data"><div class="input-group vis-input-wrap"><div class="vis-control-wrap">\' + \'<input tabindex="7" type="text"  maxlength="50" data-placeholder="" placeholder=" " class="vis-group-mobile"  name="Name">\' + \'<label>\' + VIS.Msg.getMsg(\'Mobile\') + \'</label>\' + \'</div></div></div>\' + \'<a tabindex="8" class="vis-group-btn vis-group-Save vis-group-pointer vis-group-grayBtn" style="float: right;">\' + VIS.Msg.getMsg(\'Save\') + \'</a>\' + \'</div>\');\n      $divRoleGroup = $(\'<div class="vis-group-roleContainer" ><div> <label >\' + VIS.Msg.getMsg("SelectRole") + \'</label> </div></div>\');\n      $root.append(str);\n      $rootChild = $root.find(\'.vis-group-assinRole-content\');\n      $rootChild.height(\'100px\');\n      $btnCreateUser = $root.find(\'.vis-group-create\');\n      //  $btnOrgAccess = $root.find(\'.vis-group-orgAcess\');\n      $btnInviteUser = $root.find(\'.vis-group-invite\');\n      $btnSave = createContainer.find(\'.vis-group-Save\');\n      $txtName = createContainer.find(\'.vis-group-name\');\n      $txtUID = createContainer.find(\'.vis-group-uid\');\n      $txtMobile = createContainer.find(\'.vis-group-mobile\');\n      $txtPwd = createContainer.find(\'.vis-group-pwd\');\n      $txtEmail = $root.find(\'.vis-group-email\');\n      //$divRoleGroup = chooseRoleContainer.find(\'.vis-group-roleContainer\');\n      // $btnOrgAccess.hide();\n    }\n    ;\n    function eventHandling() {\n      $txtName.on("change", nameTextChanged);\n      $btnCreateUser.on("click", create);\n      $btnCreateUser.on("keydown", createTabClick);\n      // $btnOrgAccess.on("click", orgAccess);\n      $btnInviteUser.on("click", invite);\n      $btnInviteUser.on("keydown", inviteTabClick);\n      $btnSave.on("click", save);\n      $btnSave.on("keydown", saveTabClick);\n    }\n    ;\n    function createTabClick(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      create();\n    }\n    ;\n    function saveTabClick(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      save();\n    }\n    ;\n    function inviteTabClick(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      invite();\n    }\n    ;\n    function nameTextChanged(e) {\n      if ($txtName.val().length > 0) {\n        $txtName.removeClass(\'vis-group-mandatory\');\n      } else {\n        $txtName.addClass(\'vis-group-mandatory\');\n      }\n    }\n    ;\n\n    /*\r\n    Create Roles Template\r\n    */\n    function roleTemplate() {\n      var script = \' <script type="text/x-handlebars-template">\' + \'{{#each this}}\' + \'<div class="vis-group-user-wrap vis-group-role-pad"  data-UID="{{AD_Role_ID}}">\' + \'<div class="vis-group-user-profile">\' + \'<input tabindex="7"  type="checkbox" data-UID="{{AD_Role_ID}}" >\' + \'<label>{{Name}}</label>\' + \'</div>\' + \'</div>\' + \'{{/each}}​\' + \'<\/script>\';\n      rolemodtmp = $(script).html();\n      roletheModTmp = Handlebars.compile(rolemodtmp);\n    }\n    ;\n\n    // /*\n    //Create Roles Template\n    //*/\n    // function roleTemplate() {\n    //     var script = \' <script type="text/x-handlebars-template">\' +\n    //         \'{{#each this}}\' +\n    //         \'<div class="vis-group-user-wrap vis-group-role-pad"  data-UID="{{AD_Role_ID}}">\' +\n    //             \t\'<div class="vis-group-user-profile">\' +\n    //                 \'{{#if IsAssignedToUser}}\' +\n    //                 \t\'<input tabindex="7" type="checkbox" data-UID="{{AD_Role_ID}}">\' +\n    //                     \'<label style="color: #535353;font-weight: bold;">{{Name}}</label>\' +\n    //                     \'{{else}}\' +\n    //                     \'<input tabindex="7"  type="checkbox" data-UID="{{AD_Role_ID}}" >\' +\n    //                     \'<label>{{Name}}</label>\' +\n    //                     \'{{/if}}\' +\n\n    //                 \'</div>\' +\n    //         \'</div>\' +\n    //         \'{{/each}}​\' +\n    //         \'<\/script>\';\n\n    //     rolemodtmp = $(script).html();\n    //     roletheModTmp = Handlebars.compile(rolemodtmp);\n    // };\n\n    /*\r\n        Load User Roles\r\n    */\n    function loadRoles(target) {\n      $bsyDiv[0].style.visibility = "visible";\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/GetRoleInfo",\n        data: {\n          AD_User_ID: 0\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          var $divRoles = $(\'<div style="height:212px;overflow:auto;margin-bottom:10px">\');\n          $divRoles.append(roletheModTmp(data));\n          $divRoleGroup.append($divRoles);\n          $btnFinish = $(\'<a tabindex="400" class="vis-group-btn vis-group-pointer vis-group-finish vis-group-grayBtn" style="float: right;">\' + VIS.Msg.getMsg(\'VIS_Finish\') + \'</a>\');\n          $divRoleGroup.append($btnFinish);\n          //$divRoleGroup.off("click");\n          //$divRoleGroup.on("click", roleContaierClick);\n          $btnFinish.on("click", finish);\n          $btnFinish.on("keydown", finishTabClick);\n\n          // To Show First Role sleected By Default\n          if ($($divRoleGroup.children(\'.vis-group-user-wrap\')).length > 0) {\n            $($($divRoleGroup).children(\'.vis-group-user-wrap\')[0]).trigger(\'click\');\n          }\n          for (var i = 0; i < data.length; i++) {\n            roleAssigned.push({\n              AD_Role_ID: data[i].AD_Role_ID,\n              IsAssignedToUser: false\n            });\n          }\n          $($divRoleGroup.find(\'input\')).off("click");\n          $($divRoleGroup.find(\'input\')).on("click", roleCheckboxClick);\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorLoadingRoles");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n    function finishTabClick(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      finish();\n    }\n    ;\n\n    /*\r\n    Fire when user click on role checkbox\r\n    */\n    function roleCheckboxClick(e) {\n      var target = $(e.target);\n\n      //this is used to set if role is assigned or assigned to user.\n      var element = $.grep(roleAssigned, function (ele, index) {\n        return ele.AD_Role_ID == target.data(\'uid\');\n      });\n      if (element != null && element.length > 0) {\n        element[0].IsAssignedToUser = target.prop(\'checked\');\n      }\n      e.stopPropagation();\n    }\n    function create() {\n      $rootChild.find(\'.vis-group-roleContainer\').css("display", "none");\n      $rootChild.find(\'.vis-group-assignContainer\').css("display", "inherit");\n      $rootChild.append(createContainer);\n      //$root.find(\'.vis-group-assignContainer\').css({ "visibility": "visible", "margin-top": "-10px", "overflow": "auto", "float": "left", "height": "284px" });\n      $root.find(\'.vis-group-assignContainer\').css({\n        "visibility": "visible"\n      });\n      // $root.height(\'390px\');\n      $rootChild.height(\'400px\');\n      // $btnOrgAccess.show();\n    }\n    ;\n    function orgAccess() {\n      $bsyDiv[0].style.visibility = "visible";\n      if ($($root.find(\'.vis-group-assignContainer\')[0]).css(\'visibility\') == \'visible\') {\n        var orgaccess = new VIS.orgAccess(self.setSelectedOrg);\n        orgaccess.intialize();\n        orgaccess.show();\n        $bsyDiv[0].style.visibility = "hidden";\n      }\n    }\n    ;\n    function invite() {\n      $rootChild.find(\'.vis-group-assignContainer\').css("display", "none");\n      $rootChild.find(\'.vis-group-roleContainer\').css("display", "inherit");\n      $rootChild.append($divRoleGroup);\n      $rootChild.height(\'403px\');\n    }\n    ;\n    function save() {\n      if ($($root.find(\'.vis-group-assignContainer\')[0]).css(\'visibility\') == \'visible\') {\n        var name = $txtName.val();\n        if (name == null || name == undefined || name == "") {\n          VIS.ADialog.info("VIS_PleaseName");\n          return;\n        }\n        ;\n        $bsyDiv[0].style.visibility = "visible";\n        if (orgAccesses == null || orgAccesses == undefined) {\n          orgAccesses = null;\n        }\n        var pwd = VIS.secureEngine.encrypt($txtPwd.val());\n        $.ajax({\n          url: VIS.Application.contextUrl + "Group/SaveNewUser",\n          type: "GET",\n          datatype: "json",\n          contentType: "application/json; charset=utf-8",\n          async: true,\n          data: {\n            Name: name,\n            Email: $txtEmail.val(),\n            Value: $txtUID.val(),\n            password: pwd,\n            mobile: $txtMobile.val(),\n            OrgID: JSON.stringify(orgAccesses)\n          },\n          success: function (result) {\n            var data = JSON.parse(result);\n            $bsyDiv[0].style.visibility = "hidden";\n            if (data.length > 0) {\n              VIS.ADialog.error(data);\n            } else {\n              VIS.ADialog.info("Record saved successfully");\n              ch.close();\n            }\n          },\n          error: function () {\n            $bsyDiv[0].style.visibility = "hidden";\n            VIS.ADialog.error("VIS_ErrorSavingUser");\n          }\n        });\n      }\n    }\n    ;\n    function finish() {\n      var emails = $txtEmail.val();\n      if (emails == null || emails == undefined || emails == "") {\n        VIS.ADialog.error("NotValidEmail");\n        return;\n      }\n      var pattern = new RegExp(/^((([a-z]|\\d|[!#\\$%&\'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i);\n      if (emails.indexOf(\';\') == -1) {\n        var isValidEmail = pattern.test(emails);\n        if (!isValidEmail) {\n          VIS.ADialog.error("NotValidEmail", true, ":" + emails);\n          return;\n        }\n      } else {\n        var mails = emails.split(\';\');\n        for (var i = 0; i < mails.length; i++) {\n          var isValidEmail = pattern.test(mails[i]);\n          if (!isValidEmail) {\n            VIS.ADialog.error("NotValidEmail", true, ":" + mails[i]);\n            return;\n          }\n        }\n      }\n      var elements = $.grep(roleAssigned, function (ele, index) {\n        return ele.IsAssignedToUser == true;\n      });\n      if (elements == null || elements == undefined || elements.length == 0) {\n        VIS.ADialog.info("VIS_SelectRole");\n        return;\n      }\n      if (emails != null && emails != undefined && emails != "" && emails.length > 0) {\n        $bsyDiv[0].style.visibility = "visible";\n        $.ajax({\n          url: VIS.Application.contextUrl + "Group/InviteUsers",\n          type: "POST",\n          datatype: "json",\n          async: true,\n          data: {\n            email: emails,\n            roles: JSON.stringify(elements)\n          },\n          success: function (result) {\n            var data = JSON.parse(result);\n            VIS.ADialog.info(data);\n            $bsyDiv[0].style.visibility = "hidden";\n            ch.close();\n          },\n          error: function () {\n            VIS.ADialog.error("VIS_ErrorInvitingUsers");\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        });\n      }\n    }\n    ;\n    this.setSelectedOrg = function (value) {\n      orgAccesses = value;\n    };\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setContent($root);\n\n      //ch.setHeight(115);\n      ch.setPosition({\n        my: "center bottom-3"\n      });\n      ch.setWidth(550);\n      ch.setTitle(VIS.Msg.getMsg("VIS_CreateUser"));\n      ch.setModal(true);\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        if (self.onClose) self.onClose();\n        self.dispose();\n      };\n      ch.show();\n      ch.hideButtons();\n    };\n    this.dispose = function () {\n      this.prop = null;\n      $div = null;\n      ch = null;\n      self = null;\n      $root.remove();\n      $root = null;\n      //  $btnOrgAccess.remove();\n      //  $btnOrgAccess = null;\n      $btnCreateUser.remove();\n      $btnCreateUser = null;\n      $btnInviteUser.remove();\n      $btnInviteUser = null;\n      $btnSave.remove();\n      $btnSave = null;\n      $txtEmail.remove();\n      $txtEmail = null;\n      $txtName.remove();\n      $txtName = null;\n      $txtUID.remove();\n      $txtUID = null;\n      $txtPwd.remove();\n      $txtPwd = null;\n      $txtMobile.remove();\n      $txtMobile = null;\n      ch = null;\n      self = null;\n    };\n  }\n  ;\n  VIS.createUser = createUser;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/grouprights/createuser.js?')},"./Areas/VIS/Scripts/app/grouprights/group.js":()=>{eval(';\n(function (VIS, $) {\n  function GroupForm() {\n    this.frame = null;\n    this.windowNo = null;\n    var self = this;\n    var $root = $(\'<div class="vis-group-assign-content">\');\n    var $menu = $(\'<ul class="vis-apanel-rb-ul"></ul>\');\n    var $leftPanel = null;\n    var $middlePanel = null;\n    var $rightPanel = null;\n    var $divUserGroup = null;\n    var $searchUser = null;\n    var $searchUserBtn = null;\n    var $btnCreateUser = null;\n    var $btnSortUsers = null;\n    // var $btnImportUser = null;\n    var $btnCreateRole = null;\n    var $btnSaveRoles = null;\n    var $divRoleGroup = null;\n    var $divGroupDataContainer = null;\n    var $divRoleDataContainer = null;\n    var $divRightGroupDataContainer = null;\n    var $bsyDiv = null;\n    var $searchRole = null;\n    var $searchRoleBtn = null;\n    var $searchGroup = null;\n    var $searchGroupBtn = null;\n    var $btnCreateGroup = null;\n    var $btnSaveGroup = null;\n    var $divGroupsGroup = null;\n    var usermodtmp, usertheModTmp, rolemodtmp, roletheModTmp, groupmodtmp, grouptheModTmp;\n    var sortby = -1;\n    var userID = 0;\n    var roleAssigned = [];\n    var groupAssigned = [];\n    var roleChanged = [];\n    var groupChanged = [];\n    var roleID = 0;\n    var groupID = 0;\n    var groupWindowID = 0;\n    var roleWindowID = 0;\n    var userWindowID = 0;\n    var pageNo = 0;\n    var PAGESIZE = 20;\n    var roleContainerClicked = false;\n    var groupContainerClicked = false;\n\n    /*\r\n        Initialize Components\r\n    */\n    this.initializeComponent = function () {\n      createPanels();\n      eventHandling();\n      createSortingOverlay();\n    };\n\n    /*\r\n        Create layouts of Left , Middle and Right Panels\r\n    */\n    function createPanels() {\n      $root.append(\'<div class="vis-group-colwrap"><div class="vis-group-content-wrap"></div></div><div class="vis-group-colwrap"><div class="vis-group-content-wrap"></div></div><div class="vis-group-colwrap last-child"><div class="vis-group-content-wrap"></div></div>\');\n      var panels = $root.find(\'.vis-group-content-wrap\');\n      $leftPanel = $(panels[0]);\n      $middlePanel = $(panels[1]);\n      $rightPanel = $(panels[2]);\n      panels = null;\n      createBusyIndicator();\n      leftPanel();\n      middlePanel();\n      rightPanel();\n    }\n    ;\n\n    /*\r\n        Create busyIndicator\r\n    */\n    function createBusyIndicator() {\n      $bsyDiv = $(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n      $bsyDiv[0].style.visibility = "hidden";\n      $root.append($bsyDiv);\n    }\n\n    /*\r\n        Create Event Handlars\r\n    */\n    function eventHandling() {\n      $btnCreateUser.on("click", creatNewUser);\n      $searchUserBtn.on("click", loadUser);\n      $searchUser.on("keydown", searchUsers);\n      //  $btnImportUser.on("click", importUser);\n      $btnSaveRoles.on("click", saveUserRoles);\n      $btnSaveGroup.on("click", saveUserGroups);\n      $searchGroupBtn.on("click", loadGroup);\n      $searchGroup.on("keydown", searchGroups);\n      $searchRoleBtn.on("click", loadRoles);\n      $searchRole.on("keydown", searchRoles);\n      $btnCreateGroup.on("click", createGroup);\n      $btnCreateRole.on("click", createNewRole);\n      $divUserGroup.on("scroll", userScroll);\n      $root.on("click", rootClick);\n    }\n    ;\n\n    /*\r\n       Root Click Event Used for asking user to save roles and groups which may left unsaved.\r\n    */\n    function rootClick(e) {\n      var target = $(e.target);\n      // In Case of Role...\n      if (!target.hasClass("vis-group-roless") && target.parents(".vis-group-roless").length == 0 && !target.hasClass(\'vis-group-save-btn\') && roleChanged.length > 0) {\n        VIS.ADialog.confirm(\'VIS_SaveRole\', true, "", "Confirm", function (result) {\n          if (result) {\n            saveUserRoles();\n          } else {\n            roleChanged = [];\n          }\n        });\n        e.stopPropagation();\n        return false;\n      }\n\n      // In Case of Group\n      else if (!target.hasClass("vis-group-groupss") && target.parents(".vis-group-groupss").length == 0 && !target.hasClass(\'vis-group-save-btn\') && groupChanged.length > 0) {\n        // if (VIS.ADialog.ask(\'VIS_SaveGroup\')) {\n\n        VIS.ADialog.confirm(\'VIS_SaveRole\', true, "", "Confirm", function (result) {\n          if (result) {\n            saveUserGroups();\n          } else {\n            groupChanged = [];\n          }\n        });\n        e.stopPropagation();\n        return false;\n      }\n      //roleContainerClicked = false;\n      //groupContainerClicked = false;\n    }\n    ;\n\n    /*\r\n        Append items in Left Panel\r\n    */\n    function leftPanel() {\n      $bsyDiv[0].style.visibility = "visible";\n      $leftPanel.append(\'<div class="vis-group-content-head"><h4 class="vis-group-content-tittle">\' + VIS.Msg.getMsg("VIS_CreateInviteUser") + \'</h4>\' + \'<span class=" vis-group-pointer vis-group-head-right">\' + VIS.Msg.getMsg("SortBy") + \'</span><button class="vis-group-add-btn vis-groupbtn"><i class="vis vis-addbp"></i></button></div>\');\n      $btnSortUsers = $leftPanel.find(\'.vis-group-head-right\');\n\n      /***** end of content-head *****/\n\n      $leftPanel.append(\'<div class="vis-group-searchwrp"><div class="vis-group-content-headDown">\' + \'<input class="vis-group-SearchText" value="" placeholder="\' + VIS.Msg.getMsg("Search") + \'" type="text"><button class="vis-groupbtn vis-group-search-icon"><i class="vis vis-search"></i></button>\' +\n      //   \'<input class="vis-group-importUser" type="button" title="\' + VIS.Msg.getMsg("VIS_Importuser") + \'"><div class="vis-group-clear-both"></div> </div>\');\n      \'</div></div>\');\n      $searchUser = $leftPanel.find(\'.vis-group-SearchText\');\n      $searchUserBtn = $leftPanel.find(\'.vis-group-search-icon\');\n      // $btnImportUser = $leftPanel.find(\'.vis-group-importUser\');\n      $btnCreateUser = $leftPanel.find(\'.vis-group-add-btn\');\n\n      /*****  end of content-headDown  *****/\n      $divUserGroup = $(\'<div class="vis-group-users-container">\');\n      $divGroupDataContainer = $(\'<div class="vis-group-DataContainer">\');\n      $divUserGroup.height($($root.parent()).height() - 95);\n      $leftPanel.append($divUserGroup);\n      $divUserGroup.append($divGroupDataContainer);\n      createUsersList();\n    }\n    ;\n\n    /*\r\n        Append Items in middle Panel\r\n    */\n    function middlePanel() {\n      $middlePanel.append(\' <div class="vis-group-content-head">\' + \'<h4 class="vis-group-content-tittle vis-group-role">\' + VIS.Msg.getMsg("Role") + \'</h4>\' + \'<h7 class="vis-group-SaveMessage">\' + VIS.Msg.getMsg("VIS_RoleSaved") + \'</h7>\' + \'<div class="vis-group-top-right">\' + \'<button class="vis-groupbtn vis-group-add-btn"><i class="vis vis-new" title="\' + VIS.Msg.getMsg("AddNew") + \'" ></i></button>\' + \'<button class="vis-groupbtn vis-group-save-btn"><i class="vis vis-save" title="\' + VIS.Msg.getMsg("Save") + \'"></i></button>\' + \'</div>\' + \'</div>\' + \'<div class="vis-group-searchwrp"><div class="vis-group-content-headDown"><input class="vis-group-SearchText" value="" placeholder="\' + VIS.Msg.getMsg(\'Search\') + \'" type="text">\' + \'<button class="vis-groupbtn vis-group-search-icon"><i class="vis vis-search"></i></button></div></div>\');\n      $btnSaveRoles = $middlePanel.find(\'.vis-group-save-btn\');\n      $btnCreateRole = $middlePanel.find(\'.vis-group-add-btn\');\n      $searchRole = $middlePanel.find(\'.vis-group-SearchText\');\n      $searchRoleBtn = $middlePanel.find(\'.vis-group-search-icon\');\n      /**end of content-head**/\n\n      $divRoleGroup = $(\'<div class="vis-group-role-container">\');\n      $divRoleDataContainer = $(\'<div class="vis-group-DataContainer">\');\n      $middlePanel.append($divRoleGroup);\n      $divRoleGroup.append($divRoleDataContainer);\n      $divRoleGroup.height($($root.parent()).height() - 95);\n      roleTemplate();\n    }\n    ;\n\n    /*\r\n        Append Items in right Panel\r\n    */\n    function rightPanel() {\n      $rightPanel.append(\'<div class="vis-group-content-head">\' + \'<h4 class="vis-group-content-tittle vis-group-rights">\' + VIS.Msg.getMsg("VIS_Groups") + \'</h4>\' + \'<h7 class="vis-group-SaveMessage">\' + VIS.Msg.getMsg("VIS_GroupSaved") + \'</h7>\' + \'<div class="vis-group-top-right">\' + \'<div class="vis-group-top-right">\' + \'<button class="vis-groupbtn vis-group-add-btn"><i class="vis vis-new" title="\' + VIS.Msg.getMsg("AddNew") + \'"></i></button>\' + \'<button class="vis-groupbtn vis-group-save-btn"><i class="vis vis-save" title="\' + VIS.Msg.getMsg("Save") + \'"></i></button>\' + \'</div>\' + \'</div>\' + \'</div>\' + \'<div class="vis-group-searchwrp"><div class="vis-group-content-headDown">\' + \'<input class="vis-group-SearchText"  value="" placeholder="\' + VIS.Msg.getMsg(\'Search\') + \'" type="text">\' + \'<button class="vis-groupbtn vis-group-search-icon"><i class="vis vis-search"></i></button>\' + \'</div></div>\');\n      $searchGroup = $rightPanel.find(\'.vis-group-SearchText\');\n      $searchGroupBtn = $rightPanel.find(\'.vis-group-search-icon\');\n      $btnCreateGroup = $rightPanel.find(\'.vis-group-add-btn\');\n      $btnSaveGroup = $rightPanel.find(\'.vis-group-save-btn\');\n      $divGroupsGroup = $(\'<div class="vis-group-role-container">\');\n      $divRightGroupDataContainer = $(\'<div class="vis-group-DataContainer">\');\n      $rightPanel.append($divGroupsGroup);\n      $divGroupsGroup.append($divRightGroupDataContainer);\n      $divGroupsGroup.height($($root.parent()).height() - 95);\n      groupTemplate();\n    }\n    ;\n\n    /*\r\n        Create Overlay for sorting Users\r\n    */\n    function createSortingOverlay() {\n      $menu.append(\'<li value=1>\' + VIS.Msg.getMsg("Name") + \'</li>\');\n      $menu.append(\'<li value=2>\' + VIS.Msg.getMsg("SearchKey") + \'</li>\');\n      $menu.append(\'<li value=3>\' + VIS.Msg.getMsg("EMail") + \'</li>\');\n      $btnSortUsers.on("click", function () {\n        $(this).w2overlay($menu.clone(true));\n      });\n      $menu.on(VIS.Events.onTouchStartOrClick, "LI", function (e) {\n        sortby = $(this).val();\n        loadUser();\n      });\n    }\n    ;\n\n    /*\r\n        createUsersList\r\n    */\n    function createUsersList() {\n      userTemplate();\n      loadUser();\n    }\n    ;\n\n    /*\r\n        Create Role List\r\n    */\n\n    function createRoleList() {\n      roleTemplate();\n    }\n    ;\n\n    /*\r\n        Create Users Template\r\n    */\n    function userTemplate() {\n      var script = \' <script type="text/x-handlebars-template">\' + \'{{#each this}}\' + \'<div class="vis-group-user-wrap"  data-UID="{{AD_UserID}}">\' + \'<input type="radio" class="vis-GroupUserRadio">\' + \'<div class="vis-group-user-profile vis-group-pro-width">\' + \'<div class="vis-group-user-img vis-chatimgwrap">\' + \'{{#if UserImage}}\' + \'<img src="\' + VIS.Application.contextUrl + \'{{UserImage}}" alt="user-img">\' + \'{{else}}\' + \'<i class="fa fa-user"></i>\' + \'{{/if}}\' + \'</div>\' + \'<div class="vis-group-user-text">\' + \'{{#if IsActive }}\' + \'<p style="font-weight: bold">{{Username}}</p>\' + \'{{else}}\' + \'<p>{{Username}}</p>\' + \'{{/if}}\' + \'<span>{{Email}}</span>\' + \'<p>{{Country}}</p>\' + \'</div>\' + \'</div>\' + \'<div class="vis-group-user-right">\' + \'<ul class="vis-flex-directionCol">\' + \'<li><span class="vis-group-user-ico vis-group-edit vis vis-edit" style="padding-bottom: 15px;" title="\' + VIS.Msg.getMsg("Edit") + \'" data-UID="{{AD_UserID}}-{{UserTableID}}-{{UserWindowID}}"></span></li>\' + \'{{#if IsActive }}\' + \'{{#if IsUpdate}}\' + \'<li><span class="vis-group-user-ico vis-group-activeUser fa fa-check-circle" title="\' + VIS.Msg.getMsg("Active") + \'" data-UID="{{AD_UserID}}"></span></li>\' +\n      // if selected user can be updated\n      \'{{else}}\' + \'<li><span disabled class="vis-group-user-ico vis-group-activeUser fa fa-check-circle" title="\' + VIS.Msg.getMsg("Active") + \'" data-UID="{{AD_UserID}}"></span></li>\' +\n      // if selected user cannot be updated\n      \'{{/if}}\' + \'{{else}}\' + \'{{#if IsUpdate}}\' + \'<li><span class="vis-group-user-ico vis-group-inactiveUser fa fa-check-circle" title="\' + VIS.Msg.getMsg("InActive") + \'"  data-UID="{{AD_UserID}}"></span></li>\' +\n      // if selected user can be updated\n      \'{{else}}\' + \'<li><span disabled class="vis-group-user-ico vis-group-inactiveUser fa fa-check-circle" title="\' + VIS.Msg.getMsg("InActive") + \'" data-UID="{{AD_UserID}}"></span></li>\' +\n      // if selected user cannot be updated\n      \'{{/if}}\' + \'{{/if}}\' + \'</ul>\' + \'</div>\' + \'</div>\' + \'{{/each}}​\' + \'<\/script>\';\n      usermodtmp = $(script).html();\n      usertheModTmp = Handlebars.compile(usermodtmp);\n    }\n    ;\n\n    /*\r\n        Create Roles Template\r\n    */\n    function roleTemplate() {\n      var script = \' <script type="text/x-handlebars-template">\' + \'{{#each this}}\' + \'<div class="vis-group-user-wrap vis-group-roless vis-group-role-pad"  data-UID="{{AD_Role_ID}}">\' + \'<div class="vis-group-user-profile">\' + \'{{#if IsAssignedToUser}}\' + \'{{#if IsUpdate}}\' + \'<input type="checkbox" data-UID="{{AD_Role_ID}}" checked="">\' +\n      // if selected user can be updated\n      \'{{else}}\' + \'<input disabled type="checkbox" data-UID="{{AD_Role_ID}}" checked="">\' +\n      // if selected user cannot be updated\n      \'{{/if}}\' + \'<label style="color: rgba(var(--v-c-on-secondary), 1);font-weight: bold;">{{Name}}</label>\' + \'{{else}}\' + \'{{#if IsUpdate}}\' + \'<input type="checkbox" data-UID="{{AD_Role_ID}}" >\' +\n      // if selected user can be updated\n      \'{{else}}\' + \'<input disabled type="checkbox" data-UID="{{AD_Role_ID}}" >\' +\n      // if selected user cannot be updated\n      \'{{/if}}\' + \'<label>{{Name}}</label>\' + \'{{/if}}\' + \'</div>\' + \'<div class="vis-group-user-right">\' + \'<ul>\' + \'<li><span class="vis-group-user-ico vis-group-edit vis vis-edit" title="\' + VIS.Msg.getMsg("Edit") + \'" data-UID="{{AD_Role_ID}}-{{roleWindowID}}"></span></li>\' + \'</ul>\' + \'</div>\' + \'</div>\' + \'{{/each}}​\' + \'<\/script>\';\n      rolemodtmp = $(script).html();\n      roletheModTmp = Handlebars.compile(rolemodtmp);\n    }\n    ;\n\n    /*\r\n       Create Group Template\r\n    */\n    function groupTemplate() {\n      var script = \' <script type="text/x-handlebars-template">\' + \'{{#each this}}\' + \'<div class="vis-group-user-wrap vis-group-groupss vis-group-role-pad" data-UID="{{AD_Group_ID}}">\' + \'<div class="vis-group-user-profile">\' + \'{{#if IsAssignedToUser}}\' + \'<input type="checkbox" data-UID="{{AD_Group_ID}}" checked="">\' + \'<label style="color: rgba(var(--v-c-on-secondary), 1);font-weight: bold;">{{Name}}</label>\' + \'{{else}}\' + \'<input type="checkbox" data-UID="{{AD_Group_ID}}" >\' + \'<label>{{Name}}</label>\' + \'{{/if}}\' + \'</div>\' + \'<div class="vis-group-user-right">\' + \'<ul>\' + \'<li><span class="vis-group-user-ico vis-group-edit vis vis-edit" style="margin-right: 10px" title="\' + VIS.Msg.getMsg("Edit") + \'" data-UID="{{AD_Group_ID}}-{{GroupWindowID}}"></span></li>\' + \'<li><span class="vis-group-user-ico vis-group-info vis vis-info"   data-UID="{{AD_Group_ID}}-{{GroupWindowID}}"></span></li>\' + \'</ul>                           \' + \'</div>\' + \'</div>\' + \'{{/each}}​\' + \'<\/script>\';\n      groupmodtmp = $(script).html();\n      grouptheModTmp = Handlebars.compile(groupmodtmp);\n    }\n    ;\n\n    /*\r\n        Create New User\r\n    */\n    function creatNewUser() {\n      var newUser = new VIS.createUser();\n      newUser.intialize();\n      newUser.show();\n    }\n    ;\n\n    /*\r\n        Create New Role\r\n    */\n    function createNewRole() {\n      var newUser = new VIS.createrole();\n      newUser.intialize();\n      newUser.show();\n    }\n    ;\n\n    /*\r\n       Create New Group\r\n    */\n    function createGroup() {\n      $bsyDiv[0].style.visibility = "visible";\n      if (groupWindowID == 0) {\n        $.ajax({\n          url: VIS.Application.contextUrl + "Group/GetWindowIds",\n          async: false,\n          success: function (result) {\n            var data = JSON.parse(result);\n            if (data != null && data != undefined) {\n              groupWindowID = data.GroupWindowID;\n              roleWindowID = data.RoleWindowID;\n              userWindowID = data.UserWindowID;\n            }\n          },\n          error: function () {\n            VIS.Msg.getMsg("VIS_GroupWindowNotFound");\n          }\n        });\n      }\n      var zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction("AD_GroupInfo_ID", VIS.Query.prototype.EQUAL, 0);\n      VIS.viewManager.startWindow(groupWindowID, zoomQuery);\n      $bsyDiv[0].style.visibility = "hidden";\n    }\n    ;\n\n    /*\r\n        Load Users From Db and Append them to left Panel\r\n    */\n    function loadUser() {\n      pageNo = 1;\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/GetUserInfo",\n        type: "GET",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: true,\n        data: {\n          searchText: $searchUser.val(),\n          sortBy: sortby,\n          pageNo: pageNo,\n          pageSize: PAGESIZE\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          $divGroupDataContainer.find(\'.vis-group-user-wrap\').remove();\n          $divGroupDataContainer.append(usertheModTmp(data));\n          $divGroupDataContainer.off("click");\n          $divGroupDataContainer.on("click", userContaierClick);\n\n          // To Show First User sleected By Default\n          if ($($divGroupDataContainer.children(\'.vis-group-user-wrap\')).length > 0) {\n            $($divGroupDataContainer.children(\'.vis-group-user-wrap\')[0]).trigger(\'click\');\n          }\n          pageNo++;\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorLoadingContacts");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*\r\n       User Scroll\r\n    */\n    function userScroll() {\n      if ($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight) {\n        $.ajax({\n          url: VIS.Application.contextUrl + "Group/GetUserInfo",\n          type: "GET",\n          datatype: "json",\n          contentType: "application/json; charset=utf-8",\n          async: true,\n          data: {\n            searchText: $searchUser.val(),\n            sortBy: sortby,\n            pageNo: pageNo,\n            pageSize: PAGESIZE\n          },\n          success: function (result) {\n            pageNo++;\n            var data = JSON.parse(result);\n            $divGroupDataContainer.append(usertheModTmp(data));\n            $bsyDiv[0].style.visibility = "hidden";\n          },\n          error: function () {\n            VIS.ADialog.error("VIS_ErrorLoadingContacts");\n            $bsyDiv[0].style.visibility = "hidden";\n          }\n        });\n      }\n    }\n    ;\n\n    /*\r\n         Search Users\r\n    */\n    function searchUsers(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      if ($searchUser == undefined || $searchUser == null) {\n        return;\n      }\n      loadUser();\n    }\n    ;\n\n    /*\r\n      Search Groups\r\n    */\n    function searchGroups(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      if ($searchGroup == undefined || $searchGroup == null) {\n        return;\n      }\n      loadGroup();\n    }\n    ;\n\n    /*\r\n     Search Roles\r\n    */\n    function searchRoles(e) {\n      if (e.keyCode != undefined && e.keyCode != 13) {\n        return;\n      }\n      if ($searchRole == undefined || $searchRole == null) {\n        return;\n      }\n      loadRoles();\n    }\n    ;\n\n    /*\r\n        Click Event of icons on User info\r\n    */\n    function userContaierClick(e) {\n      if (roleChanged.length > 0) {\n        return;\n      }\n      var target = $(e.target);\n      $($($divGroupDataContainer.children(\'.vis-group-selected-op\'))[0]).removeClass(\'vis-group-selected-op vis-group-selected-opbackground\');\n      $($divGroupDataContainer).find(\'.vis-GroupUserRadio\').prop(\'checked\', false);\n      if (target.hasClass(\'vis-group-user-wrap\')) {\n        target.addClass(\'vis-group-selected-op vis-group-selected-opbackground\');\n        userID = target.data("uid");\n        $($(target).find(\'.vis-GroupUserRadio\')[0]).prop(\'checked\', true);\n      } else {\n        if ($(target.parents(\'.vis-group-user-wrap\')).length > 0) {\n          // length will be 0 if user\'s search result single or more record and there is some blank space... on click blank space nothing should be happened.\n          $(target.parents(\'.vis-group-user-wrap\')).addClass(\'vis-group-selected-op vis-group-selected-opbackground\');\n          userID = $(target.parents().find(\'.vis-group-selected-op\')).data("uid");\n          $($($(target).parents(\'.vis-group-user-wrap\')[0]).find(\'.vis-GroupUserRadio\')[0]).prop(\'checked\', true);\n        } else {\n          return;\n        }\n      }\n\n      //if (target.hasClass(\'vis-group-selected-op\')) {\n      //    userID = target.data("uid");\n      //}\n      //else {\n      //    userID = $(target.parents().find(\'.vis-group-selected-op\')).data("uid");\n      //}\n\n      if (target.hasClass(\'vis-group-user-ico vis-group-edit\')) {\n        var UserID = target.data("uid").split(\'-\');\n        var zoomQuery = new VIS.Query();\n        zoomQuery.addRestriction("AD_User_ID", VIS.Query.prototype.EQUAL, UserID[0]);\n        VIS.viewManager.startWindow(UserID[2], zoomQuery);\n      } else if (target.hasClass(\'vis-group-user-ico vis-group-activeUser\') && target.attr("disabled") != "disabled") {\n        activeUser(target, false);\n      } else if (target.hasClass(\'vis-group-user-ico vis-group-inactiveUser\') && target.attr("disabled") != "disabled") {\n        activeUser(target, true);\n      }\n      loadRoles(target);\n    }\n    ;\n\n    /*\r\n        Import Gmail Contacts\r\n    */\n    function importUser() {\n      //if (window.WSP) {\n      $bsyDiv[0].style.visibility = "visible";\n      window.setTimeout(function () {\n        VIS.importcontacts(self);\n        $bsyDiv[0].style.visibility = "hidden";\n      }, 100);\n      //}\n      //else {\n      //    VIS.ADialog.info(\'PleaseInstallWSPModule\');\n      //}\n    }\n    ;\n\n    /*\r\n        Load User Roles\r\n    */\n    function loadRoles(target) {\n      $bsyDiv[0].style.visibility = "visible";\n      var name = $searchRole.val();\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/GetRoleInfo",\n        data: {\n          AD_User_ID: userID,\n          name: name\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          $divRoleDataContainer.find(\'.vis-group-user-wrap\').remove();\n          $divRoleDataContainer.append(roletheModTmp(data));\n          $divRoleDataContainer.off("click");\n          $divRoleDataContainer.on("click", roleContaierClick);\n\n          // To Show First Role sleected By Default\n          if ($($divRoleDataContainer.children(\'.vis-group-user-wrap\')).length > 0) {\n            $($($divRoleDataContainer).children(\'.vis-group-user-wrap\')[0]).trigger(\'click\');\n          }\n          roleAssigned = [];\n          for (var i = 0; i < data.length; i++) {\n            roleAssigned.push({\n              AD_Role_ID: data[i].AD_Role_ID,\n              IsAssignedToUser: data[i].IsAssignedToUser\n            });\n          }\n          $($divRoleDataContainer.find(\'input\')).off("click");\n          $($divRoleDataContainer.find(\'input\')).on("click", roleCheckboxClick);\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorLoadingRoles");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*\r\n     Load Role Group\r\n    */\n    function loadGroup(target) {\n      $bsyDiv[0].style.visibility = "visible";\n      var name = $searchGroup.val();\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/GetGroupInfo",\n        data: {\n          AD_Role_ID: roleID,\n          name: name\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          $divRightGroupDataContainer.find(\'.vis-group-user-wrap\').remove();\n          $divRightGroupDataContainer.append(grouptheModTmp(data));\n          $divRightGroupDataContainer.off("click");\n          $divRightGroupDataContainer.on("click", groupContaierClick);\n\n          // To Show First Group sleected By Default\n          if ($($divRightGroupDataContainer.children(\'.vis-group-user-wrap\')).length > 0) {\n            $($($divRightGroupDataContainer).children(\'.vis-group-user-wrap\')[0]).trigger(\'click\');\n          }\n          groupAssigned = [];\n          $bsyDiv[0].style.visibility = "hidden";\n          for (var i = 0; i < data.length; i++) {\n            if (i == 0) {\n              groupWindowID = data[i].GroupWindowID;\n            }\n            groupAssigned.push({\n              AD_Group_ID: data[i].AD_Group_ID,\n              IsAssignedToUser: data[i].IsAssignedToUser\n            });\n          }\n          $($divRightGroupDataContainer.find(\'input\')).off("click");\n          $($divRightGroupDataContainer.find(\'input\')).on("click", groupCheckboxClick);\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_ErrorLoadingGroups");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*\r\n        role Container Click\r\n    */\n    function roleContaierClick(e) {\n      roleContainerClicked = true;\n      if (groupChanged.length > 0) {\n        // if (VIS.ADialog.ask(\'VIS_SaveGroup\')) {\n        VIS.ADialog.confirm(\'VIS_SaveGroup\', true, "", "Confirm", function (result) {\n          if (result) {\n            saveUserGroups();\n          } else {\n            groupChanged = [];\n          }\n        });\n        return;\n      }\n      var target = $(e.target);\n      $($($divRoleDataContainer.children(\'.vis-group-selected-op\'))[0]).removeClass(\'vis-group-selected-op vis-group-selected-opbackground\');\n      if (target.hasClass(\'vis-group-user-wrap\')) {\n        target.addClass(\'vis-group-selected-op vis-group-selected-opbackground\');\n        roleID = target.data("uid");\n      } else {\n        //$(target.parents(\'.vis-group-user-wrap\')).addClass(\'vis-group-selected-op vis-group-selected-opbackground\');\n        //roleID = $(target.parents().find(\'vis-group-selected-op vis-group-selected-opbackground\')).data("uid");\n        roleID = $(target.parents(\'.vis-group-user-wrap\')).addClass(\'vis-group-selected-op vis-group-selected-opbackground\').data("uid");\n      }\n      if (target.hasClass(\'vis-group-user-ico vis-group-edit\')) {\n        roleID = target.data("uid");\n        roleID = roleID.split(\'-\');\n        var zoomQuery = new VIS.Query();\n        zoomQuery.addRestriction("AD_Role_ID", VIS.Query.prototype.EQUAL, roleID[0]);\n        VIS.viewManager.startWindow(roleID[1], zoomQuery);\n        roleID = roleID[0];\n      }\n      if (roleID != undefined) {\n        loadGroup(target);\n      }\n      if (e.originalEvent === undefined) {\n        e.stopPropagation();\n      }\n    }\n    ;\n\n    /*\r\n       group Container Click\r\n    */\n    function groupContaierClick(e) {\n      groupContainerClicked = true;\n      var target = $(e.target);\n      $($($divRightGroupDataContainer.children(\'.vis-group-selected-op\'))[0]).removeClass(\'vis-group-selected-op\');\n      if (target.hasClass(\'vis-group-user-wrap\')) {\n        target.addClass(\'vis-group-selected-op\');\n        groupID = target.data("uid");\n      } else {\n        $(target.parents(\'.vis-group-user-wrap\')).addClass(\'vis-group-selected-op\');\n        groupID = $(target.parents().find(\'.vis-group-selected-op\')).data("uid");\n      }\n      if (target.hasClass(\'vis-group-user-ico vis-group-edit\')) {\n        groupID = target.data("uid");\n        groupID = groupID.split(\'-\');\n        var zoomQuery = new VIS.Query();\n        zoomQuery.addRestriction("AD_GroupInfo_ID", VIS.Query.prototype.EQUAL, groupID[0]);\n        VIS.viewManager.startWindow(groupID[1], zoomQuery);\n      } else if (target.hasClass(\'vis-group-user-ico vis-group-info\')) {\n        groupID = target.data("uid");\n        groupID = groupID.split(\'-\');\n        getGroupInfo(groupID[0]);\n      }\n      if (e.originalEvent === undefined) {\n        e.stopPropagation();\n      }\n    }\n    ;\n\n    /*\r\n      group Group Info\r\n    */\n    function getGroupInfo(groupid) {\n      var groupInfo = new VIS.groupInfo(groupid);\n      groupInfo.intialize();\n      groupInfo.show();\n    }\n    ;\n\n    /*\r\n        Fire when user click on role checkbox\r\n    */\n    function roleCheckboxClick(e) {\n      if (groupChanged.length > 0) {\n        VIS.ADialog.confirm(\'VIS_SaveGroup\', true, "", "Confirm", function (result) {\n          if (result) {\n            saveUserGroups();\n          } else {\n            groupChanged = [];\n          }\n        });\n        return;\n      }\n      var target = $(e.target);\n\n      //this is used to set if role is assigned or assigned to user.\n      var element = $.grep(roleAssigned, function (ele, index) {\n        return ele.AD_Role_ID == target.data(\'uid\');\n      });\n      if (element != null && element.length > 0) {\n        element[0].IsAssignedToUser = target.prop(\'checked\');\n      }\n\n      // this is used to track an array of if any unsaved Role left or not..\n      element = $.grep(roleChanged, function (ele, index) {\n        return ele == target.data(\'uid\');\n      });\n      if (element == null || element.length == 0) {\n        roleChanged.push(target.data(\'uid\'));\n      } else {\n        roleChanged.splice(roleChanged.indexOf(target.data(\'uid\')), 1);\n      }\n\n      //if (target.prop(\'checked\')) {\n      //    $(target.siblings(\'label\')).addClass("vis-group-selectedcheckbox");\n      //}\n      //else {\n      //    $(target.siblings(\'label\')).removeClass("vis-group-selectedcheckbox");\n      //}\n      e.stopPropagation();\n    }\n\n    /*\r\n     Fire when user click on group checkbox\r\n    */\n    function groupCheckboxClick(e) {\n      if (roleChanged.length > 0) {\n        VIS.ADialog.confirm(\'VIS_SaveRole\', true, "", "Confirm", function (result) {\n          if (result) {\n            saveUserRoles();\n          } else {\n            roleChanged = [];\n          }\n        });\n        return;\n      }\n      var target = $(e.target);\n\n      //this is used to set if Group is assigned or assigned to role.\n      var element = $.grep(groupAssigned, function (ele, index) {\n        return ele.AD_Group_ID == target.data(\'uid\');\n      });\n      if (element != null && element.length > 0) {\n        element[0].IsAssignedToUser = target.prop(\'checked\');\n      }\n\n      // this is used to track an array of if any unsaved Role left or not..\n      element = $.grep(groupChanged, function (ele, index) {\n        return ele == target.data(\'uid\');\n      });\n      if (element == null || element.length == 0) {\n        groupChanged.push(target.data(\'uid\'));\n      } else {\n        groupChanged.splice(groupChanged.indexOf(target.data(\'uid\')), 1);\n      }\n\n      //if (target.prop(\'checked\')) {\n      //    $(target.siblings(\'label\')).addClass("vis-group-selectedcheckbox");\n      //}\n      //else {\n      //    $(target.siblings(\'label\')).removeClass("vis-group-selectedcheckbox");\n      //}\n      e.stopPropagation();\n    }\n    ;\n\n    /*\r\n        Save User\'s Roles\r\n    */\n    function saveUserRoles() {\n      $bsyDiv[0].style.visibility = "visible";\n      roleChanged = [];\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/UpdateUserRoles",\n        type: "Post",\n        data: {\n          AD_User_ID: userID,\n          roles: JSON.stringify(roleAssigned)\n        },\n        success: function () {\n          $($($middlePanel.find(\'h7\'))[0]).show();\n          $($($middlePanel.find(\'h7\'))[0]).fadeOut(1600, "linear");\n          loadRoles();\n        },\n        error: function () {\n          VIS.ADialog.error(VIS.Msg.getMsg(\'VIS_ErrorSavingRole\'));\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*\r\n    Save User\'s Group\r\n    */\n    function saveUserGroups() {\n      $bsyDiv[0].style.visibility = "visible";\n      groupChanged = [];\n      $.ajax({\n        url: VIS.Application.contextUrl + "Group/UpdateUserGroups",\n        type: "Post",\n        data: {\n          AD_Role_ID: roleID,\n          AD_Group_ID: groupID,\n          groups: JSON.stringify(groupAssigned)\n        },\n        success: function () {\n          $($($rightPanel.find(\'h7\'))[0]).show();\n          $($($rightPanel.find(\'h7\'))[0]).fadeOut(1600, "linear");\n          loadGroup();\n        },\n        error: function () {\n          VIS.ADialog.error(VIS.Msg.getMsg(\'VIS_ErrorSavingGroups\'));\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*\r\n        Set User Active And InActive\r\n    */\n    function activeUser(target, activate) {\n      $bsyDiv[0].style.visibility = "visible";\n      var url = \'\';\n      if (activate) {\n        target.removeClass(\'vis-group-user-ico vis-group-inactiveUser\');\n        target.addClass(\'vis-group-user-ico vis-group-activeUser\');\n        url = VIS.Application.contextUrl + "Group/ActiveUser";\n      } else {\n        target.removeClass(\'vis-group-user-ico vis-group-activeUser\');\n        target.addClass(\'vis-group-user-ico vis-group-inactiveUser\');\n        url = VIS.Application.contextUrl + "Group/InActiveUser";\n      }\n      $.ajax({\n        url: url,\n        data: {\n          AD_User_ID: target.data(\'uid\')\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          if (data < 1) {\n            VIS.ADialog.error("VIS_UserNotUpdated");\n          }\n          if (activate) {\n            target.prop("title", VIS.Msg.getMsg("Active"));\n          } else target.prop("title", VIS.Msg.getMsg("InActive"));\n          $bsyDiv[0].style.visibility = "hidden";\n        },\n        error: function () {\n          VIS.ADialog.error("VIS_UserNotUpdated");\n          $bsyDiv[0].style.visibility = "hidden";\n        }\n      });\n    }\n    ;\n\n    /*************************************/\n\n    this.disposeComponent = function () {\n      if ($btnCreateUser != null && $btnCreateUser != undefined) {\n        $btnCreateUser.off("click");\n      }\n      $searchUserBtn.off("click");\n      $searchUser.off("keydown");\n      //  $btnImportUser.on("click", importUser);\n      $btnSaveRoles.off("click");\n      $btnSaveGroup.off("click");\n      $searchGroupBtn.off("click");\n      $searchGroup.off("keydown");\n      $searchRoleBtn.off("click");\n      $searchRole.off("keydown");\n      $btnCreateGroup.off("click");\n      $btnCreateRole.off("click");\n      $divUserGroup.off("scroll");\n      $root.off("click");\n      this.frame = null;\n      this.windowNo = null;\n      $leftPanel.remove();\n      $leftPanel = null;\n      $middlePanel.remove();\n      $middlePanel = null;\n      $rightPanel.remove();\n      $rightPanel = null;\n      $divUserGroup.remove();\n      $divUserGroup = null;\n      $searchUser.remove();\n      $searchUser = null;\n      $searchUserBtn.remove();\n      $searchUserBtn = null;\n      $btnCreateUser.remove();\n      $btnCreateUser = null;\n      $btnSortUsers.remove();\n      $btnSortUsers = null;\n      // $btnImportUser.remove();\n      //$btnImportUser = null;\n      $btnCreateRole.remove();\n      $btnCreateRole = null;\n      $btnSaveRoles.remove();\n      $btnSaveRoles = null;\n      $divRoleGroup.remove();\n      $divRoleGroup = null;\n      $bsyDiv.remove();\n      $bsyDiv = null;\n      $searchGroup.remove();\n      $searchGroup = null;\n      $searchGroupBtn.remove();\n      $searchGroupBtn = null;\n      $searchRole.remove();\n      $searchRole = null;\n      $searchRoleBtn.remove();\n      $searchRoleBtn = null;\n      $btnCreateGroup.remove();\n      $btnCreateGroup = null;\n      $btnSaveGroup.remove();\n      $btnSaveGroup = null;\n      $divGroupsGroup.remove();\n      $divGroupsGroup = null;\n      usermodtmp.remove();\n      usertheModTmp.remove();\n      rolemodtmp.remove();\n      roletheModTmp.remove();\n      groupmodtmp.remove();\n      grouptheModTmp.remove();\n      roleAssigned = null;\n      groupAssigned = null;\n      roleChanged = null;\n      groupChanged = null;\n      $root.remove();\n      $root = null;\n      $menu = null;\n      self = null;\n    };\n\n    /*************************************/\n\n    this.getRoot = function () {\n      return $root;\n    };\n\n    /*************************************/\n  }\n  ;\n  GroupForm.prototype.init = function (windowNo, frame) {\n    this.frame = frame;\n    this.windowNo = windowNo;\n    frame.setTitle("VIS_Group");\n    this.frame.getContentGrid().append(this.getRoot());\n    this.initializeComponent();\n  };\n  GroupForm.prototype.dispose = function () {\n    /*CleanUp Code */\n    //dispose this component\n    this.disposeComponent();\n\n    //call frame dispose function\n    if (this.frame) this.frame.dispose();\n    this.frame = null;\n  };\n  VIS.GroupForm = GroupForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/grouprights/group.js?')},"./Areas/VIS/Scripts/app/grouprights/groupinfo.js":()=>{eval(";\n(function (VIS, $) {\n  function groupInfo(groupID) {\n    var $root = null;\n    var ch = null;\n    this.intialize = function () {\n      createLayout();\n    };\n    function createLayout() {\n      $root = $('<div  class=\"vis-forms-container\">');\n      getGroupInfo();\n    }\n    ;\n    function getGroupInfo() {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"Group/GetGroupChildInfo\",\n        data: {\n          groupID: groupID\n        },\n        success: function (result) {\n          var data = JSON.parse(result);\n          var script = '<div class=\"vis-group-gi-content\">' + '<label>' + data.GroupName + '</label>';\n          if (data.Description != null && data.Description != undefined && data.Description != \"\") {\n            script += '<p>' + data.Description + '</p>';\n          }\n          if (data.WindowName != null && data.WindowName != undefined && data.WindowName != \"\") {\n            script += '<div class=\"vis-group-gi-data\">' + '<label>' + VIS.Msg.getMsg(\"Windows\") + ':</label>' + '<p>' + data.WindowName + '</p>';\n            '</div>';\n          }\n          if (data.FormName != null && data.FormName != undefined && data.FormName != \"\") {\n            script += '<div class=\"vis-group-gi-data\">' + '<label>' + VIS.Msg.getMsg(\"VIS_Forms\") + ':</label>' + '<p>' + data.FormName + '</p>';\n            '</div>';\n          }\n          if (data.ProcessName != null && data.ProcessName != undefined && data.ProcessName != \"\") {\n            script += '<div class=\"vis-group-gi-data\">' + '<label>' + VIS.Msg.getMsg(\"VIS_Processes\") + ':</label>' + '<p>' + data.ProcessName + '</p>';\n            '</div>';\n          }\n          if (data.WorkflowName != null && data.WorkflowName != undefined && data.WorkflowName != \"\") {\n            script += '<div class=\"vis-group-gi-data\">' + '<label>' + VIS.Msg.getMsg(\"VIS_Workflows\") + ':</label>' + '<p>' + data.WorkflowName + '</p>';\n            '</div>';\n          }\n          script += '</div>';\n          $root.append(script);\n        },\n        error: function () {\n          VIS.ADialog.error(\"VIS_ErrorGettingGroupInfo\");\n        }\n      });\n      var script = \"\";\n    }\n    ;\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setContent($root);\n      ch.setHeight(500);\n      ch.setWidth(550);\n      ch.setTitle(VIS.Msg.getMsg(\"VIS_Groupinfo\"));\n      ch.setModal(true);\n      //Disposing Everything on Close\n      ch.onClose = function () {\n        if (self.onClose) self.onClose();\n        self.dispose();\n      };\n      ch.show();\n      ch.hideButtons();\n    };\n    this.dispose = function () {\n      self = null;\n      $root.remove();\n      $root = null;\n      ch = null;\n    };\n  }\n  ;\n  VIS.groupInfo = groupInfo;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/grouprights/groupinfo.js?")},"./Areas/VIS/Scripts/app/grouprights/orgaccess.js":()=>{eval(";\n(function (VIS, $) {\n  function orgAccess(setSelectedOrg) {\n    var $root = null;\n    var groupmodtmp,\n      grouptheModTmp = null;\n    var ch = null;\n    var orgAssigned = [];\n    var self = this;\n    this.intialize = function () {\n      createTemplate();\n      createLayout();\n    };\n    function createLayout() {\n      $root = $('<div>');\n      $.ajax({\n        url: VIS.Application.contextUrl + \"Group/GetOrgAccess\",\n        success: function (result) {\n          var data = JSON.parse(result);\n          $root.append(grouptheModTmp(data));\n          $($root.find('input')).on(\"click\", CheckboxClick);\n        },\n        error: function () {\n          VIS.ADialog.error('VIS_ErrorLoadingOrg');\n        }\n      });\n    }\n    ;\n    function createTemplate() {\n      var script = ' <script type=\"text/x-handlebars-template\">' + '{{#each this}}' + '<div style=\"border-bottom:1px solid rgba(var(--v-c-on-secondary), .2); margin-bottom: 10px\" class=\"vis-group-assinRole-check\">' + '<div style=\"width:100%\" class=\"vis-group-user-profile\">' + '<input type=\"Checkbox\" data-uid=\"{{OrgID}}\"> ' + '<p style=\"margin-bottom:2px\">{{OrgName}}</p>' + '<span class=\"vis-orgaccess-description\">{{Description}}</span>' + '</div>' + '</div>' + '{{/each}}​' + '<\/script>';\n      groupmodtmp = $(script).html();\n      grouptheModTmp = Handlebars.compile(groupmodtmp);\n    }\n    ;\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setContent($root);\n      ch.setWidth(450);\n      ch.setHeight(350);\n      ch.setTitle(VIS.Msg.getMsg(\"VIS_OrgAccess\"));\n      ch.setModal(true);\n      ch.onClose = function () {\n        self.dispose();\n      };\n      ch.show();\n      events();\n    };\n    this.dispose = function () {\n      this.prop = null;\n      $div = null;\n      $root.remove();\n      $root = null;\n      groupmodtmp = null;\n      grouptheModTmp = null;\n      ch = null;\n      self = null;\n      orgAssigned = null;\n    };\n    function events() {\n      ch.onOkClick = function (e) {\n        setSelectedOrg(orgAssigned);\n        self.dispose();\n      };\n      ch.onCancelClick = function () {\n        self.dispose();\n        // ch.close();\n        //if (self.onClose) self.onClose();\n        //  self.dispose();\n      };\n    }\n    ;\n\n    /*\r\n      Fire when user click on role checkbox\r\n    */\n    function CheckboxClick(e) {\n      var target = $(e.target);\n      if (target.prop('checked')) {\n        if ($.inArray(target.data('uid')) == -1) {\n          orgAssigned.push(target.data('uid'));\n        }\n      } else {\n        orgAssigned.splice(orgAssigned.indexOf(target.data('uid')), 1);\n      }\n    }\n  }\n  ;\n  VIS.orgAccess = orgAccess;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/grouprights/orgaccess.js?")},"./Areas/VIS/Scripts/app/historymgr.js":()=>{eval("// Should be executed BEFORE any hash change has occurred.\n;\n(function (namespace, VIS) {\n  // Closure to protect local variable \"var hash\"\n  var historyMgr = namespace.historyMgr || {};\n\n  /**\r\n   *  Add replaceState function to historyMgrObject\r\n   *\r\n   */\n  if ('replaceState' in history) {\n    // Yay, supported!\n    historyMgr.replaceHash = function (newhash) {\n      if (('' + newhash).charAt(0) !== '#') newhash = '#' + newhash;\n      history.replaceState('', '', newhash);\n    };\n  } else {\n    var hash = location.hash;\n    historyMgr.replaceHash = function (newhash) {\n      if (location.hash !== hash) history.back();\n      location.hash = newhash;\n    };\n  }\n\n  /* update url string after hash */\n  historyMgr.updateHistory = function (newEntry) {\n    historyMgr.replaceHash(newEntry);\n  };\n\n  //historyMgr.removeHistory = function (entry) {\n  //    var loc = historyMgr.geHashtLocation();\n  //    loc = loc.replace(entry, \"\");\n  //    historyMgr.replaceHash(loc);\n  //};\n\n  historyMgr.restoreHistory = function () {\n    var loc = historyMgr.geHashtLocation();\n    VIS.viewManager.restoreActions(loc);\n  };\n\n  /**\r\n   *  Get Hash Location\r\n   *\r\n   */\n  historyMgr.geHashtLocation = function () {\n    var h = location.hash;\n    if (h.length > 1) return h.substring(1);\n    return \"\";\n  };\n  namespace.historyMgr = historyMgr; //global Assignment\n})(window, VIS);\n\n// This function can be namespaced. In this example, we define it on window:\n\n//var hash = window.geHashtLocation();\n\n//window.replaceHash(hash + ',Newhashvariable');\n//hash = window.geHashtLocation();\n\n//window.replaceHash(hash+',variable');\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/historymgr.js?")},"./Areas/VIS/Scripts/app/i18N.js":()=>{eval('/**\r\n *\tget cuture specific  Messages \r\n *\r\n */\n\n;\nVIS.Msg = {};\nVIS.Msg.elements = {};\n\n/**\r\n *\tGet translated text for AD_Message\r\n *  @param\tkey - Message Key\r\n *  @return translated text\r\n */\nVIS.I18N.getLabel = function (key, params, object, property) {\n  var label, i;\n  if (!VIS.I18N.labels[key]) {\n    if (object && property) {\n      VIS.I18N.getLabelFromServer(key, params, object, property);\n    }\n    return \'[\' + key + \']\';\n  }\n  label = VIS.I18N.labels[key];\n  if (params && params.length && params.length > 0) {\n    for (var i = 0; i < params.length; i++) {\n      label = label.replace("%" + i, params[i]);\n    }\n  }\n  if (object && property) {\n    if (Object.prototype.toString.call(object[property]) === \'[object Function]\') {\n      object[property](label);\n    } else {\n      object[property] = label;\n    }\n  }\n  return label;\n};\nVIS.I18N.getLabelFromServer = function (key, params, object, property) {\n  // if (!z) {\n  return \'UNDEFINED \' + key;\n  //}\n\n  //var clientContext = response.clientContext;\n  //if (data.label) {\n  //    VIS.I18N.labels[clientContext.key] = data.label;\n  //    VIS.I18N.getLabel(clientContext.key, clientContext.params, clientContext.object, clientContext.property);\n  //} else {\n  //    if (isc.isA.Function(clientContext.object[clientContext.property])) {\n  //        clientContext.object[clientContext.property](\'LABEL NOT FOUND \' + clientContext.key);\n  //    } else {\n  //        clientContext.object[clientContext.property] = \'LABEL NOT FOUND \' + clientContext.key;\n  //    }\n  //}\n};\n\n/**\r\n *\tGet translated text for AD_Message\r\n *  @param\tkey - Message Key\r\n *  @return translated text\r\n */\nVIS.Msg.getMsg = function (key, msgPlusToolTip, onlyToolTip) {\n  if (!VIS.I18N.labels[key]) {\n    return \'[\' + key + \']\';\n  }\n  label = VIS.Utility.Util.cleanMnemonic(VIS.I18N.labels[key]); //Edited by sarab\n\n  var lbs = label.split(\'      \');\n  if (!msgPlusToolTip) {\n    label = lbs[0];\n  }\n  if (onlyToolTip && lbs.length > 1) {\n    label = lbs[1];\n  }\n  return label;\n};\n\n/**\r\n *\tTranslate elements enclosed in "@" (at sign)\r\n *  @param ctx      Context\r\n *  @param text     Text\r\n *  @return translated text or original text if not found\r\n */\nVIS.Msg.parseTranslation = function (ctx, text) {\n  if (text == null || text.length == 0) return text;\n  var inStr = text;\n  var token;\n  var outStr = "";\n  var i = inStr.indexOf("@");\n  while (i != -1) {\n    outStr += inStr.substring(0, i); // up to @\n    inStr = inStr.substring(i + 1, inStr.length); // from first @\n\n    var j = inStr.indexOf("@"); // next @\n    if (j < 0)\n      // no second tag\n      {\n        inStr = "@" + inStr;\n        break;\n      }\n    token = inStr.substring(0, j);\n    outStr += this.translate(ctx, token); // replace context\n\n    inStr = inStr.substring(j + 1, inStr.length); // from second @\n    i = inStr.indexOf("@");\n  }\n  outStr += inStr; //\tadd remainder\n  return outStr;\n};\n\n// added new parameter for multiple keys (comma separated string)\nVIS.Msg.translate = function (ctx, text, multipleKeys) {\n  if (text == null || text.length == 0) {\n    return text;\n  }\n\n  //var s = VIS.Utility.Util.cleanMnemonic(VIS.I18N.labels[text]); //(String)ctx.Get(text);\n  //if (s != null && s.length > 0) {\n  //    return s;\n  //}\n\n  // Change by Lokesh Chauhan for handling multiple keys as comma separated string to translate\n  if (multipleKeys) {\n    var result = null;\n    $.ajax({\n      url: VIS.Application.contextUrl + "JsonData/GetTranslatedText",\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: false,\n      data: JSON.stringify({\n        Columns: text,\n        AD_Language: VIS.Env.getAD_Language(ctx)\n      })\n    }).done(function (json) {\n      result = json;\n    });\n    if (result) return JSON.parse(result);else result;\n  } else {\n    return VIS.Msg.translate3(VIS.Env.getAD_Language(ctx), ctx.isSOTrx(), text);\n  }\n};\nVIS.Msg.getElement = function (ctx, text) {\n  return VIS.Msg.getElement3(VIS.Env.getAD_Language(ctx), text, true);\n};\nVIS.Msg.getElement1 = function (text) {\n  return VIS.Msg.getElement3(VIS.Env.getAD_Language(VIS.Env.getCtx()), text, true);\n};\nVIS.Msg.translate3 = function (ad_language, isSOTrx, text) {\n  if (text == null || text.equals("")) return "";\n  var AD_Language = ad_language;\n  if (AD_Language == null || AD_Language.length == 0) AD_Language = VIS.Env.getBaseAD_Language();\n\n  //\tCheck AD_Element\n  var retStr = VIS.Msg.getElement3(AD_Language, text, isSOTrx);\n  if (!retStr.equals("")) return retStr.trim();\n\n  ////\tCheck AD_Message\n  //if (DatabaseType.IsMSSql)\n  //{\n  //    if (text.Equals("Date"))\n  //        text = "DATETIME";\n  //}\n  //retStr = Get().Lookup(AD_Language, text);\n\n  retStr = VIS.Msg.getMsg(text);\n  if (retStr && retStr.length > 0) {\n    return retStr;\n  }\n\n  //if (retStr != null)\n  //    return retStr;\n  return text;\n};\nVIS.Msg.getElement3 = function (ad_language, ColumnName, isSOTrx) {\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  if (ColumnName == null || ColumnName.equals("")) return "";\n  var AD_Language = ad_language;\n  if (AD_Language == null || AD_Language.length == 0) AD_Language = VIS.Env.getBaseAD_Language();\n  if (VIS.Msg.elements[ColumnName]) return VIS.Msg.elements[ColumnName];\n\n  //\tCheck AD_Element\n  var retStr = "";\n  var sqlQry = "";\n  var dr = null;\n  try {\n    if (AD_Language == null || AD_Language.length == 0 || VIS.Env.isBaseLanguage(AD_Language, "AD_Element")) {\n      sqlQry = "VIS_73";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@ColumnName", ColumnName.toUpper());\n      dr = executeReader(sqlQry, param);\n    } else {\n      sqlQry = "VIS_74";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@ColumnName", ColumnName.toUpper());\n      param[1] = new VIS.DB.SqlParam("@AD_Language", AD_Language);\n      dr = executeReader(sqlQry, param);\n    }\n    if (dr.read()) {\n      retStr = dr.getString(0);\n      if (!isSOTrx) {\n        var temp = dr.getString(1);\n        if (temp != null && temp.length > 0) retStr = temp;\n      }\n    }\n    dr.close();\n  } catch (e) {\n    dr.close();\n  }\n  if (retStr != null) retStr = retStr.trim();\n  VIS.Msg.elements[ColumnName] = retStr;\n  return retStr;\n};\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/i18N.js?')},"./Areas/VIS/Scripts/app/initialize.js":()=>{eval(';\n(function ($, V) {\n  /* Initlial Setting for App */\n  VIS.VApp = function () {\n    /* \r\n      Set Login Cultue to Globalize js\r\n    */\n    function setCulture() {\n      var lang = V.context.getAD_Language().replace("_", "-");\n      Globalize.culture(lang);\n    }\n    ;\n    function startApp() {\n      //Remove loading div\n      document.getElementById("vis_mainConatiner").removeChild(document.getElementById("vis_busyGrid"));\n\n      /* get Validation token and set in ajax default setting*/\n      var token = $("#vis_antiForgeryToken").val();\n      //prject label token setting\n      $.ajaxSetup({\n        headers: {\n          \'VerificationToken\': token\n        }\n        //,\n        //type: "POST"\n      });\n      VIS.Application.isIOS = /ipad|iphone|ipod/i.test(navigator.userAgent.toLowerCase());\n    }\n    ;\n\n    /* Intilize App Logger js */\n    function initLogger() {\n      var VL = V.Logging;\n      VL.VLogMgt.initialize(true);\n      VL.VLogMgt.setLevel(VIS.Ini.getTraceLevel());\n    }\n    ;\n\n    /* load local context and overwrite in  server context class */\n    function loadLocalprefIntoContext() {\n      VIS.Ini.updateLocalContextFromIni();\n    }\n    ;\n\n    /* Entery Point of App */\n    function init() {\n      startApp();\n      setCulture();\n      loadLocalprefIntoContext();\n      initLogger();\n      VIS.desktopMgr.start(); //Invoke Desktop mgr \'s start function\n\n      VIS.themeMgr.init();\n\n      //Set Page Size of Window\n      VIS.Env.setWINDOW_PAGE_SIZE(VIS.Ini.getLocalStorage(VIS.IniConstants.WIN_PAGESIZE));\n      //_ctx.SetPrintNativeDigits(VAdvantage.DataBase.Ini.IsPrintNativeDigits() ? "Y" : "N");\n\n      //Set current date \n      const options = {\n        weekday: \'long\',\n        year: \'numeric\',\n        month: \'long\',\n        day: \'numeric\'\n      };\n      var date = $(\'#vis_userDate\').find(\'span\');\n      date.text(" " + new Date().toLocaleDateString(V.context.getAD_Language().replace("_", "-"), options));\n      //date.text(new Date().toLocaleDateString(\'de-DE\', options));\n      //V.context.getAD_Language().replace("_", "-");\n    }\n    return {\n      init: init\n    };\n  }();\n})(jQuery, VIS);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/initialize.js?')},"./Areas/VIS/Scripts/app/logger.js":()=>{eval(';\nVIS.Logging = VIS.Logging || {};\n(function (VIS, $) {\n  //1. Level\n  function Level(name, value) {\n    this.name = name;\n    this.value = value;\n  }\n  ;\n  Level.prototype.getIntValue = function () {\n    return this.value;\n  };\n  Level.prototype.getName = function () {\n    return this.name;\n  };\n  Level.prototype.getLevel = function (val) {\n    if (Level.OFF.getIntValue() == val) return Level.OFF;else if (Level.SEVERE.getIntValue() == val) return Level.SEVERE;else if (Level.WARNING.getIntValue() == val) return Level.WARNING;else if (Level.INFO.getIntValue() == val) return Level.INFO;else if (Level.CONFIG.getIntValue() == val) return Level.CONFIG;else if (Level.FINE.getIntValue() == val) return Level.FINE;else if (Level.FINER.getIntValue() == val) return Level.FINER;else if (Level.FINEST.getIntValue() == val) return Level.FINEST;else if (Level.ALL.getIntValue() == val) return Level.ALL;\n  };\n  Level.OFF = new Level("OFF", 9999);\n  Level.SEVERE = new Level("SEVERE", 1000);\n  Level.WARNING = new Level("WARNING", 900);\n  Level.INFO = new Level("INFO", 800);\n  Level.CONFIG = new Level("CONFIG", 700);\n  Level.FINE = new Level("FINE", 600);\n  Level.FINER = new Level("FINER", 500);\n  Level.FINEST = new Level("FINEST", 400);\n  Level.ALL = new Level("ALL", 0);\n\n  //2. Log Record\n  function LogRecord(level, msg) {\n    this._level = level;\n    this._sequenceNumber;\n    this._sourceClassName;\n    this._sourceMethodName;\n    this._message = msg;\n    this._lineNumber;\n    this._loggerName;\n  }\n  LogRecord.prototype.getMessage = function () {\n    return this._message;\n  };\n  LogRecord.prototype.setMessage = function (msg) {\n    this._message = msg;\n  };\n  LogRecord.prototype.getSourceClassName = function () {\n    return this._sourceClassName;\n  };\n  LogRecord.prototype.setSourceClassName = function (msg) {\n    this._sourceClassName = msg;\n  };\n  LogRecord.prototype.getSourceMethodName = function () {\n    return this._sourceMethodName;\n  };\n  LogRecord.prototype.setSourceMethodName = function (msg) {\n    this._sourceMethodName = msg;\n  };\n  LogRecord.prototype.getLineNumber = function () {\n    return this._lineNumber;\n  };\n  LogRecord.prototype.setLineNumber = function (msg) {\n    this._lineNumber = msg;\n  };\n  LogRecord.prototype.getLoggerName = function () {\n    return this._loggerName;\n  };\n  LogRecord.prototype.setLoggerName = function (msg) {\n    this._loggerName = msg;\n  };\n  LogRecord.prototype.getLevel = function () {\n    return this._level;\n  };\n\n  //3.VLogFilter\n  function VLogFilter() {\n    if (VLogFilter.prototype.singleInstance) {\n      return VLogFilter.prototype.singleInstance;\n    }\n    VLogFilter.prototype.singleInstance = this;\n  }\n  ;\n  VLogFilter.prototype.singleInstance = null;\n  VLogFilter.get = function () {\n    if (VLogFilter.prototype.singleInstance) {\n      return VLogFilter.prototype.singleInstance;\n    }\n    return new VLogFilter();\n  };\n  VLogFilter.prototype.getIsLoggable = function (record) {\n    if (record.getLevel() === Level.SEVERE || record.getLevel() === Level.WARNING) return true;\n    //\n    var loggerName = record.getLoggerName();\n    if (loggerName) {\n      //\tif (loggerName.toLowerCase().indexOf("focus") != -1)\n      //\t\treturn true;\n      if (loggerName.startsWith("System.")) return false;\n    }\n    var className = record.sourceClassName;\n    if (className) {\n      if (className.startsWith("System.")) return false;\n    }\n    return true;\n  };\n\n  //4.VLogFormatter\n  function VLogFormatter() {\n    if (VLogFormatter.prototype.singletonInstance) {\n      return VLogFormatter.prototype.singletonInstance;\n    }\n    VLogFormatter.prototype.singletonInstance = this;\n  }\n  VLogFormatter.prototype.singletonInstance = null;\n  /**\tNew Line\t\t\t\t*/\n  VLogFormatter.prototype.NL = \'/n\';\n  VLogFormatter.get = function () {\n    if (VLogFormatter.prototype.singletonInstance) {\n      return VLogFormatter.prototype.singletonInstance;\n    }\n    return new VLogFormatter();\n  };\n  VLogFormatter.prototype.format = function (record) {\n    var sb = new StringBuilder();\n    //time of execution\n    var time = Date.now.toString("yyyy-MM-dd hh:mm:ss.ms");\n    time = time + "00";\n\n    /**\tTime/Error\t\t*/\n    if (record.getLevel() == Level.prototype.SEVERE) {\n      //         12.12.12.123 \n      sb.append("===========> ");\n      sb.append("    (SEVERE)   ");\n      //if (VAdvantage.DataBase.Ini.IsClient())\n      //System.Media.SystemSounds.Beep.Play();\n    } else if (record.getLevel() == Level.WARNING) {\n      //         12.12.12.123\n      sb.append("-----------\x3e ");\n      sb.append("    (WARNING)  ");\n    } else {\n      //123456789123456789\n      sb.append(time.Substring(11, 23 - 11));\n      var spaces = 11;\n      if (record.getLevel() == Level.INFO) sb.append("    (INFO)     ");else if (record.getLevel() == Level.CONFIG) sb.append("    (CONFIG)   ");else if (record.getLevel() == Level.FINE) sb.append("    (FINE)     ");else if (record.getLevel() == Level.FINER) sb.append("    (FINER)    ");else if (record.getLevel() == Level.FINEST) sb.append("    (FINEST)   ");\n      //sb.Append("                          ".Substring(0, spaces));\n    }\n\n    /**\tClass.method\t**/\n    //if (!_shortFormat)\n    //   sb.append(GetClassMethod(record)).Append(": ");\n\n    /**\tMessage\t\t\t**/\n    sb.append(record.message);\n\n    //sb.Append(record.sourceClassName + "." + record.sourceMethodName + " > " + record.lineNumber + " > " + record.message);\n    return sb.toString();\n  };\n  VLogFormatter.prototype.getHead = function () {\n    //Assembly asm = Assembly.GetExecutingAssembly();\n    var asmName = "ViennaAdvantage";\n    var sb = new StringBuilder().append("*** ").append(DateTime.Now.ToString()).append(" VAdvantage Log ").append(" ***").append("\\n").append(asmName);\n    return sb.toString();\n  };\n  VLogFormatter.prototype.getTail = function () {\n    var sb = new StringBuilder().append("*** ")\n    //.append(DateTime.Now.ToString())\n    .append(" VAdvantage Log").append(" ***");\n    return sb.toString();\n  };\n  /**************************************************************************\r\n   * \tGet Class Method from Log Record\r\n   *\t@param record record\r\n   *\t@return class.method\r\n   */\n  VLogFormatter.prototype.getClassMethod = function (record) {\n    var sb = "";\n    var className = record.getLoggerName();\n    if (className == null || className.indexOf("default") != -1 //\tanonymous logger\n    || className.indexOf("global") != -1)\n      //\tglobal logger\n      className = record.getSourceClassName();\n    if (className != null) {\n      var index = className.lastIndexOf(\'.\');\n      if (index != -1) sb += className.substring(index + 1);else sb += className;\n    } else sb += record.getLoggerName();\n    if (record.getSourceMethodName() != null) sb += "." + record.getSourceMethodName();\n    var retValue = sb;\n    if (retValue.equals("Trace.printStack")) return "";\n    return retValue;\n  }; //\tgetCl\n\n  VLogFormatter.prototype.getParameters = function (record) {\n    var sb = "";\n    var parameters = record.getParameters();\n    if (parameters != null && parameters.length > 0) {\n      for (var i = 0; i < parameters.length; i++) {\n        if (i > 0) sb += ", ";\n        sb += parameters[i];\n      }\n    }\n    return sb;\n  }; //\tgetParameters\n\n  /**\r\n   * \tGet Log Exception\r\n   *\t@param record log record\r\n   *\t@return null if exists or string\r\n   */\n  VLogFormatter.prototype.getExceptionTrace = function (record) {\n    try {} catch (ex) {}\n    return "";\n  }; //\tgetException\n\n  //5. Handler\n  function Handler() {\n    this.offValue = Level.OFF.getIntValue();\n    this.logLevel = Level.ALL;\n    this.formatter;\n    this.filter;\n  }\n  Handler.prototype.publish = function (record) {};\n  Handler.prototype.close = function () {};\n  Handler.prototype.flush = function () {};\n  Handler.prototype.setLevel = function (newLevel) {\n    if (newLevel == null) {\n      throw new NullReferenceException("No Level");\n    }\n    this.logLevel = newLevel;\n  };\n  Handler.prototype.getLevel = function () {\n    return this.logLevel;\n  };\n  Handler.prototype.getFilter = function () {\n    return this.filter;\n  };\n  Handler.prototype.setFilter = function (newFilter) {\n    this.filter = newFilter;\n  };\n  Handler.prototype.getIsLoggable = function (record) {\n    var levelValue = this.getLevel().getIntValue();\n    if (record.getLevel().getIntValue() < levelValue || levelValue == this.offValue) {\n      return false;\n    }\n    var filter = this.getFilter();\n    if (filter == null) {\n      return true;\n    }\n    return filter.getIsLoggable(record);\n  };\n  Handler.prototype.getFormatter = function () {\n    return this.formatter;\n  };\n  Handler.prototype.setFormatter = function (newFormatter) {\n    this.formatter = newFormatter;\n  };\n\n  //6 Log Buffer\n  function VLogErrorBuffer() {\n    if (VLogErrorBuffer.prototype.singleInstance) {\n      return VLogErrorBuffer.prototype.singleInstance;\n    }\n\n    //\tForatting\n    this.setFormatter(VLogFormatter.get());\n    //\tDefault Level\n    this.setLevel(Level.INFO);\n    //\tFilter\n    this.setFilter(VLogFilter.get());\n\n    /** Error Buffer Size\t\t\t*/\n    this.ERROR_SIZE = 20;\n    /**\tThe Error Buffer\t\t\t*/\n    this.m_errors = [];\n    /**\tThe Error Buffer History\t*/\n    this.m_history = [];\n\n    /** Log Size\t\t\t\t\t*/\n    this.LOG_SIZE = 100;\n    /**\tThe Log Buffer\t\t\t\t*/\n    this.m_logs = [];\n    /**\tIssue Error\t\t\t\t\t*/\n    this.m_issueError = true;\n    VLogErrorBuffer.prototype.singleInstance = this;\n  }\n  ;\n  VIS.Utility.inheritPrototype(VLogErrorBuffer, Handler);\n  VLogErrorBuffer.prototype.singleInstance = null;\n  VLogErrorBuffer.get = function (create) {\n    if (VLogErrorBuffer.prototype.singleInstance) return VLogErrorBuffer.prototype.singleInstance;else if (create) {\n      return new VLogErrorBuffer();\n    }\n    return null;\n  };\n  VLogErrorBuffer.prototype.setLevel = function (newLevel) {\n    if (newLevel == null) return;\n    if (newLevel == Level.OFF) this.$super.setLevel.call(this, Level.SEVERE);else if (newLevel == Level.ALL || newLevel == Level.FINEST || newLevel == Level.FINER) this.$super.setLevel.call(this, Level.FINE);else this.$super.setLevel.call(this, newLevel);\n  };\n  VLogErrorBuffer.prototype.publish = function (record) {\n    if (!this.getIsLoggable(record) || this.m_logs == null) return;\n\n    //\tOutput\n    if (this.m_logs.length >= this.LOG_SIZE) this.m_logs.shift();\n    this.m_logs.push(record);\n\n    //\tWe have an error\n    if (record.getLevel() == Level.SEVERE) {\n      if (this.m_errors.length >= this.ERROR_SIZE) {\n        this.m_errors.shift();\n        this.m_history.shift();\n      }\n      //\tAdd Error\n      this.m_errors.push(record);\n      var history = [];\n      for (var i = 0; i < this.m_logs.length; i++) {\n        var rec = this.m_logs[i];\n        if (rec.getLevel() == Level.SEVERE) {\n          if (history.length == 0) history.push(rec);else break; //\tdon\'t incluse previous error\n        } else {\n          history.push(rec);\n          if (history.length > 10) break; //\tno more then 10 history records\n        }\n      }\n      this.m_history.push(history);\n      //\tIssue Reporting\n      if (this.m_issueError) {\n        var loggerName = record.getLoggerName(); //\tclass name\t\n        //\tString className = record.getSourceClassName();\t\t//\tphysical class\n        var methodName = record.getSourceMethodName(); //\t\n        //if (methodName && !methodName.equals("SaveError")\n        //    && !methodName.equals("Get_Value")\n        //    && !methodName.equals("DataSave")\n        //    && loggerName.indexOf("Issue") == -1\n        //    && loggerName.indexOf("CConnection") == -1\n        //    ) {\n        //    //m_issueError = false;\n        //    //MIssue.create(record);\n        //    // m_issueError = true;\n        //}\n      }\n    }\n    console.log(record);\n  };\n  VLogErrorBuffer.prototype.close = function () {\n    if (this.m_logs != null) {\n      this.m_logs.length = 0;\n      this.m_logs = null;\n    }\n    if (this.m_errors != null) {\n      this.m_errors.length = 0;\n      this.m_errors = null;\n    }\n    if (this.m_history != null) {\n      this.m_history.length = 0;\n      this.m_history = null;\n    }\n  };\n\n  /**************************************************************************\r\n  * \tGet ColumnNames of Log Entries\r\n  * \t@param ctx context (not used)\r\n  * \t@return string vector\r\n  */\n  VLogErrorBuffer.prototype.getColumnNames = function (ctx) {\n    var colName = [4];\n    colName[0] = "Time";\n    colName[1] = "Level";\n    colName[2] = "Class.Method";\n    colName[3] = "Message";\n    return colName;\n  }; //\tgetColumnNames\n\n  /**\r\n  * \tGet Array of events with most recent first\r\n  * \t@param errorsOnly if true errors otherwise log\r\n  * \t@return array of events \r\n  */\n  VLogErrorBuffer.prototype.getRecords = function (errorsOnly) {\n    var retValue = null;\n    if (errorsOnly) {\n      retValue = this.m_errors.slice();\n    } else {\n      retValue = this.m_logs.slice();\n    }\n    return retValue;\n  }; //\tgetEvents\n\n  /**\r\n  * \tGet Log Data\r\n  * \t@param errorsOnly if true errors otherwise log\r\n  * \t@return data array\r\n  */\n  VLogErrorBuffer.prototype.getLogData = function (errorsOnly) {\n    var records = this.getRecords(errorsOnly);\n    //\tSystem.out.println("getLogData - " + events.length);\n    var rows = [];\n    for (var i = 0, len = records.length; i < len; i++) {\n      var record = records[i];\n      var cols = [];\n      //\n      cols.push(new Date().toString()); //.getMillis()));\n      cols.push(record.getLevel().getName());\n      //\n      cols.push(VLogFormatter.get().getClassMethod(record));\n      cols.push(record.getMessage());\n      //\n      //cols.push(VLogFormatter.get().getParameters(record));\n      //cols.push(VLogFormatter.get().getExceptionTrace(record));\n      //\n      rows.push(cols);\n    }\n    return rows;\n  }; //\tgetData\n\n  /**\r\n  * \tReset Error Buffer\r\n  * \t@param errorsOnly if true errors otherwise log\r\n  */\n  VLogErrorBuffer.prototype.resetBuffer = function (errorsOnly) {\n    {\n      this.m_errors.length = 0;\n      this.m_history.length = 0;\n    }\n    if (!errorsOnly) {\n      this.m_logs.length = 0;\n    }\n  };\n  //\tresetBuffer\n\n  //7 Logger \n\n  function Logger(name) {\n    this.levelValue = Level.INFO.getIntValue();\n    this.name = name; //name of the logger\n    this.levelObject; //level object\n    this.handlers = []; //diffrent handlers (VLogFile)\n    this.kids = [];\n    this.manager = LogManager.getLogManager(); //initiate the logmanager class\n    this.parent; // our nearest parent.\n    this.offValue = Level.OFF.getIntValue();\n    this.filter;\n  }\n  Logger.prototype.setFilter = function (newFilter) {\n    this.filter = newFilter;\n  };\n  Logger.prototype.getFilter = function () {\n    return this.filter;\n  };\n  Logger.prototype.log = function (level, msg, e) {\n    var msg = msg;\n    if (e) {\n      if (e.message) {\n        msg += " => " + e.message;\n      }\n      if (e.stack) {\n        msg += " ===> " + e.stack;\n      }\n    }\n\n    //check if msg is eligible to be logged or not\n    if (level.getIntValue() < this.levelValue || this.levelValue == Level.OFF.getIntValue()) return;\n    var lr = new LogRecord(level, msg); //set the values into logrecord class\n\n    lr.setLoggerName(this.name);\n\n    //if (lr.getLevel().getIntValue() < this.levelValue || levelValue == offValue)\n    //    return;\n\n    if (this.filter != null && !this.filter.getIsLoggable(lr)) {\n      return;\n    }\n\n    // Post the LogRecord to all our Handlers, and then to\n    // our parents\' handlers, all the way up the tree.\n\n    var logger = this;\n    while (logger != null) {\n      var targets = logger.getHandlers();\n      if (targets != null) for (var i = 0; i < targets.length; i++) {\n        //VLogFile.Publish (abstract method)\n        targets[i].publish(lr);\n      }\n      logger = logger.getParent();\n    }\n  };\n  Logger.prototype.getParent = function () {\n    return this.parent;\n  };\n  Logger.prototype.getHandlers = function () {\n    if (this.handlers == null) {\n      //if handler is null, set the empty handler\n      return emptyHandlers;\n    }\n    return this.handlers;\n  };\n  Logger.prototype.getName = function () {\n    return this.name;\n  };\n  Logger.prototype.setLevel = function (level) {\n    this.levelObject = level;\n    this.levelValue = level.getIntValue();\n    //UpdateEffectiveLevel();\n  };\n  Logger.prototype.getLevel = function () {\n    return this.levelObject;\n  };\n  Logger.prototype.addHandler = function (handler) {\n    if (this.handlers == null) handlers = [];\n    this.handlers.push(handler);\n  };\n  Logger.prototype.removeHandler = function (handler) {\n    if (handler == null) {\n      return;\n    }\n    if (this.handlers == null) {\n      return;\n    }\n    this.handlers.remove(handler);\n  };\n  Logger.getLogger = function (name) {\n    var logm = LogManager.getLogManager();\n    var result = logm.getLogger(name);\n    if (result == null) {\n      //if not found, add logger to the log manager\n      result = new Logger(name);\n      logm.addLogger(result);\n      result = logm.getLogger(name);\n    }\n    return result;\n  };\n  Logger.prototype.setParent = function (logger) {\n    //if (parent == null)\n    //    return;\n    this.parent = logger;\n    //    DoSetParent(logger);\n  };\n  Logger.prototype.getIsLoggable = function (level) {\n    if (level.getIntValue() < levelValue || levelValue == offValue) {\n      return false;\n    }\n    return true;\n  };\n  Logger.prototype.fine = function (msg) {\n    if (Level.FINE.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.FINE, msg);\n  };\n  Logger.prototype.info = function (msg) {\n    if (Level.INFO.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.INFO, msg);\n  };\n  Logger.prototype.config = function (msg) {\n    if (Level.CONFIG.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.CONFIG, msg);\n  };\n  Logger.prototype.finer = function (msg) {\n    if (Level.FINER.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.FINER, msg);\n  };\n  Logger.prototype.finest = function (msg) {\n    if (Level.FINEST.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.FINEST, msg);\n  };\n  Logger.prototype.severe = function (msg) {\n    if (Level.SEVERE.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.SEVERE, msg);\n  };\n  Logger.prototype.warning = function (msg) {\n    if (Level.WARNING.getIntValue() < this.levelValue) {\n      return;\n    }\n    this.log(Level.WARNING, msg);\n  };\n  //Added By Sarab\n  Logger.prototype.saveError = function (msg, err) {\n    //_lastException = err;\n    var issueError = true;\n    return this.saveError(msg, err.message, issueError);\n  };\n  Logger.prototype.saveError = function (msg, err, issueError) {\n    // _lastError = new ValueNamePair(AD_Message, message);\n    //  print it\n    if (issueError) this.warning(msg + " " + err.message);\n    return true;\n  }; //  saveError\n\n  //-----------\n\n  Logger.prototype.getIsLevelFinest = function () {\n    return VLogMgt.getIsLevelFinest();\n  };\n\n  //8/// RootLogger\n  function RootLogger() {\n    Logger.call(this, "");\n    this.setLevel(Level.INFO);\n  }\n  VIS.Utility.inheritPrototype(RootLogger, Logger);\n\n  //9.Log Manager\n  function LogManager() {\n    if (LogManager.prototype.singleInstance) {\n      return LogManager.prototype.singleInstance;\n    }\n    // The global LogManager object\n    this.emptyHandlers = [];\n    // Table of known loggers.  Maps names to Loggers.\n    this.loggers = {};\n    ;\n    this.defaultLevel = Level.INFO;\n    this.rootLogger;\n    LogManager.prototype.singleInstance = this;\n    // Tree of known loggers\n    //private LogNode root = new LogNode(null);\n  }\n  LogManager.prototype.singleInstance = null;\n  LogManager.prototype.addLogger = function (logger) {\n    var name = logger.getName();\n    var old = null;\n    if (name in this.loggers) old = loggers[name];\n    if (old != null) return false;\n\n    // We\'re adding a new logger.\n    // Note that we are creating a strong reference here that will\n    // keep the Logger in existence indefinitely.\n    // if (loggers.ContainsKey(name))\n    this.loggers[name] = logger;\n    if (logger instanceof RootLogger) {} else logger.setParent(this.rootLogger);\n    // else\n    //   loggers.Add(name, logger);\n\n    //Level level = Level.INFO;\n    //logger.SetLevel(level);\n\n    // Find the new node and its parent.\n    //LogNode node = FindNode(name);\n    //node.logger = logger;\n    //Logger parent = null;\n    //LogNode nodep = node.parent;\n    //while (nodep != null)\n    //{\n    //    if (nodep.logger != null)\n    //    {\n    //        parent = nodep.logger;\n    //        break;\n    //    }\n    //    nodep = nodep.parent;\n    //}\n\n    //if(parent != null)\n    //    DoSetParent(logger, parent);\n\n    //node.WalkAndSetParent(logger);\n    return true;\n    //Level level = getLevelProperty(name + ".level", null);\n  };\n  LogManager.prototype.reset = function () {\n    //ArrayList list = loggers.ToArray();\n    for (var prop in this.loggers) {\n      ResetLogger(prop);\n    }\n  };\n  LogManager.prototype.resetLogger = function (name) {\n    var logger = this.getLogger(name);\n    if (logger == null) {\n      return;\n    }\n    // Close all the Logger\'s handlers.\n    var targets = logger.getHandlers();\n    for (var i = 0; i < targets.length; i++) {\n      var h = targets[i];\n      logger.removeHandler(h);\n      try {\n        h.close();\n      } catch (ex) {\n        //Problems closing a handler?  Keep going...\n      }\n    }\n    if (name != null && name.equals("")) {\n      // This is the root logger.\n      logger.setLevel(this.defaultLevel);\n    } else {\n      logger.setLevel(null);\n    }\n  };\n  LogManager.prototype.getLogger = function (name) {\n    if (name in this.loggers) return this.loggers[name];else return null;\n  };\n  LogManager.getLogManager = function () {\n    if (!LogManager.prototype.singleInstance) {\n      new LogManager();\n      var mgr = LogManager.prototype.singleInstance;\n      mgr.rootLogger = new RootLogger();\n      mgr.addLogger(mgr.rootLogger);\n    }\n    return LogManager.prototype.singleInstance;\n  };\n  LogManager.prototype.getLoggerNames = function () {\n    return this.loggers;\n  };\n\n  //10. VLogger\n  function VLogger(name) {\n    Logger.call(this, name);\n  }\n  VIS.Utility.inheritPrototype(VLogger, Logger);\n  VLogger.getVLogger = function (className) {\n    var manager = LogManager.getLogManager(); //get the current logmanager object\n    if (!className) className = "";\n    var result = manager.getLogger(className); //find if the logger already exist\n    if (result != null && result instanceof VLogger)\n      //if yes, return the object\n      return result;\n\n    //other, we will have to create new\n    var newLogger = new VLogger(className);\n    newLogger.setLevel(VIS.Logging.VLogMgt.getLevel());\n    manager.addLogger(newLogger);\n    return newLogger;\n  };\n\n  //11. VLogMgt\n  function VLogMgt() {\n    var _handlers = null;\n    /** Current Log Level\t*/\n    var _currentLevel = Level.INFO;\n    /** LOG Levels\t\t\t*/\n    var LEVELS = [Level.OFF, Level.SEVERE, Level.WARNING, Level.INFO, Level.CONFIG, Level.FINE, Level.FINER, Level.FINEST, Level.ALL];\n    var addHandler = function (handler) {\n      if (handler == null) return;\n      var rootLogger = Logger.getLogger("");\n      rootLogger.addHandler(handler);\n      //\n      _handlers.push(handler);\n    }; //\taddHandler\n    var getIsLevelAll = function () {\n      return Level.ALL.getIntValue() == _currentLevel.getIntValue();\n    }; //\tisLevelFinest\n    var initialize = function (isClient) {\n      if (_handlers != null) return;\n\n      //create handler list\n      _handlers = [];\n      try {\n        var rootLogger = Logger.getLogger("");\n        var handlers = rootLogger.getHandlers();\n        for (var i = 0; i < handlers.length; i++) {\n          if (!_handlers.contains(handlers[i])) _handlers.Add(handlers[i]);\n        }\n      } catch (e) {}\n\n      //check loggers\n\n      if (VLogErrorBuffer.get(false) == null) addHandler(VLogErrorBuffer.get(true));\n      setFormatter(VLogFormatter.get());\n      setFilter(VLogFilter.get());\n    };\n    var setLevel = function (level) {\n      if (level == null) return;\n      if (_handlers == null) initialize(true);\n      for (var i = 0; i < _handlers.length; i++) {\n        var handler = _handlers[i];\n        handler.setLevel(level);\n      }\n      if (level.getIntValue() != _currentLevel.getIntValue()) {\n        setLoggerLevel(level, null);\n      }\n      _currentLevel = level;\n    };\n    var setLoggerLevel = function (level, loggerNamePart) {\n      if (level == null) return;\n      var mgr = LogManager.getLogManager();\n      var en = mgr.getLoggerNames();\n      for (var prop in en) {\n        var name = prop;\n        if (loggerNamePart == null || name.indexOf(loggerNamePart) != -1) {\n          var lll = Logger.getLogger(name);\n          lll.setLevel(level);\n          //if (log.getParent() == lll)\n          //    log.SetLevel(level);\n        }\n      }\n    };\n    var setFormatter = function (formatter) {\n      for (var i = 0; i < _handlers.length; i++) {\n        var handler = _handlers[i];\n        handler.setFormatter(formatter);\n      }\n    };\n    var setFilter = function (filter) {\n      for (var i = 0; i < _handlers.length; i++) {\n        var handler = _handlers[i];\n        handler.setFilter(filter);\n      }\n    }; //\tsetFilter\n    var getLevel = function () {\n      return _currentLevel;\n    }; //\tgetLevel\n    var setLevelByString = function (levelString) {\n      if (!levelString) return;\n      //\n      for (var i = 0; i < LEVELS.length; i++) {\n        if (LEVELS[i].getName().equals(levelString)) {\n          setLevel(LEVELS[i]);\n          return;\n        }\n      }\n    }; //\t\n    var getLevelAsInt = function () {\n      return _currentLevel.getIntValue();\n    }; //\tgetLevel\n    var shutdown = function () {\n      var mgr = LogManager.getLogManager();\n      mgr.reset();\n    };\n    var enable = function (enableLogging) {\n      if (enableLogging) {\n        setLevel(_currentLevel);\n      } else {\n        var level = _currentLevel;\n        setLevel(Level.OFF);\n        _currentLevel = level;\n      }\n    };\n    return {\n      initialize: initialize,\n      addHandler: addHandler,\n      setLevel: setLevel,\n      setLevelByString: setLevelByString,\n      getLevel: getLevel,\n      shutdown: shutdown,\n      enable: enable,\n      getIsLevelAll: function () {\n        return Level.ALL.getIntValue() == _currentLevel.getIntValue();\n      },\n      getIsLevelFinest: function () {\n        return Level.FINEST.getIntValue() >= _currentLevel.getIntValue();\n      },\n      getIsLevelFiner: function () {\n        return Level.FINER.getIntValue() >= _currentLevel.getIntValue();\n      },\n      getIsLevelFine: function () {\n        return Level.FINE.getIntValue() >= _currentLevel.getIntValue();\n      },\n      getIsLevelInfo: function () {\n        return Level.INFO.IntValue() >= _currentLevel.IntValue();\n      }\n    };\n  }\n  ;\n  VIS.Logging.Level = Level;\n  VIS.Logging.LogRecord = LogRecord;\n  VIS.Logging.VLogFilter = VLogFilter;\n  VIS.Logging.VLogFormatter = VLogFormatter;\n  VIS.Logging.VLogErrorBuffer = VLogErrorBuffer;\n  VIS.Logging.Logger = Logger;\n  VIS.Logging.VLogger = VLogger;\n  VIS.Logging.LogManager = LogManager;\n  VIS.Logging.VLogMgt = VLogMgt();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/logger.js?')},"./Areas/VIS/Scripts/app/lookup.js":()=>{eval(';\n(function (VIS, $) {\n  var DB = VIS.DB;\n  var Level = VIS.Logging.Level;\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  //var dSetUrl = baseUrl + "Form/JDataSet";\n  //var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n\n  ////executeDataSet\n  //var executeDataSet = function (sql, param, callback) {\n  //    var async = callback ? true : false;\n\n  //    var dataIn = { sql: sql, page: 1, pageSize: 0 };\n  //    if (param) {\n  //        dataIn.param = param;\n  //    }\n\n  //    var dataSet = null;\n\n  //    getDataSetJString(dataIn, async, function (jString) {\n  //        dataSet = new VIS.DB.DataSet().toJson(jString);\n  //        if (callback) {\n  //            callback(dataSet);\n  //        }\n  //    });\n\n  //    return dataSet;\n  //};\n\n  //var executeDSet = function (sql, param, callback) {\n  //    var async = callback ? true : false;\n\n  //    var dataIn = { sql: sql, page: 1, pageSize: 0 };\n  //    if (param) {\n  //        dataIn.param = param;\n  //    }\n  //    //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n  //    var dataSet = null;\n\n  //    getDSetJString(dataIn, async, function (jString) {\n  //        dataSet = new VIS.DB.DataSet().toJson(jString);\n  //        if (callback) {\n  //            callback(dataSet);\n  //        }\n  //    });\n\n  //    return dataSet;\n  //};\n\n  //var executeDReader = function (sql, param, callback) {\n  //    var async = callback ? true : false;\n\n  //    var dataIn = { sql: sql, page: 1, pageSize: 0 };\n  //    if (param) {\n  //        dataIn.param = param;\n  //    }\n  //    //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n  //    var dr = null;\n  //    getDSetJString(dataIn, async, function (jString) {\n  //        dr = new VIS.DB.DataReader().toJson(jString);\n  //        if (callback) {\n  //            callback(dr);\n  //        }\n  //    });\n  //    return dr;\n  //};\n\n  //var executeDataReaderPaging = function (sql, page, pageSize, param, callback) {\n  //    var async = callback ? true : false;\n\n  //    var dataIn = { sql: sql, page: page, pageSize: pageSize };\n  //    if (param) {\n  //        dataIn.param = param;\n  //    }\n  //    //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n\n  //    var dr = null;\n\n  //    getDSetJString(dataIn, async, function (jString) {\n  //        dr = new VIS.DB.DataReader().toJson(jString);\n  //        if (callback) {\n  //            callback(dr);\n  //        }\n  //    });\n\n  //    return dr;\n  //};\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n\n  ////DataSet String\n  //function getDSetJString(data, async, callback) {\n  //    var result = null;\n  //    data.sql = VIS.secureEngine.encrypt(data.sql);\n  //    $.ajax({\n  //        url: dSetUrl,\n  //        type: "POST",\n  //        datatype: "json",\n  //        contentType: "application/json; charset=utf-8",\n  //        async: async,\n  //        data: JSON.stringify(data)\n  //    }).done(function (json) {\n  //        result = json;\n  //        if (callback) {\n  //            callback(json);\n  //        }\n  //        //return result;\n  //    });\n  //    return result;\n  //};\n\n  function Lookup(lookupInfo, lookup, ctx, windowNo, displayType) {\n    this.info = lookupInfo;\n    this.lookup = null;\n    this.allLoaded = false;\n    this.hasInactive = false;\n    this.displayType = displayType;\n    this.selectedObject;\n    this.windowNo = windowNo;\n    this.validationDisabled = false;\n    this.tabNo = 0;\n    this.colName = "";\n    this.data = [];\n    this.ctx = ctx;\n    if (lookup) {\n      this.lookup = lookup._lookup;\n      this.allLoaded = lookup._allLoaded;\n      this.hasInactive = lookup._hasInactive;\n      this.displayType = lookup._displayType;\n      this.windowNo = lookup._WindowNo;\n      this.tabNo = lookup._TabNo;\n      this.colName = lookup._columnName;\n      if (this.info) {\n        this.info.windowNo = lookup._WindowNo;\n      }\n    }\n  }\n  ;\n  Lookup.prototype.INACTIVE_S = \'~\';\n  /** Inactive Marker End         */\n  Lookup.prototype.INACTIVE_E = "~";\n  /** Number of max rows to load */\n  Lookup.prototype.MAX_ROWS = 10000;\n  /** Indicator for Null */\n  Lookup.prototype.MINUS_ONE = -1;\n  Lookup.prototype.getValidation = function () {\n    return "";\n  };\n  Lookup.prototype.getWindowNo = function () {\n    return this.windowNo;\n  };\n  Lookup.prototype.getTabNo = function () {\n    return this.tabNo;\n  };\n  Lookup.prototype.setTabNo = function (tNo) {\n    this.tabNo = tNo;\n  };\n  Lookup.prototype.getFieldColName = function () {\n    return this.colName; //lower case\n  };\n  Lookup.prototype.getDisplayType = function () {\n    return this.displayType;\n  };\n  Lookup.prototype.setDisplayType = function (displayType) {\n    this.displayType = displayType;\n  };\n  Lookup.prototype.disableValidation = function () {\n    this.validationDisabled = true;\n  };\n  Lookup.prototype.getIsValidationDisabled = function () {\n    return this.validationDisabled;\n  };\n  Lookup.prototype.getIsValidated = function () {\n    return true;\n  };\n  Lookup.prototype.getHasInactive = function () {\n    return this.hasInactive;\n  };\n  Lookup.prototype.getData = function (mandatory, onlyValidated, onlyActive, temporary) {\n    return [];\n  };\n  Lookup.prototype.getDisplay = function (value) {\n    return "";\n  };\n  Lookup.prototype.getSelectedItem = function () {\n    return this.selectedObject;\n  };\n  Lookup.prototype.fillCombobox = function (mandatory, onlyValidated, onlyActive, temporary) {\n    var obj = this.selectedObject;\n    if (this.data != null) this.data.length = 0;\n    // may cause delay *** The Actual Work ***\n    this.data = this.getData(mandatory, onlyValidated, onlyActive, temporary);\n    var size = 0;\n    if (this.data != null) size = this.data.length;\n    // Selected Object changed\n    if (obj != this.selectedObject) {\n      obj = this.selectedObject;\n    }\n    // if nothing selected & mandatory, select first\n    if (obj == null && mandatory && size > 0) {\n      obj = this.data[0];\n      this.selectedObject = obj;\n    }\n  };\n  Lookup.prototype.setSelectedItem = function (anObject) {\n    if (this.selectedObject != null && this.selectedObject !== anObject || this.selectedObject == null && anObject != null) {\n      this.setSelectedItemAlways(anObject);\n    }\n  };\n  Lookup.prototype.setSelectedItemAlways = function (anObject) {\n    if (this.data.indexOf(anObject) > -1 || anObject == null) {\n      this.selectedObject = anObject;\n    } else {\n      this.selectedObject = null;\n    }\n  };\n  Lookup.prototype.refresh = function () {\n    return 0;\n  };\n  Lookup.prototype.getZoomQuery = function () {\n    return null;\n  };\n  Lookup.prototype.getColumnName = function () {\n    return this.info.keyColumn;\n  };\n  Lookup.prototype.dispose = function () {\n    this.info = null;\n    this.lookup = null;\n    this.allLoaded = null;\n    this._hasInactive = null;\n    this.selectedObject = null;\n    this.data = null;\n    this.ctx = null;\n  };\n  Lookup.prototype.removeAllElements = function () {\n    if (this.data.length > 0) {\n      //int firstIndex = 0;\n      //int lastIndex = p_data.size() - 1;\n      this.data.length = 0;\n      this.selectedObject = null;\n      //fireIntervalRemoved(this, firstIndex, lastIndex);\n    }\n  }; // removeAllElements\n  Lookup.prototype.clear = function () {\n    this.removeAllElements();\n  };\n  Lookup.prototype.gethasImageIdentifier = function () {\n    return false;\n  };\n\n  //END\n\n  //1.  MLookup wrapper class for lookup json Object \n  function MLookup(lookupInfo, lookup, AD_Window_ID, AD_Field_ID, AD_Tab_ID, lookupData) {\n    Lookup.call(this, lookupInfo, lookup);\n    /** Save getDirect last return value */\n    this.lookupDirect = {};\n    /** Save last unsuccessful */\n    this.directNullKey;\n    this.AD_Window_ID = AD_Window_ID;\n    this.AD_Field_ID = AD_Field_ID;\n    this.AD_Tab_ID = AD_Tab_ID;\n    this.lookupData = lookupData;\n    this.loading = false;\n    if (!this.lookupData) {\n      var keyCol = lookupInfo.keyColumn;\n      if (keyCol && keyCol.indexOf(".") > -1) {\n        keyCol = keyCol.substring(keyCol.indexOf(".") + 1);\n      }\n      this.lookupData = {\n        \'ctx\': VIS.context.getWindowCtx(lookupInfo.windowNo),\n        \'windowNo\': lookupInfo.windowNo,\n        \'column_ID\': lookupInfo.column_ID,\n        \'AD_Reference_ID\': lookup._displayType,\n        \'columnName\': keyCol,\n        \'AD_Reference_Value_ID\': lookupInfo.AD_Reference_Value_ID,\n        \'isParent\': lookupInfo.isParent,\n        \'validationCode\': VIS.secureEngine.encrypt(lookupInfo.validationCode)\n      };\n    }\n    this.nextRead = 0;\n    this.cLookup = false;\n    this.lookupDirectAll = {};\n    this.zomQuery = null;\n    this.prepareZQuery();\n    this.log = VIS.Logging.VLogger.getVLogger("MLookup");\n  }\n  ;\n  VIS.Utility.inheritPrototype(MLookup, Lookup); //Inherit\n\n  MLookup.prototype.prepareZQuery = function () {\n    if (this.info.zoomQuery == null || $.isEmptyObject(this.info.zoomQuery)) {\n      return;\n    }\n    var q = this.info.zoomQuery;\n    this.zomQuery = new VIS.Query(q._tableName);\n    var qr = null;\n    for (var i = 0; i < q._list.length; i++) {\n      var l = q._list[i];\n      qr = new VIS.QueryRestriction(l.ColumnName, l.Code, l.Code_to, l.InfoName, q.InfoDisplay, l.InfoDisplay_to, l.Operator, l.DirectWhereClause, l.AndCondition);\n      this.zomQuery.addRestriction(qr);\n    }\n  };\n  MLookup.prototype.initialize = function (later) {\n    if (later) {\n      return this;\n    }\n\n    //  load into local lookup, if already cached\n\n    //if (this.info.isCreadedUpdatedBy) {\n    //    return this;\n    //}\n\n    if (this.info.isParent || this.info.isKey) {\n      this.hasInactive = true; // creates focus listener for dynamic loading\n      return this; // required when parent needs to be selected (e.g.\n      // price from product)\n    }\n\n    //if (this.getDisplayType() == VIS.DisplayType.Search) {\n    //    this.fillDirectList();\n    //    return this;\n    //}\n\n    if (this.getDisplayType() == VIS.DisplayType.Search || this.info.isCreadedUpdatedBy) {\n      return this;\n    }\n    //Don\'t load Parents/Keys\n\n    //if (VIS.MLookupCache.loadFromCache(this.info, this)) {\n    //    return this;\n    //}\n\n    if (!this.info.isValidated) {\n      this.fillDirectList();\n    } else {\n      this.load(true, true);\n    }\n    //\n    // m_loader.run(); // test sync call\n    return this;\n  };\n  MLookup.prototype.getValidation = function () {\n    if (this.getIsValidationDisabled()) return "";\n    return this.info.validationCode;\n  };\n  MLookup.prototype.getIsValidated = function () {\n    if (this.getIsValidationDisabled()) return true;\n    if (this.info == null) return false;\n    return this.info.isValidated;\n  };\n  MLookup.prototype.getData = function (mandatory, onlyValidated, onlyActive, temporary) {\n    // create list\n    var list = this.getData2(onlyValidated, temporary);\n\n    // Remove inactive choices\n    if (onlyActive && this.hasInactive) {\n      // list from the back\n      for (var i = list.length; i > 0; i--) {\n        var o = list[i - 1];\n        if (o != null) {\n          var s = o.Name;\n          if (s.startsWith(this.INACTIVE_S) && s.endsWith(this.INACTIVE_E)) {\n            console.log(s);\n            list.splice(i - 1, 1);\n          }\n        }\n      }\n    }\n\n    // Add Optional (empty) selection\n    if (!mandatory) {\n      var p = null;\n      if (this.info.keyColumn != null && this.info.keyColumn.toUpperCase().endsWith("_ID")) {\n        p = {\n          Key: -1,\n          Name: ""\n        };\n      } else {\n        p = {\n          Key: "",\n          Name: ""\n        };\n      }\n      list.unshift(p); //insert at 0 index\n    }\n    return list;\n  };\n  MLookup.prototype.getData2 = function (onlyValidated, loadParent) {\n    // Never Loaded (correctly)\n    if (!this.allLoaded || $.isEmptyObject(this.lookup)) {\n      this.refresh(loadParent);\n    }\n\n    // already validation included\n    if (this.info.isValidated) return this.getObjectArray(this.lookup);\n    if (!this.info.isValidated && onlyValidated) {\n      this.refresh(loadParent);\n      //log.fine(m_info.KeyColumn + ": Validated - #" + m_lookupMap.size()\n      //      + (loadParent ? " (loadParent)" : " (not loadParent)"));\n    }\n    return this.getObjectArray(this.lookup);\n  };\n  MLookup.prototype.getObjectArray = function (obj) {\n    var list = [];\n    var i = 0;\n    for (var prop in obj) {\n      list[i++] = obj[prop];\n    }\n    return list;\n  };\n  MLookup.prototype.getDisplay = function (value, checkLocalList, loadImage) {\n    if (value == null) {\n      return "";\n    }\n    var display = !checkLocalList ? this.get(value) : this.getFromList(value);\n    if (display == null) return "<" + value.toString() + ">";\n    if (loadImage) return display.Name;else return VIS.Utility.Util.getIdentifierDisplayVal(display.Name);\n    return display.Name;\n  };\n  MLookup.prototype.getLovIconType = function (value, checLocalList) {\n    var iconobj = this.lookup[" " + value];\n    if (iconobj) {\n      var iconpath = iconobj["icoType"];\n      return iconpath;\n    }\n  };\n  MLookup.prototype.getLOVIconElement = function (value, checkLocalList, getsource) {\n    var iconobj = this.lookup[" " + value];\n    if (iconobj) {\n      var iconpath = iconobj["ico"];\n      var iconstyle = iconobj["icohtml"];\n      //Apply style on icon\n      if (iconstyle) {\n        iconstyle = " style=\'" + iconstyle + "\'";\n      } else {\n        iconstyle = \'\';\n      }\n      if (iconpath) {\n        if (iconpath.indexOf(" ") > -1) {\n          if (getsource) return iconpath;else return "<i class=\'" + iconpath + "\'" + iconstyle + "></i>";\n        } else {\n          var img = iconpath.substring(iconpath.indexOf("Images/") + 7);\n          img = VIS.Application.contextUrl + "Images/Thumb32x32/" + img;\n          if (getsource) return img;else return "<img src=\'" + img + "\'" + iconstyle + "></img>";\n        }\n      }\n    }\n  };\n  MLookup.prototype.getLOVIconStyle = function (value) {\n    var iconobj = this.lookup[" " + value];\n    if (iconobj) {\n      var iconHTML = iconobj["icohtml"];\n      return iconHTML;\n    }\n  };\n  MLookup.prototype.get = function (key) {\n    if (key == null || this.MINUS_ONE === key)\n      // indicator for null\n      return null;\n    if (this.info.isParent && this.nextRead < Date.now()) {\n      //this.lookup = null;\n      //this.lookup = {};\n      ////if (this.lookupDirect) {\n      //    this.lookupDirect = null;\n      //    this.lookupDirect = {};\n      //}\n      this.nextRead = Date.now() + 2000; // 1/2 sec\n    }\n    var retValue = this.lookup[" " + key];\n    if (retValue) return retValue;\n\n    // Always check for parents - not if we SQL was validated and completely\n    // loaded\n    if (!this.info.isParent && this.info.isValidated && this.allLoaded) {\n      this.getDirect(key, false, true); // cache locally \n    }\n    if (!this.allLoaded && $.isEmptyObject(this.lookup) && !this.info.isCreadedUpdatedBy && !this.info.isParent && this.getDisplayType() != VIS.DisplayType.Search) {\n      //m_result = s_exec.submit(m_loader);\n      this.load();\n      //loadComplete();\n      retValue = this.lookup[" " + key];\n      if (retValue != null) return retValue;\n    }\n    var cacheLocal = true; // this.info.isValidated;\n    return this.getDirect(key, false, cacheLocal); // do NOT cache\n  };\n  MLookup.prototype.getFromList = function (key) {\n    if (key == null || this.MINUS_ONE === key)\n      // indicator for null\n      return null;\n    if (this.info.isParent && this.nextRead < Date.now()) {\n      //this.lookup = null;\n      //this.lookup = {};\n      //if (this.lookupDirect) {\n      //    this.lookupDirect = null;\n      //    this.lookupDirect = {};\n      //}\n      this.nextRead = Date.now() + 2000; // 1/2/3 sec\n      return this.get(key);\n    }\n\n    //\ttry cache\n    var retValue;\n    retValue = this.lookup[" " + key];\n    if (retValue != null) return retValue;\n\n    //var keyCol = this.info.keyColumn.substring(this.info.keyColumn.indexOf(\'.\') + 1).toLowerCase();\n\n    //var text = VIS.MLookupCache.getRecordLookup(this.getWindowNo(), this.getTabNo(), keyCol, key);\n    //if (text) {\n    //    //var keyValue = var isNumber = this.info.keyColumn.toUpperCase().endsWith("_ID");\n    //    retValue = { Key: key, Name: VIS.Utility.encodeText(text) };\n    //    this.lookup[" " + key] = retValue;\n    //    return retValue;\n    //}\n\n    //  Always check for parents - not if we SQL was validated and completely loaded\n    if (!this.info.isParent && this.info.isValidated && this.allLoaded) {\n      this.getDirectFromList(key, false, true); //\tcache locally\n    }\n    if (!this.allLoaded && $.isEmptyObject(this.lookup) && !this.info.isCreadedUpdatedBy && !this.info.isParent && this.getDisplayType() != VIS.DisplayType.Search) {\n      retValue = this.lookup[" " + key];\n      if (retValue != null) return retValue;\n    }\n    //\tTry to get it directly\n    var cacheLocal = this.info.isValidated;\n    return this.getDirectFromList(key, false, cacheLocal); //\tdo NOT cache\t\n  }; //\tget\n\n  MLookup.prototype.getDirect = function (key, saveInCache, cacheLocal) {\n    // Nothing to query\n    if (key == null || this.info.queryDirect == null || this.info.queryDirect.length == 0) return null;\n    if (key === this.directNullKey) return null;\n    var directValue = null;\n    if (this.lookupDirect != null)\n      // Lookup cache\n      {\n        directValue = this.lookupDirect[key];\n        if (directValue) return directValue;\n      }\n    var isNumber = this.info.keyColumn.toUpperCase().endsWith("_ID");\n    try {\n      // SELECT Key, Value, Name FROM ...\n      //var query = this.info.queryDirect;\n      //var param = [];\n      ////if (isNumber) {\n      //    param.push(new DB.SqlParam("@key", parseInt(key)));\n      //}\n      //else {\n      //    param.push(new DB.SqlParam("@key", key.toString()));\n      //}\n\n      //var dr = executeDReader(query, param);\n      var self = this;\n      $.ajax({\n        url: VIS.Application.contextUrl + "Lookup/GetLookupDirect",\n        async: false,\n        type: \'post\',\n        data: {\n          WindowNo: self.getWindowNo(),\n          AD_Window_ID: self.AD_Window_ID,\n          AD_Tab_ID: self.AD_Tab_ID,\n          AD_Field_ID: self.AD_Field_ID,\n          Key: key,\n          IsNumber: isNumber,\n          LookupData: JSON.stringify(self.lookupData)\n        },\n        success: function (data) {\n          var dr = new VIS.DB.DataReader().toJson(data);\n          if (dr.read()) {\n            var name = dr.getString(2);\n            var isActive = dr.getString(3).equals("Y");\n            if (!isActive) {\n              name = self.INACTIVE_S + name + self.INACTIVE_E;\n              self.hasInactive = true;\n            }\n            if (isNumber) {\n              var keyValue = dr.getInt(0);\n              var p = {\n                Key: keyValue,\n                Name: VIS.Utility.encodeText(name)\n              };\n              if (saveInCache)\n                // save if\n                self.lookup[" " + keyValue] = p;\n              directValue = p;\n            } else {\n              var value = dr.getString(1);\n              var p1 = {\n                Key: value,\n                Name: VIS.Utility.encodeText(name)\n              };\n              if (saveInCache)\n                // save if\n                self.lookup[" " + value] = p1;\n              directValue = p1;\n            }\n            if (dr.read()) {\n              self.log.log(VIS.Logging.Level.SEVERE, self.info.keyColumn + ": Not unique (first returned) for " + key);\n            }\n          } else {\n            self.directNullKey = key;\n            directValue = null;\n          }\n        },\n        error: function (er) {\n          self.log.log(VIS.Logging.Level.SEVERE, er);\n        }\n      });\n\n      //if (CLogMgt.isLevelFinest())\n      //    log.finest(m_info.KeyColumn + ": " + directValue + " - "\n      //\t\t\t+ m_info);\n    } catch (e) {\n      this.log.log(VIS.Logging.Level.SEVERE, this.info.keyColumn + ": SQL=" + this.info.queryDirect + "; Key=" + key, e);\n      directValue = null;\n    }\n    //finally {\n    //    if (dr != null)\n    //        dr.dispose();\n    //    dr = null;\n    //}\n    //// Cache Local if not added to R/W cache\n    if (cacheLocal && !saveInCache && directValue != null) {\n      if (this.lookupDirect == null) this.lookupDirect = {};\n      this.lookupDirect[key] = directValue;\n    }\n    this.hasInactive = true;\n    return directValue;\n  };\n  MLookup.prototype.getDirectFromList = function (key, saveInCache, cacheLocal) {\n    //\tNothing to query\n    if (key == null || this.info.queryDirect == null || this.info.queryDirect.length == 0) return null;\n    if (key === this.directNullKey) return null;\n    //\n    var directValue = null;\n    if (this.lookupDirect != null)\n      //\tLookup cache\n      {\n        var o = null;\n        o = this.lookupDirect[" " + key];\n        if (o && o != null) return o;\n      }\n    var p;\n    if (!this.lookupDirectAll[" " + key]) {\n      var keyCol = this.getFieldColName(); // this.info.keyColumn.substring(this.info.keyColumn.indexOf(\'.\') + 1).toLowerCase();\n\n      var text = VIS.MLookupCache.getRecordLookup(this.getWindowNo(), this.getTabNo(), keyCol, key);\n      if (text || !text && key == 0) {\n        //var keyValue = var isNumber = this.info.keyColumn.toUpperCase().endsWith("_ID");\n        var retValue = {\n          Key: key,\n          Name: VIS.Utility.encodeText(text)\n        };\n        this.lookupDirectAll[" " + key] = retValue;\n        // return retValue;\n      }\n    }\n    if (this.lookupDirectAll[" " + key]) {\n      p = this.lookupDirectAll[" " + key];\n      if (saveInCache)\n        //\tsave if\n        this.lookup[" " + key] = p;\n      directValue = p;\n    } else if (!this.loading) {\n      this.addInList(key);\n      directValue = null;\n    }\n\n    //\tCache Local if not added to R/W cache\n    if (cacheLocal && !saveInCache && directValue != null) {\n      if (this.lookupDirect == null) this.lookupDirect = {};\n      this.lookupDirect[" " + key] = directValue;\n    }\n    this.hasInactive = true;\n    return directValue;\n  };\n  MLookup.prototype.addInList = function (key) {\n    if (this.info.queryDirect.length <= 0 || key == null) {\n      return;\n    }\n    //string directAllQuery = _vInfo.queryDirect.Substring(0, _vInfo.queryDirect.LastIndexOf("WHERE"));\n\n    var isNumber = this.info.keyColumn.toUpperCase().endsWith("_ID");\n\n    // SELECT Key, Value, Name FROM ...\n    var query = this.info.queryDirect;\n    //var param = [];\n    //if (isNumber) {\n    //    param.push(new DB.SqlParam("@key", parseInt(key)));\n    //}\n    //else {\n    //    param.push(new DB.SqlParam("@key", key.toString()));\n    //}\n\n    //var directAllQuery = this.info.queryDirect;//.replace("@key", key.toString());\n\n    var self = this;\n    $.ajax({\n      url: VIS.Application.contextUrl + "Lookup/GetLookupDirect",\n      type: \'post\',\n      data: {\n        WindowNo: self.getWindowNo(),\n        AD_Window_ID: self.AD_Window_ID,\n        AD_Tab_ID: self.AD_Tab_ID,\n        AD_Field_ID: self.AD_Field_ID,\n        Key: key,\n        IsNumber: isNumber,\n        LookupData: JSON.stringify(self.lookupData)\n      },\n      type: \'post\',\n      success: function (data) {\n        var dr = new VIS.DB.DataReader().toJson(data);\n        if (dr.read()) {\n          var name = dr.getString(2);\n          if (isNumber) {\n            var keyValue = VIS.Utility.Util.getValueOfInt(dr.getCell(0));\n            self.lookupDirectAll[" " + keyValue] = {\n              Key: keyValue,\n              Name: VIS.Utility.encodeText(name)\n            };\n          } else {\n            var value = dr.getString(1);\n            //ValueNamePair p = new ValueNamePair(value, name);\n            self.lookupDirectAll[" " + value] = {\n              Key: value,\n              Name: VIS.Utility.encodeText(name)\n            };\n          }\n        } else {\n          self.directNullKey = key;\n        }\n      },\n      error: function () {}\n    });\n\n    //executeDReader(directAllQuery, param, function (dr) {\n    //    try {\n\n    //    }\n    //    catch (e) {\n    //        console.log(e);\n    //    }\n    //    self = null;\n    //});\n  };\n  MLookup.prototype.load = function (async, checkCache) {\n    var sql = this.info.query;\n    var params = [];\n    var validation = "";\n    // not validated\n    if (!this.info.isValidated) {\n      validation = VIS.Env.parseContext2(VIS.context, this.getWindowNo(), this.getTabNo(), this.info.validationCode, false, true);\n      //if (validation.length == 0 && this.info.validationCode.length > 0) {\n      //    this.log.fine(this.info.keyColumn + ": Loader NOT Validated: " + this.info.validationCode);\n      //    //console.log(this.info.keyColumn + ": Loader NOT Validated: " + this.info.validationCode);\n      //    return;\n      //}\n      //else {\n      //    var posFrom = sql.lastIndexOf(" FROM ");\n      //    var hasWhere = sql.indexOf(" WHERE ", posFrom) != -1;\n      //    //\n      //    var posOrder = sql.lastIndexOf(" ORDER BY ");\n      //    if (posOrder != -1)\n      //        sql = sql.substring(0, posOrder) + (hasWhere ? " AND " : " WHERE ") + validation + sql.substring(posOrder);\n      //    else\n      //        sql += (hasWhere ? " AND " : " WHERE ") + validation;\n      //    this.log.fine(this.info.keyColumn + ": Validation=" + validation);\n      //}\n    }\n    var isNumber = this.info.keyColumn.toUpperCase().endsWith("_ID");\n    this.hasInactive = false;\n    var dr = null;\n    this.lookup = {};\n    if (checkCache) {\n      this.cLookup = false;\n      if (VIS.MLookupCache.loadFromCache(this.info, this)) {\n        return this;\n      }\n    }\n\n    //var validationValues = "";\n\n    //if (validation && Object.keys(validation).length > 0) {\n    //    validationValues = JSON.parse(validation);\n    //}\n    var pageSize = 1000;\n    var self = this;\n    if (async) {\n      self.loading = true;\n\n      //executeDataReaderPaging(sql, 1, 1000, null, function (dr) {\n      //    self.readData(dr, isNumber);\n      //    if (checkCache) {\n\n      //        VIS.MLookupCache.loadEnd(self.info, self);\n      //    }\n      //    self.loading = false;;\n      //    self = null;\n      //});\n      //return 0;\n    } else {\n      async = false;\n      pageSize = 0;\n    }\n    $.ajax({\n      url: VIS.Application.contextUrl + "Lookup/GetLookupData",\n      async: async,\n      type: \'post\',\n      data: {\n        WindowNo: self.getWindowNo(),\n        AD_Window_ID: self.AD_Window_ID,\n        AD_Tab_ID: self.AD_Tab_ID,\n        AD_Field_ID: self.AD_Field_ID,\n        Values: JSON.stringify(validation),\n        PageSize: pageSize,\n        LookupData: JSON.stringify(self.lookupData)\n      },\n      success: function (data) {\n        var dr = new VIS.DB.DataReader().toJson(data);\n        self.readData(dr, isNumber);\n        if (checkCache) {\n          VIS.MLookupCache.loadEnd(self.info, self);\n        }\n        self.loading = false;\n        self = null;\n      },\n      error: function (e) {\n        self.log.log(VIS.Logging.Level.SEVERE, self.info.keyColumn + ": Loader - " + sql, e);\n      }\n    });\n\n    //try {\n    //    dr = executeDReader(sql, null);\n    //    this.readData(dr, isNumber);\n    //    if (checkCache) {\n\n    //        VIS.MLookupCache.loadEnd(this.info, this);\n    //    }\n    //}\n    //catch (e) {\n    //    this.log.log(VIS.Logging.Level.SEVERE, this.info.keyColumn + ": Loader - " + sql, e);\n    //}\n    //finally {\n    //    if (dr != null) {\n    //        dr.dispose();\n    //        dr = null;\n    //    }\n    //}\n\n    return 0;\n  }; // run\n\n  MLookup.prototype.fillDirectList = function () {\n    if (this.info.queryAll == null || this.info.queryAll.length <= 0) {\n      return;\n    }\n    //string directAllQuery =    _vInfo.queryDirect.Substring(0, _vInfo.queryDirect.LastIndexOf("WHERE"));\n\n    var directAllQuery = this.info.queryAll;\n    this.cLookup = true;\n    if (VIS.MLookupCache.loadFromCache(this.info, this)) {\n      return;\n    }\n    var self = this;\n    $.ajax({\n      url: VIS.Application.contextUrl + "Lookup/GetLookupAll",\n      type: \'post\',\n      data: {\n        WindowNo: self.getWindowNo(),\n        AD_Window_ID: self.AD_Window_ID,\n        AD_Tab_ID: self.AD_Tab_ID,\n        AD_Field_ID: self.AD_Field_ID,\n        PageSize: 100,\n        LookupData: JSON.stringify(self.lookupData)\n      },\n      success: function (data) {\n        var isNumber = self.info.keyColumn.endsWith("_ID");\n        var dr = new VIS.DB.DataReader().toJson(data);\n        while (dr.read()) {\n          var name = dr.getString(2);\n          if (isNumber) {\n            var keyValue = dr.getInt(0);\n            self.lookupDirectAll[" " + keyValue] = {\n              Key: keyValue,\n              Name: VIS.Utility.encodeText(name)\n            };\n          } else {\n            var value = dr.getString(1);\n            self.lookupDirectAll[" " + value] = {\n              Key: value,\n              Name: VIS.Utility.encodeText(name)\n            };\n          }\n        }\n        VIS.MLookupCache.loadEnd(self.info, self);\n        self.loading = false;\n        self = null;\n      },\n      error: function (er) {}\n    });\n\n    //executeDataReaderPaging(directAllQuery, 1, 100, null, function (dr) {\n    //    try {\n    //        var isNumber = self.info.keyColumn.endsWith("_ID");\n\n    //        while (dr.read()) {\n\n    //            var name = dr.getString(2);\n    //            if (isNumber) {\n    //                var keyValue = dr.getInt(0);\n    //                self.lookupDirectAll[" " + keyValue] = { Key: keyValue, Name: VIS.Utility.encodeText(name) };\n    //            }\n    //            else {\n    //                var value = dr.getString(1);\n    //                self.lookupDirectAll[" " + value] = { Key: value, Name: VIS.Utility.encodeText(name) };\n    //            }\n    //        }\n    //    }\n    //    catch (e) {\n    //        console.log(e);\n    //    }\n    //    VIS.MLookupCache.loadEnd(self.info, self);\n    //    self.loading = false;\n    //    self = null;\n    //});\n    this.loading = true;\n  };\n  MLookup.prototype.readData = function (dr, isNumber) {\n    var lookup = {};\n    var rows = 0;\n    this.allLoaded = true;\n    while (dr.read()) {\n      if (rows++ > this.MAX_ROWS) {\n        this.log.fine(this.info.keyColumn + ": Loader - Too many records");\n        this.allLoaded = false;\n        break;\n      }\n\n      // load data\n      var name = dr.getString(2);\n      var isActive = dr.getString(3).equals("Y");\n      var p = {};\n      var key;\n      if (!isActive) {\n        name = this.INACTIVE_S + name + this.INACTIVE_E;\n        this.hasInactive = true;\n      }\n      if (isNumber) {\n        key = dr.getInt(0);\n        p = {\n          Key: key,\n          Name: VIS.Utility.encodeText(name)\n        };\n      } else {\n        key = dr.getString(1);\n        p = {\n          Key: key,\n          Name: VIS.Utility.encodeText(name)\n        };\n      }\n      if (dr.tables[0].columns.length > 4) {\n        /// p["ico"] = dr.getString(4);\n        var iconInfo = dr.getString(4);\n        if (iconInfo && iconInfo.length > 0) {\n          var ico = iconInfo.split(\'|\');\n          p["ico"] = ico[0];\n          p["icohtml"] = ico[1];\n        } else {\n          p["ico"] = iconInfo;\n        }\n        p["icoType"] = dr.getString(5);\n      }\n      lookup[" " + key] = p;\n    }\n    this.lookup = null;\n    this.lookup = lookup;\n\n    //this.log.fine(this.info.keyColumn + ": " + name);\n    this.loading = false;\n  };\n  MLookup.prototype.refresh = function () {\n    // Don\'t load Search or CreatedBy/UpdatedBy\n    if (this.getDisplayType() == VIS.DisplayType.Search || this.info.IsCreadedUpdatedBy) {\n      return 0;\n    }\n    if (this.loading) return 0;\n    var size = this.load();\n    return size;\n  };\n  MLookup.prototype.clear = function () {\n    this.$super.clear.call(this);\n    this.lookup = {};\n  }; // clear\n  MLookup.prototype.getCLookup = function () {\n    if (this.cLookup) this.lookupDirectAll;\n    return this.lookup;\n  };\n  MLookup.prototype.setCLookup = function (lookup) {\n    if (this.cLookup) this.lookupDirectAll = lookup;\n    this.lookup = lookup;\n  };\n  MLookup.prototype.getIsLoading = function () {\n    return this.loading;\n  };\n  MLookup.prototype.setIsLoading = function (loading) {\n    this.loading = loading;\n  };\n  /**\r\n   * Get Zoom\r\n   * \r\n   * @return Zoom AD_Window_ID\r\n   */\n  MLookup.prototype.getZoomWindow = function () {\n    if (arguments.length == 0) {\n      return this.info.zoomWindow;\n    }\n    var query = arguments[0];\n\n    /*\r\n    * Handle cases where you have multiple windows for a single table. So\r\n    * far it is just the tables that have a PO Window defined. For eg.,\r\n    * Order, Invoice and Shipments This will need to be expanded to add\r\n    * more tables if they have multiple windows.\r\n    */\n\n    var AD_Window_ID = VIS.ZoomTarget.getZoomAD_Window_ID(this.info.tableName, this.windowNo, query.getWhereClause(), VIS.context.isSOTrx(this.windowNo));\n    return AD_Window_ID;\n  }; // getZoomWindow\n  /**\r\n   * Get Zoom Query String\r\n   * \r\n   * @return Zoom SQL Where Clause\r\n   */\n  MLookup.prototype.getZoomQuery = function () {\n    return this.zomQuery;\n  }; // getZoom\n  /// <summary>\n  /// Get Reference Value\n  /// </summary>\n  /// <returns>Reference Value</returns>\n  MLookup.prototype.getAD_Reference_Value_ID = function () {\n    return this.info.AD_Reference_Value_ID;\n  };\n  MLookup.prototype.gethasImageIdentifier = function () {\n    return this.info.hasImageIdentifier;\n  };\n  MLookup.prototype.disableValidation = function () {\n    var validationCode = this.info.validationCode;\n    this.$super.disableValidation.call(this);\n    this.info.isValidated = true;\n    this.info.validationCode = "";\n\n    //\tSwitch to Search for Table/Dir Validation\n    if (validationCode != null && validationCode.length > 0) {\n      if (validationCode.indexOf("@") != -1 && this.getDisplayType() == VIS.DisplayType.Table || this.getDisplayType() == VIS.DisplayType.TableDir) {\n        this.setDisplayType(VIS.DisplayType.Search);\n      }\n    }\n  };\n  MLookup.prototype.dispose = function () {\n    this.$super.dispose.call(this);\n    this.lookupDirect = null;\n    this.directNullKey = null;\n    this.log = null;\n  };\n  //END MLookup \n\n  //2. MLocationLookup\n  function MLocationLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.TableDir);\n    this.lookup = {};\n    this.load();\n  }\n  ;\n  VIS.Utility.inheritPrototype(MLocationLookup, Lookup); //Inherit\n\n  MLocationLookup.prototype.cacheLookup = null;\n  MLocationLookup.prototype.getDisplay = function (value) {\n    if (value == null) return "";\n    var loc = this.getLocation(value, null);\n    if (loc == null) return "<" + value.toString() + ">";\n    return loc.Name;\n  };\n  /**\r\n   *\tGet Object of Key Value\r\n   *  @param value value\r\n   *  @return Object or null\r\n   */\n  MLocationLookup.prototype.get = function (value) {\n    if (value == null) return null;\n    var loc = this.getLocation(value, null);\n    if (loc == null) return null;\n    return loc;\n  }; //\tget\n  MLocationLookup.prototype.getColumnName = function () {\n    return "C_Location_ID";\n  };\n  MLocationLookup.prototype.getLocation = function (key, isLatLong) {\n    if (key == null) return null;\n    if (!isLatLong) {\n      if (key in this.lookup) {\n        return this.lookup[key];\n      }\n    } else {\n      if (key in this.lstLatLng) {\n        return this.lstLatLng[key];\n      }\n    }\n    // VIS0008 load location data based on setting in system config\n    if (VIS.context.getLocationBulkReload()) {\n      var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Location" + "/GetLocation", {\n        id: key\n      });\n      this.lookup[key] = data.LocItem;\n      this.lstLatLng[key] = data.LocLatLng;\n      if (!isLatLong) return data.LocItem;\n      return data.LocLatLng;\n    } else {\n      var self = this;\n      VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Location" + "/GetLocation", {\n        id: key\n      }, function (data) {\n        if (key in self.lookup) {} else {\n          self.lookup[key] = data.LocItem;\n          self.lstLatLng[key] = data.LocLatLng;\n        }\n      });\n      return null;\n    }\n  }; //\n\n  MLocationLookup.prototype.refreshLocation = function (key) {\n    if (key == null) return null;\n    var data = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Location" + "/GetLocation", {\n      id: key\n    });\n    this.lookup[key] = data.LocItem;\n    this.lstLatLng[key] = data.LocLatLng;\n    return data;\n  };\n  MLocationLookup.prototype.load = function () {\n    var self = this;\n    self.lstLatLng = {};\n    if (MLocationLookup.prototype.cacheLookup != null) {\n      self.lookup = MLocationLookup.prototype.cacheLookup.LocLookup;\n      self.lstLatLng = MLocationLookup.prototype.cacheLookup.LocLatLng;\n      self = null;\n      return;\n    }\n    VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Location" + "/GetLocations", "", function (data) {\n      if (!MLocationLookup.prototype.cacheLookup) {\n        MLocationLookup.prototype.cacheLookup = data;\n      }\n      self.lookup = data.LocLookup;\n      self.lstLatLng = data.LocLatLng;\n      self = null;\n    });\n  };\n  MLocationLookup.prototype.getLatLng = function (key) {\n    if (key == null || key.toString().len < 1) return null;\n    if (key in this.lstLatLng) {\n      return this.lstLatLng[key];\n    }\n    var data = this.getLocation(key, true);\n    return data;\n  };\n  MLocationLookup.prototype.dispose = function () {\n    this.lstLatLng = null;\n    this.$super.dispose.call(this);\n    this.lookup = null;\n  };\n  //END\n\n  //3. MLocatorLookup\n  function MLocatorLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.TableDir);\n    this.C_Locator_ID = 0;\n    //Only  Organization\n    this.OnlyOrgID = 0;\n    //\tOnly Warehouse\t\n    this.onlyWarehouseID = 0;\n    //\tOnly Product\t\t\t\t\n    this.onlyProductID = 0;\n    //\tOnly outgoing Trx\t\t\t\n    this.onlyOutgoing = false;\n    this.lookup = {};\n    // Max Locators per Lookup\t\t\n    this.maxRows = 10000;\n    this.defaultID = "";\n    this.log = VIS.Logging.VLogger.getVLogger("MLocatorLookup");\n    this.load(false);\n    this.disposeLocal = function () {\n      this.lookup = null;\n      this.log = null;\n    };\n  }\n  ;\n  //inherit lookup class\n  VIS.Utility.inheritPrototype(MLocatorLookup, Lookup);\n  MLocatorLookup.prototype.getDefault = function () {\n    return this.defaultID;\n  };\n  MLocatorLookup.prototype.getOnlyOrgID = function () {\n    return this.OnlyOrgID;\n  };\n  MLocatorLookup.prototype.getOnlyWarehouseID = function () {\n    return this.onlyWarehouseID;\n  };\n  MLocatorLookup.prototype.getOnlyProductId = function () {\n    return this.onlyProductID;\n  };\n  MLocatorLookup.prototype.getIsOnlyOutgoing = function () {\n    return this.onlyOutgoing;\n  };\n  MLocatorLookup.prototype.setOnlyOrgID = function (OnlyOrgID) {\n    this.OnlyOrgID = OnlyOrgID;\n  };\n  MLocatorLookup.prototype.setOnlyWarehouseID = function (onlyWarehouseID) {\n    this.onlyWarehouseID = onlyWarehouseID;\n  };\n  MLocatorLookup.prototype.setOnlyProductID = function (onlyProductID) {\n    this.onlyProductID = onlyProductID;\n  };\n  MLocatorLookup.prototype.setOnlyOutgoing = function (isOutgoing) {\n    this.onlyOutgoing = isOutgoing;\n  };\n  /**\r\n   * Get Data Direct from Table\r\n   * \r\n   * @param keyValue\r\n   *            integer key value\r\n   * @param saveInCache\r\n   *            save in cache\r\n   * @param trx\r\n   *            transaction\r\n   * @return Object directly loaded\r\n   */\n  MLocatorLookup.prototype.getDirect = function (keyValue, saveInCache, trxName) {\n    if (keyValue == null) {\n      return null;\n      ;\n    }\n    var sqlQry = "VIS_92";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@keyValue", keyValue);\n    var dr = executeReader(sqlQry, param);\n    var value = "";\n    if (dr.read()) {\n      value = dr.getString(0);\n    } else return null;\n    dr.dispose();\n    var retValue = {\n      Key: keyValue,\n      Name: VIS.Utility.encodeText(value)\n    };\n    if (saveInCache) {\n      this.lookup[" " + keyValue] = retValue;\n    }\n    return retValue;\n  };\n  /**\r\n   * Is Locator with key valid (Warehouse)\r\n   * \r\n   * @param key\r\n   *            key\r\n   * @return true if valid\r\n   */\n  MLocatorLookup.prototype.getIsValid = function (key) {\n    if (key == null) return true;\n    // try cache\n    var pp = this.lookup[key];\n    return pp != null;\n  }; // isValid\n  //Override functions\n  MLocatorLookup.prototype.load = function (sync) {\n    var param = [];\n    var sqlParaCount = 0;\n    var rows = 0;\n    var orgId = this.getOnlyOrgID();\n    var warehouseId = this.getOnlyWarehouseID();\n    var productId = this.getOnlyProductId();\n    var onlyIsSOTrx = this.getIsOnlyOutgoing();\n\n    // Commented This \n    //var sql = "SELECT M_Locator_ID,Value FROM M_Locator WHERE IsActive=\'Y\'";\n\n    // Change By Lokesh Chauhan 6 Aug 2015\n    // Display Identifiers in Locator Reference instead of Value\n    //var colName = "Value";\n    var colName = "1";\n    try {\n      // Commented by Bharat on 24 Jan 2019\n      // JID_1024: "Show locator name in dropdown with Warehouse Name_LocatorSearchkey(locatorName)\n\n      //var sql = "VIS_93";\n      //var ds = executeDataSet(sql, sqlParaCount > 0 ? param : null);\n      //var dt = ds.getTable(0);\n      //var len = dt.getRows().length;\n\n      //for (var i = 0; i < len; i++) {\n      //    //\tMax out\n      //    //if (rows++ > this.maxRows) {\n      //    //    this.log.warning("Over Max Rows - " + rows);\n      //    //    break;\n      //    //}\n\n      //    if (i == 0) {\n      //        colName = dt.getRow(i).getCell(0);\n      //    }\n      //    else {\n      //        colName += " || \'_\' || " + dt.getRow(i).getCell(0);\n      //    }\n      //}\n      //ds.dispose();\n      //ds = null;\n    } catch (ex) {\n      this.log.log(VIS.Logging.Level.SEVERE, sql, ex);\n      colName = "Value";\n    }\n    // Change By Lokesh Chauhan 6 Aug 2015\n\n    //var sql = "SELECT * FROM M_Locator WHERE IsActive=\'Y\'"; not using mclass to get override value\n    //sql = "SELECT M_Locator_ID," + colName + " FROM M_Locator WHERE IsActive=\'Y\'";\n    //if (warehouseId != 0) {\n    //    sql += " AND M_Warehouse_ID=@w";\n    //}\n    //if (productId != 0) {\n    //    sql += " AND (IsDefault=\'Y\' OR EXISTS (SELECT * FROM M_Storage s WHERE s.M_Locator_ID=M_Locator.M_Locator_ID AND s.M_Product_ID=@p)";\n    //    if (onlyIsSOTrx == null || !onlyIsSOTrx.value) {\n    //        //\tDefault Product\n    //        sql += "OR EXISTS (SELECT * FROM M_Product p WHERE p.M_Locator_ID=M_Locator.M_Locator_ID AND p.M_Product_ID=@p)OR EXISTS (SELECT * FROM M_ProductLocator pl " +\n    //            " WHERE pl.M_Locator_ID=M_Locator.M_Locator_ID AND pl.M_Product_ID=@p) OR 0 = (SELECT COUNT(*) FROM M_ProductLocator pl " +\n    //            " INNER JOIN M_Locator l2 ON (pl.M_Locator_ID=l2.M_Locator_ID) WHERE pl.M_Product_ID=@p AND l2.M_Warehouse_ID=M_Locator.M_Warehouse_ID )";\n    //    }\n    //    sql += ")";\n    //}\n\n    //var finalSql = VIS.MRole.addAccessSQL(sql, "M_Locator", VIS.MRole.SQL_NOTQUALIFIED, VIS.MRole.SQL_RO);\n\n    //\tReset\n    this.lookup = null;\n    this.lookup = {};\n    if (onlyIsSOTrx == null || !onlyIsSOTrx.value) {\n      onlyIsSOTrx = true;\n    } else {\n      onlyIsSOTrx = false;\n    }\n    try {\n      //if (warehouseId != 0) {\n      //    param.push(new DB.SqlParam("@w", parseInt(warehouseId)));\n      //    sqlParaCount += 1;\n      //}\n      //if (productId != 0) {\n      //    param.push(new DB.SqlParam("@p", productId));\n      //    sqlParaCount += 1;\n      //}\n      var ds = null;\n      if (sync) {\n        $.ajax({\n          type: \'Get\',\n          async: false,\n          url: VIS.Application.contextUrl + "Form/GetWareProWiseLocator",\n          data: {\n            colName: colName,\n            orgId: orgId,\n            warehouseId: warehouseId,\n            productId: productId,\n            onlyIsSOTrx: onlyIsSOTrx\n          },\n          success: function (data) {\n            ds = new VIS.DB.DataSet().toJson(data);\n          }\n        });\n\n        // var ds = executeDataSet(finalSql, sqlParaCount > 0 ? param : null);\n        var dt = ds.getTable(0);\n        var len = dt.getRows().length;\n        for (var i = 0; i < len; i++) {\n          //\tMax out\n          if (rows++ > this.maxRows) {\n            this.log.warning("Over Max Rows - " + rows);\n            break;\n          }\n          var name = VIS.Utility.Util.getValueOfString(dt.getRow(i).getCell(4)) + "_" + VIS.Utility.Util.getValueOfString(dt.getRow(i).getCell(1)) + "(" + VIS.Utility.Util.getValueOfString(dt.getRow(i).getCell(2)) + ")";\n          this.lookup[dt.getRow(i).getCell(0)] = {\n            Key: dt.getRow(i).getCell(0),\n            Name: name\n          };\n        }\n        ds.dispose();\n        ds = null;\n        this.log.fine("Complete #" + rows);\n      } else {\n        var self = this;\n        $.ajax({\n          type: \'Get\',\n          async: true,\n          url: VIS.Application.contextUrl + "Form/GetWareProWiseLocator",\n          data: {\n            colName: colName,\n            orgId: orgId,\n            warehouseId: warehouseId,\n            productId: productId,\n            onlyIsSOTrx: onlyIsSOTrx\n          },\n          success: function (data) {\n            ds = new VIS.DB.DataSet().toJson(data);\n            try {\n              var dt = ds.getTable(0);\n              var len = dt.getRows().length;\n              for (var i = 0; i < len; i++) {\n                //\tMax out\n                if (rows++ > self.maxRows) {\n                  self.log.warning("Over Max Rows - " + rows);\n                  break;\n                }\n                self.lookup[dt.getRow(i).getCell(0)] = {\n                  Key: dt.getRow(i).getCell(0),\n                  Name: VIS.Utility.Util.getValueOfString(dt.getRow(i).getCell(1))\n                };\n              }\n              ds.dispose();\n              ds = null;\n              self.log.fine("Complete #" + rows);\n            } catch (ex) {\n              self.log(VIS.Logging.Level.SEVERE, "", ex);\n            }\n            self = null;\n          }\n        });\n\n        //executeDSet(finalSql, sqlParaCount > 0 ? param : null, function (ds) {\n        //try {\n        //    var dt = ds.getTable(0);\n        //    var len = dt.getRows().length;\n\n        //    for (var i = 0; i < len; i++) {\n        //        //\tMax out\n        //        if (rows++ > self.maxRows) {\n        //            self.log.warning("Over Max Rows - " + rows);\n        //            break;\n        //        }\n\n        //        self.lookup[dt.getRow(i).getCell(0)] = { Key: dt.getRow(i).getCell(0), Name: VIS.Utility.Util.getValueOfString(dt.getRow(i).getCell(1)) };\n        //    }\n        //    ds.dispose();\n        //    ds = null;\n        //    self.log.fine("Complete #" + rows);\n        //}\n        //catch (ex) {\n        //    self.log(VIS.Logging.Level.SEVERE, finalSql, ex);\n        //}\n        //self = null;\n        //});\n      }\n    } catch (e) {\n      this.log.log(VIS.Logging.Level.SEVERE, finalSql, e);\n    }\n    if (sync && $.isEmptyObject(this.lookup)) {\n      this.log.Finer(finalSql);\n    }\n  };\n  MLocatorLookup.prototype.get = function (key) {\n    if (key == null) {\n      return null;\n    }\n    var key1 = Number(key);\n    //\ttry cache\n    var pp = this.lookup[key1];\n    if (pp != null) {\n      return pp;\n    }\n    //\tTry to get it directly\n    return this.getDirect(key, true, null);\n  };\n  MLocatorLookup.prototype.getDisplay = function (value) {\n    if (value == null) {\n      return "";\n    }\n    var display = this.get(value);\n    if (display == null) return "<" + value.toString() + ">";\n    return display.Name;\n  };\n  MLocatorLookup.prototype.getData = function (mandatory, onlyValidated, onlyActive, temporary) {\n    var collection = this.lookup; //valuestodo\n\n    var arr = $.map(this.lookup, function (v) {\n      return v;\n    });\n    return arr;\n  };\n  MLocatorLookup.prototype.refresh = function () {\n    this.log.fine("start");\n    try {\n      this.load(true);\n    } catch (e) {\n      this.log.severe("#" + this.lookup.Count);\n    }\n    this.log.info("#" + this.lookup.Count);\n    return this.lookup.length;\n  };\n  MLocatorLookup.prototype.getColumnName = function () {\n    return "M_Locator.M_Locator_ID";\n  };\n\n  /**\r\n  * Get Zoom\r\n  * \r\n  * @return Zoom AD_Window_ID\r\n  */\n  MLocatorLookup.prototype.getZoomWindow = function () {\n    if (arguments.length == 0) {\n      return this.info.zoomWindow;\n    }\n    var query = arguments[0];\n\n    /*\r\n    * Handle cases where you have multiple windows for a single table. So\r\n    * far it is just the tables that have a PO Window defined. For eg.,\r\n    * Order, Invoice and Shipments This will need to be expanded to add\r\n    * more tables if they have multiple windows.\r\n    */\n\n    var AD_Window_ID = VIS.ZoomTarget.getZoomAD_Window_ID("M_Locator", this.windowNo, query.getWhereClause(), VIS.context.isSOTrx(this.windowNo));\n    return AD_Window_ID;\n  }; // getZoomWindow\n\n  MLocatorLookup.prototype.dispose = function () {\n    this.disposeLocal();\n    this.$super.dispose.call(this);\n    this.lookupDirect = null;\n    this.directNullKey = null;\n    this.log = null;\n    this.disposeLocal = null;\n  };\n  //END\n\n  //4. MAccountLookup\n  function MAccountLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.TableDir);\n    this.log = VIS.Logging.VLogger.getVLogger("MAccountLookup");\n    /** Account_ID\t\t\t*/\n    this.C_ValidCombination_ID = 0;\n    this.combination;\n    this.description;\n    this.lst = {};\n  }\n  ;\n  VIS.Utility.inheritPrototype(MAccountLookup, Lookup); //Inherit\n  /**\r\n   *\tGet Display for Value\r\n   *  @param value value\r\n   *  @return String\r\n   */\n  MAccountLookup.prototype.getDisplay = function (value) {\n    if (!this.containsKey(value)) return "<" + value.toString() + ">";\n    return this.toStringX();\n  }; //\tgetDisplay\n  /**\r\n   *\tReturn String representation\r\n   *  @return Combination\r\n   */\n  MAccountLookup.prototype.toStringX = function () {\n    if (this.C_ValidCombination_ID == 0) return "";\n    return this.combination;\n  }; //\n  /**\r\n   *  The Lookup contains the key\r\n   *  @param key key\r\n   *  @return true if exists\r\n   */\n  MAccountLookup.prototype.containsKey = function (key) {\n    var intValue = 0;\n    if (key != null) intValue = parseInt(key.toString());\n    //\n    return this.load(intValue);\n  }; //  containsKey\n  /**\r\n   *\tLoad C_ValidCombination with ID\r\n   *  @param ID C_ValidCombination_ID\r\n   *  @return true if found\r\n   */\n  MAccountLookup.prototype.load = function (ID) {\n    if (ID == 0)\n      //\tnew\n      {\n        this.C_ValidCombination_ID = 0;\n        this.combination = "";\n        this.description = "";\n        return true;\n      }\n    if (ID == this.C_ValidCombination_ID)\n      //\talready loaded\n      return true;\n    var lstObj = this.lst[ID];\n    if (lstObj) {\n      this.C_ValidCombination_ID = ID;\n      this.combination = lstObj["C"];\n      this.description = lstObj["D"];\n      return true;\n    }\n    var text = VIS.MLookupCache.getRecordLookup(this.getWindowNo(), this.getTabNo(), "c_validcombination_id", ID);\n    if (text) {\n      lstObj = {\n        "C": text,\n        "D": "-"\n      };\n      this.C_ValidCombination_ID = ID;\n      this.combination = lstObj["C"];\n      this.description = lstObj["D"];\n      this.lst[ID] = lstObj;\n      return true;\n    }\n    var SQL = "VIS_94";\n    var param = [];\n    param[0] = new VIS.DB.SqlParam("@ID", ID);\n    var self = this;\n    executeReader(SQL, param, function (dr) {\n      var dr = null;\n      try {\n        //\tPrepare Statement\n        dr = executeReader(SQL, param);\n        if (!dr.read()) return false;\n        self.lst[dr.getInt(0)] = {\n          "C": dr.getString(1),\n          "D": dr.getString(2)\n        };\n        // this.C_ValidCombination_ID = dr.getInt(0);\n        //  this.combination = dr.getString(1);\n        //  this.description = dr.getString(2);\n      } catch (e) {\n        return false;\n      } finally {}\n    });\n    return false;\n  }; //\tload\n  /**\r\n   *\tGet underlying fully qualified Table.Column Name\r\n   *  @return ""\r\n   */\n  MAccountLookup.prototype.getColumnName = function () {\n    return "";\n  };\n  /**\r\n   *\tReturn data as sorted Array.\r\n   *  Used in Web Interface\r\n   *  @param mandatory mandatory\r\n   *  @param onlyValidated only valid\r\n   *  @param onlyActive only active\r\n   * \t@param temporary force load for temporary display\r\n   *  @return ArrayList with KeyNamePair\r\n   */\n  MAccountLookup.prototype.getData = function (mandatory, onlyValidated, onlyActive, temporary) {\n    var list = [];\n    if (!mandatory) list.push({\n      "Key": -1,\n      "Name": ""\n    });\n    //\n    //var sql = "SELECT C_ValidCombination_ID, Combination, Description "\n    //    + "FROM C_ValidCombination WHERE AD_Client_ID=" + this.ctx.getAD_Client_ID();\n    //if (onlyActive)\n    //    sql += " AND IsActive=\'Y\'";\n    //sql.append(" ORDER BY 2");\n\n    var dr = null;\n    try {\n      $.ajax({\n        type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Form/GetValidAccountCombination",\n        data: {\n          AD_Client_ID: AD_Client_ID,\n          onlyActive: onlyActive\n        },\n        success: function (data) {\n          dr = new VIS.DB.DataReader().toJson(jString);\n        }\n      });\n\n      //dr = executeReader(sql.toString(), null);\n      while (dr.read()) list.push({\n        "Key": dr.getInt(0),\n        "Name": dr.getString(1) + " - " + dr.getString(2)\n      });\n    } catch (e) {\n      this.log.log(Level.SEVERE, sql, e);\n    }\n    //  Sort & return\n    return list;\n  }; //  getData\n  //END\n\n  //5. MPAttributeLookup\n  function MPAttributeLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.TableDir);\n    this.NO_INSTANCE = {\n      "Key": 0,\n      "Name": ""\n    };\n    this.log = VIS.Logging.VLogger.getVLogger("MPAttributeLookup");\n  }\n  ;\n  VIS.Utility.inheritPrototype(MPAttributeLookup, Lookup); //Inherit\n  /**\r\n   *\tGet Display for Value (not cached)\r\n   *  @param value Location_ID\r\n   *  @return String Value\r\n   */\n  MPAttributeLookup.prototype.getDisplay = function (value) {\n    if (value == null) return "";\n    var pp = this.get(value);\n    if (pp == null) return "<" + value.toString() + ">";\n    return pp.Name;\n  }; //\tgetDisplay\n  /**\r\n   *\tGet Object of Key Value\r\n   *  @param value value\r\n   *  @return Object or null\r\n   */\n  MPAttributeLookup.prototype.get = function (value) {\n    if (value == null) return null;\n    var M_AttributeSetInstance_ID = 0;\n    if (value instanceof Number) M_AttributeSetInstance_ID = value;else {\n      try {\n        M_AttributeSetInstance_ID = parseInt(value.toString());\n      } catch (e) {\n        this.log.log(Level.SEVERE, "Value=" + value, e);\n      }\n    }\n    if (M_AttributeSetInstance_ID == 0) return this.NO_INSTANCE;\n    var description = null;\n    try {\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@M_AttributeSetInstance_ID", M_AttributeSetInstance_ID);\n      var dr = executeReader("VIS_95", param);\n      if (dr.read()) {\n        description = dr.getString(0); //\tDescription\n        if (description == null || description.length == 0) {\n          if (VIS.Logging.VLogMgt.getIsLevelFine()) description = "{" + M_AttributeSetInstance_ID + "}";else description = "";\n        }\n      }\n      dr.dispose();\n      dr = null;\n    } catch (e) {\n      this.log.log(Level.SEVERE, "get", e);\n    }\n    if (description == null) return null;\n    return {\n      "Key": M_AttributeSetInstance_ID,\n      "Name": description\n    };\n  }; //\tget\n\n  MPAttributeLookup.prototype.getColumnName = function () {\n    return "M_AttributeSetInstance_ID";\n  }; //\tgetColumnName\n\n  MPAttributeLookup.prototype.dispose = function () {\n    this.$super.dispose.call(this);\n    this.NO_INSTANCE = null;\n    this.log = null;\n  };\n  //END\n\n  //6. MGAttributeLookup\n  function MGAttributeLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.TableDir);\n    this.NO_INSTANCE = {\n      "Key": 0,\n      "Name": ""\n    };\n    this.log = VIS.Logging.VLogger.getVLogger("MGAttributeLookup");\n  }\n  ;\n  VIS.Utility.inheritPrototype(MGAttributeLookup, Lookup); //Inherit\n\n  /**\r\n   *\tGet Display for Value (not cached)\r\n   *  @param value Location_ID\r\n   *  @return String Value\r\n   */\n  MGAttributeLookup.prototype.getDisplay = function (value) {\n    if (value == null) return "";\n    var pp = this.get(value);\n    if (pp == null) return "<" + value.toString() + ">";\n    return pp.Name;\n  };\n\n  /**\r\n   *\tGet Object of Key Value\r\n   *  @param value value\r\n   *  @return Object or null\r\n   */\n  MGAttributeLookup.prototype.get = function (value) {\n    if (value == null) return null;\n    var C_GenttributeSetInstance_ID = 0;\n    if (value instanceof Number) C_GenttributeSetInstance_ID = value;else {\n      try {\n        C_GenttributeSetInstance_ID = parseInt(value.toString());\n      } catch (e) {\n        this.log.log(Level.SEVERE, "Value=" + value, e);\n      }\n    }\n    if (C_GenttributeSetInstance_ID == 0) return this.NO_INSTANCE;\n    var description = null;\n    try {\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@C_GenttributeSetInstance_ID", C_GenttributeSetInstance_ID);\n      var dr = executeReader("VIS_96", param);\n      if (dr.read()) {\n        description = dr.getString(0); //\tDescription\n        if (description == null || description.length == 0) {\n          if (VIS.Logging.VLogMgt.getIsLevelFine()) description = "{" + C_GenttributeSetInstance_ID + "}";else description = "";\n        }\n      }\n      dr.dispose();\n      dr = null;\n    } catch (e) {\n      this.log.log(Level.SEVERE, "get", e);\n    }\n    if (description == null) return null;\n    return {\n      "Key": C_GenttributeSetInstance_ID,\n      "Name": description\n    };\n  }; //\tget\n\n  MGAttributeLookup.prototype.getColumnName = function () {\n    return "C_GenAttributeSetInstance_ID";\n  }; //\tgetColumnName\n\n  MGAttributeLookup.prototype.dispose = function () {\n    this.$super.dispose.call(this);\n    this.NO_INSTANCE = null;\n    this.log = null;\n  };\n  MGAttributeLookup.prototype.getData = function (mandatory, onlyValidated, onlyActive, temporary) {\n    var list = [];\n    if (!mandatory) list.push({\n      "Key": -1,\n      "Name": ""\n    });\n    //var sql = "SELECT ASI.C_GenAttributeSetInstance_ID, ASI.Description " +\n    //    " from C_GenAttributeSetInstance ASI, M_Product P WHERE ASI.C_GenAttributeSet_ID  = " + VIS.Env.getCtx().getContextAsInt(this.windowNo, "C_GenAttributeSet_ID");\n    //if (onlyActive)\n    //    sql += " AND IsActive=\'Y\'";\n    //sql.append(" ORDER BY 2");\n\n    var dr = null;\n    try {\n      //dr = executeReader(sql.toString(), null);\n      $.ajax({\n        type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Form/GenAttributeSetInstance",\n        data: {\n          C_GenAttributeSet_ID: VIS.Env.getCtx().getContextAsInt(this.windowNo, "C_GenAttributeSet_ID"),\n          onlyActive: onlyActive\n        },\n        success: function (data) {\n          dr = new VIS.DB.DataReader().toJson(jString);\n        }\n      });\n      while (dr.read()) list.push({\n        "Key": dr.getInt(0),\n        "Name": dr.getString(1) + " - " + dr.getString(2)\n      });\n    } catch (e) {\n      this.log.log(Level.SEVERE, sql, e);\n    }\n    //  Sort & return\n    return list;\n  };\n\n  //END\n\n  /*******************************************************************\r\n                 MLookupFactory\r\n  *******************************************************************/\n\n  VIS.MLookupFactory = {\n    get: function (ctx, windowNo, column_ID, AD_Reference_ID, columnName, AD_Reference_Value_ID, isParent, validationCode) {\n      //var lookup = this.getLookupInfo(ctx, windowNo, AD_Reference_ID, column_ID, columnName, AD_Reference_Value_ID, isParent, validationCode);\n      //if (lookup == null)\n      //    throw new IllegalArgumentException("MLookup.create - no LookupInfo");\n      //return lookup;\n      //  var ctxstr = JSON.stringify(ctx);\n      if (validationCode && validationCode.length > 0) {\n        validationCode = VIS.secureEngine.encrypt(validationCode);\n      }\n      if (column_ID) column_ID = VIS.Utility.Util.getValueOfInt(column_ID);\n      var d = {\n        \'ctx\': ctx.getWindowCtx(windowNo),\n        \'windowNo\': windowNo,\n        \'column_ID\': column_ID,\n        \'AD_Reference_ID\': AD_Reference_ID,\n        \'columnName\': columnName,\n        \'AD_Reference_Value_ID\': AD_Reference_Value_ID,\n        \'isParent\': isParent,\n        \'validationCode\': validationCode\n      };\n\n      //var paramStr = "ctx="+ctxstr+"&windowNo=" + windowNo + "&column_ID=" + column_ID + "&AD_Reference_ID="\n      //    + AD_Reference_ID + "&columnName=" + columnName + "&AD_Reference_Value_ID=" + AD_Reference_Value_ID\n      //    + "&isParent=" + isParent + "&validationCode="+validationCode;\n\n      var lookup = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "JsonData/GetLookup", d);\n      var df = new VIS.MLookup(lookup._vInfo, lookup, 0, 0, 0, d);\n      return df;\n    },\n    getMLookUp: function (ctx, windowNo, Column_ID, AD_Reference_ID) {\n      var columnName = "";\n      var AD_Reference_Value_ID = 0;\n      var isParent = false;\n      var validationCode = "";\n      if (Column_ID) Column_ID = VIS.Utility.Util.getValueOfInt(Column_ID);\n\n      //\n      var sql = "VIS_97";\n      var dr = null;\n      try {\n        var param = [];\n        param[0] = new VIS.DB.SqlParam("@Column_ID", Column_ID);\n        dr = executeReader(sql.toString(), param, null);\n        if (dr.read()) {\n          columnName = dr.getString(0);\n          AD_Reference_Value_ID = dr.getInt(1);\n          isParent = "Y".equals(dr.getString(2));\n          validationCode = dr.getString(3);\n        } else {\n          //this.log.Log(Level.SEVERE, "Column Not Found - AD_Column_ID=" + Column_ID);\n        }\n        dr.close();\n        dr = null;\n      } catch (ex) {\n        if (dr != null) {\n          dr.close();\n          dr = null;\n        }\n        // s_log.Log(Level.SEVERE, sql, ex);\n      }\n      return VIS.MLookupFactory.get(ctx, windowNo, Column_ID, AD_Reference_ID, columnName, AD_Reference_Value_ID, isParent, validationCode);\n      //var lookup = new VIS.MLookup(ctx, windowNo, AD_Reference_ID);\n      //var info = GetLookUpInfo(VIS.Env.getLanguage(ctx), windowNo, lookup, Column_ID, columnName, AD_Reference_Value_ID, isParent, validationCode);\n      //if (info == null) {\n      //   return null;\n      //}\n      //return lookup.initialize(info);\n    },\n    GetLookUpInfo: function (ctx, windowNum, AD_Reference_ID, column_ID, columnName, AD_Reference_Value_ID, isParent, validationCode) {\n      if (column_ID) column_ID = VIS.Utility.Util.getValueOfInt(column_ID);\n      var data = {\n        WindowNum: windowNum,\n        AD_Reference_ID: AD_Reference_ID,\n        Column_ID: column_ID,\n        columnName: columnName,\n        AD_Reference_Value_ID: AD_Reference_Value_ID,\n        IsParent: isParent,\n        ValidationCode: validationCode\n      };\n    }\n\n    //getLookup_TableDirEmbed: function (language, columnName, baseTable, baseColumn) {\n    //    var tableName = columnName.substring(0, columnName.length - 3);\n    //    //\tget display column name (first identifier column)\n    //    var sql = "VIS_98";\n    //    var list = [];\n    //    var param = [];\n    //    param[0] = new VIS.DB.SqlParam("@tableName", tableName);\n\n    //    try {\n    //        var dr = executeReader(sql, param);\n    //        while (dr.read()) {\n    //            list.push({ \'ColumnName\': dr.getString(0), \'IsTranslated\': dr.getString(1), \'DisplayType\': dr.getInt(2), \'AD_Reference_Value_ID\': dr.getInt(3) });\n    //        }\n    //        dr.close();\n    //        dr = null;\n    //    }\n    //    catch (e) {\n    //        return "";\n    //    }\n    //    //  Do we have columns ?\n    //    if (list.length == 0) {\n    //        return "";\n    //    }\n\n    //    var embedSQL = "SELECT ";\n\n    //    for (var i = 0; i < list.length; i++) {\n    //        if (i > 0) {\n    //            embedSQL = embedSQL.concat("||\' - \'||");\n    //        }\n    //        var ldc = list[i];\n\n    //        //  date, number\n    //        if (VIS.DisplayType.IsDate(ldc.DisplayType) || VIS.DisplayType.IsNumeric(ldc.DisplayType)) {\n    //            embedSQL = embedSQL.concat(VIS.DB.to_char(tableName + "." + ldc.ColumnName, ldc.DisplayType, VIS.Env.getAD_Language(VIS.Env.getCtx())));\n    //        }\n    //        //  TableDir\n    //        else if ((ldc.DisplayType == VIS.DisplayType.TableDir || ldc.DisplayType == VIS.DisplayType.Search) && ldc.ColumnName.endsWith("_ID")) {\n    //            alert("TableDir");\n    //            //var embeddedSQL = GetLookup_TableDirEmbed(language, ldc.ColumnName, tableName);\n    //            //embedSQL = embedSQL.concat("(").concat(embeddedSQL).concat(")");\n    //        }\n    //        //  String\n    //        else {\n    //            //jz EDB || problem\n    //            //if (DatabaseType.IsPostgre)\n    //            //    embedSQL.concat("COALESCE(TO_CHAR(").concat(tableName).concat(".").Append(ldc.ColumnName).concat("),\'\')");\n    //            //else\n    //            embedSQL = embedSQL.concat(tableName).concat(".").concat(ldc.ColumnName);\n    //        }\n    //    }\n\n    //    embedSQL = embedSQL.concat(" FROM ").concat(tableName);\n    //    embedSQL = embedSQL.concat(" WHERE ").concat(baseTable).concat(".").concat(baseColumn);\n    //    embedSQL = embedSQL.concat("=").concat(tableName).concat(".").concat(columnName);\n    //    //\n    //    return embedSQL.toString();\n    //}\n  };\n\n  /*******************************************************************\r\n                 END\r\n  *******************************************************************/\n\n  VIS.MLookupCache = {\n    /** Static Logger */\n    s_log: VIS.Logging.VLogger.getVLogger("MLookupCache"),\n    /** Static Lookup data with MLookupInfo -> HashMap */\n    s_loadedLookups: new VIS.CCache("MLookupCache"),\n    s_sentLookups: new VIS.CCache("MLookupCacheSent"),\n    s_windowLookup: {},\n    s_windowRecordLookup: {},\n    getKey: function (info) {\n      if (info == null) return VIS.Env.currentTimeMillis();\n      //\n      var sb = info.windowNo + ":";\n      //sb += info.column_ID;\n      sb += ":" + info.keyColumn + info.AD_Reference_Value_ID + info.query + info.validationCode;\n      // does not include ctx\n      return sb;\n    },\n    // getKey\n\n    loadFromCache: function (info, cacheTarget) {\n      var key = this.getKey(info);\n      var cache = null;\n      var retVal = true;\n      if (this.s_loadedLookups.contains(key)) cache = this.s_loadedLookups.get(key);\n      if (cache == null) retVal = false;\n      //  Nothing cached\n      if (retVal && $.isEmptyObject(cache)) {\n        this.s_loadedLookups.remove(key);\n        retVal = false;\n      }\n      if (retVal) {\n        //  we can use iterator, as the lookup loading is complete (i.e. no additional entries)\n        //var lookupTarget = cacheTarget.getCLookup();\n        // lookupTarget = jQuery.extend({}, cache);\n        cacheTarget.setCLookup(jQuery.extend({}, cache));\n\n        //while (iterator.MoveNext())\n        //{\n        //    Object cacheKey = iterator.Current;\n        //    NamePair cacheData = cache[cacheKey];\n        //    lookupTarget[cacheKey] = cacheData;\n        //}\n        cacheTarget.setIsLoading(false);\n      }\n      if (!retVal) {\n        retVal = true;\n        if (!this.s_sentLookups.contains(key)) {\n          this.s_sentLookups.add(key, []);\n          retVal = false;\n        } else if (this.s_sentLookups.get(key).indexOf(cacheTarget) == -1) {\n          cacheTarget.setIsLoading(true);\n          this.s_sentLookups.get(key).push(cacheTarget);\n        } else {\n          //\n        }\n      }\n      return retVal;\n    },\n    loadEnd: function (info, cacheLookup) {\n      var key = this.getKey(info);\n      if (cacheLookup.getCLookup() && !$.isEmptyObject(cacheLookup.getCLookup())) {\n        this.s_loadedLookups.add(key, cacheLookup.getCLookup());\n        if (this.s_sentLookups.contains(key)) {\n          //  we can use iterator, as the lookup loading is complete (i.e. no additional entries)\n          var list = this.s_sentLookups.get(key);\n          if (list.length > 0) {\n            var s = "";\n          }\n          for (var i = 0; i < list.length; i++) {\n            var lookupTarget = list[i];\n            lookupTarget.setCLookup($.extend({}, cacheLookup.getCLookup()));\n\n            //}\n            lookupTarget.setIsLoading(false);\n          }\n          list.length = 0;\n          this.s_sentLookups.remove(key);\n        }\n      } else {\n        if (this.s_sentLookups.contains(key)) {\n          var list = this.s_sentLookups.get(key);\n          for (var i = 0; i < list.length; i++) {\n            list[i].setIsLoading(false);\n          }\n          list.length = 0;\n          this.s_sentLookups.remove(key);\n        }\n      }\n    },\n    cacheReset: function (windowNo) {\n      var keyStart = windowNo.toString() + ":";\n      var startNo = this.s_loadedLookups.size();\n      //  find keys of Lookups to delete\n      var toDelete = [];\n      for (var j = 0, k = this.s_loadedLookups.m_cacheK.length; j < k; j++) {\n        var info = this.s_loadedLookups.m_cacheK[j];\n        try {\n          if (info != null && info.startsWith(keyStart)) toDelete.push(info);\n        } catch (e) {\n          var s = "";\n        }\n      }\n\n      //  Do the actual delete\n      for (var i = 0; i < toDelete.length; i++) this.s_loadedLookups.remove(toDelete[i]);\n      var endNo = this.s_loadedLookups.size();\n\n      // Remove window tab Record lookup\n      for (var prop in this.s_windowRecordLookup) {\n        if (prop.startsWith(keyStart)) delete this.s_windowRecordLookup[prop];\n      }\n    },\n    addWindowLookup: function (windowNo, lookup) {\n      if (this.s_windowLookup[windowNo]) {\n        this.s_windowLookup[windowNo].push(lookup);\n      } else {\n        var lst = [];\n        lst.push(lookup);\n        this.s_windowLookup[windowNo] = lst;\n      }\n    },\n    initWindowLookup: function (windowNo) {\n      if (this.s_windowLookup[windowNo]) {\n        var arr = this.s_windowLookup[windowNo];\n        for (var i = 0, j = arr.length; i < j; i++) {\n          arr[i].initialize();\n        }\n        arr.length = 0;\n        delete this.s_windowLookup[windowNo];\n      }\n    },\n    /**\r\n     * Add window tab lookup direct record\r\n     * @param {any} windowNo\r\n     * @param {any} tabNo\r\n     * @param {any} lookupDirect\r\n     */\n    addRecordLookup: function (windowNo, tabNo, lookupDirect) {\n      var key = windowNo + \':\' + tabNo;\n      this.s_windowRecordLookup[key] = lookupDirect;\n    },\n    /**\r\n     * Get Window Record Lookup\r\n     * @param {any} windowNo\r\n     * @param {any} tabNo\r\n     * @param {any} keyCol\r\n     * @param {any} key\r\n     */\n    getRecordLookup: function (windowNo, tabNo, keyCol, key) {\n      var lookup = this.s_windowRecordLookup[windowNo + \':\' + tabNo];\n      if (lookup && keyCol in lookup) return lookup[keyCol][key];\n      return null;\n    }\n  };\n\n  ////2. Amount Division Lookup\n  function MAmtDivLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.AmtDimension);\n    this.lookup = {};\n  }\n  ;\n  VIS.Utility.inheritPrototype(MAmtDivLookup, Lookup); //Inherit\n\n  MAmtDivLookup.prototype.cacheLookup = null;\n  MAmtDivLookup.prototype.getDisplay = function (value) {\n    if (value == null) return "";\n    var pp = this.get(value);\n    if (pp == null) return "<" + value.toString() + ">";\n    return pp;\n  };\n  /**\r\n   *\tGet Object of Key Value\r\n   *  @param value value\r\n   *  @return Object or null\r\n   */\n  MAmtDivLookup.prototype.get = function (value) {\n    if (value == null) return null;\n    var C_DimAmt_ID = 0;\n    if (value instanceof Number) C_DimAmt_ID = value;else {\n      try {\n        C_DimAmt_ID = parseInt(value.toString());\n      } catch (e) {\n        this.log.log(Level.SEVERE, "Value=" + value, e);\n      }\n    }\n    if (C_DimAmt_ID in this.lookup) {\n      return this.lookup[C_DimAmt_ID];\n    }\n    if (C_DimAmt_ID == 0) return this.NO_INSTANCE;\n    var description = null;\n    try {\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@C_DimAmt_ID", C_DimAmt_ID);\n      var dr = executeReader("VIS_99", param);\n      if (dr.read()) {\n        description = dr.getString(0); //\tDescription\n        if (description == null || description.length == 0) {\n          if (VIS.Logging.VLogMgt.getIsLevelFine()) description = "{" + C_DimAmt_ID + "}";else description = "";\n        }\n      }\n      dr.dispose();\n      dr = null;\n      this.lookup[C_DimAmt_ID] = description;\n    } catch (e) {\n      this.log.log(Level.SEVERE, "get", e);\n    }\n    if (description == null) return null;\n    //return { "Key": C_DimAmt_ID, "Name": description };\n    return description;\n  }; //\tget\n  MAmtDivLookup.prototype.getColumnName = function () {\n    return "C_DimAmt_ID";\n  };\n\n  /**\r\n   *\tGet Object of Key Value\r\n   *  @param value value\r\n   *  @return Object or null\r\n   */\n  MAmtDivLookup.prototype.refreshAmountDivision = function (value) {\n    if (value == null) return null;\n    var C_DimAmt_ID = 0;\n    if (value instanceof Number) C_DimAmt_ID = value;else {\n      try {\n        C_DimAmt_ID = parseInt(value.toString());\n      } catch (e) {\n        this.log.log(Level.SEVERE, "Value=" + value, e);\n      }\n    }\n    if (C_DimAmt_ID == 0) return this.NO_INSTANCE;\n    var description = null;\n    try {\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@C_DimAmt_ID", C_DimAmt_ID);\n      var dr = executeReader("VIS_99", param);\n      if (dr.read()) {\n        description = dr.getString(0); //\tDescription\n        if (description == null || description.length == 0) {\n          if (VIS.Logging.VLogMgt.getIsLevelFine()) description = "{" + C_DimAmt_ID + "}";else description = "";\n        }\n      }\n      dr.dispose();\n      dr = null;\n      this.lookup[C_DimAmt_ID] = description;\n    } catch (e) {\n      this.log.log(Level.SEVERE, "get", e);\n    }\n    if (description == null) return null;\n    //return { "Key": C_DimAmt_ID, "Name": description };\n    return description;\n  };\n\n  //MAmtDivLookup.prototype.load = function () {\n\n  //    var self = this;\n  //    self.lstLatLng = {};\n\n  //    if (MAmtDivLookup.prototype.cacheLookup != null) {\n  //        self.lookup = MAmtDivLookup.prototype.cacheLookup.LocLookup;\n  //        self.lstLatLng = MAmtDivLookup.prototype.cacheLookup.LocLatLng;\n  //        self = null;\n  //        return;\n  //    }\n\n  //    VIS.3.getJSONData(VIS.Application.contextUrl + "Location" + "/GetLocations", "", function (data) {\n\n  //        if (!MAmtDivLookup.prototype.cacheLookup) {\n  //            MAmtDivLookup.prototype.cacheLookup = data;\n  //        }\n\n  //        self.lookup = data.LocLookup;\n  //        self.lstLatLng = data.LocLatLng;\n  //        self = null;\n  //    });\n  //};\n\n  //MAmtDivLookup.prototype.getLatLng = function (key) {\n  //    if (key == null || key.toString().len < 1)\n  //        return null;\n  //    if (key in this.lstLatLng) {\n  //        return this.lstLatLng[key];\n  //    }\n  //    var data = this.getLocation(key, true);\n  //    return data;\n  //};\n\n  MAmtDivLookup.prototype.dispose = function () {\n    this.lstLatLng = null;\n    this.$super.dispose.call(this);\n    this.lookup = null;\n  };\n  //   END\n\n  ////3. Product Container Lookup\n  function MProductContainerLookup(ctx, windowNo) {\n    Lookup.call(this, null, null, ctx, windowNo, VIS.DisplayType.ProductContainer);\n    this.log = VIS.Logging.VLogger.getVLogger("MProductContainerLookup");\n    this.lookup = {};\n  }\n  ;\n  VIS.Utility.inheritPrototype(MProductContainerLookup, Lookup); //Inherit\n\n  MProductContainerLookup.prototype.cacheLookup = null;\n  MProductContainerLookup.prototype.getDisplay = function (value) {\n    if (value == null) return "";\n    var pp = this.get(value);\n    if (pp == null) return "<" + value.toString() + ">";\n    return pp.Name;\n  };\n  /**\r\n   *\tGet Object of Key Value\r\n   *  @param value value\r\n   *  @return Object or null\r\n   */\n  MProductContainerLookup.prototype.get = function (value) {\n    if (value == null) return null;\n    var M_ProductContainer_ID = 0;\n    if (value instanceof Number) M_ProductContainer_ID = value;else {\n      try {\n        M_ProductContainer_ID = parseInt(value.toString());\n      } catch (e) {\n        this.log.log(Level.SEVERE, "Value=" + value, e);\n      }\n    }\n    if (M_ProductContainer_ID in this.lookup) {\n      return this.lookup[M_ProductContainer_ID];\n    }\n    if (M_ProductContainer_ID == 0) return this.NO_INSTANCE;\n    var description = null;\n    //try {\n    //    var param = [];\n    //    param[0] = new VIS.DB.SqlParam("@M_ProductContainer_ID", M_ProductContainer_ID);\n\n    //    var dr = executeReader("VIS_99", param);\n    //    if (dr.read()) {\n    //        description = dr.getString(0);\t\t\t//\tDescription\n    //        if (description == null || description.length == 0) {\n    //            if (VIS.Logging.VLogMgt.getIsLevelFine())\n    //                description = "{" + M_ProductContainer_ID + "}";\n    //            else\n    //                description = "";\n    //        }\n    //    }\n    //    dr.dispose();\n    //    dr = null;\n    //}\n    //catch (e) {\n    //    this.log.log(Level.SEVERE, "get", e);\n    //}\n\n    $.ajax({\n      url: baseUrl + "ProductContainer/GetProductContainerInfo",\n      data: {\n        ID: M_ProductContainer_ID\n      },\n      async: false,\n      success: function (result) {\n        if (!result) {\n          if (VIS.Logging.VLogMgt.getIsLevelFine()) description = "{" + M_ProductContainer_ID + "}";else description = "";\n        } else {\n          description = result;\n        }\n      },\n      error: function (err) {\n        this.log.log(Level.SEVERE, "get", err);\n      }\n    });\n    this.lookup[M_ProductContainer_ID] = description;\n    if (description == null) return null;\n    return {\n      "Key": M_ProductContainer_ID,\n      "Name": description\n    };\n  }; //\tget\n  MProductContainerLookup.prototype.getColumnName = function () {\n    return "M_ProductContainer_ID";\n  };\n  MProductContainerLookup.prototype.dispose = function () {\n    this.lstLatLng = null;\n    this.$super.dispose.call(this);\n    this.lookup = null;\n  };\n  //   END\n\n  /* Namespace */\n  VIS.MLookup = MLookup;\n  VIS.MLocationLookup = MLocationLookup;\n  VIS.MAccountLookup = MAccountLookup;\n  VIS.MPAttributeLookup = MPAttributeLookup;\n  VIS.MGAttributeLookup = MGAttributeLookup;\n  VIS.MLocatorLookup = MLocatorLookup;\n  VIS.MAmtDivLookup = MAmtDivLookup;\n  VIS.MProductContainerLookup = MProductContainerLookup;\n\n  /* END */\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/lookup.js?')},"./Areas/VIS/Scripts/app/masterdataversion.js":()=>{eval('/********************************************************\r\n * Module Name    :     Application\r\n * Purpose        :     Dialog to maintain versions in system\r\n * Author         :     Lokesh Chauhan\r\n * Date           :     14-Oct-2019\r\n  ******************************************************/\n\n;\n(function (VIS, $) {\n  function MasterDataVersion(baseTblName, gridFields, Record_ID, whereClause, mtnTblVer, newRecord, callback) {\n    this._tblName = baseTblName;\n    this.rec_ID = Record_ID;\n    this.sqlWhere = whereClause;\n    this.gFields = gridFields;\n    this._callbackClose = callback;\n    this._newRec = newRecord;\n    this.gridCols = new Array();\n    this.htmlUI = new Array();\n    this.busyInd = null;\n    this.deletable = false;\n    this.maintTblVer = mtnTblVer;\n    this.defaultColsIniPos = [Version = VIS.Msg.getMsg("VIS_RecordVersion"), ValidFrom = VIS.Msg.translate(VIS.Env.getCtx(), "VersionValidFrom"), Approved = VIS.Msg.getMsg("VIS_IsVersionApproved")];\n    this.defaultColEleIniPos = [Version = "RECORDVERSION", ValidFrom = "VERSIONVALIDFROM", Approved = "ISVERSIONAPPROVED"];\n    this.defaultCols = [VersionLog = VIS.Msg.translate(VIS.Env.getCtx(), "VersionLog"), Delete = VIS.Msg.getMsg("Action")];\n    this.defaultColElements = [VersionLog = "VERSIONLOG", Delete = "ACTION"];\n    this.exclCols = [Tenant = "AD_Client_ID", Created = "Created", CreatedBy = "CreatedBy", Updated = "Updated", UpdatedBy = "UpdatedBy", Export_ID = "Export_ID"];\n  }\n  ;\n  MasterDataVersion.prototype.show = function () {\n    var ismvRunning = false;\n    var chkImmSave = null;\n    var secVerValFrom = null;\n    var dtValFrom = null;\n    var self = this;\n    var paramString = this._tblName + "," + true + "," + this.sqlWhere;\n\n    // get data for current table for existing versions saved in Version table\n    var dr = VIS.dataContext.getJSONRecord("JsonData/GetIDTextData", paramString);\n\n    // check if records can be deleted from Version table\n    var del = VIS.dataContext.getJSONRecord("Common/CheckTableDeletable", this._tblName + "_Ver");\n    var diaWidth = "40%";\n    // if Records are deleteable from Version Table then set width and Deleteable property to true\n    // based on which Delete Icon will be displayed in the popup\n    if (del == "Y") {\n      this.deletable = true;\n      // diaWidth = "40%";\n    }\n    var gpDia = new VIS.ChildDialog();\n    var masVerUI = this.getMasterVersionUI(dr);\n    gpDia.setContent(masVerUI);\n    if (this.gridCols.length > 8) diaWidth = "70%";\n    gpDia.setWidth(diaWidth);\n    // Set title of Master Version Dialog\n    gpDia.setTitle(VIS.Msg.getMsg("MasterDataVersioning"));\n    gpDia.setModal(true);\n\n    //Disposing Everything on Close\n    gpDia.onClose = function () {\n      // turn off events and set controls to null on close dialog\n      if (chkImmSave) {\n        chkImmSave.off("click");\n        chkImmSave = null;\n      }\n      if (dtValFrom) dtValFrom = null;\n      if (secVerValFrom) secVerValFrom = null;\n      if (this.deletable) masVerUI.find(".vis-mas-ver-btnDel").off("click");\n      gpDia = null;\n    };\n    gpDia.onOkClick = function () {\n      // check if any button pressed then return \n      if (ismvRunning) return;\n      self.setBusy(true);\n      setTimeout(function () {\n        // callback function\n        if (self._callbackClose) {\n          ismvRunning = true;\n          var dtValidFromDate = dtValFrom.val();\n          if (!dtValidFromDate || dtValidFromDate == "") dtValidFromDate = new Date();\n          // Cases if save immediate is false\n          if (!chkImmSave.prop("checked") && new Date(dtValFrom.val()) > new Date()) {\n            // get rows from Dialog that are already saved\n            var rows = masVerUI.find(".vis-mas-ver-recRow");\n            var recordExist = false;\n            var verRecID = 0;\n            // if any records found then check \n            // whether there are any records saved already for the\n            // date which user selected in Valid From Field\n            if (rows.length > 0) {\n              for (var i = 0; i < rows.length; i++) {\n                var rowData = $(rows[i]);\n                var valFromDt = rowData.find(\'.vis-mas-ver-valFromDate\');\n                var dateSaved = new Date($(valFromDt).attr(\'valdt\')).getTime();\n                var dateSelected = new Date(new Date(dtValFrom.val()).setHours(0, 0, 0, 0)).getTime();\n                // if date matched then break\n                if (dateSaved == dateSelected) {\n                  recordExist = true;\n                  verRecID = rowData.attr("recid");\n                  break;\n                }\n              }\n            }\n            // if record already exist for the date that user selected \n            // then return with message, either overwrite or cancel\n            if (recordExist) {\n              VIS.ADialog.confirm("VersionExistOverwrite", true, "", "Confirm", function (result) {\n                // if user want to overwrite then versiont record will be overwritten for that date in version table\n                if (result) {\n                  // call callback function\n                  self._callbackClose(chkImmSave.prop("checked"), dtValidFromDate, verRecID);\n                  gpDia.close();\n                  ismvRunning = false;\n                } else ismvRunning = false;\n              });\n              return false;\n            } else {\n              self._callbackClose(chkImmSave.prop("checked"), dtValidFromDate, 0);\n              ismvRunning = false;\n              gpDia.close();\n            }\n          } else {\n            // in case of save immediate call the callback function\n            self._callbackClose(chkImmSave.prop("checked"), dtValidFromDate, 0);\n            ismvRunning = false;\n            gpDia.close();\n          }\n        } else gpDia.close();\n      }, 10);\n      return false;\n    };\n    gpDia.onCancelClick = function () {\n      gpDia.close();\n    };\n    gpDia.show();\n\n    // if records are deleteable, then bind event\n    if (this.deletable) {\n      masVerUI.find(".vis-mas-ver-btnDel").on("click", function (e) {\n        // on delete button click, find row and delete\n        var recRow = $(e.target).closest(\'.vis-mas-ver-recRow\');\n        if (recRow.length > 0) {\n          var verRecID = recRow.attr(\'recid\');\n          if (verRecID > 0) {\n            var deleting = false;\n            if (deleting) return;\n            // ask for confirmation of record deletion\n            VIS.ADialog.confirm("DeleteConfirm", true, "", "Confirm", function (result) {\n              deleting = true;\n              // if user confirms then delete\n              if (result) {\n                var parameters = self._tblName + "_Ver" + "," + verRecID;\n                var retRes = VIS.dataContext.getJSONRecord("Common/DeleteRecord", parameters);\n                if (retRes && retRes.Success && retRes.Success == \'Y\') {\n                  // if record is successfully deleted then remove record from dialog\n                  recRow.remove();\n                  recRow = masVerUI.find(\'.vis-mas-ver-recRow\');\n                  if (recRow.length <= 0) {\n                    masVerUI.find(\'.vis-mas-ver-gridData\').append(self.getNoRecDiv());\n                  }\n                } else {\n                  if (retRes.Success && retRes.Msg != "") {\n                    VIS.ADialog.error(retRes.Msg);\n                  } else {\n                    VIS.ADialog.error(VIS.Msg.getMsg("ErrorDeletingRecord"));\n                  }\n                }\n                deleting = false;\n              } else deleting = false;\n            });\n          }\n        }\n      });\n    }\n    chkImmSave = masVerUI.find(".vis-mas-ver-chkImmSave");\n    secVerValFrom = masVerUI.find(".vis-mas-ver-secValFrom");\n    dtValFrom = masVerUI.find(".vis-mas-ver-dtVerVal");\n    // click event for Save Immediate checkbox\n    chkImmSave.on("click", function () {\n      secVerValFrom.toggle();\n      // if Save Immediate checkbox is false then display Valid From Field else hide in case of true\n      if (!chkImmSave.prop("checked")) {\n        if (self._newRec) {\n          dtValFrom.val(self.getDateString(true));\n        } else dtValFrom.val(self.getDateString());\n      }\n    });\n\n    // change event for Valid From field\n    dtValFrom.on("change", function () {\n      // selected date from control\n      var valFromDate = new Date(dtValFrom.val()).setHours(0, 0, 0, 0);\n      // current date from system\n      var curDate = new Date().setHours(0, 0, 0, 0);\n      // check if selected date is less than or equal to system date then set tomorrow\'s date in \n      // valid from date control\n      if (valFromDate == curDate) {\n        // add message here for info to not allow to set previous date\n        dtValFrom.val(self.getDateString());\n      }\n\n      // check added in case for version in case of new record\n      if (self._newRec && valFromDate >= curDate) {\n        dtValFrom.val(self.getDateString(true));\n      }\n    });\n    this.busyInd = masVerUI.parent().find(\'.vis-busyindicatorouterwrap\');\n  };\n  MasterDataVersion.prototype.getMasterVersionUI = function (dr) {\n    var mvUI = $(\'<div class= "vis-mas-ver-outerwrap">\' + \'<div class="vis-mas-ver-text">\' + VIS.Msg.getMsg("VersioningColsFoundValidFrom") + \'</div>\' + \'<div style="display: flex;">\' + \'<div class="vis-mas-ver-checkwrap">\' + \'<input type="checkbox" class="vis-mas-ver-ImmSav vis-mas-ver-chkImmSave" checked="checked">\' + \'<label>\' + VIS.Msg.getMsg("SaveImmediate") + \'</label>\' + \'</div>\' + \'<div class="vis-mas-ver-fieldwrap vis-mas-ver-checkwrap vis-mas-ver-secValFrom" style="display: none;">\' + \'<label>\' + VIS.Msg.getMsg("VersionValidFrom") + \'</label>\' + \'<input type="date" class="vis-mas-ver-ImmSav vis-mas-ver-dtVerVal">\' + \'</div>\' + \'</div>\' + this.getGrid(dr) + \'</div>\' + \'<div class="vis-busyindicatorouterwrap" style="visibility: hidden;"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n    return mvUI;\n  };\n  MasterDataVersion.prototype.getGrid = function (dr) {\n    // create UI for Master Data Version Popup\n    this.htmlUI.push(\'<div class= "vis-mas-ver-gridSection" style="min-height: 300px;">\');\n    this.htmlUI.push(\'<table>\');\n    var src = VIS.Application.contextUrl + "Areas/VIS/Images/base/delete10.png";\n    this.htmlUI.push(\'<thead class="vis-mas-ver-gridData">\');\n    this.htmlUI.push(this.createHeaders());\n    this.htmlUI.push(\'</thead>\');\n    if (dr && dr.Table) {\n      if (dr.Table.length > 0) {\n        this.htmlUI.push(\'<tbody>\');\n        for (var r = 0; r < dr.Table.length; r++) {\n          var recRowOld = dr.Table[r];\n          //recRow = Object.keys(recRow).reduce((c, k) => (c[k.toUpperCase()] = recRow[k], c), {});\n\n          var keys = Object.keys(recRowOld);\n          var recRow = {};\n          for (var j = 0; j < keys.length; j++) {\n            recRow[keys[j].toUpperCase()] = recRowOld[keys[j]];\n          }\n          var bckColor = "";\n          // for alternate row colors\n          if (r % 2 == 0) bckColor = "style=\'background-color: #ebf1f3;\'";\n          //if (recRow[this._tblName.toUpper() + "_ID"] != this.rec_ID)\n          //    continue;\n\n          this.htmlUI.push(\'<tr recid="\' + recRow[this._tblName.toUpper() + "_VER_ID"] + \'"  \' + bckColor + \' class="vis-mas-ver-recRow">\');\n          for (var i = 0; i < this.gridCols.length; i++) {\n            var colName = this.gridCols[i];\n            var gf = $.grep(this.gFields, function (e) {\n              return e.vo.ColumnName.toUpper() == colName;\n            })[0];\n            // by default display text for columns\n            var displayText = "---";\n            // check if there is some text in columnname_TXT column then display that column value\n            if (recRow[colName + "_TXT"]) {\n              this.htmlUI.push(\'<td>\' + VIS.Utility.encodeText(recRow[colName + "_TXT"]) + \'</td>\');\n            }\n            // display delete button icon for row if RecordsDeleteable is set on Version table in AD_Table\n            else if (colName == "ACTION") {\n              if (this.deletable) {\n                this.htmlUI.push("<td style=\'text-align: center;\'><button class=\'vis-mas-ver-btnDel\'><img src=\'" + src + "\' /></button></td>");\n              }\n            }\n            // check if there is some text in columnname_LOC or columnname_LTR or columnname_ASI or columnname_ACT or columnname_CTR column then display that column value\n            else if (recRow[colName + "_LOC"] || recRow[colName + "_LTR"] || recRow[colName + "_ASI"] || recRow[colName + "_ACT"] || recRow[colName + "_CTR"]) {\n              if (gf) {\n                displayText = gf.getLookup().getDisplay(gf.value);\n              }\n              this.htmlUI.push(\'<td>\' + VIS.Utility.encodeText(displayText) + \'</td>\');\n            } else if (recRow[colName]) {\n              // if (colName == \'ISVERSIONAPPROVED\') {\n              // if columnname is "IsVersionApproved" then display control in center, handled separately\n              if (colName == \'ISVERSIONAPPROVED\' || gf && gf.vo && gf.vo.displayType && gf.vo.displayType == 20) {\n                if (recRow[colName] == \'Y\') this.htmlUI.push(\'<td style="text-align: center;"><input type="checkbox" checked="checked" disabled></td>\');else this.htmlUI.push(\'<td style="text-align: center;"><input type="checkbox" disabled></td>\');\n              }\n              // for date type to display "Valid From"\n              else if (colName == \'VERSIONVALIDFROM\') {\n                var verValFrom = Globalize.format(new Date(recRow[colName]), \'d\'); // new Date(recRow[colName]).toDateString();\n                this.htmlUI.push(\'<td class="vis-mas-ver-valFromDate" valdt="\' + new Date(recRow[colName]) + \'">\' + verValFrom + \'</td>\');\n              }\n              // for date type controls\n              else if (gf && gf.vo && gf.vo.displayType && gf.vo.displayType == 15) {\n                var dateCol = Globalize.format(new Date(recRow[colName]), \'d\');\n                this.htmlUI.push(\'<td dtDate="\' + new Date(recRow[colName]) + \'">\' + dateCol + \'</td>\');\n              }\n              // for date + time type controls\n              else if (gf && gf.vo && gf.vo.displayType && gf.vo.displayType == 16) {\n                var dateCol = Globalize.format(new Date(recRow[colName] + "Z"), \'f\');\n                this.htmlUI.push(\'<td dtDate="\' + new Date(recRow[colName]) + \'">\' + dateCol + \'</td>\');\n              }\n              // for time type controls\n              else if (gf && gf.vo && gf.vo.displayType && gf.vo.displayType == 24) {\n                var dateCol = Globalize.format(new Date(recRow[colName] + "Z"), \'t\');\n                this.htmlUI.push(\'<td dtDate="\' + new Date(recRow[colName]) + \'">\' + dateCol + \'</td>\');\n              } else if (colName == \'RECORDVERSION\') {\n                this.htmlUI.push(\'<td style="text-align: center">\' + VIS.Utility.encodeText(recRow[colName]) + \'</td>\');\n              } else this.htmlUI.push(\'<td>\' + VIS.Utility.encodeText(recRow[colName]) + \'</td>\');\n            } else {\n              this.htmlUI.push(\'<td> --- </td>\');\n            }\n          }\n          this.htmlUI.push(\'</tr>\');\n        }\n        this.htmlUI.push(\'</tbody>\');\n      } else this.htmlUI.push(this.getNoRecDiv());\n    } else {\n      this.htmlUI.push(this.getNoRecDiv());\n    }\n    this.htmlUI.push(\'</table>\');\n    this.htmlUI.push(\'</div>\');\n    return this.htmlUI.join(\' \');\n  };\n  MasterDataVersion.prototype.createHeaders = function () {\n    // create headers here for the popup for saved versions\n    var hdrUI = new Array();\n    hdrUI.push(\'<tr style="border-bottom: 2px #b5b3b3 solid;">\');\n    if (this.gFields && this.gFields.length > 0) {\n      this.createVerColsHdrs(hdrUI, this.defaultColsIniPos, this.defaultColEleIniPos);\n      for (var i = 0; i < this.gFields.length; i++) {\n        var field = this.gFields[i];\n        if ((field.vo.IsMaintainVersions || this.maintTblVer) && this.exclCols.indexOf(field.vo.ColumnName) < 0) {\n          this.gridCols.push(field.vo.ColumnName.toUpper());\n          if (field.vo.displayType == 20) hdrUI.push(\'<th style="text-align: center;">\' + VIS.Utility.encodeText(field.vo.Header) + \'</th>\');else hdrUI.push(\'<th>\' + VIS.Utility.encodeText(field.vo.Header) + \'</th>\');\n        }\n      }\n      this.createVerColsHdrs(hdrUI, this.defaultCols, this.defaultColElements);\n\n      //for (var v = 0; v < this.defaultCols.length; v++) {\n      //    this.gridCols.push(this.defaultColElements[v]);\n\n      //    // column header for Action (delete), based on setting on AD_Table for Version table\n      //    if (this.defaultColElements[v] == "ACTION") {\n      //        if (this.deletable) {\n      //            hdrUI.push(\'<th style="text-align: center;">\' + VIS.Utility.encodeText(this.defaultCols[v]) + \'</th>\');\n      //        }\n      //    }\n      //    else if (this.defaultColElements[v] == "ISVERSIONAPPROVED") {\n      //        hdrUI.push(\'<th style="text-align: center;">\' + VIS.Utility.encodeText(this.defaultCols[v]) + \'</th>\');\n      //    }\n      //    else\n      //        hdrUI.push(\'<th>\' + VIS.Utility.encodeText(this.defaultCols[v]) + \'</th>\');\n      //}\n    }\n    hdrUI.push(\'</tr>\');\n    return hdrUI.join(\' \');\n  };\n  MasterDataVersion.prototype.createVerColsHdrs = function (hUI, defCols, defColEle) {\n    for (var v = 0; v < defCols.length; v++) {\n      this.gridCols.push(defColEle[v]);\n\n      // column header for Action (delete), based on setting on AD_Table for Version table\n      if (defColEle[v] == "ACTION") {\n        if (this.deletable) {\n          hUI.push(\'<th style="text-align: center;">\' + VIS.Utility.encodeText(defCols[v]) + \'</th>\');\n        }\n      } else if (defColEle[v] == "ISVERSIONAPPROVED" || defColEle[v] == "RECORDVERSION") {\n        hUI.push(\'<th style="text-align: center;">\' + VIS.Utility.encodeText(defCols[v]) + \'</th>\');\n      } else hUI.push(\'<th>\' + VIS.Utility.encodeText(defCols[v]) + \'</th>\');\n    }\n  };\n  MasterDataVersion.prototype.getDateString = function (previous) {\n    var dateVal = new Date();\n    if (previous) dateVal.setDate(dateVal.getDate() - 1);else dateVal.setDate(dateVal.getDate() + 1);\n    var year = dateVal.getFullYear();\n    var month = dateVal.getMonth() + 1;\n    if (month < 10) month = "0" + month;\n    var date = dateVal.getDate();\n    if (date < 10) date = "0" + date;\n    return year + "-" + month + "-" + date;\n  };\n  MasterDataVersion.prototype.getNoRecDiv = function () {\n    return \'<div class="vis-mas-ver-norecord">\' + VIS.Utility.encodeText(VIS.Msg.getMsg("NoRecords")) + \'</div>\';\n  };\n  MasterDataVersion.prototype.setBusy = function (isbusy) {\n    var bsyDiv = this.busyInd;\n    if (bsyDiv) bsyDiv.css("visibility", isbusy ? \'visible\' : \'hidden\');\n  };\n  VIS.MasterDataVersion = MasterDataVersion;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/masterdataversion.js?')},"./Areas/VIS/Scripts/app/native-extension.js":()=>{eval("/// <reference path=\"native-extension.js\" />\n\n/*******************************************************\r\n//                  STRING                             //\r\n//*****************************************************/\n;\nString.prototype.equals = function (value, ignoreCase) {\n  if (ignoreCase) {\n    return this.toString().toLowerCase() === value.toLowerCase();\n  }\n  return this.toString() === value;\n};\nString.prototype.equalsIgnoreCase = function (value) {\n  return this.toString().toLowerCase() === value.toLowerCase();\n};\nString.prototype.startsWith = function (starts) {\n  if (starts === '') return true;\n  if (this == null || starts == null) return false;\n  starts = String(starts);\n  return this.length >= starts.length && this.slice(0, starts.length) === starts;\n};\nString.prototype.endsWith = function (ends) {\n  if (ends === '') return true;\n  if (this == null || ends == null) return false;\n  ends = String(ends);\n  return this.length >= ends.length && this.slice(this.length - ends.length) === ends;\n};\nString.prototype.contains = function (val) {\n  return this.indexOf(val) > -1;\n};\nString.prototype.toUpper = function () {\n  return this.toUpperCase();\n};\nString.prototype.toLower = function () {\n  return this.toLowerCase();\n};\nString.prototype.compareTo = function (s) {\n  var len1 = this.length;\n  var len2 = s.length;\n  var n = len1 < len2 ? len1 : len2;\n  for (i = 0; i < n; i++) {\n    var a = this.charCodeAt(i);\n    var b = s.charCodeAt(i);\n    if (a != b) {\n      if (a > b) {\n        return 1;\n      } else if (a < b) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n  }\n  var r = len1 - len2;\n  if (r > 0) {\n    return 1;\n  } else if (r < 0) {\n    return -1;\n  } else return 0;\n};\nString.prototype.replaceAll = function (find, replace) {\n  var str = this;\n  return str.replace(new RegExp(find, 'g'), replace);\n};\n\n/*******************************************************\r\n//                 NUMBER                             //11\r\n//*****************************************************/\n\nNumber.prototype.compareTo = function (n) {\n  var r = this - n;\n  if (r > 0) {\n    return 1;\n  } else if (r < 0) {\n    return -1;\n  } else return 0;\n};\n\n/*******************************************************\r\n//                  Array                             //\r\n//*****************************************************/\n\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (needle) {\n    for (var i = 0; i < this.length; i++) {\n      if (this[i] === needle) {\n        return i;\n      }\n    }\n    return -1;\n  };\n}\n\n//Array.prototype.contains = function (obj) {\n//    return this.indexOf(obj) > -1;\n//}\n\n//Array.prototype.clear = function () {\n//    this.length = 0;\n//};\n\n/*******************************************************\r\n//              STRINGBUILDER                         //\r\n//*****************************************************/\nStringBuilder = function (init) {\n  if (init) this.str = init;else this.str = \"\";\n};\nStringBuilder.prototype.append = function (value) {\n  this.str += value;\n  return this;\n};\nStringBuilder.prototype.toString = function () {\n  //var value = this.str;\n  //this.str.length = 0;\n  //this.str = \"\";\n  return this.str;\n};\nStringBuilder.prototype.endsWith = function (end) {\n  return this.str.endsWith(end);\n};\nStringBuilder.prototype.replace = function (find, replace) {\n  var str = this.str;\n  str = str.replace(new RegExp(find, 'g'), replace);\n  return str;\n};\nStringBuilder.prototype.indexOf = function (val) {\n  return this.str.indexOf(val);\n};\nStringBuilder.prototype.length = function () {\n  return this.str.length;\n};\nStringBuilder.prototype.insert = function (index, string) {\n  if (index > 0) this.str = this.str.substring(0, index) + string + this.str.substring(index, this.str.length);else this.str = string + this.str;\n  return this.str;\n};\nStringBuilder.prototype.clear = function () {\n  this.str.length = 0;\n  this.str = \"\";\n  return this;\n};\n\n/*******************************************************\r\n//                    Date                         //\r\n//*****************************************************/\nDate.prototype.toUniversalTime = function () {\n  return new Date(this.getTime());\n};\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/native-extension.js?")},"./Areas/VIS/Scripts/app/processframe.js":()=>{eval(";\n(function (VIS, $) {\n  /**\r\n   *\tDialog to Start process.\r\n   *\tDisplays information about the process\r\n   *\t\tand lets the user decide to start it\r\n   *  \tand displays results (optionally print them).\r\n   *  Calls ProcessCtl to execute.\r\n   *\r\n   */\n  var baseUrl = VIS.Application.contextUrl;\n  var nonQueryUrl = baseUrl + \"JsonData/ExecuteNonQuer\";\n  var executeQuery = function (sqls, params, callback) {\n    var async = callback ? true : false;\n    var ret = null;\n    var dataIn = {\n      sql: sqls.join(\"/\"),\n      param: params\n    };\n    $.ajax({\n      url: nonQueryUrl + 'yWithCode',\n      type: \"POST\",\n      datatype: \"json\",\n      contentType: \"application/json; charset=utf-8\",\n      async: async,\n      data: JSON.stringify(dataIn)\n    }).done(function (json) {\n      ret = json;\n      if (callback) {\n        callback(json);\n      }\n    });\n    return ret;\n  };\n  function AProcess(AD_Process_ID, height, splitUI, extrnalForm) {\n    var self = null;\n    this.parent;\n    this.mPanel;\n    this.ctx = VIS.Env.getCtx();\n    this.isLocked = false;\n    this.log = VIS.Logging.VLogger.getVLogger(\"VIS.AProcess\");\n    this.isComplete = false;\n    this.jpObj = null; //Jsong Process Info Object\n    this.splitUI = splitUI;\n    this.extrnalForm = extrnalForm;\n    this.partitionContainer = null;\n    this.parameterContainer = null;\n    this.reportContainer = null;\n    this.reportToolbar = null;\n    this.isReport = false;\n    this.calculateWidth = true;\n    this.hideclose = false;\n    this.showParameterClose = true;\n    this.cssForAll = null;\n    this.visRepformatIcons = null;\n    this.visSaveCsvIcons = null;\n    this.visSavePdfIcons = null;\n    this.visArchiveIcons = null;\n    this.visRequeryIcons = null;\n    this.visCustomizeIcons = null;\n    this.visPrintIcons = null;\n    this.toolbarColor = null;\n    var $divOuterMain = null;\n    var $imgToggle = $('<i class=\"fa fa-bars vis-apanel-lb-img\" title=\"Actions\"></i>');\n    if (this.splitUI) {\n      this.partitionContainer = $('<div class=\"vis-process-outer-wrap\">');\n      this.parameterContainer = $('<div class=\"vis-process-left-sidebar vis-leftsidebarouterwrap\">');\n      this.reportAreaContainer = $('<div class=\"vis-process-main-wrap\">');\n      this.reportToolbar = $('<div class=\"vis-process-toolbar vis-processtoolpadd\">');\n      this.parameterFixedArea = $('<div class=\"vis-process-parm-top\">');\n      this.parameterContainer.append($('<div class=\"vis-apanel-lb-toggle\"></div>').append($imgToggle)).append(this.parameterFixedArea);\n      $divOuterMain = $('<div class=\"vis-process-outer-main-wrap\">');\n      this.$divDesc = $('<div class=\"vis-process-description\">');\n      this.reportContainer = $('<div class=\"vis-process-result\">');\n      this.reportAreaContainer.append(this.reportToolbar).append(this.$divDesc).append(this.reportContainer);\n      $divOuterMain.append(this.parameterContainer).append(this.reportAreaContainer);\n      this.partitionContainer.append($divOuterMain);\n      this.showParameterClose = false;\n    }\n    self = this; //self pointer\n\n    var $root, $busyDiv, $contentGrid, $table;\n    var $btnOK, $btnClose, $text, $cmbType, $lblRptTypeHeader, $chkIsBG, $lblIsBG, $DivInputWrap;\n    function initilizedComponent() {\n      $root = $(\"<div style='position:relative;width:100%'>\");\n      $busyDiv = $('<div class=\"vis-busyindicatorouterwrap\"><div class=\"vis-busyindicatorinnerwrap\"><i class=\"vis-busyindicatordiv\"></i></div></div>');\n      $table = $(\"<table  class='vis-process-table'>\");\n      $btnOK = $(\"<button class='vis-button-ok' tabindex=0>\").text(VIS.Msg.getMsg(\"OK\"));\n      $btnClose = $(\"<button class='vis-button-close'>\").text(VIS.Msg.getMsg(\"Close\"));\n      $busyDiv.css('top', '0px');\n      $btnOK.hide();\n      $btnClose.hide();\n      $table.height(height);\n      $busyDiv.height(height);\n      $contentGrid = $(\"<div>\");\n      $root.append($table).append($busyDiv); // append to root\n\n      $divOuterMain.append($busyDiv);\n      $cmbType = $('<select style=\"display:none;width:100%\">');\n      $lblIsBG = $('<label  class=\"vis-ec-col-lblchkbox\" style=\"display: none;\"><input type=\"checkbox\">' + VIS.Msg.translate(VIS.context, \"IsBackgroundProcess\") + '</label>');\n      $chkIsBG = $($lblIsBG.find('input')[0]);\n      $text = $(\"<span class='vis-process-description-Span' style='height: 40px;'>\").val(\"asassasasasasaasa\");\n      //ProcessDialog\n      $contentGrid.append($text);\n      $DivInputWrap = $('<div class=\"input-group vis-input-wrap\">');\n      var $DivInputCtrlWrap = $('<div class=\"vis-control-wrap\">');\n      $lblRptTypeHeader = $('<label style=\"display:none;\">' + VIS.Msg.getMsg(\"ChooseReportType\") + '</label>');\n      var divrptType = $('<div style=\"display:inherit\"></div>');\n      self.parameterFixedArea.append($DivInputWrap);\n      $DivInputWrap.append($DivInputCtrlWrap);\n      $DivInputCtrlWrap.append($lblIsBG).append($cmbType).append($lblRptTypeHeader) /*.append($lblIsBG)*/;\n      $contentGrid.append(divrptType);\n      $contentGrid.append($btnOK).append($btnClose);\n      self.$divDesc.append($contentGrid);\n    }\n    this.loadFileTypes = function () {\n      var sel = this;\n      $.ajax({\n        url: VIS.Application.contextUrl + \"JsonData/GetReportFileTypes/\",\n        dataType: \"json\",\n        data: {\n          AD_Process_ID: self.jpObj.AD_Process_ID\n        },\n        success: function (data) {\n          if (data == null) {\n            return;\n          }\n          var d = jQuery.parseJSON(data);\n          if (d.length == 0) {\n            sel.showReportTypes(false);\n            return;\n          }\n          $cmbType.append(\"<option value='S'>\" + VIS.Msg.getMsg(\"Select\") + \"</option>\");\n          for (var i = 0; i < d.length; i++) {\n            var opt = $(\"<option value=\" + d[i].Key + \">\" + d[i].Name + \"</li>\");\n            $cmbType.append(opt);\n            opt = null;\n          }\n        }\n      });\n    };\n    initilizedComponent();\n    this.setSize = function (height, width) {\n      $busyDiv.height(height);\n      if (this.setMsg) {\n        this.setMsg(\"\");\n      }\n    };\n    this.setSize(height);\n    this.isBackground = function () {\n      return $chkIsBG.is(':checked');\n    };\n\n    //privilized function\n    this.getRoot = function () {\n      return $root;\n    };\n    this.getContentGrid = function () {\n      return $contentGrid;\n    };\n    this.setBusy = function (busy, focus) {\n      isLocked = busy;\n      if (busy) {\n        $busyDiv[0].style.visibility = 'visible'; // .show();\n        $busyDiv.css('display', '');\n      } else {\n        $busyDiv[0].style.visibility = 'hidden';\n        $busyDiv.css('display', 'none');\n      }\n    };\n    this.setMsg = function (msg, width) {\n      var $bExist = $text.find('b');\n      if ($text.text().length > 0 && msg && msg.length > 0) {\n        var $resultSpan = $('<span>' + msg + '</span>');\n        this.reportContainer.removeClass('vis-process-result');\n        this.reportContainer.addClass('vis-process-detail-result');\n\n        // Change Lokesh Chauhan\n        this.reportContainer.empty();\n        this.reportContainer.append($resultSpan);\n      } else {\n        $text.append(msg);\n      }\n      var $bMore = '';\n      if (this.isReport && (!$bExist || $bExist.length <= 0)) {\n        $bMore = $('<strong class=\"vis-process-papapa vis-procss-more\"    style=\"position: fixed;right: 29px;top:96px\"><i class=\"glyphicon glyphicon-chevron-down\"></i></strong>');\n        $text.append($bMore);\n      }\n      var $paraG = $($text.find('p')[0]);\n      $bMore = $text.find('.vis-process-papapa');\n      //$paraG.css({ 'float': 'left' });\n      if (this.isReport) {\n        var paraWidth = $paraG.width();\n        if (paraWidth + 45 > $text.width()) {\n          $bMore.show();\n        } else {\n          $bMore.hide();\n        }\n      }\n      if (this.isReport && (!$bExist || $bExist.length <= 0)) {\n        $bMore.on('click', function () {\n          var continerHei = self.reportAreaContainer.height();\n          var $i = $bMore.find('i');\n          if ($i.hasClass('glyphicon-chevron-up')) {\n            $i.addClass('glyphicon-chevron-down');\n            $i.removeClass('glyphicon-chevron-up');\n            $text.css({\n              'height': '40px'\n            });\n          } else {\n            $i.addClass('glyphicon-chevron-up');\n            $i.removeClass('glyphicon-chevron-down');\n            $text.css({\n              'height': ''\n            });\n          }\n          self.reportContainer.height(continerHei - (self.$divDesc.height() + 20));\n        });\n      }\n      ;\n      this.setMsgHeight(this.isReport);\n    };\n    this.setMsgHeight = function (isReport) {\n      if (isReport) {\n        $text.css('height', '40px');\n        $text.css('max-height', '');\n      } else {\n        $text.css('height', '');\n        if (self.parent) {\n          $text.css('max-height', self.parent.getContentGrid().height() - 100 + 'px');\n        }\n      }\n      this.reportContainer.height(this.reportAreaContainer.height() - (this.$divDesc.height() + 20));\n      this.reportAreaContainer.width(this.partitionContainer.width() - this.parameterContainer.width());\n    };\n    this.setParameterHeights = function (height, width) {\n      var selff = this;\n      var $divOuterWrap = $(selff.partitionContainer.find('.vis-process-outer-main-wrap')[0]);\n      if (height) {\n        selff.partitionContainer.height(height);\n        $divOuterWrap.height(height);\n      }\n      var wrapperHeight = $divOuterWrap.height();\n      var paraRoot = $(selff.partitionContainer.find('.vis-pro-para-root')[0]); // $root.closest('.vis-process-outer-main-wrap').height();\n      paraRoot.height(wrapperHeight - 114 + 'px');\n    };\n    this.getParametersContainer = function () {\n      return this.parameterContainer;\n    };\n    this.getReportAreaContainer = function () {\n      return this.reportContainer;\n    };\n    this.getContentTable = function () {\n      return $table;\n    };\n    this.getBusyIndicator = function () {\n      return $busyDiv;\n    };\n    this.getToolbar = function () {\n      return this.reportToolbar;\n    };\n    this.additemtoToolbar = function () {\n      var toolbar = $('<div class=\"vis-ad-w-p-t-close vis-ad-process-close\"><i class=\"vis vis-cross\"></i></div>');\n      self.reportToolbar.append(toolbar).append($('<div class=\"vis-ad-w-p-t-name vis-ad-process-header\"><h5>' + self.parent.getName() + '</h5></div >'));\n      toolbar.on(\"click\", function () {\n        self.parent.dispose();\n      });\n    };\n    this.showCloseIcon = function (show) {\n      if (show) {\n        this.hideclose = false;\n      } else {\n        this.hideclose = true;\n      }\n    };\n    this.showOkIcon = function (val) {\n      if (val) {\n        this.parameterContainer.append($('<div style=\"overflow:auto;padding:0 10px\">').append($btnOK));\n        $btnOK.removeClass('');\n        $btnOK.addClass('vis-process-ok-btn VIS_Pref_btn-2');\n        $btnOK.show();\n        window.setTimeout(function () {\n          $btnOK.focus();\n        }, 100);\n      } else $btnOK.hide();\n    };\n    this.showParameterCloseIcon = function (show) {\n      if (show) {\n        this.showParameterClose = true;\n      } else {\n        this.showParameterClose = false;\n      }\n    };\n    this.getShowParameterCloseIcon = function () {\n      return this.showParameterClose;\n    };\n    this.setCssForToolbarIcons = function (className) {\n      this.cssForAll = className;\n    };\n    this.setReportFormatIcons = function (className) {\n      this.visRepformatIcons = className;\n    };\n    this.setSaveCsvIcons = function (className) {\n      this.visSaveCsvIcons = className;\n    };\n    this.setSavePdfIcons = function (className) {\n      this.visSavePdfIcons = className;\n    };\n    this.setArchiveIcons = function (className) {\n      this.visArchiveIcons = className;\n    };\n    this.setRequeryIcons = function (className) {\n      this.visRequeryIcons = className;\n    };\n    this.setCustomizeIcons = function (className) {\n      this.visCustomizeIcons = className;\n    };\n    this.setPrintIcons = function (className) {\n      this.visPrintIcons = className;\n    };\n    this.setToolbarColor = function (color) {\n      this.toolbarColor = color;\n    };\n    this.getFileType = function () {\n      return $cmbType.val();\n    };\n    this.reportBytes = null;\n    this.reportPath = null;\n    this.showReportTypes = function (value) {\n      if (value) {\n        $cmbType.css('display', 'block');\n        $lblRptTypeHeader.css('display', 'block');\n      } else {\n        $cmbType.css('display', 'none');\n        $lblRptTypeHeader.css('display', 'none');\n      }\n    };\n    this.showBackgroundProcess = function (value) {\n      if (value) {\n        self.parameterFixedArea.addClass('vis-process-pram-checkbox-text');\n        $lblIsBG.css('display', 'flex');\n        //$lblIsBG.css('display', 'block');\n      } else {\n        self.parameterFixedArea.removeClass('vis-process-pram-checkbox-text');\n        $lblIsBG.css('display', 'none');\n        //$lblIsBG.css('display', 'none');\n      }\n    };\n    this.enableBackgroundSetting = function (value) {\n      $chkIsBG.prop('checked');\n      if (!value) {\n        $DivInputWrap.hide();\n      }\n      /*if (value == true) {\r\n          $chkIsBG.prop('disabled', 'disabled');\r\n      }\r\n      else {\r\n          $DivInputWrap.hide();\r\n      }*/\n    };\n\n    // to Archive Document\n    this.archiveDocument = function (panel, pctl) {\n      panel.setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"JsonData/ArchiveDoc/\",\n        dataType: \"json\",\n        type: \"post\",\n        data: {\n          AD_Process_ID: pctl.pi.getAD_Process_ID(),\n          Name: pctl.pi.getTitle(),\n          AD_Table_ID: pctl.pi.getTable_ID(),\n          Record_ID: pctl.pi.getRecord_ID(),\n          C_BPartner_ID: 0,\n          isReport: true,\n          binaryData: self.reportBytes,\n          reportPath: self.reportPath\n        },\n        success: function (data) {\n          VIS.ADialog.info('Archived', true, \"\", \"\");\n          panel.setBusy(false);\n        }\n      });\n    };\n    $btnOK.on(\"click\", function () {\n      //click event\n      self.onclickTrigger(self);\n    });\n    this.onclickTrigger = function (self) {\n      if (self.isComplete) {\n        self.dispose();\n        return;\n      }\n      var pi = null;\n      pi = new VIS.ProcessInfo(self.jpObj.Name, self.jpObj.AD_Process_ID, 0, 0);\n      pi.setAD_User_ID(self.ctx.getAD_User_ID());\n      pi.setAD_Client_ID(self.ctx.getAD_Client_ID());\n      pi.setUseCrystalReportViewer(VIS.context.getIsUseCrystalReportViewer());\n      pi.setIsBackground($chkIsBG.is(':checked'));\n      pi.setIsReport(self.isReport);\n      //Set Action Origin and Origin name\n      pi.setActionOrigin(self.ActionOrigin);\n      var orginName = VIS.context.getWindowContext(self.windowNo, \"WindowName\");\n      if (!orginName) orginName = \"Menu\";\n      pi.setOriginName(orginName);\n      var ctl = new VIS.ProcessCtl(self, pi, null);\n      pi.setFileType($cmbType.val());\n      if (self.windowNo) {\n        ctl.process(self.windowNo); //call dispose intenally\n      } else {\n        ctl.process(VIS.Env.getWindowNo()); //call dispose intenally\n      }\n      ctl = null;\n    };\n    $btnClose.on(\"click\", function () {\n      self.parent.dispose();\n    });\n    $imgToggle.on(\"click\", function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      if (self.parameterContainer.width() > 40) {\n        self.parameterContainer.css('flex-basis', '40px');\n        self.parameterFixedArea.hide();\n        self.getParametersContainer().find('.vis-pro-para-root').hide();\n        self.getParametersContainer().find('.vis-process-ok-btn').hide();\n      } else {\n        self.parameterContainer.css('flex-basis', '280px');\n        self.parameterFixedArea.show();\n        self.getParametersContainer().find('.vis-pro-para-root').show();\n        self.getParametersContainer().find('.vis-process-ok-btn').show();\n      }\n    });\n    this.disposeComponent = function () {\n      if ($btnOK) $btnOK.off(\"click\");\n      if ($btnClose) $btnClose.off(\"click\");\n      if ($contentGrid) $contentGrid.remove();\n      $contentGrid = null;\n      if (this.reportContainer) {\n        this.reportContainer.remove();\n      }\n      if (this.parameterContainer) {\n        this.parameterContainer.remove();\n      }\n      if (this.reportToolbar) {\n        this.reportToolbar.remove();\n      }\n      if (this.partitionContainer) {\n        this.partitionContainer.remove();\n      }\n      if ($busyDiv) $busyDiv.remove();\n      $busyDiv = null;\n      $btnOK = $btnClose = $text = null;\n      this.$parentWindow = null;\n      this.isComplete = false;\n      this.jpObj = null;\n      self = null;\n    };\n  }\n  ;\n  AProcess.prototype.init = function (json, $parent, windowNo) {\n    if (json.Name == null || json.Name == \"\") {\n      VIS.ADialog.info(\"Process Name is empty\");\n      return fasle;\n    }\n    this.ctx.setWindowContext(windowNo, \"IsSOTrx\", json.IsSOTrx);\n    $parent.getContentGrid().append(this.getRoot());\n    this.isReport = json.IsReport;\n    this.setMsg(json.MessageText);\n    this.setBusy(false);\n    this.parent = $parent; // this parameter\n    this.jpObj = json;\n    this.additemtoToolbar();\n    if (json.IsReport) {\n      this.showReportTypes(true);\n      this.loadFileTypes();\n      if (json.IsCrystal && VIS.context.getIsUseCrystalReportViewer()) {\n        this.parameterFixedArea.hide();\n      }\n    } else {\n      this.showBackgroundProcess(true);\n      this.enableBackgroundSetting(json.IsBackground);\n    }\n    this.setMsgHeight(json.IsReport);\n    if (!json.HasPara) {\n      this.showOkIcon(true);\n    }\n    if (this.splitUI && json.HasPara) {\n      this.onclickTrigger(this);\n    }\n    if (this.splitUI) {\n      this.parent.getContentGrid().empty();\n      this.parent.getContentGrid().append(this.partitionContainer);\n    }\n    this.windowNo = windowNo;\n    return true;\n  };\n\n  //Set Action Origin\n  //Set Action Origin\n  AProcess.prototype.setActionOrigin = function (origin) {\n    this.ActionOrigin = origin;\n  };\n  AProcess.prototype.setTitle = function (title) {\n    if (this.parent) this.parent.setTitle(VIS.Utility.Util.cleanMnemonic(title));\n  };\n\n  /**\r\n   *  Lock User Interface\r\n   *  Called from the process before processing\r\n   *  @param pi process info\r\n   */\n\n  AProcess.prototype.lockUI = function (pi) {\n    this.isLocked = true;\n    this.setBusy(true);\n  };\n\n  /**\r\n   *  Unlock User Interface.\r\n   *  Called from the complete when processing is done\r\n   *  @param pi process info\r\n   */\n  AProcess.prototype.unlockUI = function (pi) {\n    if (pi.logs && pi.logs.length > 0) {\n      pi.logs = null;\n    }\n    VIS.ProcessInfoUtil.setLogFromDB(pi);\n    var msg = \"\";\n    if (pi && pi.getSummary()) {\n      msg = \"<p style='float: left;width: 100%;'><font color=\\\"\" + (pi.getIsError() ? \"#FF0000\" : \"#0000FF\") + \"\\\">** \" + pi.getSummary() + \"</font></p>\";\n    } else if (!this.jpObj.IsReport) {\n      msg = \"<p style='float: left;width: 100%;'><font color=\\\"\" + (pi.getIsError() ? \"#FF0000\" : \"#0000FF\") + \"\\\">** \" + \"</font></p>\";\n    }\n    if (pi.customHTML && pi.customHTML != \"\") {\n      msg += pi.customHTML;\n    } else {\n      msg += pi.getLogInfo(true);\n    }\n    this.setMsg(msg);\n    this.setBusy(false);\n    pi.setSummary(\"\");\n    this.isLocked = false;\n  };\n\n  /**\r\n   *  Is the UI locked (Internal method)\r\n   *  @return true, if UI is locked\r\n   */\n  AProcess.prototype.getIsUILocked = function () {\n    return this.isLocked;\n  };\n\n  /**\r\n   *  clean up\r\n   *  @return true, if UI is locked\r\n   */\n  AProcess.prototype.dispose = function () {\n    if (this.disposed) return;\n    this.disposed = true;\n    if (this.mPanel) {\n      this.mPanel.dispose();\n      this.mPanel = null;\n    }\n    if (this.parent) {\n      this.parent.dispose();\n      this.parent = null;\n    }\n    VIS.Env.clearWinContext(this.ctx, this.windowNo);\n    this.disposeComponent();\n  };\n\n  /* Private functions vars*/\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + \"JsonData/JDataSetWithCode\";\n  var nonQueryUrl = baseUrl + \"JsonData/ExecuteNonQuer\";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n  var executeScalar = function (sql, params, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    var value = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      var dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (dataSet.getTable(0).getRows().length > 0) {\n        value = dataSet.getTable(0).getRow(0).getCell(0);\n      } else {\n        value = null;\n      }\n      dataSet.dispose();\n      dataSet = null;\n      if (async) {\n        callback(value);\n      }\n    });\n    return value;\n  };\n  var executeQuery = function (sqls, params, callback) {\n    var async = callback ? true : false;\n    var ret = null;\n    var dataIn = {\n      sql: sqls,\n      param: params\n    };\n\n    //   dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    $.ajax({\n      url: nonQueryUrl + 'iesWithCode',\n      type: \"POST\",\n      datatype: \"json\",\n      contentType: \"application/json; charset=utf-8\",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      ret = json;\n      if (callback) {\n        callback(json);\n      }\n    });\n    return ret;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: \"POST\",\n      datatype: \"json\",\n      contentType: \"application/json; charset=utf-8\",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  AProcess.prototype.createUI = function (panel, pctl, repObj) {\n    var btnClose = null;\n    var actionContainer = null;\n    var ulAction = null;\n    var btnArchive = null;\n    var btnRequery = null;\n    var btnCustomize = null;\n    var btnPrint = null;\n    var btnSaveCsv = null;\n    var btnSavePdf = null;\n    var btnRF = null;\n    var canExport = false;\n    var otherPf = [];\n    var overlay = null;\n    var $cmbPages = null;\n    var $menu = null;\n    var btnSaveCsvAll = null;\n    var btnsavepdfall = null;\n    var self = this;\n    var toolbar = null;\n    function getExeProcessParameter(fileType) {\n      pctl.pi.setFileType(fileType);\n      //Set Action Origin and Origin name\n      pctl.pi.setActionOrigin(self.ActionOrigin);\n      var orginName = VIS.context.getWindowContext(self.windowNo, \"WindowName\");\n      if (!orginName) orginName = \"Menu\";\n      pctl.pi.setOriginName(orginName);\n      var data = {\n        processInfo: pctl.pi.toJson(),\n        parameterList: pctl.paraList\n      };\n      return data;\n    }\n    ;\n    function executeProcess(params, callBack) {\n      VIS.dataContext.executeProcess(params, function (jsonStr) {\n        if (jsonStr.error != null) {\n          pctl.pi.setSummary(jsonStr.error, true);\n          pctl.unlock();\n          pctl = null;\n          return;\n        }\n        var json = JSON.parse(jsonStr.result);\n        if (json.IsError) {\n          pctl.pi.setSummary(json.Message, true);\n          pctl.unlock();\n          pctl = null;\n          return;\n        }\n        //return json;\n        callBack(json);\n      });\n    }\n    ;\n    function manageRepTable(json, panel) {\n      try {\n        if (json.HTML) {\n          panel.getRightInnerDiv().html(json.HTML);\n          var tables = document.getElementsByClassName('vis-reptabledetect');\n          if (tables.length > 0) {\n            var tableWidth = 0;\n            var tmp = 0;\n            for (var i = 0, j = tables.length; i < j; i++) {\n              tmp = $(tables[i]).width();\n              if (tmp > tableWidth) tableWidth = tmp;\n            }\n            panel.getRightDiv().width($(window).width() - 10);\n            panel.getRightDiv().css('min-width', $(window).width() + 'px');\n            panel.getRightInnerDiv().width(tableWidth + 50);\n          }\n          panel.getRightInnerDiv().width(tableWidth);\n        } else if (json.ReportFilePath) {\n          var $object = $(\"<iframe style = 'width:100%;height:99.4%;' pluginspage='http://www.adobe.com/products/acrobat/readstep2.html'>\");\n          $object.attr(\"src\", VIS.Application.contextUrl + json.ReportFilePath);\n          panel.getRightDiv().empty().append($object);\n          self.reportPath = json.ReportFilePath;\n        }\n      } catch (e) {}\n      panel.setBusy(false);\n    }\n    ;\n    function loadReportData() {\n      panel.setBusy(true);\n      window.setTimeout(function () {\n        if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n          loadDynamicReport(pctl.REPORT_TYPE_PDF, pctl.pi.getPageNo());\n        } else {\n          if (pctl.pi.GetAD_ReportView_ID() > 0) {\n            getReportData(pctl.pi.getPageNo(), 0, null);\n          } else if (pctl.pi.getIsJasperReport()) {\n            getJasperReport(pctl.REPORT_TYPE_PDF, pctl.pi.getPageNo());\n          } else if (pctl.pi.getIsReportFormat()) {\n            // pageNo = $cmbPages.val();\n\n            var data = getExecuteReportComposerData(pctl.pi.getAD_Process_ID(), pctl.pi.getTitle(), pctl.pi.getAD_PInstance_ID(), pctl.pi.getTable_ID(), pctl.pi.getRecord_ID(), pctl.pi.getPageNo(), pctl.pi.getPageSize(), false);\n            $.ajax({\n              url: VIS.Application.contextUrl + \"ReportCom/ExecuteReport\",\n              type: \"Post\",\n              data: data,\n              success: function (result) {\n                var data = JSON.parse(result);\n                if (ismobile) {\n                  window.open(VIS.Application.contextUrl + data);\n                } else {\n                  var $object = $(\"<iframe style = 'width:100%;height:99.4%;' pluginspage='http://www.adobe.com/products/acrobat/readstep2.html'>\");\n                  $object.attr(\"src\", VIS.Application.contextUrl + data);\n                  panel.getRightDiv().empty().append($object);\n                }\n                self.reportPath = data;\n                //  window.open(VIS.Application.contextUrl + data);\n                panel.setBusy(false);\n              }\n            });\n          } else {\n            executeProcess(getExeProcessParameter(pctl.REPORT_TYPE_PDF), function (json) {\n              manageRepTable(json, panel);\n            });\n          }\n        }\n      }, 200);\n    }\n    ;\n    function applyIconCss() {\n      if (!self.visRepformatIcons || self.visRepformatIcons.length == 0) {\n        if (self.cssForAll) {\n          self.visRepformatIcons = self.cssForAll + 'vis vis-format';\n        } else {\n          self.visRepformatIcons = 'vis vis-format';\n        }\n      }\n      if (!self.visSaveCsvIcons || self.visSaveCsvIcons.length == 0) {\n        self.visSaveCsvIcons = ' vis vis-save-csv';\n      } else {\n        self.visSaveCsvIcons = self.visSaveCsvIcons + ' vis-report-icon ';\n      }\n      if (!self.visSavePdfIcons || self.visSavePdfIcons.length == 0) {\n        self.visSavePdfIcons = ' vis vis-save-pdf';\n      } else {\n        self.visSavePdfIcons = self.visSavePdfIcons + ' vis-report-icon ';\n      }\n      if (!self.visArchiveIcons || self.visArchiveIcons.length == 0) {\n        self.visArchiveIcons = ' vis vis-archive';\n      } else {\n        self.visArchiveIcons = self.visArchiveIcons + ' vis-report-icon ';\n      }\n      if (!self.visRequeryIcons || self.visRequeryIcons.length == 0) {\n        self.visRequeryIcons = ' vis vis-refresh';\n      } else {\n        self.visRequeryIcons = self.visRequeryIcons + ' vis-report-icon ';\n      }\n      if (!self.visCustomizeIcons || self.visCustomizeIcons.length == 0) {\n        self.visCustomizeIcons = ' vis vis-customize';\n      } else {\n        self.visCustomizeIcons = self.visCustomizeIcons + ' vis-report-icon ';\n      }\n      if (!self.visPrintIcons || self.visPrintIcons.length == 0) {\n        self.visPrintIcons = ' vis vis-print ';\n      } else {\n        self.visPrintIcons = self.visPrintIcons + ' vis-report-icon ';\n      }\n    }\n\n    //function createControls(panel, repObj) {\n    //Set Action Origin and Origin name\n    pctl.pi.setActionOrigin(self.ActionOrigin);\n    var orginName = VIS.context.getWindowContext(self.windowNo, \"WindowName\");\n    if (!orginName) orginName = \"Menu\";\n    pctl.pi.setOriginName(orginName);\n    var AD_Table_ID = pctl.pi.get_AD_PrintFormat_Table_ID();\n    canExport = VIS.MRole.getDefault().getIsCanExport(AD_Table_ID);\n    var checkName = [];\n    var count = -1;\n    otherPf = [];\n    var dr = null;\n    $.ajax({\n      type: 'Get',\n      async: false,\n      url: VIS.Application.contextUrl + \"Form/GetPrintFormatDetails\",\n      data: {\n        AD_Table_ID: AD_Table_ID\n      },\n      success: function (data) {\n        dr = new VIS.DB.DataReader().toJson(data);\n        try {\n          while (dr.read()) {\n            count = parseInt(count) + 1;\n            var name = dr.getString(1);\n            if (checkName.indexOf(name) > -1) {\n              name = name + \"_\" + (parseInt(count) + 1);\n            }\n            var item = {};\n            item.ID = VIS.Utility.Util.getValueOfInt(dr.get(0));\n            item.Name = name;\n            item.IsDefault = dr.getString(3);\n            checkName.push(dr.getString(1));\n            otherPf.push(item);\n          }\n          dr.close();\n        } catch (e) {\n          dr.close();\n        }\n        dr = null;\n      }\n    });\n    applyIconCss();\n    //Create Custom Report ToolBar\n    overlay = $('<div>');\n    $cmbPages = $('<select class=\"vis-selectcsview-page\">');\n    $menu = $(\"<ul class='vis-apanel-rb-ul'>\");\n    if (self.cssForAll) {\n      btnSaveCsvAll = $(\"<li><a  title='\" + VIS.Msg.getMsg(\"SaveAllRecordCsv\") + \"' class='vis vis-csv-all'></a></li>\");\n      btnsavepdfall = $(\"<li><a  title='\" + VIS.Msg.getMsg(\"SaveAllPagePdf\") + \"' class='vis vis-pdf-all'></a></li>\");\n    } else {\n      btnSaveCsvAll = $(\"<li><a  title='\" + VIS.Msg.getMsg(\"SaveAllRecordCsv\") + \"' class='vis vis-csv-all'></a></li>\");\n      btnsavepdfall = $(\"<li><a  title='\" + VIS.Msg.getMsg(\"SaveAllPagePdf\") + \"' class='vis vis-pdf-all'></a></li>\");\n    }\n    // toolbar = $(\"<div class='vis-report-header'>\").append($('<h3 class=\"vis-report-tittle\" style=\"float:left;padding-top: 10px;\">').append(setTitle));\n    toolbar = $(\"<div class='vis-report-header vis-ad-print-process'>\");\n    toolbar.append($('<div class=\"vis-ad-w-p-t-name vis-ad-process-header\"><h5>' + self.parent.getName() + '</h5></div >'));\n\n    //if (self.toolbarColor) {\n    //    toolbar.css('background-color', self.toolbarColor);\n    //}\n\n    // btnClose = $('<a href=\"javascript:void(0)\" class=\"vis-mainMenuIcons vis-icon-menuclose\" style=\"float:right\">');\n    btnClose = $('<div class=\"vis-icon-menuclose\"><i class=\"vis vis-cross\"></i></div >');\n    actionContainer = $('<div class=\"vis-report-top-icons\">');\n    ulAction = $('<ul  class=\"vis-reporticonsulprint\">');\n    btnRF = $(\"<li><a class='\" + self.visRepformatIcons + \"'></a></li>\");\n    $menu.append($('<li data-id=\"-1\">').append(VIS.Msg.getMsg('NewReport')));\n    overlay.append($menu);\n    ulAction.append(btnRF);\n    if (canExport) {\n      btnSaveCsv = $(\"<li><a title='\" + VIS.Msg.getMsg(\"SaveCSVPage\") + \"' class='vis vis-save-csv'></a></li>\");\n      ulAction.append(btnSaveCsv);\n    }\n    if (pctl.pi.getSupportPaging() && canExport) {\n      ulAction.append(btnSaveCsvAll);\n      for (var d = 1; d < pctl.pi.getTotalPages() + 1; d++) {\n        $cmbPages.append($('<option value=' + d + '>' + d + '</option>'));\n      }\n      actionContainer.append($cmbPages);\n    }\n    if (canExport) {\n      btnSavePdf = $(\"<li><a title='\" + VIS.Msg.getMsg(\"SavePDFDocumentPage\") + \"' class='vis vis-save-pdf'></a></li>\");\n      ulAction.append(btnSavePdf);\n    }\n    if (pctl.pi.getSupportPaging() && canExport) {\n      ulAction.append(btnsavepdfall);\n    } else {\n      btnSaveCsv.find('a').attr(\"title\", VIS.Msg.getMsg(\"SaveCSV\"));\n      btnSavePdf.find('a').attr(\"title\", VIS.Msg.getMsg(\"SavePdf\"));\n    }\n    if (VIS.context.ctx[\"#BULK_REPORT_DOWNLOAD\"] == 'Y') {\n      btnSaveCsvAll.css('display', '');\n      btnsavepdfall.css('display', '');\n    } else {\n      btnSaveCsvAll.css('display', 'none');\n      btnsavepdfall.css('display', 'none');\n    }\n    btnArchive = $(\"<li><a title='\" + VIS.Msg.getMsg(\"Archive\") + \"'  class='vis vis-archive'></a></li>\");\n    ulAction.append(btnArchive);\n    btnRequery = $(\"<li><a title='\" + VIS.Msg.getMsg(\"Requery\") + \"'  class='vis vis-refresh'></a></li>\");\n    ulAction.append(btnRequery);\n    btnCustomize = $(\"<li><a style='cursor:pointer;' class='vis vis-customize'></a></li>\");\n    ulAction.append(btnCustomize);\n    btnPrint = $(\"<li><a style='cursor:pointer;' class='vis vis-print'></a></li>\");\n    ulAction.append(btnPrint);\n    if (!repObj.HTML) {\n      btnPrint.css('display', 'none');\n      btnCustomize.css('display', 'none');\n      btnRF.css('display', 'none');\n    }\n    actionContainer.append(ulAction);\n    toolbar.append(actionContainer);\n    if (!self.hideclose) {\n      toolbar.append(btnClose);\n    }\n    if (self.splitUI) {\n      self.reportToolbar.removeClass('vis-processtoolpadd');\n      self.reportToolbar.empty().append(toolbar);\n      self.reportContainer.empty().append(panel.getRoot());\n      if (self.extrnalForm) {\n        self.getContentTable().empty().append(self.reportContainer);\n      }\n    } else {\n      self.parent.getContentGrid().append(toolbar).append(panel.getRoot());\n      panel.getRoot().css('width', $(window).width());\n    }\n    var cFrame = self.parent;\n    var ismobile = /ipad|iphone|ipod|mobile|android|blackberry|webos|windows phone/i.test(navigator.userAgent.toLowerCase());\n    btnClose.off(\"click\");\n    btnRequery.off(\"click\");\n    btnCustomize.off(\"click\");\n    btnPrint.off('click');\n    btnRF.off('click');\n    $menu.off('click');\n    btnArchive.off('click');\n    btnClose.on('click', function () {\n      if (panel) {\n        panel.dispose();\n        panel = null;\n      }\n      if (cFrame) {\n        cFrame.dispose();\n        cFrame = null;\n      }\n      if (pctl.pi) pctl.pi.dispose();\n      pctl.pi = null;\n      ulAction.empty();\n      btnClose.off(\"click\");\n      btnRequery.off(\"click\");\n      btnCustomize.off(\"click\");\n      btnPrint.off('click');\n      btnRF.off('click');\n      $menu.off('click');\n      btnClose = null;\n      actionContainer = null;\n      ulAction = null;\n      btnArchive = null;\n      btnRequery = null;\n      btnCustomize = null;\n      btnPrint = null;\n      btnSaveCsv = null;\n      btnSavePdf = null;\n      handleEvents = null;\n    });\n    function getExecuteReportforCsvPara(pageNo, PageSize) {\n      var orginName = pctl.pi.getOriginName();\n      if (!orginName) orginName = \"Menu\";\n      var data = {\n        AD_Process_ID: pctl.pi.getAD_Process_ID(),\n        Name: pctl.pi.getTitle(),\n        AD_PInstance_ID: pctl.pi.getAD_PInstance_ID(),\n        AD_Table_ID: pctl.pi.getTable_ID(),\n        Record_ID: pctl.pi.getRecord_ID(),\n        pageNumber: pageNo,\n        page_Size: PageSize,\n        saveAll: false,\n        //Set Action Origin and Origin name\n        ActionOrigin: pctl.pi.getActionOrigin(),\n        OriginName: orginName\n      };\n      return data;\n    }\n    ;\n    function getGenerateReportPara(queryInfo, code, isCreateNew, nodeID, treeID, showSummary) {\n      var data = {\n        processInfo: pctl.pi.toJson(),\n        queryInfo: JSON.stringify(queryInfo),\n        code: code,\n        isCreateNew: isCreateNew,\n        treeID: treeID,\n        node_ID: nodeID,\n        IsSummary: showSummary\n      };\n      return data;\n    }\n    ;\n    function getExecuteReportComposerData(AD_Process_ID, Name, AD_PInstance_ID, AD_Table_ID, Record_ID, pageNumber, page_Size, printAllPages) {\n      var orginName = pctl.pi.getOriginName();\n      if (!orginName) orginName = \"Menu\";\n      var data = {\n        AD_Process_ID: AD_Process_ID,\n        Name: Name,\n        AD_PInstance_ID: AD_PInstance_ID,\n        AD_Table_ID: AD_Table_ID,\n        Record_ID: Record_ID,\n        pageNumber: pageNumber,\n        page_Size: page_Size,\n        printAllPages: printAllPages,\n        //Set Action Origin and Origin name\n        ActionOrigin: pctl.pi.getActionOrigin(),\n        OriginName: orginName\n      };\n      return data;\n    }\n    ;\n    function loadedReportRendering(d, panel, pNoI, tp, bulkdownload) {\n      if (d.HTML && d.HTML.length > 0) {\n        //report\n        manageRepTable(d, panel);\n      } else {\n        if (tp == 0) {\n          window.open(VIS.Application.contextUrl + d.ReportFilePath);\n          panel.setBusy(false);\n        } else {\n          bulkDownloadUI(tp, d.ReportFilePath, bulkdownload, d);\n        }\n      }\n    }\n    ;\n    function bulkDownloadUI(totalPages, reportUrl, bulkdownload, d) {\n      bulkdownload.setBulkBusy(false);\n      $(\"#forreportdownload\").addClass('hide');\n      formlinks += '<input type=\"checkbox\" data-num=\"' + d + '\"  data-url=\"' + VIS.Application.contextUrl + reportUrl + '\" checked />';\n      pNoI += 1;\n      updateCreateBar(pNoI / totalPages * 100);\n      if (pNoI == totalPages) {\n        setTimeout(function () {\n          updateCreateBar(100);\n          showCreateMessage(VIS.Msg.getMsg(\"Generated\"));\n          $('<form>', {\n            'id': 'download_form',\n            'html': formlinks,\n            'action': '#',\n            'Class': 'hide'\n          }).appendTo(document.body).submit();\n        }, 1000);\n      }\n    }\n    ;\n    function updateCreateBar(percent) {\n      var currpercent = $('#reportcreate').find(\".progress-bar\").width() * 100 / $('#reportcreate').width();\n      if (isNaN(currpercent)) currpercent = 0;\n      if (currpercent <= percent) {\n        $(\"#reportcreate\").removeClass(\"hide\").find(\".progress-bar\").attr(\"aria-valuenow\", percent).css({\n          width: percent + \"%\"\n        }).text(percent.toFixed(0) + \"%\");\n        ;\n      }\n    }\n    function resetCreateMessage() {\n      $(\"#reportcreateresult\").removeClass().text(\"\");\n    }\n    function showCreateMessage(text) {\n      resetCreateMessage();\n      $(\"#reportcreateresult\").addClass(\"alert alert-success\").text(text);\n      $(\"#forreportdownload\").removeClass('hide');\n    }\n    function showCreateError(text) {\n      resetCreateMessage();\n      $(\"#reportcreateresult\").addClass(\"alert alert-danger\").text(text);\n    }\n    function loadDynamicReport(reportType, pageNo) {\n      var data = {\n        processInfo: pctl.pi.toJson()\n      };\n      $.ajax({\n        url: VIS.Application.contextUrl + pctl.pi.dynamicAction,\n        type: \"Post\",\n        data: data,\n        success: function (result) {\n          var data = JSON.parse(result);\n          if (ismobile || reportType != pctl.REPORT_TYPE_PDF) {\n            window.open(VIS.Application.contextUrl + data);\n          } else {\n            var $object = $(\"<iframe style = 'width:100%;height:99.4%;' pluginspage='http://www.adobe.com/products/acrobat/readstep2.html'>\");\n            $object.attr(\"src\", VIS.Application.contextUrl + data);\n            panel.getRightDiv().empty().append($object);\n            self.reportPath = data.ReportFilePath;\n          }\n          panel.setBusy(false);\n          return data.ReportFilePath;\n        }\n      });\n    }\n    ;\n    function loadDynamicReportAll(d, bulkdownload, totalPages) {\n      pctl.pi.setPageNo(d);\n      var data = {\n        processInfo: pctl.pi.toJson()\n      };\n      $.ajax({\n        url: VIS.Application.contextUrl + pctl.pi.dynamicAction,\n        type: \"Post\",\n        data: data,\n        success: function (result) {\n          result = JSON.parse(result);\n          bulkDownloadUI(totalPages, result, bulkdownload, d);\n          panel.setBusy(false);\n        }\n      });\n    }\n    ;\n    btnRequery.on('click', function () {\n      panel.setBusy(true);\n      panel.getRightInnerDiv().html(\"\");\n      panel.getRightInnerDiv().width(0);\n      if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n        loadDynamicReport(pctl.REPORT_TYPE_PDF, $cmbPages.val());\n      } else {\n        loadReportData();\n      }\n    });\n    btnCustomize.on('click', function () {\n      var zoomQuery = new VIS.Query();\n      zoomQuery.addRestriction(\"AD_PrintFormat_ID\", VIS.Query.prototype.EQUAL, pctl.pi.AD_PrintFormat_ID);\n      VIS.viewManager.startWindow(240, zoomQuery);\n    });\n    btnPrint.on('click', function () {\n      if (panel.getIsHtmlReport()) {\n        var mywindow = window.open();\n        mywindow.document.write('<html><head>');\n        mywindow.document.write('</head><body >');\n        mywindow.document.write(panel.getHtml());\n        mywindow.document.write('</body></html>');\n        mywindow.print();\n        mywindow.close();\n      }\n    });\n    btnRF.on('click', function () {\n      $menu.empty();\n      for (var i = 0; i < otherPf.length; i++) {\n        var className = otherPf[i].IsDefault == \"Y\" ? \"vis-mainfavitem\" : \"vis-mainnonfavitem\";\n        var ulItem = $('<li><a data-isdefbtn=\"no\" data-id=\"' + otherPf[i].ID + '\">' + otherPf[i].Name + '</a></li>');\n        $menu.append(ulItem);\n      }\n      $menu.append($('<li><a data-id=\"-1\">' + VIS.Msg.getMsg('NewReport') + '</a>'));\n      $(this).w2overlay(overlay.clone(true), {\n        css: {\n          height: '300px'\n        }\n      });\n    });\n    $menu.on('click', \"LI\", function (e) {\n      panel.setBusy(true);\n      var btn = $(e.target);\n      var id = btn.data(\"id\");\n      if (btn.data(\"isdefbtn\") == \"yes\") {\n        var sqlQry = \"VIS_76\";\n        var param = [];\n        param[0] = new VIS.DB.SqlParam(\"@tableID\", pctl.pi.Ad_Table_ID);\n        param[1] = new VIS.DB.SqlParam(\"@tabID\", curTab.getAD_Tab_ID());\n        executeQuery(sql, param);\n        var sqlQry = \"VIS_77\";\n        var param = [];\n        param[0] = new VIS.DB.SqlParam(\"@printForamt\", id);\n        executeQuery(sql, param);\n        for (var i = 0; i < otherPf.length; i++) {\n          if (otherPf[i].ID == id) {\n            otherPf[i].IsDefault = \"Y\";\n          } else {\n            otherPf[i].IsDefault = \"N\";\n          }\n        }\n        return;\n      }\n      AD_PrintFormat_ID = id;\n      var isCreateNew = false;\n      if (id == -1) {\n        id = pctl.pi.get_AD_PrintFormat_Table_ID;\n        isCreateNew = true;\n      }\n      var queryInfo = [];\n      var query = new VIS.Query(pctl.pi.getPrintFormatTableName());\n      queryInfo.push(query.getTableName());\n      queryInfo.push(query.getWhereClause(true));\n      var paramData = getGenerateReportPara(queryInfo, query.getCode(0), false0, 0, false);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"JsonData/GenerateReport/\",\n        dataType: \"json\",\n        data: paramData,\n        type: 'POST',\n        success: function (jsonStr) {\n          var json = jQuery.parseJSON(jsonStr);\n          if (json.IsError) {\n            pctl.pi.setSummary(json.Message, true);\n            pctl.unlock();\n            pctl = null;\n            return;\n          }\n          manageRepTable(json.repInfo, panel);\n          self.reportPath = json.repInfo.ReportFilePath;\n        }\n      });\n    });\n    btnArchive.on('click', function () {\n      self.archiveDocument(panel, pctl);\n    });\n    if (canExport) {\n      btnSaveCsv.on('click', function () {\n        pctl.pi.setFileType(\"C\");\n        if (pctl.pi.getPageNo() == 1) {\n          pctl.pi.setAD_PInstance_ID(0);\n          panel.setBusy(true);\n          executeProcess(getExeProcessParameter(pctl.REPORT_TYPE_CSV), function (json) {\n            window.open(VIS.Application.contextUrl + json.ReportFilePath);\n            panel.setBusy(false);\n          });\n        } else {\n          panel.setBusy(true);\n          window.setTimeout(function () {\n            if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n              loadDynamicReport(pctl.REPORT_TYPE_CSV, pctl.pi.getPageNo());\n            } else {\n              if (pctl.pi.GetAD_ReportView_ID() > 0) {\n                getCsv($cmbPages.val(), 0, null);\n              } else if (pctl.pi.getIsJasperReport()) {\n                getJasperReport(\"C\", pctl.pi.getPageNo());\n              } else {\n                pageNo = $cmbPages.val();\n                var data = getExecuteReportforCsvPara(pageNo, pctl.pi.getPageSize());\n                $.ajax({\n                  url: VIS.Application.contextUrl + \"ReportCom/ExecuteReportforCsv\",\n                  type: \"Post\",\n                  data: data,\n                  success: function (result) {\n                    var data = JSON.parse(result);\n                    window.open(VIS.Application.contextUrl + \"TempDownload/\" + data);\n                    panel.setBusy(false);\n                  }\n                });\n              }\n            }\n          }, 100);\n        }\n      });\n      btnSavePdf.on('click', function () {\n        ////var getCurrentThis = $(this);\n        pctl.pi.setFileType(pctl.REPORT_TYPE_PDF);\n        if (pctl.pi.getPageNo() == 1) {\n          panel.setBusy(true);\n          executeProcess(getExeProcessParameter(pctl.REPORT_TYPE_PDF), function (json) {\n            manageRepTable(json, panel);\n          });\n        } else {\n          loadReportData();\n        }\n      });\n      $cmbPages.on(\"change\", function () {\n        pageNo = $cmbPages.val();\n        if (pctl.pi.GetAD_ReportView_ID() > 0) {\n          panel.setBusy(true);\n          var queryInfo = [];\n          pctl.pi.setPageNo(pageNo);\n          var rquery = new VIS.Query(pctl.pi.getPrintFormatTableName());\n          if (pctl.pi.getPrintFormatTableName()) {\n            queryInfo.push(rquery.getTableName());\n            queryInfo.push(rquery.getWhereClause(true));\n          }\n          var paramData = getGenerateReportPara(queryInfo, \"\", false, 0, 0, false);\n          $.ajax({\n            url: VIS.Application.contextUrl + \"JsonData/GenerateReport/\",\n            dataType: \"json\",\n            type: 'POST',\n            data: paramData,\n            success: function (jsonStr) {\n              var json = jQuery.parseJSON(jsonStr);\n              if (json.IsError) {\n                pctl.pi.setSummary(json.Message, true);\n                pctl.unlock();\n                pctl = null;\n                return;\n              }\n              manageRepTable(json.repInfo, panel);\n              self.reportPath = json.repInfo.ReportFilePath;\n            }\n          });\n        } else {\n          pctl.pi.setPageNo(pageNo);\n        }\n      });\n      function getJasperReport(rptExportType, rptPageNo) {\n        pctl.pi.setFileType(rptExportType);\n        var data = {\n          processInfo: pctl.pi.toJson()\n        };\n        $.ajax({\n          url: VIS.Application.contextUrl + \"JasperReport/ExecuteReport\",\n          type: \"Post\",\n          data: data,\n          success: function (result) {\n            var data = JSON.parse(result);\n            if (ismobile) {\n              window.open(VIS.Application.contextUrl + data);\n            } else {\n              if (rptExportType == pctl.REPORT_TYPE_PDF) {\n                var $object = $(\"<iframe style = 'width:100%;height:99.4%;' pluginspage='http://www.adobe.com/products/acrobat/readstep2.html'>\");\n                $object.attr(\"src\", VIS.Application.contextUrl + data);\n                panel.getRightDiv().empty().append($object);\n              } else {\n                window.open(VIS.Application.contextUrl + data);\n              }\n              self.reportPath = data;\n            }\n            panel.setBusy(false);\n          }\n        });\n      }\n      ;\n      function getJasperReportAll(d, totalPages, bulkdownload) {\n        var reportUrl = \"\";\n        pctl.pi.setPageNo(d);\n        var data = {\n          processInfo: pctl.pi.toJson()\n        };\n        $.ajax({\n          url: VIS.Application.contextUrl + \"JasperReport/ExecuteReport\",\n          type: \"Post\",\n          data: data,\n          success: function (result) {\n            result = JSON.parse(result);\n            bulkDownloadUI(totalPages, result, bulkdownload, d);\n            panel.setBusy(false);\n          }\n        });\n      }\n      ;\n      btnSaveCsvAll.on(\"click\", function () {\n        panel.setBusy(true);\n        pNoI = 0;\n        formlinks = '';\n        pctl.pi.setFileType(\"C\");\n        window.setTimeout(function () {\n          var formlinks = '';\n          var bulkdownload = new VIS.BulkDownload(self.windowNo, 'CSV');\n          bulkdownload.onClose = function () {};\n          bulkdownload.show();\n          if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n            for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n              loadDynamicReportAll(d, bulkdownload, pctl.pi.getTotalPages());\n            }\n          } else {\n            if (pctl.pi.GetAD_ReportView_ID() > 0) {\n              for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n                getCsv(d, pctl.pi.getTotalPages(), bulkdownload);\n              }\n            } else if (pctl.pi.getIsJasperReport()) {\n              for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n                getJasperReportAll(d, pctl.pi.getTotalPages(), bulkdownload);\n              }\n            } else {\n              for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n                getAllCSV(d, bulkdownload, pctl.pi.getTotalPages());\n              }\n            }\n          }\n          pctl.pi.setPageNo($cmbPages.val());\n        }, 100);\n      });\n      function getAllCSV(d, bulkdownload, totalPages) {\n        var reportUrl = \"\";\n        if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n          reportUrl = loadDynamicReport(pctl.REPORT_TYPE_CSV, d);\n        } else {\n          var data = getExecuteReportforCsvPara(d, pctl.pi.getPageSize());\n          $.ajax({\n            url: VIS.Application.contextUrl + \"ReportCom/ExecuteReportforCsv\",\n            type: \"Post\",\n            data: data,\n            success: function (result) {\n              var reportUrl = JSON.parse(result);\n              reportUrl = \"TempDownload/\" + reportUrl;\n              bulkDownloadUI(totalPages, reportUrl, bulkdownload, d);\n              panel.setBusy(false);\n            }\n          });\n        }\n      }\n      ;\n      var getReportData = function (pNoI, tP, bulkdownload) {\n        var queryInfo = [];\n        var query = new VIS.Query(pctl.pi.getPrintFormatTableName());\n        queryInfo.push(query.getTableName());\n        queryInfo.push(query.getWhereClause(true));\n        var paramData = getGenerateReportPara(queryInfo, \"\", false, 0, 0, false);\n        $.ajax({\n          url: VIS.Application.contextUrl + \"JsonData/GenerateReport/\",\n          dataType: \"json\",\n          data: paramData,\n          type: 'POST',\n          success: function (data) {\n            if (data == null) {\n              VIS.ADialog.error('ERRORGettingRepData');\n            }\n            var dres = jQuery.parseJSON(data);\n            var d = dres.repInfo;\n            if (d.ErrorText) {\n              VIS.ADialog.error(d.ErrorText);\n              panel.setBusy(true);\n              return;\n            }\n            loadedReportRendering(d, panel, pNoI, tP, bulkdownload);\n            panel.setBusy(false);\n            self.reportPath = d.ReportFilePath;\n          }\n        });\n      };\n      var getCsv = function (pNoI, tP, bulkdownload) {\n        var queryInfo = [];\n        var query = new VIS.Query(pctl.pi.getPrintFormatTableName());\n        queryInfo.push(query.getTableName());\n        queryInfo.push(query.getWhereClause(true));\n        var paramData = getGenerateReportPara(queryInfo, \"\", false, 0, 0, false);\n        $.ajax({\n          url: VIS.Application.contextUrl + \"JsonData/GenerateReport/\",\n          dataType: \"json\",\n          data: paramData,\n          type: 'POST',\n          success: function (data) {\n            if (data == null) {\n              VIS.ADialog.error('ERRORGettingRepData');\n            }\n            var dres = jQuery.parseJSON(data);\n            var d = dres.repInfo;\n            if (d.ErrorText) {\n              VIS.ADialog.error(d.ErrorText);\n              setBusy(false);\n              return;\n            }\n            loadedReportRendering(d, panel, pNoI, tP, bulkdownload);\n            self.reportPath = d.ReportFilePath;\n            panel.setBusy(false);\n          }\n        });\n      };\n      btnsavepdfall.on(\"click\", function () {\n        panel.setBusy(true);\n        pNoI = 0;\n        formlinks = '';\n        pctl.pi.setFileType(pctl.REPORT_TYPE_PDF);\n        window.setTimeout(function () {\n          var formlinks = '';\n          var bulkdownload = new VIS.BulkDownload(self.windowNo, 'PDF');\n          bulkdownload.onClose = function () {};\n          bulkdownload.show();\n          if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n            for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n              loadDynamicReportAll(d, bulkdownload, pctl.pi.getTotalPages());\n            }\n          } else {\n            if (pctl.pi.GetAD_ReportView_ID() > 0) {\n              for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n                getReportData(d, pctl.pi.getTotalPages(), bulkdownload);\n              }\n            } else if (pctl.pi.getIsJasperReport()) {\n              for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n                getJasperReportAll(d, pctl.pi.getTotalPages(), bulkdownload);\n              }\n            } else {\n              for (var d = 1; d <= pctl.pi.getTotalPages(); d++) {\n                savePDFAll(d, bulkdownload, pctl.pi.getTotalPages());\n              }\n            }\n          }\n          pctl.pi.setPageNo($cmbPages.val());\n        }, 100);\n      });\n      var pNoI = 0;\n      function savePDFAll(d, bulkdownload, totalPages) {\n        var reportUrl = \"\";\n        if (pctl.pi.dynamicAction && pctl.pi.dynamicAction.length > 0) {\n          reportUrl = loadDynamicReportAll(pctl.REPORT_TYPE_CSV, d);\n        } else {\n          var data = getExecuteReportComposerData(pctl.pi.getAD_Process_ID(), pctl.pi.getTitle(), pctl.pi.getAD_PInstance_ID(), pctl.pi.getTable_ID(), pctl.pi.getRecord_ID(), d, pctl.pi.getPageSize(), false);\n          $.ajax({\n            url: VIS.Application.contextUrl + \"ReportCom/ExecuteReport\",\n            type: \"Post\",\n            data: data,\n            success: function (result) {\n              var reportUrl = JSON.parse(result);\n              bulkDownloadUI(totalPages, reportUrl, bulkdownload, d);\n              self.reportPath = reportUrl;\n              panel.setBusy(false);\n            }\n          });\n        }\n      }\n      ;\n      var download = function () {\n        for (var i = 0; i < arguments.length; i++) {\n          var iframe = $('<iframe style=\"visibility: collapse;\"></iframe>');\n          $('body').append(iframe);\n          var content = iframe[0].contentDocument;\n          var form = '<form action=\"' + arguments[i] + '\" method=\"GET\"></form>';\n          content.write(form);\n          $('form', content).submit();\n          setTimeout(function (iframe) {\n            return function () {\n              iframe.remove();\n            };\n          }(iframe), 2000);\n        }\n      };\n      var formlinks = '';\n    }\n\n    // handleEvents(panel, repObj);\n  };\n  AProcess.prototype.showReport = function (panel, repObj, pCtl, isCrystalReport) {\n    /* dispose Content */\n    var self = this;\n    if (!this.splitUI) {\n      if (this.mPanel) {\n        this.mPanel.dispose();\n        this.mPanel = null;\n      }\n      this.disposeComponent();\n    }\n    this.mPanel = panel;\n    this.pCtl = pCtl;\n    this.createUI(panel, pCtl, repObj);\n    this.parent.hideHeader(true);\n    panel.setBusy(false);\n\n    // Archive Document automatically, if selected on Tenant\n    if (VIS.context.ctx[\"$AutoArchive\"] == '1' || VIS.context.ctx[\"$AutoArchive\"] == '2') {\n      self.archiveDocument(panel, pCtl);\n    }\n  };\n  AProcess.prototype.showTelerikReport = function (painstanceID, tableID) {\n    var tc = new KJS.TelerikContainer(painstanceID, tableID);\n    tc.getRoot().height(this.parent.getContentGrid().height());\n    this.parent.getContentGrid().empty();\n    this.parent.getContentGrid().append(tc.getRoot());\n    tc.init();\n  };\n  AProcess.prototype.setReportBytes = function (bytes) {\n    this.reportBytes = bytes;\n  };\n  AProcess.prototype.setReportPath = function (path) {\n    this.reportPath = path;\n  };\n  AProcess.prototype.sizeChanged = function (height, width) {\n    this.setSize(height, width);\n    if (this.mPanel && this.mPanel.sizeChanged && !this.splitUI) {\n      this.mPanel.sizeChanged(height, width);\n    }\n    if (this.setParameterHeights) {\n      this.setParameterHeights(height, width);\n    }\n  };\n  AProcess.prototype.refresh = function () {\n    if (this.setParameterHeights) {\n      this.setParameterHeights();\n    }\n    if (this.mPanel && this.mPanel.refresh) {\n      this.mPanel.refresh();\n    }\n    if (this.setMsg) {\n      this.setMsg(\"\");\n    }\n  };\n\n  //Assignment\n  VIS.AProcess = AProcess;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/processframe.js?")},"./Areas/VIS/Scripts/app/processwrapper.js":()=>{eval(';\n(function (VIS, $) {\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  //executeDataSet\n  var executeDataSet = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dataSet = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (callback) {\n        callback(dataSet);\n      }\n    });\n    return dataSet;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  function ProcessWrapper(processName, parent) {\n    this.parent = parent;\n    var $self = this;\n    function startProcess() {\n      try {\n        var sql = "VIS_100";\n        var param = [];\n        param[0] = new VIS.DB.SqlParam("@processName", processName);\n        var ds = executeDataSet(sql, param);\n        if (ds != null && ds.getTables()[0].getRows().length > 0) {\n          var processId = ds.tables[0].getRow(0).getCell(0);\n          var name = ds.tables[0].getRow(0).getCell(1);\n          var className = ds.tables[0].getRow(0).getCell(2);\n          var type = ds.tables[0].getRow(0).getCell(3);\n          if (processId > 0) {\n            var pp = new VIS.ParameterDialog($self.parent.windowNo, $self);\n            pp.initDialog(processId, name, type, className, false);\n            pp.onCloseMain = function (output) {\n              if (!output) {\n                //process now\n                VIS.ADialog.info(\'Process Canceled\', true, "", "");\n              } else {\n                VIS.ADialog.info(\'ProcessWait\', true, "", "");\n              }\n            };\n            pp.showDialog();\n            pp = null;\n          } else {\n            VIS.ADialog.info(\'ProcessNotFound\', true, "", "");\n          }\n        }\n      } catch (e) {}\n    }\n    ;\n    startProcess();\n    this.lockUI = function (pi) {\n      if ($self.lockUI) {\n        $self.lockUI(pi);\n      }\n    };\n    this.unlockUI = function (pi) {\n      //alert("comlpeted");\n      if ($self.unlockUI) {\n        $self.unlockUI(pi);\n      }\n    };\n    this.parentcall = function (output) {\n      if ($self.parentcall) {\n        $self.parentcall(output);\n      }\n    };\n  }\n  ;\n  VIS.ProcessWrapper = ProcessWrapper;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/processwrapper.js?')},"./Areas/VIS/Scripts/app/role.js":()=>{eval('// MRole\n\n;\nVIS.MRole.getDefault = function () {\n  return VIS.MRole;\n};\nVIS.MRole.log = VIS.Logging.VLogger.getVLogger("MRole"); //log\n\nVIS.MRole.canUpdate = function (AD_Client_ID, AD_Org_ID, AD_Table_ID, Record_ID, createError) {\n  var userLevel = this.vo.UserLevel.trim(); // Format \'SCO\'\n\n  var retValue = true;\n  var whatMissing = "";\n\n  // System == Client=0 & Org=0\n  if (AD_Client_ID == 0 && AD_Org_ID == 0 && userLevel.indexOf(\'S\') == -1) {\n    retValue = false;\n    whatMissing += "S";\n  }\n\n  // Client == Client!=0 & Org=0\n  else if (AD_Client_ID != 0 && AD_Org_ID == 0 && userLevel.indexOf(\'C\') == -1) {\n    if (userLevel.indexOf(\'O\') == -1 && this.getIsOrgAccess(AD_Org_ID, true)) ; // Client+Org with access to *\n    else {\n      retValue = false;\n      whatMissing += "C";\n    }\n  }\n\n  // Organization == Client!=0 & Org!=0\n  else if (AD_Client_ID != 0 && AD_Org_ID != 0 && userLevel.indexOf(\'O\') == -1) {\n    retValue = false;\n    whatMissing += "O";\n  }\n\n  // Data Access\n  if (retValue) retValue = this.getIsTableAccess(AD_Table_ID, false);\n  if (retValue && Record_ID != 0) retValue = this.getIsRecordAccess(AD_Table_ID, Record_ID, false);\n  if (!retValue && createError) {\n    VIS.MRole.log.warning("AccessTableNoUpdate => AD_Client_ID=" + AD_Client_ID + ", AD_Org_ID=" + AD_Org_ID + ", UserLevel=" + userLevel + " => missing=" + whatMissing);\n    //log.warning(toString());\n  }\n  return retValue;\n}; //can update\n\nVIS.MRole.getIsColumnAccess = function (AD_Table_ID, AD_Column_ID, ro) {\n  if (!this.getIsTableAccess(AD_Table_ID, ro))\n    // No Access to Table\n    return false;\n  var retValue = true; // assuming exclusive\n  var m_columnAccess = this.vo.columnAccess;\n  for (var i = 0; i < m_columnAccess.length; i++) {\n    if (m_columnAccess[i].IsExclude)\n      // Exclude\n      // If you Exclude Access to a column and select Read Only,\n      // you can only read data (otherwise no access).\n      {\n        if (m_columnAccess[i].AD_Table_ID == AD_Table_ID && m_columnAccess[i].AD_Column_ID == AD_Column_ID) {\n          if (!ro)\n            // just R/O Access requested\n            retValue = !m_columnAccess[i].IsReadOnly;else retValue = false;\n          if (!retValue)\n            //log.fine("Exclude AD_Table_ID=" + AD_Table_ID\n            //        + ", AD_Column_ID=" + AD_Column_ID + " (ro="\n            //        + ro + ",ColumnAccessRO="\n            //        + m_columnAccess[i].isReadOnly() + ") = "\n            //        + retValue);\n            return retValue;\n        }\n      } else\n      // Include\n      // If you Include Access to a column and select Read Only,\n      // you can only read data (otherwise full access).\n      {\n        if (m_columnAccess[i].AD_Table_ID == AD_Table_ID) {\n          // retValue = false;\n          if (m_columnAccess[i].AD_Column_ID == AD_Column_ID) {\n            if (!ro)\n              // rw only if not r/o\n              retValue = !m_columnAccess[i].IsReadOnly;else retValue = true;\n            if (!retValue)\n              //log.fine("Include AD_Table_ID=" + AD_Table_ID\n              //        + ", AD_Column_ID=" + AD_Column_ID\n              //        + " (ro=" + ro + ",ColumnAccessRO="\n              //        + m_columnAccess[i].isReadOnly() + ") = "\n              //        + retValue);\n              return retValue;\n          }\n        } // same table\n      } // include\n  } // for all Table Access\n  if (!retValue) {\n    //log.fine("AD_Table_ID=" + AD_Table_ID + ", AD_Column_ID="\n    //        + AD_Column_ID + " (ro=" + ro + ") = " + retValue);\n  }\n  return retValue;\n}; // isColumnAccess\n\nVIS.MRole.getIsTableAccessLevel = function (AD_Table_ID, isAccess) {\n  if (isAccess)\n    //\trole can always read\n    return true;\n  var strRoleAccessLevel = this.vo.tableAccessLevel[AD_Table_ID];\n  if (strRoleAccessLevel == null) {\n    // log no access tableid\n    //log.Fine("NO - No AccessLevel - AD_Table_ID=" + AD_Table_ID);\n    return false;\n  }\n  //7\n  if (strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_All)) {\n    return true;\n  }\n  //\tUser Level = SCO\n  var userLevel = this.vo.UserLevel.trim();\n  //S,4,6\n  if (userLevel.indexOf(\'S\') != -1 && (strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_SystemOnly) || strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_SystemPlusClient))) {\n    return true;\n  } //8**********************************************************8//\n  if (userLevel.indexOf(\'C\') != -1 && (strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_ClientOnly) || strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_SystemPlusClient))) {\n    return true;\n  }\n  if (userLevel.indexOf(\'O\') != -1 && (strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_Organization) || strRoleAccessLevel.equals(VIS.Consts.ACCESSLEVEL_ClientPlusOrganization))) {\n    return true;\n  }\n  //    log.Fine("NO - AD_Table_ID=" + AD_Table_ID\n  //+ ", UserLevel=" + userLevel + ", AccessLevel=" + strRoleAccessLevel);\n  return false;\n}; //table access\n\nVIS.MRole.canView = function (strAccesLevel) {\n  var userLevel = this.vo.UserLevel.trim(); //Format \'SCO\'\n\n  var retValue = true;\n  if (VIS.Consts.ACCESSLEVEL_All.equals(strAccesLevel)) {\n    retValue = true;\n  }\n\n  //\t4 - System data \n  else if (VIS.Consts.ACCESSLEVEL_SystemOnly.equals(strAccesLevel) && userLevel.indexOf(\'S\') == -1) {\n    retValue = false;\n  }\n\n  //\t2 - Client data requires C\n  else if (VIS.Consts.ACCESSLEVEL_ClientOnly.equals(strAccesLevel) && userLevel.indexOf(\'C\') == -1) {\n    retValue = false;\n  }\n\n  //\t1 - Organization data requires O\n  else if (VIS.Consts.ACCESSLEVEL_Organization.equals(strAccesLevel) && userLevel.indexOf(\'O\') == -1) {\n    retValue = false;\n  }\n\n  //\t3 - Client Shared requires C or O\n  else if (VIS.Consts.ACCESSLEVEL_ClientPlusOrganization.equals(strAccesLevel) && !(userLevel.indexOf(\'C\') != -1 || userLevel.indexOf(\'O\') != -1)) {\n    retValue = false;\n  }\n\n  //\t6 - System/Client requires S or C\n  else if (VIS.Consts.ACCESSLEVEL_SystemPlusClient.equals(strAccesLevel) && !(userLevel.indexOf(\'S\') != -1 || userLevel.indexOf(\'C\') != -1)) {\n    retValue = false;\n  }\n  if (retValue) {\n    return retValue;\n  }\n  //  Notification\n  VIS.MRole.log.warning("AccessTableNoView", "Required=" + strAccesLevel + "(" + ") != UserLevel=" + userLevel);\n  //log.Info(ToString());\n  return retValue;\n}; //can view\n\nVIS.MRole.getIsTableAccess = function (AD_Table_ID, ro) {\n  if (!this.getIsTableAccessLevel(AD_Table_ID, ro))\n    // Role Based Access\n    return false;\n  var hasAccess = true; // assuming exclusive rule\n  var m_tableAccess = this.vo.tableAccess;\n  for (var i = 0; i < m_tableAccess.length; i++) {\n    if (!VIS.Consts.ACCESSTYPERULE_Accessing.equals(m_tableAccess[i].AccessTypeRule)) continue;\n    if (m_tableAccess[i].IsExclude)\n      // Exclude\n      // If you Exclude Access to a table and select Read Only,\n      // you can only read data (otherwise no access).\n      {\n        if (m_tableAccess[i].AD_Table_ID === AD_Table_ID) {\n          if (ro) hasAccess = m_tableAccess[i].IsReadOnly;else hasAccess = false;\n          //log.fine("Exclude AD_Table_ID=" + AD_Table_ID + " (ro="\n          //        + ro + ",TableAccessRO="\n          //        + m_tableAccess[i].isReadOnly() + ") = "\n          //        + hasAccess);\n          return hasAccess;\n        }\n      } else\n      // Include\n      // If you Include Access to a table and select Read Only,\n      // you can only read data (otherwise full access).\n      {\n        hasAccess = false;\n        if (m_tableAccess[i].AD_Table_ID == AD_Table_ID) {\n          if (!ro)\n            // rw only if not r/o\n            hasAccess = !m_tableAccess[i].IsReadOnly;else hasAccess = true;\n          //log.fine("Include AD_Table_ID=" + AD_Table_ID + " (ro="\n          //        + ro + ",TableAccessRO="\n          //        + m_tableAccess[i].isReadOnly() + ") = "\n          //        + hasAccess);\n          return hasAccess;\n        }\n      }\n  } // for all Table Access\n  if (!hasAccess) {\n    //log.fine("AD_Table_ID=" + AD_Table_ID + "(ro=" + ro + ") = "\n    //        + hasAccess);\n  }\n  m_tableAccess = null;\n  return hasAccess;\n}; // isTableAccess\n\nVIS.MRole.getIsCanReport = function (AD_Table_ID) {\n  if (!this.vo.IsCanReport)\n    // Role Level block\n    {\n      //log.warning("Role denied");\n      return false;\n    }\n  if (!this.getIsTableAccess(AD_Table_ID, true))\n    // No R/O Access to Table\n    return false;\n  //\n  var canReport = true;\n  var m_tableAccess = this.vo.tableAccess;\n  for (var i = 0; i < m_tableAccess.length; i++) {\n    if (!VIS.Consts.ACCESSTYPERULE_Reporting.equals(m_tableAccess[i].AccessTypeRule)) continue;\n    if (m_tableAccess[i].IsExclude)\n      // Exclude\n      {\n        if (m_tableAccess[i].AD_Table_ID === AD_Table_ID) {\n          canReport = m_tableAccess[i].IsCanReport;\n          //log.fine("Exclude " + AD_Table_ID + " - " + canReport);\n          return canReport;\n        }\n      } else\n      // Include\n      {\n        canReport = false;\n        if (m_tableAccess[i].AD_Table_ID === AD_Table_ID) {\n          canReport = m_tableAccess[i].IsCanReport;\n          //log.fine("Include " + AD_Table_ID + " - " + canReport);\n          return canReport;\n        }\n      }\n  } // for all Table Access\n  //log.fine(AD_Table_ID + " - " + canReport);\n  m_tableAccess = null;\n  return canReport;\n}; // isCanReport\n\nVIS.MRole.getIsCanExport = function (AD_Table_ID) {\n  if (!this.vo.IsCanExport)\n    // Role Level block\n    {\n      //log.warning("Role denied");\n      return false;\n    }\n  if (!this.getIsTableAccess(AD_Table_ID, true))\n    // No R/O Access to Table\n    return false;\n  if (!this.getIsCanReport(AD_Table_ID))\n    // We cannot Export if we cannot report\n    return false;\n  //\n  var canExport = true;\n  var m_tableAccess = this.vo.tableAccess;\n  for (var i = 0; i < m_tableAccess.length; i++) {\n    if (!VIS.Consts.ACCESSTYPERULE_Exporting.equals(m_tableAccess[i].AccessTypeRule)) continue;\n    if (m_tableAccess[i].IsExclude)\n      // Exclude\n      {\n        //  added if condition (similar to the if condition\n        // in isCanReport)\n        if (m_tableAccess[i].AD_Table_ID === AD_Table_ID) {\n          canExport = m_tableAccess[i].IsCanExport;\n          //log.fine("Exclude " + AD_Table_ID + " - " + canExport);\n          return canExport;\n        } // end bug 10018373\n      } else\n      // Include\n      {\n        canExport = false;\n        //  added if condition (similar to the if condition\n        // in isCanReport)\n        if (m_tableAccess[i].AD_Table_ID === AD_Table_ID) {\n          canExport = m_tableAccess[i].IsCanExport;\n          //log.fine("Include " + AD_Table_ID + " - " + canExport);\n          return canExport;\n        }\n      }\n  } // for all Table Access\n  //log.fine(AD_Table_ID + " - " + canExport);\n  m_tableAccess = null;\n  return canExport;\n}; // isCanExport\n\nVIS.MRole.getIsOrgAccess = function (AD_Org_ID, rw) {\n  if (this.vo.IsAccessAllOrgs) return true;\n  if (AD_Org_ID == 0 && !rw)\n    // can always read common org\n    return true;\n  // Positive List\n  var m_orgAccess = this.vo.orgAccess;\n  for (var i = 0; i < m_orgAccess.length; i++) {\n    if (m_orgAccess[i].AD_Org_ID === AD_Org_ID) {\n      if (!rw) return true;\n      if (!m_orgAccess[i].readOnly)\n        // rw\n        return true;\n      return false;\n    }\n  }\n  m_orgAccess = null;\n  return false;\n}; // isOrgAccess\n\nVIS.MRole.getIsRecordAccess = function (AD_Table_ID, Record_ID, ro) {\n  // if (!isTableAccess(AD_Table_ID, ro)) // No Access to Table\n  // return false;\n\n  var negativeList = true;\n  var m_recordAccess = this.vo.recordAccess;\n  var ra = null;\n  for (var i = 0; i < m_recordAccess.length; i++) {\n    ra = m_recordAccess[i];\n    if (ra.AD_Table_ID !== AD_Table_ID) continue;\n    if (ra.IsExclude)\n      // Exclude\n      // If you Exclude Access to a column and select Read Only,\n      // you can only read data (otherwise no access).\n      {\n        if (ra.Record_ID === Record_ID) {\n          m_recordAccess = null;\n          if (ro) return ra.IsReadOnly;else return false;\n        }\n      } else\n      // Include\n      // If you Include Access to a column and select Read Only,\n      // you can only read data (otherwise full access).\n      {\n        negativeList = false; // has to be defined\n        if (ra.Record_ID === Record_ID) {\n          m_recordAccess = null;\n          if (!ro) return !ra.IsReadOnly;else\n            // ro\n            return true;\n        }\n      }\n  } // for all Table Access\n  return negativeList;\n}; // isRecordAccess\n\nVIS.MRole.getIsSharedRecordAccess = function (AD_Table_ID, Record_ID) {\n  var m_recordAccess = this.vo.sharedRecordAccess;\n  var ra = null;\n  var valueExist = false;\n  for (var i = 0; i < m_recordAccess.length; i++) {\n    ra = m_recordAccess[i];\n    if (ra.AD_Table_ID != AD_Table_ID) continue;\n    if (ra.Record_ID == Record_ID) {\n      m_recordAccess = null;\n      valueExist = true;\n      return !ra.IsReadOnly;\n    }\n  }\n\n  //if (!valueExist) {\n  //    var that = this;\n  //    $.ajax({\n  //        async: false,\n  //        url: VIS.Application.contextUrl + "RecordShared/GetSharedRecords",\n  //        success: function (data) {\n  //            data = JSON.parse(data);\n  //            that.vo.sharedRecordAccess = data;\n\n  //            m_recordAccess = that.vo.sharedRecordAccess;\n  //            var ra = null;\n  //            for (var i = 0; i < m_recordAccess.length; i++) {\n  //                ra = m_recordAccess[i];\n\n  //                if (ra.AD_Table_ID != AD_Table_ID)\n  //                    continue;\n\n  //                if (ra.Record_ID == Record_ID) {\n  //                    m_recordAccess = null;\n  //                    return !ra.IsReadOnly;\n  //                }\n  //            }\n  //        },\n  //        error: function (err) {\n  //            console.log(err);\n  //        }\n  //    });\n  //}\n  return true;\n};\nVIS.MRole.getClientWhere = function (rw) {\n  // All Orgs - use Client of Role\n  if (this.vo.IsAccessAllOrgs) {\n    if (rw || this.vo.AD_Client_ID == 0) return "AD_Client_ID=" + this.vo.AD_Client_ID;\n    return "AD_Client_ID IN (0," + this.vo.AD_Client_ID + ")";\n  }\n\n  // Unique Strings\n  var set = [];\n  if (!rw) set.push("0");\n  // Positive List\n  for (var ele = 0; ele < this.vo.orgAccess.length; ele++)\n  // OrgAccess element : m_orgAccess)\n  {\n    var c = this.vo.orgAccess[ele].AD_Client_ID.toString();\n    if (set.indexOf(c) < 0) {\n      set.push(c);\n    }\n    c = null;\n  }\n  //\n  var sb = new StringBuilder();\n  var oneOnly = true;\n\n  //while (it.hasNext()) {\n  for (var i = 0; i < set.length; i++) {\n    if (sb.length() > 0) {\n      sb.append(",");\n      oneOnly = false;\n    }\n    sb.append(set[i]);\n  }\n  set = null;\n  if (oneOnly) {\n    if (sb.length() > 0) return "AD_Client_ID=" + sb.toString();else {\n      this.log.log(VIS.Logging.Level.SEVERE, "No Access Org records");\n      return "AD_Client_ID=-1"; // No Access Record\n    }\n  }\n  return "AD_Client_ID IN(" + sb.toString() + ")";\n}; //get client where\n\nVIS.MRole.getOrgWhere = function (tableName, rw) {\n  if (this.vo.IsAccessAllOrgs) return null;\n  // Unique Strings\n  var set = [];\n  if (!rw) set.push("0");\n  // Positive List\n  var orgAccess = this.vo.orgAccess;\n  for (var i = 0; i < orgAccess.length; i++) {\n    var o = orgAccess[i].AD_Org_ID.toString();\n    if (!rw) {\n      if (set.indexOf(o) < 0) set.push(o);\n    } else if (!o.readOnly) {\n      if (set.indexOf(o) < 0) set.push(o);\n    }\n  }\n  orgAccess = null;\n  //\n  if (set.length == 1) {\n    return "COALESCE(" + (tableName == null ? "" : tableName + ".") + "AD_Org_ID,0)=" + set[0];\n  } else if (set.length == 0) {\n    this.log.log(VIS.Logging.Level.SEVERE, "No Access Org records");\n    return (tableName == null ? "" : tableName + ".") + "AD_Org_ID=-1"; // No Access Record\n  }\n  var sql = new StringBuilder();\n  var sb = new StringBuilder();\n  var count = 0;\n  //while (it.hasNext()) {\n  for (var r = 0; r < set.length; r++) {\n    if (sb.length() > 0) {\n      sb.append(",");\n    }\n    sb.append(set[r]);\n    count++;\n    //if there are 999 orgs already, or it reaches the end , reset\n    //we do this \'cuz IN() cannot contain more than 1000 values\n    if (count % 999 == 0 || count == set.length) {\n      if (sql.length() > 0) sql.append(" OR ");\n      sql.append("COALESCE(" + (tableName == null ? "" : tableName + ".") + "AD_Org_ID,0) IN(").append(sb.toString()).append(")");\n      sb = null;\n      sb = new StringBuilder();\n    }\n  }\n  return "(" + sql.toString() + ")";\n}; // getOrgWhereValue\n\nVIS.MRole.getAD_Table_ID = function (tableName) {\n  var ii = this.vo.tableName[tableName];\n  if (ii != null) return ii;\n  return 0;\n}; //table id\n\nVIS.MRole.getSynonym = function (keyColumn) {\n  var o = this.columnSynonym[keyColumn];\n  if (o) return o;\n  return null;\n};\nVIS.MRole.getKeyColumnName = function (tableInfo, keyColumnName) {\n  var columnSyn = this.getSynonym(keyColumnName);\n  if (columnSyn == null) return keyColumnName;\n\n  //\tWe have a synonym - ignore it if base table inquired\n  for (var i = 0; i < tableInfo.length; i++) {\n    var element = tableInfo[i];\n    if (keyColumnName.equals("AD_User_ID")) {\n      //\tList of tables where not to use SalesRep_ID\n      if (element.getTableName().equals("AD_User")) return keyColumnName;\n    } else if (keyColumnName.equals("AD_ElementValue_ID")) {\n      //\tList of tables where not to use Account_ID\n      if (element.getTableName().equals("AD_ElementValue")) return keyColumnName;\n    }\n  } //\ttables to be ignored\n  return columnSyn;\n}; //key columnname \n\nVIS.MRole.getDependentAccess = function (whereColumnName, includes, excludes, isIncludeNull) {\n  if (includes.length == 0 && excludes.length == 0) return "";\n  if (includes.length != 0 && excludes.length != 0) this.log.warning("Mixing Include and Excluse rules - Will not return values");\n  var where = new StringBuilder(" AND ");\n  if (isIncludeNull) where.append(" ( ");\n  if (includes.length == 1) {\n    where.append(whereColumnName).append("=").append(includes[0]);\n  } else if (includes.length > 1) {\n    where.append(whereColumnName).append(" IN (");\n    for (var ii = 0; ii < includes.length; ii++) {\n      if (ii > 0) where.append(",");\n      where.append(includes[ii]);\n    }\n    where.append(")");\n  } else if (excludes.length == 1) where.append(whereColumnName).append("<>").append(excludes[0]);else if (excludes.length > 1) {\n    where.append(whereColumnName).append(" NOT IN (");\n    for (var ii = 0; ii < excludes.length; ii++) {\n      if (ii > 0) where.append(",");\n      where.append(excludes[ii]);\n    }\n    where.append(")");\n  }\n  if (isIncludeNull) where.append(" OR ").append(whereColumnName).append(" IS NULL").append(" ) ");\n  return where.toString();\n}; // getDependentAccess\n\nVIS.MRole.getDependentRecordWhereColumn = function (mainSql, columnName) {\n  var retValue = columnName; // if nothing else found\n  var index = mainSql.indexOf(columnName);\n  // see if there are table synonym\n  var offset = index - 1;\n  var c = mainSql.charAt(offset);\n  if (c == \'.\') {\n    var sb = new StringBuilder();\n    while (c != \' \' && c != \',\' && c != \'(\')\n    // delimeter\n    {\n      sb.insert(0, c);\n      c = mainSql.charAt(--offset);\n    }\n    sb.append(columnName);\n    return sb.toString();\n  }\n  return retValue;\n}; // ge\n\nVIS.MRole.getRecordWhere = function (AD_Table_ID, keyColumnName, rw) {\n  //\n  var sbInclude = new StringBuilder();\n  var sbExclude = new StringBuilder();\n  var isIncludeNull = false;\n  // Role Access\n  var m_recordAccess = this.vo.recordAccess;\n  for (var i = 0; i < m_recordAccess.length; i++) {\n    if (m_recordAccess[i].AD_Table_ID == AD_Table_ID) {\n      // NOT IN (x)\n      if (m_recordAccess[i].IsExclude) {\n        if (sbExclude.length() == 0) sbExclude.append(keyColumnName).append(" NOT IN (");else sbExclude.append(",");\n        sbExclude.append(m_recordAccess[i].Record_ID);\n      }\n      // IN (x)\n      else if (!rw || !m_recordAccess[i].IsReadOnly)\n        // include\n        {\n          if (sbInclude.length() == 0) sbInclude.append(keyColumnName).append(" IN (");else sbInclude.append(",");\n          sbInclude.append(m_recordAccess[i].Record_ID);\n        }\n      isIncludeNull = isIncludeNull || m_recordAccess[i].IsIncludeNull;\n    }\n  } // for all Table Access\n\n  var sb = new StringBuilder();\n  if (sbExclude.length() > 0) {\n    if (isIncludeNull) {\n      sb.append("(");\n    }\n    sb.append(sbExclude).append(")");\n    if (isIncludeNull) {\n      sb.append(" OR ").append(keyColumnName).append(" IS NULL )");\n    }\n    isIncludeNull = false;\n  }\n  if (sbInclude.length() > 0) {\n    if (sb.length() > 0) sb.append(" AND ");\n    if (isIncludeNull) {\n      sb.append("(");\n    }\n    sb.append(sbInclude).append(")");\n    if (isIncludeNull) {\n      sb.append(" OR ").append(keyColumnName).append(" IS NULL )");\n    }\n  }\n\n  // Don\'t ignore Privacy Access\n  if (!this.vo.IsPersonalAccess) {\n    if (!this.vo.tableData[AD_Table_ID].IsView && this.vo.tableData[AD_Table_ID].HasKey) {\n      var lockedIDs = " NOT IN ( SELECT Record_ID FROM AD_Private_Access WHERE AD_Table_ID = " + AD_Table_ID + " AND AD_User_ID <> " + this.vo.AD_User_ID + " AND IsActive = \'Y\' )";\n      //if (lockedIDs.length > 0) {\n      if (sb.length() > 0) sb.append(" AND ");\n      sb.append(keyColumnName).append(lockedIDs);\n      //}\n    }\n  }\n  //\n  m_recordAccess = null;\n  return sb.toString();\n}; // getRecordWhere\n\n/**\r\n     * Get Doc Where Clause Value\r\n     * \r\n     * @param tableName\r\n     *            TableName\r\n     * @return where clause or null (if access all doc)\r\n     */\nVIS.MRole.getDocWhere = function (TableName) {\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var executeScalar = function (sql, params, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    var value = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dataSet = new VIS.DB.DataSet().toJson(jString);\n      var dataSet = new VIS.DB.DataSet().toJson(jString);\n      if (dataSet.getTable(0).getRows().length > 0) {\n        value = dataSet.getTable(0).getRow(0).getCell(0);\n      } else {\n        value = null;\n      }\n      dataSet.dispose();\n      dataSet = null;\n      if (async) {\n        callback(value);\n      }\n    });\n    return value;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n  if (!this.vo.IsUseBPRestrictions) return "";\n  var hasBPColumn = false;\n  var sql = "VIS_101";\n  var param = [];\n  param[0] = new VIS.DB.SqlParam("@TableName", TableName);\n  var ret = executeScalar(sql, param);\n  hasBPColumn = (ret ? parseInt(ret) : 0) != 0;\n  if (!hasBPColumn) return "";\n  var AD_User_ID = VIS.context.getAD_User_ID();\n\n  //var docAccess = "(EXISTS (SELECT 1 FROM C_BPartner bp INNER JOIN AD_User u "\n  //    + "ON (u.C_BPartner_ID=bp.C_BPartner_ID) "\n  //    + " WHERE u.AD_User_ID="\n  //    + AD_User_ID\n  //    + " AND bp.C_BPartner_ID="\n  //    + TableName\n  //    + ".C_BPartner_ID)"\n  //    + " OR EXISTS (SELECT 1 FROM C_BP_Relation bpr INNER JOIN AD_User u "\n  //    + "ON (u.C_BPartner_ID=bpr.C_BPartnerRelation_ID) "\n  //    + " WHERE u.AD_User_ID="\n  //    + AD_User_ID\n  //    + " AND bpr.C_BPartner_ID=" + TableName + ".C_BPartner_ID)";\n\n  //var hasUserColumn = false;\n  //var sql1 = "SELECT count(*) FROM AD_Table t "\n  //    + "INNER JOIN AD_Column c ON (t.AD_Table_ID=c.AD_Table_ID) "\n  //    + "WHERE t.tableName=\'" + TableName\n  //    + "\' AND c.ColumnName=\'AD_User_ID\' ";\n\n  //ret = executeScalar(sql);\n  //hasUserColumn = (ret ? parseInt(ret) : 0) != 0;\n\n  //if (hasUserColumn)\n  //    docAccess += " OR " + TableName + ".AD_User_ID =" + AD_User_ID;\n  //docAccess += ")";\n\n  //GetDocWhere\n\n  $.ajax({\n    type: \'Get\',\n    async: false,\n    url: VIS.Application.contextUrl + "Form/GetDocWhere",\n    data: {\n      AD_User_ID: AD_User_ID,\n      TableName: TableName\n    },\n    success: function (data) {\n      docAccess = data;\n    },\n    error: function (err) {\n      console.log(err);\n    }\n  });\n  return docAccess;\n}; // getDocWhere\n\nVIS.MRole.addAccessSQL = function (SQL, TableNameIn, fullyQualified, rw, addOrgAccessForAll) {\n  if (fullyQualified && VIS.Utility.Util.isEmpty(TableNameIn)) fullyQualified = false;\n  var retSQL = new StringBuilder();\n\n  // Cut off last ORDER BY clause\n  var orderBy = "";\n  var posOrder = SQL.lastIndexOf(" ORDER BY ");\n  if (posOrder != -1) {\n    orderBy = SQL.substring(posOrder);\n    retSQL.append(SQL.substring(0, posOrder));\n  } else retSQL.append(SQL);\n\n  // Parse SQL\n  var asp = new VIS.AccessSqlParser(retSQL.toString());\n  var ti = asp.getTableInfo(asp.getMainSqlIndex());\n\n  // Do we have to add WHERE or AND\n  if (asp.getMainSql().indexOf(" WHERE ") == -1) retSQL.append(" WHERE ");else retSQL.append(" AND ");\n\n  // Use First Table\n  var tableName = "";\n  if (ti.length > 0 && (ti[0].getTableName().equals(TableNameIn) || ti[0].getSynonym().equals(TableNameIn))) {\n    tableName = ti[0].getSynonym();\n    if (VIS.Utility.Util.isEmpty(tableName)) tableName = ti[0].getTableName();\n  }\n  // Check for error condition\n  if (!VIS.Utility.Util.isEmpty(TableNameIn) && VIS.Utility.Util.isEmpty(tableName)) {\n    var msg = "TableName not correctly parsed - TableNameIn=" + TableNameIn + " - " + asp;\n    if (ti.length > 0) msg += " - #1 " + ti[0];\n    msg += "\\n = " + SQL;\n    this.log.log(VIS.Logging.Level.SEVERE, msg);\n    tableName = TableNameIn;\n  }\n\n  // Client Access\n  if (fullyQualified && !VIS.Utility.Util.isEmpty(tableName)) retSQL.append(tableName).append(".");\n  retSQL.append(this.getClientWhere(rw));\n\n  // Org Access\n  if (!this.vo.IsAccessAllOrgs && !addOrgAccessForAll) {\n    retSQL.append(" AND ");\n    if (fullyQualified && !VIS.Utility.Util.isEmpty(tableName)) retSQL.append(this.getOrgWhere(tableName, rw));else retSQL.append(this.getOrgWhere(null, rw));\n  }\n  if (this.vo.IsUseBPRestrictions) {\n    var documentWhere = this.getDocWhere(tableName);\n    if (documentWhere.length() > 0) {\n      retSQL.append(" AND ");\n      retSQL.append(documentWhere);\n    }\n  }\n\n  // ** Data Access **\n  var AD_Table_ID = 0;\n  var element;\n  for (i = 0; i < ti.length; i++) {\n    element = ti[i];\n    var TableName = element.getTableName();\n    AD_Table_ID = this.getAD_Table_ID(TableName);\n\n    // Org Access\n    if (AD_Table_ID != 0 && !this.vo.IsAccessAllOrgs && addOrgAccessForAll) {\n      var TableSynonym = element.getSynonym();\n      if (TableSynonym == null || TableSynonym.isEmpty()) TableSynonym = TableName;\n      retSQL.append(" AND ");\n      retSQL.append(this.getOrgWhere(TableSynonym, rw));\n    }\n\n    // Data Table Access\n    if (AD_Table_ID != 0 && !this.getIsTableAccess(AD_Table_ID, !rw)) {\n      retSQL.append(" AND 1=3"); // prevent access at all\n      this.log.fine("No access to AD_Table_ID=" + AD_Table_ID + " - " + TableName + " - " + retSQL);\n      break; // no need to check further\n    }\n\n    // Data Column Access\n\n    // Data Record Access\n    var keyColumnName = "";\n    if (fullyQualified) {\n      keyColumnName = element.getSynonym(); // table synonym\n      if (keyColumnName.length == 0) keyColumnName = TableName;\n      keyColumnName += ".";\n    }\n    keyColumnName += TableName + "_ID"; // derived from table\n\n    // log.fine("addAccessSQL - " + TableName + "(" + AD_Table_ID + ") "\n    // + keyColumnName);\n    var recordWhere = this.getRecordWhere(AD_Table_ID, keyColumnName, rw);\n    if (recordWhere.length > 0) {\n      retSQL.append(" AND ").append(recordWhere);\n      this.log.finest("Record access - " + recordWhere);\n    }\n  } // for all table info\n  element = null;\n\n  // Dependent Records (only for main SQL)\n  var mainSql = asp.getMainSql();\n  AD_Table_ID = 0;\n  var whereColumnName = null;\n  var includes = [];\n  var excludes = [];\n  var isIncludeNull = false; // include null value with include exclude list\n  //MTable table = MTable.get(getCtx(), TableNameIn);\n  var m_recordDependentAccess = this.vo.recordDependentAccess;\n  for (i = 0; i < m_recordDependentAccess.length; i++) {\n    var columnName = this.getKeyColumnName(asp.getTableInfo(asp.getMainSqlIndex()), m_recordDependentAccess[i].KeyColumnName);\n    if (columnName == null) continue; // no key column\n    var posColumn = mainSql.indexOf(columnName);\n    if (posColumn == -1) continue;\n    // we found the column name - make sure it\'s a clumn name\n    var charCheck = mainSql.charAt(posColumn - 1); // before\n    if (!(charCheck == \',\' || charCheck == \'.\' || charCheck == \' \' || charCheck == \'(\')) continue;\n    charCheck = mainSql.charAt(posColumn + columnName.length); // after\n    if (!(charCheck == \',\' || charCheck == \' \' || charCheck == \')\')) continue;\n    if (AD_Table_ID != 0 && AD_Table_ID != m_recordDependentAccess[i].AD_Table_ID) retSQL.append(this.getDependentAccess(whereColumnName, includes, excludes, isIncludeNull));\n    AD_Table_ID = m_recordDependentAccess[i].AD_Table_ID;\n    // *** we found the column in the main query\n    if (m_recordDependentAccess[i].IsExclude) {\n      excludes.push(m_recordDependentAccess[i].Record_ID);\n      this.log.fine("Exclude " + columnName + " - " + m_recordDependentAccess[i]);\n    } else if (!rw || !m_recordDependentAccess[i].IsReadOnly) {\n      includes.push(m_recordDependentAccess[i].Record_ID);\n      //log.fine("Include " + columnName + " - "\n      //        + m_recordDependentAccess[i]);\n    }\n    isIncludeNull = isIncludeNull || m_recordDependentAccess[i].IsIncludeNull;\n    var column = null; // table.getColumn(columnName);\n    if (column != null) {\n      var columnSQL = ""; //column.getColumnSQL();\n      if (columnSQL == null || columnSQL.length() == 0) whereColumnName = this.getDependentRecordWhereColumn(mainSql, columnName);else whereColumnName = columnSQL;\n    } else whereColumnName = this.getDependentRecordWhereColumn(mainSql, columnName);\n  } // for all dependent records\n\n  retSQL.append(this.getDependentAccess(whereColumnName, includes, excludes, isIncludeNull));\n  //\n  retSQL.append(orderBy);\n  // console.log(retSQL.toString());\n  //log.finest(retSQL.toString());\n  return retSQL.toString();\n};\nVIS.MRole.getWindowAccess = function (AD_Window_ID) {\n  if (this.vo.windowAccess[AD_Window_ID]) return true;else return false;\n}; //get window access\n\nVIS.MRole.getFormAccess = function (AD_Form_ID) {\n  if (this.vo.formAccess[AD_Form_ID]) return true;else return false;\n}; //get form access\n\nVIS.MRole.getProcessAccess = function (AD_Process_ID) {\n  if (this.vo.processAccess[AD_Process_ID]) return true;else return false;\n}; //get process access\n\nVIS.MRole.getIsClientAccess = function (AD_Client_ID, rw) {\n  if (AD_Client_ID == 0 && !rw)\n    // can always read System\n    return true;\n  if (this.vo.IsAccessAllOrgs) return this.vo.AD_Client_ID == AD_Client_ID; // User has access to given AD_Client_ID if the role is defined on that AD_Client_ID\n  // Positive List\n  var m_orgAccess = this.vo.orgAccess;\n  for (var i = 0; i < m_orgAccess.length; i++) {\n    if (m_orgAccess[i].AD_Client_ID == AD_Client_ID) {\n      if (!rw) return true;\n      if (!m_orgAccess[i].readOnly)\n        // rw\n        return true;\n    }\n  }\n  return false;\n}; // isClientAccess\n\nVIS.MRole.getIsShowPreference = function () {\n  return this.vo.IsShowPreference;\n};\nVIS.MRole.getName = function () {\n  return this.vo.Name;\n};\nVIS.MRole.getPreferenceType = function () {\n  return this.vo.PreferenceType;\n};\nVIS.MRole.getIsDisplayClient = function () {\n  return this.vo.IsDisplayClient;\n};\nVIS.MRole.getIsDisplayOrg = function () {\n  return this.vo.IsDisplayOrg;\n};\nVIS.MRole.getIsPersonalLock = function () {\n  return this.vo.IsPersonalLock;\n};\nVIS.MRole.getIsShowSharedRecord = function () {\n  return this.vo.ShowSharedRecords;\n};\nVIS.MRole.getMaxQueryRecords = function () {\n  return this.vo.MaxQueryRecords; //TODO\n};\nVIS.MRole.getIsQueryMax = function (noRecords) {\n  var max = this.getMaxQueryRecords();\n  return max > 0 && noRecords > max;\n};\nVIS.MRole.getIsShowAcct = function () {\n  return this.vo.IsShowAcct;\n};\nVIS.MRole.getIsOverwritePriceLimit = function () {\n  return this.vo.IsOverwritePriceLimit;\n};\nVIS.MRole.getIsOverrideReturnPolicy = function () {\n  return this.vo.IsOverrideReturnPolicy;\n};\nVIS.MRole.getIsDisableMenu = function () {\n  return this.vo.IsDisableMenu;\n};\nVIS.MRole.getHomePage = function () {\n  return this.vo.HomePage;\n};\nVIS.MRole.toStringX = function (ctx) {\n  var sb = new StringBuilder();\n  sb.append(VIS.Msg.translate(ctx, "AD_Role_ID")).append("=").append(this.getName()).append(" - ").append(VIS.Msg.translate(ctx, "IsCanExport")).append("=").append(this.getIsCanExport()).append(" - ").append(VIS.Msg.translate(ctx, "IsCanReport")).append("=").append(this.getIsCanReport()).append(VIS.Env.NL).append(VIS.Env.NL);\n  return sb.toString();\n};\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/role.js?')},"./Areas/VIS/Scripts/app/secure-engine.js":()=>{eval('/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\n;\nvar CryptoJS = CryptoJS || function (u, p) {\n  var d = {},\n    l = d.lib = {},\n    s = function () {},\n    t = l.Base = {\n      extend: function (a) {\n        s.prototype = this;\n        var c = new s();\n        a && c.mixIn(a);\n        c.hasOwnProperty("init") || (c.init = function () {\n          c.$super.init.apply(this, arguments);\n        });\n        c.init.prototype = c;\n        c.$super = this;\n        return c;\n      },\n      create: function () {\n        var a = this.extend();\n        a.init.apply(a, arguments);\n        return a;\n      },\n      init: function () {},\n      mixIn: function (a) {\n        for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]);\n        a.hasOwnProperty("toString") && (this.toString = a.toString);\n      },\n      clone: function () {\n        return this.init.prototype.extend(this);\n      }\n    },\n    r = l.WordArray = t.extend({\n      init: function (a, c) {\n        a = this.words = a || [];\n        this.sigBytes = c != p ? c : 4 * a.length;\n      },\n      toString: function (a) {\n        return (a || v).stringify(this);\n      },\n      concat: function (a) {\n        var c = this.words,\n          e = a.words,\n          j = this.sigBytes;\n        a = a.sigBytes;\n        this.clamp();\n        if (j % 4) for (var k = 0; k < a; k++) c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4);else if (65535 < e.length) for (k = 0; k < a; k += 4) c[j + k >>> 2] = e[k >>> 2];else c.push.apply(c, e);\n        this.sigBytes += a;\n        return this;\n      },\n      clamp: function () {\n        var a = this.words,\n          c = this.sigBytes;\n        a[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4);\n        a.length = u.ceil(c / 4);\n      },\n      clone: function () {\n        var a = t.clone.call(this);\n        a.words = this.words.slice(0);\n        return a;\n      },\n      random: function (a) {\n        for (var c = [], e = 0; e < a; e += 4) c.push(4294967296 * u.random() | 0);\n        return new r.init(c, a);\n      }\n    }),\n    w = d.enc = {},\n    v = w.Hex = {\n      stringify: function (a) {\n        var c = a.words;\n        a = a.sigBytes;\n        for (var e = [], j = 0; j < a; j++) {\n          var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255;\n          e.push((k >>> 4).toString(16));\n          e.push((k & 15).toString(16));\n        }\n        return e.join("");\n      },\n      parse: function (a) {\n        for (var c = a.length, e = [], j = 0; j < c; j += 2) e[j >>> 3] |= parseInt(a.substr(j, 2), 16) << 24 - 4 * (j % 8);\n        return new r.init(e, c / 2);\n      }\n    },\n    b = w.Latin1 = {\n      stringify: function (a) {\n        var c = a.words;\n        a = a.sigBytes;\n        for (var e = [], j = 0; j < a; j++) e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255));\n        return e.join("");\n      },\n      parse: function (a) {\n        for (var c = a.length, e = [], j = 0; j < c; j++) e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4);\n        return new r.init(e, c);\n      }\n    },\n    x = w.Utf8 = {\n      stringify: function (a) {\n        try {\n          return decodeURIComponent(escape(b.stringify(a)));\n        } catch (c) {\n          throw Error("Malformed UTF-8 data");\n        }\n      },\n      parse: function (a) {\n        return b.parse(unescape(encodeURIComponent(a)));\n      }\n    },\n    q = l.BufferedBlockAlgorithm = t.extend({\n      reset: function () {\n        this._data = new r.init();\n        this._nDataBytes = 0;\n      },\n      _append: function (a) {\n        "string" == typeof a && (a = x.parse(a));\n        this._data.concat(a);\n        this._nDataBytes += a.sigBytes;\n      },\n      _process: function (a) {\n        var c = this._data,\n          e = c.words,\n          j = c.sigBytes,\n          k = this.blockSize,\n          b = j / (4 * k),\n          b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0);\n        a = b * k;\n        j = u.min(4 * a, j);\n        if (a) {\n          for (var q = 0; q < a; q += k) this._doProcessBlock(e, q);\n          q = e.splice(0, a);\n          c.sigBytes -= j;\n        }\n        return new r.init(q, j);\n      },\n      clone: function () {\n        var a = t.clone.call(this);\n        a._data = this._data.clone();\n        return a;\n      },\n      _minBufferSize: 0\n    });\n  l.Hasher = q.extend({\n    cfg: t.extend(),\n    init: function (a) {\n      this.cfg = this.cfg.extend(a);\n      this.reset();\n    },\n    reset: function () {\n      q.reset.call(this);\n      this._doReset();\n    },\n    update: function (a) {\n      this._append(a);\n      this._process();\n      return this;\n    },\n    finalize: function (a) {\n      a && this._append(a);\n      return this._doFinalize();\n    },\n    blockSize: 16,\n    _createHelper: function (a) {\n      return function (b, e) {\n        return new a.init(e).finalize(b);\n      };\n    },\n    _createHmacHelper: function (a) {\n      return function (b, e) {\n        return new n.HMAC.init(a, e).finalize(b);\n      };\n    }\n  });\n  var n = d.algo = {};\n  return d;\n}(Math);\n(function () {\n  var u = CryptoJS,\n    p = u.lib.WordArray;\n  u.enc.Base64 = {\n    stringify: function (d) {\n      var l = d.words,\n        p = d.sigBytes,\n        t = this._map;\n      d.clamp();\n      d = [];\n      for (var r = 0; r < p; r += 3) for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++) d.push(t.charAt(w >>> 6 * (3 - v) & 63));\n      if (l = t.charAt(64)) for (; d.length % 4;) d.push(l);\n      return d.join("");\n    },\n    parse: function (d) {\n      var l = d.length,\n        s = this._map,\n        t = s.charAt(64);\n      t && (t = d.indexOf(t), -1 != t && (l = t));\n      for (var t = [], r = 0, w = 0; w < l; w++) if (w % 4) {\n        var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4),\n          b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4);\n        t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4);\n        r++;\n      }\n      return p.create(t, r);\n    },\n    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="\n  };\n})();\n(function (u) {\n  function p(b, n, a, c, e, j, k) {\n    b = b + (n & a | ~n & c) + e + k;\n    return (b << j | b >>> 32 - j) + n;\n  }\n  function d(b, n, a, c, e, j, k) {\n    b = b + (n & c | a & ~c) + e + k;\n    return (b << j | b >>> 32 - j) + n;\n  }\n  function l(b, n, a, c, e, j, k) {\n    b = b + (n ^ a ^ c) + e + k;\n    return (b << j | b >>> 32 - j) + n;\n  }\n  function s(b, n, a, c, e, j, k) {\n    b = b + (a ^ (n | ~c)) + e + k;\n    return (b << j | b >>> 32 - j) + n;\n  }\n  for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++) b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0;\n  r = r.MD5 = v.extend({\n    _doReset: function () {\n      this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]);\n    },\n    _doProcessBlock: function (q, n) {\n      for (var a = 0; 16 > a; a++) {\n        var c = n + a,\n          e = q[c];\n        q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360;\n      }\n      var a = this._hash.words,\n        c = q[n + 0],\n        e = q[n + 1],\n        j = q[n + 2],\n        k = q[n + 3],\n        z = q[n + 4],\n        r = q[n + 5],\n        t = q[n + 6],\n        w = q[n + 7],\n        v = q[n + 8],\n        A = q[n + 9],\n        B = q[n + 10],\n        C = q[n + 11],\n        u = q[n + 12],\n        D = q[n + 13],\n        E = q[n + 14],\n        x = q[n + 15],\n        f = a[0],\n        m = a[1],\n        g = a[2],\n        h = a[3],\n        f = p(f, m, g, h, c, 7, b[0]),\n        h = p(h, f, m, g, e, 12, b[1]),\n        g = p(g, h, f, m, j, 17, b[2]),\n        m = p(m, g, h, f, k, 22, b[3]),\n        f = p(f, m, g, h, z, 7, b[4]),\n        h = p(h, f, m, g, r, 12, b[5]),\n        g = p(g, h, f, m, t, 17, b[6]),\n        m = p(m, g, h, f, w, 22, b[7]),\n        f = p(f, m, g, h, v, 7, b[8]),\n        h = p(h, f, m, g, A, 12, b[9]),\n        g = p(g, h, f, m, B, 17, b[10]),\n        m = p(m, g, h, f, C, 22, b[11]),\n        f = p(f, m, g, h, u, 7, b[12]),\n        h = p(h, f, m, g, D, 12, b[13]),\n        g = p(g, h, f, m, E, 17, b[14]),\n        m = p(m, g, h, f, x, 22, b[15]),\n        f = d(f, m, g, h, e, 5, b[16]),\n        h = d(h, f, m, g, t, 9, b[17]),\n        g = d(g, h, f, m, C, 14, b[18]),\n        m = d(m, g, h, f, c, 20, b[19]),\n        f = d(f, m, g, h, r, 5, b[20]),\n        h = d(h, f, m, g, B, 9, b[21]),\n        g = d(g, h, f, m, x, 14, b[22]),\n        m = d(m, g, h, f, z, 20, b[23]),\n        f = d(f, m, g, h, A, 5, b[24]),\n        h = d(h, f, m, g, E, 9, b[25]),\n        g = d(g, h, f, m, k, 14, b[26]),\n        m = d(m, g, h, f, v, 20, b[27]),\n        f = d(f, m, g, h, D, 5, b[28]),\n        h = d(h, f, m, g, j, 9, b[29]),\n        g = d(g, h, f, m, w, 14, b[30]),\n        m = d(m, g, h, f, u, 20, b[31]),\n        f = l(f, m, g, h, r, 4, b[32]),\n        h = l(h, f, m, g, v, 11, b[33]),\n        g = l(g, h, f, m, C, 16, b[34]),\n        m = l(m, g, h, f, E, 23, b[35]),\n        f = l(f, m, g, h, e, 4, b[36]),\n        h = l(h, f, m, g, z, 11, b[37]),\n        g = l(g, h, f, m, w, 16, b[38]),\n        m = l(m, g, h, f, B, 23, b[39]),\n        f = l(f, m, g, h, D, 4, b[40]),\n        h = l(h, f, m, g, c, 11, b[41]),\n        g = l(g, h, f, m, k, 16, b[42]),\n        m = l(m, g, h, f, t, 23, b[43]),\n        f = l(f, m, g, h, A, 4, b[44]),\n        h = l(h, f, m, g, u, 11, b[45]),\n        g = l(g, h, f, m, x, 16, b[46]),\n        m = l(m, g, h, f, j, 23, b[47]),\n        f = s(f, m, g, h, c, 6, b[48]),\n        h = s(h, f, m, g, w, 10, b[49]),\n        g = s(g, h, f, m, E, 15, b[50]),\n        m = s(m, g, h, f, r, 21, b[51]),\n        f = s(f, m, g, h, u, 6, b[52]),\n        h = s(h, f, m, g, k, 10, b[53]),\n        g = s(g, h, f, m, B, 15, b[54]),\n        m = s(m, g, h, f, e, 21, b[55]),\n        f = s(f, m, g, h, v, 6, b[56]),\n        h = s(h, f, m, g, x, 10, b[57]),\n        g = s(g, h, f, m, t, 15, b[58]),\n        m = s(m, g, h, f, D, 21, b[59]),\n        f = s(f, m, g, h, z, 6, b[60]),\n        h = s(h, f, m, g, C, 10, b[61]),\n        g = s(g, h, f, m, j, 15, b[62]),\n        m = s(m, g, h, f, A, 21, b[63]);\n      a[0] = a[0] + f | 0;\n      a[1] = a[1] + m | 0;\n      a[2] = a[2] + g | 0;\n      a[3] = a[3] + h | 0;\n    },\n    _doFinalize: function () {\n      var b = this._data,\n        n = b.words,\n        a = 8 * this._nDataBytes,\n        c = 8 * b.sigBytes;\n      n[c >>> 5] |= 128 << 24 - c % 32;\n      var e = u.floor(a / 4294967296);\n      n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360;\n      n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360;\n      b.sigBytes = 4 * (n.length + 1);\n      this._process();\n      b = this._hash;\n      n = b.words;\n      for (a = 0; 4 > a; a++) c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360;\n      return b;\n    },\n    clone: function () {\n      var b = v.clone.call(this);\n      b._hash = this._hash.clone();\n      return b;\n    }\n  });\n  t.MD5 = v._createHelper(r);\n  t.HmacMD5 = v._createHmacHelper(r);\n})(Math);\n(function () {\n  var u = CryptoJS,\n    p = u.lib,\n    d = p.Base,\n    l = p.WordArray,\n    p = u.algo,\n    s = p.EvpKDF = d.extend({\n      cfg: d.extend({\n        keySize: 4,\n        hasher: p.MD5,\n        iterations: 1\n      }),\n      init: function (d) {\n        this.cfg = this.cfg.extend(d);\n      },\n      compute: function (d, r) {\n        for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) {\n          n && s.update(n);\n          var n = s.update(d).finalize(r);\n          s.reset();\n          for (var a = 1; a < p; a++) n = s.finalize(n), s.reset();\n          b.concat(n);\n        }\n        b.sigBytes = 4 * q;\n        return b;\n      }\n    });\n  u.EvpKDF = function (d, l, p) {\n    return s.create(p).compute(d, l);\n  };\n})();\nCryptoJS.lib.Cipher || function (u) {\n  var p = CryptoJS,\n    d = p.lib,\n    l = d.Base,\n    s = d.WordArray,\n    t = d.BufferedBlockAlgorithm,\n    r = p.enc.Base64,\n    w = p.algo.EvpKDF,\n    v = d.Cipher = t.extend({\n      cfg: l.extend(),\n      createEncryptor: function (e, a) {\n        return this.create(this._ENC_XFORM_MODE, e, a);\n      },\n      createDecryptor: function (e, a) {\n        return this.create(this._DEC_XFORM_MODE, e, a);\n      },\n      init: function (e, a, b) {\n        this.cfg = this.cfg.extend(b);\n        this._xformMode = e;\n        this._key = a;\n        this.reset();\n      },\n      reset: function () {\n        t.reset.call(this);\n        this._doReset();\n      },\n      process: function (e) {\n        this._append(e);\n        return this._process();\n      },\n      finalize: function (e) {\n        e && this._append(e);\n        return this._doFinalize();\n      },\n      keySize: 4,\n      ivSize: 4,\n      _ENC_XFORM_MODE: 1,\n      _DEC_XFORM_MODE: 2,\n      _createHelper: function (e) {\n        return {\n          encrypt: function (b, k, d) {\n            return ("string" == typeof k ? c : a).encrypt(e, b, k, d);\n          },\n          decrypt: function (b, k, d) {\n            return ("string" == typeof k ? c : a).decrypt(e, b, k, d);\n          }\n        };\n      }\n    });\n  d.StreamCipher = v.extend({\n    _doFinalize: function () {\n      return this._process(!0);\n    },\n    blockSize: 1\n  });\n  var b = p.mode = {},\n    x = function (e, a, b) {\n      var c = this._iv;\n      c ? this._iv = u : c = this._prevBlock;\n      for (var d = 0; d < b; d++) e[a + d] ^= c[d];\n    },\n    q = (d.BlockCipherMode = l.extend({\n      createEncryptor: function (e, a) {\n        return this.Encryptor.create(e, a);\n      },\n      createDecryptor: function (e, a) {\n        return this.Decryptor.create(e, a);\n      },\n      init: function (e, a) {\n        this._cipher = e;\n        this._iv = a;\n      }\n    })).extend();\n  q.Encryptor = q.extend({\n    processBlock: function (e, a) {\n      var b = this._cipher,\n        c = b.blockSize;\n      x.call(this, e, a, c);\n      b.encryptBlock(e, a);\n      this._prevBlock = e.slice(a, a + c);\n    }\n  });\n  q.Decryptor = q.extend({\n    processBlock: function (e, a) {\n      var b = this._cipher,\n        c = b.blockSize,\n        d = e.slice(a, a + c);\n      b.decryptBlock(e, a);\n      x.call(this, e, a, c);\n      this._prevBlock = d;\n    }\n  });\n  b = b.CBC = q;\n  q = (p.pad = {}).Pkcs7 = {\n    pad: function (a, b) {\n      for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4) l.push(d);\n      c = s.create(l, c);\n      a.concat(c);\n    },\n    unpad: function (a) {\n      a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255;\n    }\n  };\n  d.BlockCipher = v.extend({\n    cfg: v.cfg.extend({\n      mode: b,\n      padding: q\n    }),\n    reset: function () {\n      v.reset.call(this);\n      var a = this.cfg,\n        b = a.iv,\n        a = a.mode;\n      if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor;else c = a.createDecryptor, this._minBufferSize = 1;\n      this._mode = c.call(a, this, b && b.words);\n    },\n    _doProcessBlock: function (a, b) {\n      this._mode.processBlock(a, b);\n    },\n    _doFinalize: function () {\n      var a = this.cfg.padding;\n      if (this._xformMode == this._ENC_XFORM_MODE) {\n        a.pad(this._data, this.blockSize);\n        var b = this._process(!0);\n      } else b = this._process(!0), a.unpad(b);\n      return b;\n    },\n    blockSize: 4\n  });\n  var n = d.CipherParams = l.extend({\n      init: function (a) {\n        this.mixIn(a);\n      },\n      toString: function (a) {\n        return (a || this.formatter).stringify(this);\n      }\n    }),\n    b = (p.format = {}).OpenSSL = {\n      stringify: function (a) {\n        var b = a.ciphertext;\n        a = a.salt;\n        return (a ? s.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r);\n      },\n      parse: function (a) {\n        a = r.parse(a);\n        var b = a.words;\n        if (1398893684 == b[0] && 1701076831 == b[1]) {\n          var c = s.create(b.slice(2, 4));\n          b.splice(0, 4);\n          a.sigBytes -= 16;\n        }\n        return n.create({\n          ciphertext: a,\n          salt: c\n        });\n      }\n    },\n    a = d.SerializableCipher = l.extend({\n      cfg: l.extend({\n        format: b\n      }),\n      encrypt: function (a, b, c, d) {\n        d = this.cfg.extend(d);\n        var l = a.createEncryptor(c, d);\n        b = l.finalize(b);\n        l = l.cfg;\n        return n.create({\n          ciphertext: b,\n          key: c,\n          iv: l.iv,\n          algorithm: a,\n          mode: l.mode,\n          padding: l.padding,\n          blockSize: a.blockSize,\n          formatter: d.format\n        });\n      },\n      decrypt: function (a, b, c, d) {\n        d = this.cfg.extend(d);\n        b = this._parse(b, d.format);\n        return a.createDecryptor(c, d).finalize(b.ciphertext);\n      },\n      _parse: function (a, b) {\n        return "string" == typeof a ? b.parse(a, this) : a;\n      }\n    }),\n    p = (p.kdf = {}).OpenSSL = {\n      execute: function (a, b, c, d) {\n        d || (d = s.random(8));\n        a = w.create({\n          keySize: b + c\n        }).compute(a, d);\n        c = s.create(a.words.slice(b), 4 * c);\n        a.sigBytes = 4 * b;\n        return n.create({\n          key: a,\n          iv: c,\n          salt: d\n        });\n      }\n    },\n    c = d.PasswordBasedCipher = a.extend({\n      cfg: a.cfg.extend({\n        kdf: p\n      }),\n      encrypt: function (b, c, d, l) {\n        l = this.cfg.extend(l);\n        d = l.kdf.execute(d, b.keySize, b.ivSize);\n        l.iv = d.iv;\n        b = a.encrypt.call(this, b, c, d.key, l);\n        b.mixIn(d);\n        return b;\n      },\n      decrypt: function (b, c, d, l) {\n        l = this.cfg.extend(l);\n        c = this._parse(c, l.format);\n        d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt);\n        l.iv = d.iv;\n        return a.decrypt.call(this, b, c, d.key, l);\n      }\n    });\n}();\n(function () {\n  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++) a[c] = 128 > c ? c << 1 : c << 1 ^ 283;\n  for (var e = 0, j = 0, c = 0; 256 > c; c++) {\n    var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4,\n      k = k >>> 8 ^ k & 255 ^ 99;\n    l[e] = k;\n    s[k] = e;\n    var z = a[e],\n      F = a[z],\n      G = a[F],\n      y = 257 * a[k] ^ 16843008 * k;\n    t[e] = y << 24 | y >>> 8;\n    r[e] = y << 16 | y >>> 16;\n    w[e] = y << 8 | y >>> 24;\n    v[e] = y;\n    y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e;\n    b[k] = y << 24 | y >>> 8;\n    x[k] = y << 16 | y >>> 16;\n    q[k] = y << 8 | y >>> 24;\n    n[k] = y;\n    e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1;\n  }\n  var H = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],\n    d = d.AES = p.extend({\n      _doReset: function () {\n        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++) if (j < d) e[j] = c[j];else {\n          var k = e[j - 1];\n          j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24);\n          e[j] = e[j - d] ^ k;\n        }\n        c = this._invKeySchedule = [];\n        for (d = 0; d < a; d++) j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>> 8 & 255]] ^ n[l[k & 255]];\n      },\n      encryptBlock: function (a, b) {\n        this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l);\n      },\n      decryptBlock: function (a, c) {\n        var d = a[c + 1];\n        a[c + 1] = a[c + 3];\n        a[c + 3] = d;\n        this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s);\n        d = a[c + 1];\n        a[c + 1] = a[c + 3];\n        a[c + 3] = d;\n      },\n      _doCryptBlock: function (a, b, c, d, e, j, l, f) {\n        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++) var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t = d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t;\n        q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++];\n        s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++];\n        t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++];\n        n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++];\n        a[b] = q;\n        a[b + 1] = s;\n        a[b + 2] = t;\n        a[b + 3] = n;\n      },\n      keySize: 8\n    });\n  u.AES = p._createHelper(d);\n})();\n;\n(function (VIS, CryptoJS) {\n  var key = CryptoJS.enc.Utf8.parse(VIS.context.getContext(\'#key\'));\n  var iv = CryptoJS.enc.Utf8.parse(VIS.context.getContext(\'#key\'));\n  //var iv = CryptoJS.enc.Utf8.parse(\'7061737323313233\');\n\n  VIS.secureEngine = {\n    encrypt: function (value) {\n      var encrypted = "";\n      if (value || value === 0) {\n        encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value.toString()), key, {\n          keySize: 128 / 8,\n          iv: iv,\n          mode: CryptoJS.mode.CBC,\n          padding: CryptoJS.pad.Pkcs7\n        });\n      }\n      return encrypted.toString();\n    },\n    decrypt: function (value) {\n      var decrypted = "";\n      if (value || value.length > 12) {\n        decrypted = CryptoJS.AES.decrypt(value, key, {\n          keySize: 128 / 8,\n          iv: iv,\n          mode: CryptoJS.mode.CBC,\n          padding: CryptoJS.pad.Pkcs7\n        });\n      }\n      return decrypted.toString(CryptoJS.enc.Utf8);\n    },\n    isEncrypted: function (value) {\n      if (value || value.length > 12) return true;\n    }\n  };\n})(VIS, CryptoJS);\n\n//var key = CryptoJS.enc.Utf8.parse(\'7061737323313233\');//\n//var iv = CryptoJS.enc.Utf8.parse(\'7061737323313233\');\n//var key = CryptoJS.enc.Utf8.parse(\'c417fab36e83f0298b92b028b0e008bf0e3f9351f1cd944e9ebf2883868214a0\');\n//var iv = CryptoJS.enc.Utf8.parse(\'15655d12242a3d4d8b92b0bf0e3fc417\');\n//console.log(iv);\n//var key = CryptoJS.enc.Hex.parse(\'xBf6s26D8CmLkrAosOAIvw4/k1HxzZROnr8og4aCFKA=\');\n//var iv = CryptoJS.enc.Hex.parse(\'FWVdEiQqPU2LkrC/Dj/EFw==\');\n//var key = CryptoJS.enc.Utf8.parse(\'7061737323313233\');\n////var iv = CryptoJS.enc.Utf8.parse(\'7061737323313233\');\n//var key = CryptoJS.enc.Hex.parse("xBf6s26D8CmLkrAosOAIvw4/k1HxzZROnr8og4aCFKA=");\n//var iv = CryptoJS.enc.Hex.parse("xBf6s26D8CmLkrAosOAIvw4/k1HxzZROnr8og4aCFKA=");\n//console.log(key);\n//console.log(iv);\n\n//xBf6s26D8CmLkrAosOAIvw4/k1HxzZROnr8og4aCFKA=\n//FWVdEiQqPU2LkrC/Dj/EFw==\n//"It works"\n//lE53Pu7j\n\n//var encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse("I"), key,\n//    {\n//        keySize: 128 / 8,\n//        iv: iv,\n//        mode: CryptoJS.mode.CBC,\n//        padding: CryptoJS.pad.Pkcs7\n//    });\n\n//console.log(encrypted.toString());\n\n////:+Ijpt1GDVgM4MqMAQUwf0Q== \n\n//var decrypted = CryptoJS.AES.decrypt("xSWY0ZcQSmaflZvqO49wPw==", key, {\n//    keySize: 128 / 8,\n//    iv: iv,\n//    mode: CryptoJS.mode.CBC,\n//    padding: CryptoJS.pad.Pkcs7\n//});\n\n//alert(navigator.appVersion);\n\n//function requestFullScreen(element) {\n//    // Supports most browsers and their versions.\n//    var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;\n\n//    if (requestMethod) { // Native full screen.\n//        requestMethod.call(element);\n//    } else if (typeof window.ActiveXObject !== "undefined") { // Older IE.\n//        var wscript = new ActiveXObject("WScript.Shell");\n//        if (wscript !== null) {\n//            wscript.SendKeys("{F11}");\n//        }\n//    }\n//}\n\n//var elem = document.body; // Make the body go full screen.\n//requestFullScreen(elem);\n//var x = VIS.secureEngine.encrypt("raghu");\n//console.log(x);\n//console.log(VIS.secureEngine.decrypt(x));\n\n//console.log(\'Encrypted :\' + encrypted);\n\n//console.log(\'Key :\' + encrypted.key);\n//console.log(\'Salt :\' + encrypted.salt);\n//console.log(\'iv :\' + encrypted.iv);\n//console.log(\'Decrypted : \' + decrypted);\n//console.log(\'utf8 = \' + decrypted.toString(CryptoJS.enc.Utf8));\n\n//console.log("a678617d4b77d3e4ddbeafa2b2241723");\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/secure-engine.js?')},"./Areas/VIS/Scripts/app/ssemanager.js":()=>{eval(';\n(function (VIS, $) {\n  function SSEMgr() {\n    var _observers = [];\n    function register(source) {\n      if (_observers.indexOf(source) < 0) {\n        _observers.push(source);\n      }\n    }\n    function unregister(source) {\n      var index = _observers.indexOf(source);\n      if (index > -1) {\n        _observers.splice(index, 1);\n      }\n    }\n    function notify(evtData) {\n      for (var i = 0, j = _observers.length; i < j; i++) {\n        if (_observers[i].onmessage) _observers[i].onmessage(evtData);\n      }\n    }\n    ;\n    function start() {\n      //var source = new EventSource(\'Channel/MsgForToastr?varificationToken=\' + $("#vis_antiForgeryToken").val());\n      var source = new EventSource(\'Message/Get\');\n      source.onmessage = function (e) {\n        var returnedItem = JSON.parse(e.data);\n        if (returnedItem && returnedItem.length > 0) {\n          for (var i = 0, j = returnedItem.length; i < j; i++) {\n            if (returnedItem[i].Event == "MSG") {\n              toastr.success(returnedItem[i].Message, \'\', {\n                timeOut: 4000,\n                "positionClass": "toast-top-center",\n                "closeButton": true\n              });\n            } else notify(returnedItem[i]);\n          }\n        }\n      };\n    }\n    return {\n      start: start,\n      register: register,\n      unregister: unregister\n    };\n  }\n  ;\n  VIS.sseManager = SSEMgr();\n  function UserMgr() {}\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/ssemanager.js?')},"./Areas/VIS/Scripts/app/treepanel.js":()=>{eval(';\n(function (VIS, $) {\n  function TreePanel(windowNo, hasBar, editable, onDemandTrees, gc) {\n    this.selectionChangeListner = null; //tree selection changed\n    this.windowNo = windowNo;\n    var tableName = "";\n    var rootNode = null;\n    var treeValues = [];\n    var treeText = [];\n    var lastSeletedIndex = -1; //tree search textbox\n\n    var contextNode = null;\n    var movingNode = null;\n    var targetNode = null;\n    var AD_Tree_ID = 0;\n    var AD_Tab_ID = 0;\n    this.onDemandTree = onDemandTrees;\n    this.currentNode = 0;\n    this.searchNode = false;\n    this.isSummaryNode = false;\n    this.gc = gc;\n    var self = this;\n\n    //UI\n    var $root = null;\n    var $treeRoot = null,\n      $searchRoot = null,\n      $text = null,\n      $btn = null;\n    var $btnSearch = null,\n      $txtSearch = null;\n    var $ulPopup = null;\n    var $liCopy, $liMove, $liCancel, $liMoveHere;\n    var baseUrl = VIS.Application.contextUrl;\n    var nonQueryUrl = baseUrl + "JsonData/ExecuteNonQuer";\n    var executeQueries = function (sqls, params, callback) {\n      var async = callback ? true : false;\n      var ret = null;\n      var dataIn = {\n        sql: sqls.join("/"),\n        param: params\n      };\n\n      //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n      $.ajax({\n        url: nonQueryUrl + \'ies\',\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(dataIn)\n      }).done(function (json) {\n        ret = json;\n        if (callback) {\n          callback(json);\n        }\n      });\n      return ret;\n    };\n    function initializeComponent() {\n      $root = $("<table style=\'width:100%;height:100%\'><tr><td style=\'height:100%\'><div class=\'vis-css-treewindow\' ></td></tr>" + "<tr><td style=\'text-align:center\'><div class=\'vis-tree-search\'><div class=\'input-group\'>" + "<input type=\'text\' class=\'form-control ui-autocomplete-input\' placeholder=\'Search\'>" + "  <span class=\'input-group-append\'><button class=\'input-group-text\'><a href=\'#\' class=\'vis vis-search\' tabindex=\'-1\'></a></button></span>" + "</div></div></td></tr></table>");\n\n      //$root = $("<div class=\'vis-height-full\' >");\n      $treeRoot = $root.find(".vis-css-treewindow");\n      $treeRoot.css({\n        "max-width": "290px"\n      });\n      $searchRoot = $root.find(".vis-tree-search");\n      $btnSearch = $root.find(".input-group-addon");\n      $txtSearch = $root.find("input");\n      // $root.append($treeRoot).append($searchRoot);\n\n      $ulPopup = $("<ul class=\'vis-apanel-rb-ul\'>");\n      $liCopy = $("<li data-action=\'Copy\'>").text(VIS.Msg.getMsg("Copy"));\n      $liMove = $("<li data-action=\'Move\'>").text(VIS.Msg.getMsg("Move"));\n      $liCancel = $("<li data-action=\'Cancel\'>").text(VIS.Msg.getMsg("Cancel"));\n      $ulPopup.append($liCopy);\n      if (self.onDemandTree) {\n        $liMoveHere = $("<li data-action=\'MoveHere\'>").text(VIS.Msg.getMsg("MoveHere"));\n        $ulPopup.append($liMoveHere);\n      }\n      $ulPopup.append($liMove).append($liCancel);\n    }\n    ;\n    initializeComponent();\n    var self = this;\n    this.setSize = function (height, width) {\n      //$root.height(height);\n      $treeRoot.height(height - 40);\n    };\n    this.setTabID = function (tabID) {\n      AD_Tab_ID = tabID;\n    };\n    this.initTree = function (_AD_Tree_ID) {\n      AD_Tree_ID = _AD_Tree_ID;\n      if (this.onDemandTree == "undefined" || this.onDemandTree == null) {\n        this.onDemandTree = false;\n      }\n      var data = {\n        AD_Tree_ID: AD_Tree_ID,\n        editable: editable,\n        windowNo: windowNo,\n        onDemandTree: this.onDemandTree,\n        AD_Tab_ID: AD_Tab_ID\n      };\n      AD_Tree_ID = AD_Tree_ID;\n      VIS.dataContext.getTreeAsString(data, function (str) {\n        $treeRoot.html(str);\n        createArray();\n        rootNode = $treeRoot.find(">ul");\n        tableName = rootNode.data("tablename");\n        rootNode = rootNode.find(">li>ul");\n        if (self.onDemandTree) {\n          // Select First Node\n          if ($treeRoot) {\n            var $treeUl = $treeRoot.find(\'ul\');\n            if ($treeUl && $treeUl.length > 1) {\n              var $treeChild = $($treeUl.find(\'ul\')[0]).children();\n              if ($treeChild && $treeChild.length > 0 && !self.gc.isZoomAction) {\n                $($treeChild[0]).trigger("click");\n              } else {\n                if (!self.gc.isZoomAction) {\n                  self.gc.query(self.selectionChangeListner.aPanel.curTab.getOnlyCurrentDays(), 0, false); //\tupdated\n                  self.selectionChangeListner.aPanel.setBusy(false);\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n    function moveNode() {\n      if (movingNode == null || targetNode == null || movingNode.data("value") == targetNode.data("value")) return;\n      var oldParent = movingNode.parent(); // Moving LI Item\n\n      movingNode.remove(); //Remove Item From Tree\n\n      var oldId = oldParent.parent().data("value"); //find Li of this UL List\n\n      var newId = null;\n      var newParent = targetNode; //set PrentNode\n      var index = 0;\n      if (targetNode.data("summary") != \'Y\') {\n        //If Not a Leaf Node\n        newParent = targetNode.parent(); //Find New Parnet \n        index = targetNode.index(); //Index Of Taget Node\n        movingNode.insertAfter(newParent.children()[index]); //Insert New Node After this Node\n        newId = newParent.parent().data("value"); //get Id New Parent\n      } else {\n        //Summary Node\n\n        var targetC = newParent.find(">ul"); //find Ul of summary LI\n        if (targetC.children().length > 0)\n          //Has Child\n          {\n            movingNode.insertBefore(targetC.children()[index]); //Insert At Index ))\n          } else movingNode.appendTo(targetC); //Append Child\n\n        newId = newParent.data("value"); //New Parent Id\n        newParent = targetC; //Set new Parent\n      }\n      var queries = [];\n      var childs = oldParent.children();\n      var i = 0;\n      var sql = "";\n      var oldParentIDs = [];\n      var newParentIDs = [];\n      for (var i = 0; i < childs.length; i++) {\n        var nd = $(childs[i]);\n        oldParentIDs.push(nd.data("value"));\n      }\n      if (oldId != newId) {\n        childs = newParent.children();\n        //i = 0;\n        for (i = 0; i < childs.length; i++) {\n          var nd = $(childs[i]);\n          newParentIDs.push(nd.data("value"));\n        }\n      }\n      $.ajax({\n        type: \'post\',\n        async: true,\n        url: VIS.Application.contextUrl + "Form/UpdateTree",\n        data: {\n          oldParentChildren: JSON.stringify(oldParentIDs),\n          newParentChildren: JSON.stringify(newParentIDs),\n          oldId: oldId,\n          newId: newId,\n          AD_Tree_ID: AD_Tree_ID,\n          tableName: tableName\n        },\n        success: function (data) {\n          console.log(data);\n        },\n        error: function (err) {}\n      });\n    }\n    function createArray() {\n      treeValues.length = 0;\n      treeText.length = 0;\n      $treeRoot.find("LI").each(function (key, val) {\n        var s = $(val);\n        var v = s.find(">label");\n        if (v.length < 1) {\n          v = s.find(">A");\n        }\n        treeValues.push(s.data("value"));\n        treeText.push(v.text());\n      });\n    }\n    ;\n    this.updateArray = function (val, id) {\n      treeValues.push(id);\n      treeText.push(val);\n    };\n\n    //Privilzed function\n    this.getRoot = function () {\n      return $root;\n    };\n    $treeRoot.on(VIS.Events.onClick, function (event) {\n      if (event.target.nodeName === "INPUT" || event.target.nodeName === "LI" || event.target.nodeName === "A") {\n        var o = $(event.target);\n        if (event.target.nodeName === "INPUT") o = $(event.target.parentNode);\n        if (self.selectionChangeListner) {\n          if (self.onDemandTree) {\n            var selNode = $root.find("*.vis-css-treewindow-selected");\n            if (selNode.length > 0) selNode.removeClass("vis-css-treewindow-selected");\n            var node = $($(event.target).parent());\n            if (node.find(">label").length > 0) {\n              node.find(">label").addClass("vis-css-treewindow-selected");\n            } else {\n              node.find(">a").addClass("vis-css-treewindow-selected");\n              $(node.find(\'label\')[0]).addClass("vis-css-treewindow-selected");\n            }\n          } else {\n            var selNode = $root.find("*.vis-css-treewindow-selected");\n            if (selNode.length > 0) selNode.removeClass("vis-css-treewindow-selected");\n            var node = $($(event.target).parent());\n            if (node.find(">label").length > 0) {\n              node.find(">label").addClass("vis-css-treewindow-selected");\n            } else {\n              node.find(">a").addClass("vis-css-treewindow-selected");\n              $(node.find(\'label\')[0]).addClass("vis-css-treewindow-selected");\n            }\n          }\n          if (o.data("summary") == \'Y\') self.isSummaryNode = true;else self.isSummaryNode = false;\n          self.currentNode = o.data("value");\n          self.selectionChangeListner.nodeSelectionChanged({\n            newValue: o.data("value"),\n            propertyName: "",\n            isSummaryNode: self.isSummaryNode\n          });\n        }\n        event.stopPropagation();\n      } else if (event.target.nodeName === "SPAN" && (event.target.parentNode.nodeName == "SPAN" || event.target.parentNode.nodeName == "LI")) {\n        var o1 = $(event.target.parentNode);\n        if (event.target.parentNode.nodeName === "SPAN") o1 = $(event.target.parentNode.parentNode);\n\n        //Set Up Ul\n        contextNode = o1;\n        $liCopy.hide();\n        $liCancel.hide();\n        $liMove.hide();\n        if (self.onDemandTree) {\n          $liMoveHere.hide();\n        }\n        if (movingNode != null) {\n          //if (o1.data("summary") !== \'Y\')\n          //    return;\n          $liMove.show();\n          $liCancel.show();\n        } else {\n          $liCopy.show();\n          if (self.onDemandTree) {\n            $liMoveHere.show();\n          }\n        }\n        $(event.target).w2overlay($ulPopup.clone(true));\n      }\n    });\n    $btnSearch.on(VIS.Events.onTouchStartOrClick, function (event) {\n      self.searchNode = true;\n      searchNode(event);\n    });\n    $txtSearch.on("keydown", function (ev) {\n      if (ev.keyCode == 13) {\n        self.searchNode = true;\n        searchNode(ev);\n      }\n    });\n    function searchNode(event) {\n      var text = $txtSearch.val(); //  $rootTree.find("li[data-value=\'" + nodeID + "\']");\n      if (text == null || text.length < 2) {\n        self.searchNode = false;\n        return;\n      }\n      var index = self.containsTextInArray(treeText, text, lastSeletedIndex);\n      if (index > -1) {\n        var val = treeValues[index];\n        self.currentNode = val;\n        lastSeletedIndex = index;\n        self.setSelectedNode(val);\n        if (self.selectionChangeListner) {\n          self.selectionChangeListner.nodeSelectionChanged({\n            newValue: val,\n            propertyName: ""\n          });\n        } else {\n          self.searchNode = false;\n        }\n      } else {\n        self.searchNode = false;\n      }\n    }\n    ;\n    $ulPopup.on(VIS.Events.onTouchStartOrClick, "LI", function (e) {\n      var action = $(e.target).data("action");\n      if (action == \'Copy\') {\n        movingNode = contextNode;\n      } else if (action == \'Move\') {\n        targetNode = contextNode;\n        moveNode();\n        movingNode = null;\n        targetNode = null;\n        contextNode = null;\n      } else if (action == \'MoveHere\') {\n        var selectedRecs = self.selectionChangeListner.vTable.getSelection(true);\n        var selectedIDs = \'\';\n\n        //self.selectionChangeListner.vTable.grid.get(1)[self.selectionChangeListner.getMTab().gridTable.keyColumnName.toLower()]\n\n        self.selectionChangeListner.aPanel.setBusy(true);\n        if (selectedRecs && selectedRecs.length > 0) {\n          var grd = self.selectionChangeListner.vTable.grid;\n          var keyCName = self.selectionChangeListner.getMTab().gridTable.keyColumnName.toLower();\n          for (var i = 0; i < selectedRecs.length; i++) {\n            if (i == 0) {\n              selectedIDs += grd.get(selectedRecs[i] + 1)[keyCName];\n            } else {\n              selectedIDs += "," + grd.get(selectedRecs[i] + 1)[keyCName];\n            }\n          }\n          //grd = null;\n          //keyCName = null;\n        }\n        var dataIns = {\n          nodeID: selectedIDs,\n          oldParentID: 0,\n          newParentID: contextNode.data("value"),\n          AD_Tree_ID: AD_Tree_ID\n        };\n        $.ajax({\n          url: VIS.Application.contextUrl + "Tree/UpdateTree",\n          dataType: "json",\n          data: dataIns,\n          success: function (result) {\n            var data = result;\n            if (data > 0) {\n              self.selectionChangeListner.removeRecord(); // Remove selected record from grid\n            }\n          },\n          error: function (eror) {\n            self.selectionChangeListner.aPanel.setBusy(false);\n          }\n        });\n        contextNode = null;\n        movingNode = null;\n      } else if (action == \'Cancel\') {\n        movingNode = null;\n        contextNode = null;\n      }\n    });\n    this.getRootNode = function () {\n      return rootNode;\n    };\n    this.disposeLocal = function () {\n      $treeRoot.off(VIS.Events.onClick);\n      $btnSearch.off(VIS.Events.onTouchStartOrClick);\n      $ulPopup.off(VIS.Events.onTouchStartOrClick);\n      $ulPopup = null;\n      $treeRoot = null;\n      $root.remove();\n      $root = null;\n      self = null;\n    };\n  }\n  ;\n  TreePanel.prototype.containsTextInArray = function (arry, text, lastSelIndex) {\n    for (var i = lastSelIndex + 1; i < arry.length; i++) {\n      if (i == -1) continue;\n      if (arry[i].trim().toLowerCase().contains(text.trim().toLowerCase())) return i;\n    }\n    ;\n    if (lastSelIndex > -1) {\n      lastSelIndex = -1;\n      return this.containsTextInArray(arry, text, lastSelIndex);\n    }\n    return -1;\n  };\n  TreePanel.prototype.addSelectionChangeListner = function (listner) {\n    this.selectionChangeListner = listner;\n  };\n\n  /**\r\n   *  Set Selection to Node in Event\r\n   *  @param nodeID Node ID\r\n   * \t@return true if selected\r\n   */\n  TreePanel.prototype.setSelectedNode = function (nodeID) {\n    //log.config("ID=" + nodeID);\n    if (nodeID != -1) {\n      //\tnew is -1\n\n      return this.selectID(nodeID, true); //  show selection\n    }\n    this.currentNode = 0;\n    return false;\n  }; //  setSelectedNode\n\n  /*  Select ID in Tree\r\n    *  @param nodeID\tNode ID\r\n    *  @param show\tscroll to node\r\n    * \t@return true if selected\r\n    */\n  TreePanel.prototype.selectID = function (nodeID, show) {\n    if (this.onDemandTree && !this.searchNode) {\n      return;\n    }\n    this.currentNode = nodeID;\n    this.searchNode = false;\n    var root = this.getRoot();\n    var node = root.find("li[data-value=\'" + nodeID + "\']");\n    this.isSummaryNode = node.data("summary") == "Y";\n    if (node != null && node.length > 0) {\n      var selNode = root.find("*.vis-css-treewindow-selected");\n      if (selNode.length > 0) selNode.removeClass("vis-css-treewindow-selected");\n      if (node.find(">label").length > 0) {\n        node.find(">label").addClass("vis-css-treewindow-selected");\n      } else {\n        node.find(">a").addClass("vis-css-treewindow-selected");\n      }\n      var oNode = node;\n\n      //if (this.onDemandTree) {\n      //}\n      //else {\n      while (node != null) {\n        var c = node.find("input");\n        if (c.length > 0) {\n          if (!c.prop("checked")) c.prop("checked", true);\n        }\n        node = node.parent();\n        if (node[0].nodeName == "UL") {\n          node = node.parent();\n        }\n        if (node[0].nodeName == "LI") {\n          ;\n        } else node = null;\n      }\n      //}\n      oNode[0].scrollIntoView();\n      return true;\n    }\n    //log.info("Node not found; ID=" + nodeID);\n    return false;\n  }; //  selectID\n\n  /**************************************************************************\r\n  *  Node Changed - synchromize Node\r\n  *\r\n  *  @param  save    true the node was saved (changed/added), false if the row was deleted\r\n  *  @param  keyID   the ID of the row changed\r\n  *  @param  name\tname\r\n  *  @param  description\tdescription\r\n  *  @param  isSummary\tsummary node\r\n  *  @param  imageIndicator image indicator\r\n  */\n  TreePanel.prototype.nodeChanged = function (save, keyID, name, description, isSummary, imageIndicator) {\n    console.log("Save=" + save + ", KeyID=" + keyID + ", Name=" + name + ", Description=" + description + ", IsSummary=" + isSummary + ", ImageInd=" + imageIndicator);\n    //\t+ ", root=" + m_root);\n    //\tif ID==0=root - don\'t update it\n    if (keyID == 0) return;\n    var root = this.getRoot();\n    var found = false;\n    var node = root.find("li[data-value=\'" + keyID + "\']");\n    if (node != null && node.length > 0) {\n      found = true;\n    }\n\n    //  Node not found and saved -> new\n    if (!found && save) {\n      //var rn = this.getRootNode();\n      //rn.append(this.getNode(keyID, name, description, isSummary, imageIndicator, this.windowNo));\n      if (this.onDemandTree) {\n        var selNode = root.find("*.vis-css-treewindow-selected");\n        if (selNode && isSummary) {\n          var ul = $(selNode.parent()).find(\'ul\');\n          if (ul && ul.length > 0) {\n            $(ul[0]).append(this.getNode(keyID, name, description, isSummary, imageIndicator, this.windowNo));\n          } else {\n            $(selNode.parent()).append($(\'<ul>\').append(this.getNode(keyID, name, description, isSummary, imageIndicator, this.windowNo)));\n          }\n        }\n      } else {\n        var selNode = root.find("*.vis-css-treewindow-selected");\n        var isSum = selNode.parent("li").data("summary") == "Y";\n        //if selected node is summary level node, then insert new item of tree in that node.\n        if (selNode && isSum) {\n          var ul = $(selNode.parent()).find(\'ul\');\n          if (ul && ul.length > 0) {\n            $(ul[0]).append(this.getNode(keyID, name, description, isSummary, imageIndicator, this.windowNo));\n          } else {\n            $(selNode.parent()).append($(\'<ul>\').append(this.getNode(keyID, name, description, isSummary, imageIndicator, this.windowNo)));\n          }\n          this.updateArray(name, keyID);\n        } else {\n          var rn = this.getRootNode();\n          var nod = this.getNode(keyID, name, description, isSummary, imageIndicator, this.windowNo);\n          rn.append(nod);\n          nod[0].scrollIntoView();\n          this.updateArray(name, keyID);\n        }\n      }\n    }\n\n    //  Node found and saved -> change\n    else if (found && save) {\n      this.toggleTypeOfNode(node, isSummary, keyID, this.windowNo, imageIndicator);\n      //node.data("summary", isSummary ? "Y" : "N");\n      if (isSummary) {\n        if (node.find(">ul").length == 0) {\n          node.append($("<ul>"));\n        }\n      }\n      var txt = node.find(">label");\n      if (!txt || txt.length == 0) txt = node.find(">a");\n      if (txt.length > 0) txt.text(name);\n    }\n\n    //  Node found and not saved -> delete\n    else if (found && !save) {\n      var childs = node.find(">ul");\n      if (childs.length > 0) {\n        childs.remove();\n        this.getRootNode().append(childs.children());\n      }\n      node.remove();\n    }\n\n    //  Error\n    else {\n      //log.log(Level.SEVERE, "Save=" + save + ", KeyID=" + keyID + ", Node=" + node);\n      node = null;\n    }\n\n    //  Nothing to display\n    if (node == null) return;\n  }; //  nodeChanged\n\n  TreePanel.prototype.getNode = function (keyID, name, description, isSummary, imageIndicator, windowNo) {\n    name = VIS.Utility.encodeText(name);\n    var str = \'<li data-value="\' + keyID + \'"\';\n    if (isSummary) {\n      str += \'data-summary="Y" class="vis-hasSubMenu"> \' + \'<input type="checkbox" id="\' + windowNo + keyID + \'">\' + \'<label for="\' + windowNo + keyID + \'">\' + name + \'</label><span class="vis-treewindow-span">\' + \'<span class="vis-css-treewindow-arrow-up"></span></span><ul><ul>\';\n    } else {\n      str += \'data-summary="N"> \' + \'<a href="javascript:void(0)" data-value="\' + keyID + \'" data-action="\' + imageIndicator + \'" data-actionid="\' + keyID + \'">\' + \'<span style="font-size:11px;margin-right:5px"\' + this.getClassIcon(imageIndicator) + \'></span>\' + name + \'</a > \' + \'<span class="vis-treewindow-span"><span class="vis-css-treewindow-arrow-up"> \' + \'</span></span></li>\';\n      //str += \'data-summary="N"> \' +\n      //\' <img src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/login/\' + this.getIcon(imageIndicator) + \'"> \' +\n      // \' <a href="javascript:void(0)" data-value="\' + keyID + \'" data-action="\' + imageIndicator + \'" data-actionid="\' + keyID + \'"> \' +\n      // name + \'</a><span class="vis-treewindow-span"><span class="vis-css-treewindow-arrow-up"> \' +\n      // \'</span></span></li>\';\n    }\n    return $(str);\n  };\n  TreePanel.prototype.getIcon = function (initial) {\n    switch (initial) {\n      case "W":\n        return "mWindow.png";\n      case "R":\n        return "mReport.png";\n      case "P":\n        return "mProcess.png";\n      case "F":\n        return "mWorkflow.png";\n      case "B":\n        return "mWorkbench.png";\n      case "X":\n        return "mWindow.png";\n      case "V":\n        return "mWindow.png";\n      case "D":\n        return "mDocAction.png";\n      default:\n        return "mWindow.png";\n    }\n  };\n  TreePanel.prototype.getClassIcon = function (initial) {\n    switch (initial) {\n      case "W":\n        return "class = \'fa fa-window-maximize\'";\n      case "R":\n        return "class = \'vis vis-report\'";\n      case "P":\n        return "class = \'fa fa-cog\'";\n      case "T":\n        return "class = \'fa fa-cog\'";\n      case "F":\n        return "class = \'fa fa-clone\'";\n      case "B":\n        return "class = \'fa fa-clone\'";\n      case "X":\n        return "class = \'fa fa-list-alt\'";\n      case "V":\n        return "class = \'fa fa-clone\'";\n      case "D":\n        return "class = \'fa fa-clone\'";\n      case "O":\n        return "class = \'fa fa-circle\'";\n      default:\n        return "class = \'fa fa-clone\'";\n    }\n  };\n  TreePanel.prototype.toggleTypeOfNode = function (node, isSummary, keyID, windowNo, imageIndicator) {\n    var sum = node.data("summary") == "Y";\n    if (isSummary !== sum) {\n      var ul = node.find(">ul");\n      ul.remove();\n      node.data("summary", isSummary ? "Y" : "N");\n      node.toggleClass("vis-hasSubMenu");\n      if (isSummary) {\n        node.html(\'<input type="checkbox" id="\' + windowNo + keyID + \'">\' + \'<label for="\' + windowNo + keyID + \'">\' + name + \'</label><span class="vis-treewindow-span">\' + \'<span class="vis-css-treewindow-arrow-up"></span></span>\');\n      } else {\n        node.html(\'<img src="\' + VIS.Application.contextUrl + \'Areas/VIS/Images/login/\' + this.getIcon(imageIndicator) + \'"> \' + \' <a href="javascript:void(0)" data-value="\' + keyID + \'" data-action="\' + imageIndicator + \'" data-actionid="\' + keyID + \'"> \' + name + \'</a><span class="vis-treewindow-span"><span class="vis-css-treewindow-arrow-up"> \' + \'</span></span>\');\n      }\n      if (ul.length > 0) node.append(ul);\n    } else if (!isSummary) {\n      var a = node.find(">a");\n      if (a.length > 0) {\n        var action = a.data("action");\n        if (a != imageIndicator) {\n          node.find(">img").attr(\'src\', VIS.Application.contextUrl + \'Areas/VIS/Images/login/\' + this.getIcon(imageIndicator));\n          a.data("action", imageIndicator);\n        }\n        a = action = null;\n      }\n    }\n  };\n  TreePanel.prototype.dispose = function () {\n    this.disposeLocal();\n    this.addPropertyChangeListner = null;\n  };\n  VIS.TreePanel = TreePanel;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/treepanel.js?')},"./Areas/VIS/Scripts/app/utility.js":()=>{eval(';\nVISUtil = window.VISUtil || {};\n;\n(function (VIS, $) {\n  VIS.Events = function () {\n    var onTouchStartOrClick = "click";\n    var onTouchStartAndClick = "touchstart";\n    var onTouchEndOrClick = "click";\n    if (\'onmouseover\' in document && \'ontouchstart\' in document) {\n      onTouchStartOrClick = "click";\n      onTouchStartAndClick = "click";\n    } else if (\'ontouchstart\' in document) {\n      onTouchStartOrClick = \'touchstart\';\n      onTouchStartAndClick = \'touchstart\';\n    } else {\n      onTouchStartOrClick = \'click\';\n      onTouchStartAndClick = "click";\n    }\n    if (\'ontouchend\' in document) {\n      onTouchEndOrClick = \'touchend\';\n    } else {\n      onTouchEndOrClick = \'click\';\n    }\n    var onClick = "click";\n    return {\n      onTouchStartOrClick: onTouchStartOrClick,\n      onTouchEndOrClick: onTouchEndOrClick,\n      onClick: onClick,\n      onTouchStartAndClick: onTouchStartAndClick\n    };\n  }();\n  VIS.Actions = {\n    zoom: "zoom",\n    refresh: "refresh",\n    preference: "preference",\n    add: "add",\n    update: "update",\n    remove: "delete",\n    contact: "contact",\n    addnewrec: "AddNewRecord",\n    addproduct: "AddProduct" //Added by Ruby as discuss with Mandeep Sir/Mukesh Arora Sir --01 May 2023\n  };\n  VIS.EnvConstants = {\n    /** WindowNo for Find           */\n    WINDOW_FIND: 1110,\n    /** WinowNo for MLookup         */\n    WINDOW_MLOOKUP: 1111,\n    /** WindowNo for PrintCustomize */\n    WINDOW_CUSTOMIZE: 1112,\n    /** WindowNo for PrintCustomize */\n    WINDOW_INFO: 1113,\n    /** Tab for Info                */\n    TAB_INFO: 1113,\n    /** WindowNo for AccountEditor */\n    WINDOW_ACCOUNT: 1114,\n    /** Temp WindowNo for GridField */\n    WINDOW_TEMP: 11100000,\n    /** Maximum int value --code by raghu*/\n    INT32MAXVALUE: 2147483647\n  };\n\n  //**********************  NumberFormating and Min,Max and fraction Length Setting **********************//    \n  function Format(maxIntDigit, maxFractionDigit, minFractionDigit) {\n    var SetIntDigit = function (val) {\n      if (isNaN(val) || val === null) {\n        return 0;\n      }\n      var orgStr = val.toString();\n      var deciPos = orgStr.indexOf(\'.\');\n      //if sending object is decimal type\n      if (deciPos != -1) {\n        var beforeDeciStr = orgStr.substring(0, deciPos);\n        if (beforeDeciStr.length > maxIntDigit) {\n          beforeDeciStr = beforeDeciStr.substring(0, maxIntDigit);\n          var finalStr = beforeDeciStr + orgStr.substring(deciPos, orgStr.Length - deciPos);\n          return finalStr;\n        }\n      } else\n        //if sending object is integer type    \n        {\n          //if (orgStr.length > maxIntDigit) {\n          //    var finalStr = orgStr.substring(0, maxIntDigit);\n          //    if (finalStr > VIS.EnvConstants.INT32MAXVALUE) {\n          //        return VIS.EnvConstants.INT32MAXVALUE;\n          //    }\n          //    //parseint work fine only when no fraction otherwise it convert 1.8 to 1\n          //    return parseInt(orgStr.substring(0, maxIntDigit));\n          //}\n          if (maxFractionDigit === 0 && minFractionDigit === 0) {\n            if (orgStr > VIS.EnvConstants.INT32MAXVALUE) {\n              //return max integer value\n              return VIS.EnvConstants.INT32MAXVALUE;\n            } else if (orgStr < -1 * (VIS.EnvConstants.INT32MAXVALUE + 1)) {\n              //return minimum integer value\n              return -1 * (VIS.EnvConstants.INT32MAXVALUE + 1);\n            }\n          }\n        }\n      return val;\n    };\n\n    /// <summary>\n    /// return formatted string \n    /// if value is greate than system default integer max value\n    /// then slice value to set integer max\n    /// </summary>\n    /// <param name="val"></param>\n    /// <returns></returns>\n    this.GetFormatedValue = function (val) {\n      var o = SetIntDigit(val).toString();\n      if (minFractionDigit != 0) {\n        if (o.indexOf(".") <= -1) {\n          o = parseFloat(o).toFixed(minFractionDigit);\n        } else if (o.split(".")[1].length > minFractionDigit) {\n          o = parseFloat(o).toFixed(maxFractionDigit);\n          o = parseFloat(o);\n        } else if (minFractionDigit === maxFractionDigit) {\n          o = parseFloat(o).toFixed(minFractionDigit);\n        } else if (o.split(".")[1].length < minFractionDigit) {\n          o = parseFloat(o).toFixed(minFractionDigit);\n        }\n      }\n      //Also remove extra zero before return\n      return o;\n    };\n    this.GetConvertedNumber = function (val, dotFormatter) {\n      val = this.GetConvertedString(val, dotFormatter);\n      if (dotFormatter) {\n        var inputSplit = val.split(".");\n        // Check value without exponetial\n        if (!Number.isSafeInteger(Number(inputSplit[0]))) {\n          return Number.MAX_SAFE_INTEGER; // Set maximumn value\n        }\n        return Number(String(val).replace(/[^0-9.-]+/g, ""));\n      } else {\n        var inputSplit = val.split(",");\n        // Check value without exponetial\n        if (!Number.isSafeInteger(Number(inputSplit[0]))) {\n          return Number.MAX_SAFE_INTEGER; // Set maximumn value\n        }\n        return Number(String(val).replace(/[^0-9,-]+/g, "").replace(/[,]+/g, "."));\n      }\n    };\n\n    // Function to convert String To Number in 1000 Format\n    this.GetConvertedString = function (num, dotFormatter) {\n      var _tStr = "";\n      if (dotFormatter) {\n        //return String(String(num).replace(/[^0-9.-]+/g, ""));\n\n        _tStr = num.match(/[.]+/g);\n        if (_tStr != null && _tStr.length > 1) {\n          return "";\n        } else {\n          return String(String(num).replace(/[^0-9.-]+/g, ""));\n        }\n      } else {\n        //return String(String(num).replace(/[^0-9,-]+/g, "").replace(/[,]+/g, ","));\n\n        _tStr = num.match(/[,]+/g);\n        if (_tStr != null && _tStr.length > 1) {\n          return "";\n        } else {\n          return String(String(num).replace(/[^0-9,-]+/g, "").replace(/[,]+/g, ","));\n        }\n      }\n    };\n\n    //For to Format value as 1000 separator [, or .]\n    this.GetFormatAmount = function (_value, _typeFormat, dotFormatter) {\n      var language = window.navigator.language;\n\n      // For testing purpose\n      //language = "en-US";\n\n      var input = String(_value);\n      var inputSplit = "";\n      if (_typeFormat == "init") {\n        inputSplit = input.split(".");\n      } else if (_typeFormat == "blur" || _typeFormat == "formatOnly") {\n        if (dotFormatter) {\n          inputSplit = input.split(".");\n        } else {\n          inputSplit = input.split(",");\n        }\n      }\n      if (inputSplit[1] != undefined) {\n        var inputFrac = inputSplit[1].replace(/[\\D\\s\\,_\\-]+/g, "");\n      }\n      // Format the number string on thousand separator using the regex\n      var inputPrime = inputSplit[0].replace(/[\\s\\.\\,_]+/g, "");\n      inputPrime = inputPrime ? parseInt(inputPrime, 10) : 0;\n      if (inputFrac != undefined) {\n        if (_typeFormat == "init" || _typeFormat == "formatOnly") {\n          if (dotFormatter) {\n            // en-US\n            //return (inputPrime === 0) ? "" : (inputPrime.toLocaleString(language) + "." + inputFrac);\n            return inputPrime.toLocaleString(language) + "." + inputFrac;\n          } else {\n            // de-DE\n            //return (inputPrime === 0) ? "" : (inputPrime.toLocaleString(language) + "," + inputFrac);\n            return inputPrime.toLocaleString(language) + "," + inputFrac;\n          }\n        } else {\n          if (dotFormatter) {\n            return inputPrime + "." + inputFrac;\n          } else {\n            return inputPrime + "," + inputFrac;\n          }\n        }\n      } else {\n        if (_typeFormat == "init" || _typeFormat == "formatOnly") {\n          if (dotFormatter) {\n            // en-US\n            return inputPrime.toLocaleString(language);\n          } else {\n            // de-DE\n            return inputPrime.toLocaleString(language);\n          }\n        } else {\n          if (dotFormatter) {\n            return inputPrime;\n          } else {\n            return inputPrime;\n          }\n        }\n      }\n    };\n    this.getMinFractionDigit = function () {\n      return minFractionDigit;\n    };\n    this.getMaxFractionDigit = function () {\n      return maxFractionDigit;\n    };\n    this.getLocaleAmount = function (amount) {\n      //maximumFractionDigits set to 6, so that same decimal value can be generated. We assume that in our system there will be no amount more than 6 decimal places\n      var formattedAmount = this.GetFormatedValue(amount).toLocaleString(undefined, {\n        maximumFractionDigits: 6\n      }); //.toFixed(2);\n      // 2nd parameter changed from init to formatonly because init was checking . only.\n      // new case if browser culture is in decimal coma, and init is in decimal dot point\n      if (!VIS.Env.isDecimalPoint() && formattedAmount.contains(".")) formattedAmount = formattedAmount.replace(".", ",");\n      return this.GetFormatAmount(formattedAmount, "formatOnly", VIS.Env.isDecimalPoint());\n    };\n\n    /* privilized function */\n    this.dispose = function () {\n      this.GetFormatedValue = null;\n      this.GetConvertedNumber = null;\n      this.GetConvertedString = null;\n      this.GetFormatAmount = null;\n      SetIntDigit = null;\n    };\n  }\n  ;\n  VIS.Format = Format;\n\n  /*************  Utility  ***********************\r\n  \r\n  ************************************************/\n\n  VIS.Utility = {\n    divCoding: $(\'<div>\'),\n    inheritPrototype: function (subType, superType) {\n      //Perform inheritence in javascript way\n      var prototype = Object.create(superType.prototype); //create object\n      prototype.constructor = subType; //augment object\n      subType.prototype = prototype; //assign object\n      subType.prototype.$super = superType.prototype; //base proto\n    },\n    getBusyPanel: function () {\n      //Return Busy Indicator panel\n      var busy = $("<div>").html($("<strong>").html("Loading...."));\n      return busy;\n    },\n    getFunctionByName: function (functionName, context /*, args */) {\n      var args = [].slice.call(arguments).splice(2);\n      var namespaces = functionName.split(".");\n      var func = namespaces.pop();\n      for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n      }\n      return context[func];\n    },\n    utf8_to_b64: function (str) {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    },\n    b64_to_utf8: function (str) {\n      return decodeURIComponent(escape(window.atob(str)));\n    },\n    decodeText: function (str) {\n      return this.divCoding.html(str).text();\n    },\n    encodeText: function (str) {\n      //create a in-memory div, set it\'s inner text(which jQuery automatically encodes)\n      //then grab the encoded contents back out.  The div never exists on the page.\n      return this.divCoding.text(str).html();\n    }\n  };\n  VIS.Utility.encode = VIS.Utility.utf8_to_b64;\n  VIS.Utility.decode = VIS.Utility.b64_to_utf8;\n  //VIS.Utility.decodeText = VIS.Utility.decodeText;\n  //VIS.Utility.encodeText = VIS.Utility.encodeText;\n\n  /*************  Util  ***********************\r\n  Common Functions\r\n  ************************************************/\n  VIS.Utility.Util = {\n    getValueOfInt: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return 0;\n      }\n      if (isNaN(value)) {\n        return 0;\n      }\n      return parseInt(value.toString());\n    },\n    getValueOfDecimal: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return 0;\n      }\n      if (isNaN(value)) {\n        return 0;\n      }\n      return parseFloat(value.toString());\n    },\n    getValueOfDouble: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return 0;\n      }\n      if (isNaN(value)) {\n        return 0;\n      }\n      return parseFloat(value.toString());\n    },\n    getValueOfString: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return "";\n      }\n      if (value == null) {\n        return "";\n      }\n      return value.toString();\n    },\n    getValueOfDate: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return 0;\n      }\n      if (value) {\n        return new Date(value);\n      } else return null;\n    },\n    /** @param {datetime in string }\r\n    *to get formatted datetime*/\n    getValueOfFormattedDateTime: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return 0;\n      }\n      if (value) {\n        var now = new Date(value),\n          year,\n          month,\n          date,\n          hours,\n          minutes,\n          seconds,\n          formattedDateTime;\n        year = now.getFullYear();\n        month = now.getMonth().toString().length === 1 ? \'0\' + (now.getMonth() + 1).toString() : now.getMonth() + 1;\n        date = now.getDate().toString().length === 1 ? \'0\' + now.getDate().toString() : now.getDate();\n        hours = now.getHours().toString().length === 1 ? \'0\' + now.getHours().toString() : now.getHours();\n        minutes = now.getMinutes().toString().length === 1 ? \'0\' + now.getMinutes().toString() : now.getMinutes();\n        seconds = now.getSeconds().toString().length === 1 ? \'0\' + now.getSeconds().toString() : now.getSeconds();\n        formattedDateTime = year + \'-\' + month + \'-\' + date + \'T\' + hours + \':\' + minutes + \':\' + seconds;\n        return formattedDateTime;\n      } else return null;\n    },\n    //get formatted datetime\n\n    getValueOfBoolean: function (value) {\n      if (value == null || value.toString().trim() == "") {\n        return null;\n      }\n      if (value.toString().toLowerCase() == "true" || value.toString() == "Y") {\n        return true;\n      } else return false;\n    },\n    contains: function (arr, val) {\n      return arr.indexOf(val) > -1;\n    },\n    isEmpty: function (value) {\n      if (value == null || value.length === 0) return true;\n      return false;\n    },\n    cleanMnemonic: function (inStr) {\n      if (inStr == null || inStr.length == 0) return inStr;\n      var pos = inStr.indexOf(\'&\');\n      if (pos == -1) return inStr;\n      //\tSingle & - \'&&\' or \'& \' -> &\n      if (pos + 1 < inStr.length && inStr.charAt(pos + 1) != \' \') inStr = inStr.substring(0, pos) + inStr.substring(pos + 1);\n      return inStr;\n    },\n    scale: function (value) {\n      if (isNaN(value)) {\n        return 0;\n      }\n      //function whatDecimalSeparator() {\n      var n = 1.1;\n      n = n.toLocaleString().substring(1, 2);\n      //  return n;\n      //}\n      var pieces = value.toString().split(n);\n      // var pieces = numStr.split(n);  //Commented By Sarab numstr is Undefined\n      if (pieces.length > 2 || pieces.length == 1) {\n        return 0;\n      }\n      return pieces[1].length;\n    },\n    /**\r\n     * @param {any} Name Removes image from identifier and returns text\r\n     */\n    getIdentifierDisplayVal: function (Name) {\n      var val = "";\n      if (Name && Name.indexOf("Images/") > -1) {\n        val = Name.replace("^^" + Name.substring(Name.indexOf("Images/"), Name.lastIndexOf("^^") + 3), "_");\n        if (val.indexOf("Images/") > -1) {\n          val = val.replace(val.substring(val.indexOf("Images/"), val.lastIndexOf("^^") + 3), "_");\n        }\n        if (val.endsWith("_")) {\n          val = val.substring(0, val.length - 1);\n        }\n        if (val.startsWith("_")) {\n          val = val.substring(1);\n        }\n      } else val = Name;\n      return val;\n    }\n  };\n\n  //**********************  ENV  **********************//    \n  VIS.Env = function () {\n    var windowNo = 1;\n    var WINDOW_PAGE_SIZE = 50;\n    var window_height = 400;\n    var NULLString = "NULLValue";\n    var obscureTypes = {\n      DigitButLast4: "904",\n      DigitButFirstLast4: "944",\n      AlphanumButLast4: "A04",\n      AlphaNumButFirstLast4: "A44"\n    };\n    function getWindowNo() {\n      return windowNo++;\n    }\n    ;\n    function getCtx() {\n      return VIS.context;\n    }\n    ;\n    function parseContext(ctx, windowNo, tabNo, value, onlyWindow, ignoreUnparsable) {\n      if (typeof tabNo != "number") {\n        ignoreUnparsable = onlyWindow;\n        onlyWindow = value;\n        value = tabNo;\n        tabNo = 0;\n      }\n      if (value == null || value.length == 0) return "";\n      var token = "";\n      ;\n      var outStr = new String("");\n      var i = value.indexOf(\'@\');\n      // Check whether the @ is not the last in line (i.e. in EMailAdress or with wrong entries)\n      while (i != -1 && i != value.lastIndexOf("@")) {\n        var getValue = value.substring(0, i);\n        outStr += value.substring(0, i); // up to @\n        value = value.substring(i + 1, value.length); // from first @\n\n        var j = value.indexOf(\'@\'); // next @\n        if (j < 0) {\n          //_log.log(Level.SEVERE, "No second tag: " + inStr);\n          return ""; //\tno second tag\n        }\n        var ctxInfo = "";\n        var ctxInfo1 = "";\n        token = value.substring(0, j);\n        if (token.contains(".")) {\n          token = token.substring(0, token.indexOf("."));\n          //txInfo = ctx.getWindowContext(WindowNo, tabNo, token.substring(0, token.indexOf(".")), onlyWindow);\t// get context\n        }\n        ctxInfo = ctx.getWindowContext(windowNo, tabNo, token, onlyWindow); // get context\n\n        if (ctxInfo.length == 0 && (token.startsWith("#") || token.startsWith("$"))) ctxInfo = ctx.getContext(token); // get global context\n        if (ctxInfo.length == 0) {\n          //_log.config("No Context Win=" + WindowNo + " for: " + token);\n          if (!ignoreUnparsable) return "";\n          outStr += \' NULL \';\n          //\t\t\t\t\t\t//\ttoken not found\n        } else {\n          outStr += ctxInfo; // replace context with Context\n        }\n        value = value.substring(j + 1, value.length); // from second @\n        i = value.indexOf(\'@\');\n      }\n      outStr += value; // add the rest of the string\n      return outStr;\n    }\n    ;\n    function parseContext2(ctx, windowNo, tabNo, value, onlyWindow, ignoreUnparsable) {\n      if (typeof tabNo != "number") {\n        ignoreUnparsable = onlyWindow;\n        onlyWindow = value;\n        value = tabNo;\n        tabNo = 0;\n      }\n      var resultData = [];\n      if (value == null || value.length == 0) return "";\n      var token = "";\n      ;\n      var outStr = new String("");\n      var i = value.indexOf(\'@\');\n      // Check whether the @ is not the last in line (i.e. in EMailAdress or with wrong entries)\n      while (i != -1 && i != value.lastIndexOf("@")) {\n        var getValue = value.substring(0, i);\n        outStr += value.substring(0, i); // up to @\n        value = value.substring(i + 1, value.length); // from first @\n\n        var j = value.indexOf(\'@\'); // next @\n        if (j < 0) {\n          //_log.log(Level.SEVERE, "No second tag: " + inStr);\n          return ""; //\tno second tag\n        }\n        var ctxInfo = "";\n        var ctxInfo1 = "";\n        token = value.substring(0, j);\n        if (token.contains(".")) {\n          token = token.substring(0, token.indexOf("."));\n          //txInfo = ctx.getWindowContext(WindowNo, tabNo, token.substring(0, token.indexOf(".")), onlyWindow);\t// get context\n        }\n        ctxInfo = ctx.getWindowContext(windowNo, tabNo, token, onlyWindow); // get context\n\n        if (ctxInfo.length == 0 && (token.startsWith("#") || token.startsWith("$"))) ctxInfo = ctx.getContext(token); // get global context\n\n        if (ctxInfo.length == 0) {\n          //_log.config("No Context Win=" + WindowNo + " for: " + token);\n          if (!ignoreUnparsable) return "";\n          if (token.endsWith(\'_ID\')) {\n            resultData.push({\n              \'Key\': token,\n              \'Value\': -1\n            });\n          } else {\n            resultData.push({\n              \'Key\': token,\n              \'Value\': null\n            });\n          }\n          outStr += \' NULL \';\n          //\t\t\t\t\t\t//\ttoken not found\n        } else {\n          resultData.push({\n            \'Key\': token,\n            \'Value\': ctxInfo\n          });\n          outStr += ctxInfo; // replace context with Context\n        }\n        value = value.substring(j + 1, value.length); // from second @\n        i = value.indexOf(\'@\');\n      }\n      outStr += value; // add the rest of the string\n      return resultData;\n    }\n    ;\n    // Parse SQL with Records -- By Mandeep\n    function parseSQLFromRecords(value, record) {\n      //if (typeof (tabNo) != "number") {\n      //    ignoreUnparsable = onlyWindow;\n      //    onlyWindow = value;\n      //    value = tabNo;\n      //    tabNo = 0;\n      //}\n\n      var resultData = [];\n      if (value == null || value.length == 0) return "";\n      var token = "";\n      ;\n      var outStr = new String("");\n      var i = value.indexOf(\'@\');\n      // Check whether the @ is not the last in line (i.e. in EMailAdress or with wrong entries)\n      while (i != -1 && i != value.lastIndexOf("@")) {\n        var getValue = value.substring(0, i);\n        outStr += value.substring(0, i); // up to @\n        value = value.substring(i + 1, value.length); // from first @\n\n        var j = value.indexOf(\'@\'); // next @\n        if (j < 0) {\n          //_log.log(Level.SEVERE, "No second tag: " + inStr);\n          return ""; //\tno second tag\n        }\n        var ctxInfo = "";\n        var ctxInfo1 = "";\n        token = value.substring(0, j);\n        if (token.contains(".")) {\n          token = token.substring(0, token.indexOf("."));\n          //txInfo = ctx.getWindowContext(WindowNo, tabNo, token.substring(0, token.indexOf(".")), onlyWindow);\t// get context\n        }\n\n        //ctxInfo = ctx.getWindowContext(windowNo, tabNo, token, onlyWindow);\t// get context\n        ctxInfo = record[token.toLowerCase()];\n        if (ctxInfo.length == 0 && (token.startsWith("#") || token.startsWith("$"))) ctxInfo = ctx.getContext(token); // get global context\n\n        if (ctxInfo.length == 0) {\n          //_log.config("No Context Win=" + WindowNo + " for: " + token);\n          if (!ignoreUnparsable) return "";\n          resultData.push({\n            \'Key\': token,\n            \'Value\': null\n          });\n          outStr += \' NULL \';\n          //\t\t\t\t\t\t//\ttoken not found\n        } else {\n          resultData.push({\n            \'Key\': token,\n            \'Value\': ctxInfo\n          });\n          outStr += ctxInfo; // replace context with Context\n        }\n        value = value.substring(j + 1, value.length); // from second @\n        i = value.indexOf(\'@\');\n      }\n      outStr += value; // add the rest of the string\n      return resultData;\n    }\n    ;\n    function getObscureValue(type, value) {\n      if (value) {\n        if (type == obscureTypes.DigitButLast4) {\n          return value.replace(/[^a-zA-Z0-9\\.\\-\\@]/gi, \'\').replace(/[0-9](?=[\\w\\.\\-\\@]{4})/g, "*");\n        } else if (type == obscureTypes.DigitButFirstLast4) {\n          value = value.replace(/[^a-zA-Z0-9\\.\\-\\@\\s]/gi, \'\');\n          var len = value.length;\n          var retVal = \'\';\n          for (var i = 0; i < len; i++) {\n            var cur = value[i];\n            if (i > 3 && i < len - 4 && !isNaN(cur))\n              // skip first four and last four \n              cur = \'*\';\n            retVal += cur;\n          }\n          return retVal;\n        } else if (type == obscureTypes.AlphanumButLast4) {\n          return value.replace(/[^a-zA-Z0-9\\.\\s\\@\\-]/gi, \'\').replace(/[a-zA-Z0-9\\s\\.\\@\\-](?=[a-zA-Z0-9\\s\\.\\@\\-]{4})/g, "*");\n        } else if (type == obscureTypes.AlphaNumButFirstLast4) {\n          value = value.replace(/[^a-zA-Z0-9\\@\\.\\s\\-]/gi, \'\');\n          var len = value.length;\n          var retVal = \'\';\n          for (var i = 0; i < len; i++) {\n            var cur = value[i];\n            if (i > 3 && i < len - 4)\n              // skip first four and last four \n              cur = \'*\';\n            retVal += cur;\n          }\n          return retVal;\n        }\n      }\n    }\n    ;\n    function getWINDOW_PAGE_SIZE() {\n      return WINDOW_PAGE_SIZE;\n    }\n    ;\n    function setWINDOW_PAGE_SIZE(pSize) {\n      if (!pSize || pSize.toString().length == 0) pSize = 50;\n      WINDOW_PAGE_SIZE = pSize;\n    }\n    ;\n    function getScreenHeight() {\n      return window_height;\n    }\n    ;\n    function setScreenHeight(height) {\n      window_height = height;\n    }\n    ;\n    function getPreference(ctx, AD_Window_ID, context, system) {\n      /**************************************************************************\r\n      *\tGet Preference.\r\n      *  <pre>\r\n      *\t\t0)\tCurrent Setting\r\n      *\t\t1) \tWindow Preference\r\n      *\t\t2) \tGlobal Preference\r\n      *\t\t3)\tLogin settings\r\n      *\t\t4)\tAccounting settings\r\n      *  </pre>\r\n      *  @param  ctx context\r\n      *\t@param\tAD_Window_ID window no\r\n      *\t@param\tcontext\t\tEntity to search\r\n      *\t@param\tsystem\t\tSystem level preferences (vs. user defined)\r\n      *  @return preference value\r\n      */\n\n      if (ctx == null || context == null) throw new IllegalArgumentException("Require Context");\n      var retValue = null;\n      //\n      if (!system)\n        //\tUser Preferences\n        {\n          retValue = ctx.getContext("P" + AD_Window_ID + "|" + context); //\tWindow Pref\n          if (retValue.length == 0) retValue = ctx.getContext("P|" + context); //\tGlobal Pref\n        } else\n        //\tSystem Preferences\n        {\n          retValue = ctx.getContext("#" + context); //\tLogin setting\n          if (retValue.length == 0) retValue = ctx.getContext("$" + context); //\tAccounting setting\n        }\n      //\n      return retValue == null ? "" : retValue;\n    }\n    ; //\tgetPreference\n\n    function getHeader(ctx, windowNo) {\n      var sb = "";\n      if (windowNo > 0) sb += ctx.getWindowContext(windowNo, "WindowName", false) + "  ";\n\n      //sb += ctx.getContext("##AD_User_Name") + "@" +\n      //    ctx.getContext("#AD_Org_Name") + "." +\n      //    ctx.getContext("#AD_Client_Name");\n\n      return sb;\n    }\n    ;\n    function clearWinContext(ctx, WindowNo) {\n      if (ctx == null) throw new Error("Require Context");\n      var keys = [];\n      for (var prop in ctx) {\n        if (prop.startsWith(windowNo + "|")) {\n          keys.push(prop);\n        }\n      }\n      var key;\n      while (keys.length > 0) {\n        key = keys.pop();\n        ctx[key] = null;\n        delete ctx[key];\n        key = null;\n      }\n      //removeWindow(WindowNo);\n    } //\tclearWinContext\n\n    function removeCultCommaDot(value, deciSep) {\n      if (isNaN(value) || value === null) {\n        return "0";\n      }\n      var newVal = value.toString();\n      if (newVal.contains(deciSep)) {\n        //newVal = newVal.replace(/\\./g, \'\');\n        //newVal = newVal.replaceAll(deciSep, "");\n        newVal = newVal.split(deciSep).join(\'\');\n      }\n\n      //if (type === VIS.DisplayType.Integer || type === VIS.DisplayType.Quantity) {\n      //    if (newVal.indexOf(",") > -1) {\n      //        newVal = newVal.replaceAll(",", "");\n      //    }\n      //    //dot not alloewd here if come then it is from culture then remove before procceds\n      //    if (newVal.indexOf(".") > -1) {\n      //        newVal = newVal.replaceAll(".", "");\n      //    }\n      //}\n      //else if (type === VIS.DisplayType.Amount || type === VIS.DisplayType.Number) {\n      //    if ((newVal.split(",").length > newVal.split(".").length) && Globalize.cultureSelector === "en-US") {\n      //        if (newVal.indexOf(",") > -1) {\n      //            newVal = newVal.replaceAll(",", "");\n      //        }\n      //    }\n      //    else if ((newVal.split(".").length > newVal.split(",").length) && Globalize.cultureSelector != "en-US") {\n      //        if (newVal.indexOf(".") > -1) {\n      //            newVal = newVal.replaceAll(".", "");\n      //        }\n      //    }\n      //}\n      return newVal;\n    }\n    ;\n    function numberCultureValueFormat(calVal, sep) {\n      var splitValue = [];\n      splitValue = calVal.split(".");\n      var val = Globalize.format(Number(splitValue[0]), "N", Globalize.cultureSelector);\n      var valAft = splitValue[1] === "" ? ".0" : splitValue[1];\n      calVal = val.substring(0, val.length - 3) + sep + valAft;\n      //if (calVal.split(\'.\')[1].length < 4) {\n      //    calVal = this.value.replace(".000", ".0");\n      //}\n      return calVal;\n    }\n    ;\n    function numberDisplay(self, val, displayType) {\n      val = VIS.Env.removeCultCommaDot(val, self.thousendSeprator);\n      val = val.split(self.decimalSeprator).join(\'.\');\n      val = self.format.GetFormatedValue(val);\n      if (displayType === VIS.DisplayType.Amount) {\n        val = Globalize.format(Number(val), "N", Globalize.cultureSelector);\n      } else if (displayType === VIS.DisplayType.Number) {\n        val = numberCultureValueFormat(val.toString(), self.decimalSeprator);\n      }\n      return val;\n    }\n    ;\n    function currentTimeMillis() {\n      return Date.now;\n    }\n    ;\n\n    /**\r\n    *  Check Base Language\r\n    *  @param ctx context\r\n    * \t@param tableName table to be translated\r\n    * \t@return true if base language and table not translated\r\n    */\n    function isBaseLanguage(ctx, tableName) {\n      var lang = "";\n      if (typeof ctx != "string") {\n        lang = getAD_Language(ctx);\n      } else {\n        lang = ctx; //string \n      }\n      return getBaseAD_Language() == lang;\n    }\n    ; //\tisBaseLanguage\n\n    /**\r\n         *  Get System AD_Language\r\n         *  @param ctx context\r\n         *\t@return AD_Language eg. en_US\r\n         */\n    function getAD_Language(ctx) {\n      if (ctx != null) {\n        var lang = ctx.getContext("#AD_Language");\n        if (lang != null && lang.length > 0) return lang;\n      }\n      return getBaseAD_Language();\n    }\n    ; //\tgetAD\n\n    function getBaseAD_Language() {\n      return "en_US";\n    }\n    ;\n    function signum(value) {\n      if (value == null || value.toString().trim() == "") {\n        return 0;\n      }\n      if (isNaN(value)) {\n        return 0;\n      }\n      return value > 0 ? 1 : value < 0 ? -1 : 0;\n    }\n    ;\n    function startBrowser(url) {\n      window.open(url);\n    }\n    ;\n    function getDecimalSeparator(locale) {\n      var numberWithDecimalSeparator = 1.1;\n      //if (window.Intl) {\n      //    return Intl.NumberFormat(locale)\n      //        .formatToParts(numberWithDecimalSeparator)\n      //        .find(part => part.type === \'decimal\')\n      //        .value;\n      //}\n      return numberWithDecimalSeparator.toLocaleString(locale).substring(1, 2);\n    }\n    ;\n    function isDecimalPointss(lang) {\n      var language = window.navigator.language;\n      if (lang && lang != \'\') language = lang;\n      if (getDecimalSeparator(language) != \',\') return true;\n      return false;\n    }\n    ;\n    return {\n      getWindowNo: getWindowNo,\n      getCtx: getCtx,\n      parseContext: parseContext,\n      parseContext2: parseContext2,\n      parseSQLFromRecords: parseSQLFromRecords,\n      getWINDOW_PAGE_SIZE: getWINDOW_PAGE_SIZE,\n      setWINDOW_PAGE_SIZE: setWINDOW_PAGE_SIZE,\n      setScreenHeight: setScreenHeight,\n      getScreenHeight: getScreenHeight,\n      getPreference: getPreference,\n      getHeader: getHeader,\n      clearWinContext: clearWinContext,\n      removeCultCommaDot: removeCultCommaDot,\n      numberCultureValueFormat: numberCultureValueFormat,\n      numberDisplay: numberDisplay,\n      isBaseLanguage: isBaseLanguage,\n      getAD_Language: getAD_Language,\n      getBaseAD_Language: getBaseAD_Language,\n      currentTimeMillis: currentTimeMillis,\n      signum: signum,\n      startBrowser: startBrowser,\n      isDecimalPoint: isDecimalPointss,\n      getDecimalSeparator: getDecimalSeparator,\n      ZERO: 0,\n      ONE: 1,\n      ONEHUNDRED: 100.0,\n      NL: \'\\r\\n\',\n      SHOW_CLIENT_ORG: 0,\n      SHOW_CLIENT_ONLY: 1,\n      SHOW_ORG_ONLY: 2,\n      HIDE_CLIENT_ORG: 3,\n      NULLString: NULLString,\n      approveCol: "IsApproved",\n      getObscureValue: getObscureValue\n    };\n  }();\n  // ******************** END ENV *********************//\n\n  //********************* AENV ************************//\n  VIS.AEnv = function () {\n    var voCache = {};\n    var s_workflow = null;\n    var s_workflow_Window_ID = 0;\n    var baseUrl = VIS.Application.contextUrl;\n    var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n    var executeReader = function (sql, param, callback) {\n      var async = callback ? true : false;\n      var dataIn = {\n        sql: sql,\n        page: 1,\n        pageSize: 0\n      };\n      if (param) {\n        dataIn.param = param;\n      }\n      var dr = null;\n      getDataSetJString(dataIn, async, function (jString) {\n        dr = new VIS.DB.DataReader().toJson(jString);\n        if (callback) {\n          callback(dr);\n        }\n      });\n      return dr;\n    };\n\n    ////DataSet String\n    function getDataSetJString(data, async, callback) {\n      var result = null;\n      //data.sql = VIS.secureEngine.encrypt(data.sql);\n      $.ajax({\n        url: dataSetUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        if (callback) {\n          callback(json);\n        }\n        //return result;\n      });\n      return result;\n    }\n    ;\n    function getGridWindow(windowNo, AD_Window_ID, callback) {\n      VIS.dataContext.getWindowJString({\n        windowNo: windowNo,\n        AD_Window_ID: AD_Window_ID\n      }, callback);\n      //return getGridWindowFromServer(windowNo, AD_Window_ID);\n    }\n    ;\n    function getGridWindowFromServer(curWindowNo, ID) {}\n    ;\n    function getZoomButton(disabled) {\n      return $(\'<button class="vis-controls-txtbtn-table-td2" \' + (disabled ? "disabled" : "") + \' ><i class="vis vis-find" /></button>\');\n    }\n    function getContextPopup(options, fieldName) {\n      var ulPopup = $("<ul class=\'vis-apanel-rb-ul\'>");\n      if (typeof options[VIS.Actions.zoom] !== "undefined") {\n        ulPopup.append($("<li data-action=\'" + VIS.Actions.zoom + "\' style=\'opacity:" + (options[VIS.Actions.zoom] ? .7 : 1) + "\'><i data-action=\'" + VIS.Actions.zoom + "\' class=\'fa fa-search-plus\'></i><span data-action=\'" + VIS.Actions.zoom + "\'>" + VIS.Msg.getMsg("Zoom") + "</span></li>"));\n        //New option for combo and search control.\n        if (options[VIS.Actions.addnewrec]) ulPopup.append($("<li data-action=\'" + VIS.Actions.addnewrec + "\' style=\'opacity:" + (options[VIS.Actions.zoom] ? .7 : 1) + "\'><i data-action=\'" + VIS.Actions.addnewrec + "\' class=\'fa fa-plus\'></i><span data-action=\'" + VIS.Actions.addnewrec + "\'>" + VIS.Msg.getMsg("AddNew") + "</span></li>"));\n      }\n      if (options[VIS.Actions.preference]) ulPopup.append($("<li data-action=\'" + VIS.Actions.preference + "\'><i data-action=\'" + VIS.Actions.preference + "\' class=\'fa fa-cog\'></i><span data-action=\'" + VIS.Actions.preference + "\'>" + VIS.Msg.getMsg("Preference") + "</span></li>"));\n      if (options[VIS.Actions.refresh]) ulPopup.append($("<li data-action=\'" + VIS.Actions.refresh + "\'><i data-action=\'" + VIS.Actions.refresh + "\' class=\'fa fa-refresh\'></i><span data-action=\'" + VIS.Actions.refresh + "\'>" + VIS.Msg.getMsg("Requery") + "</span></li>"));\n      if (options[VIS.Actions.add]) ulPopup.append($("<li data-action=\'" + VIS.Actions.add + "\'><i data-action=\'" + VIS.Actions.add + "\' class=\'vis vis-addbp\'></i><span data-action=\'" + VIS.Actions.add + "\'>" + VIS.Msg.getMsg("Add") + "</span></li>"));\n      if (options[VIS.Actions.addproduct]) ulPopup.append($("<li data-action=\'" + VIS.Actions.addproduct + "\'><i data-action=\'" + VIS.Actions.addproduct + "\' class=\'fa fa-plus\'></i><span data-action=\'" + VIS.Actions.addproduct + "\'>" + VIS.Msg.getMsg("AddProduct") + "</span></li>"));\n      if (options[VIS.Actions.update]) ulPopup.append($("<li data-action=\'" + VIS.Actions.update + "\'><i data-action=\'" + VIS.Actions.update + "\' class=\'vis vis-updatebp\'></i><span data-action=\'" + VIS.Actions.update + "\'>" + VIS.Msg.getMsg("Update") + "</span></li>"));\n      if (options[VIS.Actions.remove]) ulPopup.append($("<li data-action=\'" + VIS.Actions.remove + "\'><i data-action=\'" + VIS.Actions.remove + "\' class=\'fa fa-arrow-left\'></i><span data-action=\'" + VIS.Actions.remove + "\'>" + VIS.Msg.getMsg("Clear") + "</span></li>"));\n      if (options[VIS.Actions.contact]) ulPopup.append($("<li data-action=\'" + VIS.Actions.contact + "\'><i data-action=\'" + VIS.Actions.contact + "\' class=\'fa fa-user\'></i><span data-action=\'" + VIS.Actions.contact + "\'>" + VIS.Msg.getMsg("Contact") + "</span></li>"));\n\n      //\n      return ulPopup;\n    }\n    ;\n\n    /**\r\n      * \tIs Workflow Process view enabled.\r\n      *\t@return true if enabled\r\n      */\n    function getIsWorkflowProcess() {\n      if (s_workflow == null) {\n        s_workflow = false;\n        var AD_Table_ID = 645; //\tAD_WF_Process\t\n        if (VIS.MRole.getIsTableAccess(AD_Table_ID, true))\n          //\tRO\n          s_workflow = true;else {\n          AD_Table_ID = 644; //\tAD_WF_Activity\t\n          if (VIS.MRole.getIsTableAccess(AD_Table_ID, true))\n            //\tRO\n            s_workflow = true;\n        }\n        //\tGet Window\n        if (s_workflow) {\n          // VIS.DB.executeScalar("SELECT AD_Window_ID FROM AD_Table WHERE AD_Table_ID=" + AD_Table_ID, null, function (val) {\n          //var dr=null;\n          $.ajax({\n            type: \'Get\',\n            async: true,\n            url: VIS.Application.contextUrl + "Form/GetWorkflowWindowID",\n            data: {\n              AD_Table_ID: AD_Table_ID\n            },\n            success: function (data) {\n              var val = JSON.parse(data);\n              if (val && !isNaN(val)) s_workflow_Window_ID = parseInt(val);\n              if (s_workflow_Window_ID == 0) s_workflow_Window_ID = 297; //\tfallback HARDCODED\n            }\n          });\n\n          //    if (val && !isNaN(val))\n          //        s_workflow_Window_ID = parseInt(val);\n          //    if (s_workflow_Window_ID == 0)\n          //        s_workflow_Window_ID = 297;\t//\tfallback HARDCODED\n          //});\n        }\n      }\n      return s_workflow;\n    }\n    ;\n    function startWorkflowProcess(AD_Table_ID, Record_ID) {\n      //if (Envs.workflowWindowID == 0)\n      //{\n      //    return;\n      //}\n      //\n      var query = null;\n      if (AD_Table_ID != 0 && Record_ID != 0) {\n        query = new VIS.Query("AD_WF_Process");\n        query.addRestriction("AD_Table_ID", VIS.Query.prototype.EQUAL, AD_Table_ID);\n        query.addRestriction("Record_ID", VIS.Query.prototype.EQUAL, Record_ID);\n        VIS.viewManager.startWindow(s_workflow_Window_ID, query);\n      }\n    }\n    ;\n    function zoom(AD_Table_ID, Record_ID) {\n      var tableName = null;\n      var AD_Window_ID = 0;\n      var PO_Window_ID = 0;\n\n      // var sql = "SELECT TableName, AD_Window_ID, PO_Window_ID FROM AD_Table WHERE AD_Table_ID=" + AD_Table_ID;\n      var dr = null;\n      $.ajax({\n        type: \'Get\',\n        async: false,\n        url: VIS.Application.contextUrl + "Form/GetZoomWindowID",\n        data: {\n          AD_Table_ID: AD_Table_ID\n        },\n        success: function (data) {\n          dr = new VIS.DB.DataReader().toJson(data);\n        }\n      });\n\n      //dr = VIS.DB.executeReader(sql);\n      if (dr.read()) {\n        tableName = dr.get(0).toString();\n        AD_Window_ID = VIS.Utility.Util.getValueOfInt(dr.getInt(1));\n        PO_Window_ID = VIS.Utility.Util.getValueOfInt(dr.getInt(2));\n      }\n      dr.dispose();\n\n      //  Nothing to Zoom to\n      if (tableName == null || AD_Window_ID == 0) {\n        //log.Info("No window/Form --\x3e open table window and bind a window to that table");\n        return;\n      }\n\n      //\tPO Zoom ?\n      if (PO_Window_ID != 0) {\n        var whereClause = tableName + "_ID=" + Record_ID;\n        AD_Window_ID = VIS.ZoomTarget.getZoomAD_Window_ID(tableName, 0, whereClause, true);\n        if (AD_Window_ID == 0) return;\n      }\n      VIS.viewManager.startWindow(AD_Window_ID, VIS.Query.prototype.getEqualQuery(tableName + "_ID", Record_ID));\n    }\n    ;\n\n    // vinay bhatt workflow zoom with window id\n    function wfzoom(AD_Table_ID, Record_ID, AD_WF_Activity_ID) {\n      var tableName = null;\n      var AD_Window_ID = 0;\n      var PO_Window_ID = 0;\n      var ActivityWindow = 0;\n      var sql = "VIS_146";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@AD_Table_ID", AD_Table_ID);\n      param[1] = new VIS.DB.SqlParam("@AD_WF_Activity_ID", AD_WF_Activity_ID);\n      var dr = null;\n      dr = executeReader(sql, param);\n      if (dr.read()) {\n        tableName = dr.get(0).toString();\n        AD_Window_ID = VIS.Utility.Util.getValueOfInt(dr.getInt(1));\n        PO_Window_ID = VIS.Utility.Util.getValueOfInt(dr.getInt(2));\n        ActivityWindow = VIS.Utility.Util.getValueOfInt(dr.getInt(3)); //"1000157"\n      } else {\n        zoom(AD_Table_ID, Record_ID);\n        return;\n      }\n      dr.dispose();\n\n      //  Nothing to Zoom to\n      if (tableName == null && AD_Window_ID == 0 && ActivityWindow != null && ActivityWindow != 0) {\n        //log.Info("No window/Form --\x3e open table window and bind a window to that table");\n        return;\n      }\n\n      //\tWFActivity Zoom ?\n      if (ActivityWindow != null && ActivityWindow != 0) {\n        var zoomQuery = new VIS.Query();\n        //zoomQuery.addRestriction(tableName + "_ID", VIS.Query.prototype.EQUAL, Record_ID);\n        //VIS.viewManager.startWindow(ActivityWindow, zoomQuery);\n        VIS.viewManager.startWindow(ActivityWindow, VIS.Query.prototype.getEqualQuery(tableName + "_ID", Record_ID));\n        return;\n      }\n\n      //\tPO Zoom ?\n      if (PO_Window_ID != 0) {\n        var whereClause = tableName + "_ID=" + Record_ID;\n        AD_Window_ID = VIS.ZoomTarget.getZoomAD_Window_ID(tableName, 0, whereClause, true);\n        if (AD_Window_ID == 0) return;\n      }\n      VIS.viewManager.startWindow(AD_Window_ID, VIS.Query.prototype.getEqualQuery(tableName + "_ID", Record_ID));\n    }\n    ;\n    //\n\n    return {\n      getGridWindow: getGridWindow,\n      getContextPopup: getContextPopup,\n      getZoomButton: getZoomButton,\n      getIsWorkflowProcess: getIsWorkflowProcess,\n      startWorkflowProcess: startWorkflowProcess,\n      zoom: zoom,\n      wfzoom: wfzoom // vinay bhatt zoom with window id\n    };\n  }();\n  //****************** END AENV ***********************//\n\n  //**************** MessageFormat *******************//\n\n  function MessageFormat(pattren) {\n    this.pattern;\n    //"(C) Currency: . . . . . . . . {0:C}\\n" +\n    //"(D) Decimal:. . . . . . . . . {0:D}\\n" +\n    //"(E) Scientific: . . . . . . . {1:E}\\n" +\n    //"(F) Fixed point:. . . . . . . {1:F}\\n" +\n    //"(G) General:. . . . . . . . . {0:G}\\n" +\n    //"    (default):. . . . . . . . {0} (default = \'G\')\\n" +\n    //"(N) Number: . . . . . . . . . {0:N}\\n" +\n    //"(P) Percent:. . . . . . . . . {1:P}\\n" +\n    //"(R) Round-trip: . . . . . . . {1:R}\\n" +\n    //"(X) Hexadecimal:. . . . . . . {0:X}\\n",\n\n    this.applyPattern(pattren);\n  }\n  ;\n  MessageFormat.prototype.typeList = ["", "", "number", "", "date", "", "time", "", "choice"];\n  MessageFormat.prototype.modifierList = ["", "", "currency", "", "percent", "", "integer"];\n  MessageFormat.prototype.dateModifierList = ["", "", "short", "", "medium", "", "long", "", "full"];\n  MessageFormat.prototype.allFormats = {\n    "currency": "C",\n    "decimal": "D",\n    "general": "G",\n    "number": "N",\n    "percent": "P",\n    "shortdate": "d",\n    "longdate": "D",\n    "shorttime": "t",\n    "longtime": "T",\n    "fulltime": "T",\n    "fulldate": "D",\n    "mediumdate": "d",\n    "mediumtime": "t",\n    "choice": ""\n  };\n  MessageFormat.prototype.applyPattern = function (pattern) {\n    if (!this.cmpreFormat(pattern)) {\n      this.pattern = pattern;\n      return;\n    }\n    var segmentsList = [];\n    var segment = new StringBuilder("");\n    for (var i = 0; i < pattern.length; ++i) {\n      var ch = pattern[i];\n      if (ch == \'{\') {\n        if (segment.length() == 0) {\n          segment.append(ch);\n        } else {\n          segmentsList.push(segment.toString());\n          segment.clear();\n          segment.append(ch);\n        }\n      } else if (ch == \'}\') {\n        segment.append(ch);\n        segmentsList.push(segment.toString());\n        segment.clear();\n      } else if (i == pattern.length) {\n        segmentsList.add(segment.toString());\n        segment.clear();\n      } else {\n        segment.append(ch);\n      }\n    }\n    this.pattern = this.parsePattren(segmentsList);\n  };\n  MessageFormat.prototype.parsePattren = function (segments) {\n    var result = new StringBuilder(" ");\n    for (var i = 0; i < segments.length; i++) {\n      var part = segments[i];\n      if (part.startsWith("{") && this.cmpreFormat(part)) {\n        part = this.getFormat(part.split(\',\'));\n        result.append(part);\n        continue;\n      }\n      result.append(part);\n    }\n    return result.toString();\n  };\n  MessageFormat.prototype.getFormat = function (segments) {\n    var format = new StringBuilder(segments[0]); //   .append(":");\n    var newFormat = "";\n    switch (this.findKeyword(segments[1], this.typeList)) {\n      case 0:\n        break;\n      case 1:\n      case 2:\n        // number\n        switch (this.findKeyword(segments[2].toString(), this.modifierList)) {\n          case 0:\n            // default;\n            newFormat = this.allFormats["number"];\n            break;\n          case 1:\n          case 2:\n            // currency\n            newFormat = this.allFormats["currency"];\n            break;\n          case 3:\n          case 4:\n            // percent\n            newFormat = this.allFormats["percent"];\n            break;\n          case 5:\n          case 6:\n            // integer\n            newFormat = this.allFormats["decimal"];\n            break;\n          default:\n            // pattern\n            newFormat = this.allFormats["number"];\n            break;\n        }\n        break;\n      case 3:\n      case 4:\n        // date\n        switch (this.findKeyword(segments[2], this.dateModifierList)) {\n          case 0:\n            // default\n            newFormat = this.allFormats["shortdate"];\n            break;\n          case 1:\n          case 2:\n            // short\n            newFormat = this.allFormats["shortdate"];\n            break;\n          case 3:\n          case 4:\n            // medium\n            newFormat = this.allFormats["mediumdate"];\n            break;\n          case 5:\n          case 6:\n            // long\n            newFormat = this.allFormats["longdate"];\n            break;\n          case 7:\n          case 8:\n            // full\n            newFormat = this.allFormats["fulldate"];\n            break;\n          default:\n            newFormat = segments[3].ToString();\n            break;\n        }\n        break;\n      case 5:\n      case 6:\n        // time\n        switch (this.FindKeyword(segments[2].ToString(), this.dateModifierList)) {\n          case 0:\n            // default\n            newFormat = this.allFormats["shorttime"];\n            break;\n          case 1:\n          case 2:\n            // short\n            newFormat = this.allFormats["shorttime"];\n            break;\n          case 3:\n          case 4:\n            // medium\n            newFormat = this.allFormats["mediumtime"];\n            break;\n          case 5:\n          case 6:\n            // long\n            newFormat = this.allFormats["mediumtime"];\n            break;\n          case 7:\n          case 8:\n            // full\n            newFormat = this.allFormats["mediumtime"];\n            break;\n          default:\n            newFormat = segments[2].ToString();\n            break;\n        }\n        break;\n      case 7:\n      case 8:\n        // choice\n        try {\n          newFormat = segments[3];\n          this.allFormats["choice"] = segments[3].ToString();\n        } catch (e) {\n          throw new ArgumentException("Choice Pattern incorrect");\n        }\n        break;\n      default:\n        throw new ArgumentException("unknown format type at ");\n    }\n    segments = null;\n    newFormat = "";\n    format.append(newFormat).append("}");\n    return format.toString();\n  };\n  MessageFormat.prototype.format = function (args) {\n    // The string containing the format items (e.g. "{0}")\n    // will and always has to be the first argument.\n    var theString = this.pattern;\n    this.pattern = null;\n    // start with the second argument (i = 1)\n    for (var i = 0; i < args.length; i++) {\n      // "gm" = RegEx options for Global search (more than  instance)\n      // and for Multiline search\n      var regEx = new RegExp("\\\\{" + i + "\\\\}", "gm");\n      theString = theString.replace(regEx, args[i]);\n    }\n    return theString;\n  };\n  MessageFormat.prototype.cmpreFormat = function (ptrn) {\n    if (ptrn.contains("number,") || ptrn.contains("date,") || ptrn.contains("time,") || ptrn.contains("custom,")) {\n      return true;\n    }\n    return false;\n  };\n  MessageFormat.prototype.findKeyword = function (text, str) {\n    for (var i = 0; i < str.length; i++) {\n      if (text.equals(str[i])) return i;\n    }\n    return -1;\n  };\n\n  //********************* END ***********************//\n\n  function traceConsole(args) {\n    var stack = "";\n    try {\n      throw new Error("ss");\n    } catch (e) {\n      stack = e.stack; //.split(\'\\n\');\n      //console.log(stack);\n    }\n    var fc = false;\n    //if (stack.substr(stack.lastIndexOf("utility.js") + 10).indexOf(\'.js\') == -1)\n    //{\n    //    fc = true;\n    //}\n\n    var length = (stack.match(/VISjs?/g) || []).length;\n\n    //if (length == 3) {\n    //    fc = true;\n    //    console.log(length);\n    //}\n\n    //for (var i = 0; i < stack.length; i++) {\n    if (stack.indexOf("at Object.InjectedScript.") >= 0) {\n      fc = true; // Chrome console\n    }\n    if (stack.indexOf("Unknown script") == 0) {\n      fc = true; // Firefox console\n    }\n    if (stack.indexOf("@debugger eval code") == 0) {\n      fc = true; // Firefox console\n    }\n    if (stack.indexOf("_evaluateOn") == 0) fc = true; // Safari console\n    // }\n\n    if (!fc) {\n      if (!stack || stack.split(\'\\n\').length > 5) return;\n    }\n    //console.log("invalid function call");\n    return true;\n  }\n  ;\n  function validateAndExecute(myarguments, dataIn, async, callback) {\n    //if (traceConsole(arguments))\n    //    return null;\n    //dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    VIS.dataContext.getDataSetJString(dataIn, async, function (jString) {\n      callback(jString);\n    });\n  }\n  ;\n  function validateAndExecuteQuery(myarguments, dataIn, async, callback) {\n    //if (traceConsole(arguments))\n    //    return null;\n    // dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    VIS.dataContext.executeQuery(dataIn, async, function (jString) {\n      callback(jString);\n    });\n  }\n  ;\n  function validateAndExecuteQueries(myarguments, dataIn, async, callback) {\n    //if (traceConsole(arguments))\n    //    return null;\n    // dataIn.sql = VIS.secureEngine.encrypt(dataIn.sql);\n    VIS.dataContext.executeQueries(dataIn, async, function (jString) {\n      callback(jString);\n    });\n  }\n  VIS.DB = {\n    QUOTE: \'\\\'\',\n    getDBDateFormat: function (date, includeTime, convertToUniversal) {\n      //yyyy-MM-dd\n      var dString = "";\n\n      //year \n      if (!convertToUniversal) {\n        date.setMinutes(-date.getTimezoneOffset());\n        //date = new Date(date.toUTCString());\n      }\n      dString = date.toISOString();\n      var formats = dString.split(\'T\');\n      dString = formats[0];\n      if (includeTime) dString += " " + formats[1].substring(0, formats[1].length - 5); //  .replace(\'Z\', \'\');\n\n      return dString;\n    },\n    to_date: function (date, dayOnly) {\n      if (date && date.toString().length > 0) {\n        if (date instanceof Date) time = date;else time = new Date(date);\n      } else time = null;\n      if (time.toString() == "Invaild Date") {\n        time = null;\n      }\n      var dateString = "";\n      var myDate = "";\n      if (true) {\n        if (time == null) {\n          if (dayOnly) return "TRUNC(SysDate)";\n          return "SysDate";\n        }\n        dateString += "TO_DATE(\'";\n        //  YYYY-MM-DD HH24:MI:SS.mmmm  JDBC Timestamp format\n        //String myDate = time.ToString("yyyy-mm-dd");\n        //myDate = time.ToString("yyyy-MM-dd HH:mm:ss");\n        myDate = time; //"yyyy-MM-dd");\n        if (dayOnly) {\n          //myDate = time.Value.ToString("yyyy-MM-dd");\n          myDate = this.getDBDateFormat(time, false, false);\n          dateString += myDate;\n          dateString += "\',\'YYYY-MM-DD\')";\n        } else {\n          //myDate = time.Value.ToString("yyyy-MM-dd HH:mm:ss");\n          myDate = this.getDBDateFormat(time, true, true);\n          dateString += myDate; //\tcut off miliseconds\n          dateString += "\',\'YYYY-MM-DD HH24:MI:SS\')";\n        }\n      } else {}\n      return dateString.toString();\n\n      //return date;\n    },\n    to_char: function (columnName, displayType, AD_Language) {\n      var retValue = "TRIM(TO_CHAR(";\n      retValue = retValue.concat(columnName);\n      //  Numbers\n      if (VIS.DisplayType.IsNumeric(displayType)) {\n        if (displayType == VIS.DisplayType.Amount) retValue = retValue.concat(",\'9G999G999G999G990D00\'");else retValue = retValue.concat(",\'TM9\'");\n      } else if (VIS.DisplayType.IsDate(displayType)) {\n        retValue = retValue.concat(",\'").concat("yyyy-MM-dd").concat("\'");\n      }\n      retValue = retValue.concat("))");\n      return retValue.toString();\n    },\n    to_string: function (txt, maxLength) {\n      if (txt == null && txt.length == 0) return "NULL";\n      if (maxLength != null) {\n        maxLength = 0;\n      }\n\n      //  Length\n      var text = txt;\n      if (maxLength != 0 && text.length > maxLength) text = txt.substring(0, maxLength);\n      var out = new StringBuilder();\n      out.append(this.QUOTE); //\t\'\n      for (var i = 0; i < text.length; i++) {\n        var c = text.charAt(i);\n        if (c == this.QUOTE) out.append("\'\'");else out.append(c);\n      }\n      out.append(this.QUOTE);\n      //\n      text = out.toString();\n      out.clear();\n      return text;\n    }\n  };\n\n  //Sql Parameter Class\n  function SqlParam(name, value) {\n    this.name = name;\n    this.value = value;\n    this.isDate = false;\n    this.isByteArray = false;\n  }\n  ;\n  SqlParam.prototype.setIsDate = function (isDate) {\n    this.isDate = isDate;\n  };\n  SqlParam.prototype.setIsByteArray = function (isByteArray) {\n    this.isByteArray = isByteArray;\n  };\n\n  //****************************************************************//\n  /*                          DATASET                               */\n  //****************************************************************//\n\n  function DataSet() {\n    this.tables = [];\n    this.total = 0;\n  }\n  ;\n  DataSet.prototype.toJson = function (jsonString) {\n    var tables = jsonString;\n    if (typeof jsonString == "string") tables = JSON.parse(jsonString);\n    tables = $.isArray(tables) ? tables : [tables];\n    for (var i = 0; i < tables.length; i++) {\n      var dt = new VIS.DB.DataTable();\n      dt.toJson(tables[i]);\n      this.tables.push(dt);\n    }\n    tables = null;\n    return this;\n  };\n  DataSet.prototype.getTable = function (index) {\n    if (index > -1 && index < this.tables.length) {\n      return this.tables[index];\n    }\n    return null;\n  };\n  DataSet.prototype.getTables = function () {\n    return this.tables;\n  };\n  DataSet.prototype.dispose = function () {\n    for (var i = this.tables.length; i > 0; i--) {\n      this.tables.pop().dispose();\n    }\n    this.tables.length = 0;\n    this.tables = null;\n  };\n  function DataTable() {\n    this.count = 0; //total rows in page\n    this.totalPage = 0; //total number of pages\n    this.page = 1; //current page index\n    this.columns = []; // tables column\n    this.rows = []; // rows of column\n    this.totalRecord = 0; // total record \n    this.columnsName = [];\n  }\n  ;\n  DataTable.prototype.toJson = function (js) {\n    if (js) {\n      this.totalRecord = js.records;\n      this.totalPage = js.total;\n      this.page = js.page;\n      if (js.columns) {\n        for (var col = 0; col < js.columns.length; col++) {\n          this.columnsName[col] = js.columns[col].name;\n        }\n        for (var row = 0; row < js.rows.length; row++) {\n          this.rows.push(new VIS.DB.DataRow(js.rows[row], this));\n        }\n        this.columns = js.columns;\n      }\n      this.count = this.rows.count;\n    }\n    js = null;\n  };\n  DataTable.prototype.getRowCount = function () {\n    return this.rows.length;\n  };\n  DataTable.prototype.getColumnCount = function () {\n    return this.columns.length;\n  };\n  DataTable.prototype.getRow = function (index) {\n    if (index > -1 && index < this.rows.length) {\n      return this.rows[index];\n    }\n    return null;\n  };\n  DataTable.prototype.getRows = function () {\n    ///Get all row of table json raw string\n    return this.rows;\n  };\n  DataTable.prototype.getColumnsName = function () {\n    return this.columnsName;\n  };\n  DataTable.prototype.dispose = function () {\n    this.count = 0; //total rows in page\n    this.totalPage = 0; //total number of pages\n    this.page = 1; //current page index\n    this.columns.length = 0;\n    this.columns = null;\n    while (this.rows.length > 0) {\n      this.rows.pop().dispose();\n    }\n    this.rows.length = 0;\n    this.rows = null;\n    this.totalRecord = 0; // total record\n  };\n  function DataRow(row, table) {\n    this.cells = row.cells;\n    this.id = row.id;\n    this.parent = table;\n  }\n  ;\n  DataRow.prototype.getCell = function (sel) {\n    var index = -1;\n    var cellName = "";\n    if (isNaN(sel)) {\n      //by name\n      sel = sel.toLowerCase();\n      index = this.parent.columnsName.indexOf(sel);\n      cellName = sel;\n    } else {\n      index = sel;\n      cellName = this.parent.columnsName[index];\n    }\n    var cellInfo = this.parent.columns[index];\n    var dataType = cellInfo.type;\n    var value = this.cells[cellName];\n    if (dataType == "system.datetime") {\n      //value = Date.parse(value);\n    }\n    return value;\n  };\n  DataRow.prototype.getJSCells = function () {\n    //return jsin string cells [raw format]\n    return this.cells;\n  };\n  DataRow.prototype.dispose = function () {\n    this.cells.length = 0;\n    this.cells = null;\n    this.id = null;\n    this.parent = null;\n  };\n\n  /*\r\n    DataReader\r\n  */\n\n  function DataReader() {\n    this.rowIndex = -1;\n    this.tables = [];\n    this.curTable;\n    return this;\n  }\n  ;\n  DataReader.prototype.toJson = function (jsonString) {\n    var tables = JSON.parse(jsonString);\n    tables = $.isArray(tables) ? tables : [tables];\n    for (var i = 0; i < tables.length; i++) {\n      var dt = new VIS.DB.DataTable();\n      dt.toJson(tables[i]);\n      this.tables.push(dt);\n      if (i === 0) {\n        this.curTable = this.tables[i];\n      }\n    }\n    tables = null;\n    return this;\n  };\n  DataReader.prototype.read = function () {\n    if (!this.curTable) return false;\n    if (++this.rowIndex >= this.curTable.getRowCount()) return false;\n    return true;\n  };\n  DataReader.prototype.getCell = function (col) {\n    return this.curTable.getRow(this.rowIndex).getCell(col);\n  };\n  DataReader.prototype.get = function (col) {\n    return this.curTable.getRow(this.rowIndex).getCell(col);\n  };\n  DataReader.prototype.getString = function (col) {\n    var val = this.curTable.getRow(this.rowIndex).getCell(col);\n    if (val == null) return "";\n    return val.toString();\n  };\n  DataReader.prototype.getInt = function (col) {\n    var val = this.curTable.getRow(this.rowIndex).getCell(col);\n    if (val == null) return 0;else return parseInt(val);\n  };\n  DataReader.prototype.getDecimal = function (col) {\n    var val = this.curTable.getRow(this.rowIndex).getCell(col);\n    if (val == null) return 0;else return parseFloat(val);\n  };\n  DataReader.prototype.getDateTime = function (col) {\n    return this.curTable.getRow(this.rowIndex).getCell(col);\n  };\n  DataReader.prototype.setTableIndex = function (index) {\n    this.rowIndex = 0;\n    this.curTable = this.tables[index];\n  };\n  DataReader.prototype.close = function () {};\n  DataReader.prototype.dispose = function () {\n    this.curTable = null;\n    for (var i = this.tables.length; i > 0; i--) {\n      this.tables.pop().dispose();\n    }\n    this.tables.length = 0;\n    this.tables = null;\n    this.rowIndex = null;\n  };\n\n  /******************** END ****************************/\n\n  function TimeUtil() {}\n  ;\n  TimeUtil.prototype.max = function (d1, d2) {\n    if (d1 == null) return d2;\n    if (d2 == null) return d1;\n    if (d1 > d2) return d1;\n    return d2;\n  };\n  function CultureSeparator() {\n    this.List = {\n      \'sq\': {\n        \'decimalSeparator\': false\n      },\n      // Albanian (Albania)\n      \'ar\': {\n        \'decimalSeparator\': true\n      },\n      // Arabic            \n      \'bg\': {\n        \'decimalSeparator\': false\n      },\n      // Bulgarian(Bulgaria)\n      \'be\': {\n        \'decimalSeparator\': false\n      },\n      // Byelorussian (Belarus)           \n      \'ca\': {\n        \'decimalSeparator\': false\n      },\n      // Catalan (Spain)\n      \'zh\': {\n        \'decimalSeparator\': true\n      },\n      // Chinese (China)\n      \'zh-HK\': {\n        \'decimalSeparator\': true\n      },\n      // Chinese (Hong Kong)\n      \'zh-CN\': {\n        \'decimalSeparator\': true\n      },\n      // chineese simple\n      \'zh-TW\': {\n        \'decimalSeparator\': true\n      },\n      // Chinese (Taiwan)\n      \'hr\': {\n        \'decimalSeparator\': true\n      },\n      // Croatian (Croatia)\n      \'cs\': {\n        \'decimalSeparator\': false\n      },\n      // Czech (Czech Republic)\n      \'da\': {\n        \'decimalSeparator\': false\n      },\n      // Danish (Denmark)\n      \'nl\': {\n        \'decimalSeparator\': false\n      },\n      // Dutch (Netherlands)            \n      \'en\': {\n        \'decimalSeparator\': true\n      },\n      // English\n      \'en-AU\': {\n        \'decimalSeparator\': true\n      },\n      // English (Australia)\n      \'en-CA\': {\n        \'decimalSeparator\': true\n      },\n      // English (Canada)\n      \'en-IN\': {\n        \'decimalSeparator\': true\n      },\n      // English (India)\n      \'en-NZ\': {\n        \'decimalSeparator\': true\n      },\n      // English (New Zealand)\n      \'en-ZA\': {\n        \'decimalSeparator\': true\n      },\n      // English (South Africa)\n      \'en-US\': {\n        \'decimalSeparator\': true\n      },\n      // English (USA)\n      \'en-GB\': {\n        \'decimalSeparator\': true\n      },\n      // English (United Kingdom)\n      \'et\': {\n        \'decimalSeparator\': false\n      },\n      // Estonian (Estonia)\n      \'fi\': {\n        \'decimalSeparator\': false\n      },\n      // Finnish (Finland)\n      \'fr\': {\n        \'decimalSeparator\': false\n      },\n      // French \n      \'fr-CA\': {\n        \'decimalSeparator\': false\n      },\n      // French (Canada)\n      \'fr-FR\': {\n        \'decimalSeparator\': false\n      },\n      // French (France)\n      \'fr-CH\': {\n        \'decimalSeparator\': false\n      },\n      // French (Switzerland)\n      \'de\': {\n        \'decimalSeparator\': false\n      },\n      // German\n      \'de-AT\': {\n        \'decimalSeparator\': false\n      },\n      // German (Austria)\n      \'de-DE\': {\n        \'decimalSeparator\': false\n      },\n      // German (Germany)\n      \'de-LI\': {\n        \'decimalSeparator\': false\n      },\n      // German (Luxembourg)\n      \'de-CH\': {\n        \'decimalSeparator\': false\n      },\n      // German (Switzerland)\n      \'el\': {\n        \'decimalSeparator\': false\n      },\n      // Greek (Greece)\n      \'he\': {\n        \'decimalSeparator\': true\n      },\n      // Hebrew (Israel)\n      \'hi\': {\n        \'decimalSeparator\': true\n      },\n      // Hindi (India)\n      \'hu\': {\n        \'decimalSeparator\': false\n      },\n      // Hungarian (Hungary)\n      \'is\': {\n        \'decimalSeparator\': false\n      },\n      // Icelandic (Iceland)\n      \'it\': {\n        \'decimalSeparator\': false\n      },\n      // Italian\n      \'it-IT\': {\n        \'decimalSeparator\': false\n      },\n      // Italian (Italy)\n      \'it-CH\': {\n        \'decimalSeparator\': false\n      },\n      // Italian (Switzerland)\n      \'ja\': {\n        \'decimalSeparator\': true\n      },\n      // Japanese (Japan)\n      \'ko\': {\n        \'decimalSeparator\': true\n      },\n      // Korean (South Korea)\n      \'lv\': {\n        \'decimalSeparator\': false\n      },\n      // Latvian (Lettish) (Latvia)\n      \'lt\': {\n        \'decimalSeparator\': false\n      },\n      // Lithuanian (Lithuania)\n      \'mk\': {\n        \'decimalSeparator\': false\n      },\n      // Macedonian (Macedonia)\n      \'nb\': {\n        \'decimalSeparator\': false\n      },\n      // Norwegian (Norway)\n      \'nn\': {\n        \'decimalSeparator\': false\n      },\n      // Norwegian\n      \'pl\': {\n        \'decimalSeparator\': false\n      },\n      // Polish (Poland)\n      \'pt\': {\n        \'decimalSeparator\': false\n      },\n      // Portuguese\n      \'pt-BR\': {\n        \'decimalSeparator\': false\n      },\n      // Portuguese (Brazil)\n      \'pt-PT\': {\n        \'decimalSeparator\': false\n      },\n      // Portuguese (Portugal)\n      \'ro\': {\n        \'decimalSeparator\': false\n      },\n      // Romanian (Romania)\n      \'ru\': {\n        \'decimalSeparator\': false\n      },\n      // Russian (Russia)\n      \'sr\': {\n        \'decimalSeparator\': false\n      },\n      // Serbian (Yugoslavia)\n      \'sh\': {\n        \'decimalSeparator\': false\n      },\n      // Serbo-Croatian (Yugoslavia)\n      \'sk\': {\n        \'decimalSeparator\': false\n      },\n      // Slovak (Slovakia)\n      \'sl\': {\n        \'decimalSeparator\': false\n      },\n      // Slovenian (Slovenia)\n      \'es\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish\n      \'es-AR\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Argentina)\n      \'es-CL\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Chile)\n      \'es-CO\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Colombia)\n      \'es-CR\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Costa Rica)\n      \'es-HN\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Honduras)\n      \'es-MX\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Mexico)\n      \'es-PE\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Peru)\n      \'es-ES\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Spain)\n      \'es-US\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (United States)\n      \'es-UY\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Uruguay)\n      \'es-VE\': {\n        \'decimalSeparator\': false\n      },\n      // Spanish (Venezuela)\n      \'sv\': {\n        \'decimalSeparator\': false\n      },\n      // Swedish (Sweden)\n      \'th\': {\n        \'decimalSeparator\': true\n      },\n      // Thai (Thailand)\n      \'tr\': {\n        \'decimalSeparator\': false\n      },\n      // Turkish (Turkey)\n      \'uk\': {\n        \'decimalSeparator\': false\n      },\n      // Ukrainian (Ukraine)\n      \'vi\': {\n        \'decimalSeparator\': false\n      } // Vietnamese\n    };\n  }\n  ;\n  CultureSeparator.prototype.isDecimalSeparatorDot = function (value) {\n    if (value) {\n      if (this.List[value] != undefined) {\n        return this.List[value].decimalSeparator;\n      }\n    }\n    return null;\n  };\n  VIS.DB.DataSet = DataSet;\n  VIS.DB.DataTable = DataTable;\n  VIS.DB.DataRow = DataRow;\n  VIS.DB.SqlParam = SqlParam;\n  VIS.DB.DataReader = DataReader;\n  VIS.MessageFormat = MessageFormat;\n  VIS.TimeUtil = TimeUtil;\n  VIS.CultureSeparator = CultureSeparator;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/utility.js?')},"./Areas/VIS/Scripts/app/viewmanager.js":()=>{eval(';\n(function (VIS) {\n  //scope\n  var dm = VIS.desktopMgr; // shorthand for desktopMge object\n  var $mainConatiner = dm.getMainConatiner(); // main conatiner \n\n  function viewManager() {\n    var ACTION_WORKBENCH = "B";\n    /** WorkFlow = F */\n    var ACTION_WORKFLOW = "F";\n    /** Process = P */\n    var ACTION_PROCESS = "P";\n    /** Report = R */\n    var ACTION_REPORT = "R";\n    /** Task = T */\n    var ACTION_TASK = "T";\n    /** Window = W */\n    var ACTION_WINDOW = "W";\n    /** Form = X */\n    var ACTION_FORM = "X";\n    var SEPRATOR = "!"; // history action seprator\n    var historyActions = []; // conatins history string array\n    var windowObjects = {}; // store all window(javascrpt)  references\n    var s_hiddenWindows = []; /** list of hidden Windows\t\t\t\t*/\n    var navigatingInWindows = false; // set its value true when navigaing through windows , otherwise false\n    // var $mainNavigationDiv = null; //Navigation Div Container\n\n    var $navRoot = null;\n    var $innerDiv = null;\n    var $menu = null;\n    var restoreAction = false;\n    var restoredWindowCount = 0;\n    var currentFrame = null;\n    init();\n    var mainPage = {\n      startAction: startAction,\n      restoreActions: restoreActions,\n      resize: refresh,\n      sizeChanged: sizeChanged,\n      startWindow: startWindow,\n      startForm: startForm,\n      startCFrame: startCFrame,\n      startActionInNewTab: startActionInNewTab,\n      closeFrame: closeFrame\n    };\n    return mainPage; // return mainpage object and public functions\n\n    /*\r\n     * close the window\r\n     * @param id id of item\r\n     */\n\n    function closeFrame(id) {\n      return windowObjects[id].dispose();\n    }\n\n    /*\r\n     * start menu Item\r\n     * @param action type of item\r\n     * @param id id of item\r\n     */\n    function startAction(action, id) {\n      if (ACTION_WINDOW === action) {\n        startWindow(id);\n      } else if (ACTION_FORM === action) {\n        startForm(id);\n        //\n      } else if (ACTION_PROCESS === action || ACTION_REPORT === action) {\n        startProcess(id, action);\n      }\n    }\n    ;\n    function addShortcut(id, imgName, name, hid) {\n      if (restoreAction) {\n        addRestoredShortcut();\n      } else {\n        var imgPath = "fa fa-window-maximize";\n        if (imgName) {\n          imgPath = imgName;\n        }\n        dm.addTaskBarItem(id, imgPath, name);\n\n        // In case of default Home page, Do not add home page in URL. \n        if (hid && id.slice(id.indexOf(\'_\') + 1) != VIS.MRole.getHomePage()) {\n          historyActions.push(hid);\n          historyMgr.updateHistory(encode(historyActions.join(SEPRATOR)));\n        }\n      }\n    }\n    ;\n    function addRestoredShortcut() {\n      restoredWindowCount++;\n      if (restoredWindowCount == Object.keys(windowObjects).length) {\n        restoreAction = false;\n        for (var item in windowObjects) {\n          addShortcut(windowObjects[item].id, windowObjects[item].img, windowObjects[item].name, windowObjects[item].hid);\n        }\n      }\n    }\n    ;\n    function encode(action) {\n      action = VIS.Utility.encode(action);\n      return action;\n    }\n\n    /* Remove ShortCut icon form list\r\n     * @param id parameter id of LI element to remove\r\n     * @param $panel jquery window object to remove\r\n     */\n\n    function removeShortcut(id, $panel, hid, AD_Window_ID) {\n      dm.unRegisterView(id); //remove from desktop\n      if (hid) {\n        var index = historyActions.indexOf(hid);\n        if (index > -1) {\n          historyActions.splice(index, 1);\n        }\n        historyMgr.updateHistory(encode(historyActions.join(SEPRATOR)));\n      }\n      var windw = windowObjects[id];\n      windowObjects[id] = null;\n      delete windowObjects[id];\n      currentFrame = null;\n      if (AD_Window_ID && hideWindow(windw)) return false;\n      return true;\n    }\n    ;\n\n    /* Start Window\r\n     *@param id id of window\r\n     *@param qry Query Object\r\n     */\n    function startWindow(id, qry) {\n      var sel = null;\n      if (id.toString().indexOf("&") != -1) {\n        sel = id.split("&")[1];\n        id = id.split("&")[0];\n      }\n      var windw = showWindow(id); //form cache\n      if (windw && !windw.hasError) {\n        windw.refreshData();\n        windw.show($mainConatiner, addShortcut);\n        registerView(windw);\n        setGridFont();\n        return windw;\n      }\n      windw = new VIS.AWindow();\n      if (windw.initWindow(id, qry, addShortcut, ACTION_WINDOW, sel)) {\n        windw.onClosed = removeShortcut;\n        windw.show($mainConatiner);\n        registerView(windw);\n        setGridFont();\n      }\n      return windw;\n    }\n    ;\n\n    /* Check browser zoom level and based on that set W2UI grid font for window */\n    function setGridFont() {\n      var dynamicClassName = ".w2ui-reset table{font-family: var(--v-c-font-family);";\n      if (Math.round(window.devicePixelRatio * 100) >= 100) {\n        dynamicClassName += "font-size: 0.85rem !important;}";\n      } else {\n        dynamicClassName += "font-size: 1rem !important;}";\n      }\n      //\n      if (this.styleTag) {\n        this.styleTag.remove();\n        $(\'.vis-gc-vtable\').removeClass(\'w2ui-reset\');\n        $(\'.vis-gc-vtable\').addClass(\'w2ui-reset\');\n      } else {\n        $(\'.vis-gc-vtable\').addClass(\'w2ui-reset\');\n      }\n      this.styleTag = document.createElement(\'style\');\n      this.styleTag.type = \'text/css\';\n      this.styleTag.innerHTML = dynamicClassName;\n      $($(\'head\')[0]).append(this.styleTag);\n    }\n    ;\n\n    /* Start form\r\n    *@param id id of form\r\n    */\n    function startForm(id, additionalInfo) {\n      if (id.toString().indexOf("&") != -1) {\n        additionalInfo = id.split("&")[1];\n        id = id.split("&")[0];\n      }\n      var windw = new VIS.AWindow();\n      if (VIS.MRole.getIsDisableMenu()) {\n        windw.hideCloseIcon(true);\n      }\n      if (windw.initForm(id, addShortcut, ACTION_FORM, additionalInfo)) {\n        windw.onClosed = removeShortcut;\n        windw.show($mainConatiner);\n        registerView(windw);\n      }\n    }\n    ;\n\n    /* Start process\r\n    *@param id id of process\r\n    */\n    function startProcess(id, action) {\n      var windw = new VIS.AWindow();\n      //Uncomment this code to run report in split mode.\n      if (windw.initProcess(id, addShortcut, action, true)) {\n        //  if (windw.initProcess(id, addShortcut, action)) {\n        windw.onClosed = removeShortcut;\n        windw.show($mainConatiner);\n        registerView(windw);\n      }\n    }\n    ;\n    function startCFrame(windw) {\n      windw.onClosed = removeShortcut;\n      windw.show($mainConatiner);\n      addShortcut(windw.getId(), "fa fa-list-alt", windw.getName(), null);\n      registerView(windw);\n    }\n    ;\n\n    /*\r\n      cache window object \r\n      and send window Ui root element to desktopmanager\r\n      @param window object\r\n    */\n    function registerView(windw) {\n      dm.registerView(windw.getId(), windw.getRootLayout());\n      windowObjects[windw.getId()] = windw;\n      //restoredWindowObjects[windw.getId()] = null;\n    }\n    ;\n\n    /*\r\n       restore history actions \r\n       @param actionstr url string\r\n    */\n    function restoreActions(actionStr) {\n      try {\n        historyMgr.updateHistory("#");\n        var sel = [];\n        if (actionStr.indexOf("&") != -1) {\n          actionStr = actionStr.split("&");\n          sel = actionStr[1].split(\',\');\n          actionStr = actionStr[0];\n        }\n        actionStr = VIS.Utility.decode(actionStr); // decrypt url\n        if (actionStr.length > 0) {\n          restoreAction = true;\n          var actions = actionStr.split(SEPRATOR); // seprate actions\n          for (var i = 0, len = actions.length; i < len; i++) {\n            if (actions[i].length > 0) {\n              var actionId = actions[i];\n              var action = actionId.substring(0, 1); // either W  or P or X etc...\n              var id = actionId.substring(2); // id of action\n              if (ACTION_FORM === action) {\n                if (!VIS.MRole.getFormAccess(id)) {\n                  console.log("No Form Access");\n                  if (sel && sel.length > 0) {\n                    sel.shift();\n                  }\n                  continue;\n                }\n                if (sel && sel.length > 0) {\n                  id += "&" + sel.shift();\n                }\n              } else if (ACTION_PROCESS === action || ACTION_REPORT === action) {\n                if (!VIS.MRole.getProcessAccess(id)) {\n                  console.log("No Process Access");\n                  continue;\n                }\n              } else if (ACTION_WINDOW === action) {\n                if (!VIS.MRole.getWindowAccess(id)) {\n                  console.log("No Window Access");\n                  if (sel && sel.length > 0) {\n                    sel.shift();\n                  }\n                  continue;\n                }\n                if (sel && sel.length > 0) {\n                  id += "&" + sel.shift();\n                }\n              }\n              startAction(action, id); //start menu action\n            }\n          }\n        }\n      } catch (e) {\n        historyMgr.updateHistory("#"); //update url\n        console.log(e);\n      }\n    }\n    ;\n\n    /* \r\n    - grid need to be resize when window get focus\r\n    @param id unique name of window object\r\n    */\n    function refresh(id) {\n      if (windowObjects[id]) currentFrame = windowObjects[id].refresh();\n    }\n    ;\n\n    /* resize all open windows when screen size is changed\r\n    */\n    function sizeChanged(h, w) {\n      setGridFont();\n      for (var id in windowObjects) {\n        windowObjects[id].sizeChanged(h, w);\n      }\n      //alert("resize");\n    }\n    ;\n\n    /*\r\n      open action(W,P,X) in new tab of browser\r\n      @param action type of menu item\r\n      @param id of action\r\n    */\n    function startActionInNewTab(action, id) {\n      if (action && id) {\n        var qs = action + "=" + id;\n        qs = encode(qs);\n        window.open(VIS.Application.contextUrl + "#" + qs);\n        return;\n      }\n      alert("improper data");\n    }\n    ;\n\n    /*\r\n      cache window object \r\n      if cache window option set to true in preference setting\r\n      @param window object\r\n    */\n    function hideWindow(windw) {\n      if (!VIS.Ini.getIsCacheWindow()) return false;\n      for (var i = 0; i < s_hiddenWindows.length; i++) {\n        var hidden = s_hiddenWindows[i];\n        //_log.Info(i + ": " + hidden);\n        if (hidden.getAD_Window_ID() == windw.getAD_Window_ID()) return true; //\talready there\n      }\n      if (windw.getAD_Window_ID() != 0) {\n        try {\n          s_hiddenWindows.push(windw);\n          if (s_hiddenWindows.length > 10) s_hiddenWindows.splice(0, 1); //\tsort of lru\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      return false;\n    }\n    ;\n\n    /* show window from cache \r\n    @param AD_window_ID if of window\r\n    */\n    function showWindow(AD_Window_ID) {\n      for (var i = 0; i < s_hiddenWindows.length; i++) {\n        var hidden = s_hiddenWindows[i];\n        if (hidden.getAD_Window_ID() == AD_Window_ID) {\n          s_hiddenWindows.splice(i, 1); // RemoveAt(i);\n          return hidden;\n        }\n      }\n      return;\n    }\n    ;\n    function init() {\n      $menu = dm.getMenuDiv();\n      $(document).on(\'keydown\', keydownDoc).on(\'keyup\', keydownup);\n      $navRoot = dm.getNavSection();\n      $innerDiv = $navRoot.find(".vis-app-action-nav-inner");\n      $innerDiv.on("click", navClick);\n    }\n\n    /* Handle Keydown event to add shortcuts to window\r\n    @param event : event argument provided by JQuery\r\n    */\n    function keydownDoc(event) {\n      // If Dialog is opened, then window\'s shortcut should not work\n      if ($(\'.ui-widget-overlay.ui-front\').length > 0 && (event.altKey && event.ctrlKey || event.altKey)) {\n        return false;\n      }\n      // Open Menu (Alt + M)\n      if (event.altKey && event.keyCode == 88) {\n        currentFrame.dispose();\n      } else if (event.altKey && event.keyCode == 77) {\n        dm.openMenu();\n      } else if ($menu.css(\'display\') != \'none\' && event.keyCode == 27) {\n        // Close Menu (Escape)\n        dm.closeMenu();\n      } else if (event.altKey && event.keyCode == 76) {\n        // LogOut (Alt + L)\n        VIS.ADialog.confirm("LogOut?", true, "", "Confirm", function (result) {\n          if (result) {\n            $(\'#logoutForm\').trigger(\'submit\');\n          }\n        });\n      } else if (!event.altKey && (event.ctrlKey || event.ctrlKey && event.shiftKey) && event.keyCode == 32) {\n        // CTRL + Space\n\n        // If no window is opened, then return\n        if (!windowObjects || Object.keys(windowObjects).length <= 0) {\n          return;\n        }\n\n        // Curser move backword if shift and ctrl key pressed\n        if (event.ctrlKey && event.shiftKey) {\n          navigationShortcuts(true, false);\n        } else {\n          navigationShortcuts(true, true);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      // Tab Navigation\n      else if (event.altKey && event.ctrlKey && (event.keyCode == 37 || event.keyCode == 39)) {\n        currentFrame.navigateThroghtShortcut(event.keyCode == 39);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      // Window\'s Common Actions\n      else if (currentFrame && typeof currentFrame.keyDown === \'function\') {\n        currentFrame.keyDown.call(currentFrame, event);\n      }\n    }\n    ;\n    function keydownup(event) {\n      if (!event.ctrlKey) {\n        navigationShortcuts(false);\n        navigatingInWindows = false;\n      }\n    }\n    ;\n\n    /*\r\n    Create Navigation Shortcuts and display\r\n    @param show: Show OR Hide navigation items\r\n    @param forward: Move forward or backwards\r\n    */\n    function navigationShortcuts(show, forward) {\n      if (show) {\n        $navRoot.css(\'display\', \'flex\');\n      } else {\n        if (navigatingInWindows) {\n          var item = $innerDiv.find(\'.vis-current-nav-window\');\n          showSelectedFrame(item);\n        }\n        return;\n      }\n\n      // navigatingInWindows false means , not navigating through open objects, So create navigation shortcuts\n      if (!navigatingInWindows) {\n        var htm = [];\n        //Parse each opened object(window, form, report OR process) and create navigation Shortcut\n        $.each(windowObjects, function (i, obj) {\n          //if (obj.hid) {\n          //    if (obj.hid.startsWith("W")) {         //if (obj.cPanel.constructor.name == \'APanel\') {\n          //        imgSrc = "fa fa-window-maximize";\n          //        if (obj.img) {\n          //            imgSrc = obj.img;\n          //        }\n          //    }\n          //    else if (obj.hid.startsWith("P")) {    //(obj.cPanel.constructor.name == \'AProcess\') {\n          //        imgSrc = "fa fa-cog";\n          //    }\n          //    else if (obj.hid.startsWith("X")) {   //if (obj.cPanel.constructor.name == \'AForm\') {\n          //        imgSrc = "fa fa-list-alt";\n          //    }\n          //    else if (obj.hid.startsWith("R")) {    //if (obj.cPanel.constructor.name == \'AForm\') {\n          //        imgSrc = "vis vis-report";\n          //    }\n          //}\n          if (!obj.img || obj.img == \'\') {\n            obj.img = "fa fa-list-alt";\n          }\n          var imgSrc = obj.img;\n          htm.push(\'<div tabindex=\' + i + \' data-wid="\' + obj.id + \'" class="\');\n          if (currentFrame.id == obj.id) {\n            htm.push(\'vis-current-nav-window \');\n          }\n          htm.push(\'vis-nav-window">\');\n          htm.push(\'<span>\' + obj.name + \'</span><div class="vis-nav-content-wrap">\');\n          if (imgSrc.indexOf(\'.\') > -1) {\n            imgSrc = imgSrc.replace("Thumb16x16", "Thumb140x120");\n            htm.push(\'<img data-wid="\' + obj.id + \'" class="vis-nav-window-img" src="\' + imgSrc + \'" alt="\' + obj.name + \'"> </img>\');\n          } else htm.push(\'<i data-wid="\' + obj.id + \'" class="\' + imgSrc + \'"></i>\');\n          htm.push(\'</div></div>\');\n        });\n        $innerDiv.append(htm.join(\' \'));\n        navigatingInWindows = true;\n      }\n      if (forward) {\n        var item = $innerDiv.find(\'.vis-current-nav-window\').next();\n        if (!item || item.length <= 0) {\n          // if control moved to last item of navigation items, then move it to first\n          item = $innerDiv.children().first();\n        }\n      } else {\n        var item = $innerDiv.find(\'.vis-current-nav-window\').prev(); // if control moved to First item of navigation items while backword movement, then move it to Last\n        if (!item || item.length <= 0) {\n          item = $innerDiv.children().last();\n        }\n      }\n      //}\n      $innerDiv.find(\'.vis-current-nav-window\').removeClass(\'vis-current-nav-window\');\n      item.addClass(\'vis-current-nav-window\').focus();\n    }\n    ;\n    function showSelectedFrame(item) {\n      if (currentFrame.id != item.data(\'wid\')) {\n        dm.toggleContainer(item.data(\'wid\'));\n        dm.activateTaskBarItemUsingID(item); // Open selected Shortcut item\n      }\n      $navRoot.css(\'display\', \'none\');\n      $innerDiv.empty();\n      navigatingInWindows = false;\n    }\n    ;\n\n    /*\r\n    IF User click on Navigation Item, then open it\r\n    */\n    function navClick(event) {\n      var target = $(event.target);\n      if (target.hasClass(\'vis-nav-window\') || target.hasClass(\'vis-nav-window-img\')) {\n        showSelectedFrame(target);\n      }\n    }\n    ;\n  }\n  ;\n\n  /*FRame for a Form \r\n   -set task bar ikon form\r\n   -remove task bar item form task bar on close\r\n  */\n  function CFrame(windowNo) {\n    this.frame = new VIS.AWindow();\n    this.frame.setName("Form");\n    this.onOpened = null;\n    this.onClose = null;\n    var content = null;\n    this.contentDispose = null;\n    this.error = false;\n    ;\n    this.windowNo = windowNo || VIS.Env.getWindowNo();\n    this.hideH = false;\n    var self = this;\n    this.setContent = function (root) {\n      if (!root.getRoot || !root.getRoot()) {\n        VIS.Dialog.error("Error", true, "class must define root element  and implement getRoot function");\n        root.dispose();\n        this.error = true;\n      }\n      if (!root.sizeChanged) root.sizeChanged = function () {};\n      if (!root.refresh) root.refresh = function () {};\n      if (root.dispose) {\n        this.contentDispose = root.dispose;\n        root.dispose = function () {\n          self.dispose();\n        };\n      }\n      content = root;\n      this.frame.setCFrameContent(root, this.windowNo);\n      if (this.hideH) this.frame.hideHeader(this.hideH);\n    };\n    this.dispose = function () {\n      if (this.disposing) return;\n      this.disposing = true;\n      this.contentDispose.call(content);\n      //if (this.frame && this.frame.onClosed) {\n      //    this.frame.onClosed(this.frame.id, this.frame.$layout, this.frame.hid);\n      //    this.frame.onClosed = null;\n      //}\n\n      if (this.frame) this.frame.dispose();\n      this.frame = null;\n      this.onOpened = null;\n      this.onClose = null;\n      content = null;\n      this.contentDispose = null;\n      self = null;\n    };\n  }\n  ;\n  CFrame.prototype.setTitle = function (title) {\n    this.frame.setTitle(title);\n  };\n  CFrame.prototype.getTitle = function (title) {\n    return this.frame.getTitle();\n  };\n  CFrame.prototype.setName = function (name) {\n    this.frame.setName(name);\n  };\n  CFrame.prototype.show = function () {\n    if (this.error) {\n      this.dispose();\n      return;\n    }\n    VIS.viewManager.startCFrame(this.frame);\n    if (this.onOpened) this.onOpened();\n  };\n  CFrame.prototype.hideHeader = function (hide) {\n    this.hideH = hide;\n    if (this.frame.cPanel) this.frame.hideHeader(hide);\n  };\n  VIS.viewManager = viewManager();\n  VIS.CFrame = CFrame;\n})(VIS);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/viewmanager.js?')},"./Areas/VIS/Scripts/app/windowformcontainer.js":()=>{eval('//*** AForm *******//\n\n;\n(function (VIS, $) {\n  function WForm(height, AD_Form_ID, curTab, pWwindowNo) {\n    var $root, $busyDiv, $contentGrid, ch;\n    var ctx = VIS.Env.getCtx(); //ctx\n    var log = VIS.Logging.VLogger.getVLogger("VIS.AForm"); //Logger\n    var windowNo = VIS.Env.getWindowNo();\n    var self = this;\n    //InitComponenet\n    function initComponent() {\n      $root = $("<div class=\'vis-height-full\'>");\n      $busyDiv = $("<div class=\'vis-apanel-busy\'>");\n      $contentGrid = $("<div class=\'vis-height-full\'>");\n      $root.append($contentGrid).append($busyDiv);\n      ch = new VIS.ChildDialog();\n      getFormDetails();\n    }\n    ;\n    initComponent();\n    this.getWindowNo = function () {\n      return windowNo;\n    };\n    this.getAD_Table_ID = function () {\n      return curTab.getAD_Table_ID();\n    };\n    this.getAD_Window_ID = function () {\n      return curTab.getAD_Window_ID();\n    };\n    this.getRecord_ID = function () {\n      return curTab.getRecord_ID();\n    };\n    this.getContentGrid = function () {\n      return $contentGrid;\n    };\n    this.close = function () {\n      if (ch) {\n        ch.close();\n      }\n    };\n    this.disposeComponent = function () {\n      $root.remove();\n      $root = null;\n      $contentGrid.remove();\n      $contentGrid = null;\n      this.getContentGrid = null;\n      self = null;\n    };\n    function getFormDetails() {\n      VIS.dataContext.getFormDataString({\n        AD_Form_ID: AD_Form_ID\n      }, function (json) {\n        if (json.error != null) {\n          VIS.ADialog.error(json.error); //log error\n          self.dispose();\n          self = null;\n          return;\n        }\n        var jsonData = $.parseJSON(json.result); // widow json\n        if (jsonData.IsError) {\n          VIS.ADialog.error(jsonData.Message); //log error\n          self.dispose();\n          self = null;\n          return;\n        }\n        ch.setTitle(jsonData.DisplayName);\n        openForm(jsonData, self, pWwindowNo);\n        jsonData = null;\n      });\n    }\n    ;\n    openForm = function (json, $parent, pWwindowNo) {\n      if (json.IsReport) {\n        VIS.ADialog.info("Form Report is not supported");\n        return false;\n      }\n      var className = "";\n      className = json.Prefix + json.ClassName;\n      console.log(className);\n      log.info("Form Name= " + json.Name + ", Class=" + className);\n      ctx.setWindowContext(windowNo, "WindowName", json.DisplayName);\n      try {\n        var type = VIS.Utility.getFunctionByName(className, window);\n        var o = new type(windowNo);\n        o.init(pWwindowNo, self);\n        if (o.setRecordID) {\n          o.setRecordID(curTab.getRecord_ID());\n        }\n        showForm(o);\n      } catch (e) {\n        log.log(VIS.Logging.Level.WARNING, "Class=" + className + ", AD_Form Name=" + json.Name, e);\n        return false;\n      }\n      return true;\n    };\n    function showForm(type) {\n      ch.setContent($contentGrid);\n      if (type.setHeight) {\n        ch.setHeight(type.setHeight());\n      } else {\n        ch.setHeight(height);\n      }\n      if (type.setWidth) {\n        ch.setWidth(type.setWidth());\n      } else {\n        ch.setWidth(window.innerWidth - 100);\n      }\n      ch.setModal(true);\n      ch.onClose = function () {\n        // invoke dispose event of form if exist.\n\n        if (type.dispose) {\n          type.dispose();\n        }\n        if (ch.dispose) {\n          ch.dispose();\n        }\n        // Refresh current record of window..\n        curTab.dataRefresh();\n\n        // dispose self..\n        if (self.disposeComponent) {\n          self.disposeComponent();\n        }\n      };\n      ch.show();\n      ch.hidebuttons();\n    }\n    ;\n  }\n  ;\n  VIS.WForm = WForm;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/app/windowformcontainer.js?')},"./Areas/VIS/Scripts/home/changeuserimage.js":()=>{eval(';\n(function (VIS, $) {\n  function changeUserImage() {\n    // debugger;\n    var $txtChangeStatus = $("#vis-textStatus");\n    var $imgOkStatus = $("#vis-img-OKStatus");\n    var $imgCancelStatus = $("#vis-img-CancelStatus");\n    var $labelStatus = $("#vis-labelStatus");\n    $("#vis-file-input").change(function () {\n      var file = document.getElementById(\'vis-file-input\').files[0];\n      if (file != null) {\n        // VIS0060: Validated only image file can be seelected\n        var type = file.type.split(\'/\').pop().toLowerCase();\n        if (type != "jpeg" && type != "jpg" && type != "png" && type != "ico" && type != "webp" && type != "svg") {\n          VIS.ADialog.info("SelectImageOnly");\n          return false;\n        }\n        var xhr = new XMLHttpRequest();\n        var fd = new FormData();\n        fd.append("file", file);\n        xhr.open("POST", VIS.Application.contextUrl + "Home/SaveImageAsByte", true);\n        xhr.send(fd);\n        xhr.addEventListener("load", function (event) {\n          var dd = event.target.response;\n          var res = JSON.parse(dd);\n          var a = JSON.parse(res);\n          $(\'.vis-userAvatar-Container\').find(\'i\').remove().find(\'img\').remove();\n          $(\'.vis-userAvatar-Container\').find(\'img\').remove();\n          $(\'.vis-userAvatar-Container\').append(\'<img id="imgUsrImage" alt="User avatar" class="vis-userAvatar-Large"></img>\');\n          $("#imgUsrImage").attr(\'src\', "data:image/jpg;base64," + a);\n        }, false);\n      }\n    });\n    $(\'#vis-file-input-remove\').on("click", function () {\n      if ($(\'.vis-userAvatar-Container\').find(\'img\').length > 0) {\n        VIS.ADialog.confirm("ConfirmDeleteImage", true, "", "Confirm", function (result) {\n          if (result) {\n            $.ajax({\n              url: VIS.Application.contextUrl + "Home/DeleteUserImage",\n              success: function (data) {\n                $(\'.vis-userAvatar-Container\').find(\'img\').remove();\n                $(\'.vis-userAvatar-Container\').append(\'<i id="imgUsrImage" class="vis-userAvatar-Large vis vis-user"></i>\');\n                $(\'.vis-app-user-img-wrap\').find(\'img\').remove();\n                document.getElementById(\'vis-file-input\').value = null;\n              },\n              error: function (err) {}\n            });\n          }\n        });\n      }\n    });\n    function saveStatus() {\n      $txtChangeStatus = $("#vis-textStatus");\n      $.ajax({\n        url: VIS.Application.contextUrl + "Home/SaveStatus",\n        dataType: "json",\n        type: "POST",\n        async: false,\n        data: {\n          status: $txtChangeStatus.val()\n        },\n        success: function (data) {\n          // debugger;\n          if (JSON.parse(data).length > 0) {\n            $txtChangeStatus.css("visibility", "hidden");\n            $imgCancelStatus.css("visibility", "hidden");\n            $imgOkStatus.css("visibility", "hidden");\n            $labelStatus.css("visibility", "visible");\n            $labelStatus.text(JSON.parse(data));\n          } else {\n            $txtChangeStatus.css("visibility", "visible");\n            $imgCancelStatus.css("visibility", "hidden");\n            $imgOkStatus.css("visibility", "hidden");\n            $labelStatus.css("visibility", "visible");\n            $labelStatus.text(JSON.parse(data));\n          }\n        }\n      });\n    }\n    $imgOkStatus.on("click", function () {\n      //debugger;\n      saveStatus();\n    });\n    $imgCancelStatus.on("click", function () {\n      // debugger;\n      $txtChangeStatus.css("visibility", "hidden");\n      $imgCancelStatus.css("visibility", "hidden");\n      $imgOkStatus.css("visibility", "hidden");\n      $labelStatus.css("visibility", "visible");\n    });\n    $txtChangeStatus.on("focus", function () {\n      //  debugger;\n      $imgCancelStatus.css("visibility", "visible");\n      $imgOkStatus.css("visibility", "visible");\n    });\n    $txtChangeStatus.on("keypress", function (e) {\n      //debugger;\n      var key = e.keyCode || e.which;\n      if (key == 13) {\n        saveStatus();\n      }\n    });\n    $txtChangeStatus.on("blur", function () {\n      // debugger;\n      //$("#vis-img-CancelStatus").css("visibility", "hidden");\n      //$("#vis-img-OKStatus").css("visibility", "hidden");\n    });\n    $labelStatus.on("click", function () {\n      $labelStatus.css("visibility", "hidden");\n      $txtChangeStatus.css("visibility", "visible");\n      //$imgCancelStatus.css("visibility", "visible");\n      //$imgOkStatus.css("visibility", "visible");\n\n      $txtChangeStatus.val($labelStatus.text());\n      $txtChangeStatus.focus();\n    });\n  }\n  ;\n  VIS.changeUserImage = changeUserImage;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/home/changeuserimage.js?')},"./Areas/VIS/Scripts/home/favourite.js":()=>{eval(";\n(function (VIS, $) {\n  function favMgr() {\n    var favDiv;\n    var favContainer;\n    var ul, atab;\n    var mgr = {\n      init: init,\n      addFavourite: addFavouriteMenu,\n      removeFavourite: removeFavourite\n    };\n    return mgr;\n    function init(_favDiv) {\n      favDiv = _favDiv;\n      favContainer = favDiv.find(\"#vis_favScroll\");\n      getFavouriteNode();\n      atab = $('#userFav-Tab');\n      ul = $('<ul class=\"vis-userFavourites-ListMenu\">');\n      ul.on(\"click\", function (e) {\n        var $target = $(e.target);\n        if ($target.data('btn') == 'action') {\n          VIS.viewManager.startAction($target.data(\"action\"), $target.data(\"id\"));\n        } else if ($target.data('btn') == 'zoom') {\n          VIS.viewManager.startActionInNewTab($target.data(\"action\"), $target.data(\"id\"));\n          // alert($target.data(\"action\") + \" \" + $target.data(\"id\"));\n        } else if ($target.data('btn') == 'remove') {\n          // e.stopPropagation()\n          removeFav($target.data(\"id\"));\n          var divCon = $($target).parent().parent();\n          divCon.empty();\n          divCon.remove();\n          setCount(ul.find('li').length);\n        }\n      });\n    }\n    ;\n    function getFavouriteNode() {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"Home/GetFavouriteNode\",\n        dataType: \"json\",\n        error: function () {\n          alert(VIS.Msg.getMsg('ERRORGetFavouriteNode'));\n        },\n        success: function (data) {\n          favContainer.empty();\n          if (data.result) {\n            for (var itm = 0, j = data.result.length; itm < j; itm++) {\n              addFavourite(data.result[itm]);\n            }\n          }\n          setCount(ul.find('li').length);\n          favContainer.append(ul);\n        }\n      });\n    }\n    ;\n    function addFavouriteMenu(barNode) {\n      addFavourite(barNode);\n      setCount(ul.find('li').length);\n    }\n    function addFavourite(barNode) {\n      if (ul == null) return;\n      var li = $('<li data-nodeid=\"' + barNode.NodeID + '\" >');\n      var id = 0;\n      if (barNode.Action == \"W\") {\n        id = barNode.WindowID;\n      } else if (barNode.Action == \"X\") {\n        id = barNode.FormID;\n      } else if (barNode.Action == \"P\") {\n        id = barNode.ProcessID;\n      } else if (barNode.Action == \"R\") {\n        id = barNode.ProcessID;\n      }\n      var aNode = $('<a href=\"#\" data-id=\"' + id + '\" data-action=\"' + barNode.Action + '\" data-nodeid=\"' + barNode.NodeID + '\" data-btn=\"action\" style=\"overflow: auto;\" >');\n      //aNode.on('click', function () {\n      //    var id = $(this).data(\"id\");\n      //    var action = $(this).data(\"action\");\n      //    VIS.viewManager.startAction(action, id);\n      //});\n      var favboxtopicowrap = $('<div class=\"vis-favboxtopico\">');\n      var btnRemove = $(\"<a href='javascript:void(0)' data-id='\" + barNode.NodeID + \"'  data-btn='remove' class='vis vis-removefav'>\");\n      favboxtopicowrap.append(btnRemove);\n      var btnZoom = $(\"<a href='javascript:void(0)' data-id='\" + id + \"' data-action='\" + barNode.Action + \"' data-btn='zoom' class='vis vis-new-tab'>\");\n      //btnZoom.on('click', function (e) {\n\n      //});\n      favboxtopicowrap.append(btnZoom);\n      li.append(favboxtopicowrap);\n      li.append(aNode);\n      //var btnRemove = $(\"<span data-id='\" + barNode.NodeID + \"' class='favouritesIcons icon-favourite-large vis-span-bottom'>\");\n      //btnRemove.on('click', function (e) {\n      //    e.stopPropagation()\n      //    removeFav($(this).data(\"id\"));\n      //    var divCon = $(this).parent();\n      //    divCon.empty();\n      //    divCon.remove();\n      //    setCount(ul.find('li').length);\n      //});\n      // aNode.append(btnRemove);\n      // aNode.append(\"<i>\");\n      var name = barNode.Name;\n      if (name.length > 27) {\n        name = name.substr(0, 27);\n        aNode.append(name);\n        var aFName = $(\"<a href='#' class='VIS_Pref_tooltip' style='display: inline-block;'>\").append('...');\n        var span = $(\"<span style='width: inherit;'>\");\n        span.append($(\"<img class='VIS_Pref_callout'>\").attr('src', VIS.Application.contextUrl + \"Areas/VIS/Images/ccc.png\").append(\"ToolTip Text\"));\n        span.append($(\"<label class='VIS_Pref_Label_Font'>\").append(barNode.Name));\n        aFName.append(span);\n        aNode.append(aFName);\n      } else {\n        aNode.append(barNode.Name);\n      }\n      ul.append(li);\n    }\n    ;\n    function removeFavourite(nodeID) {\n      if (ul == null) {\n        return;\n      }\n      var arr = ul.find('li');\n      var current = null;\n      for (var itm = 0, len = arr.length; itm < len; itm++) {\n        current = $(arr[itm]);\n        if (current.data('nodeid') === nodeID) {\n          current.remove();\n        }\n      }\n      arr = current = null;\n      setCount(ul.find('li').length);\n    }\n    ;\n    function removeFav(nodeID) {\n      VIS.FavouriteHelper.removeFavourite(nodeID);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"Home/RemoveNodeFavourite/?nodeID=\" + nodeID,\n        dataType: \"json\"\n      });\n    }\n    ;\n    function setCount(count) {\n      atab.empty();\n      atab.html(\"<span><i class='vis vis-favourite'></i></span><span class='favouriteTabLabel-Large'>\" + VIS.Msg.getMsg('Favourites') + \" - \" + \"</span><strong>\" + count + \"</strong>\");\n    }\n    ;\n  }\n  ;\n  VIS.favMgr = favMgr();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/home/favourite.js?")},"./Areas/VIS/Scripts/home/home.js":()=>{eval(';\n(function (VIS, $) {\n  function HomeMgr() {\n    /*Start initialize  globale variable for home page*/\n    var $home = null;\n    var horizontalScroll = null;\n    var FllUpsMain = null;\n    var workflowActivityData = null;\n    var userLinksScroll = null;\n    var userFavsScroll = null;\n    var WelcomeTabDatacontainers = null;\n    var $hlnkRefTabData = null;\n    var favLinks = null;\n    //to get click type of tab menu\n    var activeTabType = null;\n    var $workflowActivity = null;\n    var isWsp = null;\n    var $divTabContainerLoder = null;\n    var $workflowActivityDetails = null;\n    var $WelcomeScreenHdr = null;\n    var activity = null;\n    var isTabAjaxBusy = null;\n    var isTabDataRef = null;\n    //menu tab object\n    var $ulHomeTabMenu = null;\n    //loder of menu tab\n    var $divTabMenuDataLoder = null;\n    /* count div object of menu tab  start*/\n    var $divNoticeCount = null;\n    var $divRequestCount = null;\n    var $divNotesCount = null;\n    var $divAptCount = null;\n    var $divKPICount = null;\n    //welcomeScreenHeader\n    var $sAlrtTxtType = null,\n      $hAlrtTxtTypeCount = null;\n    /* count div object of menu tab  end*/\n    var $spanWelcomeTabtopHdr = null;\n\n    /*Search Data*/\n    var $searchData = null;\n    //set Follups Enter Key Code\n    var EnterKeyCode = 13;\n    //1=Profile,2=Request,3=Workflow,4=Appointments,5=MyTask,6=Task Assign By Me,7=Document receave,8=Notice,9=Notes,10=KPI\n    var ProfileType = 1,\n      RequestType = 2,\n      WorkflowType = 3,\n      AppointmentsType = 4,\n      MyTaskType = 5,\n      TaskAssignByme = 6,\n      DocumentReceaveType = 7,\n      NoticeType = 8,\n      NotesType = 9,\n      kPIType = 10;\n    //PageNo start from 1 for scroll event\n    //Page Size start from 10 for Scroll event\n    var p_size = 10,\n      p_no = 1;\n    //Pagging varibale declaration\n    var isTabscroll = null,\n      tabdatapcount = null,\n      tabdataPageSize = null,\n      tabdataPage = null,\n      tabdataLastPage = null,\n      tabdatacntpage = null;\n    //declare Vis newrecord  variable\n    var $welcomeNewRecord = null;\n    var $wfSearchShow = null;\n    var baseUrl = VIS.Application.contextUrl;\n    var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n    var executeScalar = function (sql, params, callback) {\n      var async = callback ? true : false;\n      var dataIn = {\n        sql: sql,\n        page: 1,\n        pageSize: 0\n      };\n      var value = null;\n      getDataSetJString(dataIn, async, function (jString) {\n        dataSet = new VIS.DB.DataSet().toJson(jString);\n        var dataSet = new VIS.DB.DataSet().toJson(jString);\n        if (dataSet.getTable(0).getRows().length > 0) {\n          value = dataSet.getTable(0).getRow(0).getCell(0);\n        } else {\n          value = null;\n        }\n        dataSet.dispose();\n        dataSet = null;\n        if (async) {\n          callback(value);\n        }\n      });\n      return value;\n    };\n\n    //DataSet String\n    function getDataSetJString(data, async, callback) {\n      var result = null;\n      // data.sql = VIS.secureEngine.encrypt(data.sql);\n      $.ajax({\n        url: dataSetUrl,\n        type: "POST",\n        datatype: "json",\n        contentType: "application/json; charset=utf-8",\n        async: async,\n        data: JSON.stringify(data)\n      }).done(function (json) {\n        result = json;\n        if (callback) {\n          callback(json);\n        }\n        //return result;\n      });\n      return result;\n    }\n    ;\n\n    /*end initialize  globale variable for home page*/\n    function initHome(home) {\n      $home = home;\n      loadHome();\n    }\n\n    //to adjust div of home page\n    function adjustDivSize() {\n      //alert("call adjust");   \n      var windowWidth = $(window).width();\n      var divCount = $(".row.scrollerHorizontal > div").length;\n      divCount = divCount - 1;\n      $(\'.scrollerHorizontal\').width(windowWidth);\n      var sectionsWidth = windowWidth / divCount - 20;\n      var sectionsWidthFinal = parseInt(sectionsWidth);\n      var align = {};\n      if (VIS.Application.isRTL) {\n        $(\'#welcomeScreen\').css({\n          "right": "0",\n          "left": "auto"\n        });\n        //$("#fllupsScreen").css("padding-left", "0px");\n        //$("#favLinks").css("padding-left", "0px");\n        //$(\'#welcomeScreen\').css("padding-left", "0px");\n        //$(\'.row\').css("margin-left", "-10px");\n        $(\'.vis-welcomeScreenFeeds > .row\').css(\'margin-right\', \'0px\');\n        //$(\'.scrollerHorizontal\').css({ \'margin-left\': \'0px\', \'margin-right\': \'\' });\n      }\n      /* latop and large display screen size */\n      if (windowWidth >= 1366) {\n        if ($(\'#workflowActivity\').css(\'display\') == \'none\') {\n          //alert(divCount);\n          $(\'#welcomeScreen\').width(sectionsWidthFinal);\n          if (VIS.Application.isRTL) {\n            align = {\n              width: sectionsWidthFinal,\n              right: sectionsWidthFinal + 20\n            };\n          } else {\n            align = {\n              width: sectionsWidthFinal,\n              left: sectionsWidthFinal + 20\n            };\n          }\n          $("#fllupsScreen").animate(align, 200, function () {\n            // Animation complete.\n          });\n          if (VIS.Application.isRTL) {\n            align = {\n              width: sectionsWidthFinal,\n              right: sectionsWidthFinal * 2 + 40\n            };\n          } else {\n            align = {\n              width: sectionsWidthFinal,\n              left: sectionsWidthFinal * 2 + 40\n            };\n          }\n          $("#favLinks").animate(align, 200, function () {\n            // Animation complete.\n          });\n          //$("#feedsScreen").css("left" , (sectionsWidthFinal + 20));\n          //$("#favLinks").css("left" , (sectionsWidthFinal * 2 + 40));\n        } else if ($(\'#workflowActivity\').css(\'display\') == \'block\') {\n          var newWidth = windowWidth + sectionsWidthFinal + 20;\n          $(\'.scrollerHorizontal\').width(newWidth);\n          horizontalScroll.scroll();\n          //alert(newWidth);\n          $(\'#welcomeScreen\').width(sectionsWidthFinal);\n          if (VIS.Application.isRTL) {\n            align = {\n              width: sectionsWidthFinal,\n              right: sectionsWidthFinal + 20\n            };\n          } else {\n            align = {\n              width: sectionsWidthFinal,\n              left: sectionsWidthFinal + 20\n            };\n          }\n          $("#workflowActivity").animate(align, 200, function () {\n            workflowActivityData.scroll();\n          });\n          if (VIS.Application.isRTL) {\n            align = {\n              width: sectionsWidthFinal,\n              right: sectionsWidthFinal * 2 + 40\n            };\n          } else {\n            align = {\n              width: sectionsWidthFinal,\n              left: sectionsWidthFinal * 2 + 40\n            };\n          }\n          $("#fllupsScreen").animate(align, 200, function () {\n            // Animation complete.\n          });\n          if (VIS.Application.isRTL) {\n            align = {\n              width: sectionsWidthFinal,\n              right: sectionsWidthFinal * 3 + 60\n            };\n          } else {\n            align = {\n              width: sectionsWidthFinal,\n              left: sectionsWidthFinal * 3 + 60\n            };\n          }\n          $("#favLinks").animate(align, 200, function () {\n            // Animation complete.\n          });\n        }\n        //$(\'#vis_userTime\').show();\n        $(\'#vis_userDate\').show();\n      }\n      if (windowWidth > 1024 && windowWidth < 1366) {\n        if ($(\'#workflowActivity\').css(\'display\') == \'none\') {\n          //alert(divCount);\n          if (VIS.Application.isRTL) {\n            $("#fllupsScreen").css("right", sectionsWidthFinal + 20);\n            $("#favLinks").css("right", sectionsWidthFinal * 2 + 40);\n          } else {\n            $("#fllupsScreen").css("left", sectionsWidthFinal + 20);\n            $("#favLinks").css("left", sectionsWidthFinal * 2 + 40);\n          }\n          $(\'#welcomeScreen,#fllupsScreen,#favLinks\').width(sectionsWidthFinal);\n        } else if ($(\'#workflowActivity\').css(\'display\') == \'block\') {\n          var newWidth = windowWidth + sectionsWidthFinal + 20;\n          $(\'.scrollerHorizontal\').width(newWidth);\n          //alert(newWidth);\n          horizontalScroll.scroll();\n          $(\'#welcomeScreen,#fllupsScreen,#favLinks,#workflowActivity\').width(sectionsWidthFinal);\n          if (VIS.Application.isRTL) {\n            $("#workflowActivity").css("right", sectionsWidthFinal + 20);\n            $("#fllupsScreen").css("right", sectionsWidthFinal * 2 + 40);\n            $("#favLinks").css("right", sectionsWidthFinal * 3 + 60);\n          } else {\n            $("#workflowActivity").css("left", sectionsWidthFinal + 20);\n            $("#fllupsScreen").css("left", sectionsWidthFinal * 2 + 40);\n            $("#favLinks").css("left", sectionsWidthFinal * 3 + 60);\n          }\n        }\n        //$(\'#vis_userTime\').show();\n        $(\'#vis_userDate\').show();\n      }\n\n      /* ipad landscape and small display screen size */else if (windowWidth >= 1000 && windowWidth <= 1024) {\n        if ($(\'#workflowActivity\').css(\'display\') == \'none\') {\n          var screenResolution = windowWidth / 2;\n          var screenResolutionInteger = parseInt(screenResolution);\n          var screenResolutionFinal = screenResolutionInteger * divCount;\n          $(\'.scrollerHorizontal\').width(screenResolutionFinal);\n          if (VIS.Application.isRTL) {\n            $("#fllupsScreen").css("right", screenResolutionInteger);\n            $("#favLinks").css("right", screenResolutionInteger * 2);\n          } else {\n            $("#fllupsScreen").css("left", screenResolutionInteger);\n            $("#favLinks").css("left", screenResolutionInteger * 2);\n          }\n          $(\'#welcomeScreen,#fllupsScreen,#favLinks\').width(screenResolutionInteger - 20);\n        } else if ($(\'#workflowActivity\').css(\'display\') == \'block\') {\n          divCount = divCount + 1;\n          var screenResolution = windowWidth / 2;\n          var screenResolutionInteger = parseInt(screenResolution);\n          var screenResolutionFinal = screenResolutionInteger * divCount;\n          $(\'.scrollerHorizontal\').width(screenResolutionFinal);\n          horizontalScroll.scroll();\n          $(\'#welcomeScreen,#fllupsScreen,#favLinks,#workflowActivity\').width(screenResolutionInteger - 20);\n          if (VIS.Application.isRTL) {\n            $("#workflowActivity").css("right", screenResolutionInteger);\n            $("#fllupsScreen").css("right", screenResolutionInteger * 2);\n            $("#favLinks").css("right", screenResolutionInteger * 3);\n          } else {\n            $("#workflowActivity").css("left", screenResolutionInteger);\n            $("#fllupsScreen").css("left", screenResolutionInteger * 2);\n            $("#favLinks").css("left", screenResolutionInteger * 3);\n          }\n        }\n        //$(\'#vis_userTime\').show();\n        $(\'#vis_userDate\').show();\n      }\n\n      /* ipad portrait, other tablets, fablets and mobile display screen size */else if (windowWidth < 1000) {\n        if ($(\'#workflowActivity\').css(\'display\') == \'none\') {\n          var screenResolution = windowWidth * divCount;\n          var screenResolutionInteger = parseInt(screenResolution);\n          var screenElements = windowWidth;\n          $(\'.scrollerHorizontal\').width(screenResolutionInteger);\n          if (VIS.Application.isRTL) {\n            $("#fllupsScreen").css("right", screenElements);\n            $("#favLinks").css("right", screenElements * 2);\n          } else {\n            $("#fllupsScreen").css("left", screenElements);\n            $("#favLinks").css("left", screenElements * 2);\n          }\n          $(\'#welcomeScreen,#fllupsScreen,#favLinks\').width(screenElements - 20);\n        } else if ($(\'#workflowActivity\').css(\'display\') == \'block\') {\n          divCount = divCount + 1;\n          var screenResolution = windowWidth * divCount;\n          var screenResolutionInteger = parseInt(screenResolution);\n          var screenElements = windowWidth;\n          $(\'.scrollerHorizontal\').width(screenResolutionInteger);\n          horizontalScroll.scroll();\n          $(\'#welcomeScreen,#fllupsScreen,#favLinks,#workflowActivity\').width(screenElements - 20);\n          if (VIS.Application.isRTL) {\n            $("#workflowActivity").css("right", screenElements);\n            $("#fllupsScreen").css("right", screenElements * 2);\n            $("#favLinks").css("right", screenElements * 3);\n          } else {\n            $("#workflowActivity").css("left", screenElements);\n            $("#fllupsScreen").css("left", screenElements * 2);\n            $("#favLinks").css("left", screenElements * 3);\n          }\n        }\n        //$(\'#vis_userTime\').hide();\n        $(\'#vis_userDate\').hide();\n      }\n    }\n\n    //Get User Greetings(Good Morning,Good Afternoon etc)............Vivek\n    function getUserGreetings() {\n      var greeting = "";\n      var date = new Date();\n      var hours = date.getHours();\n      if (hours < 12) {\n        return VIS.Msg.getMsg("GoodMorning");\n      } else if (hours < 17) {\n        return VIS.Msg.getMsg("GoodAfternoon");\n      } else {\n        return VIS.Msg.getMsg("GoodEvening");\n      }\n    }\n\n    //Load Home Page like partial view Home\n    function loadHome() {\n      $home.load(VIS.Application.contextUrl + \'Home/Home\', function () {\n        isTabAjaxBusy = false;\n        isWsp = false;\n        isTabscroll = false;\n        isTabDataRef = false;\n        //Welcome Screan hder\n        $sAlrtTxtType = $("#sAlrtTxtType");\n        $hAlrtTxtTypeCount = $("#hAlrtTxtTypeCount");\n        $ulHomeTabMenu = $("#ulHomeTabMenu");\n        $divTabMenuDataLoder = $("#divTabMenuDataLoder");\n        $spanWelcomeTabtopHdr = $("#spanWelcomeTabtopHdr");\n        $searchData = $(\'#searchData\');\n        /*Start initialize div  object*/\n        horizontalScroll = $("#dataContainer");\n        FllUpsMain = $("#fllupsList");\n        workflowActivityData = $("#workflowActivityData");\n        userLinksScroll = $("#userLinks-List");\n        userFavsScroll = $("#userFavs-List");\n        $hlnkRefTabData = $("#hlnkTabDataRef");\n        WelcomeTabDatacontainers = $("#welcomeScreenFeedsList");\n        favLinks = $("#favLinks");\n        activeTabType = 1;\n        $workflowActivity = $(\'#workflowActivity\');\n        $divTabContainerLoder = $("#divTabMenuDataLoder");\n        $workflowActivityDetails = $("#workflowActivityDetails");\n        $WelcomeScreenHdr = $("#hWelcomeScreenSwapHdr");\n        $welcomeNewRecord = $("#sNewNts");\n        $wfSearchShow = $(\'#WFSearchshow\');\n        /*end  initialize div object */\n\n        //Count\n        $divNoticeCount = $("#divNoticeCount");\n        $divRequestCount = $("#divRequestCount");\n        $divNotesCount = $("#divNotesCount");\n        $divAptCount = $("#divAptCount");\n        $divKPICount = $(\'#divKPI\');\n        /*Start Pagging initialize */\n        tabdataPageSize = 10, tabdataPage = 0, tabdataLastPage = 0, tabdatacntpage = 0;\n        /*End Pagging initialize */\n\n        /* App Layout Adjustment Script START */\n        adjustDivSize();\n        $(window).resize(adjustDivSize);\n        /* App Layout Adjustment Script End */\n\n        /* Workflow Script start */\n        $(\'div.vis-workflowActivityTitleBar-buttons ul li .vis-icon-check\').on(VIS.Events.onTouchStartOrClick, function (evnt) {\n          $(\'#workflowActivity\').hide();\n          $(\'.vis-activityContainer\').removeClass(\'vis-activeFeed\');\n          adjustDivSize();\n          horizontalScroll.scroll();\n        });\n        $(\'#btnWFAClose\').on(VIS.Events.onTouchStartOrClick, function (evnt) {\n          $(\'#workflowActivity\').hide();\n          $(\'.vis-activityContainer\').removeClass(\'vis-activeFeed\');\n          adjustDivSize();\n          horizontalScroll.scroll();\n        });\n        /* Workflow Script end */\n\n        /* start change Profile picture  */\n        // Change User Image   \n        VIS.changeUserImage();\n        /* End change Profile picture  */\n\n        /* Toggle App Fav and links Script START */\n\n        $(\'#userFav-Tab\').click(function () {\n          $(\'#userLinks div\').removeClass(\'row userLinks_activeTab\');\n          $(\'#userLinks div\').addClass(\'row userLinks_inactiveTab\');\n          $(\'#userFavs div\').removeClass(\'row userFavs_inactiveTab\');\n          $(\'#userFavs div\').addClass(\'row userFavs_activeTab\');\n          $(\'#userLinks-List\').hide(\'fast\');\n          $(\'#userFavs-List\').show(\'fast\', function () {\n            setTimeout(function () {\n              //  userFavsScroll.scroll();\n              //favLinks.scroll();\n            }, 0);\n          });\n        });\n        $(\'#userLinks-Tab\').click(function () {\n          $(\'#userFavs div\').removeClass(\'row userFavs_activeTab\');\n          $(\'#userFavs div\').addClass(\'row userFavs_inactiveTab\');\n          $(\'#userLinks div\').removeClass(\'row userLinks_inactiveTab\');\n          $(\'#userLinks div\').addClass(\'row userLinks_activeTab\');\n          $(\'#userFavs-List\').hide(\'fast\');\n          $(\'#userLinks-List\').show(\'fast\', function () {\n            setTimeout(function () {\n              // userLinksScroll.scroll();\n              //favLinks.scroll();\n            }, 0);\n          });\n        });\n        VIS.shortcutMgr.init($(\'#userLinks-List\'), $(\'#userFavs-List\'));\n\n        /* Toggle App Fav and links Script END */\n\n        /* Toggle Welcome Screen Tabs */\n        $(\'.vis-welcomeScreenFeeds\').hide();\n        $(\'.vis-icon-userfeeds\').off("click");\n        $(\'.vis-icon-userfeeds\').on("click", function () {\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').show(\'fast\');\n          //$(\'.vis-welcomeScreenFeeds\').show(\'fast\', function () {\n          //    setTimeout(function () {\n          //        WelcomeTabDatacontainers.scroll();\n          //    }, 0);\n          //});\n        });\n        $(\'.vis-welcomeScreenTab-notificationBubbles\').on("click", function (e) {\n          return false;\n        });\n\n        //Show Greetings on Home Screen...........Vivek\n        var greeting = getUserGreetings();\n        $(\'#vis-userGreeting\').text(greeting);\n        /* start Referesh New tab Data*/\n        $hlnkRefTabData.on("click", function () {\n          isTabDataRef = true;\n          if (isTabAjaxBusy == false) {\n            if (activeTabType == ProfileType) {} else if (activeTabType == RequestType) {\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              emptyWelcomeTabDatacontainers();\n              ;\n              LoadHomeRequest();\n            } else if (activeTabType == WorkflowType) {\n              //   $workflowActivity.hide();\n              adjustDivSize();\n              $welcomeNewRecord.hide();\n              $wfSearchShow.show();\n              $sAlrtTxtType.empty();\n              $sAlrtTxtType.append(VIS.Msg.getMsg(\'WorkflowActivities\'));\n              $hAlrtTxtTypeCount.empty();\n              $hAlrtTxtTypeCount.append($("#divfActivity").html());\n              $WelcomeScreenHdr.empty();\n              $WelcomeScreenHdr.append(VIS.Msg.getMsg(\'Activity\'));\n              //var divActivityContainer = $("#welcomeScreenFeedsList");\n              //var divActivityDetailContainer = $("#workflowActivityDetails");\n              // emptyWelcomeTabDatacontainers();;\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              if (activity == null) {\n                activity = new VIS.wfActivity(WelcomeTabDatacontainers, $workflowActivityDetails, workflowActivityData, WelcomeTabDatacontainers, $wfSearchShow);\n              }\n              activity.Load(true);\n            } else if (activeTabType == NoticeType) {\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              emptyWelcomeTabDatacontainers();\n              ;\n              LoadHomeNotice();\n            } else if (activeTabType == MyTaskType) {\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              WSP.wspHomeMgr.viewWSPHome(MyTaskType, isTabDataRef);\n            } else if (activeTabType == TaskAssignByme) {\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              WSP.wspHomeMgr.viewWSPHome(TaskAssignByme, isTabDataRef);\n            } else if (activeTabType == DocumentReceaveType) {\n              return;\n            } else if (activeTabType == AppointmentsType) {\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              emptyWelcomeTabDatacontainers();\n              ;\n              WSP.wspHomeMgr.viewWSPHome(AppointmentsType, isTabDataRef);\n            } else if (activeTabType == NotesType) {\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              emptyWelcomeTabDatacontainers();\n              ;\n              WSP.wspHomeMgr.viewWSPHome(NotesType, isTabDataRef);\n            } else if (activeTabType == kPIType) {\n              $workflowActivity.hide();\n              adjustDivSize();\n              tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n              emptyWelcomeTabDatacontainers();\n              ;\n              $wfSearchShow.hide();\n              VADB.Apps.KpiHomeScreen(WelcomeTabDatacontainers, $divTabContainerLoder, $welcomeNewRecord, $workflowActivity, $workflowActivityDetails, $WelcomeScreenHdr, $divKPICount);\n            }\n          }\n        });\n        /* Start Referesh New tab data */\n\n        var www = new VIS.AForm(500);\n        www.openWidget(\'VIS.React.TestComponent\', 99999);\n        $(\'#welcomeScreen\').empty();\n        $(\'#welcomeScreen\').append(www.getRoot());\n\n        /* start  bind click event of Main data container of Tab Menu */\n        //for notice and request\n        WelcomeTabDatacontainers.on("click", function (evnt) {\n          var datarcrd = $(evnt.target).data("vishomercrd");\n          if (activeTabType == NoticeType) {\n            if (evnt.target.tagName === "SPAN" && datarcrd === "more") {\n              //more-details\n              if ($(evnt.target.parentNode.parentNode).data("vishomercrd") == "more-details") {\n                var divid = evnt.target.parentNode.parentNode.id;\n                var $divntitleid = $("#snoticetitle_" + divid);\n                var $divndescid = $("#snoticedesc_" + divid);\n                var $divnmorecid = $("#snoticemore_" + divid);\n                $divnmorecid.hide();\n                $divntitleid.hide();\n                $divndescid.show();\n                $("#snoticeless_" + divid).show();\n              }\n            } else {\n              if ($(evnt.target.parentNode.parentNode).data("vishomercrd") == "more-details") {\n                var divid = evnt.target.parentNode.parentNode.id;\n                var $divntitleid = $("#snoticetitle_" + divid);\n                var $divndescid = $("#snoticedesc_" + divid);\n                var $divnmorecid = $("#snoticemore_" + divid);\n                $divnmorecid.show();\n                $divntitleid.show();\n                $divndescid.hide();\n                $("#snoticeless_" + divid).hide();\n              }\n            }\n            //for notice view/zoom\n            if (datarcrd === "view") {\n              var vid = evnt.target.id;\n              var arrn = vid.toString().split(\'|\');\n              var n_id = arrn[0];\n              var n_table = arrn[1];\n              var n_win = arrn[2];\n              var n_rcrd = arrn[3];\n              var zoomQuery = new VIS.Query();\n              zoomQuery.addRestriction(n_table + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(n_id));\n              VIS.viewManager.startWindow(n_win, zoomQuery);\n            }\n            //for notice view/zoom\n            else if (datarcrd === "liview") {\n              var vid = evnt.target.firstChild.id;\n              var arrn = vid.toString().split(\'|\');\n              var n_id = arrn[0];\n              var n_table = arrn[1];\n              var n_win = arrn[2];\n              var n_rcrd = arrn[3];\n              var zoomQuery = new VIS.Query();\n              zoomQuery.addRestriction(n_table + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(n_id));\n              VIS.viewManager.startWindow(n_win, zoomQuery);\n            }\n            //for notice approve\n            else if (datarcrd === "approve") {\n              var vid = evnt.target.id;\n              ApproveNotice(vid, true);\n            }\n            //for notice approve\n            else if (datarcrd === "liapprove") {\n              var vid = evnt.target.firstChild.id;\n              ApproveNotice(vid, true);\n            } else if (datarcrd === "lispecial") {\n              var vid = evnt.target.firstChild.id;\n              var arrn = vid.toString().split(\'|\');\n              var recID = arrn[0];\n              var tableName = arrn[1];\n              var winID = arrn[2];\n              var zoomQuery = new VIS.Query();\n              zoomQuery.addRestriction(tableName + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(recID));\n              VIS.viewManager.startWindow(winID, zoomQuery);\n            } //\n            else if (datarcrd === "lispecial1") {\n              var vid = evnt.target.id;\n              var arrn = vid.toString().split(\'|\');\n              var recID = arrn[0];\n              var tableName = arrn[1];\n              var winID = arrn[2];\n              var zoomQuery = new VIS.Query();\n              zoomQuery.addRestriction(tableName + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(recID));\n              VIS.viewManager.startWindow(winID, zoomQuery);\n            }\n          } else if (activeTabType == RequestType) {\n            //for request view/zoom\n            if (datarcrd === "view") {\n              var vid = evnt.target.id;\n              var arrn = vid.toString().split(\'|\');\n              var r_id = arrn[0];\n              var r_table = arrn[1];\n              var r_win = arrn[2];\n              var zoomQuery = new VIS.Query();\n              zoomQuery.addRestriction(r_table + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(r_id));\n              VIS.viewManager.startWindow(r_win, zoomQuery);\n            }\n            //for request view/zoom\n            else if (datarcrd === "liview") {\n              var vid = evnt.target.firstChild.id;\n              var arrn = vid.toString().split(\'|\');\n              var r_id = arrn[0];\n              var r_table = arrn[1];\n              var r_win = arrn[2];\n              var zoomQuery = new VIS.Query();\n              zoomQuery.addRestriction(r_table + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(r_id));\n              VIS.viewManager.startWindow(r_win, zoomQuery);\n            }\n          }\n        }); /* End  bind click event of Main data container of Tab Menu */\n\n        var welcomeTabScroll = true;\n\n        /* Start Bind Scroll of main data contianer of tab menu */\n        WelcomeTabDatacontainers.bind(\'scroll\', function () {\n          //var thisscroll = this;\n          //clearTimeout($.data(this, \'scrollTimer\'));//Clear scroll timer to wait next scroll event happens after 250 ms\n          //$.data(this, \'scrollTimer\', setTimeout(function () {\n          if ($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight * .75 && welcomeTabScroll) {\n            //Condition true when 75 scroll is done\n            welcomeTabScroll = false;\n            setTimeout(function () {\n              welcomeTabScroll = true;\n            }, 100);\n            isTabscroll = true;\n            isTabDataRef = false;\n            if (activeTabType == WorkflowType) {\n              tabdataLastPage = parseInt($("#divfActivity").html());\n              tabdatacntpage = tabdataPage * tabdataPageSize;\n              if (tabdatacntpage <= tabdataLastPage && activity != null) {\n                tabdataPage += 1;\n                activity.AppendRecord(tabdataPage, tabdataPageSize);\n              } else {\n                return;\n              }\n            } else if (activeTabType == NoticeType) {\n              tabdataLastPage = parseInt($divNoticeCount.text());\n              tabdatacntpage = tabdataPage * tabdataPageSize;\n              tabdataPage += 1;\n              if (tabdatacntpage <= tabdataLastPage) {\n                LoadHomeNotice();\n              } else {\n                return;\n              }\n            } else if (activeTabType == RequestType) {\n              tabdataLastPage = parseInt($divRequestCount.text());\n              tabdatacntpage = tabdataPage * tabdataPageSize;\n              tabdataPage += 1;\n              if (tabdatacntpage <= tabdataLastPage) {\n                LoadHomeRequest();\n              } else {\n                return;\n              }\n            } else if (activeTabType == AppointmentsType && window.WSP) {\n              tabdataLastPage = parseInt($divAptCount.text());\n              tabdatacntpage = tabdataPage * tabdataPageSize;\n              tabdataPage += 1;\n              if (tabdatacntpage <= tabdataLastPage) {\n                WSP.wspHomeMgr.doScrollWSPHome(AppointmentsType, tabdataPage, tabdataPageSize);\n              } else {\n                return;\n              }\n            } else if (activeTabType == NotesType && window.WSP) {\n              tabdataLastPage = parseInt($divNotesCount.text());\n              tabdatacntpage = tabdataPage * tabdataPageSize;\n              if (tabdatacntpage <= tabdataLastPage) {\n                tabdataPage += 1;\n                WSP.wspHomeMgr.doScrollWSPHome(NotesType, tabdataPage, tabdataPageSize);\n              } else {\n                return;\n              }\n            }\n          }\n          //}, 200));\n        });\n        /* End Bind Scroll of main data contianer of tab menu    */\n\n        /*########### Start FolloUps ###########*/\n        var $FllUpsRefresh = $("#hlnkFllupsRef"),\n          $FllupsCnt = $("#follupsCount"),\n          $FllMainLoder = $("#divFllMainLoder");\n        var FllCmntTxt = "",\n          FllCmntBtn = "",\n          FllupsID = "";\n        var fllpcount = 0,\n          fllPageSize = 10,\n          fllPage = 1,\n          fllLastPage = 0,\n          fllcntpage = 0;\n        var fllCmntPageSize = 10,\n          fllCmntPage = 0,\n          fllCmntLastPage = 0,\n          fllCmntcntpage = 0;\n        var fllChatID = 0,\n          fllSubscriberID = 0,\n          isFllScroll = false,\n          isRef = false,\n          isfllBusy = false;\n        //if (VIS.Application.isRTL) {\n        //    $FllUpsRefresh.css("margin-right", "10px");\n        //}\n        //resize change event\n        //$("#fllupsScreen").on("orientationchange", function (evnt) {\n        //    alert("call fllups");\n        //    $("#fllupsScreen").height(50);\n        //});\n\n        //Click events for follups\n        FllUpsMain.on("click", function (evnt) {\n          var datafll = $(evnt.target).data("fll");\n          if (datafll === "viewmorefllupscmnt") {\n            FllupsID = evnt.target.parentNode.id;\n            fllChatID = 0, fllSubscriberID = 0;\n            fllChatID = evnt.target.parentNode.children[3].id;\n            getFllUpsCmnt(FllupsID, fllCmntPageSize, fllCmntPage);\n\n            //View Less comment\n            var targetID = evnt.target.id;\n            var arrtarget = targetID.split(\'_\');\n            $("#divfllvl_" + arrtarget[1]).show();\n            $("#" + targetID).hide();\n          } else if (datafll === "viewlessfllupscmnt") {\n            FllupsID = evnt.target.parentNode.id;\n            fllChatID = 0, fllSubscriberID = 0;\n            fllChatID = evnt.target.parentNode.children[3].id;\n\n            //View Less comment\n            var targetID = evnt.target.id;\n            var arrtarget = targetID.split(\'_\');\n            $("#divfllvm_" + arrtarget[1]).show();\n            // $("#divfllcmntdata" + arrtarget[1]).empty();\n            var $divFllupsCmndData = $("#divfllcmntdata" + arrtarget[1]);\n            var divLastChild = $divFllupsCmndData.find("div:last-child");\n            $divFllupsCmndData.empty();\n            $divFllupsCmndData.html(divLastChild);\n            $("#" + targetID).hide();\n          } else if (datafll === "azoomfllups") {\n            FllupsID = evnt.target.parentNode.parentNode.parentNode.parentNode.parentNode.id;\n            var arr = FllupsID.toString().split(\'-\');\n            var zoomQuery = new VIS.Query();\n            zoomQuery.addRestriction(arr[5] + "_ID", VIS.Query.prototype.EQUAL, VIS.Utility.Util.getValueOfInt(arr[1]));\n            VIS.viewManager.startWindow(arr[4], zoomQuery);\n          } else if (datafll === "asubscribefllups") {\n            FllupsID = evnt.target.parentNode.parentNode.parentNode.parentNode.parentNode.id;\n            var arr = FllupsID.toString().split(\'-\');\n            $.ajax({\n              url: VIS.Application.contextUrl + \'Subscribe/UnSubscribe\',\n              type: \'GET\',\n              dataType: \'Json\',\n              data: {\n                AD_Window_ID: arr[4],\n                Record_ID: arr[1],\n                AD_Table_ID: arr[3]\n              },\n              success: function (result) {\n                if (result == false) {\n                  alert(VIS.Msg.getMsg("UnSubscription Failed"));\n                } else {\n                  $("#" + FllupsID).animate({\n                    "width": "100%",\n                    "height": "132px",\n                    "margin-top": "-132px"\n                  }, 700, function () {\n                    $("#" + FllupsID).remove();\n                  });\n                  var fcnt = $FllupsCnt.text();\n                  $FllupsCnt.text(fcnt - 1);\n                }\n              }\n            });\n          } else if (datafll === "btncmntfll") {\n            fllChatID = evnt.target.parentNode.id;\n            FllupsData = $("#" + evnt.target.parentNode.parentNode.children[1].id);\n            FllCmntTxt = $("#" + evnt.target.previousElementSibling.id);\n            FllCmntBtn = $("#" + evnt.target.id);\n            var cmntTxt = $(FllCmntTxt).val();\n            if (cmntTxt !== "") {\n              var cd = new Date();\n              var Cdate = Globalize.format(cd, "F", Globalize.cultureSelector);\n              SaveFllCmnt(cmntTxt, FllupsData);\n              $(FllCmntTxt).val("");\n            }\n          } else if (datafll == "UID") {\n            var UID = $(evnt.target).data("uid");\n            var windoNo = VIS.Env.getWindowNo();\n            var contactInfo = new VIS.ContactInfo(UID, windoNo);\n            contactInfo.show();\n          }\n        });\n        //key down events for follups\n        FllUpsMain.on("keydown", function (evnt) {\n          var datafll = $(evnt.target).data("fll");\n          if (datafll === "txtcmntfll") {\n            FllupsID = evnt.target.parentNode.parentNode.id;\n            fllChatID = evnt.target.parentNode.id;\n            FllupsData = $("#" + evnt.target.parentNode.parentNode.children[1].id);\n            FllCmntTxt = $("#" + evnt.target.id);\n            var cmntTxt = $(FllCmntTxt).val();\n            if (cmntTxt !== "" && cmntTxt !== null) {\n              var code = evnt.charCode || evnt.keyCode;\n              if (code === EnterKeyCode) {\n                //  BindFllCmnt(uname, uimage, Cdate, cmntTxt, FllupsData);\n                SaveFllCmnt(cmntTxt, FllupsData);\n                $(FllCmntTxt).val("");\n              }\n            }\n          }\n        });\n        var followUpScroll = true;\n        //Bind Scroll evnt on Follups\n        FllUpsMain.bind(\'scroll\', function () {\n          //var thisscroll = this;\n          //clearTimeout($.data(this, \'scrollTimer\'));//Clear scroll timer to wait next scroll event happens after 250 ms\n          //$.data(this, \'scrollTimer\', setTimeout(function () {\n          if ($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight * .75 && followUpScroll) {\n            //Condition true when 75 scroll is done\n            isRef = false;\n            followUpScroll = false;\n            fllLastPage = $FllupsCnt.text();\n            if (fllLastPage > fllPageSize) {\n              fllcntpage = fllPage * fllPageSize;\n              fllPage += 1;\n              if (fllcntpage <= fllLastPage) {\n                getFllUps(fllPageSize, fllPage, isRef);\n              } else {\n                followUpScroll = true;\n                return;\n              }\n            }\n            followUpScroll = true;\n          }\n          //}, 200));\n        });\n        //To refresh fllups\n        $FllUpsRefresh.on("click", function () {\n          if (isfllBusy == false) {\n            fllPageSize = 10, fllPage = 1;\n            fllpcount = $FllupsCnt.text();\n            isRef = true;\n            FllUpsMain.empty();\n            getFllUps(fllPageSize, fllPage, isRef);\n          }\n        });\n        //To get Follups form Controller\n        function getFllUps(fllPageSize, fllPage, isRef) {\n          $FllMainLoder.show();\n          isfllBusy = true;\n          var url = VIS.Application.contextUrl + \'Home/GetJSONFllups\';\n          $.ajax({\n            url: url,\n            data: {\n              "fllPageSize": fllPageSize,\n              "fllPage": fllPage,\n              "isRef": isRef\n            },\n            type: \'GET\',\n            cache: false,\n            datatype: \'json\',\n            success: function (result) {\n              var data = JSON.parse(result);\n              var cnt = 0;\n              var str = "";\n              var uimg = "";\n              var dbdate = "";\n              if (data.lstFollowups.length > 0) {\n                if (isRef) {\n                  $FllupsCnt.text(data.FllCnt);\n                }\n                for (var s in data.lstFollowups) {\n                  var divfllupsID = data.lstFollowups[cnt].ChatID + "-" + data.lstFollowups[cnt].RecordID + "-" + data.lstFollowups[cnt].SubscriberID + "-" + data.lstFollowups[cnt].TableID + "-" + data.lstFollowups[cnt].WinID + "-" + data.lstFollowups[cnt].TableName;\n                  if (data.lstFollowups[cnt].Cdate != null && data.lstFollowups[cnt].Cdate != "") {\n                    var cd = new Date(data.lstFollowups[cnt].Cdate);\n                    dbdate = Globalize.format(cd, "F", Globalize.cultureSelector);\n                  }\n                  if (data.lstFollowups[cnt].AD_Image_ID == 0) {\n                    uimg = "<i data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\' class=\'fa fa-user\'></i>";\n                  } else {\n                    for (var a in data.lstUserImg) {\n                      if (data.lstUserImg[a].AD_Image_ID == data.lstFollowups[cnt].AD_Image_ID) {\n                        if (data.lstUserImg[a].UserImg != "NoRecordFound" && data.lstUserImg[a].UserImg != "FileDoesn\'tExist" && data.lstUserImg[a].UserImg != null) {\n                          uimg = "<div class=\'vis-feedimgwrap\'  data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\'><img data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\' alt=\'" + VIS.Msg.getMsg("UserImage") + "\' title=\'" + VIS.Msg.getMsg("UserImage") + "\' class=\'userAvatar-Feeds\' src=\'" + VIS.Application.contextUrl + data.lstUserImg[a].UserImg + "?" + new Date($.now()).getSeconds() + "\'/></div>";\n                        } else {\n                          uimg = "<i data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\' class=\'fa fa-user\'></i>";\n                        }\n                        break;\n                      }\n                    }\n                  }\n                  str += "<div id=" + divfllupsID + " data-fll=\'divfllups\' class=\'vis-feedContainer\'>" + "<div class=\'vis-feedTitleBar\'>" + "<h3> " + data.lstFollowups[cnt].WinName + \' : \' + data.lstFollowups[cnt].Identifier + " </h3>" + "<div class=\'vis-feedTitleBar-buttons\'>" + "<ul><li> <a href=\'javascript:void(0)\'  data-fll=\'azoomfllups\'  title=\'" + VIS.Msg.getMsg("ViewFollowups") + "\'  class=\'vis vis-find\'></a></li>" + "<li> <a href=\'javascript:void(0)\'  data-fll=\'asubscribefllups\'  title=\'" + VIS.Msg.getMsg("UnsubscribeFollowups") + "\' class=\'fa fa-rss\'></a></li></ul>" + " </div></div>" + "<div id=\'divfllcmntdata" + data.lstFollowups[cnt].ChatID + "\' data-fll=\'fll-cmnt\' class=\'vis-feedDetails\'>" + "<div class=\'vis-feedDetails-cmnt\' data-fll=\'fll-cmnt\'>" + uimg + "<p>" + " <strong data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\'>";\n                  if (data.lstFollowups[cnt].AD_User_ID == VIS.Env.getCtx().getAD_User_ID()) {\n                    str += VIS.Msg.getMsg("Me") + " </strong> <br />";\n                  } else {\n                    str += data.lstFollowups[cnt].Name + "</strong> <br />";\n                  }\n                  str += VIS.Utility.encodeText(data.lstFollowups[cnt].ChatData) + "</p>" + "<p class=\'vis-feedDateTime\'>" + dbdate + "</p>" + "</div></div>" + "<a id=\'divfllvm_" + data.lstFollowups[cnt].ChatID + "\'  data-fll=\'viewmorefllupscmnt\' href=\'javascript:void(0)\' class=\'vis-viewMoreComments\'><span class=\'vis-feedIcons vis-icon-viewMoreComments\'></span>" + VIS.Msg.getMsg("ViewMoreComments") + "...</a>" + "<a id=\'divfllvl_" + data.lstFollowups[cnt].ChatID + "\' style=\'display:none;\'  data-fll=\'viewlessfllupscmnt\' href=\'javascript:void(0)\' class=\'vis-viewMoreComments\'><span class=\'vis-feedIcons vis-icon-viewMoreComments\'></span>" + VIS.Msg.getMsg("ViewLessComments") + "...</a>" + " <div class=\'clearfix\'></div> " + "<div id=" + data.lstFollowups[cnt].ChatID + " class=\'vis-feedMessage\'>" + " <input id=\'txtFllCmnt" + data.lstFollowups[cnt].ChatID + "\' data-fll=\'txtcmntfll\' placeholder=\'" + VIS.Msg.getMsg(\'TypeMessage\') + "\' type=\'text\' value=\'\' />" + " <span  id=\'btnFllCmnt" + data.lstFollowups[cnt].ChatID + "\' data-fll=\'btncmntfll\' title=\'" + VIS.Msg.getMsg(\'PostMessage\') + "\'  class=\'vis vis-sms\' ></span>" + " <div class=\'clearfix\'></div> " + "</div></div> ";\n                  cnt++;\n                }\n                FllUpsMain.append(str);\n              } else {\n                if (isFllScroll == false) {\n                  if (VIS.Application.isRTL) {\n                    FllUpsMain.append("<p style=\'margin-top: 200px;text-align: center \'>" + VIS.Msg.getMsg("VIS_NotSubscribedYet") + "</p>");\n                  } else {\n                    FllUpsMain.append("<p style=\'margin-top: 200px;text-align: center \'>" + VIS.Msg.getMsg("VIS_NotSubscribedYet") + "</p>");\n                  }\n                }\n              }\n              isfllBusy = false;\n              followUpScroll = true;\n              $FllMainLoder.hide();\n            },\n            error: function () {\n              followUpScroll = true;\n            }\n          });\n        }\n        //get fllups comment from Controller\n        function getFllUpsCmnt(FllupsID, fllCmntPageSize, fllCmntPage) {\n          var url = VIS.Application.contextUrl + \'Home/GetJSONFllupsCmnt/\';\n          $.ajax({\n            url: url,\n            data: {\n              FllupsID: FllupsID,\n              fllCmntPageSize: fllCmntPageSize,\n              fllCmntPage: fllCmntPage\n            },\n            type: \'GET\',\n            cache: false,\n            datatype: \'json\',\n            success: function (result) {\n              var data = JSON.parse(result);\n              var cnt = 0;\n              var str = "";\n              var dbdate = "";\n              var ChatID = data.lstFollowups[cnt].ChatID;\n              var uimg = "";\n              for (var r in data.lstFollowups) {\n                if (data.lstFollowups[r].Cdate != null && data.lstFollowups[r].Cdate != "") {\n                  var cd = new Date(data.lstFollowups[r].Cdate);\n                  dbdate = Globalize.format(cd, "F", Globalize.cultureSelector);\n                }\n                if (data.lstFollowups[cnt].AD_Image_ID == 0) {\n                  uimg = "<i data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\' class=\'fa fa-user\'></i>";\n                } else {\n                  for (var b in data.lstUserImg) {\n                    if (data.lstUserImg[b].AD_Image_ID == data.lstFollowups[cnt].AD_Image_ID) {\n                      if (data.lstUserImg[b].UserImg != "NoRecordFound" && data.lstUserImg[b].UserImg != "FileDoesn\'tExist" && data.lstUserImg[b].UserImg != null) {\n                        uimg = "<div class=\'vis-feedimgwrap\' data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\'><img  alt=\'" + VIS.Msg.getMsg("UserImage") + "\'  title=\'" + VIS.Msg.getMsg("UserImage") + "\'  class=\'userAvatar-Feeds\' src=\'" + data.lstUserImg[b].UserImg + "?" + new Date($.now()).getSeconds() + "\'/></div>";\n                      } else {\n                        //uimg = "<img  style=\'cursor:pointer;\'  data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\'  alt=\'" + VIS.Msg.getMsg("UserImage") + "\'  title=\'" + VIS.Msg.getMsg("UserImage") + "\'  class=\'userAvatar-Feeds\' src=\'" + VIS.Application.contextUrl + "Areas/VIS/Images/home/defaultUser46X46.png\'/>"\n\n                        uimg = "<i  data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\'    class=\'fa fa-user\'></i>";\n                      }\n                      break;\n                    }\n                  }\n                }\n                str += "<div class=\'vis-feedDetails-cmnt\'  data-fll=\'fll-cmnt\'>" + uimg + "<p>" + " <strong  data-fll=\'UID\' data-UID=\'" + data.lstFollowups[cnt].AD_User_ID + "\'>";\n                if (data.lstFollowups[cnt].AD_User_ID == VIS.Env.getCtx().getAD_User_ID()) {\n                  str += VIS.Msg.getMsg("Me") + " </strong> <br />";\n                } else {\n                  str += data.lstFollowups[cnt].Name + "</strong> <br />";\n                }\n                str += VIS.Utility.encodeText(data.lstFollowups[cnt].ChatData) + "</p>" + "<p class=\'vis-feedDateTime\'>" + dbdate + "</p></div>";\n                cnt++;\n              }\n              var FllupsData = $("#divfllcmntdata" + ChatID);\n              // $("#divfllvm" + ChatID).hide();\n              FllupsData.html("");\n              FllupsData.append(str);\n              //FllUpsMain.animate({ scrollTop: 1000 }, \'50\');                \n            },\n            error: function () {\n              console.log("Error");\n            }\n          });\n        }\n\n        //Save follups Comment in DB\n        function SaveFllCmnt(cmntTxt, FllupsData) {\n          var url = VIS.Application.contextUrl + \'Home/PostFllupsCmnt/\';\n          $.ajax({\n            url: url,\n            data: {\n              fllChatID: fllChatID,\n              fllSubscriberID: fllSubscriberID,\n              cmntTxt: cmntTxt\n            },\n            type: \'POST\',\n            cache: false,\n            datatype: \'json\',\n            success: function (data) {\n              var cd = new Date();\n              var cdate = Globalize.format(cd, "F", Globalize.cultureSelector);\n              var user_image = data;\n              var name = VIS.context.getContext("##AD_User_Name");\n              var uimg = "";\n              if (user_image !== null) {\n                if (user_image != "NoRecordFound" && user_image != "FileDoesn\'tExist") {\n                  uimg = "<div class=\'vis-feedimgwrap\'  data-fll=\'UID\' data-UID=\'" + VIS.Env.getCtx().getAD_User_ID() + "\' ><img data-fll=\'UID\' data-UID=\'" + VIS.Env.getCtx().getAD_User_ID() + "\'  alt=\'" + VIS.Msg.getMsg("UserImage") + "\'  class=\'userAvatar-Feeds\' src=\'" + user_image + "?" + new Date($.now()).getSeconds() + "\' /></div>";\n                } else {\n                  uimg = "<i data-fll=\'UID\' data-UID=\'" + VIS.Env.getCtx().getAD_User_ID() + "\' class=\'fa fa-user\'></i>";\n                }\n              } else {\n                uimg = "<i data-fll=\'UID\' data-UID=\'" + VIS.Env.getCtx().getAD_User_ID() + "\' class=\'fa fa-user\'></i>";\n              }\n              var str = "<div class=\'vis-feedDetails-cmnt\' data-fll=\'fll-cmnt\'>" + uimg + "<p>" + " <strong  data-fll=\'UID\' data-UID=\'" + VIS.Env.getCtx().getAD_User_ID() + "\'>" + VIS.Msg.getMsg("Me") + "</strong><br />" + VIS.Utility.encodeText(cmntTxt) + "</p>" + "<p class=\'vis-feedDateTime\'>" + cdate + "</p></div>";\n              FllupsData.append(str);\n            },\n            error: function () {\n              console.log("Error");\n            }\n          });\n        }\n\n        /*########### End Folloups ########### */\n\n        /*start Switch between different sections of the Welcome Screen using bottom Tabs menu  */\n        $ulHomeTabMenu.off("click");\n        BindMenuClick();\n        /*End Switch between different sections of the Welcome Screen using bottom Tabs menu  */\n\n        /*Start Wsp Module */\n        if (window.WSP) {\n          isWsp = true;\n          $wfSearchShow.hide();\n          WSP.wspHomeMgr.initWSPHome(WelcomeTabDatacontainers, $ulHomeTabMenu, $workflowActivityDetails, workflowActivityData, $workflowActivity, $divTabContainerLoder, $WelcomeScreenHdr, $welcomeNewRecord, $sAlrtTxtType, $hAlrtTxtTypeCount, $divAptCount, $divNotesCount);\n        } else {\n          console.log("PleaseInstallWSPModule");\n        }\n        var www = new VIS.AForm();\n        www.openWidget(\'VIS.TestForm\', 99999);\n        FllUpsMain.empty();\n        FllUpsMain.append(www.getRoot());\n\n        /*End Wsp Module */\n      });\n    }\n    function getActiveTab() {\n      return {\n        activeTabType: activeTabType\n      };\n    }\n\n    /* Start Request */\n    function LoadHomeRequest() {\n      $divTabMenuDataLoder.show();\n      isTabAjaxBusy = true;\n      //$ulHomeTabMenu.off("click");\n      $.ajax({\n        url: VIS.Application.contextUrl + \'Home/GetJSONHomeRequest\',\n        data: {\n          "pagesize": tabdataPageSize,\n          "page": tabdataPage,\n          "isTabDataRef": isTabDataRef\n        },\n        type: \'GET\',\n        datatype: \'json\',\n        cache: false,\n        success: function (result) {\n          var data = JSON.parse(result.data);\n          var str = "";\n          if (data.length > 0) {\n            if (activeTabType == RequestType) {\n              if (isTabDataRef) {\n                tabdataLastPage = parseInt(result.count);\n                $divRequestCount.empty();\n                $divRequestCount.show();\n                $hAlrtTxtTypeCount.empty();\n                $divRequestCount.text(result.count);\n                $hAlrtTxtTypeCount.text(result.count);\n              }\n            }\n            for (var s in data) {\n              var StartDate = "";\n              if (data[s].StartDate != null || data[s].StartDate != "") {\n                var cd = new Date(data[s].StartDate);\n                StartDate = Globalize.format(cd, "d", Globalize.cultureSelector);\n              }\n              var NextActionDate = "";\n              if (data[s].NextActionDate != null) {\n                var cd = new Date(data[s].NextActionDate);\n                NextActionDate = Globalize.format(cd, "d", Globalize.cultureSelector);\n              } else {\n                NextActionDate = "&nbsp;-----------";\n              }\n              var CreatedDate = "";\n              if (data[s].CreatedDate != null || data[s].CreatedDate != "") {\n                var cd = new Date(data[s].CreatedDate);\n                CreatedDate = Globalize.format(cd, "F", Globalize.cultureSelector);\n              }\n              var summary = data[s].Summary;\n              if (summary.length > 80) {\n                summary = summary.substr(0, 80) + "...";\n              }\n              var casetype = data[s].CaseType;\n              if (casetype.length > 30) {\n                casetype = casetype.substr(0, 30) + "...";\n              }\n              str += "<div class=\'vis-activityContainer\'>" + "<div class=\'vis-feedTitleBar\'>" + "<h3>#" + data[s].DocumentNo + "</h3>" + "<div class=\'vis-feedTitleBar-buttons\'>" + "<ul>";\n              if (data[s].Name && data[s].Name.length > 0) {\n                str += "<li class=\'vis-home-request-BP\'>" + data[s].Name + "</li>";\n              }\n              +"<li class=\'vis-home-request-BP\'>" + data[s].Name + "</li>";\n              str += "<li data-vishomercrd=\'liview\'><a href=\'javascript:void(0)\' data-vishomercrd=\'view\' id=" + data[s].R_Request_ID + "|" + data[s].TableName + "|" + data[s].AD_Window_ID + "  title=\'" + VIS.Msg.getMsg("View") + "\'  class=\'vis vis-find\'></a></li>" + "</ul>" + "</div>" + "</div>" + "<div  class=\'vis-feedDetails vis-pt-0 vis-pl-0\'>" + "<div class=\'vis-table-request\'>" + "<ul>" + "<li><span>" + VIS.Msg.getMsg(\'Priority\') + ":</span><br>" + data[s].Priority + "</li>" + "<li><span>" + VIS.Msg.getMsg(\'Status\') + ":</span><br>" + data[s].Status + "</li>" + "<li><span>" + VIS.Msg.getMsg(\'NextActionDate\') + ":</span><br>" + NextActionDate + "</li>" + "</ul>" + "</div>" + "<p class=\'vis-maintain-customer-p\'>" + "<strong>" + VIS.Utility.encodeText(casetype) + " </strong><br />" + "<span>" + VIS.Msg.getMsg(\'Message\') + ":</span><br>" + VIS.Utility.encodeText(summary) + "</p>" + "<p class=\'vis-feedDateTime\'  style=\' width: 69%; margin-right: 10px;\'>" + CreatedDate + "</p>" + "</div>" + "</div>";\n            }\n          } else {\n            if (WelcomeTabDatacontainers.find(".vis-table-request").length == 0) {\n              if (isTabscroll == false) {\n                if (VIS.Application.isRTL) {\n                  str = "<p style=\' margin-top:200px;text-align: center\'>" + VIS.Msg.getMsg(\'NoRecordFound\') + "</p>";\n                } else {\n                  str = "<p style=\' margin-top:200px;text-align: center\'>" + VIS.Msg.getMsg(\'NoRecordFound\') + "</p>";\n                }\n                $divRequestCount.empty();\n                $hAlrtTxtTypeCount.empty();\n                $divRequestCount.text(0);\n                $divRequestCount.hide();\n                $hAlrtTxtTypeCount.text(0);\n              }\n            }\n          }\n          isTabAjaxBusy = false;\n          // $ulHomeTabMenu.on("click");\n          BindMenuClick();\n          if (activeTabType == RequestType) {\n            WelcomeTabDatacontainers.append(str);\n          }\n          $divTabMenuDataLoder.hide();\n        }\n      });\n    }\n    /* End Request */\n\n    /* Start  Notice */\n    function LoadHomeNotice() {\n      isTabAjaxBusy = true;\n      //    $ulHomeTabMenu.off("click");\n      $divTabMenuDataLoder.show();\n      $.ajax({\n        url: VIS.Application.contextUrl + \'Home/GetJSONHomeNotice\',\n        data: {\n          "pagesize": tabdataPageSize,\n          "page": tabdataPage,\n          "isTabDataRef": isTabDataRef\n        },\n        type: \'GET\',\n        datatype: \'json\',\n        success: function (result) {\n          var data = JSON.parse(result.data);\n          var str = "";\n          var strActn = "";\n          var dbdate = null;\n          if (data.length > 0) {\n            if (activeTabType == NoticeType) {\n              if (isTabDataRef) {\n                tabdataLastPage = parseInt(result.count);\n                $divNoticeCount.empty();\n                $divNoticeCount.show();\n                $hAlrtTxtTypeCount.empty();\n                $divNoticeCount.text(result.count);\n                $hAlrtTxtTypeCount.text(result.count);\n              }\n            }\n            for (var s in data) {\n              if (data[s].CDate != null && data[s].CDate != "") {\n                var cd_ = new Date(data[s].CDate);\n                dbdate = Globalize.format(cd_, "F", Globalize.cultureSelector);\n              }\n              var divtitle_ = "";\n              var title = VIS.Utility.encodeText(data[s].Title);\n              title = noticeTimeConversion(title);\n              data[s].Description = noticeTimeConversion(data[s].Description);\n              var title_ = data[s].Description;\n              if (title_.length <= 100) {\n                divtitle_ = "<pre><strong style=\'color:#666666\' data-vishomercrd=\'title\' id=\'" + data[s].AD_Note_ID + "\'>" + title + "</strong></pre>";\n              } else {\n                divtitle_ = "<pre>" + "<strong  id=\'snoticetitle_" + data[s].AD_Note_ID + "\'  style=\'color:#666666;\' >" + title + "...</strong>" + "<strong id=\'snoticedesc_" + data[s].AD_Note_ID + "\' style=\'display:none; color:#666666;\'>" + VIS.Utility.encodeText(data[s].Description) + "...</strong> " + "<span id=\'snoticemore_" + data[s].AD_Note_ID + "\' data-vishomercrd=\'more\' style=\'color:rgba(var(--v-c-primary), 1); float:right;height:20px\'>" + VIS.Msg.getMsg("more") + "</span>" + "<span id=\'snoticeless_" + data[s].AD_Note_ID + "\' data-vishomercrd=\'less\' style=\'display:none; color:rgba(var(--v-c-primary), 1); float:right;height:20pxvis-feedTitleBar\'>" + VIS.Msg.getMsg("less") + "</span>" + "</pre>";\n              }\n              str += "<div data-vishomercrd=\'view-recrd-cntainer\' id=\'divrecdcntnr_" + data[s].AD_Note_ID + "\' class=\'vis-activityContainer\'>" + " <div class=\'vis-feedTitleBar\'>";\n              if (data[s].SpecialTable) {\n                str += "<h3>" + VIS.Utility.encodeText(data[s].MsgType) + "</h3>";\n              } else {\n                str += "<h3>" + VIS.Utility.encodeText(data[s].MsgType) + "</h3>";\n              }\n              str += " <div class=\'vis-feedTitleBar-buttons\'>" + "  <ul>";\n              //if (data[s].SpecialTable)\n              //{\n              //    str += "<li data-vishomercrd=\'lispecial\'><a data-vishomercrd=\'lispecial1\' href=\'javascript:void(0)\' id=\'" + data[s].Record_ID + "|" + data[s].ProcessTableName + "|" + data[s].ProcessWindowID + "\' data-vishomercrd=\'SpecialTable\' title=\'" + VIS.Msg.getMsg("ShowNotice") + "\' class=\'vis-processZoomIcon vis-icon-check\'> title=\'" + VIS.Msg.getMsg("ShowNotice") + "\'</a></li>"\n              //}\n\n              // Renaming of Approve highlight to Acknowledge under notification\n              str += "<li data-vishomercrd=\'liapprove\'><a href=\'javascript:void(0)\' data-vishomercrd=\'approve\'  id=" + data[s].AD_Note_ID + "  title=\'" + VIS.Msg.getMsg("Acknowledge") + "\' class=\'vis vis-markx\'></a></li>" + "<li data-vishomercrd=\'liview\'><a href=\'javascript:void(0)\' data-vishomercrd=\'view\' id=" + data[s].AD_Note_ID + "|" + data[s].TableName + "|" + data[s].AD_Window_ID + "|" + data[s].Record_ID + " title=\'" + VIS.Msg.getMsg("View") + "\' class=\'vis vis-find\'></a></li>" + "</ul>" + "  </div>" + "</div>" + "<div data-vishomercrd=\'more-details\' id=" + data[s].AD_Note_ID + " class=\'vis-feedDetails\'>" + divtitle_ + " <p class=\'vis-feedDateTime\'>" + VIS.Utility.encodeText(dbdate) + "</p>" + " </div>" + " </div>";\n            }\n          } else {\n            if (WelcomeTabDatacontainers.find(".vis-feedTitleBar").length == 0) {\n              if (VIS.Application.isRTL) {\n                str = "<p style=\' margin-top:200px;text-align: center\'>" + VIS.Msg.getMsg(\'NoRecordFound\') + "</p>";\n              } else {\n                str = "<p style=\' margin-top:200px;text-align: center\'>" + VIS.Msg.getMsg(\'NoRecordFound\') + "</p>";\n              }\n              if (activeTabType == NoticeType) {\n                $divNoticeCount.empty();\n                $hAlrtTxtTypeCount.empty();\n                $divNoticeCount.hide();\n                $divNoticeCount.text(result.count);\n                $hAlrtTxtTypeCount.text(result.count);\n              }\n            }\n          }\n          isTabAjaxBusy = false;\n          //$ulHomeTabMenu.on("click");\n          BindMenuClick();\n          $divTabMenuDataLoder.hide();\n          if (activeTabType == NoticeType) {\n            WelcomeTabDatacontainers.append(str);\n          }\n        }\n      });\n    }\n    function ApproveNotice(Ad_Note_ID, isAcknowldge) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \'Home/ApproveNotice\',\n        data: {\n          "Ad_Note_ID": Ad_Note_ID,\n          "isAcknowldge": isAcknowldge\n        },\n        type: \'POST\',\n        datatype: \'json\',\n        success: function (result) {\n          var data = JSON.parse(result);\n          $("#divrecdcntnr_" + Ad_Note_ID).animate({\n            "width": "0px",\n            "height": "132px",\n            "margin-left": "800px"\n          }, 700, "", function () {\n            $("#divrecdcntnr_" + Ad_Note_ID).remove();\n          });\n        }\n      });\n    }\n    /* End Notice */\n\n    //Bind Menu Click event\n    function BindMenuClick() {\n      $ulHomeTabMenu.off("click");\n      $ulHomeTabMenu.on("click", function (evnt) {\n        $hlnkRefTabData.show();\n        WelcomeTabDatacontainers.css({\n          "margin-left": "auto",\n          "margin-top": "auto"\n        });\n        WelcomeTabDatacontainers.css({\n          "text-align": "",\n          "margin-top": ""\n        });\n        $(".vis-welcomeScreenTabMenu li").removeClass(\'vis-activeTab\');\n        if (evnt.target.nodeName == "LI") {\n          $(evnt.target).addClass(\'vis-activeTab\');\n        } else if (evnt.target.nodeName == "A") {\n          $(evnt.target.parentNode).addClass(\'vis-activeTab\');\n        }\n        var datatab = $(evnt.target).data("vishome");\n        if (datatab === "userprofile") {\n          $spanWelcomeTabtopHdr.show();\n          //$spanWelcomeTabtopHdr.css("background-position", "0px 0px");\n          activeTabType = ProfileType;\n          isTabscroll = false;\n          isTabDataRef = true;\n          $(\'li .vis-welcomeScreenTab-notificationBubbles\').removeClass(\'blank\').addClass(\'vis-feedsAlert\');\n          $(\'li:first-child .vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n          $(\'li:last-child .vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n          $(\'.vis-welcomeScreenContainer > div\').fadeOut(\'fast\');\n          $(\'.vis-welcomeScreen-Data\').fadeIn(\'fast\');\n          $welcomeNewRecord.hide();\n          $wfSearchShow.hide();\n          $workflowActivity.hide();\n          adjustDivSize();\n        } else if (datatab === "KPI") {\n          $(\'.vis-welcomeScreen-Data\').hide(\'fast\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $sAlrtTxtType.html("");\n          $spanWelcomeTabtopHdr.show();\n          $sAlrtTxtType.html(VIS.Msg.getMsg("KPI"));\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-kpi"); // .css("background-position", "0px -537px");\n          WelcomeTabDatacontainers.css({\n            "text-align": "",\n            "margin-top": ""\n          });\n          activeTabType = kPIType;\n          if (window.VADB && window.VADB != null && VADB.Apps.KpiHomeScreen != undefined) {\n            WelcomeTabDatacontainers.css({\n              "text-align": "auto"\n            });\n            activeTabType = kPIType;\n            isTabscroll = false;\n            isTabDataRef = true;\n            $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n            $hlnkRefTabData.css("margin-right", "17px");\n            $ulHomeTabMenu.off("click");\n            VADB.Apps.KpiHomeScreen(WelcomeTabDatacontainers, $divTabContainerLoder, $welcomeNewRecord, $workflowActivity, $workflowActivityDetails, $WelcomeScreenHdr, $divKPICount);\n            $workflowActivity.hide();\n            adjustDivSize();\n            $welcomeNewRecord.show();\n            $wfSearchShow.hide();\n\n            //emptyWelcomeTabDatacontainers();;\n            //var str = "<p style=\'margin-left:135px; margin-top:150px;\'>" + VIS.Msg.getMsg(\'Comming Soon \') + "!!!</p>";\n            //WelcomeTabDatacontainers.html(str);\n          } else {\n            $hlnkRefTabData.hide();\n\n            //$spanWelcomeTabtopHdr.hide();\n            WelcomeTabDatacontainers.html(VIS.Msg.getMsg("PleaseInstallVADashboard"));\n            if (VIS.Application.isRTL) {\n              //WelcomeTabDatacontainers.css({ "margin-left": "-125px", "margin-top": "200px" });\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            } else {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n              //WelcomeTabDatacontainers.css({ "margin-left": "125px", "margin-top": "200px" });\n            }\n          }\n        } else if (datatab === "workflow") {\n          $spanWelcomeTabtopHdr.show();\n          $ulHomeTabMenu.off("click");\n          WelcomeTabDatacontainers.css("overflow-y", "auto");\n          WelcomeTabDatacontainers.css({\n            "text-align": "auto"\n          });\n          activeTabType = WorkflowType;\n          isTabscroll = false;\n          isTabDataRef = true;\n          $hlnkRefTabData.css("margin-right", "17px");\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-userfeed"); //  .css("background-position", "0px -76px");\n          $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $workflowActivity.hide();\n          adjustDivSize();\n          $welcomeNewRecord.hide();\n          $wfSearchShow.show();\n          $sAlrtTxtType.empty();\n          $sAlrtTxtType.append(VIS.Msg.getMsg(\'WorkflowActivities\'));\n          $hAlrtTxtTypeCount.empty();\n          $hAlrtTxtTypeCount.append($("#divfActivity").html());\n          $WelcomeScreenHdr.empty();\n          $WelcomeScreenHdr.append(VIS.Msg.getMsg(\'Activity\'));\n          //var divActivityContainer = $("#welcomeScreenFeedsList");\n          //var divActivityDetailContainer = $("#workflowActivityDetails");\n          emptyWelcomeTabDatacontainers();\n          ;\n          tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n          activity = new VIS.wfActivity(WelcomeTabDatacontainers, $workflowActivityDetails, workflowActivityData, WelcomeTabDatacontainers, $wfSearchShow);\n          activity.Load(false);\n        } else if (datatab === "notice") {\n          $spanWelcomeTabtopHdr.show();\n          $ulHomeTabMenu.off("click");\n          activeTabType = NoticeType;\n          isTabscroll = false;\n          isTabDataRef = true;\n          $hlnkRefTabData.css("margin-right", "17px");\n          WelcomeTabDatacontainers.css("overflow-y", "auto");\n          WelcomeTabDatacontainers.css({\n            "text-align": "auto"\n          });\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-notice"); //$spanWelcomeTabtopHdr.css("background-position", "0px -143px");\n          $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $sAlrtTxtType.html(VIS.Msg.getMsg("Notice"));\n          $welcomeNewRecord.hide();\n          $wfSearchShow.hide();\n          tabdataLastPage = parseInt($divNoticeCount.text());\n          $divNoticeCount.text(tabdataLastPage);\n          $hAlrtTxtTypeCount.text(tabdataLastPage);\n          if (isTabAjaxBusy == false) {\n            tabdatapcount = 0, tabdataPageSize = 10, tabdataPage = 1, tabdatacntpage = 0;\n            emptyWelcomeTabDatacontainers();\n            ;\n            LoadHomeNotice();\n          }\n          $workflowActivity.hide();\n          adjustDivSize();\n        } else if (datatab === "mytask") {\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $sAlrtTxtType.html("");\n          $sAlrtTxtType.html(VIS.Msg.getMsg("MyTask"));\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-mytasks"); //$spanWelcomeTabtopHdr.css("background-position", "0px -406px");\n          WelcomeTabDatacontainers.css({\n            "text-align": "",\n            "margin-top": ""\n          });\n          activeTabType = MyTaskType;\n          if (isWsp) {\n            WelcomeTabDatacontainers.css({\n              "text-align": "auto"\n            });\n            $ulHomeTabMenu.off("click");\n            $spanWelcomeTabtopHdr.show();\n            activeTabType = MyTaskType;\n            isTabscroll = false;\n            isTabDataRef = false;\n            WelcomeTabDatacontainers.css("overflow-y", "hidden");\n            $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n            $welcomeNewRecord.show();\n            $wfSearchShow.hide();\n            $hAlrtTxtTypeCount.html($("#divMyTaskCount").html());\n            $hlnkRefTabData.css("margin-right", "17px");\n            // emptyWelcomeTabDatacontainers();;\n            //Call My Task\n            WSP.wspHomeMgr.viewWSPHome(MyTaskType, isTabDataRef);\n            $workflowActivity.hide();\n            adjustDivSize();\n          } else {\n            $hlnkRefTabData.hide();\n\n            //$spanWelcomeTabtopHdr.hide();\n            WelcomeTabDatacontainers.html(VIS.Msg.getMsg("PleaseInstallWSPModule"));\n            if (VIS.Application.isRTL) {\n              //WelcomeTabDatacontainers.css({ "margin-left": "-125px", "margin-top": "200px" });\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            } else {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n              //WelcomeTabDatacontainers.css({ "margin-left": "125px", "margin-top": "200px" });\n            }\n          }\n        } else if (datatab === "taskassignbyme") {\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $sAlrtTxtType.html("");\n          $sAlrtTxtType.html(VIS.Msg.getMsg("TaskAssignByMe"));\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-taskassigned"); //$spanWelcomeTabtopHdr.css("background-position", "0px -340px");\n          WelcomeTabDatacontainers.css({\n            "text-align": "",\n            "margin-top": ""\n          });\n          activeTabType = TaskAssignByme;\n          if (isWsp) {\n            WelcomeTabDatacontainers.css({\n              "text-align": "auto"\n            });\n            $spanWelcomeTabtopHdr.show();\n            $ulHomeTabMenu.off("click");\n            isTabscroll = false;\n            isTabDataRef = false;\n            activeTabType = TaskAssignByme;\n            WelcomeTabDatacontainers.css("overflow-y", "hidden");\n            $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n            $welcomeNewRecord.show();\n            $wfSearchShow.hide();\n            $hAlrtTxtTypeCount.html(parseInt($("#divTaskAssignBymeCount").html()));\n            $hlnkRefTabData.css("margin-right", "17px");\n            //Call  Task Assign by me\n            //   emptyWelcomeTabDatacontainers();;\n            WSP.wspHomeMgr.viewWSPHome(TaskAssignByme, isTabDataRef);\n            $workflowActivity.hide();\n            adjustDivSize();\n          } else {\n            $hlnkRefTabData.hide();\n            //$spanWelcomeTabtopHdr.hide();\n            WelcomeTabDatacontainers.html(VIS.Msg.getMsg("PleaseInstallWSPModule"));\n            if (VIS.Application.isRTL) {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            } else {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            }\n          }\n        } else if (datatab === "documentrecive") {\n          //$ulHomeTabMenu.off("click");\n          $spanWelcomeTabtopHdr.show();\n          $hlnkRefTabData.css("margin-right", "17px");\n          $hlnkRefTabData.hide();\n          activeTabType = DocumentReceaveType;\n          isTabscroll = false;\n          isTabDataRef = true;\n          $workflowActivity.hide();\n          adjustDivSize();\n          WelcomeTabDatacontainers.css("overflow-y", "auto");\n          WelcomeTabDatacontainers.css({\n            "text-align": "auto"\n          });\n          $sAlrtTxtType.html(VIS.Msg.getMsg("Documents"));\n          tabdataLastPage = 0;\n          $hAlrtTxtTypeCount.html(tabdataLastPage);\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-document"); //$spanWelcomeTabtopHdr.css("background-position-y", "-603px");\n          $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          emptyWelcomeTabDatacontainers();\n          ;\n          var str = "<p style=\' margin-top:200px;text-align:center\'>" + VIS.Msg.getMsg(\'PleaseInstallDMSModule\') + "</p>";\n          WelcomeTabDatacontainers.html(str);\n          $welcomeNewRecord.hide();\n          $wfSearchShow.hide();\n        } else if (datatab === "request") {\n          $spanWelcomeTabtopHdr.show();\n          $ulHomeTabMenu.off("click");\n          activeTabType = RequestType;\n          isTabscroll = false;\n          isTabDataRef = true;\n          WelcomeTabDatacontainers.css("overflow-y", "auto");\n          WelcomeTabDatacontainers.css({\n            "text-align": "auto"\n          });\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon fa fa-bell-o"); //$spanWelcomeTabtopHdr.css("background-position", "0px -209px");\n          $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          //$welcomeNewRecord.hide();\n          $welcomeNewRecord.show();\n          $wfSearchShow.hide();\n          $hlnkRefTabData.css("margin-right", "17px");\n          $sAlrtTxtType.html(VIS.Msg.getMsg("Requests"));\n          tabdataLastPage = parseInt($divRequestCount.text());\n          $hAlrtTxtTypeCount.html(tabdataLastPage);\n          if (isTabAjaxBusy == false) {\n            tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n            emptyWelcomeTabDatacontainers();\n            ;\n            LoadHomeRequest();\n          }\n          $workflowActivity.hide();\n          adjustDivSize();\n          $welcomeNewRecord.off("click");\n          $welcomeNewRecord.on("click", function () {\n            var sql = "VIS_129";\n            var n_win = executeScalar(sql);\n            var zoomQuery = new VIS.Query();\n            zoomQuery.addRestriction("R_Request_ID", VIS.Query.prototype.EQUAL, 0);\n            VIS.viewManager.startWindow(n_win, zoomQuery);\n          });\n        } else if (datatab === "appointments") {\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $sAlrtTxtType.html("");\n          $sAlrtTxtType.html(VIS.Msg.getMsg("Appointment"));\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-appointment"); //$spanWelcomeTabtopHdr.css("background-position", "0px -275px");\n          WelcomeTabDatacontainers.css({\n            "text-align": "",\n            "margin-top": ""\n          });\n          activeTabType = AppointmentsType;\n          if (isWsp) {\n            WelcomeTabDatacontainers.css({\n              "text-align": "auto"\n            });\n            $ulHomeTabMenu.off("click");\n            $spanWelcomeTabtopHdr.show();\n            activeTabType = AppointmentsType;\n            isTabscroll = false;\n            isTabDataRef = true;\n            $hlnkRefTabData.css("margin-right", "17px");\n            WelcomeTabDatacontainers.css("overflow-y", "auto");\n            $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n            $welcomeNewRecord.hide();\n            $wfSearchShow.hide();\n            tabdataLastPage = parseInt($divAptCount.text());\n            $hAlrtTxtTypeCount.html(tabdataLastPage);\n            // emptyWelcomeTabDatacontainers();;\n            tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n            WSP.wspHomeMgr.viewWSPHome(AppointmentsType, isTabDataRef);\n            $workflowActivity.hide();\n            adjustDivSize();\n          } else {\n            $hlnkRefTabData.hide();\n            //$spanWelcomeTabtopHdr.hide();\n            WelcomeTabDatacontainers.html(VIS.Msg.getMsg("PleaseInstallWSPModule"));\n            if (VIS.Application.isRTL) {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            } else {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            }\n          }\n        } else if (datatab === "notes") {\n          $(\'.vis-welcomeScreen-Data\').hide(\'slow\');\n          $(\'.vis-welcomeScreenFeeds\').fadeIn(\'fast\');\n          $sAlrtTxtType.html("");\n          $sAlrtTxtType.html(VIS.Msg.getMsg("MyNotes"));\n          $spanWelcomeTabtopHdr.removeClass().addClass("vis-welcomeScreenContentTittle-icon vis vis-contacts"); //  .css("background-position", "0px -473px");\n          WelcomeTabDatacontainers.css({\n            "text-align": "",\n            "margin-top": ""\n          });\n          activeTabType = NotesType;\n          if (isWsp) {\n            WelcomeTabDatacontainers.css({\n              "text-align": "auto"\n            });\n            $ulHomeTabMenu.off("click");\n            activeTabType = NotesType;\n            $spanWelcomeTabtopHdr.show();\n            isTabscroll = false;\n            isTabDataRef = true;\n            $hlnkRefTabData.css("margin-right", "17px");\n            WelcomeTabDatacontainers.css("overflow-y", "auto");\n            $(\'.vis-welcomeScreenTab-notificationBubbles\').removeClass(\'vis-feedsAlert\').addClass(\'blank\');\n            $welcomeNewRecord.show();\n            $wfSearchShow.hide();\n            tabdataLastPage = parseInt($divNotesCount.text());\n            $hAlrtTxtTypeCount.html(tabdataLastPage);\n            tabdatapcount = 0, tabdataPageSize = p_size, tabdataPage = p_no, tabdatacntpage = 0;\n            emptyWelcomeTabDatacontainers();\n            ;\n            WSP.wspHomeMgr.viewWSPHome(NotesType, isTabDataRef);\n            $workflowActivity.hide();\n            adjustDivSize();\n          } else {\n            $hlnkRefTabData.hide();\n            //$spanWelcomeTabtopHdr.hide();\n            WelcomeTabDatacontainers.html(VIS.Msg.getMsg("PleaseInstallWSPModule"));\n            if (VIS.Application.isRTL) {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            } else {\n              WelcomeTabDatacontainers.css({\n                "text-align": "center",\n                "margin-top": "200px"\n              });\n            }\n          }\n        }\n        // evnt.stopPropagation();\n      });\n    }\n    $(\'#vis_appInfoWindow\').click(function () {\n      VIS.InfoMenu.show($(this));\n    });\n    //hadle event\n    $(\'#vis_addconfigfile\').click(function () {\n      //open Auto mark config window\n      VIS.viewManager.startWindow(executeScalar("VIS_158"));\n    });\n    function emptyWelcomeTabDatacontainers() {\n      if (WelcomeTabDatacontainers.children().length > 0) WelcomeTabDatacontainers.children().remove();\n      WelcomeTabDatacontainers.empty();\n    }\n\n    /**\r\n     * UTC Time conversion for Notice\r\n     * @param {any} title\r\n     */\n    function noticeTimeConversion(title) {\n      if (title.lastIndexOf(\'UTC\') > 0) {\n        var splitTitle = title.split(\'UTC\');\n        title = title.replaceAll(\'UTC\', \'\');\n        if (splitTitle.length > 0) {\n          for (var i = 0; i < splitTitle.length; i++) {\n            dt = splitTitle[i].substring(splitTitle[i].lastIndexOf(\': \') + 1, splitTitle[i].length);\n            if (dt.lastIndexOf(\'AM\') > 0 || dt.lastIndexOf(\'PM\') > 0) {\n              var dte = new Date(dt + \'UTC\');\n              title = title.replace(dt, " " + dte.toLocaleString());\n            }\n          }\n        }\n      }\n      return title;\n    }\n    return {\n      initHome: initHome,\n      adjustDivSize: adjustDivSize,\n      BindMenuClick: BindMenuClick,\n      getActiveTab: getActiveTab\n    };\n  }\n  ;\n  VIS.HomeMgr = HomeMgr();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/home/home.js?')},"./Areas/VIS/Scripts/home/shortcut.js":()=>{eval(';\n(function (VIS, $) {\n  function shortcutMgr() {\n    var linkDiv;\n    var linkConatiner;\n    var Items = null;\n    var log = VIS.Logging.VLogger.getVLogger("ShortCut");\n    var atab = $(\'#userLinks-Tab\');\n    var mgr = {\n      init: init\n    };\n    return mgr;\n    // initialization \n    function init(_linkDiv, _favDiv) {\n      linkDiv = _linkDiv;\n      linkConatiner = linkDiv.find("#vis_linkScroll");\n      VIS.favMgr.init(_favDiv);\n      getShortcutData();\n      bindEvents();\n    }\n    ;\n\n    // get shortcut data\n    function getShortcutData() {\n      VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Home/GetShortcutItems", null, function (data) {\n        Items = data;\n        var itm = null;\n        var html = [\'<ul class="vis-userLinks-ListMenu">\'];\n        if (data) {\n          for (var i = 0; i < data.length; i++) {\n            itm = data[i];\n            html.push(\'<li data-index="\' + i + \'" ><a data-index="\' + i + \'" href="javascript:void(0)">\');\n            if (itm.HasImage) {\n              if (!itm.IsImageByteArray && itm.IconUrl.indexOf(\'.\') < 0) {\n                html.push(\'<i data-index="\' + i + \'" class="\' + itm.IconUrl + \'"\');\n              } else {\n                html.push(\'<img data-index="\' + i + \'"  src="\');\n                if (itm.IsImageByteArray) {\n                  html.push(\'data:image/*;base64,\' + itm.IconBytes);\n                } else {\n                  html.push(VIS.Application.contextUrl + itm.IconUrl);\n                }\n              }\n            } else {\n              html.push(\'<i data-index="\' + i + \'" class="vis vis-shortcut"\');\n            }\n            html.push(\'" />\');\n            html.push(itm.ShortcutName + \'</a></li>\');\n          }\n        }\n        html.push(\'</ul>\');\n        linkConatiner.empty();\n        linkConatiner.html(html.join(\' \'));\n        html = [];\n        setCount(data.length);\n      });\n    }\n    ;\n    function bindEvents() {\n      linkConatiner.on("click", function (e) {\n        var index = $(e.target).data("index");\n        if ((index || index == "0") && index < Items.length) {\n          var dsi = Items[index];\n\n          //1   Contain Child ShortCut\n\n          if (dsi.HasChild) {\n            // alert("setting Dialog");\n            var sd = new SettingDialog(dsi.KeyID);\n            sd.show();\n            sd = null;\n          }\n\n          //2 If URL\n          else if (dsi.Url || dsi.Url.length > 0) {\n            VIS.Env.startBrowser(dsi.Url);\n          }\n\n          // 3 Special Class\n          else if (dsi.SpecialAction && dsi.SpecialAction.length > 0) {\n            //check name has moduleprefix\n            var className = dsi.SpecialAction;\n            //Get form Name\n            var formName = dsi.ActionName; // className.Substring(className.LastIndexOf(\'.\') + 1);\n\n            try {\n              //className = "VIS.Apps.TestForm";\n              var type = VIS.Utility.getFunctionByName(className, window);\n              var o = new type();\n              o.show();\n              o = null;\n            } catch (e) {\n              log.log(VIS.Logging.Level.WARNING, "Class=" + className + ", Action Class Name=" + className, e);\n              return false;\n            }\n          } else\n            //Entity Action\n            {\n              if (dsi.Action == null || dsi.Action.length <= 0 || dsi.ActionID < 1) {\n                return;\n              }\n              VIS.viewManager.startAction(dsi.Action, dsi.ActionID);\n            }\n        }\n      });\n    }\n    function setCount(count) {\n      atab.empty();\n      atab.append($("<span><i class=\'fa fa-link\' aria-hidden=\'true\' style=\'transform: rotate(90deg);\'></i></span>"));\n      atab.append(VIS.Msg.getMsg(\'Links\') + " - ");\n      atab.append($("<strong>").append(count));\n      // atab = null;\n    }\n  }\n  ;\n\n  /* \r\n  * Setting Dialog\r\n  */\n  function SettingDialog(id) {\n    var $root = $("<div>");\n    //var $divScroll = $(\'<div  class="scrollerVertical" style="width:auto">\').html(\'<div class="vis-apanel-busy" style="height:280px;position:static"> </div>\');\n    // Manish 29/6/2017\n    //var $divScroll = $(\'<div style="width:auto;z-index:1">\').html(\'<div class="vis-apanel-busy" style="height:280px;position:static"> </div>\');\n\n    var $divScroll = $(\'<div style="width:auto;z-index:1">\').html(\'<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"></i></div></div>\');\n\n    // end 29/6/2017\n\n    var log = VIS.Logging.VLogger.getVLogger("SettingDialog");\n    $root.append($divScroll);\n    var ch = null;\n    var Items = null;\n\n    // get settings\n    function init() {\n      VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Home/GetSettingItems", {\n        "AD_Shortcut_ID": id\n      }, function (data) {\n        Items = data;\n        var itm = null;\n        var html = [\'<ul class="vis-userLinks-ListMenu">\'];\n        if (data) {\n          for (var i = 0; i < data.length; i++) {\n            itm = data[i];\n            html.push(\'<li data-index="\' + i + \'" ><a data-index="\' + i + \'" href="javascript:void(0)">\');\n            if (itm.HasImage) {\n              if (!itm.IsImageByteArray && itm.IconUrl.indexOf(\'.\') < 0) {\n                html.push(\'<i data-index="\' + i + \'" class="\' + itm.IconUrl + \'"\');\n              } else {\n                html.push(\'<img data-index="\' + i + \'"  src="\');\n                if (itm.IsImageByteArray) {\n                  html.push(\'data:image/*;base64,\' + itm.IconBytes);\n                } else {\n                  html.push(VIS.Application.contextUrl + itm.IconUrl);\n                }\n              }\n            } else {\n              html.push(\'<i data-index="\' + i + \'" class="vis vis-shortcut"\');\n            }\n            html.push(\'" />\');\n            html.push(itm.ShortcutName + \'</a></li>\');\n          }\n        }\n        html.push(\'</ul>\');\n        $divScroll.empty();\n        $divScroll.html(html.join(\' \'));\n        bindEvents();\n      });\n    }\n    ;\n    function bindEvents() {\n      $divScroll.on("click", function (e) {\n        var index = $(e.target).data("index");\n        if ((index || index == "0") && index < Items.length) {\n          var dsi = Items[index];\n\n          //1   Contain Child ShortCut\n\n          if (dsi.HasChild) {\n            //alert("setting Dialog");\n            VIS.Msg.getMsg("settingDialog");\n            //SettingDialog sd = new SettingDialog(dsi.KeyID);\n            //sd.Show();\n          }\n\n          //2 If URL\n          else if (dsi.Url || dsi.Url.length > 0) {\n            VIS.Env.startBrowser(dsi.Url);\n          }\n\n          // 3 Special Class\n          else if (dsi.SpecialAction && dsi.SpecialAction.length > 0) {\n            //check name has moduleprefix\n            var className = dsi.SpecialAction;\n            //Get form Name\n            var formName = dsi.ActionName; // className.Substring(className.LastIndexOf(\'.\') + 1);\n\n            try {\n              //className = "VIS.Apps.TestForm";\n              var type = VIS.Utility.getFunctionByName(className, window);\n              var o = new type();\n              o.show();\n              o = null;\n            } catch (e) {\n              log.log(VIS.Logging.Level.WARNING, "Class=" + className + ", Action Class Name=" + className, e);\n              return false;\n            }\n          } else\n            //Entity Action\n            {\n              if (dsi.Action == null || dsi.Action.length <= 0 || dsi.ActionID < 1) {\n                return;\n              }\n              VIS.viewManager.startAction(dsi.Action, dsi.ActionID);\n            }\n          ch.close();\n        }\n      });\n    }\n    ;\n    this.show = function () {\n      ch = new VIS.ChildDialog();\n      ch.setWidth(540);\n      ch.setHeight(400);\n      ch.setTitle(VIS.Msg.getMsg("Setting"));\n      ch.setContent($root);\n      ch.show();\n    };\n    this.disposeComponent = function () {\n      $divScroll.off("click");\n      $divScroll.remove();\n      if (Items) Items.length = 0;\n      Items = null;\n      this.show = null;\n      $root = null;\n      if (ch) ch.dispose();\n    };\n    init();\n  }\n  ;\n  SettingDialog.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.shortcutMgr = shortcutMgr();\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/home/shortcut.js?')},"./Areas/VIS/Scripts/model/CalloutColumn.js":()=>{eval('VIS = window.VIS || {};\n(function (VIS, $) {\n  var Util = VIS.Utility.Util;\n  function calloutColumn() {\n    VIS.CalloutEngine.call(this, "calloutColumn"); //must call\n  }\n  ;\n  VIS.Utility.inheritPrototype(calloutColumn, VIS.CalloutEngine);\n  calloutColumn.prototype.setDBColumnName = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null || value == 0) {\n      return;\n    }\n    this.setCalloutActive(true);\n    var _mTab = mTab;\n    $.ajax({\n      url: VIS.Application.contextUrl + "VIS/CalloutColumn/GetDBColunName",\n      data: {\n        AD_Element_ID: value\n      },\n      success: function (result) {\n        if (result) _mTab.setValue("ColumnName", result);\n      },\n      error: function (err) {\n        this.log.severe(err);\n      }\n    });\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n  calloutColumn.prototype.checkColumnLength = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null || value == 0) {\n      return;\n    }\n    this.setCalloutActive(true);\n    if (value.length > 43) {\n      mField.setValue(\'\');\n      VIS.ADialog.error(\'VIS_CheckColumnLength\');\n    }\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n  calloutColumn.prototype.checkTableLength = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null || value == 0) {\n      return;\n    }\n    this.setCalloutActive(true);\n    if (value.length > 40) {\n      mField.setValue(\'\');\n      VIS.ADialog.error(\'VIS_CheckTableLength\');\n    }\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n\n  /// <summary>\n  /// Check organisation access for user.\n  /// </summary>\n  /// <returns>Message</returns>\n\n  calloutColumn.prototype.checkOrgAccess = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null) {\n      return;\n    }\n    var userID = Util.getValueOfInt(mTab.getValue("AD_User_ID"));\n    this.setCalloutActive(true);\n    $.ajax({\n      url: VIS.Application.contextUrl + "VIS/CalloutColumn/CheckOrgAccessByRole",\n      data: {\n        AD_Role_ID: value,\n        AD_User_ID: userID\n      },\n      success: function (result) {\n        if (result == \'NoRoleAcc\') VIS.ADialog.warn("VIS_NoRoleAccess");\n        if (result == \'NoUserAcc\') VIS.ADialog.warn("VIS_NoUserAccess");\n      },\n      error: function (err) {\n        this.log.severe(err);\n      }\n    });\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n\n  /// <summary>\n  ///   Activate User button enable when IsExpireLink is False\n  /// </summary>\n  /// <returns></returns>\n\n  calloutColumn.prototype.buttonDisable = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null) {\n      return;\n    }\n    this.setCalloutActive(true);\n    mTab.setValue("IsExpireLink", \'N\');\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n\n  /// <summary>\n  ///   Set Email Id in BI User Name  when BI User CheckBox is True\n  /// </summary>\n  /// <returns></returns>\n\n  calloutColumn.prototype.SetBIUserName = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null) {\n      return;\n    }\n    this.setCalloutActive(true);\n    var userID = Util.getValueOfInt(mTab.getValue("AD_User_ID"));\n    $.ajax({\n      url: VIS.Application.contextUrl + "VIS/CalloutColumn/GetEmailAddress",\n      data: {\n        AD_User_ID: userID\n      },\n      async: false,\n      success: function (result) {\n        if (result) mTab.setValue("VA037_BIUserName", result);\n      },\n      error: function (err) {\n        this.log.severe(err);\n      }\n    });\n    this.setCalloutActive(false);\n    ctx = windowNo = mTab = mField = value = oldValue = null;\n    return "";\n  };\n  VIS.calloutColumn = calloutColumn;\n\n  //*********** Callout check DocAction in table  Start ****\n  function CalloutCheckDocAction() {\n    VIS.CalloutEngine.call(this, "VIS.CalloutCheckDocAction"); //must call\n  }\n  ;\n  VIS.Utility.inheritPrototype(CalloutCheckDocAction, VIS.CalloutEngine); //inherit prototype\n\n  CalloutCheckDocAction.prototype.CheckDocActionInTable = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null || value.toString() == "") {\n      return "";\n    }\n    this.setCalloutActive(true);\n    var isExist = VIS.dataContext.getJSONRecord("VIS/SurveyPanel/CheckDocActionInTable", Util.getValueOfInt(value));\n    if (isExist) {\n      mTab.setValue("IsDocAction", \'Y\');\n    } else {\n      mTab.setValue("IsDocAction", \'N\');\n    }\n    this.setCalloutActive(false);\n    return "";\n  };\n  VIS.CalloutCheckDocAction = CalloutCheckDocAction;\n  //**************Callout check DocAction in table End*************\n\n  //*********** Callout check DocAction in table  Start ****\n  function CalloutGetTableID() {\n    VIS.CalloutEngine.call(this, "VIS.CalloutGetTableID"); //must call\n  }\n  ;\n  VIS.Utility.inheritPrototype(CalloutGetTableID, VIS.CalloutEngine); //inherit prototype\n\n  CalloutGetTableID.prototype.CalloutGetTableIDByTab = function (ctx, windowNo, mTab, mField, value, oldValue) {\n    if (this.isCalloutActive() || value == null || value.toString() == "") {\n      return "";\n    }\n    this.setCalloutActive(true);\n    var TableID = VIS.dataContext.getJSONRecord("VIS/SurveyPanel/CalloutGetTableIDByTab", Util.getValueOfInt(value));\n    mTab.setValue("AD_Table_ID", TableID);\n    var isExist = VIS.dataContext.getJSONRecord("VIS/SurveyPanel/CheckDocActionInTable", Util.getValueOfInt(TableID));\n    if (isExist) {\n      mTab.setValue("IsDocAction", \'Y\');\n    } else {\n      mTab.setValue("IsDocAction", \'N\');\n    }\n    this.setCalloutActive(false);\n    return "";\n  };\n  VIS.CalloutGetTableID = CalloutGetTableID;\n  //**************Callout check DocAction in table End*************\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/model/CalloutColumn.js?')},"./Areas/VIS/Scripts/processengine/processctl.js":()=>{eval(';\n(function (VIS, $) {\n  /**\r\n   *\tProcess Interface Controller.\r\n   *\r\n   */\n  function ProcessCtl(parent, pi, trx) {\n    this.parent = parent;\n    this.pi = pi;\n    this.windowNo;\n    this.paraList = null;\n    this.splitUI = parent.splitUI;\n    this.parameters = null;\n    //this.isPdf = false;\n    //this.isCsv = false;\n    //this.PAGE_SIZE = VIS.context.ctx["#REPORT_PAGE_SIZE"];\n    // this.pageNo = 1;\n    //this.fileType = "P";\n\n    this.cansplitUI = function (split) {\n      splitUI = split;\n    };\n    this.getFileType = function () {\n      return parent.getFileType();\n    };\n    this.setBusy = function (busy) {\n      parent.setBusy(busy);\n    };\n    this.isBackground = function () {\n      return parent.isBackground();\n    };\n  }\n  ;\n  ProcessCtl.prototype.REPORT_TYPE_CSV = "C";\n  ProcessCtl.prototype.REPORT_TYPE_PDF = "P";\n  ProcessCtl.prototype.REPORT_TYPE_RTF = "R";\n  ProcessCtl.prototype.REPORT_TYPE_BIHTML = "B";\n  ProcessCtl.prototype.ORIGIN_WINDOW = "W";\n  ProcessCtl.prototype.ORIGIN_FORM = "F";\n  ProcessCtl.prototype.ORIGIN_MENU = "P";\n\n  //ProcessCtl.prototype.setIsPdf = function (ispdf) {\n  //    this.isPdf = ispdf;\n  //};\n\n  //ProcessCtl.prototype.setIsCsv = function (iscsv) {\n  //    this.isCsv = iscsv;\n  //};\n  //ProcessCtl.prototype.setFileType = function (filetype) {\n  //    this.fileType = filetype;\n  //};\n\n  /**\r\n  *\tAsync Process - Do it all.\r\n  *  <code>\r\n  *\t- Get Instance ID\r\n  *\t- Get Parameters\r\n  *\t- execute (lock - start process - unlock)\r\n  *  </code>\r\n  *  Creates a ProcessCtl instance, which calls\r\n  *  lockUI and unlockUI if parent is a ASyncProcess\r\n  *  <br>\r\n  *\tCalled from ProcessCtl.startProcess, ProcessDialog.actionPerformed,\r\n  *  APanel.cmd_print, APanel.actionButton, VPaySelect.cmd_generate\r\n  *\r\n  *  @param WindowNo window no\r\n  */\n  ProcessCtl.prototype.process = function (windowNo) {\n    this.lock();\n    this.windowNo = windowNo;\n    this.pi.setWindowNo(windowNo);\n    var self = this; //self pointer\n    this.jObjectFromServer = null;\n    var data = {\n      processInfo: this.pi.toJson()\n    };\n    //{\n    //    AD_Process_ID: this.pi.getAD_Process_ID(),\n    //    Name: this.pi.getTitle(),\n    //    AD_Table_ID: this.pi.getTable_ID(),\n    //    Record_ID: this.pi.getRecord_ID(),\n    //    WindowNo: windowNo,\n    //    fileType: this.fileType,\n    //    pageSize: this.PAGE_SIZE,\n    //    pageNo: this.pageNo,\n    //    AD_Window_ID: (this.parent.$parentWindow === undefined ? 0 : this.parent.$parentWindow.AD_Window_ID) // vinay bhatt window id\n    //}\n\n    VIS.dataContext.process(data, function (jsonStr) {\n      if (jsonStr.error != null) {\n        self.pi.setSummary(jsonStr.error, true);\n        self.unlock();\n        self = null;\n        return;\n      }\n      var json = JSON.parse(jsonStr.result);\n      if (json.IsError) {\n        self.pi.setSummary(json.Message, true);\n        self.unlock();\n        self = null;\n        return;\n      }\n      self.complete(json);\n      self = null;\n    });\n  }; //process\n\n  /**\r\n  *\tExecute Process complete.\r\n  *  Calls unlockUI if parent is a ASyncProcess\r\n   *  @param jObject process data contract from server\r\n  */\n  ProcessCtl.prototype.complete = function (jObject) {\n    this.jObjectFromServer = jObject;\n    this.pi.setAD_PInstance_ID(jObject.AD_PInstance_ID);\n    this.pi.setIsBiHtml(jObject.IsBiHTMlReport);\n    // Change Lokesh Chauhan\n    this.pi.setCustomHTML(jObject.CustomHTML);\n    this.pi.set_AD_PrintFormat_ID(jObject.AD_PrintFormat_ID);\n    if (jObject && jObject.ReportProcessInfo) {\n      this.pi.setIsReport(jObject.ReportProcessInfo.IsReport);\n      this.pi.setTotalPages(jObject.ReportProcessInfo.TotalPage);\n      this.pi.setSupportPaging(jObject.ReportProcessInfo.SupportPaging);\n      this.pi.setPageSize(jObject.ReportProcessInfo.PageSize);\n    }\n    if (jObject.ShowParameter) {\n      //Open Paramter Dialog\n      this.pi.setAD_PInstance_ID(jObject.AD_PInstance_ID);\n      try {\n        var pp = new VIS.ProcessParameter(this.pi, this, this.windowNo);\n        if (this.splitUI) {\n          this.parent.parameterContainer.append(pp.getRoot());\n          this.parent.setParameterHeights();\n        }\n        pp.initDialog(jObject.ProcessFields);\n        if (this.splitUI) {\n          pp.showCloseIcon(this.parent.getShowParameterCloseIcon());\n        } else {\n          pp.showDialog();\n          pp = null;\n        }\n      } catch (e) {\n        this.pi.setSummary(e.message, true);\n      }\n      this.unlock();\n    } else {\n      ////this.pi.dispose(); // dispose current pi\n      ////if (IsPosReport != "IsPosReport") {\n      //  this.pi.dispose(); // dispose current pi\n      ////}\n      // this.pi = this.pi.fromJson(jObject.ReportProcessInfo);\n\n      ////if (jObject.ReportFilePath && jObject.ReportFilePath.length > 10) { //report\n      ////    if (this.parent) {\n      ////        this.parent.showReport(new  VIS.PdfViewer());\n      ////    }\n      ////}\n\n      if (jObject.IsTelerikReport) {\n        if (window.KJS) {\n          if (this.parent) {\n            this.parent.showTelerikReport(this.pi.AD_PInstance_ID, this.pi.getTable_ID());\n          }\n        }\n      } else {\n        ////if (IsPosReport != "IsPosReport") {\n        this.unlock();\n        ////}\n        ////else {\n        ////    this.unlock("IsPosReport");\n        ////}\n\n        if (this.parent) {\n          if (jObject.AskForNewTab && jObject.HTML && jObject.HTML.length > 0) {\n            //if (VIS.ADialog.ask("VIS_OpenNewTab")) {\n            //    window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\n            //}\n            VIS.ADialog.confirm("VIS_OpenNewTab", true, "", "Confirm", function (result) {\n              if (result) {\n                window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\n              }\n            });\n          } else if (jObject.ReportFilePath) {\n            var ismobile = /ipad|iphone|ipod|mobile|android|blackberry|webos|windows phone/i.test(navigator.userAgent.toLowerCase());\n            if (ismobile) {\n              // window.setTimeout(function () {\n              window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\n              // }, 200);                      \n            } else if (!this.parent.setReportBytes) {\n              window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\n            } else {\n              this.parent.setReportBytes(jObject.Report);\n              this.parent.setReportPath(jObject.ReportFilePath);\n              var pdfViewer = null;\n              var ispdf = false;\n              if (jObject.HTML && jObject.HTML.length > 0) {\n                pdfViewer = new VIS.PdfViewer(jObject.HTML, null, true);\n                this.parent.showReport(pdfViewer, jObject, this);\n              } else if (jObject.ReportFilePath && jObject.ReportFilePath.length > 0) {\n                pdfViewer = new VIS.PdfViewer(jObject.ReportFilePath, this.pi);\n                ispdf = true;\n                this.parent.showReport(pdfViewer, jObject, this);\n              }\n\n              //this.parent.showReport(pdfViewer, jObject, this);// this.windowNo, this.paraList, jObject.AD_Table_ID, ispdf, jObject.TotalRecords, jObject.IsReportFormat, this.PAGE_SIZE, this.pageNo, jObject.AD_ReportView_ID, jObject.IsJasperReport);\n            }\n          } else if (this.pi.getUseCrystalReportViewer() && this.pi.getIsReport()) {\n            //var pdfViewer = new VIS.PdfViewer(null, null, true);\n            //if (this.parent && this.parent.showReport) {\n            //    this.parent.showReport(pdfViewer, jObject, this, true);\n            //}\n            //else {\n            var repV = new VIS.ReportViewerContainer(this);\n            repV.show();\n            //}\n          }\n        }\n      }\n      this.setBusy(false);\n      this.dispose();\n\n      /*if (jObject.HTML && jObject.HTML.length > 0) {\r\n          if (this.parent) {\r\n              if (jObject.AskForNewTab) {\r\n                  //if (VIS.ADialog.ask("VIS_OpenNewTab")) {\r\n                  //    window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n                  //}\r\n                  VIS.ADialog.confirm("VIS_OpenNewTab", true, "", "Confirm", function (result) {\r\n                      if (result) {\r\n                          window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n                      }\r\n                  });\r\n                  }\r\n              else {\r\n                    var ismobile = /ipad|iphone|ipod|mobile|android|blackberry|webos|windows phone/i.test(navigator.userAgent.toLowerCase());\r\n                  if (ismobile) {\r\n                      // window.setTimeout(function () {\r\n                      window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n                      // }, 200);                      \r\n                  }\r\n                  else if (!this.parent.setReportBytes) {\r\n                      window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n                  }\r\n                  else {\r\n                      this.parent.setReportBytes(jObject.Report);\r\n                      this.parent.setReportPath(jObject.ReportFilePath);\r\n                      this.parent.showReport(new VIS.PdfViewer(jObject.HTML, null, true), jObject.AD_PrintFormat_ID, this, this.windowNo, this.paraList, jObject.AD_Table_ID, false, jObject.TotalRecords, jObject.IsReportFormat, this.PAGE_SIZE, this.pageNo, jObject.AD_ReportView_ID, jObject.IsJasperReport);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      else {\r\n          if (jObject.ReportFilePath && jObject.ReportFilePath.length > 0) {\r\n              //window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n              var ismobile = /ipad|iphone|ipod|mobile|android|blackberry|webos|windows phone/i.test(navigator.userAgent.toLowerCase());\r\n              if (ismobile) {\r\n                  // window.setTimeout(function () {\r\n                  window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n                  // }, 200);                      \r\n              }\r\n              else if (!this.parent.setReportBytes) {\r\n                  window.open(VIS.Application.contextUrl + jObject.ReportFilePath);\r\n                  //this.parent.setReportBytes(jObject.Report);\r\n                  //this.parent.showReport(new VIS.PdfViewer(jObject.ReportFilePath), jObject.AD_PrintFormat_ID, this, this.windowNo, this.paraList, jObject.AD_Table_ID, true, jObject.TotalRecords, jObject.IsReportFormat, this.PAGE_SIZE, this.pageNo);\r\n              }\r\n              else {\r\n                  this.parent.setReportBytes(jObject.Report);\r\n                  this.parent.setReportPath(jObject.ReportFilePath);\r\n                  this.parent.showReport(new VIS.PdfViewer(jObject.ReportFilePath), jObject.AD_PrintFormat_ID, this, this.windowNo, this.paraList, jObject.AD_Table_ID, true, jObject.TotalRecords, jObject.IsReportFormat, this.PAGE_SIZE, this.pageNo, jObject.AD_ReportView_ID, jObject.IsJasperReport);\r\n                }\r\n          }\r\n      }\r\n      }\r\n      //this.dispose();\r\n      ////if (IsPosReport != "IsPosReport") {\r\n      this.dispose();\r\n      ////}*/\n      //this.pi.setAD_PInstance_ID(0);\n    }\n  };\n\n  /**\r\n  *\thandle process parameter closed event\r\n  *   - Calls lock and unlock\r\n  *   - call async process excute function\r\n  *   \r\n  *  @param isOk userclick Ok button \r\n  *  @param gridfield array  for each process parameter  if any\r\n  */\n  ProcessCtl.prototype.onProcessDialogClosed = function (isOK, paraList) {\n    var getPInstanceIDss = 0;\n    if (isOK) {\n      //Ok clicked\n      var self = this;\n      this.paraList = paraList;\n      this.lock();\n\n      ////if (IsPosReport == "IsPosReport") {\n      ////    getPInstanceIDss = getPinstanceIdOnOkClick(this.pi.getAD_Process_ID(), this.pi.getTitle(), this.pi.getTable_ID(), this.pi.getRecord_ID(), VIS.Env.getWindowNo(), this.fileType);\n      ////}\n      ////else {\n      ////getPInstanceIDss = this.pi.getAD_PInstance_ID();\n      //// }\n\n      var data = {\n        processInfo: self.pi.toJson(),\n        parameterList: paraList\n      };\n\n      //    {\n      //    AD_Process_ID: self.pi.getAD_Process_ID(),\n      //    AD_PInstance_ID: self.pi.getAD_PInstance_ID(),\n      //    Name: self.pi.getTitle(),\n      //    AD_Table_ID: self.pi.getTable_ID(),\n      //    Record_ID: self.pi.getRecord_ID(),\n      //    ParameterList: paraList,\n      //    fileType: self.fileType\n      //}\n\n      VIS.dataContext.executeProcess(data, function (jsonStr) {\n        if (jsonStr.error != null) {\n          self.pi.setSummary(jsonStr.error, true);\n          self.unlock();\n          self = null;\n          return;\n        }\n        var json = JSON.parse(jsonStr.result);\n        if (json.IsError) {\n          self.pi.setSummary(json.Message, true);\n          self.unlock();\n          self = null;\n          return;\n        }\n\n        ////self.complete(json); // call process complete\n        ////if (IsPosReport == "IsPosReport") {\n        ////    self.complete(json, IsPosReport); // call process complete\n        ////}\n        ////else {\n        self.complete(json); // call process complete\n        ////}\n        if (!this.splitUI) {\n          self = null;\n        }\n      });\n    } else {}\n  };\n  /*////\r\n  function getPinstanceIdOnOkClick(AD_Process_IDs, Names, AD_Table_IDs, Record_IDs, pageSizes) {\r\n      var json = 0;\r\n      var data = {\r\n          AD_Process_ID: AD_Process_IDs,\r\n          Name: Names,\r\n          AD_Table_ID: AD_Table_IDs,\r\n          Record_ID: Record_IDs,\r\n          WindowNo: VIS.Env.getWindowNo(),\r\n          fileType: "P",\r\n          pageSize: pageSizes,\r\n          pageNo: 1\r\n      }\r\n        VIS.dataContext.processAsyncFalse(data, function (jsonStr) {\r\n          json = JSON.parse(jsonStr.result);            \r\n      });\r\n      if (json) {\r\n          return getPInstanceIDss = json.AD_PInstance_ID;\r\n      }\r\n      else {\r\n          return json;\r\n      }\r\n  };////*/\n\n  /**\r\n  *  Unlock UI & dispose \r\n  */\n  ProcessCtl.prototype.unlock = function () {\n    var summary = this.jObjectFromServer ? this.jObjectFromServer.Result : null;\n    if (summary != null && summary.indexOf("@") != -1) {\n      this.pi.setSummary(VIS.Msg.parseTranslation(VIS.Env.getCtx(), summary));\n    } else if (summary) {\n      this.pi.setSummary(summary);\n    }\n    if (this.jObjectFromServer) this.pi.setError(this.jObjectFromServer.IsError);\n    if (this.parent) {\n      ////if (IsPosReport == "IsPosReport") {\n      ////    this.parent.unlockUI(this.pi, "IsPosReport");\n      ////}\n      ////else {\n      ////    this.parent.unlockUI(this.pi);\n      ////}\n      this.parent.unlockUI(this.pi);\n    }\n  }; //unlock\n\n  /**\r\n  *  Lock UI & show Waiting\r\n  */\n  ProcessCtl.prototype.lock = function () {\n    if (this.parent) this.parent.lockUI(this.pi);\n  }; //lock\n\n  /**\r\n  *  dispose\r\n  */\n  ProcessCtl.prototype.dispose = function () {\n    if (!this.splitUI) {\n      this.parent = null;\n    }\n    //if (this.pi)\n    //    this.pi.dispose();\n    //this.pi = null;\n  };\n  function PdfViewer(rptName, pi, isHtml) {\n    this.bytes = null;\n    this.RptFileName = rptName;\n    this.Pi = pi;\n    var $root = null;\n    var $leftDiv = null,\n      $rightDiv = null;\n    $innerRightDiv = null;\n    var $object = null;\n    var $btn = "";\n    var bsyDiv = $("<div class=\'vis-apanel-busy\' style=\'width:98%;height:98%;position:absolute\'>");\n    function initializedComponenet() {\n      $root = $("<div class=\'vis-height-full\'>");\n      $rightDiv = $("<div class=\'vis-height-full\'>");\n      $rightDiv.css(\'background-color\', \'rgba(var(--v-c-primary), .3)\');\n      $innerRightDiv = $("<div class=\'vis-height-full\' style=\'padding:5px;\'>");\n      $root.append($rightDiv);\n      $root.append(bsyDiv);\n      if (isHtml) {\n        $rightDiv.append($innerRightDiv);\n        $innerRightDiv.html(rptName);\n      } else if (pi.getIsBiHtml())\n        // if report is Bi html report, then send request to respective view\n        {\n          $object = $("<iframe style = \'width:100%;height:99.4%;\'>");\n          $object.attr("src", VIS.Application.contextUrl + "BiPanel/GetHTMLReport?info=" + window.encodeURIComponent(rptName));\n          $rightDiv.css(\'height\', \'95%\');\n          $rightDiv.css(\'width\', \'100%\');\n          $rightDiv.append($object);\n        } else {\n        $object = $("<iframe style = \'width:100%;height:99.4%;\' pluginspage=\'http://www.adobe.com/products/acrobat/readstep2.html\'>");\n        $object.attr("src", VIS.Application.contextUrl + rptName);\n        $rightDiv.css(\'height\', \'95%\');\n        $rightDiv.css(\'width\', \'100%\');\n        $rightDiv.append($object);\n      }\n    }\n    ;\n    initializedComponenet();\n\n    //$leftDiv.on("click", function () {\n    //    setTimeout(function () {\n    //        $object.get(0).contentWindow.focus();\n    //        $object.get(0).contentWindow.print();\n    //    }, 100);\n    //});\n\n    this.getRoot = function () {\n      return $root;\n    };\n    this.getRightDiv = function () {\n      return $rightDiv;\n    };\n    this.getRightInnerDiv = function () {\n      return $innerRightDiv;\n    };\n    this.getIsHtmlReport = function () {\n      return isHtml;\n    };\n    this.getHtml = function () {\n      return rptName;\n    };\n    this.disposeComponent = function () {\n      if ($root != null) {\n        $root.remove();\n        $root = null;\n      }\n    };\n    this.setBusy = function (isBusy) {\n      //////if (IsPosReport == "IsPosReport") {\n      ////    if (isBusy) {\n      ////        VAPOS.SetBusyIndicator[0].style.visibility = \'visible\';\n      ////    }\n      ////    else {\n      ////        VAPOS.SetBusyIndicator[0].style.visibility = \'hidden\';\n      ////    }\n      ////}\n      ////else {\n      bsyDiv.css("display", isBusy ? \'block\' : \'none\');\n      ////}\n    };\n    this.sizeChanged = function (height, width) {\n      // $root.height(height - 40);\n      //$root.width(width);\n    };\n    this.refresh = function () {\n      // $root.css("width", "auto");\n\n      //var child = $root.find(\'.vis-height-full\');\n      //if (child && child.length > 1) {\n      //    $(child[1]).css("width", "auto");\n      //}\n      if ($object) {\n        window.setTimeout(function () {\n          $object.css(\'height\', \'99.4%\');\n        }, 50);\n        $object.css(\'height\', $object.height() - 1);\n      }\n    };\n  }\n  ;\n  PdfViewer.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n  VIS.PdfViewer = PdfViewer;\n  //global assignment\n  VIS.ProcessCtl = ProcessCtl;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/processengine/processctl.js?')},"./Areas/VIS/Scripts/processengine/processinfo.js":()=>{eval(';\n(function (VIS, $) {\n  // Updated un initialized user and client id, table name by vinay bhatt\n  function ProcessInfo(strTitle, AD_Process_ID, Table_ID, Record_ID) {\n    this.title = strTitle;\n    this.AD_Process_ID = AD_Process_ID;\n    this.table_ID = Table_ID;\n    this.tableName = "";\n    this.record_ID = Record_ID;\n    this.AD_User_ID = 0;\n    this.AD_Client_ID = 0;\n    this.className = null;\n    this.AD_PInstance_ID = 0;\n    this.summary = "";\n    this.error = false;\n    this.batch = false;\n    //Process timed out\t\t\n    this.timeout = false;\n    //private List<ProcessInfoLog> m_logs = null;\n    this.parameter = null;\n    this.AD_PrintFormat_Table_ID = 0;\n    this.AD_PrintFormat_ID = 0;\n    this.isReportFormat = false;\n    this.isCrystal = false;\n    this.totalrecords = 0;\n    this.isTelerikReport = false;\n    this.supportPaging = false;\n    this.dynamicAction = "";\n    this.pageSize = VIS.context.ctx["#REPORT_PAGE_SIZE"];\n    this.totalPage = 1;\n    this.pageNo = 1;\n    this.fileType = VIS.ProcessCtl.prototype.REPORT_TYPE_PDF;\n    this.windowNo = 0;\n    this.tableName = "";\n    this.AD_Window_ID = 0;\n    this.AD_ReportView_ID = 0;\n    this.printFormatTableName = "";\n    this.useCrystalReportViewer = false;\n    this.isReport = false;\n    this.isBackground = false;\n    this.ActionOrigin = "";\n    this.OriginName = "";\n    this.isBiHtml = false;\n  }\n  ;\n  ProcessInfo.prototype.toJson = function () {\n    var o = {\n      "Title": this.title,\n      "Process_ID": this.AD_Process_ID,\n      "AD_PInstance_ID": this.AD_PInstance_ID,\n      "Record_ID": this.record_ID,\n      "Error": this.error,\n      "Summary": this.getSummary(),\n      "ClassName": this.className,\n      "AD_Table_ID": this.table_ID,\n      "AD_TableName": this.tableName,\n      "AD_User_ID": this.AD_User_ID,\n      "AD_Client_ID": this.AD_Client_ID,\n      "Batch": this.batch,\n      "TimeOut": this.timeout,\n      "AD_PrintFormat_Table_ID": this.AD_PrintFormat_Table_ID,\n      "PrintFormatTableName": this.printFormatTableName,\n      "AD_PrintFormat_ID": this.AD_PrintFormat_ID,\n      "SupportPaging": this.supportPaging,\n      "DynamicAction": this.dynamicAction,\n      "PageSize": this.pageSize,\n      "TotalPage": this.totalPage,\n      "PageNo": this.pageNo,\n      "FileType": this.fileType,\n      "AD_Window_ID": this.AD_Window_ID,\n      "WindowNo": this.windowNo,\n      "AD_ReportView_ID": this.AD_ReportView_ID,\n      "UseCrystalReportViewer": this.useCrystalReportViewer,\n      "IsReport": this.isReport,\n      "IsBackground": this.isBackground,\n      "ActionOrigin": this.ActionOrigin,\n      "OriginName": this.OriginName\n    };\n    return o;\n  };\n  ProcessInfo.prototype.fromJson = function (o) {\n    var info = null;\n    if (this instanceof ProcessInfo) {\n      info = this;\n    } else {\n      info = new ProcessInfo(o.Title, o.Process_ID);\n    }\n    if (o && o.length > 0) {\n      createPIFromJson(info, o);\n    }\n    return info;\n  };\n  function createPIFromJson(info, o) {\n    info.className = o.ClassName;\n    info.record_ID = o.Record_ID;\n    info.error = o.Error;\n    info.AD_PInstance_ID = o.AD_PInstance_ID;\n    info.summary = o.Summary;\n    info.table_ID = o.AD_Table_ID;\n    info.tableName = o.AD_TableName;\n    info.AD_User_ID = o.AD_User_ID;\n    info.AD_Client_ID = o.AD_Client_ID;\n    ;\n    info.batch = o.Batch;\n    info.timeout = o.TimeOut;\n    info.AD_PrintFormat_Table_ID = o.AD_PrintFormat_Table_ID;\n    info.printFormatTableName = o.PrintFormatTableName;\n    info.AD_PrintFormat_ID = o.AD_PrintFormat_ID;\n    info.isCrystal = o.IsCrystal;\n    info.isReportFormat = o.IsReportFormat;\n    info.totalrecords = parseInt(o.TotalRecords);\n    info.isTelerikReport = o.IsTelerikReport;\n    info.supportPaging = o.SupportPaging;\n    info.dynamicAction = o.DynamicAction;\n    info.pageSize = o.PageSize;\n    info.title = o.Title;\n    info.AD_Process_ID = o.Process_ID;\n    info.totalPage = o.TotalPage;\n    info.pageNo = o.PageNo;\n    info.windowNo = o.WindowNo;\n    info.AD_ReportView_ID = o.AD_ReportView_ID;\n    info.isJasperReport = o.IsJasperReport;\n    info.useCrystalReportViewer = o.UseCrystalReportViewer;\n    info.isReport = o.IsReport;\n    info.isBackground = o.IsBackground;\n    info.ActionOrigin = o.ActionOrigin;\n    info.OriginName = o.OriginName;\n  }\n  ;\n  ProcessInfo.prototype.setPrintFormatTableName = function (tableName) {\n    this.printFormatTableName = tableName;\n  };\n  ProcessInfo.prototype.getPrintFormatTableName = function () {\n    return this.printFormatTableName;\n  };\n  ProcessInfo.prototype.setSupportPaging = function (sPaging) {\n    this.supportPaging = sPaging;\n  };\n  ProcessInfo.prototype.getSupportPaging = function () {\n    return this.supportPaging;\n  };\n  ProcessInfo.prototype.setTotalPages = function (tpages) {\n    this.totalPage = tpages;\n  };\n  ProcessInfo.prototype.getTotalPages = function () {\n    return this.totalPage;\n  };\n  ProcessInfo.prototype.setPageNo = function (pNo) {\n    this.pageNo = pNo;\n  };\n  ProcessInfo.prototype.getPageNo = function () {\n    return this.pageNo;\n  };\n  ProcessInfo.prototype.setPageSize = function (pageSize) {\n    this.pageSize = pageSize;\n  };\n  ProcessInfo.prototype.getPageSize = function () {\n    return this.pageSize;\n  };\n  ProcessInfo.prototype.setError = function (error) {\n    this.error = error;\n  };\n  ProcessInfo.prototype.getIsError = function () {\n    return this.error;\n  };\n  ProcessInfo.prototype.getIsBatch = function () {\n    return this.batch;\n  };\n  ProcessInfo.prototype.setIsBatch = function (batch) {\n    this.batch = batch;\n  };\n  ProcessInfo.prototype.getAD_PInstance_ID = function () {\n    return this.AD_PInstance_ID;\n  };\n  ProcessInfo.prototype.setAD_PInstance_ID = function (AD_PInstance_ID) {\n    this.AD_PInstance_ID = AD_PInstance_ID;\n  };\n  ProcessInfo.prototype.getAD_Process_ID = function () {\n    return this.AD_Process_ID;\n  };\n  ProcessInfo.prototype.setAD_Process_ID = function (AD_Process_ID) {\n    this.AD_Process_ID = AD_Process_ID;\n  };\n  ProcessInfo.prototype.getClassName = function () {\n    return this.className;\n  };\n  ProcessInfo.prototype.setClassName = function (className) {\n    this.className = className;\n    if (className != null && className.length == 0) this.className = null;\n  };\n  ProcessInfo.prototype.getTable_ID = function () {\n    return this.table_ID;\n  };\n  ProcessInfo.prototype.setTable_ID = function (AD_Table_ID) {\n    this.table_ID = AD_Table_ID;\n  };\n  ProcessInfo.prototype.setTable_Name = function (tableName) {\n    this.tableName = tableName;\n  };\n  ProcessInfo.prototype.getTable_Name = function () {\n    return this.tableName;\n  };\n  ProcessInfo.prototype.setPrintFormatTableName = function (tableName) {\n    this.printFormatTableName = tableName;\n  };\n  ProcessInfo.prototype.getPrintFormatTableName = function () {\n    return this.printFormatTableName;\n  };\n  ProcessInfo.prototype.getRecord_ID = function () {\n    return this.record_ID;\n  };\n  ProcessInfo.prototype.setRecord_ID = function (Record_ID) {\n    this.record_ID = Record_ID;\n  };\n  ProcessInfo.prototype.getTitle = function () {\n    return this.title;\n  };\n  ProcessInfo.prototype.setTitle = function (title) {\n    this.title = title;\n  };\n  ProcessInfo.prototype.setAD_Client_ID = function (AD_Client_ID) {\n    this.AD_Client_ID = AD_Client_ID;\n  };\n  ProcessInfo.prototype.getAD_Client_ID = function () {\n    return this.AD_Client_ID;\n  };\n  ProcessInfo.prototype.setAD_User_ID = function (AD_User_ID) {\n    this.AD_User_ID = AD_User_ID;\n  };\n  ProcessInfo.prototype.getAD_User_ID = function () {\n    return this.AD_User_ID;\n  };\n  ProcessInfo.prototype.getParameter = function () {\n    return this.parameter;\n  };\n  ProcessInfo.prototype.setParameter = function (parameter) {\n    this.parameter = parameter;\n  };\n  ProcessInfo.prototype.setIsTimeout = function (timeout) {\n    this.timeout = timeout;\n  };\n  ProcessInfo.prototype.getIsTimeout = function () {\n    return this.timeout;\n  };\n  ProcessInfo.prototype.set_AD_PrintFormat_Table_ID = function (AD_PrintFormat_Table_ID) {\n    this.AD_PrintFormat_Table_ID = AD_PrintFormat_Table_ID;\n  };\n  ProcessInfo.prototype.get_AD_PrintFormat_Table_ID = function () {\n    return this.AD_PrintFormat_Table_ID;\n  };\n  ProcessInfo.prototype.set_AD_PrintFormat_ID = function (AD_PrintFormat_ID) {\n    this.AD_PrintFormat_ID = AD_PrintFormat_ID;\n  };\n  ProcessInfo.prototype.Get_AD_PrintFormat_ID = function () {\n    return this.AD_PrintFormat_ID;\n  };\n  ProcessInfo.prototype.setIsCrystal = function (isCrystal) {\n    this.isCrystal = isCrystal;\n  };\n  ProcessInfo.prototype.getIsCrystal = function () {\n    return this.isCrystal;\n  };\n  ProcessInfo.prototype.setIsTelerikReport = function (isTelerikReport) {\n    this.isTelerikReport = isTelerikReport;\n  };\n  ProcessInfo.prototype.getIsTelerikReport = function () {\n    return this.isTelerikReport;\n  };\n  ProcessInfo.prototype.setIsReportFormat = function (isRF) {\n    this.isReportFormat = isRF;\n  };\n  ProcessInfo.prototype.getIsReportFormat = function () {\n    return this.isReportFormat;\n  };\n  ProcessInfo.prototype.getTotalRecord = function () {\n    return this.totalrecords;\n  };\n  ProcessInfo.prototype.getFileType = function () {\n    return this.fileType;\n  };\n  ProcessInfo.prototype.setFileType = function (fileType) {\n    this.fileType = fileType;\n  };\n  ProcessInfo.prototype.setWindowNo = function (windowNo) {\n    this.windowNo = windowNo;\n  };\n  ProcessInfo.prototype.getWindowNo = function () {\n    return this.windowNo;\n  };\n  ProcessInfo.prototype.setUseCrystalReportViewer = function (ucrv) {\n    this.useCrystalReportViewer = ucrv;\n  };\n  ProcessInfo.prototype.getUseCrystalReportViewer = function () {\n    return this.useCrystalReportViewer;\n  };\n  ProcessInfo.prototype.setIsReport = function (isRep) {\n    this.isReport = isRep;\n  };\n  ProcessInfo.prototype.getIsReport = function () {\n    return this.isReport;\n  };\n  ProcessInfo.prototype.GetAD_ReportView_ID = function () {\n    return this.AD_ReportView_ID;\n  };\n  ProcessInfo.prototype.SetAD_ReportView_ID = function (AD_ReportView_ID) {\n    this.AD_ReportView_ID = AD_ReportView_ID;\n  };\n  ProcessInfo.prototype.setIsJasperReport = function (isJasperReport) {\n    this.isJasperReport = isJasperReport;\n  };\n  ProcessInfo.prototype.getIsJasperReport = function () {\n    return this.isJasperReport;\n  };\n  ProcessInfo.prototype.setAD_Window_ID = function (Window_ID) {\n    this.AD_Window_ID = Window_ID;\n  };\n  ProcessInfo.prototype.getAD_Window_ID = function () {\n    return this.AD_Window_ID;\n  };\n  ProcessInfo.prototype.setIsBackground = function (Background) {\n    this.isBackground = Background;\n  };\n  ProcessInfo.prototype.getIsBackground = function () {\n    return this.isBackground;\n  };\n  ProcessInfo.prototype.getActionOrigin = function () {\n    return this.ActionOrigin;\n  };\n  ProcessInfo.prototype.setActionOrigin = function (ActionOrigin) {\n    this.ActionOrigin = ActionOrigin;\n  };\n  ProcessInfo.prototype.getOriginName = function () {\n    return this.OriginName;\n  };\n  ProcessInfo.prototype.setOriginName = function (OriginName) {\n    this.OriginName = OriginName;\n  };\n  ProcessInfo.prototype.setIsBiHtml = function (isRF) {\n    this.isBiHtml = isRF;\n  };\n  ProcessInfo.prototype.getIsBiHtml = function () {\n    return this.isBiHtml;\n  };\n  ProcessInfo.prototype.setSummary = function (summary, error) {\n    if (arguments.length == 2) {\n      this.setError(error);\n    }\n    this.summary = summary;\n  };\n  ProcessInfo.prototype.getSummary = function () {\n    return this.summary;\n    //\treturn Util.cleanMnemonic(m_Summary);\n  };\n\n  // Change Lokesh Chauhan\n  ProcessInfo.prototype.setCustomHTML = function (HTML) {\n    this.customHTML = HTML;\n  };\n  ProcessInfo.prototype.getCustomHTML = function () {\n    return this.customHTML;\n  };\n\n  /**************************************************************************\r\n  * \tAdd to Log\r\n  *\t@param Log_ID Log ID\r\n  *\t@param P_ID Process ID\r\n  *\t@param P_Date Process Date\r\n  *\t@param P_Number Process Number\r\n  *\t@param P_Msg Process Message\r\n  */\n  ProcessInfo.prototype.addLog = function (Log_ID, P_ID, P_Date, P_Number, P_Msg) {\n    return this.addLogEntry(new ProcessInfoLog(Log_ID, P_ID, P_Date, P_Number, P_Msg));\n  }; //\t\n\n  /**\r\n  * \tAdd to Log.\r\n  * \tChecks for duplicates;\r\n  *\t@param logEntry log entry\r\n  */\n  ProcessInfo.prototype.addLogEntry = function (logEntry) {\n    if (logEntry == null) return null;\n    if (this.logs == null) this.logs = [];\n    //\n    var newID = logEntry.getLog_ID();\n    for (var i = 0; i < this.logs.length; i++) {\n      var thisEntry = this.logs[i];\n      var thisID = thisEntry.getLog_ID();\n      if (newID == thisID) return thisEntry; //\talready exists\n    }\n    this.logs.push(logEntry);\n    return logEntry;\n  }; //\taddLog\n\n  /**\r\n  *\tSet Log of Process.\r\n  *  <pre>\r\n  *  - Translated Process Message\r\n  *  - List of log entries\r\n  *      Date - Number - Msg\r\n  *  </pre>\r\n  *\t@param html if true with HTML markup\r\n  *\t@return Log Info\r\n  */\n  ProcessInfo.prototype.getLogInfo = function (html) {\n    if (this.logs == null) return "";\n    //\n    var sb = new StringBuilder();\n    //SimpleDateFormat dateTimeFormat = DisplayType.getDateFormat(DisplayTypeConstants.DateTime);\n    //SimpleDateFormat dateFormat = DisplayType.getDateFormat(DisplayTypeConstants.Date);\n    if (html) sb.append("<div class=\'vis-process-result-table\'><table width=\\"100%\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"2\\">");\n    //\n    //\tboolean hasIDCol = false;\n    var hasDateCol = false;\n    var hasNoCol = false;\n    var hasMsgCol = false;\n    for (var i = 0; i < this.logs.length; i++) {\n      var log = this.logs[i];\n      //\tif (log.getP_ID() != 0)\n      //\t\thasIDCol = true;\n      if (log.getP_Date() != null) hasDateCol = true;\n      if (log.getP_Number() != null) hasNoCol = true;\n      if (log.getP_Msg() != null) hasMsgCol = true;\n    }\n    for (i = 0; i < this.logs.length; i++) {\n      if (html) sb.append("<tr>");else if (i > 0) sb.append("\\n");\n      //\n      var log = this.logs[i];\n      /**\r\n      if (log.getP_ID() != 0)\r\n          sb.append(html ? "<td>" : "")\r\n              .append(log.getP_ID())\r\n              .append(html ? "</td>" : " \\t");\t**/\n      //\n      if (log.getP_Date() != null) {\n        sb.append(html ? "<td>" : "");\n        var ts = log.getP_Date();\n        //if (TimeUtil.isDay(ts))\n        //  sb.append(dateFormat.format(ts));\n        // else\n        //  sb.append(dateTimeFormat.format(ts));\n        sb.append(html ? "</td>" : " \\t");\n      } else if (hasDateCol) sb.append(html ? "<td>&nbsp;</td>" : " \\t");\n      //\n      if (log.getP_Number() != null) {\n        sb.append(html ? "<td>" : "").append(log.getP_Number()).append(html ? "</td>" : " \\t");\n      } else if (hasNoCol) sb.append(html ? "<td>&nbsp;</td>" : " \\t");\n      //\n      if (log.getP_Msg() != null) {\n        sb.append(html ? "<td>" : "").append(VIS.Msg.parseTranslation(VIS.Env.getCtx(), log.getP_Msg())).append(html ? "</td>" : "");\n      } else if (hasMsgCol) sb.append(html ? "<td>&nbsp;</td>" : "");\n      //\n      if (html) sb.append("</tr>");\n    }\n    if (html) sb.append("</table></div>");\n    return sb.toString();\n  }; //\tgetLogInfo\n\n  ProcessInfo.prototype.dispose = function () {\n    this.title = null;\n    this.AD_Process_ID = null;\n    this.table_ID = null;\n    this.tableName = null;\n    this.record_ID = null;\n    this.AD_User_ID = null;\n    this.AD_Client_ID == null;\n    this.className = null;\n    this.AD_PInstance_ID = null;\n    this.summary = null;\n    this.error = null;\n    this.batch = null;\n    //Process timed out\t\t\n    this.timeout = null;\n    //private List<ProcessInfoLog> m_logs = null;\n    this.parameter = null;\n    this.AD_PrintFormat_Table_ID = null;\n    this.AD_PrintFormat_ID = null;\n    this.isReportFormat = null;\n    this.isCrystal = null;\n    this.totalrecords = null;\n    this.isJasperReport = null;\n\n    // Change Lokesh Chauhan\n    this.customHTML = null;\n  };\n  var baseUrl = VIS.Application.contextUrl;\n  var dataSetUrl = baseUrl + "JsonData/JDataSetWithCode";\n  var executeReader = function (sql, param, callback) {\n    var async = callback ? true : false;\n    var dataIn = {\n      sql: sql,\n      page: 1,\n      pageSize: 0\n    };\n    if (param) {\n      dataIn.param = param;\n    }\n    var dr = null;\n    getDataSetJString(dataIn, async, function (jString) {\n      dr = new VIS.DB.DataReader().toJson(jString);\n      if (callback) {\n        callback(dr);\n      }\n    });\n    return dr;\n  };\n\n  //DataSet String\n  function getDataSetJString(data, async, callback) {\n    var result = null;\n    //data.sql = VIS.secureEngine.encrypt(data.sql);\n    $.ajax({\n      url: dataSetUrl,\n      type: "POST",\n      datatype: "json",\n      contentType: "application/json; charset=utf-8",\n      async: async,\n      data: JSON.stringify(data)\n    }).done(function (json) {\n      result = json;\n      if (callback) {\n        callback(json);\n      }\n      //return result;\n    });\n    return result;\n  }\n  ;\n\n  /*****************************************************/\n  /********       Process Info Util            ********/\n  /***************************************************/\n\n  /**\r\n  * \tProcess Info with Utilities\r\n  *\r\n  */\n  VIS.ProcessInfoUtil = {\n    /**\r\n    *\tSet Log of Process.\r\n    * \t@param pi process info\r\n    */\n    setLogFromDB: function (pi) {\n      //\ts_log.fine("setLogFromDB - AD_PInstance_ID=" + pi.getAD_PInstance_ID());\n      var sql = "VIS_144";\n      var param = [];\n      param[0] = new VIS.DB.SqlParam("@AD_PInstance_ID", pi.getAD_PInstance_ID());\n      var dr = null;\n      try {\n        dr = executeReader(sql, param);\n        while (dr.read())\n        //\tint Log_ID, int P_ID, Timestamp P_Date, BigDecimal P_Number, String P_Msg\n        pi.addLog(dr.getInt(0), dr.getInt(1), dr.getDateTime(2), dr.getDecimal(3), dr.getString(4));\n\n        //dr.dispose();\n      } catch (e) {\n        console.log(e);\n      } finally {\n        if (dr) dr.dispose();\n      }\n    } //\tgetLogFromDB\n  };\n\n  /*****************************************************/\n  /********               End                  ********/\n  /***************************************************/\n\n  /**\r\n   * \tProcess Info Log (VO)\r\n   */\n  function ProcessInfoLog(Log_ID, P_ID, P_Date, P_Number, P_Msg) {\n    this.P_ID;\n    this.P_Date;\n    this.P_Number;\n    this.P_Msg;\n    if (Log_ID) {\n      this.setLog_ID(Log_ID);\n    } else this.setLog_ID(this.Log_ID++);\n    this.setP_ID(P_ID);\n    this.setP_Date(P_Date);\n    this.setP_Number(P_Number);\n    this.setP_Msg(P_Msg);\n  }\n  ;\n  ProcessInfoLog.prototype.Log_ID = 0;\n\n  /* Get Log_ID\r\n  * @return id\r\n  */\n  ProcessInfoLog.prototype.getLog_ID = function () {\n    return this.Log_ID;\n  };\n\n  /**\r\n   * \tSet Log_ID\r\n   *\t@param Log_ID id\r\n   */\n  ProcessInfoLog.prototype.setLog_ID = function (Log_ID) {\n    this.Log_ID = Log_ID;\n  };\n\n  /**\r\n   * Method getP_ID\r\n   * @return int\r\n   */\n  ProcessInfoLog.prototype.getP_ID = function () {\n    return this.P_ID;\n  };\n  /**\r\n   * Method setP_ID\r\n   * @param P_ID int\r\n   */\n  ProcessInfoLog.prototype.setP_ID = function (P_ID) {\n    this.P_ID = P_ID;\n  };\n\n  /**\r\n   * Method getP_Date\r\n   * @return Timestamp\r\n   */\n  ProcessInfoLog.prototype.getP_Date = function () {\n    return this.P_Date;\n  };\n  /**\r\n   * Method setP_Date\r\n   * @param P_Date Timestamp\r\n   */\n  ProcessInfoLog.prototype.setP_Date = function (P_Date) {\n    this.P_Date = P_Date;\n  };\n\n  /**\r\n   * Method getP_Number\r\n   * @return BigDecimal\r\n   */\n  ProcessInfoLog.prototype.getP_Number = function () {\n    return this.P_Number;\n  };\n  /**\r\n   * Method setP_Number\r\n   * @param P_Number BigDecimal\r\n   */\n  ProcessInfoLog.prototype.setP_Number = function (P_Number) {\n    this.P_Number = P_Number;\n  };\n\n  /**\r\n   * Method getP_Msg\r\n   * @return String\r\n   */\n  ProcessInfoLog.prototype.getP_Msg = function () {\n    return this.P_Msg;\n  };\n  /**\r\n   * Method setP_Msg\r\n   * @param P_Msg String\r\n   */\n  ProcessInfoLog.prototype.setP_Msg = function (P_Msg) {\n    this.P_Msg = P_Msg;\n  };\n\n  //\tProcessInfoLog\n\n  VIS.ProcessInfo = ProcessInfo;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/processengine/processinfo.js?')},"./Areas/VIS/Scripts/processengine/processparameter.js":()=>{eval(';\n(function (VIS, $) {\n  /**\r\n  *\tParameter Dialog.\r\n  *\t- called from ProcessCtl\r\n  *\t- checks, if parameters exist and inquires and saves them\r\n  *  @class ProcessParameter\r\n  */\n\n  function ProcessParameter(pi, parent, windowNo) {\n    //Variabls\n    this.pi = pi;\n    this.parent = parent;\n    this.windowNo = windowNo;\n    this.gridFields = [];\n    this.depOnFieldColumn = [];\n    this.depOnField = [];\n    this.vEditors = [];\n    this.vEditors2 = [];\n    this.mFields = [];\n    this.mFields2 = [];\n    this.isOkClicked = false;\n    var splitUI = parent.splitUI;\n    this.onClosed;\n    var $root, $table, $tr, $td1, $td2, $td3, $btnOK, $btnClose, $divButtons, $divTable;\n    function initlizedComponent() {\n      $root = $("<div class=\'vis-pro-para-root\'>");\n      $table = $("<table class=\'vis-processpara-table vis-formouterwrpdiv\'>");\n      // $root.append($table);\n      $divButtons = $(\'<div class="vis-processbtnwrap">\');\n      // $divTable = $(\'<div style="overflow-y:auto;overflow-x:hidden">\');\n      $divTable = $(\'<div class="vis-para-maxheight">\');\n      $divTable.append($table);\n      $root.append($divTable).append($divButtons);\n      $btnOK = $(\'<input type="button" class="vis-process-ok-btn" >\').val(VIS.Msg.getMsg("OK"));\n      $btnOK.addClass("VIS_Pref_btn-2");\n      $btnClose = $("<input type=\'button\'>").val(VIS.Msg.getMsg("Close"));\n      $btnClose.addClass("VIS_Pref_btn-2");\n      //$btnClose.css({ "margin-bottom": "0px", "margin-top": "7px", "margin-left": "5px" });\n      //$btnOK.css({ "margin-bottom": "0px", "margin-top": "7px" });\n      //$divTable.css(\'max-height\', (window.innerHeight - 200) + \'px\');\n\n      if (!splitUI) {\n        $divTable.css(\'height\', \'auto\');\n      }\n    }\n    ;\n\n    //this.getTableDiv = function () {\n    //    return $divTable;\n    //};\n\n    initlizedComponent();\n\n    //Privilized functions\n\n    var self = this;\n    this.addLine = function () {\n      $tr = $td1 = $td2 = $td3 = null;\n      $tr = $(\'<tr>\');\n      $td1 = $("<td class=\'\'>");\n      //$td2 = $("<td class=\'\'>");\n      $td3 = $("<td class=\'vis-processpara-table-td3\'>");\n      //$table.append($tr.append($td1).append($td2).append($td3));\n      //$table.append($tr.append($td1).append($td3));\n      $table.append($tr.append($td3));\n      if (splitUI) {\n        $table.width(\'100%\');\n        $tr.addClass(\'vis-processpara-table-SplitUI\');\n        //$td1.addClass(\'vis-processpara-table-SplitUI\');\n        //$td2.addClass(\'vis-processpara-table-SplitUI\');\n        $td3.addClass(\'vis-processpara-table-SplitUI\');\n      }\n    };\n    this.addFields = function (c1, c2) {\n      if (c1) {\n        //var control = c1.getControl();\n        // if (splitUI)\n        //control.css(\'color\', \'white\');\n        //$td1.append(control);\n      }\n      if (c2) {\n        var $control = null;\n        if (c1) {\n          $control = c1.getControl();\n        }\n        var $inputGroup = $(\'<div class="input-group vis-input-wrap">\');\n        var $CtrlGroup = $(\'<div class="vis-control-wrap">\');\n        $td3.append($inputGroup);\n        $inputGroup.append($CtrlGroup);\n        var controll = c2.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\');\n        $CtrlGroup.append(controll);\n        if ($control) {\n          $CtrlGroup.append($control);\n        }\n        //if (controll.is(\'select\'))\n        //controll.addClass(\'vis-custom-select\');\n        //$td3.append(c2.getControl());\n        if (c2.getBtnCount() > 0) {\n          c2.getControl().attr(\'placeholder\', \' \').attr(\'data-placeholder\', \'\').attr(\'data-hasbtn\', \' \');\n          //if (splitUI) {\n          if (controll.attr(\'type\') == "date") {\n            //controll.css({ \'width\': \'100%\' });\n          }\n          //else {\n          //    //c2.getControl().css({ \'width\': \'calc(100% - 36px)\' });\n          //}\n          //c2.getControl().height("26px");\n          //}\n          //else {\n          //}\n\n          var btn = c2.getBtn(0);\n          // $td3.append(btn);\n          var $divInputGroupAppend = $(\'<div class="input-group-append">\');\n          $divInputGroupAppend.append(btn);\n          $inputGroup.append($divInputGroupAppend);\n\n          //if (c2.getDisplayType() == VIS.DisplayType.MultiKey) {\n          var btn2 = c2.getBtn(1);\n          if (btn2) {\n            //var $divInputGroupAppend1 = $(\'<div class="input-group-append">\');\n            $divInputGroupAppend.append(btn2);\n            //$inputGroup.append($divInputGroupAppend1);\n          }\n          //    if (splitUI) {\n          //        // c2.getControl().css({ \'width\': \'calc(100% - 64px)\' });\n          //    }\n          //}\n        } else {\n          // if (splitUI) {\n          if (controll.attr(\'type\') == "date") {\n            //controll.css({ \'width\': \'100%\' });\n          }\n          //c2.getControl().height("26px");\n          //  }\n        }\n      }\n    };\n    this.addButtons = function () {\n      this.addLine();\n      $divButtons.append($btnClose).append($btnOK);\n    };\n    this.canOpenDialog = function (split) {\n      splitUI = split;\n    };\n    this.showCloseIcon = function (show) {\n      if (!show) {\n        $btnClose.hide();\n      }\n    };\n    this.showDialog = function () {\n      // if (IsPosReport != "IsPosReport") {\n      $root.dialog({\n        modal: true,\n        width: "auto",\n        closeText: VIS.Msg.getMsg("close"),\n        close: function () {\n          if (self.parent) self.parent.onProcessDialogClosed(self.isOkClicked, self.parameterList);\n          self.dispose();\n          self = null;\n        }\n      });\n      window.setTimeout(function () {\n        $btnClose.focus();\n      }, 200);\n    };\n    this.getRoot = function () {\n      var selff = this;\n      return $root;\n    };\n    this.onClose = function (isOkClicked) {\n      self.isOkClicked = isOkClicked;\n      $root.dialog(\'close\');\n    };\n\n    /* Events */\n    $btnClose.on(VIS.Events.onTouchStartAndClick, function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      self.onClose(false);\n    });\n    $btnOK.on(VIS.Events.onTouchStartAndClick, function (e) {\n      if (splitUI) {\n        self.isOkClicked = true;\n        parent.setBusy(true);\n        var list = self.saveParameters();\n        if (!list) {\n          parent.setBusy(false);\n          return;\n        }\n        self.pi.setAD_PInstance_ID(0);\n        self.pi.setPageNo(1);\n        if (!self.parent.getFileType()) {\n          self.pi.setFileType(VIS.ProcessCtl.prototype.REPORT_TYPE_PDF);\n        } else {\n          self.pi.setFileType(self.parent.getFileType());\n        }\n        self.pi.setIsBackground(self.parent.isBackground());\n        self.parameterList = list;\n        self.parent.onProcessDialogClosed(self.isOkClicked, self.parameterList);\n      } else {\n        e.stopPropagation();\n        e.preventDefault();\n        var list = self.saveParameters();\n        if (!list) {\n          return;\n        }\n        self.parameterList = list;\n        self.onClose(true, list);\n      }\n    });\n    this.setHeights = function () {\n      //var wrapperHeight = $root.find(\'.vis-process-outer-main-wrap\').height();// $root.closest(\'.vis-process-outer-main-wrap\').height();\n      //$root.height((wrapperHeight - 84) + \'px\');\n    };\n    this.disposeComponent = function () {\n      $btnClose.off(VIS.Events.onTouchStartOrClick);\n      $btnOK.off(VIS.Events.onTouchStartOrClick);\n      $root.dialog(\'destroy\');\n      $root.remove();\n      self = null;\n      this.gridFields.length = 0;\n      this.gridFields = null;\n      this.depOnFieldColumn.length = 0;\n      this.depOnFieldColumn - null;\n      this.depOnField.length = 0;\n      this.depOnField = null;\n      this.vEditors.length = 0;\n      this.vEditors2.length = 0;\n      this.mFields.length = 0;\n      this.mFields2.length = 0;\n\n      //this.pi = null;\n      this.parent = null;\n      this.parameterList = null;\n      this.pi = null;\n      this.addLine = null;\n      this.addFields = null;\n      this.addButtons = null;\n      this.showDialog = null;\n      this.onClose = null;\n      this.isOkClicked = null;\n      $root = $table = $tr = $td1 = $td2 = $td3 = $btnOK = $btnClose = null;\n      ;\n    };\n  }\n  ;\n\n  /**\r\n  *\tRead and Create Fields to display\r\n  *\t- creates Fields and adds it mFields list\r\n  *  - creates Editor and adds it to vEditors list\r\n  *  Handeles Ranges by adding additional mField/vEditor.\r\n  *  <p>\r\n  *  mFields are used for default value and mandatory checking;\r\n  *  vEditors are used to retrieve the value (no data binding)\r\n  *  @param {array object}  fields\r\n  *  @return true if loaded OK\r\n  */\n  ProcessParameter.prototype.initDialog = function (fields) {\n    var mField = null;\n    for (var i = 0, len = fields.length; i < len; i++) {\n      mField = new VIS.GridField(fields[i]);\n      this.addLine(); // add new line\n      this.mFields.push(mField);\n      var list = mField.getDependentOn(false); //dependents file\n\n      for (var j = 0; j < list.length; j++) {\n        this.depOnField.push(mField); // ColumnName, Field\n        this.depOnFieldColumn.push(list[j]);\n      }\n      var label = VIS.VControlFactory.getLabel(mField); //get label\n      //\tThe Editor\n      var vEditor = VIS.VControlFactory.getControl(null, mField, false); //get control\n      if (vEditor) {\n        var defaultValue = mField.getDefault(VIS.context, this.windowNo);\n        vEditor.setValue(defaultValue);\n        vEditor.addVetoableChangeListener(this);\n        if (mField.getDisplayType() == VIS.DisplayType.AmtDimension) {\n          vEditor.hideButton(false);\n          vEditor.setReadOnlyTextbox(false);\n          vEditor.getControl().css("width", "100%");\n        }\n      }\n      //  GridField => VEditor - New Field value to be updated to editor\n      mField.setPropertyChangeListener(vEditor);\n      //\n\n      this.vEditors.push(vEditor); //  add to Editors\n      this.addFields(label, vEditor);\n      if (i == 0 && vEditor) {\n        vEditor.setDefaultFocus(true);\n      }\n      if (mField.getIsRange()) {\n        this.addLine(); // add new line\n        var vof2 = {};\n        $.extend(true, vof2, fields[i]);\n        var mField2 = new VIS.GridField(vof2);\n        this.mFields2.push(mField2);\n        //\tThe Editor\n        var vEditor2 = VIS.VControlFactory.getControl(null, mField2, false);\n        //  New Field value to be updated to editor\n        if (vEditor2) {\n          var defaultValue = mField2.getDefault2(VIS.context, this.windowNo);\n          vEditor2.setValue(defaultValue);\n          vEditor2.addVetoableChangeListener(this);\n          if (mField.getDisplayType() == VIS.DisplayType.AmtDimension) {\n            vEditor2.hideButton(false);\n            vEditor2.setReadOnlyTextbox(false);\n            vEditor2.getControl().css("width", "100%");\n          }\n        }\n        //\n        this.vEditors2.push(vEditor2);\n        this.addFields(null, vEditor2);\n      } else {\n        this.mFields2.push(null);\n        this.vEditors2.push(null);\n      }\n    }\n    this.addButtons();\n    return true;\n  };\n\n  /**\r\n  *\tEditor Listener\r\n  *\t@param {object} evt Event\r\n  */\n  ProcessParameter.prototype.vetoablechange = function (evt) {\n    console.log(evt);\n    var value = evt.newValue == null ? "" : evt.newValue.toString();\n    var columnName = evt.propertyName;\n    for (var i = 0; i < this.mFields.length; i++) {\n      if (this.mFields[i].getColumnName().toLower() == columnName.toLower()) {\n        var comp = this.vEditors[i];\n        if (comp instanceof VIS.Controls.IControl) {\n          var rw = this.mFields[i].getIsEditable(true);\n          comp.setReadOnly(rw);\n        }\n        if (this.mFields[i].getDisplayType() == VIS.DisplayType.YesNo) {\n          if (value.toString() == "Y" || value.toString() == "N") {\n            VIS.Env.getCtx().setWindowContext(this.windowNo, columnName, value.toString());\n          } else {\n            VIS.Env.getCtx().setWindowContext(this.windowNo, columnName, value.toString().toLowerCase() == "true" ? "Y" : "N");\n          }\n          break;\n        } else {\n          VIS.Env.getCtx().setWindowContext(this.windowNo, columnName, value);\n          break;\n        }\n      }\n    }\n    if (this.depOnFieldColumn.indexOf(columnName) !== -1) {\n      var dependentFields = this.getDependantFields(columnName);\n      for (var i = 0, len = dependentFields.length; i < len; i++) {\n        var dep = dependentFields[i];\n        if (dep == null) continue;\n\n        // If M_Product_ID and M_Locator_ID is used as parameter in same report, \n        //then on change M_product_ID system clears value of M_Locator_ID, bcoz M_Locator is depednet on M_Product.\n        // then in this case we will not refresh lookup of Locator.\n        if (columnName == "M_Product_ID" && (dep.getColumnName() == "M_Locator_ID" || dep.getColumnName() == "M_LocatorTo_ID")) {\n          continue;\n        } else {\n          var nValue = dep.getDefault(VIS.Env.getCtx(), this.windowNo);\n          if (nValue == null) {\n            for (var a = 0; a < this.vEditors.length; a++) {\n              if (this.vEditors[a].colName == dep.getColumnName()) {\n                this.vEditors[a].ctrl[0].selectedIndex = -1;\n                break;\n              }\n            }\n          }\n          dep.refreshLookup();\n          dep.setValue(nValue, true);\n        }\n      }\n    }\n  };\n\n  /**\r\n    get dependent fields against column\r\n    @method getDependantFields\r\n    @param {string} columnName\r\n    @return array of GridFeild objects \r\n  */\n  ProcessParameter.prototype.getDependantFields = function (columnName) {\n    var list = [];\n    if (this.depOnFieldColumn.indexOf(columnName) != -1) {\n      var size = this.depOnFieldColumn.length;\n      for (var i = 0; i < size; i++) {\n        if (this.depOnFieldColumn[i].equals(columnName)) if (list.indexOf(this.depOnField[i]) < 0) list.push(this.depOnField[i]);\n      }\n    }\n    return list;\n  };\n\n  /**\r\n  * Save Parameter values\r\n  * @return true if parameters saved\r\n  */\n  ProcessParameter.prototype.saveParameters = function () {\n    //Mandatory Fields\n    var sb = new StringBuilder();\n    var size = this.mFields.length;\n    var i = 0;\n    for (i = 0; i < size; i++) {\n      var field = this.mFields[i];\n      if (field.getIsMandatory(true)) {\n        //  check context\n        var vEditor = this.vEditors[i];\n        var data = vEditor.getValue();\n        if (data == null || data.toString().length == 0) {\n          field.setInserting(true); //  set editable (i.e. updateable) otherwise deadlock\n          field.setError(true);\n          if (sb.length() > 0) sb.append(", ");\n          sb.append(field.getHeader());\n        } else field.setError(false);\n        //  Check for Range\n        var vEditor2 = this.vEditors2[i];\n        if (vEditor2 != null) {\n          var data2 = vEditor2.getValue();\n          var field2 = this.mFields2[i];\n          if (data2 == null || data2.toString().length == 0) {\n            field.setInserting(true); //  set editable (i.e. updateable) otherwise deadlock\n            field2.setError(true);\n            if (sb.length() > 0) sb.append(", ");\n            sb.append(field.getHeader());\n          } else field2.setError(false);\n        } //  range field\n      } //  mandatory\n    } //  field loop\n    if (sb.length() != 0) {\n      VIS.ADialog.error("FillMandatory", true, sb.toString());\n      //alert("FillMandatory", sb.toString());\n      return false;\n    }\n\n    /**********************************************************************\r\n    *\tSave Now\r\n    */\n\n    var parameterList = [];\n    var para = {};\n    for (i = 0; i < size; i++) {\n      //\tGet Values\n      var editor = this.vEditors[i];\n      var editor2 = this.vEditors2[i];\n      var result = editor.getValue();\n      if (editor.getDisplayType() == VIS.DisplayType.AmtDimension) {\n        result = editor.getText();\n      }\n      var result2 = null;\n      if (editor2 != null) {\n        result2 = editor2.getValue();\n        if (editor2.getDisplayType() == VIS.DisplayType.AmtDimension) {\n          result = editor2.getText();\n        }\n      }\n\n      //\tDon\'t save NULL values\n      if ((result === null || result === "") && (result2 === null || result2 === "")) continue;\n\n      //\tCreate Parameter\n      para = {};\n\n      //MPInstancePara para = new MPInstancePara (Env.getCtx(), m_processInfo.getAD_PInstance_ID(), i);\n      var mField = this.mFields[i];\n      para.Name = mField.getColumnName();\n      para.DisplayType = mField.getDisplayType();\n      para.Result = result;\n      para.Result2 = result2;\n      para.LoadRecursiveData = mField.getLoadRecursiveData();\n      para.ShowChildOfSelected = mField.getShowChildOfSelected();\n      para.AD_Column_ID = mField.getAD_Column_ID();\n      ////\tDate\n      //if ((result instanceof Timestamp) || (result2 instanceof Timestamp))\n      //{\n      //    para.setP_Date((Timestamp)result);\n      //    if ((editor2 != null) && (result2 != null))\n      //        para.setP_Date_To((Timestamp)result2);\n      //}\n      //    //\tInteger\n      //else if ((result instanceof Integer) || (result2 instanceof Integer))\n      //{\n      //    if (result != null)\n      //    {\n      //        Integer ii = (Integer)result;\n      //        para.setP_Number(ii.intValue());\n      //    }\n      //    if ((editor2 != null) && (result2 != null))\n      //    {\n      //        Integer ii = (Integer)result2;\n      //        para.setP_Number_To(ii.intValue());\n      //    }\n      //}\n      //    //\tBigDecimal\n      //else if ((result instanceof BigDecimal) || (result2 instanceof BigDecimal))\n      //{\n      //    para.setP_Number ((BigDecimal)result);\n      //    if ((editor2 != null) && (result2 != null))\n      //        para.setP_Number_To ((BigDecimal)result2);\n      //}\n      //    //\tBoolean\n      //else if (result instanceof Boolean)\n      //{\n      //    Boolean bb = (Boolean)result;\n      //    String value = bb.booleanValue() ? "Y" : "N";\n      //    para.setP_String (value);\n      //    //\tto does not make sense\n      //}\n      //\tString\n      //else\n      //{\n      //    if (result != null)\n      //        para.setP_String (result.toString());\n      //    if ((editor2 != null) && (result2 != null))\n      //        para.setP_String_To (result2.toString());\n      //}\n\n      //  Info\n      para.Info = editor.getDisplay();\n      if (editor.getDisplayType() == VIS.DisplayType.MultiKey) {\n        para.Info = editor.lastDisplay;\n      }\n      if (editor2 != null) para.Info_To = editor2.getDisplay();\n      parameterList.push(para);\n    }\n    return parameterList;\n  };\n\n  /**\r\n       clean up\r\n       @method dispose\r\n  */\n  ProcessParameter.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  // Global Assignment\n  VIS.ProcessParameter = ProcessParameter;\n})(VIS, jQuery);\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/processengine/processparameter.js?')},"./Areas/VIS/Scripts/src/VISjs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _app_native_extension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app/native-extension.js */ "./Areas/VIS/Scripts/app/native-extension.js");\n/* harmony import */ var _app_native_extension_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_app_native_extension_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app/utility.js */ "./Areas/VIS/Scripts/app/utility.js");\n/* harmony import */ var _app_utility_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_app_utility_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _app_logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app/logger.js */ "./Areas/VIS/Scripts/app/logger.js");\n/* harmony import */ var _app_logger_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_app_logger_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _app_controls_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../app/controls.js */ "./Areas/VIS/Scripts/app/controls.js");\n/* harmony import */ var _app_controls_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_app_controls_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _app_classes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../app/classes.js */ "./Areas/VIS/Scripts/app/classes.js");\n/* harmony import */ var _app_classes_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_app_classes_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _app_desktopmgr_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app/desktopmgr.js */ "./Areas/VIS/Scripts/app/desktopmgr.js");\n/* harmony import */ var _app_desktopmgr_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_app_desktopmgr_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _app_viewmanager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../app/viewmanager.js */ "./Areas/VIS/Scripts/app/viewmanager.js");\n/* harmony import */ var _app_viewmanager_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_app_viewmanager_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _app_context_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app/context.js */ "./Areas/VIS/Scripts/app/context.js");\n/* harmony import */ var _app_context_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_app_context_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _app_i18N_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../app/i18N.js */ "./Areas/VIS/Scripts/app/i18N.js");\n/* harmony import */ var _app_i18N_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_app_i18N_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _app_role_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../app/role.js */ "./Areas/VIS/Scripts/app/role.js");\n/* harmony import */ var _app_role_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_app_role_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _app_adialog_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../app/adialog.js */ "./Areas/VIS/Scripts/app/adialog.js");\n/* harmony import */ var _app_adialog_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_app_adialog_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _app_lookup_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../app/lookup.js */ "./Areas/VIS/Scripts/app/lookup.js");\n/* harmony import */ var _app_lookup_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_app_lookup_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _app_treepanel_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../app/treepanel.js */ "./Areas/VIS/Scripts/app/treepanel.js");\n/* harmony import */ var _app_treepanel_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_app_treepanel_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _app_controller_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../app/controller.js */ "./Areas/VIS/Scripts/app/controller.js");\n/* harmony import */ var _app_controller_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_app_controller_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _app_formframe_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../app/formframe.js */ "./Areas/VIS/Scripts/app/formframe.js");\n/* harmony import */ var _app_formframe_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_app_formframe_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _app_processframe_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../app/processframe.js */ "./Areas/VIS/Scripts/app/processframe.js");\n/* harmony import */ var _app_processframe_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_app_processframe_js__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _processengine_processctl_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../processengine/processctl.js */ "./Areas/VIS/Scripts/processengine/processctl.js");\n/* harmony import */ var _processengine_processctl_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_processengine_processctl_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _processengine_processinfo_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../processengine/processinfo.js */ "./Areas/VIS/Scripts/processengine/processinfo.js");\n/* harmony import */ var _processengine_processinfo_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_processengine_processinfo_js__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _processengine_processparameter_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../processengine/processparameter.js */ "./Areas/VIS/Scripts/processengine/processparameter.js");\n/* harmony import */ var _processengine_processparameter_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_processengine_processparameter_js__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _app_datacontext_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../app/datacontext.js */ "./Areas/VIS/Scripts/app/datacontext.js");\n/* harmony import */ var _app_datacontext_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_app_datacontext_js__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _app_calloutengine_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../app/calloutengine.js */ "./Areas/VIS/Scripts/app/calloutengine.js");\n/* harmony import */ var _app_calloutengine_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_app_calloutengine_js__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _home_home_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../home/home.js */ "./Areas/VIS/Scripts/home/home.js");\n/* harmony import */ var _home_home_js__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_home_home_js__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var _home_changeuserimage_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../home/changeuserimage.js */ "./Areas/VIS/Scripts/home/changeuserimage.js");\n/* harmony import */ var _home_changeuserimage_js__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_home_changeuserimage_js__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _home_shortcut_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../home/shortcut.js */ "./Areas/VIS/Scripts/home/shortcut.js");\n/* harmony import */ var _home_shortcut_js__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_home_shortcut_js__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _app_historymgr_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../app/historymgr.js */ "./Areas/VIS/Scripts/app/historymgr.js");\n/* harmony import */ var _app_historymgr_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_app_historymgr_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var _app_secure_engine_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../app/secure-engine.js */ "./Areas/VIS/Scripts/app/secure-engine.js");\n/* harmony import */ var _app_secure_engine_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_app_secure_engine_js__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var _app_Framework_userpreference_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../app/Framework/userpreference.js */ "./Areas/VIS/Scripts/app/Framework/userpreference.js");\n/* harmony import */ var _app_Framework_userpreference_js__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_userpreference_js__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var _app_Framework_vimageform_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../app/Framework/vimageform.js */ "./Areas/VIS/Scripts/app/Framework/vimageform.js");\n/* harmony import */ var _app_Framework_vimageform_js__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_vimageform_js__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony import */ var _app_Framework_ini_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../app/Framework/ini.js */ "./Areas/VIS/Scripts/app/Framework/ini.js");\n/* harmony import */ var _app_Framework_ini_js__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_ini_js__WEBPACK_IMPORTED_MODULE_28__);\n/* harmony import */ var _app_Framework_locationform_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../app/Framework/locationform.js */ "./Areas/VIS/Scripts/app/Framework/locationform.js");\n/* harmony import */ var _app_Framework_locationform_js__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_locationform_js__WEBPACK_IMPORTED_MODULE_29__);\n/* harmony import */ var _app_Framework_locatorform_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../app/Framework/locatorform.js */ "./Areas/VIS/Scripts/app/Framework/locatorform.js");\n/* harmony import */ var _app_Framework_locatorform_js__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_locatorform_js__WEBPACK_IMPORTED_MODULE_30__);\n/* harmony import */ var _app_Framework_valuepreference_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../app/Framework/valuepreference.js */ "./Areas/VIS/Scripts/app/Framework/valuepreference.js");\n/* harmony import */ var _app_Framework_valuepreference_js__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_valuepreference_js__WEBPACK_IMPORTED_MODULE_31__);\n/* harmony import */ var _app_Framework_pattributesform_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../app/Framework/pattributesform.js */ "./Areas/VIS/Scripts/app/Framework/pattributesform.js");\n/* harmony import */ var _app_Framework_pattributesform_js__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_pattributesform_js__WEBPACK_IMPORTED_MODULE_32__);\n/* harmony import */ var _app_Framework_pattributeinstance_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../app/Framework/pattributeinstance.js */ "./Areas/VIS/Scripts/app/Framework/pattributeinstance.js");\n/* harmony import */ var _app_Framework_pattributeinstance_js__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_pattributeinstance_js__WEBPACK_IMPORTED_MODULE_33__);\n/* harmony import */ var _app_Framework_genralattributeform_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../app/Framework/genralattributeform.js */ "./Areas/VIS/Scripts/app/Framework/genralattributeform.js");\n/* harmony import */ var _app_Framework_genralattributeform_js__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_genralattributeform_js__WEBPACK_IMPORTED_MODULE_34__);\n/* harmony import */ var _app_Framework_accountform_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../app/Framework/accountform.js */ "./Areas/VIS/Scripts/app/Framework/accountform.js");\n/* harmony import */ var _app_Framework_accountform_js__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_accountform_js__WEBPACK_IMPORTED_MODULE_35__);\n/* harmony import */ var _app_Framework_archiveviewer_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../app/Framework/archiveviewer.js */ "./Areas/VIS/Scripts/app/Framework/archiveviewer.js");\n/* harmony import */ var _app_Framework_archiveviewer_js__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_archiveviewer_js__WEBPACK_IMPORTED_MODULE_36__);\n/* harmony import */ var _app_child_dialog_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../app/child-dialog.js */ "./Areas/VIS/Scripts/app/child-dialog.js");\n/* harmony import */ var _app_child_dialog_js__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_app_child_dialog_js__WEBPACK_IMPORTED_MODULE_37__);\n/* harmony import */ var _app_Framework_chat_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../app/Framework/chat.js */ "./Areas/VIS/Scripts/app/Framework/chat.js");\n/* harmony import */ var _app_Framework_chat_js__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_chat_js__WEBPACK_IMPORTED_MODULE_38__);\n/* harmony import */ var _app_Framework_recordShared_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../app/Framework/recordShared.js */ "./Areas/VIS/Scripts/app/Framework/recordShared.js");\n/* harmony import */ var _app_Framework_recordShared_js__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_recordShared_js__WEBPACK_IMPORTED_MODULE_39__);\n/* harmony import */ var _app_Framework_infomenu_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../app/Framework/infomenu.js */ "./Areas/VIS/Scripts/app/Framework/infomenu.js");\n/* harmony import */ var _app_Framework_infomenu_js__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_infomenu_js__WEBPACK_IMPORTED_MODULE_40__);\n/* harmony import */ var _app_Framework_infowindow_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../app/Framework/infowindow.js */ "./Areas/VIS/Scripts/app/Framework/infowindow.js");\n/* harmony import */ var _app_Framework_infowindow_js__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_infowindow_js__WEBPACK_IMPORTED_MODULE_41__);\n/* harmony import */ var _app_Framework_amountdivision_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../app/Framework/amountdivision.js */ "./Areas/VIS/Scripts/app/Framework/amountdivision.js");\n/* harmony import */ var _app_Framework_amountdivision_js__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_amountdivision_js__WEBPACK_IMPORTED_MODULE_42__);\n/* harmony import */ var _app_Framework_UploadAmountDimension_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../app/Framework/UploadAmountDimension.js */ "./Areas/VIS/Scripts/app/Framework/UploadAmountDimension.js");\n/* harmony import */ var _app_Framework_UploadAmountDimension_js__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_UploadAmountDimension_js__WEBPACK_IMPORTED_MODULE_43__);\n/* harmony import */ var _app_Framework_infogeneral_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../app/Framework/infogeneral.js */ "./Areas/VIS/Scripts/app/Framework/infogeneral.js");\n/* harmony import */ var _app_Framework_infogeneral_js__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_infogeneral_js__WEBPACK_IMPORTED_MODULE_44__);\n/* harmony import */ var _app_Framework_infoproduct_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../app/Framework/infoproduct.js */ "./Areas/VIS/Scripts/app/Framework/infoproduct.js");\n/* harmony import */ var _app_Framework_infoproduct_js__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_infoproduct_js__WEBPACK_IMPORTED_MODULE_45__);\n/* harmony import */ var _app_Framework_infoscanform_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../app/Framework/infoscanform.js */ "./Areas/VIS/Scripts/app/Framework/infoscanform.js");\n/* harmony import */ var _app_Framework_infoscanform_js__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_infoscanform_js__WEBPACK_IMPORTED_MODULE_46__);\n/* harmony import */ var _app_Framework_attachmentform_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../app/Framework/attachmentform.js */ "./Areas/VIS/Scripts/app/Framework/attachmentform.js");\n/* harmony import */ var _app_Framework_attachmentform_js__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_attachmentform_js__WEBPACK_IMPORTED_MODULE_47__);\n/* harmony import */ var _app_Framework_help_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../app/Framework/help.js */ "./Areas/VIS/Scripts/app/Framework/help.js");\n/* harmony import */ var _app_Framework_help_js__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_help_js__WEBPACK_IMPORTED_MODULE_48__);\n/* harmony import */ var _app_Framework_wfactivity_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../app/Framework/wfactivity.js */ "./Areas/VIS/Scripts/app/Framework/wfactivity.js");\n/* harmony import */ var _app_Framework_wfactivity_js__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_wfactivity_js__WEBPACK_IMPORTED_MODULE_49__);\n/* harmony import */ var _app_Framework_vdocaction_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../app/Framework/vdocaction.js */ "./Areas/VIS/Scripts/app/Framework/vdocaction.js");\n/* harmony import */ var _app_Framework_vdocaction_js__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_vdocaction_js__WEBPACK_IMPORTED_MODULE_50__);\n/* harmony import */ var _app_Framework_appointments_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../app/Framework/appointments.js */ "./Areas/VIS/Scripts/app/Framework/appointments.js");\n/* harmony import */ var _app_Framework_appointments_js__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_appointments_js__WEBPACK_IMPORTED_MODULE_51__);\n/* harmony import */ var _app_Framework_vpayment_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../app/Framework/vpayment.js */ "./Areas/VIS/Scripts/app/Framework/vpayment.js");\n/* harmony import */ var _app_Framework_vpayment_js__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_vpayment_js__WEBPACK_IMPORTED_MODULE_52__);\n/* harmony import */ var _app_Framework_addnewproduct_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../app/Framework/addnewproduct.js */ "./Areas/VIS/Scripts/app/Framework/addnewproduct.js");\n/* harmony import */ var _app_Framework_addnewproduct_js__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_addnewproduct_js__WEBPACK_IMPORTED_MODULE_53__);\n/* harmony import */ var _app_Framework_batchUpdate_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../app/Framework/batchUpdate.js */ "./Areas/VIS/Scripts/app/Framework/batchUpdate.js");\n/* harmony import */ var _app_Framework_batchUpdate_js__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_batchUpdate_js__WEBPACK_IMPORTED_MODULE_54__);\n/* harmony import */ var _app_forms_generatexmodel_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../app/forms/generatexmodel.js */ "./Areas/VIS/Scripts/app/forms/generatexmodel.js");\n/* harmony import */ var _app_forms_generatexmodel_js__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_app_forms_generatexmodel_js__WEBPACK_IMPORTED_MODULE_55__);\n/* harmony import */ var _app_Framework_find_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../app/Framework/find.js */ "./Areas/VIS/Scripts/app/Framework/find.js");\n/* harmony import */ var _app_Framework_find_js__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_find_js__WEBPACK_IMPORTED_MODULE_56__);\n/* harmony import */ var _app_azoomacross_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../app/azoomacross.js */ "./Areas/VIS/Scripts/app/azoomacross.js");\n/* harmony import */ var _app_azoomacross_js__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(_app_azoomacross_js__WEBPACK_IMPORTED_MODULE_57__);\n/* harmony import */ var _app_Framework_sms_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../app/Framework/sms.js */ "./Areas/VIS/Scripts/app/Framework/sms.js");\n/* harmony import */ var _app_Framework_sms_js__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_sms_js__WEBPACK_IMPORTED_MODULE_58__);\n/* harmony import */ var _app_arequest_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../app/arequest.js */ "./Areas/VIS/Scripts/app/arequest.js");\n/* harmony import */ var _app_arequest_js__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(_app_arequest_js__WEBPACK_IMPORTED_MODULE_59__);\n/* harmony import */ var _app_Framework_vsetup_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../app/Framework/vsetup.js */ "./Areas/VIS/Scripts/app/Framework/vsetup.js");\n/* harmony import */ var _app_Framework_vsetup_js__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_vsetup_js__WEBPACK_IMPORTED_MODULE_60__);\n/* harmony import */ var _home_favourite_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../home/favourite.js */ "./Areas/VIS/Scripts/home/favourite.js");\n/* harmony import */ var _home_favourite_js__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(_home_favourite_js__WEBPACK_IMPORTED_MODULE_61__);\n/* harmony import */ var _app_Framework_bpartner_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../app/Framework/bpartner.js */ "./Areas/VIS/Scripts/app/Framework/bpartner.js");\n/* harmony import */ var _app_Framework_bpartner_js__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_bpartner_js__WEBPACK_IMPORTED_MODULE_62__);\n/* harmony import */ var _app_Framework_contactInfo_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../app/Framework/contactInfo.js */ "./Areas/VIS/Scripts/app/Framework/contactInfo.js");\n/* harmony import */ var _app_Framework_contactInfo_js__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_contactInfo_js__WEBPACK_IMPORTED_MODULE_63__);\n/* harmony import */ var _app_favouritehelper_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../app/favouritehelper.js */ "./Areas/VIS/Scripts/app/favouritehelper.js");\n/* harmony import */ var _app_favouritehelper_js__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__webpack_require__.n(_app_favouritehelper_js__WEBPACK_IMPORTED_MODULE_64__);\n/* harmony import */ var _app_Framework_email_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../app/Framework/email.js */ "./Areas/VIS/Scripts/app/Framework/email.js");\n/* harmony import */ var _app_Framework_email_js__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_email_js__WEBPACK_IMPORTED_MODULE_65__);\n/* harmony import */ var _app_Framework_newmailformat_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../app/Framework/newmailformat.js */ "./Areas/VIS/Scripts/app/Framework/newmailformat.js");\n/* harmony import */ var _app_Framework_newmailformat_js__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_newmailformat_js__WEBPACK_IMPORTED_MODULE_66__);\n/* harmony import */ var _app_Framework_openmailformats_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../app/Framework/openmailformats.js */ "./Areas/VIS/Scripts/app/Framework/openmailformats.js");\n/* harmony import */ var _app_Framework_openmailformats_js__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_openmailformats_js__WEBPACK_IMPORTED_MODULE_67__);\n/* harmony import */ var _app_areport_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../app/areport.js */ "./Areas/VIS/Scripts/app/areport.js");\n/* harmony import */ var _app_areport_js__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__webpack_require__.n(_app_areport_js__WEBPACK_IMPORTED_MODULE_68__);\n/* harmony import */ var _app_Framework_attachmentHistory_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../app/Framework/attachmentHistory.js */ "./Areas/VIS/Scripts/app/Framework/attachmentHistory.js");\n/* harmony import */ var _app_Framework_attachmentHistory_js__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_attachmentHistory_js__WEBPACK_IMPORTED_MODULE_69__);\n/* harmony import */ var _app_Framework_recordaccessdialog_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../app/Framework/recordaccessdialog.js */ "./Areas/VIS/Scripts/app/Framework/recordaccessdialog.js");\n/* harmony import */ var _app_Framework_recordaccessdialog_js__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_recordaccessdialog_js__WEBPACK_IMPORTED_MODULE_70__);\n/* harmony import */ var _app_grouprights_group_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../app/grouprights/group.js */ "./Areas/VIS/Scripts/app/grouprights/group.js");\n/* harmony import */ var _app_grouprights_group_js__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__webpack_require__.n(_app_grouprights_group_js__WEBPACK_IMPORTED_MODULE_71__);\n/* harmony import */ var _app_grouprights_createuser_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../app/grouprights/createuser.js */ "./Areas/VIS/Scripts/app/grouprights/createuser.js");\n/* harmony import */ var _app_grouprights_createuser_js__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(_app_grouprights_createuser_js__WEBPACK_IMPORTED_MODULE_72__);\n/* harmony import */ var _app_grouprights_orgaccess_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../app/grouprights/orgaccess.js */ "./Areas/VIS/Scripts/app/grouprights/orgaccess.js");\n/* harmony import */ var _app_grouprights_orgaccess_js__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__webpack_require__.n(_app_grouprights_orgaccess_js__WEBPACK_IMPORTED_MODULE_73__);\n/* harmony import */ var _app_grouprights_groupinfo_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../app/grouprights/groupinfo.js */ "./Areas/VIS/Scripts/app/grouprights/groupinfo.js");\n/* harmony import */ var _app_grouprights_groupinfo_js__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__webpack_require__.n(_app_grouprights_groupinfo_js__WEBPACK_IMPORTED_MODULE_74__);\n/* harmony import */ var _app_grouprights_createrole_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../app/grouprights/createrole.js */ "./Areas/VIS/Scripts/app/grouprights/createrole.js");\n/* harmony import */ var _app_grouprights_createrole_js__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__webpack_require__.n(_app_grouprights_createrole_js__WEBPACK_IMPORTED_MODULE_75__);\n/* harmony import */ var _app_Framework_markmodule_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../app/Framework/markmodule.js */ "./Areas/VIS/Scripts/app/Framework/markmodule.js");\n/* harmony import */ var _app_Framework_markmodule_js__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_markmodule_js__WEBPACK_IMPORTED_MODULE_76__);\n/* harmony import */ var _app_Framework_cardviewdialog_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../app/Framework/cardviewdialog.js */ "./Areas/VIS/Scripts/app/Framework/cardviewdialog.js");\n/* harmony import */ var _app_Framework_cardviewdialog_js__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_cardviewdialog_js__WEBPACK_IMPORTED_MODULE_77__);\n/* harmony import */ var _app_Framework_cardTemplateMaster_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../app/Framework/cardTemplateMaster.js */ "./Areas/VIS/Scripts/app/Framework/cardTemplateMaster.js");\n/* harmony import */ var _app_Framework_cardTemplateMaster_js__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_cardTemplateMaster_js__WEBPACK_IMPORTED_MODULE_78__);\n/* harmony import */ var _app_Framework_visimportfiles_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../app/Framework/visimportfiles.js */ "./Areas/VIS/Scripts/app/Framework/visimportfiles.js");\n/* harmony import */ var _app_Framework_visimportfiles_js__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_visimportfiles_js__WEBPACK_IMPORTED_MODULE_79__);\n/* harmony import */ var _app_Framework_parameterdialog_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../app/Framework/parameterdialog.js */ "./Areas/VIS/Scripts/app/Framework/parameterdialog.js");\n/* harmony import */ var _app_Framework_parameterdialog_js__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_parameterdialog_js__WEBPACK_IMPORTED_MODULE_80__);\n/* harmony import */ var _app_processwrapper_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../app/processwrapper.js */ "./Areas/VIS/Scripts/app/processwrapper.js");\n/* harmony import */ var _app_processwrapper_js__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__webpack_require__.n(_app_processwrapper_js__WEBPACK_IMPORTED_MODULE_81__);\n/* harmony import */ var _app_Framework_treemaintenance_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../app/Framework/treemaintenance.js */ "./Areas/VIS/Scripts/app/Framework/treemaintenance.js");\n/* harmony import */ var _app_Framework_treemaintenance_js__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_treemaintenance_js__WEBPACK_IMPORTED_MODULE_82__);\n/* harmony import */ var _app_Framework_jquery_touch_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../app/Framework/jquery-touch.js */ "./Areas/VIS/Scripts/app/Framework/jquery-touch.js");\n/* harmony import */ var _app_Framework_jquery_touch_js__WEBPACK_IMPORTED_MODULE_83___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_jquery_touch_js__WEBPACK_IMPORTED_MODULE_83__);\n/* harmony import */ var _app_Framework_bulkdownload_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../app/Framework/bulkdownload.js */ "./Areas/VIS/Scripts/app/Framework/bulkdownload.js");\n/* harmony import */ var _app_Framework_bulkdownload_js__WEBPACK_IMPORTED_MODULE_84___default = /*#__PURE__*/__webpack_require__.n(_app_Framework_bulkdownload_js__WEBPACK_IMPORTED_MODULE_84__);\n/* harmony import */ var _app_forms_productContainer_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../app/forms/productContainer.js */ "./Areas/VIS/Scripts/app/forms/productContainer.js");\n/* harmony import */ var _app_forms_productContainer_js__WEBPACK_IMPORTED_MODULE_85___default = /*#__PURE__*/__webpack_require__.n(_app_forms_productContainer_js__WEBPACK_IMPORTED_MODULE_85__);\n/* harmony import */ var _app_forms_productContainerMove_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../app/forms/productContainerMove.js */ "./Areas/VIS/Scripts/app/forms/productContainerMove.js");\n/* harmony import */ var _app_forms_productContainerMove_js__WEBPACK_IMPORTED_MODULE_86___default = /*#__PURE__*/__webpack_require__.n(_app_forms_productContainerMove_js__WEBPACK_IMPORTED_MODULE_86__);\n/* harmony import */ var _app_forms_productContainerTree_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../app/forms/productContainerTree.js */ "./Areas/VIS/Scripts/app/forms/productContainerTree.js");\n/* harmony import */ var _app_forms_productContainerTree_js__WEBPACK_IMPORTED_MODULE_87___default = /*#__PURE__*/__webpack_require__.n(_app_forms_productContainerTree_js__WEBPACK_IMPORTED_MODULE_87__);\n/* harmony import */ var _app_windowformcontainer_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../app/windowformcontainer.js */ "./Areas/VIS/Scripts/app/windowformcontainer.js");\n/* harmony import */ var _app_windowformcontainer_js__WEBPACK_IMPORTED_MODULE_88___default = /*#__PURE__*/__webpack_require__.n(_app_windowformcontainer_js__WEBPACK_IMPORTED_MODULE_88__);\n/* harmony import */ var _app_masterdataversion_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../app/masterdataversion.js */ "./Areas/VIS/Scripts/app/masterdataversion.js");\n/* harmony import */ var _app_masterdataversion_js__WEBPACK_IMPORTED_MODULE_89___default = /*#__PURE__*/__webpack_require__.n(_app_masterdataversion_js__WEBPACK_IMPORTED_MODULE_89__);\n/* harmony import */ var _tabpanels_bipanel_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../tabpanels/bipanel.js */ "./Areas/VIS/Scripts/tabpanels/bipanel.js");\n/* harmony import */ var _tabpanels_bipanel_js__WEBPACK_IMPORTED_MODULE_90___default = /*#__PURE__*/__webpack_require__.n(_tabpanels_bipanel_js__WEBPACK_IMPORTED_MODULE_90__);\n/* harmony import */ var _model_CalloutColumn_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../model/CalloutColumn.js */ "./Areas/VIS/Scripts/model/CalloutColumn.js");\n/* harmony import */ var _model_CalloutColumn_js__WEBPACK_IMPORTED_MODULE_91___default = /*#__PURE__*/__webpack_require__.n(_model_CalloutColumn_js__WEBPACK_IMPORTED_MODULE_91__);\n/* harmony import */ var _app_ssemanager_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../app/ssemanager.js */ "./Areas/VIS/Scripts/app/ssemanager.js");\n/* harmony import */ var _app_ssemanager_js__WEBPACK_IMPORTED_MODULE_92___default = /*#__PURE__*/__webpack_require__.n(_app_ssemanager_js__WEBPACK_IMPORTED_MODULE_92__);\n/* harmony import */ var _tabpanels_verinfo_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../tabpanels/verinfo.js */ "./Areas/VIS/Scripts/tabpanels/verinfo.js");\n/* harmony import */ var _tabpanels_verinfo_js__WEBPACK_IMPORTED_MODULE_93___default = /*#__PURE__*/__webpack_require__.n(_tabpanels_verinfo_js__WEBPACK_IMPORTED_MODULE_93__);\n/* harmony import */ var _tabpanels_HistoryDetailsTabPanel_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../tabpanels/HistoryDetailsTabPanel.js */ "./Areas/VIS/Scripts/tabpanels/HistoryDetailsTabPanel.js");\n/* harmony import */ var _tabpanels_HistoryDetailsTabPanel_js__WEBPACK_IMPORTED_MODULE_94___default = /*#__PURE__*/__webpack_require__.n(_tabpanels_HistoryDetailsTabPanel_js__WEBPACK_IMPORTED_MODULE_94__);\n/* harmony import */ var _tabpanels_surveyPanel_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../tabpanels/surveyPanel.js */ "./Areas/VIS/Scripts/tabpanels/surveyPanel.js");\n/* harmony import */ var _tabpanels_surveyPanel_js__WEBPACK_IMPORTED_MODULE_95___default = /*#__PURE__*/__webpack_require__.n(_tabpanels_surveyPanel_js__WEBPACK_IMPORTED_MODULE_95__);\n/* harmony import */ var _TestPanel_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../TestPanel.js */ "./Areas/VIS/Scripts/TestPanel.js");\n/* harmony import */ var _TestPanel_js__WEBPACK_IMPORTED_MODULE_96___default = /*#__PURE__*/__webpack_require__.n(_TestPanel_js__WEBPACK_IMPORTED_MODULE_96__);\n/* harmony import */ var _app_forms_form_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../app/forms/form.js */ "./Areas/VIS/Scripts/app/forms/form.js");\n/* harmony import */ var _app_forms_form_js__WEBPACK_IMPORTED_MODULE_97___default = /*#__PURE__*/__webpack_require__.n(_app_forms_form_js__WEBPACK_IMPORTED_MODULE_97__);\n/* harmony import */ var _F20_thememgr_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../F20/thememgr.js */ "./Areas/VIS/Scripts/F20/thememgr.js");\n/* harmony import */ var _F20_thememgr_js__WEBPACK_IMPORTED_MODULE_98___default = /*#__PURE__*/__webpack_require__.n(_F20_thememgr_js__WEBPACK_IMPORTED_MODULE_98__);\n/* harmony import */ var _app_initialize_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../app/initialize.js */ "./Areas/VIS/Scripts/app/initialize.js");\n/* harmony import */ var _app_initialize_js__WEBPACK_IMPORTED_MODULE_99___default = /*#__PURE__*/__webpack_require__.n(_app_initialize_js__WEBPACK_IMPORTED_MODULE_99__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//import    "./app/TreeMaintenance/treeondemand.js";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/src/VISjs.js?')},"./Areas/VIS/Scripts/tabpanels/HistoryDetailsTabPanel.js":()=>{eval("VIS = window.VIS || {};\n(function () {\n  function HistoryDetailsTabPanel() {\n    this.record_ID = 0;\n    this.windowNo = 0;\n    this.table_ID = 0;\n    this.frame;\n    this.curTab = null;\n    this.selectedRow = null;\n    this.panelWidth;\n    var $root = $('<div class=\"VIS-root-div\"></div>');\n    var $html, $rootcontent, $htmlcontent, $printhtml, $footerhtml, $paginghtml, $commentshtml;\n    var PAGESIZE = 10;\n    var currentPage = 0;\n    var prevPage = 0;\n    var nextPage = 0;\n    var totalPages = 0;\n    var totalRecords = 0;\n    var selectedPage = 0;\n    var _selectedId = 0;\n    var _selectedRecId = 0;\n    var historyRecords;\n    var _curPageRecords = 0;\n    var tableID = 0;\n    var window_No = 0;\n    var $lblTaskMsg = null;\n    var taskClosed;\n    function setContentHeight(fromRoot) {\n      var $outerwrap = $root.closest(\".vis-ad-w-p-ap-tp-outerwrap\");\n      var $divHead = $outerwrap.find('.vis-ad-w-p-ap-tp-o-b-head');\n      var $divContent = $outerwrap.find(\".vis-ad-w-p-ap-tp-o-b-content\");\n      var outerwrapheight = $outerwrap.height();\n      var divHeadheight = $divHead.height() + 40;\n      var divContentheight = $divContent.height();\n      $divContent.css(\"height\", outerwrapheight - divHeadheight);\n      var pagingHtmlheight = $('#VIS_pagingHtml' + window_No).height() + 10;\n      if ($('#VIS_recordDetail' + window_No).is(':visible')) {\n        $('#VIS_recordDetail' + window_No).css(\"height\", (outerwrapheight - divHeadheight) / 2 + 50);\n        $('#VIS_HistoryGrd' + window_No).css(\"height\", (outerwrapheight - divHeadheight) / 2 - pagingHtmlheight - 50);\n      } else {\n        $('#VIS_HistoryGrd' + window_No).css(\"height\", outerwrapheight - (divHeadheight + pagingHtmlheight));\n      }\n    }\n    /**   Intialize UI Elements  */\n    this.init = function () {\n      $html = $('<div class=\"VIS-testPanel VIS-HistGrd-data\" id=\"VIS_HistoryGrd' + this.windowNo + '\" ></div>');\n      $rootcontent = $('<div id=\"VIS_recordDetail' + this.windowNo + '\" style=\"display:none;\" class=\"VIS-tp-detailsPanel\"></div>');\n      $root.prepend($html);\n      $paginghtml = $('<div id=\"VIS_pagingHtml' + this.windowNo + '\" class=\"vis-ad-w-p-s-pages VIS-root-pagingHtml\"><ul class=\"vis-ad-w-p-s-plst w-100\">' + '<li class=\"flex-fill\"><div id=\"VIS_pagingText' + this.windowNo + '\" class=\"vis-ad-w-p-s-result\"><span class=\"vis-ad-w-p-s-statusdb\" id=\"VIS_pageIndx' + window_No + '\">0/0</span><span>Showing Result 0-0 of 0</span></div></li>' + '<li id=\"VIS_prevPage' + this.windowNo + '\" style=\"opacity: 1;\"><div ><i class=\"vis vis-pageup\" title=\"Page Up(Alt+ Pg Up)\" })=\"\" style=\"opacity: 1;\"></i></div></li>' + '<li><select id=\"VIS_ddlPages' + this.windowNo + '\" class=\"vis-statusbar-combo\"><option></option></select></li>' + '<li id=\"VIS_nextPage' + this.windowNo + '\" style=\"opacity: 1;\"><div ><i class=\"vis vis-pagedown\" title=\"Page Down(Alt+ Pg Dn)\" })=\"\" style=\"opacity: 1;\"></i></div></li></div>' + '</ul></div>');\n      $commentshtml = $('<div id=\"VIS_viewMoreComments' + this.windowNo + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div>');\n      $root.append($paginghtml);\n      $root.append($rootcontent);\n      window_No = this.windowNo;\n      setContentHeight();\n    };\n\n    /** Return container of panel's Design  */\n    this.getRoot = function () {\n      return $root;\n    };\n\n    /** Update UI elements with latest record's values.   */\n    this.update = function (record_ID) {\n      _selectedId = record_ID;\n      tableID = this.table_ID;\n      getGridDataRecordCount(record_ID, tableID);\n\n      //var Email = VIS.context.getWindowContext(this.windowNo, \"EMail\");\n      //var Mobile = VIS.context.getWindowContext(this.windowNo, \"Mobile\");\n      //var RecordId = VIS.context.getWindowContext(this.windowNo, \"C_Lead_ID\");\n      //var Phone = VIS.context.getWindowContext(this.windowNo, \"Phone\");\n\n      loadGridData(record_ID, 0, this.windowNo, tableID);\n    };\n    function setPages(RecordId, selPage) {\n      if (totalRecords > 0) {\n        if (totalRecords % PAGESIZE == 0) totalPages = totalRecords / PAGESIZE;else totalPages = Math.floor(totalRecords / PAGESIZE) + 1;\n        if (VIS.Utility.Util.getValueOfInt($('#VIS_ddlPages' + window_No).find(\":selected\").val()) > 0) currentPage = VIS.Utility.Util.getValueOfInt($('#VIS_ddlPages' + window_No).find(\":selected\").val());else currentPage = 1;\n        if (currentPage > 0) prevPage = currentPage - 1;\n        if (totalPages >= currentPage + 1) nextPage = currentPage + 1;\n        if (VIS.Utility.Util.getValueOfInt($('#VIS_ddlPages' + window_No).find(\":selected\").val()) <= 0 || $('#VIS_ddlPages' + window_No).children('option').length <= 0) {\n          $('#VIS_ddlPages' + window_No).empty();\n          for (var i = 1; i <= totalPages; i++) {\n            if (i == 1) $('#VIS_ddlPages' + window_No).append(new Option(i, i, true, true));else $('#VIS_ddlPages' + window_No).append(new Option(i, i, false, false));\n          }\n        }\n        if (totalPages > 1 && totalPages > VIS.Utility.Util.getValueOfInt($('#VIS_ddlPages' + window_No).find(\":selected\").val())) $('#VIS_pagingText' + window_No).html('<span class=\"vis-ad-w-p-s-statusdb\" id=\"VIS_pageIndx' + window_No + '\">1/' + _curPageRecords + '</span><span>Showing Result ' + ((currentPage - 1) * PAGESIZE + 1) + '-' + currentPage * PAGESIZE + ' of ' + totalRecords + '</span>');else if (totalPages > 1 && totalPages == VIS.Utility.Util.getValueOfInt($('#VIS_ddlPages' + window_No).find(\":selected\").val())) $('#VIS_pagingText' + window_No).html('<span class=\"vis-ad-w-p-s-statusdb\" id=\"VIS_pageIndx' + window_No + '\">1/' + _curPageRecords + '</span><span>Showing Result ' + ((currentPage - 1) * PAGESIZE + 1) + '-' + totalRecords + ' of ' + totalRecords + '</span>');else if (totalPages == 1) $('#VIS_pagingText' + window_No).html('<span class=\"vis-ad-w-p-s-statusdb\" id=\"VIS_pageIndx' + window_No + '\">1/' + _curPageRecords + '</span><span>Showing Result 1-' + totalRecords + ' of ' + totalRecords + '</span>');\n      } else {\n        $('#VIS_pagingText' + window_No).html('<span class=\"vis-ad-w-p-s-statusdb\" id=\"VIS_pageIndx' + window_No + '\">0/0</span><span>Showing Result 0-0 of 0</span>');\n        $('#VIS_ddlPages' + window_No).empty();\n      }\n    }\n\n    /* Getting the record count*/\n    function getGridDataRecordCount(RecordId, TableId) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetHistoryRecordsCount\",\n        //async: false,\n        data: {\n          RecordId: RecordId,\n          AD_Table_ID: TableId\n        },\n        success: function (data) {\n          var res = [];\n          res = JSON.parse(data);\n          if (res != null) {\n            totalRecords = res;\n            $('#VIS_ddlPages' + window_No).empty();\n            setPages(RecordId, 0);\n          }\n          ;\n        },\n        error: function (e) {}\n      });\n    }\n    ;\n    function ddlpagesOnChange(e) {\n      selectedPage = $('#VIS_ddlPages' + window_No).find(\":selected\").val();\n      loadGridData(_selectedId, VIS.Utility.Util.getValueOfInt(selectedPage), window_No, tableID);\n      currentPage = selectedPage;\n    }\n    ;\n\n    /* Loading the data in to Grid*/\n    function loadGridData(RecordId, selPage, window_No, TableId) {\n      $('#VIS_tabPanelDataLoader' + window_No).show();\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetHistoryRecordDetails\",\n        //async: false,\n        data: {\n          RecordId: RecordId,\n          AD_Table_ID: TableId,\n          CurrentPage: selPage\n        },\n        success: function (data) {\n          var res = [];\n          var tp_con;\n          res = JSON.parse(data);\n          if (res != null) {\n            historyRecords = res;\n            renderHistoryData(res, window_No, false);\n            $('#VIS_recordDetail' + window_No).hide();\n            setContentHeight();\n            //setTimeout($('#tabPanelDataLoader').hide(), 10000);\n            if (VIS.Utility.Util.getValueOfInt(selPage) > 0) setPages(RecordId, VIS.Utility.Util.getValueOfInt(selPage));\n            $('#VIS_tabPanelDataLoader' + window_No).hide();\n            $('#VIS_ddlPages' + window_No).one(\"change\", ddlpagesOnChange);\n            $('#VIS_prevPage' + window_No).one(\"click\");\n            $('#VIS_nextPage' + window_No).one(\"click\");\n            $('#VIS_prevPage' + window_No).one(\"click\", function (e) {\n              selectedPage = $('#VIS_ddlPages' + window_No).find(\":selected\").val();\n              if (VIS.Utility.Util.getValueOfInt(selectedPage) > 1) {\n                $('#VIS_prevPage' + window_No).off(\"click\");\n                $('#VIS_ddlPages' + window_No).off(\"change\");\n                loadGridData(_selectedId, VIS.Utility.Util.getValueOfInt(selectedPage) - 1, window_No, TableId);\n                currentPage = selectedPage;\n                $('#VIS_ddlPages' + window_No).val(VIS.Utility.Util.getValueOfInt(selectedPage) - 1);\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n              }\n            });\n            $('#VIS_nextPage' + window_No).one(\"click\", function (e) {\n              selectedPage = $('#VIS_ddlPages' + window_No).find(\":selected\").val();\n              if (VIS.Utility.Util.getValueOfInt(selectedPage) < $('#VIS_ddlPages' + window_No).children('option').length) {\n                $('#VIS_nextPage' + window_No).off(\"click\");\n                $('#VIS_ddlPages' + window_No).off(\"change\");\n                loadGridData(_selectedId, VIS.Utility.Util.getValueOfInt(selectedPage) + 1, window_No, TableId);\n                currentPage = selectedPage;\n                $('#VIS_ddlPages' + window_No).val(VIS.Utility.Util.getValueOfInt(selectedPage) + 1);\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n              }\n            });\n          }\n          ;\n        },\n        error: function (e) {}\n      });\n    }\n    ;\n    function renderHistoryData(res, window_No, isSearch) {\n      var $tpdataloader = $('<div class=\"VIS-tabPanelDataLoader\" id=\"VIS_tabPanelDataLoader' + window_No + '\"><i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i></div>');\n      var $maindatadivhtml = $('<div class=\"VIS-tp-mainContainer\"></div>');\n      var $searchhtml = $('<div class=\"VIS-tp-topSearchWrp\">' + '<button id=\"VIS_btnRefresh' + window_No + '\" class=\"VIS-tp-refreshIcon\" >' + '<i class=\"vis vis-refresh\"></i>' + '</button>' + '<div class=\"VIS-tp-searchControl\">' + '<input id=\"VIS_txtSearch' + window_No + '\" type=\"text\" placeholder=\"Search\">' + '<i id=\"VIS_faSearch' + window_No + '\" class=\"fa fa-search\"></i>' + '</div>' + '</div>');\n      if (res.length > 0) {\n        var $recshtml = $('<div class=\"VIS-tp-recordswrap\"></div>');\n        var $rechtml;\n        _curPageRecords = res.length;\n        $('#VIS_pageIndx' + window_No).text('1/' + _curPageRecords);\n        for (var i = 0; i < res.length; i++) {\n          if (res[i].Type.toLower() == 'email') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"email\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap ' + '\">' + '<div data-recid=\"' + i + '\" class= \"VIS-tp-recordIcon\" >' + '<i data-recid=\"' + i + '\" class=\"vis vis-email\"></i>' + '</div >' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<i data-recid=\"' + i + '\" class=\"fa fa-arrow-up\"></i>' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + (VIS.Utility.Util.getValueOfString(res[i].HasAttachment) == 'true' ? '\" class=\"vis vis-attachment1\"></i>' : '\"></i>') + '<small data-recid=\"' + i + '\">By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'inbox') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"email\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap ' + '\">' + '<div data-recid=\"' + i + '\" class= \"VIS-tp-recordIcon\" >' + '<i data-recid=\"' + i + '\" class=\"vis vis-email\"></i>' + '</div >' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<i data-recid=\"' + i + '\" class=\"fa fa-arrow-down\"></i>' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + (VIS.Utility.Util.getValueOfString(res[i].HasAttachment) == 'true' ? '\" class=\"vis vis-attachment1\"></i>' : '\"></i>') + '<small data-recid=\"' + i + '\">By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'call') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"call\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap  ' + '\">' + '<div data-recid=\"' + i + '\" class= \"VIS-tp-recordIcon\" >' + '<i data-recid=\"' + i + '\" class=\"fa fa-phone\" aria-hidden=\"true\" title=\"Call\" ></i>' + '</div >' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + (VIS.Utility.Util.getValueOfString(res[i].HasAttachment) == 'true' ? '\" class=\"vis vis-attachment1\">&nbsp;</i>' : '\">&nbsp;</i>') + '<small data-recid=\"' + i + '\">By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'chat') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"chat\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap  ' + '\">' + '<div data-recid=\"' + i + '\" class= \"VIS-tp-recordIcon\" >' + '<i data-recid=\"' + i + '\" class=\"vis vis-chat\" title=\"chat\" ></i>' + '</div >' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + '\">&nbsp;</i>' + '<small data-recid=\"' + i + '\">By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'letter') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"letter\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap ' + '\">' + '<div data-recid=\"' + i + '\" class= \"VIS-tp-recordIcon\" >' + '<i data-recid=\"' + i + '\" class=\"vis vis-letter\"></i>' + '</div >' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + (VIS.Utility.Util.getValueOfString(res[i].HasAttachment) == 'true' ? '\" class=\"vis vis-attachment1\">&nbsp;</i>' : '\">&nbsp;</i>') + '<small data-recid=\"' + i + '\">By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'appointment') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"appointment\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap ' + '\">' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordIcon\">' + '<i data-recid=\"' + i + '\" class=\"vis vis-appointment\" title=\"appointment\"></i>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + '\">&nbsp;</i>' + '<small data-recid=\"' + i + '\">By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'task') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"task\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap ' + '\">' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordIcon\">' + '<i data-recid=\"' + i + '\" class=\"vis vis-task\" title=\"task\"></i>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + (res[i].IsTaskClosed ? '<span data-recid=\"' + i + '\" class=\"VIS-tp-taskTag\">' + VIS.Msg.getMsg(\"Closed\") + '</span>' : '') + '<i data-recid=\"' + i + '\">&nbsp;</i>' + '<small data-recid=\"' + i + '\" >By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');else if (res[i].Type.toLower() == 'attachment') $rechtml = $('<div data-rid=\"' + res[i].ID + '\" data-username=\"' + res[i].UserName + '\" data-winno=\"' + window_No + '\" data-atype=\"attachment\" data-recid=\"' + i + '\" id=\"rowId' + i + '\" class=\"VIS-tp-recordWrap ' + '\">' + '<div data-recid=\"' + i + '\" class= \"VIS-tp-recordIcon\" title=\"attachment\">' + '<i data-recid=\"' + i + '\" class=\"vis vis-attachmentx\"></i>' + '</div >' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfo\">' + '<h6 data-recid=\"' + i + '\">' + new Date(res[i].Created).toLocaleString() + '</h6>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordSubject\">' + '<p data-recid=\"' + i + '\">' + res[i].Subject + '</p>' + '</div>' + '</div>' + '<div data-recid=\"' + i + '\" class=\"VIS-tp-recordInfoRight\">' + '<i data-recid=\"' + i + '\" >&nbsp;</i>' + '<small data-recid=\"' + i + '\" >By: ' + res[i].UserName + '</small>' + '</div>' + '</div>');\n          $recshtml.append($rechtml);\n        }\n        if (isSearch) {\n          $root.find('.VIS-tp-recordswrap').empty();\n          $root.find('.VIS-tp-recordswrap').append($recshtml.html());\n        } else {\n          $maindatadivhtml.append($tpdataloader).append($searchhtml).append($recshtml);\n          $html.empty();\n          $html.append($maindatadivhtml);\n        }\n        $root.find(\".VIS-tp-recordWrap\").click(function (e) {\n          var target = e.target;\n          var recId = '';\n          recId = VIS.Utility.Util.getValueOfInt($(target).data('recid'));\n          $root.find('#rowId' + recId).addClass('VIS-tp-selectedRecord');\n          if (VIS.Utility.Util.getValueOfInt(_selectedRecId) >= 0 && recId != VIS.Utility.Util.getValueOfInt(_selectedRecId) && $root.find('#rowId' + _selectedRecId).hasClass('VIS-tp-selectedRecord')) $root.find('#rowId' + _selectedRecId).removeClass('VIS-tp-selectedRecord');\n          _selectedRecId = recId;\n          $('#VIS_pageIndx' + window_No).text(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1 + '/' + _curPageRecords);\n          var record_Type = $root.find('#rowId' + recId).data('atype').toString().toUpper();\n          var rID = $root.find('#rowId' + recId).data('rid');\n          var userName = $root.find('#rowId' + recId).data('username');\n          $('#VIS_recordDetail' + window_No).show();\n          if (record_Type == \"EMAIL\" || record_Type == \"INBOX\") showMail(rID, userName, window_No);else if (record_Type == \"CALL\") showCallInfo(rID, userName, window_No);else if (record_Type == \"APPOINTMENT\") showAppointmentInfo(rID, userName, window_No);else if (record_Type == \"LETTER\") showLetter(rID, userName, window_No);else if (record_Type == \"TASK\") showTask(rID, userName, window_No);else if (record_Type == \"ATTACHMENT\") showAttachment(rID, userName, window_No);else if (record_Type == \"CHAT\") showChat(rID, userName, window_No);\n          setContentHeight();\n        });\n        $('#VIS_txtSearch' + window_No).keyup(function (e) {\n          if (e.keyCode != undefined && e.keyCode != 13 && e.keyCode != 8) {\n            return;\n          }\n          var searchField = $(this).val();\n          if (searchField === '' && e.keyCode != 13) {\n            return;\n          }\n          var searchRecords = [];\n          var regex = new RegExp(searchField, \"i\");\n          var reccount = 0;\n          $.each(historyRecords, function (key, record) {\n            if (record.Subject.search(regex) != -1 || record.UserName.search(regex) != -1) {\n              searchRecords[reccount] = record;\n              reccount++;\n            }\n          });\n          renderHistoryData(searchRecords, window_No, true);\n          $('#VIS_recordDetail' + window_No).fadeOut(100);\n          $('#VIS_recordDetail' + window_No).hide();\n          if (searchField === '' && e.keyCode == 13) $('#VIS_pagingHtml' + window_No).show();else $('#VIS_pagingHtml' + window_No).hide();\n        });\n        $('#VIS_btnRefresh' + window_No).click(function () {\n          if (VIS.Utility.Util.getValueOfInt(_selectedId) > 0) {\n            getGridDataRecordCount(_selectedId, tableID);\n            loadGridData(_selectedId, 0, window_No, tableID);\n          }\n          $('#VIS_recordDetail' + window_No).hide();\n          $('#VIS_pagingHtml' + window_No).show();\n        });\n        $('#VIS_faSearch' + window_No).click(function () {\n          var searchField = $('#VIS_txtSearch' + window_No).val();\n          if (searchField === '') {\n            if (VIS.Utility.Util.getValueOfInt(_selectedId) > 0) {\n              getGridDataRecordCount(_selectedId, tableID);\n              loadGridData(_selectedId, 0, window_No, tableID);\n            }\n            $('#VIS_recordDetail' + window_No).hide();\n            $('#VIS_pagingHtml' + window_No).show();\n          } else {\n            var searchRecords = [];\n            var regex = new RegExp(searchField, \"i\");\n            var reccount = 0;\n            $.each(historyRecords, function (key, record) {\n              if (record.Subject.search(regex) != -1 || record.UserName.search(regex) != -1) {\n                searchRecords[reccount] = record;\n                reccount++;\n              }\n            });\n            renderHistoryData(searchRecords, window_No, true);\n            $('#VIS_recordDetail' + window_No).fadeOut(100);\n            $('#VIS_recordDetail' + window_No).hide();\n            $('#VIS_pagingHtml' + window_No).hide();\n          }\n        });\n      } else {\n        $maindatadivhtml.append($searchhtml);\n        $html.empty();\n        $html.append($maindatadivhtml);\n      }\n    }\n    function NavigateRecord(recId, window_No) {\n      var historyrecord, historyrID, historyuserName, historyrecord_Type;\n      var currentRecord = -1;\n      if (historyRecords != null && VIS.Utility.Util.getValueOfInt(recId) >= 0 && VIS.Utility.Util.getValueOfInt(recId) < historyRecords.length) {\n        currentRecord = VIS.Utility.Util.getValueOfInt(recId);\n        historyrecord = historyRecords[currentRecord];\n        historyrID = historyrecord.ID;\n        historyuserName = historyrecord.UserName;\n        historyrecord_Type = VIS.Utility.Util.getValueOfString(historyrecord.Type).toUpper();\n        $('#rowId' + currentRecord).addClass('VIS-tp-selectedRecord');\n        if (VIS.Utility.Util.getValueOfInt(_selectedRecId) >= 0 && currentRecord != VIS.Utility.Util.getValueOfInt(_selectedRecId) && $('#rowId' + _selectedRecId).hasClass('VIS-tp-selectedRecord')) $('#rowId' + _selectedRecId).removeClass('VIS-tp-selectedRecord');\n        _selectedRecId = currentRecord;\n        $('#VIS_pageIndx' + window_No).text(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1 + '/' + _curPageRecords);\n      }\n      if (historyrecord_Type == \"EMAIL\" || historyrecord_Type == \"INBOX\") showMail(historyrID, historyuserName, window_No);else if (historyrecord_Type == \"CALL\") showCallInfo(historyrID, historyuserName, window_No);else if (historyrecord_Type == \"APPOINTMENT\") showAppointmentInfo(historyrID, historyuserName, window_No);else if (historyrecord_Type == \"LETTER\") showLetter(historyrID, historyuserName, window_No);else if (historyrecord_Type == \"TASK\") showTask(historyrID, historyuserName, window_No);else if (historyrecord_Type == \"ATTACHMENT\") showAttachment(historyrID, historyuserName, window_No);else if (historyrecord_Type == \"CHAT\") showChat(historyrID, historyuserName, window_No);\n    }\n    function showMail(ID, UserName, window_No) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedMailDetails\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var _mattachID;\n          var noOfAttchs = 0;\n          var _Record_ID = result.Record_ID;\n          var _AD_Table_ID = result.AD_Table_ID;\n          var attachID = 0;\n          _mattachID = VIS.Utility.Util.getValueOfString(result.ID);\n          var mailaddresscc, mailaddressbcc;\n          var userInitials = '';\n          var uname = VIS.Utility.Util.getValueOfString(UserName).split(' ');\n          var mailtoddlhtml, $mailbodyhtml;\n          if (uname.length > 1) {\n            userInitials = VIS.Utility.Util.getValueOfString(uname[0]).substring(0, 1).toUpper() + VIS.Utility.Util.getValueOfString(uname[1]).substring(0, 1).toUpper();\n          } else userInitials = VIS.Utility.Util.getValueOfString(UserName).substring(0, 2).toUpper();\n          if (VIS.Utility.Util.getValueOfString(result.Cc) != '' || VIS.Utility.Util.getValueOfString(result.Bcc) != '') {\n            mailtoddlhtml = '<div class=\"dropdown show VIS-tp-dropdownWrap\">' + result.To + '<a class=\"btn dropdown-toggle\" style=\"font-size:.75rem;\" href = \"#\" role = \"button\" id=\"dropdownMenuLink\" ' + 'data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" >' + '&nbsp;<i class=\"fa fa-angle-down VIS-tp-recordLabels\"></i></a>' + '<div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">';\n            if (VIS.Utility.Util.getValueOfString(result.Cc) != '') {\n              mailaddresscc = VIS.Utility.Util.getValueOfString(result.Cc).split(',');\n              for (var i = 0; i < mailaddresscc.length; i++) {\n                if (mailaddresscc[i] != 'undefined' && mailaddresscc[i] != '') {\n                  if (i == 0) mailtoddlhtml += '<span class=\"VIS-tp-recordLabels VIS-mail-to\">' + VIS.Msg.getMsg(\"Cc\") + ':&nbsp; </span>' + '<a class=\"dropdown-item VIS-mail-to\" href = \"#\">' + mailaddresscc[i] + '</a>';else mailtoddlhtml += '<a class=\"dropdown-item VIS-mail-to\" href=\"#\">' + mailaddresscc[i] + '</a>';\n                }\n              }\n            }\n            if (VIS.Utility.Util.getValueOfString(result.Bcc) != '') {\n              mailaddressbcc = VIS.Utility.Util.getValueOfString(result.Bcc).split(',');\n              for (var j = 0; j < mailaddressbcc.length; j++) {\n                if (mailaddressbcc[j] != 'undefined' && mailaddressbcc[j] != '') {\n                  if (j == 0) mailtoddlhtml += '<span class=\"VIS-tp-recordLabels VIS-mail-to\">' + VIS.Msg.getMsg(\"Bcc\") + ':&nbsp; </span><a class=\"dropdown-item VIS-mail-to\" href=\"#\">' + mailaddressbcc[j] + '</a>';else mailtoddlhtml += '<a class=\"dropdown-item VIS-mail-to\" href=\"#\">' + mailaddressbcc[j] + '</a>';\n                }\n              }\n            }\n            mailtoddlhtml += '</div></div>';\n          } else mailtoddlhtml = result.To;\n          if (result.Attach != null && result.Attach.length > 0) {\n            noOfAttchs = result.Attach.length;\n            attachID = result.ID;\n          }\n          if ($rootcontent.length < 1) {\n            $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailPanel\"></div>');\n          }\n          $rootcontent.empty();\n          $htmlcontent = $('<div class=\"VIS-testPanel VIS-tp-borderBott\" ><div class=\"d-flex align-items-center VIS-tp-leftIcons\"><span><i class=\"fa fa-reply\" data-mailto=\"' + result.To + '\" data-mailcc=\"' + result.Cc + '\" data-mailbcc=\"' + result.Bcc + '\" id=\"VIS_imgReply' + window_No + '\"></i></span><span><i class=\"fa fa-reply-all\" data-mailto=\"' + result.To + '\" data-mailcc=\"' + result.Cc + '\" data-mailbcc=\"' + result.Bcc + '\" id=\"VIS_imgReplyAll' + window_No + '\"></i></span><span><i class=\"fa fa-share\" id=\"VIS_imgForward' + window_No + '\"></i></span></div>' + '<div class= \"align-items-center d-flex VIS-tp-rightIcons\" ><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span><span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div ></div > ');\n          $mailbodyhtml = $('<div class=\"VIS-tp-contentdiv\" >' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\"><div class=\"vis-tp-emailDetailWrap\"><div class=\"VIS-mail-user-div\"><span class=\"VIS-mail-user-span\">' + userInitials + '</span></div>' + '<div class=\"VIS-contentTitile\"><span class=\"VIS-mail-username\">' + UserName + '</span><span id=\"VIS_mailSubject' + window_No + '\" class=\"VIS-mail-subject VIS-tp-recordLabels\">' + result.Title + '</span><div class=\"VIS-mail-content\"><div class=\"VIS-mail-from\"><span class=\"VIS-tp-recordLabels\">' + VIS.Msg.getMsg(\"From\") + ':&nbsp;</span><span style=\"word-break: break-word;\">' + result.From + '</span></div><small>' + new Date(result.Date).toLocaleString() + '</small></div><span class=\"VIS-mail-to\"><span class=\"VIS-tp-recordLabels\">' + VIS.Msg.getMsg(\"To\") + ':&nbsp; </span>' + mailtoddlhtml + '</span></div></div>' + '<div id=\"VIS_mailBody' + window_No + '\" class=\"VIS-mail-body\" >' + result.Detail + '</div></div >' + '<div id=\"VIS_viewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div>' + '<div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div></div>');\n          $printhtml = $('<div class=\"VIS-tp-contentdiv\" >' + '<div class=\"VIS-tp-comments-input' + window_No + '\" ><div class=\"vis-tp-emailDetailWrap\"<div class=\"VIS-mail-user-div\"><span class=\"VIS-mail-user-span\">' + userInitials + '</span></div>' + '<div class=\"VIS-contentTitile\"><span class=\"VIS-mail-username\">' + UserName + '</span><span id=\"mailSubject\" class=\"VIS-mail-subject VIS-tp-recordLabels\">' + result.Title + '</span><div class=\"VIS-mail-content\"><span class=\"VIS-mail-from\"><span class=\"VIS-tp-recordLabels\">' + VIS.Msg.getMsg(\"From\") + ':&nbsp;</span><span style=\"word-break: break-word;\">' + result.From + '</span></div><small>' + new Date(result.Date).toLocaleString() + '</small></div><span class=\"VIS-mail-to\"><span class=\"VIS-tp-recordLabels\">' + VIS.Msg.getMsg(\"To\") + ':&nbsp; </span>' + mailtoddlhtml + '</span></div></div>' + '<div class=\"VIS-mail-body\" >' + result.Detail + '</div></div>');\n          $footerhtml = $('<div class=\"VIS-tp-downloadAttachment\"><div class=\"VIS-tp-attachments\"><i class=\"vis vis-attachment1\" ></i><span> ' + noOfAttchs + ' ' + VIS.Msg.getMsg(\"Attachments\") + '</span></div><div class=\"VIS-tp-attchDownload\" id=\"dwnldAllAttach\"><i class=\"vis vis-import\" title=\"Download All\" style=\"opacity: 1;\"></i><span> ' + VIS.Msg.getMsg(\"VIS_DownloadAll\") + '</span></div></div>' + '</div>');\n          var $contenthtml = $('<div class=\"VIS-tp-emailDetailOuterPanel VIS-tp-recordDetail\"></div>');\n          $contenthtml.append($mailbodyhtml).append($footerhtml);\n          $rootcontent.append($htmlcontent).append($contenthtml);\n          if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n          if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n          lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), false, false);\n          $('#VIS_recordDetail' + window_No).show();\n          $('#dwnldAllAttach').click(function () {\n            downLoadAllAttach(ID);\n          });\n          $('#VIS_btnComments' + window_No).click(function (e) {\n            saveComments(false, false, e);\n          });\n          $('#VIS_txtComments' + window_No).keyup(function (e) {\n            saveComments(false, false, e);\n          });\n          $('#VIS_viewAllComments' + window_No).click(function (e) {\n            if ($('#VIS_viewAllComments' + window_No).text() == VIS.Msg.getMsg('HideComments')) {\n              $('#VIS_viewMoreComments' + window_No).empty();\n              $('#VIS_viewMoreComments' + window_No).hide();\n              $('#VIS-tp-comments-input' + window_No).show();\n              $('#VIS_commentsMsg' + window_No).show();\n              $('#VIS_viewAllComments' + window_No).text(VIS.Msg.getMsg('ViewMoreComments'));\n              lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), false, false);\n            } else viewAll(VIS.Utility.Util.getValueOfInt(_mattachID), false, false);\n          });\n          $(\"#VIS_imgReply\" + window_No).click(function (e) {\n            var action = \"R\";\n            var hline = '<br><br><hr>';\n            panelAction(_Record_ID, _AD_Table_ID, hline + $('#VIS_mailBody' + window_No).html(), $('#VIS_mailSubject' + window_No).text(), attachID, action, e);\n          });\n          $(\"#VIS_imgReplyAll\" + window_No).click(function (e) {\n            var action = \"RA\";\n            var hline = '<br><br><hr>';\n            panelAction(_Record_ID, _AD_Table_ID, hline + $('#VIS_mailBody' + window_No).html(), $('#VIS_mailSubject' + window_No).text(), attachID, action, e);\n          });\n          $(\"#VIS_imgForward\" + window_No).click(function (e) {\n            var action = \"F\";\n            var hline = '<br><br><hr>';\n            panelAction(_Record_ID, _AD_Table_ID, hline + $('#VIS_mailBody' + window_No).html(), $('#VIS_mailSubject' + window_No).text(), attachID, action, e);\n          });\n          $('#VIS_prtHistory' + window_No).find('i').click(function () {\n            finalPrint($printhtml.html());\n          });\n          $('#VIS_prevRecord' + window_No).click(function () {\n            if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n          });\n          $('#VIS_nextRecord' + window_No).click(function () {\n            if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n          });\n          $('#VIS_btnClose' + window_No).click(function () {\n            $('#VIS_recordDetail' + window_No).hide();\n            setContentHeight();\n          });\n        }\n      });\n    }\n    ;\n    function showLetter(ID, UserName, window_No) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedLetterDetails\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var _mattachID;\n\n          //if (result != null && result != '') {\n          _mattachID = VIS.Utility.Util.getValueOfString(result.ID);\n          var attchFile = '';\n          var userInitials = '';\n          var uname = VIS.Utility.Util.getValueOfString(UserName).split(' ');\n          if (uname.length > 1) {\n            userInitials = VIS.Utility.Util.getValueOfString(uname[0]).substring(0, 1).toUpper() + VIS.Utility.Util.getValueOfString(uname[1]).substring(0, 1).toUpper();\n          } else userInitials = VIS.Utility.Util.getValueOfString(UserName).substring(0, 2).toUpper();\n          if (result.Attach != null && result.Attach.length > 0) attchFile = result.Attach[0].Name;\n          if ($rootcontent.length < 1) {\n            $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailsPanel\"></div>');\n          }\n          $rootcontent.empty();\n          $htmlcontent = $('<div class=\"VIS-contentHeadOuter VIS-tp-borderBott\" ><div class=\"VIS-tp-recordIcon\" ><i class=\"vis vis-letter\"></i></div><div class=\"VIS-contentHead\"><span class=\"VIS-letter-header\" >' + VIS.Msg.getMsg(\"Letter\") + '</span></div><div class=\"align-items-center d-flex VIS-tp-rightIcons\" ><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span><span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div></div>');\n          $mailbodyhtml = $('<div class=\"VIS-tp-contentdiv\" >' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\"><div style=\"width: 100%\"><table height=\"50px\" width=\"100%\"><tr height=\"50px\"><td style=\"width:60px\"><div class=\"VIS-mail-user-div\"><span class=\"VIS-mail-user-span\">' + userInitials + '</span></div></td>' + '<td height=\"50px\"><span class=\"VIS-mail-username\">' + UserName + '</span><span id=\"mailSubject\" class=\"VIS-mail-subject VIS-tp-recordLabels\">' + result.Title + '</span><span class=\"VIS-mail-to\">&nbsp;</span><span class=\"VIS-mail-from\">&nbsp;</span></td><td height=\"50px\" class=\"VIS-mail-date\">' + new Date(result.Date).toLocaleString() + '</td></tr></table></div>' + '<div id=\"mailBody\" class=\"VIS-mail-body\" >' + result.Detail + '</div></div>' + '<div id=\"VIS_viewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div>' + '<div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div></div> ');\n          $printhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div class=\"\" ><div style=\"width:100%\" ><table height=\"50px\" width=\"100%\"><tr height=\"50px\"><td><div class=\"VIS-mail-user-div\"><span class=\"VIS-mail-user-span\">' + userInitials + '</span></div></td>' + '<td height=\"50px\"><span class=\"VIS-mail-username\">' + UserName + '</span><span id=\"mailSubject\" class=\"VIS-mail-subject VIS-tp-recordLabels\">' + result.Title + '</span><span class=\"VIS-mail-to\">&nbsp;</span><span class=\"VIS-mail-from\">&nbsp;</span></td><td height=\"50px\" class=\"VIS-mail-date\">' + result.Date + '</td></tr></table></div>' + '<div id=\"mailBody\" class=\"VIS-mail-body\" >' + result.Detail + '</div></div>');\n          $footerhtml = $('<div class=\"VIS-tp-downloadAttachment\"><div class=\"VIS-tp-attachments\"><i class=\"vis vis-attachment1\" ></i><span> ' + attchFile + '</span></div><div class=\"VIS-tp-attchDownload\" id=\"dwnldLetterAttach\"><i class=\"vis vis-import\" title=\"Download\" style=\"opacity: 1;\"></i><span> ' + VIS.Msg.getMsg(\"VIS_Download\") + '</span></div></div>' + '</div>');\n          var $contenthtml = $('<div class=\"VIS-tp-emailDetailOuterPanel VIS-tp-recordDetail\"></div>');\n          $contenthtml.append($mailbodyhtml).append($footerhtml);\n          $rootcontent.append($htmlcontent).append($contenthtml);\n          if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n          if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n          //}\n          lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), false, false);\n          $('#VIS_recordDetail' + window_No).show();\n          $('#VIS_btnComments' + window_No).click(function (e) {\n            saveComments(false, false, e);\n          });\n          $('#VIS_txtComments' + window_No).keyup(function (e) {\n            saveComments(false, false, e);\n          });\n          $('#VIS_viewAllComments' + window_No).click(function (e) {\n            if ($('#VIS_viewAllComments' + window_No).text() == VIS.Msg.getMsg('HideComments')) {\n              $('#VIS_viewMoreComments' + window_No).empty();\n              $('#VIS_viewMoreComments' + window_No).hide();\n              $('#VIS-tp-comments-input' + window_No).show();\n              $('#VIS_commentsMsg' + window_No).show();\n              $('#VIS_viewAllComments' + window_No).text(VIS.Msg.getMsg('ViewMoreComments'));\n              lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), false, false);\n            } else viewAll(VIS.Utility.Util.getValueOfInt(_mattachID), false, false);\n          });\n          $('#dwnldLetterAttach').click(function () {\n            downLoadAttach(ID, attchFile);\n          });\n          $('#VIS_prtHistory' + window_No).find('i').click(function () {\n            finalPrint($printhtml.html());\n          });\n          $('#VIS_prevRecord' + window_No).click(function () {\n            if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n          });\n          $('#VIS_nextRecord' + window_No).click(function () {\n            if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n          });\n          $('#VIS_btnClose' + window_No).click(function () {\n            $('#VIS_recordDetail' + window_No).hide();\n            setContentHeight();\n          });\n        }\n      });\n    }\n    ;\n    function showCallInfo(ID, UserName, window_No) {\n      var CallDetails_ID = VIS.Utility.Util.getValueOfInt(ID);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedCallDetails\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          'ID': ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var _mattachID = CallDetails_ID;\n          var attchFile = '';\n          attach_ID = 0;\n          attachLine_ID = 0;\n          var $callhtml, statusColor;\n          //Emp code:187\n          //To display the call duration\n          var duration = result.VA048_Duration >= 60 ? DurationCalculator(result.VA048_Duration) : result.VA048_Duration + ' ' + VIS.Msg.getMsg('VA048_Seconds');\n          if (result.Attach != null && result.Attach.length > 0) {\n            attchFile = result.Attach[0].Name;\n            attach_ID = result.Attach[0].AttID;\n            attachLine_ID = result.Attach[0].ID;\n          }\n          if (VIS.Utility.Util.getValueOfString(result.VA048_Status).toLower() == 'completed') statusColor = 'style = \"color: #42d819;\"';\n          if ($rootcontent.length < 1) {\n            $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailsPanel\"></div>');\n          }\n          $rootcontent.empty();\n          $htmlcontent = $('<div class=\"VIS-tp-borderBott\"><div class=\"VIS-contentHeadOuter\">' + '<div class= \"VIS-tp-recordIcon\" ><i class=\"fa fa-phone\" aria-hidden=\"true\" title=\"Call\"></i></div >' + '<div class=\"VIS-contentHead\"><div class=\"VIS-contentTitile\"><h6 class=\"mb-0\">' + UserName + '</h6><small>' + result.VA048_From + '</small></div>' + '<div class=\"align-items-center d-flex VIS-tp-rightIcons\"><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span>' + '<span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div></div></div></div>');\n          $callhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\">' + '<div class=\"\" >' + '<table height=\"50px\" width=\"100%\">' + '<tr class=\"VIS-call-col-header\" ><td>' + VIS.Msg.getMsg(\"VA048_To\") + '</td><td>' + VIS.Msg.getMsg(\"VA048_Duration\") + '</td></tr>' + '<tr class=\"VIS-call-col-data \" ><td>' + result.VA048_To + '</td><td>' + duration + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Created\") + '</td><td>' + VIS.Msg.getMsg(\"VA048_Status\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + new Date(result.Created).toLocaleString() + '</td><td ' + statusColor + ' >' + result.VA048_Status + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"VA048_Price\") + '</td><td>' + VIS.Msg.getMsg(\"VA048_PriceUnit\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + result.VA048_Price + '</td><td>' + result.VA048_Price_Unit + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Category\") + '</td><td>' + VIS.Msg.getMsg(\"Attachments\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + VIS.Msg.getMsg(\"VA048_CallType\") + '</td><td class=\"VIS-tp-attchDownload\" id=\"dwnldCallAttach\">' + attchFile + '</td></tr>' + '</table>' + '</div>' + '</div>' + '<div id=\"VIS_viewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\" ></div>' + '<div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div>' + '</div>');\n          $printhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\">' + '<div class=\"\" >' + '<table height=\"50px\" width=\"100%\">' + '<tr class=\"VIS-call-col-header\" ><td>' + VIS.Msg.getMsg(\"VA048_To\") + '</td><td>' + VIS.Msg.getMsg(\"VA048_Duration\") + '</td></tr>' + '<tr class=\"VIS-call-col-data \" ><td>' + result.VA048_To + '</td><td>' + result.VA048_Duration + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Created\") + '</td><td>' + VIS.Msg.getMsg(\"VA048_Status\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + result.Created + '</td><td style=\"color: #42d819;\">' + result.VA048_Status + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"VA048_Price\") + 'Price</td><td>' + VIS.Msg.getMsg(\"VA048_PriceUnit\") + 'Price Unit</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + result.VA048_Price + '</td><td>' + result.VA048_Price_Unit + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Category\") + '</td><td>' + VIS.Msg.getMsg(\"Attachments\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + VIS.Msg.getMsg(\"VA048_CallType\") + '</td><td class=\"VIS-tp-attchDownload\" id=\"dwnldCallAttach\">' + attchFile + '</td></tr>' + '</table>' + '</div>' + '</div>');\n          $footerhtml = $('<div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div>' + '</div>');\n          var $contenthtml = $('<div class=\"VIS-mail-header VIS-tp-recordDetail\"></div>');\n          $contenthtml.append($callhtml); //.append($footerhtml);\n          $rootcontent.append($htmlcontent).append($contenthtml);\n          if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n          if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n          lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), false, true);\n          $('#VIS_recordDetail' + window_No).show();\n          $('#dwnldCallAttach').click(function () {\n            downLoadAttachCall(attachLine_ID, attach_ID, attchFile);\n          });\n          $('#VIS_btnComments' + window_No).click(function (e) {\n            saveComments(false, true, e);\n          });\n          $('#VIS_txtComments' + window_No).keyup(function (e) {\n            saveComments(false, true, e);\n          });\n          $('#VIS_viewAllComments' + window_No).click(function (e) {\n            if ($('#VIS_viewAllComments' + window_No).text() == VIS.Msg.getMsg('HideComments')) {\n              $('#VIS_viewMoreComments' + window_No).empty();\n              $('#VIS_viewMoreComments' + window_No).hide();\n              $('#VIS-tp-comments-input' + window_No).show();\n              $('#VIS_commentsMsg' + window_No).show();\n              $('#VIS_viewAllComments' + window_No).text(VIS.Msg.getMsg('ViewMoreComments'));\n              lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), false, true);\n            } else viewAll(VIS.Utility.Util.getValueOfInt(_mattachID), false, true);\n          });\n          $('#VIS_prtHistory' + window_No).find('i').click(function () {\n            finalPrint($printhtml.html());\n          });\n          $('#VIS_prevRecord' + window_No).click(function () {\n            if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n          });\n          $('#VIS_nextRecord' + window_No).click(function () {\n            if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n          });\n          $('#VIS_btnClose' + window_No).click(function () {\n            $('#VIS_recordDetail' + window_No).hide();\n            setContentHeight();\n          });\n        }\n      });\n    }\n    ;\n    function showAppointmentInfo(ID, UserName, window_No) {\n      var attdInfo = \"\";\n      var $appthtml;\n      var ds = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedAppointmentDetails\", {\n        \"record_ID\": ID\n      }, null);\n      var _mattachID;\n      if (ds != null) {\n        strApp = \"\";\n        _mattachID = VIS.Utility.Util.getValueOfString(ds[\"AppointmentsInfo_ID\"]);\n        var attInfo = ds[\"AttendeeInfo\"];\n        if (attInfo != null && attInfo != \"\") {\n          names = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"AttachmentHistory/GetUser\", {\n            \"UserQry\": attInfo\n          }, null);\n          if (names != null && names.length > 0) {\n            strApp = \"\";\n            for (var k = 0; k < names.length; k++) {\n              strApp += names[k] + \", \";\n            }\n            strApp = strApp.substring(0, strApp.length - 2);\n            attdInfo = strApp;\n          }\n        }\n        if ($rootcontent.length < 1) {\n          $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailsPanel\"></div>');\n        }\n        $rootcontent.empty();\n        $htmlcontent = $('<div class=\"VIS-tp-borderBott\"><div class=\"VIS-contentHeadOuter\">' + '<div class= \"VIS-tp-recordIcon\" ><i class=\"vis vis-task\" title=\"task\"></i></div >' + '<div class=\"VIS-contentHead\"><div class=\"VIS-contentTitile\"><h6 class=\"mb-0\">' + VIS.Msg.getMsg(\"Appointment\") + '</h6><small>' + ds[\"Subject\"] + '</small></div>' + '<div class=\"align-items-center d-flex VIS-tp-rightIcons\"><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span>' + '<span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div></div></div></div>');\n        $appthtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\">' + '<div >' + '<table height=\"50px\" width=\"100%\">' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Location\") + '</td><td>' + VIS.Msg.getMsg(\"AllDay\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + ds[\"Location\"] + '</td><td>' + ds[\"Allday\"] + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"StartDate\") + '</td><td>' + VIS.Msg.getMsg(\"EndDate\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + new Date(ds[\"StartDate\"]).toLocaleString() + '</td><td>' + new Date(ds[\"EndDate\"]).toLocaleString() + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Contacts\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + attdInfo + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Description\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + ds[\"Description\"] + '</td></tr>' + '</table>' + '</div>' + '</div>' + '<div id=\"VIS_viewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div>' + '<div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div>' + '</div>');\n        $printhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\">' + '<div >' + '<table height=\"50px\" width=\"100%\">' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Location\") + '</td><td>' + VIS.Msg.getMsg(\"AllDay\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + ds[\"Location\"] + '</td><td>' + ds[\"Allday\"] + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"StartDate\") + '</td><td>' + VIS.Msg.getMsg(\"EndDate\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + ds[\"StartDate\"] + '</td><td>' + ds[\"EndDate\"] + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Contacts\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + attdInfo + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Description\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + ds[\"Description\"] + '</td></tr>' + '</table>' + '</div>' + '</div>');\n        $footerhtml = $('<div id=\"ViewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div><div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div>' + '</div>');\n        var $contenthtml = $('<div class=\"VIS-mail-header VIS-tp-recordDetail\"></div>');\n        $contenthtml.append($appthtml); //.append($footerhtml);\n        $rootcontent.append($htmlcontent).append($contenthtml);\n        if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n        if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n        lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), true, false);\n        attdInfo = \"\";\n        $('#VIS_recordDetail' + window_No).show();\n        $('#VIS_btnComments' + window_No).click(function (e) {\n          saveComments(true, false, e);\n        });\n        $('#VIS_txtComments' + window_No).keyup(function (e) {\n          saveComments(true, false, e);\n        });\n        $('#VIS_viewAllComments' + window_No).click(function (e) {\n          if ($('#VIS_viewAllComments' + window_No).text() == VIS.Msg.getMsg('HideComments')) {\n            $('#VIS_viewMoreComments' + window_No).empty();\n            $('#VIS_viewMoreComments' + window_No).hide();\n            $('#VIS-tp-comments-input' + window_No).show();\n            $('#VIS_commentsMsg' + window_No).show();\n            $('#VIS_viewAllComments' + window_No).text(VIS.Msg.getMsg('ViewMoreComments'));\n            lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), true, false);\n          } else viewAll(VIS.Utility.Util.getValueOfInt(_mattachID), true, false);\n        });\n        $('#VIS_prtHistory' + window_No).find('i').click(function () {\n          finalPrint($printhtml.html());\n        });\n        $('#VIS_prevRecord' + window_No).click(function () {\n          if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n        });\n        $('#VIS_nextRecord' + window_No).click(function () {\n          if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n        });\n        $('#VIS_btnClose' + window_No).click(function () {\n          $('#VIS_recordDetail' + window_No).hide();\n          setContentHeight();\n        });\n      }\n    }\n    ;\n    function showTask(rID, UserName, window_No) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedTaskDetails\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        //async: false,\n        data: {\n          record_ID: rID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var attdInfo = \"\";\n          var _mattachID, $taskhtml;\n          if (result != null) {\n            var strApp = \"\";\n            var attInfo = result.AttendeeInfo;\n            taskClosed = result.IsTaskClosed;\n            _mattachID = VIS.Utility.Util.getValueOfString(result.AppointmentsInfo_ID);\n            if (attInfo != null && attInfo != \"\") {\n              names = VIS.dataContext.getJSONData(VIS.Application.contextUrl + \"AttachmentHistory/GetUser\", {\n                \"UserQry\": attInfo\n              }, null);\n              if (names != null && names.length > 0) {\n                strApp = \"\";\n                for (var k = 0; k < names.length; k++) {\n                  strApp += names[k] + \", \";\n                }\n                strApp = strApp.substring(0, strApp.length - 2);\n                attdInfo = strApp;\n              }\n            }\n            var prtyText, prtyTextColor;\n            if (VIS.Utility.Util.getValueOfString(result.PriorityKey) != '') {\n              if (result.PriorityKey == \"1\") {\n                prtyTextColor = \"color: #f60000;\";\n                prtyText = \"Urgent\";\n              } else if (result.PriorityKey == \"3\") {\n                prtyTextColor = \"color: #fb9300;\";\n                prtyText = \"High\";\n              } else if (result.PriorityKey == \"5\") {\n                prtyTextColor = \"color: #6f04e8;\";\n                prtyText = \"Medium\";\n              } else if (result.PriorityKey == \"7\") {\n                prtyTextColor = \"color: #03e5f3;\";\n                prtyText = \"Low\";\n              } else if (result.PriorityKey == \"9\") {\n                prtyTextColor = \"color: #42d819;\";\n                prtyText = \"Minor\";\n              }\n            }\n            if ($rootcontent.length < 1) {\n              $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailsPanel\"></div>');\n            }\n            $rootcontent.empty();\n            $htmlcontent = $('<div class=\"VIS-tp-borderBott\"><div class=\"VIS-contentHeadOuter\">' + '<div class= \"VIS-tp-recordIcon\" ><i class=\"vis vis-task\" title=\"task\"></i></div >' + '<div class=\"VIS-contentHead\"><div class=\"VIS-contentTitile\"><h6 class=\"mb-0\">' + VIS.Msg.getMsg(\"Task\") + '</h6><small>' + result.Subject + '</small></div>' + '<div class=\"align-items-center d-flex VIS-tp-rightIcons\"><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span>' + '<span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div></div></div></div>');\n            $taskhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\">' + '<div class=\"VIS-tp-taskcontTag\" >' + (result.IsTaskClosed ? '<span class=\"VIS-tp-taskTag\">' + VIS.Msg.getMsg(\"Closed\") + '</span>' : '') + '<table height=\"50px\" width=\"100%\">' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Priority\") + '</td><td>' + VIS.Msg.getMsg(\"Status\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td style=\"' + prtyTextColor + '\">' + prtyText + '</td><td>' + VIS.Utility.Util.getValueOfInt(result.TaskStatus) * 10 + '%</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"StartDate\") + '</td><td>' + VIS.Msg.getMsg(\"EndDate\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + new Date(result.StartDate).toLocaleString() + '</td><td>' + new Date(result.EndDate).toLocaleString() + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"ASSIGNEDTO\") + '</td><td>' + VIS.Msg.getMsg(\"Category\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + result.AssignedTo + '</td><td>' + result.CategoryName + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Result\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + result.Result + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Description\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + result.Description + '</td></tr>' + '<tr><td><div class=\"vis-float-left vis-frm-ls-top\"><input id=\"VIS_chkTaskComplete' + window_No + '\" value=\"1\" type=\"checkbox\" class=\"vis-float-left\"><label id=\"VIS_lblTaskComplete' + window_No + '\" for=\"chkTaskComplete\" class=\"wsp-task-from-inputLabel vis-float-left\" style=\"margin:0 0 0 5px;\">' + VIS.Msg.getMsg(\"Closed\") + '</label></div></td><td><div class=\"vis-float-right\"><a href=\"javascript:void(0)\" id=\"VIS_hlnktaskdone' + window_No + '\" class=\"vis-btn vis-btn-done vis-icon-doneButton vis-float-right vis-btnOk\"> <span class=\"vis-btn-ico vis-btn-done-bg vis-btn-done-border\"></span>' + VIS.Msg.getMsg(\"Done\") + '</a></div></td></tr>' + '</table>' + '</div>' + '</div>' + '<div id=\"VIS_viewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div>' + '<div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div>' + '</div>');\n            $printhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div id=\"VIS-tp-comments-input' + window_No + '\" class=\"VIS-tp-comments-input\">' + '<div class=\"VIS-tp-taskcontTag\" >' + (result.IsTaskClosed ? '<span class=\"VIS-tp-taskTag\">' + VIS.Msg.getMsg(\"Closed\") + '</span>' : '') + '<table height=\"50px\" width=\"100%\">' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"Priority\") + '</td><td>' + VIS.Msg.getMsg(\"Status\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td style=\"' + prtyTextColor + '\">' + result.Priority + '</td><td>' + VIS.Utility.Util.getValueOfInt(result.TaskStatus) * 10 + '%</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"StartDate\") + '</td><td>' + VIS.Msg.getMsg(\"EndDate\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + result.StartDate + '</td><td>' + result.EndDate + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td>' + VIS.Msg.getMsg(\"ASSIGNEDTO\") + '</td><td>' + VIS.Msg.getMsg(\"Category\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td>' + result.AssignedTo + '</td><td>' + result.CategoryName + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Result\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + result.Result + '</td></tr>' + '<tr class=\"VIS-call-col-header\"><td colspan=\"2\">' + VIS.Msg.getMsg(\"Description\") + '</td></tr>' + '<tr class=\"VIS-call-col-data\"><td colspan=\"2\">' + result.Description + '</td></tr>' + '</table>' + '</div>' + '</div>');\n            $footerhtml = $('<div id=\"VIS_viewMoreComments' + window_No + '\" style=\"display:none;\" class=\"VIS-tp-commentsPanel\"></div><div id=\"VIS_commentsdata' + window_No + '\"><div class=\"pr-0 m-0 VIS-tp-commentsField d-flex flex-column w-100\"><p id=\"VIS_viewAllComments' + window_No + '\" class=\"vis-attachhistory-view-comments\" > ' + VIS.Msg.getMsg('ViewMoreComments') + '</p><div class=\"vis-attachhistory-comments vis-feedMessage m-0\"><input id=\"VIS_txtComments' + window_No + '\" type=\"text\" placeholder=\"' + VIS.Msg.getMsg('TypeComment') + '\"></input><span id=\"VIS_btnComments' + window_No + '\" class=\"vis-attachhistory-comment-icon vis vis-sms\"></span></div></div>' + '</div>');\n            var $contenthtml = $('<div class=\"VIS-mail-header VIS-tp-recordDetail\"></div>');\n            $contenthtml.append($taskhtml); //.append($footerhtml);\n            $rootcontent.append($htmlcontent).append($contenthtml);\n            if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n            if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n            lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), true, false);\n            attdInfo = \"\";\n            $('#VIS_recordDetail' + window_No).show();\n            $('#VIS_btnComments' + window_No).click(function (e) {\n              saveComments(true, false, e);\n            });\n            $('#VIS_txtComments' + window_No).keyup(function (e) {\n              saveComments(true, false, e);\n            });\n            $('#VIS_viewAllComments' + window_No).click(function (e) {\n              if ($('#VIS_viewAllComments' + window_No).text() == VIS.Msg.getMsg('HideComments')) {\n                $('#VIS_viewMoreComments' + window_No).empty();\n                $('#VIS_viewMoreComments' + window_No).hide();\n                $('#VIS-tp-comments-input' + window_No).show();\n                $('#VIS_commentsMsg' + window_No).show();\n                $('#VIS_viewAllComments' + window_No).text(VIS.Msg.getMsg('ViewMoreComments'));\n                lastHistoryComment(VIS.Utility.Util.getValueOfInt(_mattachID), true, false);\n              } else viewAll(VIS.Utility.Util.getValueOfInt(_mattachID), true, false);\n            });\n            $('#VIS_prtHistory' + window_No).find('i').click(function () {\n              finalPrint($printhtml.html());\n            });\n            $('#VIS_prevRecord' + window_No).click(function () {\n              if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n            });\n            $('#VIS_nextRecord' + window_No).click(function () {\n              if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n            });\n            $('#VIS_btnClose' + window_No).click(function () {\n              $('#VIS_recordDetail' + window_No).hide();\n              setContentHeight();\n            });\n\n            //changes done by Emp Id:187\n            //After clicking on div if the task is closed it need to hide closed checkbox and Done \n            if (taskClosed) {\n              $taskhtml.find(\"#VIS_chkTaskComplete\" + window_No).hide();\n              $taskhtml.find(\"#VIS_hlnktaskdone\" + window_No).hide();\n              $taskhtml.find(\"#VIS_lblTaskComplete\" + window_No).hide();\n            }\n            // Task is updated when task is closed from tab panel\n            $taskhtml.find(\"#VIS_hlnktaskdone\" + window_No).on(\"click\", function (e) {\n              if ($lblTaskMsg != null) $lblTaskMsg.empty();\n              var t_title = result.Subject;\n              var t_ctgry = result.CategoryName;\n              var t_sdatetime = result.StartDate;\n              var t_edatetime = result.EndDate;\n              if (t_edatetime < t_sdatetime) {\n                $lblTaskMsg.append(VIS.Msg.getMsg(\"WSP_EndDateShouldBeGreaterThanStartDate\"));\n                return;\n              }\n              var t_desc = result.Description;\n              var t_result = result.Result;\n              var t_prtykey = result.PriorityKey;\n              var t_prty = result.Priority;\n              var t_sts = parseInt(result.TaskStatus);\n              var t_ststext = result.TaskStatus;\n              var t_isClosed = \"\";\n              var $chkTaskCmplte = $taskhtml.find(\"#VIS_chkTaskComplete\" + window_No).prop(\"checked\", true);\n              ;\n              if ($chkTaskCmplte.is(\":checked\")) {\n                t_isClosed = true;\n              } else {\n                t_isClosed = false;\n              }\n              var models = [];\n              var task_ID = result.AppointmentsInfo_ID;\n              var t_cntact_id = [];\n              WspSharedUser = [];\n              var Ad_UserID = 0;\n              var taskusrID = result.UserID;\n              if (taskusrID != null && taskusrID != 0) {\n                Ad_UserID = taskusrID;\n              } else {\n                Ad_UserID = VIS.context.getAD_User_ID();\n              }\n              models.push({\n                AppointmentsInfo_ID: task_ID,\n                Title: t_title,\n                Description: t_desc,\n                Start: t_sdatetime,\n                End: t_edatetime,\n                Categories: t_ctgry,\n                TaskStatus: t_sts,\n                PriorityKey: t_prtykey,\n                Ad_User_ID: Ad_UserID,\n                Contacts: t_cntact_id,\n                ContactsInfo: WspSharedUser,\n                isClosed: t_isClosed,\n                Result: t_result\n              });\n              if (t_title != \"\" && t_title.trim().length > 0) {\n                $.ajax({\n                  url: VIS.Application.contextUrl + 'WSP/Home/UpdateJson_Task',\n                  type: \"POST\",\n                  datatype: \"JSON\",\n                  contentType: \"application/json; charset=utf-8\",\n                  async: true,\n                  //data: { models: models },\n                  data: JSON.stringify({\n                    models: models\n                  }),\n                  success: function (result) {\n                    var data = JSON.parse(result);\n                    VIS.ADialog.info(\"WSP_TaskUpdated\", true, null);\n                    $taskhtml.find(\"#VIS_chkTaskComplete\" + window_No).hide();\n                    $taskhtml.find(\"#VIS_hlnktaskdone\" + window_No).hide();\n                    $taskhtml.find(\"#VIS_lblTaskComplete\" + window_No).hide();\n                  }\n                });\n              }\n            });\n          }\n        },\n        error: function (e) {}\n      });\n    }\n    ;\n    function showAttachment(ID, UserName, window_No) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedAttachmentDetails\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          record_ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var attchFile = '',\n            attachments = '';\n          if (result != null && result.length > 0) {\n            for (var i = 0; i < result.length; i++) {\n              var imgTag = '';\n              if (VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.doc' || VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.docx') {\n                imgTag = '<i class=\"vis vis-doc-word\"></i>'; //'<img src=\"./Areas/VIS/Images/word.png\" >';\n              } else if (VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.xls' || VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.xlsx') {\n                imgTag = '<i class=\"vis vis-doc-excel\"></i>'; //'<img src=\"./Areas/VIS/Images/excel.png\" >';\n              } else if (VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.ppt' || VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.pptx') {\n                imgTag = '<i class=\"vis vis-doc-pp\"></i>'; //'<img src=\"./Areas/VIS/Images/ppt.png\" >';\n              } else if (VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.pdf') {\n                imgTag = '<i class=\"vis vis-doc-pdf\"></i>'; //'<img src=\"./Areas/VIS/Images/pdf.png\" >';\n              } else if (VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.txt') {\n                imgTag = '<i class=\"vis vis-doc-text\"></i>'; //'<img src=\"./Areas/VIS/Images/text.png\" >';\n              } else if (VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.png' || VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.jpg' || VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.jpeg' || VIS.Utility.Util.getValueOfString(result[i].FileType).toString().toLower() == '.gif') {\n                imgTag = '<i class=\"vis vis-doc-img\"></i>'; //'<img src=\"./Areas/VIS/Images/image.png\" >';\n              } else {\n                imgTag = '<i class=\"vis vis-doc-img\"></i>'; //'<img src=\"./Areas/VIS/Images/text.png\" >';\n              }\n              attachments += '<div class=\"VIS-tp-recordWrap\"><div class=\"VIS-tp-attachIcon\">' + imgTag + '</div><div data-filename=\"' + VIS.Utility.Util.getValueOfString(result[i].FileName) + '\" data-attid=\"' + VIS.Utility.Util.getValueOfString(result[i].AD_Attachment_ID) + '\" data-id=\"' + VIS.Utility.Util.getValueOfString(result[i].ID) + '\" class=\"VIS-tp-attachInfo\" ><h6>' + VIS.Utility.Util.getValueOfString(result[i].FileName) + '</h6><small>' + VIS.Utility.Util.getValueOfString(result[i].FileSize) + ' kb</small></div>' + '<div class=\"VIS-tp-recordInfoRight\"><span class=\"VIS-tp-dateTime\">' + new Date(result[i].CreatedOn).toLocaleString() + '</span><small>By: ' + VIS.Utility.Util.getValueOfString(result[i].CreatedBy) + '</small></div></div>';\n            }\n          }\n          if ($rootcontent.length < 1) {\n            $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailsPanel\"></div>');\n          }\n          $rootcontent.empty();\n          $htmlcontent = $('<div class=\"VIS-contentHeadOuter VIS-tp-borderBott\"><div class= \"VIS-tp-recordIcon\" ><i class=\"vis vis-attachmentx\"></i></div><div class=\"VIS-contentHead\"><span class=\"VIS-letter-header\">' + VIS.Msg.getMsg('Attachment') + '</span></div><div class=\"align-items-center d-flex VIS-tp-rightIcons\" ><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span><span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div></div>');\n          $printhtml = $('<div class=\"VIS-tp-contentdiv\">' + '<div class=\"VIS-tp-contentWrap VIS-tp-attachmentContent\">' + attachments + '</div>' + '</div>');\n          var $contenthtml = $('<div class=\"VIS-mail-header VIS-tp-recordDetail\"></div>');\n          $contenthtml.append($printhtml);\n          $rootcontent.append($htmlcontent).append($contenthtml);\n          if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n          if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n          attdInfo = \"\";\n          $('#VIS_recordDetail' + window_No).show();\n          $(\".VIS-tp-attachInfo\").click(function (e) {\n            $('.VIS-tp-contentWrap').css({\n              \"cursor\": \"wait\"\n            });\n            downLoadHistoryAttach(e);\n          });\n          $('#VIS_prtHistory' + window_No).find('i').click(function () {\n            finalPrint($printhtml.html());\n          });\n          $('#VIS_prevRecord' + window_No).click(function () {\n            if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n          });\n          $('#VIS_nextRecord' + window_No).click(function () {\n            if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n          });\n          $('#VIS_btnClose' + window_No).click(function () {\n            $('#VIS_recordDetail' + window_No).hide();\n            setContentHeight();\n          });\n        }\n      });\n    }\n    ;\n    function showChat(ID, UserName, window_No) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/GetSelectedChatDetails\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          record_ID: ID\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          var senderImg = '',\n            receptorImg = '',\n            chatData = '';\n          var isDisplayChatbox = false;\n          var rec_ID = 0;\n          var _createdDt, createdDt;\n          var loginUserName = VIS.context.getAD_User_Name();\n          if (result != null && result.length > 0) {\n            var isSender = '';\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].Created != null && result[i].Created != '') {\n                var currentDt = new Date();\n                _createdDt = new Date(result[i].Created.toString());\n                var hours = _createdDt.getHours();\n                var mins = _createdDt.getMinutes();\n                var mid = ' AM';\n                if (hours == 0) {\n                  hours = 12;\n                } else if (hours < 12) {\n                  hours = hours;\n                } else if (hours == 12) {\n                  hours = hours;\n                  mid = ' PM';\n                } else if (hours > 12) {\n                  hours = hours - 12;\n                  mid = ' PM';\n                }\n                createdDt = _createdDt.getMonth() + '/' + _createdDt.getDate() + '/' + _createdDt.getFullYear() + ' | ' + (hours >= 10 ? hours : '0' + hours) + ':' + (mins >= 10 ? mins : '0' + mins) + mid;\n              }\n              if (i == 0) {\n                chatData = '<div class=\"VIS-tp-contentWrap VIS-tp-attachmentContent\">';\n              }\n              if (i == 0 || i == VIS.Utility.Util.getValueOfInt(result.length) - 1) {\n                if (_createdDt.getDate() == currentDt.getDate() && _createdDt.getMonth() == currentDt.getMonth() && _createdDt.getFullYear() == currentDt.getFullYear()) isDisplayChatbox = true;\n              }\n              rec_ID = VIS.Utility.Util.getValueOfInt(result[i].Record_ID);\n              if (loginUserName.toString().toLower() == result[i].UserName.toString().toLower())\n                //|| (i > 0 && result[i].UserName.toString() != result[i - 1].UserName.toString())\n                {\n                  chatData += '<div class=\"VIS-tp-recordWrap VIS-tp-msgSend\">' + '<div class=\"VIS-tp-userImg\" >' + result[i].UserImage + '</div>' + '<div class=\"VIS-tp-recordInfo pr-0\">' + '<div class=\"VIS-tp-chatInfo\"><h6>' + result[i].UserName + '</h6><span>' + _createdDt.toLocaleString() + '</span></div>' + '<p class=\"VIS-tp-message\">' + result[i].CharacterData + '</p></div></div >';\n                } else {\n                chatData += '<div class=\"VIS-tp-recordWrap VIS-tp-msgRecevied\">' + '<div class=\"VIS-tp-userImg\" >' + result[i].UserImage + '</div>' + '<div class=\"VIS-tp-recordInfo pr-0\">' + '<div class=\"VIS-tp-chatInfo\"><h6>' + result[i].UserName + '</h6><span>' + _createdDt.toLocaleString() + '</span></div>' + '<p class=\"VIS-tp-message\">' + result[i].CharacterData + '</p></div></div>';\n              }\n              if (i == result.length - 1) chatData += '</div>';\n            }\n          }\n          if ($rootcontent.length < 1) {\n            $rootcontent = $('<div id=\"VIS_recordDetail' + window_No + '\" class=\"VIS-tp-detailsPanel\"></div>');\n          }\n          $rootcontent.empty();\n          var chatboxhtml = '';\n          if (isDisplayChatbox) {\n            chatboxhtml = '<div class=\"VIS-chatBoxWrap\"><div class=\"VIS-chat-box\"><textarea id=\"VIS_chatBox' + window_No + '\" class=\"VIS-chat-msgbox\" style=\"height:46px;\" maxlength=\"500\"></textarea></div>' + '<div class=\"VIS-chat-send-div\"><div style=\"float:left;\"></div><div class=\"VIS-chat-send\"><i class=\"fa fa-paper-plane VIS-tp-chatBtn\" data-chid=\"' + VIS.Utility.Util.getValueOfInt(ID).toString() + '\" data-recid=\"' + rec_ID.toString() + '\" id=\"VIS_imgSend' + window_No + '\" ></i><i id=\"VIS_imgCancel' + window_No + '\" class=\"fa fa-times-circle VIS-tp-chatBtn\"></i></div></div></div>';\n          }\n          ;\n          $htmlcontent = $('<div class=\"VIS-contentHeadOuter VIS-tp-borderBott\" ><div class= \"VIS-tp-recordIcon\" ><i class=\"vis vis-chat\"></i></div><div class=\"VIS-contentHead\"><span class=\"VIS-letter-header\">' + VIS.Msg.getMsg('Chat') + '</span></div><div class=\"align-items-center d-flex VIS-tp-rightIcons\" ><span id=\"VIS_prtHistory' + window_No + '\"><i class=\"vis vis-print\" title=\"Print\"></i></span><span><i id=\"VIS_prevRecord' + window_No + '\" class=\"fa fa-arrow-left\"></i></span><span><i id=\"VIS_nextRecord' + window_No + '\" class=\"fa fa-arrow-right\"></i></span><span class=\"VIS-close-btn\" id=\"VIS_btnClose' + window_No + '\"><i class=\"vis vis-cross\"></i></span></div></div>');\n          $printhtml = $('<div class=\"VIS-tp-contentdiv VIS-tp-contentPanel\">' + '<div class=\"' + (isDisplayChatbox ? 'VIS-chatContentWrap' : '') + '\" >' + chatData + '</div>');\n          $footerhtml = $(chatboxhtml + '</div>');\n          var $contenthtml = $('<div class=\"VIS-mail-header VIS-tp-recordDetail\"></div>');\n          $contenthtml.append($printhtml).append($footerhtml);\n          $rootcontent.append($htmlcontent).append($contenthtml);\n          if (!$root.html().toString().contains('VIS_recordDetail' + window_No)) $root.append($rootcontent);\n          if (!$root.html().toString().contains('VIS_pagingHtml' + window_No)) $root.append($paginghtml);\n          attdInfo = \"\";\n          $('#VIS_recordDetail' + window_No).show();\n          $('#VIS_imgSend' + window_No).click(function (e) {\n            saveChat(e);\n          });\n          $('#VIS_imgCancel' + window_No).click(function (e) {\n            $('#VIS_chatBox' + window_No).val('');\n          });\n          $('#VIS_prtHistory' + window_No).find('i').click(function () {\n            finalPrint($printhtml.html());\n          });\n          $('#VIS_prevRecord' + window_No).click(function () {\n            if (_selectedRecId > 0) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) - 1, window_No);\n          });\n          $('#VIS_nextRecord' + window_No).click(function () {\n            if (_selectedRecId < VIS.Utility.Util.getValueOfInt(totalRecords) - 1) NavigateRecord(VIS.Utility.Util.getValueOfInt(_selectedRecId) + 1, window_No);\n          });\n          $('#VIS_btnClose' + window_No).click(function () {\n            $('#VIS_recordDetail' + window_No).hide();\n            setContentHeight();\n          });\n        }\n      });\n    }\n    ;\n    function DurationCalculator(time) {\n      var hr = ~~(time / 3600);\n      var min = ~~(time % 3600 / 60);\n      var sec = time % 60;\n      var sec_min = \"\";\n      if (hr > 0) {\n        sec_min += \"\" + hrs + \":\" + (min < 10 ? \"0\" : \"\");\n      }\n      sec_min += \"\" + min + \":\" + (sec < 10 ? \"0\" : \"\");\n      sec_min += \"\" + sec;\n      return sec_min + ' ' + VIS.Msg.getMsg('VA048_Minutes');\n    }\n    function finalPrint(html) {\n      var mywindow = window.open();\n      var link = '<link rel=\"stylesheet\" href=\"' + VIS.Application.contextUrl + 'Areas/VIS/Content/VIS.all.min.css\" />';\n      mywindow.document.write(link + html);\n      setTimeout(function () {\n        mywindow.print();\n        mywindow.close();\n      }, 300);\n    }\n    ;\n    function downLoadAllAttach(ID) {\n      if (ID == null || ID == 0) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/DownloadAllAttachments\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          ID: ID,\n          Name: name\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result != null && result != \"\") {\n            var url = VIS.Application.contextUrl + \"TempDownload/\" + result;\n            window.open(url);\n          } else {\n            VIS.ADialog.error(\"AttachmentNotFound\");\n          }\n        }\n      });\n    }\n    ;\n    function downLoadHistoryAttach(e) {\n      var target = e.target;\n      var name = '';\n      var ID = '';\n      var AttID = '';\n      if ($(target).is('div')) {\n        name = $(target).data('filename');\n        AttID = $(target).data('attid');\n        ID = $(target).data('id');\n      } else if ($(target).is('h6')) {\n        name = $(target).parent().data('filename');\n        AttID = $(target).parent().data('attid');\n        ID = $(target).parent().data('id');\n      }\n      if (ID == null || ID == 0) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/DownloadHistoryAttachment\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          AttID: AttID,\n          ID: ID,\n          Name: name\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result != null && result != \"\") {\n            var url = VIS.Application.contextUrl + \"TempDownload/\" + result;\n            $('#tblAttach').css({\n              \"cursor\": \"default\"\n            });\n            window.open(url);\n          } else {\n            VIS.ADialog.error(\"AttachmentNotFound\");\n          }\n        }\n      });\n    }\n    ;\n    function downLoadAttach(ID, name) {\n      if (ID == null || ID == 0) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/HistoryDetailsData/DownloadAttachment\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          ID: ID,\n          Name: name\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result != null && result != \"\") {\n            var url = VIS.Application.contextUrl + \"TempDownload/\" + result;\n            window.open(url);\n          } else {\n            VIS.ADialog.error(\"AttachmentNotFound\");\n          }\n        }\n      });\n    }\n    ;\n    function downLoadAttachCall(ID, AttID, name) {\n      if (ID == null || ID == 0) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"AttachmentHistory/DownloadAttachmentCall\",\n        datatype: \"json\",\n        type: \"get\",\n        cache: false,\n        data: {\n          AttID: AttID,\n          ID: ID,\n          Name: name\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result != null && result != \"\") {\n            var url = VIS.Application.contextUrl + \"TempDownload/\" + result;\n            window.open(url);\n          } else {\n            VIS.ADialog.error(\"AttachmentNotFound\");\n          }\n        }\n      });\n    }\n    ;\n    function panelAction(_Record_ID, _AD_Table_ID, detailHtml, titleText, attachID, data, e) {\n      var email = null;\n      var target = e.target;\n      var mailto, mailcc, mailbcc;\n      if ($(target).is('i') && (data == \"R\" || data == \"RA\")) {\n        mailto = $(target).data('mailto');\n        mailcc = $(target).data('mailcc');\n        mailbcc = $(target).data('mailbcc');\n      }\n      if (data == \"R\" || data == \"RA\") {\n        email = new VIS.Email(mailto, null, null, _Record_ID, true, true, _AD_Table_ID, detailHtml, 'RE: ' + VIS.Utility.Util.getValueOfString(titleText), attachID);\n      } else if (data == \"F\") {\n        email = new VIS.Email('', null, null, _Record_ID, true, true, _AD_Table_ID, detailHtml, 'FW: ' + VIS.Utility.Util.getValueOfString(titleText), attachID);\n      }\n      var c = new VIS.CFrame();\n      c.setName(VIS.Msg.getMsg(\"EMail\"));\n      c.setTitle(VIS.Msg.getMsg(\"EMail\"));\n      c.hideHeader(true);\n      c.setContent(email);\n      c.show();\n      if (data == \"RA\") {\n        email.showCcBccMails(mailcc.replace(/,/g, ''), mailbcc.replace(/,/g, ''));\n      }\n      email.initializeComponent();\n    }\n    ;\n    function saveChat(e) {\n      var target = e.target;\n      var rec_ID = 0,\n        ch_id = 0;\n      _AD_Table_ID = 876;\n      if ($(target).is('i')) {\n        rec_ID = $(target).data('recid');\n        ch_id = $(target).data('chid');\n      }\n      var text = $('#VIS_chatBox' + window_No).val();\n      if ($.trim(text) == \"\" || text == \"\" || text == null) {\n        VIS.ADialog.info(\"EnterData\");\n        if (e != undefined) {\n          e.preventDefault();\n        }\n        return false;\n      }\n      var infoName = 'info';\n      var infoDisplay = 'test';\n      var chat = new VIS.Chat(rec_ID, ch_id, _AD_Table_ID, infoName + \": \" + infoDisplay, this.windowNo);\n      chat.prop.ChatText = text;\n      chat.onClose = function () {};\n      VIS.dataContext.saveChat(chat.prop);\n      showChat(ch_id, '', window_No);\n    }\n    ;\n    function viewAll(record_ID, isAppointment, isCall) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"AttachmentHistory/ViewChatonHistory\",\n        datatype: \"json\",\n        type: \"POST\",\n        cache: false,\n        data: {\n          record_ID: record_ID,\n          isAppointment: isAppointment,\n          isCall: isCall\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          createCommentsSection(result, isAppointment, isCall);\n        },\n        error: function (data) {\n          VIS.ADialog.error(\"RecordNotSaved\");\n        }\n      });\n    }\n    ;\n    function saveComments(isAppointment, isCall, e) {\n      var target = e.target;\n      if (e.keyCode != undefined) {\n        if (e.keyCode != 13) {\n          return;\n        }\n      }\n      if (e.keyCode == undefined && !$(target).hasClass(\"vis-attachhistory-comment-icon\")) {\n        return;\n      }\n      var ID = 0;\n      ID = $('#rowId' + _selectedRecId).data(\"rid\");\n      if (ID == 0) {\n        return;\n      }\n      var comme = '';\n      comme = $('#VIS_txtComments' + window_No).val();\n      if (comme.length == 0) {\n        return;\n      }\n      $.ajax({\n        url: VIS.Application.contextUrl + \"AttachmentHistory/SaveComment\",\n        datatype: \"json\",\n        type: \"POST\",\n        cache: false,\n        data: {\n          ID: ID,\n          Text: comme,\n          isAppointment: isAppointment,\n          isCall: isCall\n        },\n        success: function (data) {\n          // var rID = $('#rowId' + recId).data('rid');\n          var result = JSON.parse(data);\n          var updateComment = true;\n          var $commenthtml;\n          var userimg;\n          var value;\n          if (result != null) {\n            value = result.length - 1;\n          }\n          if (result[value].UserImage != \"VIS_NoRecordFound\" && result[value].UserImage != \"VIS_FileDoesn'tExist\" && result[value].UserImage != null) {\n            userimg = '<img  class=\"userAvatar-Feeds\"  src=\"' + result[value].UserImage + '?' + new Date() + '\">';\n          } else {\n            userimg = '<i class=\"fa fa-user userAvatar-Feeds\"></i>';\n          }\n          $('#VIS_txtComments' + window_No).val(\"\");\n          if ($('#VIS_commentsdata' + window_No).html().contains(\"VIS_commentsMsg\")) {\n            $commenthtml = $('<div class= \"vis-attachhistory-comment-detail VIS-feedDetails-cmnt d-flex\" >' + userimg + '<div class=\"vis-attachhistory-comment-text ml-0\">' + '<div class=\"d-flex justify-content-between VIS-tp-commentHead\"><h6 class=\"VIS-attachhistory-comment-text\">Me </h6><div class=\"vis-attachhistory-comment-dateTime\"><p>' + new Date().toLocaleString().replace(\",\", \"\").replace(/:.. /, \" \") + '</p></div></div>' + '<p class= \"VIS-attachhistory-comment-text\" >' + comme + '</p></div>' + '</div>');\n            $('#VIS_commentsMsg' + window_No).empty();\n            $('#VIS_commentsMsg' + window_No).append($commenthtml);\n            if ($('#VIS_viewMoreComments' + window_No).is(':visible')) {\n              $('#VIS_viewMoreComments' + window_No).append($commenthtml);\n            }\n            $('#VIS_commentsdata' + window_No).show();\n            $('#VIS_commentsMsg' + window_No).show();\n          } else {\n            $commenthtml = $('<div id=\"VIS_commentsMsg' + window_No + '\"  class=\"vis-attachhistory-comment-data mb-0 VIS-tp-commentData\">' + '<div class= \"vis-attachhistory-comment-detail VIS-feedDetails-cmnt d-flex\" >' +\n            // '<i class=\"fa fa-user userAvatar-Feeds\"></i>' +\n            userimg + '<div class=\"vis-attachhistory-comment-text ml-0\">' + '<div class=\"d-flex justify-content-between VIS-tp-commentHead\"><h6 class=\"VIS-attachhistory-comment-text\">Me </h6><div class=\"vis-attachhistory-comment-dateTime\"><p>' + new Date().toLocaleString().replace(\",\", \"\").replace(/:.. /, \" \") + '</p></div></div>' + '<p class= \"VIS-attachhistory-comment-text\" >' + comme + '</p></div>' + '</div></div>');\n            $('#VIS_commentsdata' + window_No).prepend($commenthtml);\n            if ($('#VIS_viewMoreComments' + window_No).is(':visible')) {\n              $('#VIS_viewMoreComments' + window_No).append($commenthtml);\n            }\n          }\n        },\n        error: function (data) {\n          VIS.ADialog.error(\"RecordNotSaved\");\n        }\n      });\n    }\n    ;\n    function updateComments(str, result) {\n      str += ' <div class=\"vis-attachhistory-comment-data  mb-0 VIS-tp-commentData\"><div class=\"vis-attachhistory-comment-detail VIS-feedDetails-cmnt d-flex\">';\n      if (result.UserImage != \"VIS_NoRecordFound\" && result.UserImage != \"VIS_FileDoesn'tExist\" && result.UserImage != null) {\n        str += '<img  class=\"userAvatar-Feeds\"  src=\"' + result.UserImage + '?' + new Date() + '\">';\n      } else {\n        str += '<i class=\"fa fa-user userAvatar-Feeds\"></i>';\n      }\n      str += '<div class=\"vis-attachhistory-comment-text ml-0\">';\n      if (result.CreatedBy == VIS.Env.getCtx().getAD_User_ID()) {\n        str += '<div class=\"d-flex justify-content-between VIS-tp-commentHead\"><h6 class=\"VIS-attachhistory-comment-text\">' + VIS.Msg.getMsg(\"Me\") + \" </h6>\";\n      } else {\n        str += '<div class=\"d-flex justify-content-between VIS-tp-commentHead\"><h6 class=\"VIS-attachhistory-comment-text\">' + result.UserName + \"</h6>\";\n      }\n      str += '<div class=\"vis-attachhistory-comment-dateTime\"><p>' + new Date(result.Created).toLocaleString() + '</p>' + '</div></div>' + ' <p class=\"VIS-attachhistory-comment-text\">' + result.CharacterData + '</p>' + '</div></div></div>';\n      return str;\n    }\n    ;\n    function createCommentsSection(result, isappointment, iscall) {\n      if (result.length > 0) {\n        var str = '<div class=\"vis-attachhistory-comments-container\">';\n        for (var i = 0; i < result.length; i++) {\n          str = updateComments(str, result[i]);\n        }\n        str += '</div>';\n        $('#VIS_viewMoreComments' + window_No).show();\n        $('#VIS-tp-comments-input' + window_No).hide();\n        $('#VIS_viewMoreComments' + window_No).empty();\n        $('#VIS_commentsMsg' + window_No).hide();\n        $('#VIS_viewAllComments' + window_No).text(VIS.Msg.getMsg('HideComments'));\n        $('#VIS_viewMoreComments' + window_No).height($root.find('.VIS-tp-contentdiv').height() - $('#VIS_commentsdata' + window_No).height());\n        $('#VIS_viewMoreComments' + window_No).append(str);\n      }\n      //else\n      //    VIS.ADialog.error(\"NoRecordFound\");\n    }\n    ;\n    function updateRecentComments(str, result) {\n      str += '<div class=\"vis-attachhistory-comment-detail VIS-feedDetails-cmnt d-flex\">';\n      if (result.UserImage != \"VIS_NoRecordFound\" && result.UserImage != \"VIS_FileDoesn'tExist\" && result.UserImage != null) {\n        str += '<img  class=\"userAvatar-Feeds\"  src=\"' + result.UserImage + '?' + new Date() + '\">';\n      } else {\n        str += '<i class=\"fa fa-user userAvatar-Feeds\"></i>';\n      }\n      str += '<div class=\"vis-attachhistory-comment-text ml-0\">';\n      if (result.CreatedBy == VIS.Env.getCtx().getAD_User_ID()) {\n        str += '<div class=\"d-flex justify-content-between VIS-tp-commentHead\"><h6 class=\"VIS-attachhistory-comment-text\">' + VIS.Msg.getMsg(\"Me\") + \" </h6>\";\n      } else {\n        str += '<div class=\"d-flex justify-content-between VIS-tp-commentHead\"><h6 class=\"VIS-attachhistory-comment-text\">' + result.UserName + \"</h6>\";\n      }\n      str += '<div class=\"vis-attachhistory-comment-dateTime\"><p>' + new Date(result.Created).toLocaleString() + '</p>' + '</div></div>' + ' <p class=\"VIS-attachhistory-comment-text\">' + result.CharacterData + '</p>' + '</div></div > ';\n      if (!$('#VIS_commentsdata' + window_No).html().contains(\"VIS_commentsMsg\")) {\n        str = '<div id=\"VIS_commentsMsg' + window_No + '\" class=\"vis-attachhistory-comment-data  mb-0 VIS-tp-commentData\">' + str + \"</div >\";\n      }\n      return str;\n    }\n    ;\n    function lastHistoryComment(recid, isAppointment, isCall) {\n      $.ajax({\n        url: VIS.Application.contextUrl + \"AttachmentHistory/ViewChatonLastHistory\",\n        datatype: \"json\",\n        type: \"POST\",\n        cache: false,\n        data: {\n          record_ID: recid,\n          isAppointment: isAppointment,\n          isCall: isCall\n        },\n        success: function (data) {\n          var result = JSON.parse(data);\n          if (result.length > 0) {\n            var cmt = '';\n            cmt = updateRecentComments(cmt, result[0]);\n            $('#VIS_commentsMsg' + window_No).empty();\n            if ($('#VIS_commentsdata' + window_No).html().contains(\"VIS_commentsMsg\")) {\n              $('#VIS_commentsMsg' + window_No).prepend(cmt);\n            } else $('#VIS_commentsdata' + window_No).prepend(cmt);\n          }\n        }\n      });\n    }\n    ;\n    this.disposeComponent = function () {\n      this.record_ID = 0;\n      this.windowNo = 0;\n      this.curTab = null;\n      this.rowSource = null;\n      this.panelWidth = null;\n      _gridCtrl = null;\n      $root.remove();\n      $root = null;\n      window_No = 0;\n    };\n  }\n  ;\n\n  /**      * Invoked when user click on panel icon      */\n  HistoryDetailsTabPanel.prototype.startPanel = function (_window_No, curTab) {\n    this.windowNo = _window_No;\n    this.curTab = curTab;\n    this.init();\n    window_No = _window_No;\n    this.table_ID = curTab.getAD_Table_ID();\n  };\n\n  /**          * This function will execute when user navigate  or refresh a record          */\n  HistoryDetailsTabPanel.prototype.refreshPanelData = function (recordID, selectedRow) {\n    this.record_ID = recordID;\n    this.selectedRow = selectedRow;\n    this.update(recordID);\n  };\n\n  /**      * Fired When Size of panel Changed      */\n  HistoryDetailsTabPanel.prototype.sizeChanged = function (width) {\n    this.panelWidth = width;\n  };\n\n  /**      * Dispose Component      */\n  HistoryDetailsTabPanel.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  /* * Fully qualified class name     */\n  VIS.HistoryDetailsTabPanel = HistoryDetailsTabPanel;\n})();\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/tabpanels/HistoryDetailsTabPanel.js?")},"./Areas/VIS/Scripts/tabpanels/bipanel.js":()=>{eval('VIS = window.VIS || {};\n(function () {\n  function BiPanel() {\n    this.record_ID = 0;\n    this.windowNo = 0;\n    this.curTab = null;\n    this.selectedRow = null;\n    this.panelWidth;\n    this.extraInfo = null;\n    var $root;\n    var iFrame;\n    this.init = function () {\n      $root = $(\'<div style="height:100%;width:100%"></div>\');\n      if (window.VA037) {\n        iFrame = $(\'<iframe height=100%; width="100%"; frameborder="0" ></iframe>\');\n        $root.html(iFrame);\n      } else {\n        var $span = $(\'<span class="vis-bi-tab-panel">\' + VIS.Msg.getMsg("PleaseInstallBIReportTool") + \'</span>\');\n        $root.append($span);\n      }\n    };\n    this.update = function (record_ID) {\n      loadSession(record_ID);\n    };\n    this.getRoot = function () {\n      return $root;\n    };\n    var that = this;\n    var loadSession = function (record_ID) {\n      if (!iFrame) return;\n      //$root.empty();VIS.Utility.encodeText(mails)\n      var extraInfo = that.extraInfo;\n      var parm = extraInfo.match(/\\@.+?\\@/g);\n      if (parm) {\n        for (var i = 0; i < parm.length; i++) {\n          var key = parm[i].replaceAll("@", "");\n          if (VIS.Env.getCtx().getContext(key).length > 0) {\n            key = VIS.Env.getCtx().getContext(key);\n          } else if (VIS.Env.getCtx().getContext(that.windowNo, key).length > 0) {\n            key = VIS.Env.getCtx().getContext(that.windowNo, key);\n          } else if (VIS.Env.getCtx().getContext(that.windowNo, that.curTab().getTabNo(), key).length > 0) {\n            key = VIS.Env.getCtx().getContext(that.windowNo, that.curTab().getTabNo(), key);\n          }\n          extraInfo = extraInfo.replaceAll(parm[i], key);\n        }\n      }\n      var _src = VIS.Application.contextUrl + "BiPanel/GetUserBILogin?recID=" + record_ID + "&extraInfo=" + window.encodeURIComponent(extraInfo);\n      //Frame = $(\'<iframe height=100%; width="100%"; frameborder="0" ></iframe>\');\n      //$root.html(\'<iframe src="\'+_src+\'"; height=100%; width="100%"; frameborder="0" ></iframe>\');\n      iFrame.prop(\'src\', _src);\n    };\n    this.disposeComponent = function () {\n      if (iFrame) iFrame.remove();\n      $root.remove();\n      iFrame = null;\n      $root = null;\n    };\n  }\n  ;\n\n  /**\r\n   *\tInvoked when user click on panel icon\r\n   */\n  BiPanel.prototype.startPanel = function (windowNo, curTab, extraInfo) {\n    this.windowNo = windowNo;\n    this.curTab = curTab;\n    this.extraInfo = extraInfo;\n    this.init();\n  };\n\n  /**\r\n       *\tThis function will execute when user navigate  or refresh a record\r\n       */\n  BiPanel.prototype.refreshPanelData = function (recordID, selectedRow) {\n    this.record_ID = recordID;\n    this.selectedRow = selectedRow;\n    this.update(recordID);\n  };\n\n  /**\r\n   *\tFired When Size of panel Changed\r\n   */\n  BiPanel.prototype.sizeChanged = function (width) {\n    this.panelWidth = width;\n  };\n\n  /**\r\n   *\tDispose Component\r\n   */\n  BiPanel.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  /*\r\n  * Fully qualified class name\r\n  */\n  VIS.BiPanel = BiPanel;\n})();\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/tabpanels/bipanel.js?')},"./Areas/VIS/Scripts/tabpanels/surveyPanel.js":()=>{eval("VIS = window.VIS || {};\n(function () {\n  function surveyPanel() {\n    this.record_ID = 0;\n    this.windowNo = 99999;\n    this.curTab = null;\n    this.selectedRow = null;\n    this.panelWidth;\n    this.extraInfo = null;\n    this.isCheckListFill = false;\n    var self = this;\n    var $root;\n    var questionSection = null;\n    var responseSection = null;\n    var _AD_Window_ID = 0;\n    var _AD_Tab_ID = 0;\n    var _AD_Table_ID = 0;\n    var _AD_WF_Activity_ID = 0;\n    var iFrame;\n    var IsMandatoryAll = false;\n    var pageSize = 0;\n    var Limit = 0;\n    var AD_SurveyAssignment_ID = 0;\n    var AD_SurveyResponse_ID = 0;\n    var ResponseCount = 0;\n    var userResponse = {};\n    var userResIdx = 0;\n    var isSelfShow = true;\n    var surveyTab = null;\n    var $clickHere = '<a href=\"javascript:;\">' + VIS.Msg.getMsg(\"VIS_ClickHere\") + '</a>';\n    var bsyDiv = $('<div class=\"vis-busyindicatorouterwrap\"><div class=\"vis-busyindicatorinnerwrap\"><i class=\"vis-busyindicatordiv\"></i></div></div>');\n    var setBusy = function (isBusy) {\n      bsyDiv.css(\"display\", isBusy ? 'block' : 'none');\n    };\n    var h = null;\n    var ht = null;\n    this.init = function () {\n      setBusy(false);\n      $root = $('<div></div>').append(bsyDiv);\n      // h = $('.vis-ad-w-p-ap-tp-o-b-content').height() - 19;\n      h = VIS.Env.getScreenHeight() - 230;\n      if (self.curTab.getIsHeaderPanel()) {\n        h = h - VIS.Utility.Util.getValueOfInt(self.curTab.getHeaderHeight().replace('px', ' ')) - 10;\n      }\n      if (!h || h < 0) {\n        h = $('.divWorkflowActivity').height() - 19;\n      }\n      if (!h) {\n        h = 100 + '%';\n        ht = 100 + '%';\n      } else {\n        ht = h - 38 + 'px';\n        h = h + 'px';\n      }\n      var tab = $('<div class=\"vis-surveyTab\">' + '<div class=\"vis-tabPrimary\">' + '<ul class=\"nav vis-primarySection nav-tabs mb-1\" id=\"surveyTab_' + self.windowNo + '\" role=\"tablist\">' + '<li class=\"nav-item vis-firstResLink  text-center \">' + '  <a' + '    class=\"nav-link active quesTab text-center\"' + '    id=\"home-tab\"' + '    data-toggle=\"tab\"' + '    href=\"#quesSec_' + self.windowNo + '\"' + '    >' + VIS.Msg.getMsg(\"VIS_Questions\") + '</a>' + '</li>' + '<li class=\"nav-item text-center\" >' + '  <a style=\"display:none\"' + '    class=\"nav-link respTab text-center\"' + '    id=\"profile-tab\"' + '    data-toggle=\"tab\"' + '    href=\"#resp_' + self.windowNo + '\"' + '    >' + VIS.Msg.getMsg(\"Response\") + '<span class=\"badge badge-light responseCount' + (VIS.Application.isRTL ? \" mr-1\" : \" ml-1\") + '\">0</span></a>' + '</li>' + '</ul>' + '<div class=\"tab-content\">' + '<div class=\"tab-pane fade show active\" style=\"width:100%;\" id=\"quesSec_' + self.windowNo + '\">' + '<div class=\"align-items-center d-flex justify-content-center vis-displayNone\" style=\"height:' + ht + '\" id=\"quesMessage_' + self.windowNo + '\"></div>' + '<div style=\"height:' + ht + ';overflow-y:auto !important;\" id=\"ques_' + self.windowNo + '\"></div>' + '</div>' + '<div class=\"tab-pane fade mt-2\" style=\"height:' + ht + ';width:100%;overflow:auto !important;\" id=\"resp_' + self.windowNo + '\">' + '<div class=\"d-flex align-items-center justify-content-between mr-2 ml-2\">' + '<div class=\"d-flex align-items-center ' + (VIS.Application.isRTL ? \" ml-1\" : \" mr-1\") + '\">' + '<span class=\"d-inline-block ' + (VIS.Application.isRTL ? \" ml-1\" : \" mr-1\") + '\">' + VIS.Msg.getMsg(\"SelectUser\") + '</span>' + '<select class=\"w-100\"></select>' + '</div> ' + '<div class=\"align-items-center d-flex\"> ' + '<span class=\"' + (VIS.Application.isRTL ? \"ml-1\" : \"mr-1\") + ' \">' + VIS.Msg.getMsg(\"Response\") + ':</span>' + '<span class=\"align-items-center d-flex\">' + '<button class=\"vis-cusPagination prev\">' + '<i class=\"fa fa-chevron-circle-' + (VIS.Application.isRTL ? \"right ml-1\" : \"left mr-1\") + ' \" aria-hidden=\"true\"></i>' + '</button>' + '<span class=\"resStatus vis-surveyPagination\">0/0</span class=\"d-flex align-items-center\">' + '<button class=\"vis-cusPagination next\">' + '<i class=\"fa fa-chevron-circle-' + (VIS.Application.isRTL ? \"left mr-1\" : \"right ml-1\") + '\" aria-hidden=\"true\"></i>' + '</button>' + '</span>' + '</div>' + '</div> ' + '<div class=\"' + (VIS.Application.isRTL ? \"text-left ml-2\" : \"text-right mr-2\") + ' mt-2\"  style=\"font-size: 12px;font-style: italic;\" >' + VIS.Msg.getMsg(\"VIS_Submitted\") + ': <span class=\"submittedDate\"></span></div>' + '<div class=\"response\"></div>' + '</div > ' + '</div>' + '</div>' + '</div>');\n      $root.append(tab);\n      surveyTab = $root.find('#surveyTab_' + self.windowNo);\n      questionSection = $root.find('#ques_' + self.windowNo);\n      responseSection = $root.find('#resp_' + self.windowNo);\n      // panelDetails(this.curTab.vo.AD_Window_ID, this.curTab.vo.AD_Tab_ID, $root);\n    };\n    this.update = function (Record_ID) {\n      if (self.isCheckListFill) {\n        if (Record_ID < 0) {\n          return false;\n        }\n        self.SaveData(Record_ID);\n      } else {\n        self.panelDetails(this.curTab.vo.AD_Window_ID, this.curTab.vo.AD_Tab_ID, this.curTab.getAD_Table_ID(), Record_ID, $root, 0);\n      }\n    };\n    this.setisCheckListFill = function (value) {\n      this.isCheckListFill = value;\n    };\n    this.panelDetails = function (AD_window_ID, AD_Tab_ID, AD_Table_ID, Record_ID, $root, AD_WF_Activity_ID) {\n      self.isCheckListFill = false;\n      self.record_ID = Record_ID;\n      _AD_Window_ID = AD_window_ID;\n      _AD_Tab_ID = AD_Tab_ID;\n      _AD_Table_ID = AD_Table_ID;\n      _AD_WF_Activity_ID = AD_WF_Activity_ID;\n      questionSection.empty();\n      $root.find('.vis-surveyTab .vis-primarySection').show();\n      $root.find(\"#quesMessage_\" + self.windowNo).addClass('vis-displayNone');\n      responseSection.find('.response').empty();\n      IsMandatoryAll = false;\n      pageSize = 0;\n      userResIdx = 0;\n      Limit = 0;\n      setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/SurveyPanel/GetSurveyAssignments\",\n        //async: false,\n        data: {\n          AD_window_ID: AD_window_ID,\n          AD_Tab_ID: AD_Tab_ID,\n          AD_Table_ID: AD_Table_ID,\n          AD_Record_ID: self.record_ID,\n          AD_WF_Activity_ID: _AD_WF_Activity_ID\n        },\n        success: function (data) {\n          setBusy(false);\n          var res = [];\n          res = JSON.parse(data);\n          if (res != null && res.length > 0) {\n            IsMandatoryAll = res[0].IsMandatory;\n            pageSize = res[0].QuestionsPerPage;\n            isSelfShow = res[0].IsSelfshow;\n            Limit = res[0].Limit;\n            ResponseCount = res[0].ResponseCount;\n            AD_SurveyAssignment_ID = res[0].SurveyAssignment_ID;\n            AD_SurveyResponse_ID = res[0].SurveyResponse_ID;\n            loadSurveyUI(res[0].Survey_ID, res[0].SurveyType, $root);\n          } else {\n            if (_AD_WF_Activity_ID > 0) {\n              $root.find('.vis-surveyTab .vis-primarySection').hide();\n              $root.find(\"#quesMessage_\" + self.windowNo).html(VIS.Msg.getMsg(\"VIS_NoCheckListFound\"));\n              $root.find(\"#quesMessage_\" + self.windowNo).removeClass('vis-displayNone');\n            }\n          }\n        },\n        error: function (e) {\n          setBusy(false);\n        }\n      });\n    };\n    this.getRoot = function () {\n      return $root;\n    };\n    this.SaveData = function (recordID) {\n      setBusy(true);\n      var main = questionSection.find('.VIS_SI_Main' + self.windowNo);\n      var asnwers = main.find('[class^=VIS_Answ_]'); //get all answer start VIS_Quest_\n      var questions = main.find('[class^=VIS_Quest_]'); // get all question start VIS_Quest_\n      var Final_Data = {};\n      Final_Data.Questions = [];\n      var AD_Survey_ID = 0;\n      for (var i = 0; i < questions.length; i++) {\n        var required = true;\n        var lisItem = questionSection.find('[data-id=\"' + questions[i].classList[0] + '\"]');\n        AD_Survey_ID = lisItem[0].dataset.survey;\n        if (questions[i].dataset.qtype == 'CB' || questions[i].dataset.qtype == 'OP' || questions[i].dataset.qtype == 'CL') {\n          if (lisItem.length > 0) {\n            for (var j = 0; j < lisItem.length; j++) {\n              if ($(lisItem[j]).is(\":checked\")) {\n                required = false;\n                Final_Data.Questions.push({\n                  \"Question\": questions[i].textContent,\n                  \"Answer\": $(lisItem[j]).val(),\n                  \"AD_SurveyItem_ID\": lisItem[j].dataset.surveyitem,\n                  \"AD_SurveyValue_ID\": lisItem[j].dataset.surveyvalue\n                });\n              }\n            }\n            if ((IsMandatoryAll || questions[i].dataset.mandatory == 'Y') && required) {\n              VIS.ADialog.error(\"FillMandatory\", true, \"Ques-\" + (i + 1));\n              setBusy(false);\n              return;\n            }\n          }\n        } else if (questions[i].dataset.qtype == 'TX') {\n          if ($(lisItem[0]).val().length > 0) {\n            required = false;\n          }\n          ;\n          Final_Data.Questions.push({\n            \"Question\": questions[i].textContent,\n            \"Answer\": $(lisItem[0]).val(),\n            \"AD_SurveyItem_ID\": lisItem[0].dataset.surveyitem,\n            \"AD_SurveyValue_ID\": lisItem[0].dataset.surveyvalue\n          });\n          if ((IsMandatoryAll || questions[i].dataset.mandatory == 'Y') && required) {\n            VIS.ADialog.error(\"FillMandatory\", true, \"Ques-\" + (i + 1));\n            setBusy(false);\n            return;\n          }\n        }\n      }\n      if (_AD_WF_Activity_ID == 0 && recordID <= 0 && Final_Data.Questions.length > 0) {\n        self.isCheckListFill = true;\n        toastr.success(VIS.Msg.getMsg(\"CheckWillAutoSaveAfterNewRecordSave\"), '', {\n          timeOut: 3000,\n          \"positionClass\": \"toast-top-right\",\n          \"closeButton\": true\n        });\n        setBusy(false);\n        return;\n      } else {\n        self.isCheckListFill = false;\n      }\n      $.ajax({\n        type: \"POST\",\n        url: VIS.Application.contextUrl + \"VIS/SurveyPanel/SaveSurveyResponse\",\n        dataType: \"json\",\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify({\n          \"surveyResponseValue\": Final_Data.Questions,\n          \"AD_Window_ID\": _AD_Window_ID,\n          \"AD_Survey_ID\": AD_Survey_ID,\n          \"AD_Tab_ID\": _AD_Tab_ID,\n          \"Record_ID\": recordID,\n          \"AD_Table_ID\": _AD_Table_ID,\n          \"AD_WF_Activity_ID\": _AD_WF_Activity_ID\n        }),\n        success: function (data) {\n          questionSection.find('input').prop('checked', false);\n          questionSection.find('textarea').val('');\n          toastr.success(VIS.Msg.getMsg(\"CheckListSaved\"), '', {\n            timeOut: 3000,\n            \"positionClass\": \"toast-top-right\",\n            \"closeButton\": true\n          });\n          self.isCheckListFill = false;\n          //loadAccessData(AD_Survey_ID);                        \n          if (_AD_WF_Activity_ID == 0) {\n            self.update(self.record_ID);\n          } else {\n            self.panelDetails(_AD_Window_ID, _AD_Tab_ID, _AD_Table_ID, self.record_ID, $root, _AD_WF_Activity_ID);\n          }\n          setBusy(false);\n        },\n        error: function (e) {\n          setBusy(false);\n        }\n      });\n    };\n    this.disposeComponent = function () {\n      if (iFrame) iFrame.remove();\n      $root.remove();\n      iFrame = null;\n      $root = null;\n    };\n\n    /**\r\n     * Load Survey UI\r\n     * @param {any} AD_Survey_ID\r\n     * @param {any} SurveyType\r\n     * @param {any} $root\r\n     */\n    function loadSurveyUI(AD_Survey_ID, SurveyType, root) {\n      setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/SurveyPanel/GetSurveyItems\",\n        //async: false,\n        data: {\n          AD_Survey_ID: AD_Survey_ID\n        },\n        success: function (data) {\n          setBusy(false);\n          var res = [];\n          res = JSON.parse(data);\n          if (res != null) {\n            loadSurveyDesign(res, SurveyType, root, AD_Survey_ID);\n            findControls();\n          }\n          ;\n        },\n        error: function (e) {\n          setBusy(false);\n        }\n      });\n    }\n    ;\n\n    /**\r\n     * Create survey Question Answer\r\n     * @param {any} SurveyData\r\n     * @param {any} SurveyType\r\n     * @param {any} $root\r\n     */\n    function loadSurveyDesign(SurveyData, SurveyType, root, AD_Survey_ID) {\n      var $dsgn;\n      var stl = \"width: calc(100% - 35px);height: calc(100% - 71px);position: absolute;\";\n      if (self.curTab && self.curTab.getIsTPBottomAligned()) {\n        stl = \"\";\n      }\n      var dsg = '<div class=\"VIS_SI_Main' + self.windowNo + '\" style=\"' + stl + '\">' + '<div class=\"vis-tp-mainContainer\"> ' + '<ol class=\"list-unstyled vis-tp-orderListWrap\"> ';\n      if (SurveyType == \"CL\")\n        //if survey type is Checklist.\n        {\n          if (SurveyData.length > 0) {\n            for (var i = 0; i < SurveyData.length; i++) {\n              dsg += '<li class=\"VIS_SI_' + SurveyData[i].Item.AD_SurveyItem_ID + ' align-items-center d-flex mb-3 pb-3 vis-tp-listItem\">' + '<h6 class=\"mr-2 mb-0\" style=\"min-width:15px;text-algin:right\">' + (i + 1) + '.</h6><input class=\"VIS_Answ_' + self.windowNo + '\" data-id=\"VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + '\" data-surveyitem=' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-surveyvalue=\"0\" data-survey=' + SurveyData[i].Item.AD_Survey_ID + ' type= \"checkbox\" ><p class=\"VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + '\" data-qtype=\"' + SurveyType + '\" data-mandatory=\"' + SurveyData[i].Item.IsMandatory + '\">' + SurveyData[i].Item.Question;\n              if (IsMandatoryAll || SurveyData[i].Item.IsMandatory == 'Y') {\n                dsg += '<sub style=\"color:red;font-size: 100%;bottom: unset;\">*</sub>';\n              }\n              dsg += '</p>' + '</li>';\n            }\n          }\n          dsg += '</ol>';\n\n          //$dsgn = $(dsg);\n        } else\n        // if survey type is Questionnarie.\n        {\n          if (SurveyData.length > 0) {\n            for (var i = 0; i < SurveyData.length; i++) {\n              if (SurveyData[i].Item.AnswerType == \"CB\") {\n                //if answer type check box\n                dsg += '<li class=\"mb-3\"> ' + '<h6 data-qtype=\"' + SurveyData[i].Item.AnswerType + '\" data-mandatory=\"' + SurveyData[i].Item.IsMandatory + '\" class= \"VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + ' mb-3 vis-tp-qus ml\"> ' + (i + 1) + '. ' + SurveyData[i].Item.Question;\n                if (IsMandatoryAll || SurveyData[i].Item.IsMandatory == 'Y') {\n                  dsg += '<sub style=\"color:red;font-size: 100%;bottom: unset;\">*</sub>';\n                }\n                dsg += '</h6 > ' + '<div class=\"vis-tp-listWrap\"> ';\n                for (var j = 0; j < SurveyData[i].Values.length; j++) {\n                  dsg += ' <div class=\"VIS_SI_' + SurveyData[i].Values[j].AD_SurveyValue_ID + ' align-items-center d-flex mb-3 vis-tp-listItem\"> ' + ' <input  data-id=\"VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + '\"';\n                  if (SurveyData[i].Item.AnswerSelection == 'SL') {\n                    dsg += ' class=\"VIS_Answ_' + SurveyData[i].Values[j].AD_SurveyValue_ID + ' group_' + SurveyData[i].Item.AD_SurveyItem_ID + '\" ';\n                  } else {\n                    dsg += ' class=\"VIS_Answ_' + SurveyData[i].Values[j].AD_SurveyValue_ID + '\"';\n                  }\n                  dsg += ' data-surveyitem=' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-surveyvalue=' + SurveyData[i].Values[j].AD_SurveyValue_ID + '  data-survey=' + SurveyData[i].Item.AD_Survey_ID + ' value=\"' + SurveyData[i].Values[j].Answer + '\" type=\"checkbox\">' + ' <p>' + SurveyData[i].Values[j].Answer + '</p>' + ' </div>';\n                }\n                dsg += '</div> ' + '</li > ';\n              } else if (SurveyData[i].Item.AnswerType == \"OP\") {\n                // if answer type optional \n                dsg += '<li class=\"mb-3\"> ' + '<h6 data-qtype=' + SurveyData[i].Item.AnswerType + ' data-mandatory=\"' + SurveyData[i].Item.IsMandatory + '\" class=\"VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + ' mb-3 vis-tp-qus\">' + (i + 1) + '. ' + SurveyData[i].Item.Question;\n                if (IsMandatoryAll || SurveyData[i].Item.IsMandatory == 'Y') {\n                  dsg += '<sub style=\"color:red;font-size: 100%;bottom: unset;\">*</sub>';\n                }\n                dsg += '</h6 > ' + '<div class=\"vis-tp-listWrap\"> ';\n                for (var j = 0; j < SurveyData[i].Values.length; j++) {\n                  dsg += '<div  class=\" VIS_SI_' + SurveyData[i].Values[j].AD_SurveyValue_ID + ' align-items-center d-flex mb-3 vis-tp-listItem\"> ' + '<input type=\"radio\" name=VIS_' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-id=VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-surveyitem=' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-surveyvalue=' + SurveyData[i].Values[j].AD_SurveyValue_ID + ' data-survey=' + SurveyData[i].Item.AD_Survey_ID + ' class = \"VIS_Answ_' + SurveyData[i].Values[j].AD_SurveyValue_ID + '\" value=\"' + SurveyData[i].Values[j].Answer + '\" > <p>' + SurveyData[i].Values[j].Answer + '</p>' + '</div>';\n                }\n                dsg += '</div>' + '</li > ';\n              } else if (SurveyData[i].Item.AnswerType == \"TX\") {\n                // if answer type textbox\n                dsg += '<li class=\"mb-3\"> ' + '<h6 data-qtype=' + SurveyData[i].Item.AnswerType + ' data-mandatory=\"' + SurveyData[i].Item.IsMandatory + '\" class=\"VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + ' mb-3 vis-tp-qus ml\">' + (i + 1) + '. ' + SurveyData[i].Item.Question;\n                if (IsMandatoryAll || SurveyData[i].Item.IsMandatory == 'Y') {\n                  dsg += '<sub style=\"color:red;font-size: 100%;bottom: unset;\">*</sub>';\n                }\n                dsg += '</h6 > ' + '<textarea class=\"VIS_Answ_' + SurveyData[i].Item.AD_SurveyItem_ID + '\" data-id=VIS_Quest_' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-surveyitem=' + SurveyData[i].Item.AD_SurveyItem_ID + ' data-surveyvalue=\"0\" data-survey=' + SurveyData[i].Item.AD_Survey_ID + '  cols=\"30\" rows=\"10\" placeholder=\"Enter your text here\"></textarea> ' + /*'<small class=\"mb-3\">Max 200 letters</small> ' +*/\n                '</li > ';\n              }\n            }\n          }\n          dsg += '</ol > ';\n          // $dsgn = $(dsg);\n        }\n      dsg += '</div >' + '</div > ';\n      $dsgn = $(dsg);\n      if (_AD_WF_Activity_ID == 0) {\n        responseSection.find('.response').append($dsgn.clone(true).removeAttr('style'));\n        responseSection.find('input,textarea').attr('disabled', 'disabled');\n      }\n      if (Limit > 0 && ResponseCount >= Limit) {\n        questionSection.hide();\n        $root.find(\"#quesMessage_\" + self.windowNo).html(VIS.Msg.getMsg(\"VIS_AlreadySubmittedResponse\"));\n        $root.find(\"#quesMessage_\" + self.windowNo).removeClass('vis-displayNone');\n      } else {\n        questionSection.append($dsgn);\n        var main = questionSection.find('.VIS_SI_Main' + self.windowNo);\n        var stl1 = \"bottom: 0px;position: absolute;width: calc(100% - 35px);\";\n        if (self.curTab && self.curTab.getIsTPBottomAligned()) {\n          stl1 = \"bottom: 0px;position: absolute;width: calc(100% - 10px);\";\n        }\n        var btns = '<div class=\"vis-survey\" style=\"' + stl1 + '\">';\n        var totalQues = main.find('[class^=VIS_Quest_]').length;\n\n        //show pagging button according to page size and question length.\n        if (pageSize > 0 && totalQues > pageSize) {\n          btns += '<div class=\"' + (VIS.Application.isRTL ? \" float-right\" : \" float-left\") + '\"><a class=\"prev btn mr-2\"><i class=\"fa fa-chevron-' + (VIS.Application.isRTL ? \"right\" : \"left\") + '\" aria-hidden=\"true\"></i> ' + VIS.Msg.getMsg('VIS_Prev') + '</a></div>';\n        }\n        btns += '<div style=\"padding-bottom: 10px;\" class=\"vis-tp-btnWrap' + (VIS.Application.isRTL ? \" float-left\" : \" float-right\") + '\" > ' + '<a class=\"next btn\">' + VIS.Msg.getMsg('VIS_Next') + ' <i class=\"fa fa-chevron-' + (VIS.Application.isRTL ? \"left\" : \"right\") + '\" aria-hidden=\"true\"></i></a>' + '<a href=\"#\" id=\"VIS_SI_BtnSubmit_' + self.windowNo + '\" class=\"btn\" >' + VIS.Msg.getMsg(\"VIS_Submit\") + '</a> ' + '</div >';\n        btns += '<div>';\n        questionSection.append(btns);\n\n        //paging setup\n        if (pageSize > 0 && totalQues > pageSize) {\n          questionSection.find('.vis-tp-orderListWrap li:gt(' + (pageSize - 1) + ')').addClass('hideQuestion');\n        }\n        if (ResponseCount > 0) {\n          questionSection.hide();\n          $root.find(\"#quesMessage_\" + self.windowNo).html('<span class=\"d-block px-2 text-center w-100\">' + VIS.Msg.getMsg('VIS_SubmitAgain') + ' ' + $clickHere + '</span>');\n          $root.find(\"#quesMessage_\" + self.windowNo).removeClass('vis-displayNone');\n          $root.find(\"#quesMessage_\" + self.windowNo + \" a\").click(function () {\n            questionSection.show();\n            $root.find(\"#quesMessage_\" + self.windowNo).addClass('vis-displayNone');\n            questionSection.find('.vis-tp-orderListWrap li').removeClass('hideQuestion');\n            questionSection.find('.vis-tp-orderListWrap li:gt(' + (pageSize - 1) + ')').addClass('hideQuestion');\n            showHideSubmit();\n          });\n        }\n      }\n\n      //if (!isSelfShow) {\n      // responseSection.hide();\n      //} \n      if (_AD_WF_Activity_ID == 0) {\n        loadAccessData(AD_Survey_ID);\n      } else {\n        if (_AD_WF_Activity_ID == 0) {\n          questionSection.css('height', h);\n        } else {\n          questionSection.css('height', '74vh');\n        }\n        surveyTab.find('.respTab').hide();\n        surveyTab.find('.quesTab').hide();\n        return;\n      }\n    }\n    ;\n    function loadAccessData(AD_Survey_ID) {\n      userResponse = {};\n      userResIdx = 0;\n      setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/SurveyPanel/CheckResponseAccess\",\n        //async: false,\n        data: {\n          AD_Survey_ID: AD_Survey_ID,\n          AD_SurveyAssignment_ID: AD_SurveyAssignment_ID,\n          AD_User_ID: VIS.context.getAD_User_ID(),\n          AD_Role_ID: VIS.context.getAD_Role_ID(),\n          Record_ID: self.record_ID,\n          AD_window_ID: _AD_Window_ID,\n          AD_Table_ID: _AD_Table_ID,\n          IsSelfShow: isSelfShow\n        },\n        success: function (data) {\n          setBusy(false);\n          var res = [];\n          res = JSON.parse(data);\n          if (res != null && res.length > 0) {\n            var count = 0;\n            //responseSection.show();\n            surveyTab.find('.respTab').show();\n            surveyTab.find('.quesTab').show();\n            if (isSelfShow) {\n              questionSection.css('height', ht);\n            } else {\n              questionSection.css('height', h);\n            }\n            surveyTab.find('.responseCount').text(res.length);\n            for (var i = 0; i < res.length; i++) {\n              if (!userResponse['U' + res[i].User_ID]) {\n                userResponse['U' + res[i].User_ID] = [];\n              }\n              userResponse['U' + res[i].User_ID].push({\n                id: res[i].AD_SurveyResponse_ID,\n                Created: new Date(res[i].Created).toLocaleString()\n              });\n              if (responseSection.find('select option[value=\"' + res[i].User_ID + '\"]').length > 0) {} else {\n                if (res[i].Name == 'Self' && count == 0) {\n                  count++;\n                  responseSection.find('select').append('<option selected value=\"' + res[i].User_ID + '\">' + res[i].Name + '</option>');\n                } else {\n                  responseSection.find('select').append('<option value=\"' + res[i].User_ID + '\" >' + res[i].Name + '</option>');\n                }\n              }\n            }\n          } else {\n            if (_AD_WF_Activity_ID == 0) {\n              questionSection.css('height', h);\n            } else {\n              questionSection.css('height', '74vh');\n            }\n            surveyTab.find('.respTab').hide();\n            surveyTab.find('.quesTab').hide();\n            return;\n          }\n          var uID = VIS.context.getAD_User_ID();\n          if (!userResponse['U' + uID]) {\n            responseSection.find('select option:selected').change();\n            return;\n          }\n          AD_SurveyResponse_ID = userResponse['U' + uID][0].id;\n          if (userResponse['U' + uID].length > 1) {\n            responseSection.find('.next').removeAttr('disabled');\n            responseSection.find('.prev').attr('disabled', 'disabled');\n          } else {\n            responseSection.find('.prev').attr('disabled', 'disabled');\n            responseSection.find('.next').attr('disabled', 'disabled');\n          }\n          responseSection.find('.resStatus').text(1 + '/' + userResponse['U' + uID].length);\n          responseSection.find('.submittedDate').text(userResponse['U' + uID][0].Created);\n          var notLimitExpaire = true;\n          if (Limit > 0 && userResponse['U' + uID].length >= Limit) {\n            questionSection.hide();\n            $root.find(\"#quesMessage_\" + self.windowNo).html(VIS.Msg.getMsg(\"VIS_AlreadySubmittedResponse\"));\n            $root.find(\"#quesMessage_\" + self.windowNo).removeClass('vis-displayNone');\n            notLimitExpaire = false;\n          }\n          if (notLimitExpaire && userResponse['U' + uID].length > 0) {\n            questionSection.hide();\n            $root.find(\"#quesMessage_\" + self.windowNo).html('<span class=\"d-block px-2 text-center w-100\">' + VIS.Msg.getMsg('VIS_SubmitAgain') + ' ' + $clickHere + '</span>');\n            $root.find(\"#quesMessage_\" + self.windowNo).removeClass('vis-displayNone');\n            $root.find(\"#quesMessage_\" + self.windowNo + \" a\").click(function () {\n              questionSection.show();\n              $root.find(\"#quesMessage_\" + self.windowNo).addClass('vis-displayNone');\n              questionSection.find('.vis-tp-orderListWrap li').removeClass('hideQuestion');\n              questionSection.find('.vis-tp-orderListWrap li:gt(' + (pageSize - 1) + ')').addClass('hideQuestion');\n              showHideSubmit();\n            });\n          }\n          if (_AD_WF_Activity_ID == 0) {\n            loadSurveyResponse(uID);\n          }\n        },\n        error: function (e) {\n          setBusy(false);\n        }\n      });\n    }\n    function loadSurveyResponse(userID) {\n      responseSection.find('input').prop('checked', false);\n      responseSection.find('textarea').val('');\n      setBusy(true);\n      $.ajax({\n        url: VIS.Application.contextUrl + \"VIS/SurveyPanel/GetResponseList\",\n        //async: false,\n        data: {\n          AD_window_ID: _AD_Window_ID,\n          AD_Table_ID: _AD_Table_ID,\n          Record_ID: self.record_ID,\n          AD_User_ID: userID,\n          AD_SurveyResponse_ID: AD_SurveyResponse_ID\n        },\n        success: function (data) {\n          var res = [];\n          res = JSON.parse(data);\n          if (res != null && res.length > 0) {\n            //responseSection.show();\n            for (var i = 0; i < res.length; i++) {\n              if (res[i].AnswerType == 'TX') {\n                responseSection.find('[data-surveyitem=\"' + res[i].AD_SurveyItem_ID + '\"][data-surveyvalue=\"' + res[i].AD_SurveyValue_ID + '\"]').val(res[i].Answer);\n              } else {\n                responseSection.find('[data-surveyitem=\"' + res[i].AD_SurveyItem_ID + '\"][data-surveyvalue=\"' + res[i].AD_SurveyValue_ID + '\"]').prop(\"checked\", true);\n              }\n            }\n          }\n          ;\n          setBusy(false);\n        },\n        error: function (e) {\n          setBusy(false);\n        }\n      });\n    }\n\n    //control setup\n    function findControls() {\n      $mainDiv = questionSection.find('.VIS_SI_Main' + self.windowNo);\n      $btnSubmit = questionSection.find('#VIS_SI_BtnSubmit_' + self.windowNo);\n      eventHandling();\n      showHideSubmit();\n    }\n    ;\n\n    //Submit button show hide on the behalf of pagging\n    function showHideSubmit() {\n      if (questionSection.find('.vis-tp-orderListWrap li:last').is(':hidden')) {\n        $btnSubmit.hide();\n        questionSection.find('.next').show();\n      } else {\n        $btnSubmit.show();\n        questionSection.find('.next').hide();\n      }\n\n      //if first item  is hidden\n      if (questionSection.find('.vis-tp-orderListWrap li:first').is(':hidden')) {\n        questionSection.find('.prev').show();\n      } else {\n        questionSection.find('.prev').hide();\n      }\n      questionSection.find('.vis-tp-orderListWrap').scrollTop(0);\n    }\n    function eventHandling() {\n      // Save response\n\n      $btnSubmit.off().on(\"click\", function (e) {\n        self.SaveData(self.record_ID);\n      });\n      questionSection.find('[class*=group_]').off().click(function () {\n        if ($(this).next().attr('data-qtype') && $(this).next().attr('data-qtype') == 'CL') {\n          return;\n        }\n        singleChkBoxSelection(this, 'group_' + $(this).data('surveyitem'));\n      });\n\n      //Next Page\n      questionSection.find('.next').off().click(function () {\n        var last = questionSection.find('.vis-tp-orderListWrap').children('li:visible:last');\n        last.nextAll(':lt(' + pageSize + ')').removeClass('hideQuestion');\n        last.next().prevAll().addClass('hideQuestion');\n        showHideSubmit();\n      });\n      // Previous Page\n      questionSection.find('.prev').off().click(function () {\n        var first = questionSection.find('.vis-tp-orderListWrap').children('li:visible:first');\n        first.prevAll(':lt(' + pageSize + ')').removeClass('hideQuestion');\n        first.prev().nextAll().addClass('hideQuestion');\n        showHideSubmit();\n      });\n      responseSection.find('select').off().change(function () {\n        userResIdx = 0;\n        var userID = responseSection.find('select option:selected').val();\n        AD_SurveyResponse_ID = userResponse['U' + userID][0].id;\n        responseSection.find('.submittedDate').text(userResponse['U' + userID][0].Created);\n        responseSection.find('.resStatus').text(userResIdx + 1 + '/' + userResponse['U' + userID].length);\n        if (userResponse['U' + userID].length == 1) {\n          responseSection.find('.next').attr('disabled', 'disabled');\n          responseSection.find('.prev').attr('disabled', 'disabled');\n        } else {\n          responseSection.find('.next').removeAttr('disabled');\n          responseSection.find('.prev').attr('disabled', 'disabled');\n        }\n        loadSurveyResponse(userID);\n      });\n      responseSection.find('.next').off().click(function () {\n        userResIdx++;\n        var userID = responseSection.find('select option:selected').val();\n        AD_SurveyResponse_ID = userResponse['U' + userID][userResIdx].id;\n        responseSection.find('.submittedDate').text(userResponse['U' + userID][userResIdx].Created);\n        if (userResIdx >= userResponse['U' + userID].length - 1) {\n          $(this).attr('disabled', 'disabled');\n        }\n        responseSection.find('.prev').removeAttr('disabled');\n        responseSection.find('.resStatus').text(userResIdx + 1 + '/' + userResponse['U' + userID].length);\n        loadSurveyResponse(userID);\n      });\n      responseSection.find('.prev').off().click(function () {\n        userResIdx--;\n        var userID = responseSection.find('select option:selected').val();\n        AD_SurveyResponse_ID = userResponse['U' + userID][userResIdx].id;\n        responseSection.find('.submittedDate').text(userResponse['U' + userID][userResIdx].Created);\n        if (userResIdx == 0) {\n          $(this).attr('disabled', 'disabled');\n        }\n        responseSection.find('.next').removeAttr('disabled');\n        responseSection.find('.resStatus').text(userResIdx + 1 + '/' + userResponse['U' + userID].length);\n        loadSurveyResponse(userID);\n      });\n    }\n    ;\n\n    //Single selection of checkbox\n    function singleChkBoxSelection(which, theClass) {\n      var checkbox = questionSection[0].getElementsByClassName(theClass);\n      for (var i = 0; i < checkbox.length; i++) {\n        if (checkbox[i] == which) {} else {\n          checkbox[i].checked = false;\n        }\n      }\n    }\n  }\n  ;\n\n  /**\r\n  *\tInvoked when user click on panel icon\r\n  */\n  surveyPanel.prototype.startPanel = function (windowNo, curTab, extraInfo) {\n    this.windowNo = windowNo;\n    this.curTab = curTab;\n    this.extraInfo = extraInfo;\n    this.init();\n  };\n\n  /**\r\n       *\tThis function will execute when user navigate  or refresh a record\r\n       */\n  surveyPanel.prototype.refreshPanelData = function (recordID, selectedRow) {\n    this.record_ID = recordID;\n    this.selectedRow = selectedRow;\n    this.update(recordID);\n  };\n\n  /**\r\n   *\tFired When Size of panel Changed\r\n   */\n  surveyPanel.prototype.sizeChanged = function (width) {\n    this.panelWidth = width;\n  };\n\n  /**\r\n   *\tDispose Component\r\n   */\n  surveyPanel.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  /*\r\n      * Fully qualified class name\r\n      */\n  VIS.SurveyPanel = surveyPanel;\n})();\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/tabpanels/surveyPanel.js?")},"./Areas/VIS/Scripts/tabpanels/verinfo.js":()=>{eval("VIS = window.VIS || {};\n(function () {\n  function verinfo() {\n    this.record_ID = 0;\n    this.windowNo = 0;\n    this.curTab = null;\n    this.selectedRow = null;\n    this.panelWidth;\n    var $root = $('<div class=\"vis-mas-verinf-wrap\"></div>');\n    var cntnrDiv = null;\n    this.init = function () {\n      var html = '<div class=\"vis-mas-verinf-hdrCtr\">' + '<div class=\"vis-mas-verinf-hdrsLft\">' + VIS.Msg.getMsg(\"FieldName\") + '</div>' + '<div class=\"vis-mas-verinf-hdrsRgt\">' + VIS.Msg.getMsg(\"OldValue\") + '</div>' + '</div>' + '<div class=\"vis-mas-verinf-CngCtr\">' + '</div>';\n      $root.append(html);\n      cntnrDiv = $root.find('.vis-mas-verinf-CngCtr');\n    };\n\n    /*\r\n    * Retrun container of panel's Design\r\n    */\n    this.getRoot = function () {\n      return $root;\n    };\n\n    /*\r\n    * Update UI elements with latest record's values.\r\n    */\n    this.update = function (record_ID) {\n      // Get Value from Context\n      try {\n        if (this.selectedRow.recordversion > 1) {\n          this.selectedRow.RID = this.record_ID;\n          this.selectedRow.TName = this.curTab.vo.TableName;\n          this.selectedRow.TabID = this.curTab.vo.AD_Tab_ID;\n          this.selectedRow.TblID = this.curTab.vo.AD_Table_ID;\n          var self = this;\n          $.ajax({\n            type: 'POST',\n            async: true,\n            url: VIS.Application.contextUrl + \"JsonData/GetVerInfo\",\n            contentType: \"application/json; charset=utf-8\",\n            data: \"{ 'RowData': '\" + JSON.stringify(this.selectedRow) + \"' }\",\n            success: function (data) {\n              var cT = self.curTab;\n              cntnrDiv.empty();\n              if (data) {\n                var retRes = JSON.parse(data);\n                if (retRes.ColumnNames && retRes.ColumnNames.length > 0) {\n                  var htmlUI = new Array();\n                  for (var i = 0; i < retRes.ColumnNames.length; i++) {\n                    var displayType = 10;\n                    try {\n                      displayType = $.grep(self.curTab.gridTable.gTable.m_fields, function (e) {\n                        return e._vo.ColumnName == retRes.DBColNames[i];\n                      })[0]._vo.displayType;\n                    } catch (e) {\n                      displayType = 10;\n                    }\n                    var colVal = retRes.OldVals[i];\n                    if (displayType == 15) colVal = Globalize.format(new Date(colVal), 'd');else if (displayType == 16) colVal = Globalize.format(new Date(colVal + \"Z\"), 'f');else if (displayType == 24) colVal = Globalize.format(new Date(colVal + \"Z\"), 't');\n                    if (retRes.OldVals[i] == \"\") colVal = '&nbsp';\n                    htmlUI.push('<div class=\"vis-mas-verinf-cntCtr\">' + '<div class=\"vis-mas-verinf-cnt\">' + retRes.ColumnNames[i] + '</div>' + '<div class=\"vis-mas-verinf-cnt\">' + colVal + '</div>' + '</div>');\n                  }\n                  cntnrDiv.append(htmlUI.join(' '));\n                }\n              }\n            },\n            error: function (e) {\n              var y = \"\";\n            }\n          });\n        } else if (this.selectedRow.recordversion == 1) {\n          cntnrDiv.empty();\n          cntnrDiv.append('<div class=\"vis-mas-verinf-newrecord\">' + VIS.Msg.getMsg(\"FirstVersion\") + '</div>');\n        } else {\n          cntnrDiv.empty();\n          cntnrDiv.append('<div class=\"vis-mas-verinf-newrecord\">' + VIS.Msg.getMsg(\"NoVersionsFound\") + '</div>');\n        }\n      } catch (ex) {}\n    };\n    this.disposeComponent = function () {\n      this.record_ID = 0;\n      this.windowNo = 0;\n      this.curTab = null;\n      this.rowSource = null;\n      this.panelWidth = null;\n      $root.remove();\n      $root = null;\n    };\n  }\n  ;\n\n  /**\r\n   *\tInvoked when user click on panel icon\r\n   */\n  verinfo.prototype.startPanel = function (windowNo, curTab) {\n    this.windowNo = windowNo;\n    this.curTab = curTab;\n    this.init();\n  };\n\n  /**\r\n       *\tThis function will execute when user navigate  or refresh a record\r\n       */\n  verinfo.prototype.refreshPanelData = function (recordID, selectedRow) {\n    this.record_ID = recordID;\n    this.selectedRow = selectedRow;\n    this.update(recordID);\n  };\n\n  /**\r\n   *\tFired When Size of panel Changed\r\n   */\n  verinfo.prototype.sizeChanged = function (height, width) {\n    this.panelWidth = width;\n  };\n\n  /**\r\n   *\tDispose Component\r\n   */\n  verinfo.prototype.dispose = function () {\n    this.disposeComponent();\n  };\n\n  /*\r\n  * Fully qualified class name\r\n  */\n  VIS.verinfo = verinfo;\n})();\n\n//# sourceURL=webpack://VIENNA_Advantage_Framework/./Areas/VIS/Scripts/tabpanels/verinfo.js?")}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;var t=__webpack_module_cache__[n]={exports:{}};return __webpack_modules__[n](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./Areas/VIS/Scripts/src/VISjs.js")})();